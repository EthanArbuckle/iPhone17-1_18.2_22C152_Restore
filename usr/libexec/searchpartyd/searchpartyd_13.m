uint64_t sub_100926558()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;
  uint64_t v7;

  v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    v3 = *(void *)(v2 + 272);
    v4 = sub_100927EC0;
  }
  else
  {
    v5 = *(void *)(v2 + 272);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 16);
    v4 = sub_100926680;
    v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100926680()
{
  if ((unint64_t)(FMNServerInteractionController.FMNResponseFields.statusCode.getter() - 300) >= 0xFFFFFFFFFFFFFF9CLL)
  {
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 160))
    {
      sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
      sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
      v24 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
      v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 432) = v15;
      void *v15 = v0;
      v15[1] = sub_100926A48;
      return v24();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_101636E00 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 328);
    uint64_t v2 = *(void *)(v0 + 336);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = *(void *)(v0 + 320);
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170E628);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
    v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 320);
    uint64_t v10 = *(void *)(v0 + 328);
    uint64_t v11 = *(void *)(v0 + 312);
    if (v8)
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 134217984;
      uint64_t v13 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
      v23 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v23(v10, v11);
      *(void *)(v0 + 256) = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Failed to publish payloads. Got %ld.", v12, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      v23 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v23(*(void *)(v0 + 328), *(void *)(v0 + 312));
    }
    v16 = v6;
    unint64_t v17 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 392);
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 312);

    sub_10092C6A4();
    swift_allocError();
    unsigned char *v21 = 0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001CFB8(v18, v17);
    v23(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  return result;
}

uint64_t sub_100926A48(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 440) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100926B60, v2, 0);
}

uint64_t sub_100926B60()
{
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[55])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[56] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100926E34;
    uint64_t v3 = v0[33];
    return sub_101104BF0(v3);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v5 = 0xD000000000000017;
    v5[1] = 0x80000001013FB7A0;
    swift_willThrow();
    if (qword_101636E08 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170E640);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138543362;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      v0[31] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v10 = v11;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Failed to delete observations: %{public}@.", v9, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t v12 = v0[34];
    return _swift_task_switch(sub_100926F54, v12, 0);
  }
}

uint64_t sub_100926E34()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = sub_100927FA8;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = sub_100926F54;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100926F54()
{
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 176);
    sub_10001CD44((void *)(v0 + 176), *(void *)(v0 + 200));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100927040;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100927040(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 472) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100927158, v2, 0);
}

uint64_t sub_100927158()
{
  uint64_t v1 = (uint64_t)(v0 + 22);
  if (v0[59])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[60] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1009278A8;
    uint64_t v3 = v0[33];
    return sub_101104D84(v3);
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  sub_10001CEC8();
  swift_allocError();
  *uint64_t v5 = 0xD000000000000017;
  v5[1] = 0x80000001013FB7A0;
  swift_willThrow();
  p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100010324(v7, (uint64_t)qword_10170E640);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138543362;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[30] = v12;
    p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v11 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to mark observations published: %{public}@.", v10, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v13 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
  v14 = sub_100928838(v13);
  swift_bridgeObjectRelease();
  if (!v14[2] || (sub_100723FF4(0xD000000000000014, 0x8000000101402910), (v15 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  uint64_t v17 = v0[36];
  uint64_t v16 = v0[37];
  uint64_t v18 = v0[35];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v18, 1, v17) == 1)
  {
    sub_10001DAB4(v0[35], &qword_101638CF0);
LABEL_15:
    if (*((void *)p_ivar_base_size + 449) != -1) {
      swift_once();
    }
    sub_100010324(v7, (uint64_t)qword_10170E640);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to parse X-Apple-Sign1 header", v21, 2u);
      swift_slowDealloc();
    }
    unint64_t v22 = v0[50];
    uint64_t v23 = v0[49];
    uint64_t v24 = v0[42];
    uint64_t v25 = v0[39];
    uint64_t v26 = v0[40];
    swift_bridgeObjectRelease();
    swift_release();

    sub_10001CFB8(v23, v22);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    id v27 = 0;
    goto LABEL_20;
  }
  uint64_t v29 = v0[48];
  (*(void (**)(void, void, void))(v0[37] + 32))(v0[38], v0[35], v0[36]);
  if (!sub_100928838(v29)[2] || (sub_100723FF4(0x2D656C7070612D78, 0xED0000316E676973), (v30 & 1) == 0))
  {
    uint64_t v34 = v0[37];
    uint64_t v35 = v0[38];
    uint64_t v36 = v0[36];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v36);
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = Data.init(base64Encoded:options:)();
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (v33 >> 60 == 15)
  {
    (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
    goto LABEL_15;
  }
  CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
  SecCertificateRef v38 = SecCertificateCreateWithData(0, isa);

  if (!v38)
  {
    (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
LABEL_33:
    sub_100037A24(v31, v33);
    goto LABEL_15;
  }
  uint64_t v39 = SecCertificateCopySubjectPublicKeyInfoSHA256Digest();
  if (!v39)
  {
    (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);

    goto LABEL_33;
  }
  v40 = (void *)v39;
  unint64_t v51 = v0[50];
  uint64_t v52 = v0[40];
  uint64_t v53 = v0[39];
  uint64_t v54 = v0[42];
  uint64_t v47 = v0[38];
  uint64_t v48 = v0[37];
  uint64_t v49 = v0[49];
  uint64_t v50 = v0[36];
  uint64_t v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v43 = v42;

  id v44 = objc_allocWithZone((Class)SPPublishResult);
  Class v45 = UUID._bridgeToObjectiveC()().super.isa;
  Class v46 = Data._bridgeToObjectiveC()().super.isa;
  id v27 = [v44 initWithRequestUUID:v45 aaaPubKeyHash:v46];

  sub_10001CFB8(v41, v43);
  sub_100037A24(v31, v33);
  swift_release();

  swift_bridgeObjectRelease();
  sub_10001CFB8(v49, v51);
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v50);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v54, v53);
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v28 = (uint64_t (*)(id))v0[1];
  return v28(v27);
}

uint64_t sub_1009278A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 488) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    uint64_t v4 = sub_1009281B4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 272);
    swift_release();
    uint64_t v4 = sub_1009279D0;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1009279D0()
{
  uint64_t v1 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
  uint64_t v2 = sub_100928838(v1);
  swift_bridgeObjectRelease();
  if (v2[2] && (sub_100723FF4(0xD000000000000014, 0x8000000101402910), (v3 & 1) != 0))
  {
    uint64_t v4 = v0[36];
    uint64_t v5 = v0[37];
    uint64_t v6 = v0[35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
    {
      sub_10001DAB4(v0[35], &qword_101638CF0);
    }
    else
    {
      uint64_t v19 = v0[48];
      (*(void (**)(void, void, void))(v0[37] + 32))(v0[38], v0[35], v0[36]);
      if (sub_100928838(v19)[2] && (sub_100723FF4(0x2D656C7070612D78, 0xED0000316E676973), (v20 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v21 = Data.init(base64Encoded:options:)();
        unint64_t v23 = v22;
        swift_bridgeObjectRelease();
        if (v23 >> 60 == 15)
        {
          (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
        }
        else
        {
          CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
          SecCertificateRef v28 = SecCertificateCreateWithData(0, isa);

          if (v28)
          {
            uint64_t v29 = SecCertificateCopySubjectPublicKeyInfoSHA256Digest();
            if (v29)
            {
              char v30 = (void *)v29;
              unint64_t v41 = v0[50];
              uint64_t v42 = v0[40];
              uint64_t v43 = v0[39];
              uint64_t v44 = v0[42];
              uint64_t v37 = v0[38];
              uint64_t v38 = v0[37];
              uint64_t v39 = v0[49];
              uint64_t v40 = v0[36];
              uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v33 = v32;

              id v34 = objc_allocWithZone((Class)SPPublishResult);
              Class v35 = UUID._bridgeToObjectiveC()().super.isa;
              Class v36 = Data._bridgeToObjectiveC()().super.isa;
              id v16 = [v34 initWithRequestUUID:v35 aaaPubKeyHash:v36];

              sub_10001CFB8(v31, v33);
              sub_100037A24(v21, v23);
              swift_release();

              swift_bridgeObjectRelease();
              sub_10001CFB8(v39, v41);
              (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v40);
              (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v44, v43);
              goto LABEL_11;
            }
            (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
          }
          else
          {
            (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
          }
          sub_100037A24(v21, v23);
        }
      }
      else
      {
        uint64_t v25 = v0[37];
        uint64_t v24 = v0[38];
        uint64_t v26 = v0[36];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100010324(v7, (uint64_t)qword_10170E640);
  os_log_type_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to parse X-Apple-Sign1 header", v10, 2u);
    swift_slowDealloc();
  }
  unint64_t v11 = v0[50];
  uint64_t v12 = v0[49];
  uint64_t v13 = v0[42];
  uint64_t v14 = v0[39];
  uint64_t v15 = v0[40];
  swift_bridgeObjectRelease();
  swift_release();

  sub_10001CFB8(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  id v16 = 0;
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(id))v0[1];
  return v17(v16);
}

uint64_t sub_100927EC0()
{
  unint64_t v1 = v0[50];
  uint64_t v2 = v0[49];
  swift_bridgeObjectRelease();
  sub_10001CFB8(v2, v1);
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100927FA8()
{
  swift_release();
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E640);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 248) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to delete observations: %{public}@.", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(void *)(v0 + 272);
  return _swift_task_switch(sub_100926F54, v7, 0);
}

uint64_t sub_1009281B4()
{
  swift_release();
  p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E640);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[30] = v7;
    p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to mark observations published: %{public}@.", v5, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
  uint64_t v9 = sub_100928838(v8);
  swift_bridgeObjectRelease();
  if (v9[2] && (sub_100723FF4(0xD000000000000014, 0x8000000101402910), (v10 & 1) != 0))
  {
    uint64_t v12 = v0[36];
    uint64_t v11 = v0[37];
    uint64_t v13 = v0[35];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1)
    {
      sub_10001DAB4(v0[35], &qword_101638CF0);
    }
    else
    {
      uint64_t v25 = v0[48];
      (*(void (**)(void, void, void))(v0[37] + 32))(v0[38], v0[35], v0[36]);
      if (sub_100928838(v25)[2] && (sub_100723FF4(0x2D656C7070612D78, 0xED0000316E676973), (v26 & 1) != 0))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v27 = Data.init(base64Encoded:options:)();
        unint64_t v29 = v28;
        swift_bridgeObjectRelease();
        if (v29 >> 60 == 15)
        {
          (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
        }
        else
        {
          CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
          SecCertificateRef v34 = SecCertificateCreateWithData(0, isa);

          if (v34)
          {
            uint64_t v35 = SecCertificateCopySubjectPublicKeyInfoSHA256Digest();
            if (v35)
            {
              Class v36 = (void *)v35;
              unint64_t v47 = v0[50];
              uint64_t v48 = v0[40];
              uint64_t v49 = v0[39];
              uint64_t v50 = v0[42];
              uint64_t v43 = v0[38];
              uint64_t v44 = v0[37];
              uint64_t v45 = v0[49];
              uint64_t v46 = v0[36];
              uint64_t v37 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              unint64_t v39 = v38;

              id v40 = objc_allocWithZone((Class)SPPublishResult);
              Class v41 = UUID._bridgeToObjectiveC()().super.isa;
              Class v42 = Data._bridgeToObjectiveC()().super.isa;
              id v22 = [v40 initWithRequestUUID:v41 aaaPubKeyHash:v42];

              sub_10001CFB8(v37, v39);
              sub_100037A24(v27, v29);
              swift_release();

              swift_bridgeObjectRelease();
              sub_10001CFB8(v45, v47);
              (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v43, v46);
              (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v50, v49);
              goto LABEL_16;
            }
            (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
          }
          else
          {
            (*(void (**)(void, void))(v0[37] + 8))(v0[38], v0[36]);
          }
          sub_100037A24(v27, v29);
        }
      }
      else
      {
        uint64_t v30 = v0[37];
        uint64_t v31 = v0[38];
        uint64_t v32 = v0[36];
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v32);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (*((void *)p_ivar_base_size + 449) != -1) {
    swift_once();
  }
  sub_100010324(v2, (uint64_t)qword_10170E640);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Failed to parse X-Apple-Sign1 header", v16, 2u);
    swift_slowDealloc();
  }
  unint64_t v17 = v0[50];
  uint64_t v18 = v0[49];
  uint64_t v19 = v0[42];
  uint64_t v20 = v0[39];
  uint64_t v21 = v0[40];
  swift_bridgeObjectRelease();
  swift_release();

  sub_10001CFB8(v18, v17);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
  id v22 = 0;
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = (uint64_t (*)(id))v0[1];
  return v23(v22);
}

void *sub_100928838(uint64_t a1)
{
  uint64_t v29 = a1 + 64;
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v2 = -1;
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  unint64_t v3 = v2 & *(void *)(a1 + 64);
  int64_t v30 = (unint64_t)(v1 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v4 = 0;
  while (1)
  {
    if (v3)
    {
      unint64_t v6 = __clz(__rbit64(v3));
      v3 &= v3 - 1;
      unint64_t v7 = v6 | (v4 << 6);
    }
    else
    {
      int64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_40;
      }
      if (v8 >= v30)
      {
LABEL_37:
        swift_release();
        return _swiftEmptyDictionarySingleton;
      }
      unint64_t v9 = *(void *)(v29 + 8 * v8);
      ++v4;
      if (!v9)
      {
        int64_t v4 = v8 + 1;
        if (v8 + 1 >= v30) {
          goto LABEL_37;
        }
        unint64_t v9 = *(void *)(v29 + 8 * v4);
        if (!v9)
        {
          int64_t v4 = v8 + 2;
          if (v8 + 2 >= v30) {
            goto LABEL_37;
          }
          unint64_t v9 = *(void *)(v29 + 8 * v4);
          if (!v9)
          {
            int64_t v4 = v8 + 3;
            if (v8 + 3 >= v30) {
              goto LABEL_37;
            }
            unint64_t v9 = *(void *)(v29 + 8 * v4);
            if (!v9)
            {
              int64_t v4 = v8 + 4;
              if (v8 + 4 >= v30) {
                goto LABEL_37;
              }
              unint64_t v9 = *(void *)(v29 + 8 * v4);
              if (!v9)
              {
                int64_t v10 = v8 + 5;
                if (v10 >= v30) {
                  goto LABEL_37;
                }
                unint64_t v9 = *(void *)(v29 + 8 * v10);
                if (!v9)
                {
                  while (1)
                  {
                    int64_t v4 = v10 + 1;
                    if (__OFADD__(v10, 1)) {
                      goto LABEL_41;
                    }
                    if (v4 >= v30) {
                      goto LABEL_37;
                    }
                    unint64_t v9 = *(void *)(v29 + 8 * v4);
                    ++v10;
                    if (v9) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v4 = v10;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v3 = (v9 - 1) & v9;
      unint64_t v7 = __clz(__rbit64(v9)) + (v4 << 6);
    }
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    Swift::String v14 = String.lowercased()();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_100723FF4(v14._countAndFlagsBits, (uint64_t)v14._object);
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (_swiftEmptyDictionarySingleton[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100E7EC1C();
        if (v21) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100E6609C(v20, isUniquelyReferenced_nonNull_native);
      uint64_t v22 = sub_100723FF4(v14._countAndFlagsBits, (uint64_t)v14._object);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_42;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_4:
        uint64_t v5 = (void *)(_swiftEmptyDictionarySingleton[7] + 16 * v17);
        swift_bridgeObjectRelease();
        *uint64_t v5 = v12;
        v5[1] = v13;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
    *(Swift::String *)(_swiftEmptyDictionarySingleton[6] + 16 * v17) = v14;
    uint64_t v24 = (void *)(_swiftEmptyDictionarySingleton[7] + 16 * v17);
    *uint64_t v24 = v12;
    v24[1] = v13;
    uint64_t v25 = _swiftEmptyDictionarySingleton[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_39;
    }
    _swiftEmptyDictionarySingleton[2] = v27;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  uint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100928B48()
{
  v1[29] = v0;
  sub_10000588C(&qword_10163CF50);
  v1[30] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for ObservedAdvertisement(0);
  v1[31] = v2;
  v1[32] = *(void *)(v2 - 8);
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  return _swift_task_switch(sub_100928C48, v0, 0);
}

uint64_t sub_100928C48()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 280) = qword_10170E390;
  return _swift_task_switch(sub_100928CE4, 0, 0);
}

uint64_t sub_100928CE4()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100928DAC;
  uint64_t v2 = *(void *)(v0 + 280);
  return unsafeBlocking<A>(_:)(v0 + 200, sub_10001D704, v2, &type metadata for Configuration);
}

uint64_t sub_100928DAC()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100928EC4, 0, 0);
}

uint64_t sub_100928EC4()
{
  uint64_t v1 = v0[29];
  v0[37] = v0[25];
  return _swift_task_switch(sub_100928EE8, v1, 0);
}

uint64_t sub_100928EE8()
{
  *(void *)(v0 + 304) = sub_1010AB69C(*(void *)(v0 + 296));
  swift_bridgeObjectRelease();
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    unint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10092903C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10092903C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 320) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100929154, v2, 0);
}

uint64_t sub_100929154()
{
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[40])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[41] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100929298;
    uint64_t v3 = v0[38];
    return sub_1011058D8(v3);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v5 = 0xD000000000000017;
    v5[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100929298(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[42] = a1;
  v3[43] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[29];
    uint64_t v5 = sub_100929CA4;
  }
  else
  {
    uint64_t v6 = v3[29];
    swift_release();
    uint64_t v5 = sub_1009293C0;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

void sub_1009293C0()
{
  uint64_t v1 = *(void *)(v0 + 304);
  uint64_t v2 = *(void *)(*(void *)(v0 + 336) + 16);
  *(void *)(v0 + 352) = v2;
  BOOL v3 = __OFSUB__(v1, v2);
  uint64_t v4 = v1 - v2;
  if (v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  *(void *)(v0 + 360) = v4 & ~(v4 >> 63);
  sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 160))
  {
LABEL_7:
    __break(1u);
    return;
  }
  sub_10001CEB0((long long *)(v0 + 136), v0 + 16);
  sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
  uint64_t v6 = (void (*)(void))((char *)&dword_101639138 + dword_101639138);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 368) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1009294D0;
  v6();
}

uint64_t sub_1009294D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009295E8, v2, 0);
}

uint64_t sub_1009295E8()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[47])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[48] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100929740;
    uint64_t v3 = v0[45];
    return sub_101105B68(v3, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v5 = 0xD000000000000017;
    v5[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100929740(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[49] = a1;
  v3[50] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[29];
    uint64_t v5 = sub_100929D2C;
  }
  else
  {
    uint64_t v6 = v3[29];
    swift_release();
    uint64_t v5 = sub_100929868;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100929868()
{
  unint64_t v28 = (void *)v0[42];
  swift_bridgeObjectRetain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_100442F94(v1);
  uint64_t v2 = v28;
  uint64_t v3 = v28[2];
  if (v3)
  {
    unint64_t v4 = 0;
    uint64_t v5 = v0[32];
    uint64_t v24 = v5;
    uint64_t v25 = v0[31];
    while (v4 < v28[2])
    {
      uint64_t v6 = v0[34];
      uint64_t v7 = v0[30];
      unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v27 = *(void *)(v5 + 72);
      sub_10092C588((uint64_t)v28 + v8 + v27 * v4, v6, type metadata accessor for ObservedAdvertisement);
      sub_10001D074(v6 + *(int *)(v25 + 48), v7, &qword_10163CF50);
      uint64_t v9 = type metadata accessor for ObservedAdvertisement.Location(0);
      LODWORD(v6) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9);
      sub_10001DAB4(v7, &qword_10163CF50);
      uint64_t v10 = v0[34];
      if (v6 == 1)
      {
        sub_10092C5F0(v10, type metadata accessor for ObservedAdvertisement);
      }
      else
      {
        sub_10092C524(v10, v0[33]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B773C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v11 = _swiftEmptyArrayStorage[3];
        if (v12 >= v11 >> 1) {
          sub_1000B773C(v11 > 1, v12 + 1, 1);
        }
        uint64_t v13 = v0[33];
        _swiftEmptyArrayStorage[2] = v12 + 1;
        sub_10092C524(v13, (uint64_t)_swiftEmptyArrayStorage + v8 + v12 * v27);
        uint64_t v5 = v24;
      }
      if (v3 == ++v4) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    uint64_t v2 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (qword_101636E08 == -1) {
      goto LABEL_13;
    }
  }
  swift_once();
LABEL_13:
  uint64_t v14 = type metadata accessor for Logger();
  sub_100010324(v14, (uint64_t)qword_10170E640);
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_log_type_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = v0[49];
  if (v17)
  {
    uint64_t v26 = v0[44];
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 134218496;
    uint64_t v20 = *(void *)(v18 + 16);
    swift_bridgeObjectRelease();
    v0[26] = v20;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    swift_bridgeObjectRelease();
    v0[27] = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 22) = 2048;
    uint64_t v21 = v2[2];
    swift_release();
    v0[28] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Reconciled = %ld, Anonymous = %ld, with location: %ld.", (uint8_t *)v19, 0x20u);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void *))v0[1];
  return v22(v2);
}

uint64_t sub_100929CA4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100929D2C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100929DC0()
{
  *(void *)(v1 + 128) = v0;
  return _swift_task_switch(sub_100929DE0, v0, 0);
}

uint64_t sub_100929DE0()
{
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 136) = sub_100010324(v1, (uint64_t)qword_10170E640);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Purge observations start.", v4, 2u);
    swift_slowDealloc();
  }

  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v6;
    void *v6 = v0;
    v6[1] = sub_100929FDC;
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100929FDC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10092A0F4, v2, 0);
}

uint64_t sub_10092A0F4()
{
  uint64_t v1 = v0[19];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  if (v1)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    OS_dispatch_queue.sync<A>(execute:)();
    v0[20] = 0;
    v0[21] = sub_1010AC058(v0[15]);
    swift_bridgeObjectRelease();
    uint64_t v2 = v0[19];
    return _swift_task_switch(sub_10092A264, v2, 0);
  }
  else
  {
    sub_10001CEC8();
    swift_allocError();
    *os_log_type_t v3 = 0xD000000000000017;
    v3[1] = 0x80000001013FB7A0;
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_10092A264()
{
  uint64_t v1 = v0[20];
  sub_101107D84(v0[21]);
  v0[22] = v1;
  if (v1)
  {
    uint64_t v2 = v0[16];
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_10092A568, v2, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v3 = (void *)swift_task_alloc();
    v0[23] = v3;
    *os_log_type_t v3 = v0;
    v3[1] = sub_10092A35C;
    return sub_101103D30();
  }
}

uint64_t sub_10092A35C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_10092A5CC;
  }
  else {
    uint64_t v4 = sub_10092A488;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10092A488()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Purge observations finished.", v3, 2u);
    swift_slowDealloc();
  }

  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10092A568()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10092A5CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10092A630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  v4[9] = *(void *)(type metadata accessor for ObservedAdvertisement(0) - 8);
  v4[10] = swift_task_alloc();
  return _swift_task_switch(sub_10092A74C, v3, 0);
}

uint64_t sub_10092A74C()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10166D7B8 + dword_10166D7B8);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10092A800;
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  return v5(v3, v2);
}

uint64_t sub_10092A800()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 40);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_10092CEE0;
  }
  else
  {
    uint64_t v4 = sub_10092A954;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10092A954()
{
  v0[12] = type metadata accessor for AnalyticsPublisher();
  v0[13] = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[14] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10092AA0C;
  uint64_t v2 = v0[2];
  return sub_101196838(v2);
}

uint64_t sub_10092AA0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10092AB38, v1, 0);
}

uint64_t sub_10092AB38()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 120) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 16);
    uint64_t v5 = OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_identifier;
    *(void *)(v0 + 128) = OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_identifier;
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    int v8 = *(_DWORD *)(v6 + 80);
    *(_DWORD *)(v0 + 192) = v8;
    *(void *)(v0 + 136) = *(void *)(v6 + 72);
    *(void *)(v0 + 144) = 0;
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 48);
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v12 = v1 + ((v8 + 32) & ~(unint64_t)v8);
    uint64_t v13 = v4 + v5;
    swift_bridgeObjectRetain();
    sub_10092C588(v12, v9, type metadata accessor for ObservedAdvertisement);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v7, v13, v10);
    type metadata accessor for AnalyticsEvent(0);
    uint64_t v14 = (char *)swift_allocObject();
    *(void *)(v0 + 152) = v14;
    swift_defaultActor_initialize();
    *((void *)v14 + 14) = sub_10092D664((uint64_t)_swiftEmptyArrayStorage);
    UUID.init()();
    os_log_type_t v15 = &v14[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime];
    uint64_t v16 = type metadata accessor for DispatchTime();
    BOOL v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v15, 1, 1, v16);
    v17(&v14[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_endTime], 1, 1, v16);
    *((void *)v14 + 15) = 0xD000000000000038;
    *((void *)v14 + 16) = 0x800000010140C450;
    uint64_t v18 = swift_task_alloc();
    *(void *)(v0 + 160) = v18;
    *(void *)(v18 + 16) = v9;
    *(void *)(v18 + 24) = v7;
    *(unsigned char *)(v18 + 32) = v3 == 0;
    *(void *)(v18 + 40) = v3;
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_10092ADE4;
    return sub_101194870((uint64_t)&unk_1016522E0, v18);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_10092ADE4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  if (v0)
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v4 = sub_10092CEE4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v4 = sub_10092AF40;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10092AF40()
{
  v0[22] = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[23] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10092AFF0;
  uint64_t v2 = v0[19];
  return sub_101196838(v2);
}

uint64_t sub_10092AFF0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10092B11C, v1, 0);
}

uint64_t sub_10092B11C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 48);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  sub_10092C5F0(v3, type metadata accessor for ObservedAdvertisement);
  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 144) + 1;
    *(void *)(v0 + 144) = v10;
    uint64_t v11 = *(void *)(v0 + 80);
    uint64_t v13 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 32);
    uint64_t v16 = *(void *)(v0 + 16) + *(void *)(v0 + 128);
    sub_10092C588(*(void *)(v0 + 24)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ v9 * v10, v11, type metadata accessor for ObservedAdvertisement);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v12, v16, v14);
    type metadata accessor for AnalyticsEvent(0);
    BOOL v17 = (char *)swift_allocObject();
    *(void *)(v0 + 152) = v17;
    swift_defaultActor_initialize();
    *((void *)v17 + 14) = sub_10092D664((uint64_t)_swiftEmptyArrayStorage);
    UUID.init()();
    uint64_t v18 = &v17[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime];
    uint64_t v19 = type metadata accessor for DispatchTime();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    v20(v18, 1, 1, v19);
    v20(&v17[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_endTime], 1, 1, v19);
    *((void *)v17 + 15) = 0xD000000000000038;
    *((void *)v17 + 16) = 0x800000010140C450;
    uint64_t v21 = swift_task_alloc();
    *(void *)(v0 + 160) = v21;
    *(void *)(v21 + 16) = v11;
    *(void *)(v21 + 24) = v12;
    *(unsigned char *)(v21 + 32) = v15 == 0;
    *(void *)(v21 + 40) = v15;
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_10092ADE4;
    return sub_101194870((uint64_t)&unk_1016522E0, v21);
  }
}

uint64_t sub_10092B40C(uint64_t a1)
{
  *(void *)(v1 + 176) = a1;
  return _swift_task_switch(sub_10092B42C, 0, 0);
}

uint64_t sub_10092B42C()
{
  unint64_t v1 = *(void *)(*(void *)(v0 + 176) + 16);
  uint64_t v2 = sub_1011B2CA0(v1);
  sub_10000588C(&qword_101639418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101347BA0;
  *(void *)(inited + 32) = 0xD000000000000010;
  *(void *)(inited + 40) = 0x80000001013F1D30;
  *(void *)(inited + 72) = &type metadata for Int;
  unint64_t v4 = sub_100033838();
  *(void *)(inited + 80) = v4;
  *(void *)(inited + 48) = v1;
  *(_WORD *)(inited + 88) = 2;
  *(void *)(inited + 96) = 0xD000000000000015;
  *(void *)(inited + 104) = 0x800000010140C7A0;
  *(void *)(inited + 136) = &type metadata for Int;
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 112) = v2;
  *(_WORD *)(inited + 152) = 2;
  unint64_t v5 = sub_10092D7A8(inited);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_10092B53C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v4 + 832) = a4;
  *(unsigned char *)(v4 + 602) = a3;
  *(void *)(v4 + 824) = a2;
  *(void *)(v4 + 816) = a1;
  sub_10000588C(&qword_10163CF50);
  *(void *)(v4 + 840) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  *(void *)(v4 + 848) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  *(void *)(v4 + 856) = v5;
  *(void *)(v4 + 864) = *(void *)(v5 - 8);
  *(void *)(v4 + 872) = swift_task_alloc();
  *(void *)(v4 + 880) = swift_task_alloc();
  return _swift_task_switch(sub_10092B678, 0, 0);
}

uint64_t sub_10092B678()
{
  uint64_t v1 = *(void *)(v0 + 840);
  uint64_t v2 = *(void *)(v0 + 816);
  uint64_t v3 = type metadata accessor for ObservedAdvertisement(0);
  sub_10001D074(v2 + *(int *)(v3 + 48), v1, &qword_10163CF50);
  uint64_t v4 = type metadata accessor for ObservedAdvertisement.Location(0);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v1, 1, v4);
  uint64_t v6 = *(void *)(v0 + 864);
  uint64_t v7 = *(void *)(v0 + 856);
  uint64_t v8 = *(void *)(v0 + 848);
  uint64_t v9 = *(void *)(v0 + 840);
  if (v5 == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 840), &qword_10163CF50);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v7);
LABEL_4:
    uint64_t v10 = *(void *)(v0 + 848);
    static Date.distantPast.getter();
    sub_10001DAB4(v10, (uint64_t *)&unk_10163AC90);
    goto LABEL_6;
  }
  (*(void (**)(void, uint64_t, void))(v6 + 16))(*(void *)(v0 + 848), v9 + *(int *)(v4 + 28), *(void *)(v0 + 856));
  sub_10092C5F0(v9, type metadata accessor for ObservedAdvertisement.Location);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 864) + 32))(*(void *)(v0 + 880), *(void *)(v0 + 848), *(void *)(v0 + 856));
LABEL_6:
  uint64_t v11 = *(void *)(v0 + 872);
  uint64_t v12 = *(void *)(v0 + 864);
  uint64_t v13 = *(void *)(v0 + 856);
  uint64_t v39 = *(void *)(v0 + 832);
  char v37 = *(unsigned char *)(v0 + 602);
  uint64_t v14 = *(void *)(v0 + 816);
  Date.timeIntervalSince(_:)();
  uint64_t v16 = v15;
  static Date.trustedNow.getter(v11);
  Date.timeIntervalSince(_:)();
  uint64_t v18 = v17;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v19(v11, v13);
  sub_10000588C(&qword_101639418);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101364D30;
  *(void *)(inited + 32) = 0x496E6F6973736573;
  *(void *)(inited + 40) = 0xE900000000000044;
  uint64_t v21 = UUID.uuidString.getter();
  uint64_t v23 = v22;
  *(void *)(inited + 72) = &type metadata for String;
  unint64_t v41 = sub_1000336D4();
  *(void *)(inited + 80) = v41;
  *(void *)(inited + 48) = v21;
  *(void *)(inited + 56) = v23;
  *(_WORD *)(inited + 88) = 1;
  *(void *)(inited + 96) = 0xD000000000000016;
  *(void *)(inited + 104) = 0x800000010140C490;
  *(void *)(inited + 136) = &type metadata for Double;
  unint64_t v24 = sub_1000337E4();
  *(void *)(inited + 144) = v24;
  *(void *)(inited + 112) = v16;
  *(_WORD *)(inited + 152) = 3;
  *(void *)(inited + 160) = 0xD000000000000015;
  *(void *)(inited + 168) = 0x800000010140C4B0;
  *(void *)(inited + 200) = &type metadata for Double;
  *(void *)(inited + 208) = v24;
  *(void *)(inited + 176) = v18;
  *(_WORD *)(inited + 216) = 3;
  *(void *)(inited + 224) = 0x7942737574617473;
  *(void *)(inited + 232) = 0xEA00000000006574;
  LOBYTE(v14) = *(unsigned char *)(v14 + 32);
  *(void *)(inited + 264) = &type metadata for UInt8;
  *(void *)(inited + 272) = sub_1002650E4();
  *(unsigned char *)(inited + 240) = v14;
  *(_WORD *)(inited + 280) = 2;
  *(void *)(inited + 288) = 0xD000000000000015;
  *(void *)(inited + 296) = 0x80000001013FC790;
  *(void *)(inited + 328) = &type metadata for Int;
  unint64_t v25 = sub_100033838();
  *(void *)(inited + 336) = v25;
  *(void *)(inited + 304) = 0;
  *(_WORD *)(inited + 344) = 2;
  *(void *)(inited + 352) = 0x7265747461426E6FLL;
  *(void *)(inited + 360) = 0xE900000000000079;
  uint64_t v26 = sub_1011585AC((uint64_t)&off_1015A5750);
  uint64_t v27 = sub_10092BE88();
  char v28 = sub_100DC6050(v27, v26);
  swift_bridgeObjectRelease();
  *(unsigned char *)(inited + 368) = v28 & 1;
  *(_WORD *)(inited + 408) = 0;
  *(void *)(inited + 416) = 0x696669576E6FLL;
  *(void *)(inited + 424) = 0xE600000000000000;
  *(unsigned char *)(inited + 432) = sub_100031010() & 1;
  *(_WORD *)(inited + 472) = 0;
  *(void *)(inited + 480) = 0x6563637553646964;
  *(void *)(inited + 488) = 0xEA00000000006465;
  *(unsigned char *)(inited + 496) = v37;
  *(_WORD *)(inited + 536) = 0;
  unint64_t v29 = sub_10092D7A8(inited);
  if (v39)
  {
    uint64_t v38 = *(void *)(v0 + 880);
    uint64_t v40 = *(void *)(v0 + 856);
    swift_getErrorValue();
    swift_errorRetain();
    uint64_t v30 = Error.domain.getter();
    *(void *)(v0 + 584) = &type metadata for String;
    *(void *)(v0 + 592) = v41;
    *(void *)(v0 + 560) = v30;
    *(void *)(v0 + 568) = v31;
    *(_WORD *)(v0 + 600) = 1;
    sub_1007157C4(v0 + 560, v0 + 608);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1001702CC(v0 + 608, 0x6D6F44726F727265, 0xEB000000006E6961, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    uint64_t v33 = Error.code.getter();
    *(void *)(v0 + 680) = &type metadata for Int;
    *(void *)(v0 + 688) = v25;
    *(void *)(v0 + 656) = v33;
    *(_WORD *)(v0 + 696) = 2;
    sub_1007157C4(v0 + 656, v0 + 704);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    sub_1001702CC(v0 + 704, 0x646F43726F727265, 0xE900000000000065, v34);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    v19(v38, v40);
  }
  else
  {
    v19(*(void *)(v0 + 880), *(void *)(v0 + 856));
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v35(v29);
}

uint64_t sub_10092BCB0()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 144);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for FindMyNetworkPublisherService()
{
  return self;
}

uint64_t sub_10092BD24(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_10092CB24(&qword_1016522D0, a2, (void (*)(uint64_t))type metadata accessor for FindMyNetworkPublisherService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10092BD7C()
{
  if (qword_101636E08 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100010324(v0, (uint64_t)qword_10170E640);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Publish in progress, throttled for delay.", v3, 2u);
    swift_slowDealloc();
  }

  sub_10092C6A4();
  swift_allocError();
  *uint64_t v4 = 1;
  return swift_willThrow();
}

uint64_t sub_10092BE88()
{
  CFMutableDictionaryRef v0 = IOServiceMatching("IOPMPowerSource");
  if (!v0)
  {
    sub_1003444E0();
    uint64_t v9 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    return 0;
  }
  CFDictionaryRef v1 = v0;
  io_service_t MatchingService = IOServiceGetMatchingService(kIOMainPortDefault, v1);
  if (!MatchingService
    || (io_registry_entry_t v3 = MatchingService,
        uint64_t v4 = (__CFString *)String._bridgeToObjectiveC()(),
        CFTypeRef CFProperty = IORegistryEntryCreateCFProperty(v3, v4, kCFAllocatorDefault, 0),
        v4,
        !CFProperty))
  {
    sub_1003444E0();
    uint64_t v10 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

LABEL_11:
    return 0;
  }
  CFTypeID v6 = CFGetTypeID(CFProperty);
  if (v6 != CFBooleanGetTypeID()) {
    goto LABEL_9;
  }
  swift_unknownObjectRetain();
  swift_dynamicCast();
  if (v16)
  {
    sub_1003444E0();
    uint64_t v7 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_unknownObjectRelease();
    return 3;
  }
  uint64_t v12 = (__CFString *)String._bridgeToObjectiveC()();
  CFTypeRef v13 = IORegistryEntryCreateCFProperty(v3, v12, kCFAllocatorDefault, 0);

  if (!v13)
  {
LABEL_9:
    sub_1003444E0();
    uint64_t v10 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

LABEL_10:
    swift_unknownObjectRelease();
    goto LABEL_11;
  }
  CFTypeID v14 = CFGetTypeID(v13);
  if (v14 != CFBooleanGetTypeID())
  {
    sub_1003444E0();
    uint64_t v10 = (void *)static OS_os_log.default.getter();
    static os_log_type_t.default.getter();
    os_log(_:dso:log:type:_:)();

    swift_unknownObjectRelease();
    goto LABEL_10;
  }
  swift_unknownObjectRetain();
  swift_dynamicCast();
  sub_1003444E0();
  uint64_t v15 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  if (v16)
  {
    uint64_t v8 = 2;
    os_log(_:dso:log:type:_:)();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    os_log(_:dso:log:type:_:)();

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    return 1;
  }
  return v8;
}

uint64_t sub_10092C2E4(uint64_t a1)
{
  uint64_t v2 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self standardUserDefaults];
  sub_10001D074(a1, (uint64_t)v4, (uint64_t *)&unk_10163AC90);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  NSString v9 = String._bridgeToObjectiveC()();
  [v5 setObject:isa forKey:v9];

  swift_unknownObjectRelease();
  return sub_10001DAB4(a1, (uint64_t *)&unk_10163AC90);
}

uint64_t sub_10092C474()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10013067C;
  return sub_10092B53C(v2, v3, v4, v5);
}

uint64_t sub_10092C524(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ObservedAdvertisement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10092C588(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10092C5F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10092C650()
{
  unint64_t result = qword_1016522F0;
  if (!qword_1016522F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016522F0);
  }
  return result;
}

unint64_t sub_10092C6A4()
{
  unint64_t result = qword_1016522F8;
  if (!qword_1016522F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016522F8);
  }
  return result;
}

uint64_t sub_10092C6F8(uint64_t a1)
{
  return sub_100923F88(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10092C704()
{
  uint64_t v1 = sub_10000588C(&qword_101652308);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10092C7F0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000588C(&qword_101652308) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_100033F68;
  return sub_1009241CC(a1, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_10092C92C()
{
  uint64_t v1 = sub_10000588C(&qword_101652308);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10092CA10()
{
  uint64_t v2 = *(void *)(sub_10000588C(&qword_101652308) - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10012E0C8;
  return sub_1009247F8(v3, v4, v5);
}

uint64_t sub_10092CB24(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10092CB6C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_release();
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_10092CC60()
{
  uint64_t v2 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 25) & ~v3;
  uint64_t v5 = *(void *)(v0 + 16);
  char v6 = *(unsigned char *)(v0 + 24);
  uint64_t v7 = v0 + v4;
  uint64_t v8 = v0 + ((*(void *)(v2 + 64) + v3 + v4) & ~v3);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *(void *)uint64_t v9 = v1;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v8;
  *(unsigned char *)(v9 + 64) = v6;
  *(void *)(v9 + 8) = sub_10001D2E4;
  *(void *)(v9 + 16) = v5;
  return _swift_task_switch(sub_1009233FC, 0, 0);
}

unsigned char *storeEnumTagSinglePayload for FindMyNetworkPublisherService.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10092CE50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FindMyNetworkPublisherService.Error()
{
  return &type metadata for FindMyNetworkPublisherService.Error;
}

unint64_t sub_10092CE8C()
{
  unint64_t result = qword_101652348;
  if (!qword_101652348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652348);
  }
  return result;
}

unint64_t sub_10092CEEC(uint64_t a1)
{
  return sub_10092E5F8(a1, &qword_1016460A0, &qword_1016460A8, (uint64_t (*)(uint64_t *, unint64_t))sub_100173E4C);
}

unint64_t sub_10092CF14(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652398);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D028(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652390);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D13C(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652370);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652388);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652370);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100723FF4(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for SystemVersionNumber();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D33C(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652360);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652380);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652360);
    char v14 = *v5;
    unint64_t result = sub_100724020(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for FeatureSupportMatrix();
    unint64_t result = sub_100940528(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for FeatureSupportMatrix);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D530(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652350);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D644(uint64_t a1)
{
  return sub_10092DC24(a1, (uint64_t *)&unk_10164E820, (uint64_t *)&unk_10164E810);
}

unint64_t sub_10092D658(uint64_t a1)
{
  return sub_10092FCB0(a1, &qword_1016523A0);
}

unint64_t sub_10092D664(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C((uint64_t *)&unk_101660600);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001D074(v6, (uint64_t)&v15, &qword_1016523C8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100723FF4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_100940378((uint64_t)&v17, v3[7] + 48 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 64;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D7A8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101660840);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001D074(v6, (uint64_t)&v15, &qword_1016523D8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_100723FF4(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1007157C4((uint64_t)&v17, v3[7] + 48 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 64;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092D8EC(uint64_t a1)
{
  return sub_10092FCB0(a1, &qword_101652568);
}

unint64_t sub_10092D8F8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101660620);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    void *v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092DA1C(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652468);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652470);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652468);
    char v14 = *v5;
    unint64_t result = sub_100724268(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for BookmarkMetaData();
    unint64_t result = sub_100940528(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092DC10(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_1016524A0, &qword_1016524A8);
}

unint64_t sub_10092DC24(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000588C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v10 = static _DictionaryStorage.allocate(capacity:)();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v16, (uint64_t)v9, a2);
    unint64_t result = sub_1007240CC((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092DE10(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_101652420, (uint64_t *)&unk_101660990);
}

unint64_t sub_10092DE24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016523D0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_10072441C((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092DF30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101660FD0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_errorRetain();
    unint64_t result = sub_1007244B0((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E03C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016523C0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    id v7 = (void *)*((void *)v4 - 1);
    char v8 = *v4;
    swift_bridgeObjectRetain();
    sub_100940368(v7, v8);
    unint64_t result = sub_100723FF4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 16 * result;
    *(void *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 8) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E16C(uint64_t a1)
{
  return sub_10092F168(a1, (uint64_t *)&unk_101660E70);
}

unint64_t sub_10092E178(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_101649670, &qword_101640988);
}

unint64_t sub_10092E18C(uint64_t a1)
{
  return sub_10092FCB0(a1, &qword_101652560);
}

unint64_t sub_10092E198(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_101652550, &qword_101652558);
}

unint64_t sub_10092E1AC(uint64_t a1)
{
  return sub_10092FCB0(a1, &qword_101652498);
}

unint64_t sub_10092E1B8(uint64_t a1)
{
  return sub_10092FCB0(a1, &qword_101660DF0);
}

unint64_t sub_10092E1C4(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016523A8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (unsigned __int8 *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016523B0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_1016523A8);
    unsigned __int8 v14 = *v5;
    unint64_t result = sub_100723FB0(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for Date();
    unint64_t result = (*(uint64_t (**)(unint64_t, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E3BC(uint64_t a1)
{
  return sub_1009302FC(a1, &qword_101640960, (uint64_t *)&unk_101660750);
}

unint64_t sub_10092E3D0(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101642620);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016523B8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (long long *)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101642620);
    unint64_t result = sub_1007240CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = sub_10001CEB0(v9, v7[7] + 40 * v16);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E5D0(uint64_t a1)
{
  return sub_10092E5F8(a1, (uint64_t *)&unk_101644340, (uint64_t *)&unk_101651D00, (uint64_t (*)(uint64_t *, unint64_t))sub_100173E4C);
}

unint64_t sub_10092E5F8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, unint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001D074(v11, (uint64_t)&v20, a3);
    uint64_t v12 = v20;
    uint64_t v13 = v21;
    unint64_t result = sub_100723FF4(v20, v21);
    if (v15) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    unint64_t v16 = (uint64_t *)(v8[6] + 16 * result);
    uint64_t *v16 = v12;
    v16[1] = v13;
    unint64_t result = a4(&v22, v8[7] + 32 * result);
    uint64_t v17 = v8[2];
    BOOL v18 = __OFADD__(v17, 1);
    uint64_t v19 = v17 + 1;
    if (v18) {
      goto LABEL_11;
    }
    v8[2] = v19;
    v11 += 48;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E738(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_1016524E0, &qword_101660EE0);
}

unint64_t sub_10092E74C(uint64_t a1)
{
  return sub_100930524(a1, &qword_101652548, (uint64_t *)&unk_101660F90, (uint64_t (*)(char *))sub_100724804, (uint64_t (*)(void))&type metadata accessor for MACAddress);
}

unint64_t sub_10092E788(uint64_t a1)
{
  return sub_10093079C(a1, &qword_101652538, &qword_101652540, (uint64_t (*)(char *))sub_100724804, (uint64_t (*)(void))&type metadata accessor for MACAddress);
}

unint64_t sub_10092E7C4(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_1016497D0, &qword_1016524B0);
}

unint64_t sub_10092E7D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016524C8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1007248DC(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092E8E4(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016524D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016524D8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  id v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_1016524D0);
    unint64_t result = sub_100724970((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for OwnedBeaconRecord();
    unint64_t result = sub_100940528((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092EAD4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C((uint64_t *)&unk_1016609D0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 56);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 24);
    uint64_t v6 = *(v4 - 2);
    uint64_t v7 = *(v4 - 1);
    uint64_t v8 = *v4;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_100724500(v5, v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 24 * result;
    *(unsigned char *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(void *)(v11 + 16) = v7;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 4;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092EC10(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652518);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C((uint64_t *)&unk_1016606F0);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652518);
    unint64_t result = sub_1007240CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092EE04(uint64_t a1)
{
  return sub_10092EE1C(a1, &qword_101652508);
}

unint64_t sub_10092EE10(uint64_t a1)
{
  return sub_10092EE1C(a1, &qword_101652510);
}

unint64_t sub_10092EE1C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_10000588C(&qword_1016524E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v9 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a2);
  uint64_t v8 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = (void *)v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v9;
  }
  uint64_t v11 = *(int *)(v4 + 48);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v24[1] = a1;
  uint64_t v14 = a1 + v13;
  uint64_t v15 = *(void *)(v5 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v14, (uint64_t)v7, &qword_1016524E8);
    unint64_t result = sub_1007240CC((uint64_t)v7);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v9[6];
    uint64_t v20 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v7, v20);
    *(_OWORD *)(v9[7] + 16 * v18) = *(_OWORD *)&v7[v11];
    uint64_t v21 = v9[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v9[2] = v23;
    v14 += v15;
    if (!--v10)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F00C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C((uint64_t *)&unk_101660910);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 64);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 32);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    unint64_t v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1000361E0(v8, v9);
    unint64_t result = sub_100724500(v5, v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = v2[6] + 24 * result;
    *(unsigned char *)uint64_t v12 = v5;
    *(void *)(v12 + 8) = v6;
    *(void *)(v12 + 16) = v7;
    unint64_t v13 = (uint64_t *)(v2[7] + 16 * result);
    *unint64_t v13 = v8;
    v13[1] = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v4 += 5;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F150(uint64_t a1)
{
  return sub_10092EE1C(a1, &qword_1016524F0);
}

unint64_t sub_10092F15C(uint64_t a1)
{
  return sub_10092F168(a1, &qword_101660880);
}

unint64_t sub_10092F168(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  unsigned __int8 v5 = (_OWORD *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *((void *)v5 - 2);
    uint64_t v7 = *((void *)v5 - 1);
    long long v14 = *v5;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t result = sub_100723FF4(v6, v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v7;
    *(_OWORD *)(v3[7] + 16 * result) = v14;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v3[2] = v13;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F290(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016524F8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652500);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_1016524F8);
    unint64_t result = sub_1007240CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for DispatchTime();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F4C4(uint64_t a1)
{
  return sub_10092F874(a1, &qword_1016524B8, &qword_1016524C0, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
}

unint64_t sub_10092F500(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_101652410, (uint64_t *)&unk_101660940);
}

unint64_t sub_10092F514(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_101652418, &qword_101660960);
}

unint64_t sub_10092F528(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_1016608C0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F63C(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652438);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C((uint64_t *)&unk_101660B30);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652438);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100723FF4(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for MultipartAccessoryPairingInfo(0);
    unint64_t result = sub_100940528(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092F838(uint64_t a1)
{
  return sub_10092F874(a1, &qword_101652530, &qword_101660F70, type metadata accessor for BeaconState, type metadata accessor for BeaconState);
}

unint64_t sub_10092F874(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v8 = sub_10000588C(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = (uint64_t)&v11[*(int *)(v8 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v18, (uint64_t)v11, a2);
    unint64_t result = sub_1007240CC((uint64_t)v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    uint64_t v25 = v13[7];
    uint64_t v26 = v31(0);
    unint64_t result = sub_100940528(v15, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v22, v32);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092FA94(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652520);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652528);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652520);
    unint64_t result = sub_1007240CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7] + 40 * v16;
    long long v20 = *(_OWORD *)(v9 + 8);
    long long v21 = *(_OWORD *)(v9 + 24);
    *(void *)uint64_t v19 = *(void *)v9;
    *(_OWORD *)(v19 + 8) = v20;
    *(_OWORD *)(v19 + 24) = v21;
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092FCA4(uint64_t a1)
{
  return sub_10092FCB0(a1, (uint64_t *)&unk_101660810);
}

unint64_t sub_10092FCB0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a2);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_100723FF4(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092FDC8(uint64_t a1)
{
  return sub_10092FDF0(a1, &qword_101652490, (uint64_t *)&unk_1016606B0);
}

unint64_t sub_10092FDDC(uint64_t a1)
{
  return sub_10092FDF0(a1, &qword_101652480, &qword_101652488);
}

unint64_t sub_10092FDF0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000588C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v10 = static _DictionaryStorage.allocate(capacity:)();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v16, (uint64_t)v9, a2);
    unint64_t result = sub_100725124((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = type metadata accessor for BeaconKeyManager.FileKey(0);
    unint64_t result = sub_100940528((uint64_t)v9, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, type metadata accessor for BeaconKeyManager.FileKey);
    *(void *)(v11[7] + 8 * v20) = *(void *)&v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10092FFD8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_10164B240);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_100723FF4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1009300F4(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016523E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101660740);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_1016523E8);
    uint64_t v14 = *v5;
    unint64_t result = sub_100724354(*v5);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v7[6] + 8 * result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for BeaconStoreFileRecord();
    unint64_t result = sub_100940528(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for BeaconStoreFileRecord);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1009302E8(uint64_t a1)
{
  return sub_1009302FC(a1, &qword_101652478, &qword_101640990);
}

unint64_t sub_1009302FC(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v6 = sub_10000588C(a2);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    unint64_t v11 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v10 = static _DictionaryStorage.allocate(capacity:)();
  unint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  uint64_t v13 = *(int *)(v6 + 48);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v26[1] = a1;
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(v7 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v16, (uint64_t)v9, a2);
    unint64_t result = sub_1007240CC((uint64_t)v9);
    if (v19) {
      break;
    }
    unint64_t v20 = result;
    *(void *)(v14 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v21 = v11[6];
    uint64_t v22 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v9, v22);
    *(unsigned char *)(v11[7] + v20) = v9[v13];
    uint64_t v23 = v11[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_11;
    }
    v11[2] = v25;
    v16 += v17;
    if (!--v12)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1009304E8(uint64_t a1)
{
  return sub_100930524(a1, &qword_101638CF8, &qword_101652460, (uint64_t (*)(char *))sub_1007240CC, (uint64_t (*)(void))&type metadata accessor for UUID);
}

unint64_t sub_100930524(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v31 = a5;
  uint64_t v32 = a4;
  uint64_t v8 = sub_10000588C(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  unint64_t v15 = &v11[*(int *)(v8 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v18, (uint64_t)v11, a2);
    unint64_t result = v32(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v31(0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    uint64_t v25 = v13[7];
    uint64_t v26 = type metadata accessor for Date();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v25 + *(void *)(*(void *)(v26 - 8) + 72) * v22, v15, v26);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100930760(uint64_t a1)
{
  return sub_10093079C(a1, &qword_101652458, (uint64_t *)&unk_101660B50, (uint64_t (*)(char *))sub_1007240CC, (uint64_t (*)(void))&type metadata accessor for UUID);
}

unint64_t sub_10093079C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v29 = a5;
  uint64_t v30 = a4;
  uint64_t v8 = sub_10000588C(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(a3);
  uint64_t v12 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = *(int *)(v8 + 48);
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v18, (uint64_t)v11, a2);
    unint64_t result = v30(v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = v29(0);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    *(void *)(v13[7] + 8 * v22) = *(void *)&v11[v15];
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    v13[2] = v27;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10093099C(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652448);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101652450);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652448);
    unint64_t result = sub_100724804((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for MACAddress();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(_OWORD *)(v7[7] + 16 * v16) = *(_OWORD *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100930B90(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101652440);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_101640980);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10001D074(v12, (uint64_t)v5, &qword_101652440);
    uint64_t v14 = *v5;
    unint64_t v15 = v5[1];
    unint64_t result = sub_1007241A0(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for OwnedBeaconGroup.PairingState(0);
    unint64_t result = sub_100940528(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100930D8C(uint64_t a1)
{
  return sub_10092F874(a1, &qword_101652430, &qword_101660A00, (uint64_t (*)(void))type metadata accessor for SafeLocation, (uint64_t (*)(void))type metadata accessor for SafeLocation);
}

unint64_t sub_100930DC8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_10164B230);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001D074(v6, (uint64_t)v15, &qword_101652408);
    unint64_t result = sub_1007241B8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_100173E4C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100930F0C(uint64_t a1)
{
  return sub_10092DC24(a1, &qword_1016523F8, &qword_101660820);
}

unint64_t sub_100930F20(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10000588C(&qword_10164B238);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001D074(v6, (uint64_t)&v13, &qword_1016523F0);
    uint64_t v7 = v13;
    unint64_t result = sub_10072441C(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100173E4C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100931050@<X0>(uint64_t a1@<X8>)
{
  if (qword_101636E10 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10170E660;
  unint64_t v3 = *(void *)algn_10170E668;
  *(void *)a1 = qword_10170E660;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 3;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0x408C200000000000;
  *(unsigned char *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0x406E000000000000;
  *(_WORD *)(a1 + 56) = 0;
  sub_1000361E0(v2, v3);
  if (qword_101636E18 != -1) {
    swift_once();
  }
  *(void *)(a1 + 64) = qword_10170E670;
  *(unsigned char *)(a1 + 72) = 1;
  *(void *)(a1 + 80) = 0xD000000000000012;
  *(void *)(a1 + 88) = 0x80000001013F8810;
  *(void *)(a1 + 96) = 1;
  *(unsigned char *)(a1 + 104) = 0;
  *(_WORD *)(a1 + 105) = 256;
  *(void *)(a1 + 112) = 60;
  *(unsigned char *)(a1 + 120) = 0;
  *(void *)(a1 + 128) = 15;
  *(unsigned char *)(a1 + 136) = 0;
  *(void *)(a1 + 144) = 1440;
  *(unsigned char *)(a1 + 152) = 0;
  *(void *)(a1 + 160) = 5000;
  *(unsigned char *)(a1 + 168) = 0;
  *(void *)(a1 + 176) = 3;
  *(unsigned char *)(a1 + 184) = 0;
  *(void *)(a1 + 192) = 0x4000000000000000;
  *(unsigned char *)(a1 + 200) = 0;
  *(void *)(a1 + 208) = 60;
  *(unsigned char *)(a1 + 216) = 0;
  *(void *)(a1 + 224) = 60;
  *(unsigned char *)(a1 + 232) = 0;
  *(void *)(a1 + 240) = 0x40F5180000000000;
  *(unsigned char *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 5;
  *(unsigned char *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 604800;
  *(unsigned char *)(a1 + 280) = 0;
  *(void *)(a1 + 288) = 43200;
  *(unsigned char *)(a1 + 296) = 0;
  *(void *)(a1 + 304) = 24;
  *(unsigned char *)(a1 + 312) = 0;
  *(unsigned char *)(a1 + 313) = 1;
  uint64_t v4 = qword_101636E20;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  *(void *)(a1 + 320) = qword_10170E678;
  *(void *)(a1 + 328) = 4;
  *(unsigned char *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 24;
  *(unsigned char *)(a1 + 352) = 0;
  *(void *)(a1 + 360) = 1440;
  *(unsigned char *)(a1 + 368) = 0;
  *(void *)(a1 + 376) = 1200;
  *(unsigned char *)(a1 + 384) = 0;
  *(void *)(a1 + 392) = 600;
  *(unsigned char *)(a1 + 400) = 0;
  *(void *)(a1 + 408) = 8640;
  *(unsigned char *)(a1 + 416) = 0;
  *(void *)(a1 + 424) = 8640;
  *(unsigned char *)(a1 + 432) = 0;
  *(void *)(a1 + 440) = 2880;
  *(unsigned char *)(a1 + 448) = 0;
  *(void *)(a1 + 456) = 10080;
  *(unsigned char *)(a1 + 464) = 0;
  *(void *)(a1 + 472) = 2880;
  *(unsigned char *)(a1 + 480) = 0;
  *(unsigned char *)(a1 + 481) = 1;
  *(void *)(a1 + 488) = 5;
  *(unsigned char *)(a1 + 496) = 0;
  *(void *)(a1 + 504) = 3;
  *(unsigned char *)(a1 + 512) = 0;
  *(void *)(a1 + 520) = 10;
  *(unsigned char *)(a1 + 528) = 0;
  *(void *)(a1 + 536) = 1200;
  *(unsigned char *)(a1 + 544) = 0;
  *(void *)(a1 + 552) = 10080;
  *(unsigned char *)(a1 + 560) = 0;
  *(void *)(a1 + 568) = 600;
  *(unsigned char *)(a1 + 576) = 0;
  *(void *)(a1 + 584) = 1440;
  *(unsigned char *)(a1 + 592) = 0;
  swift_bridgeObjectRetain();
  *(void *)(a1 + 600) = sub_10093FE44();
  *(void *)(a1 + 608) = 0x403E000000000000;
  *(unsigned char *)(a1 + 616) = 0;
  *(void *)(a1 + 624) = 0x408C200000000000;
  *(unsigned char *)(a1 + 632) = 0;
  if (qword_101636E28 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_10170E680;
  *(void *)(a1 + 640) = qword_10170E680;
  uint64_t v6 = qword_101636E30;
  id v7 = v5;
  if (v6 != -1) {
    swift_once();
  }
  *(void *)(a1 + 648) = qword_10170E688;
  *(void *)(a1 + 672) = 7;
  *(unsigned char *)(a1 + 680) = 0;
  *(void *)(a1 + 656) = 20;
  *(unsigned char *)(a1 + 664) = 0;
  *(void *)(a1 + 688) = 300;
  *(unsigned char *)(a1 + 696) = 0;
  *(void *)(a1 + 704) = 60;
  *(unsigned char *)(a1 + 712) = 0;
  *(void *)(a1 + 720) = 1440;
  *(unsigned char *)(a1 + 728) = 0;
  *(unsigned char *)(a1 + 729) = 1;
  uint64_t v8 = qword_101636E38;
  swift_bridgeObjectRetain();
  if (v8 != -1) {
    swift_once();
  }
  long long v120 = xmmword_10170E6A0;
  long long v121 = xmmword_10170E690;
  long long v9 = xmmword_10170E6B0;
  uint64_t v10 = qword_10170E6C0;
  long long v118 = unk_10170E6D8;
  long long v119 = unk_10170E6C8;
  uint64_t v11 = qword_10170E6E8;
  uint64_t v12 = unk_10170E6F0;
  uint64_t v13 = qword_10170E6F8;
  long long v14 = (int *)type metadata accessor for DefaultConfigurationLayer();
  uint64_t v15 = a1 + v14[70];
  *(_OWORD *)uint64_t v15 = v121;
  *(_OWORD *)(v15 + 16) = v120;
  *(_OWORD *)(v15 + 32) = v9;
  *(void *)(v15 + 48) = v10;
  *(_OWORD *)(v15 + 56) = v119;
  *(_OWORD *)(v15 + 72) = v118;
  *(void *)(v15 + 88) = v11;
  *(void *)(v15 + 96) = v12;
  *(void *)(v15 + 104) = v13;
  uint64_t v16 = a1 + v14[60];
  uint64_t v17 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = a1 + v14[61];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v18, 1, 1, v19);
  uint64_t v21 = a1 + v14[62];
  *(void *)uint64_t v21 = 0;
  *(unsigned char *)(v21 + 8) = 1;
  v20(a1 + v14[63], 1, 1, v19);
  uint64_t v22 = a1 + v14[64];
  *(void *)uint64_t v22 = 48;
  *(unsigned char *)(v22 + 8) = 0;
  uint64_t v23 = a1 + v14[65];
  *(void *)uint64_t v23 = 48;
  *(unsigned char *)(v23 + 8) = 0;
  uint64_t v24 = a1 + v14[66];
  *(void *)uint64_t v24 = 0x4010000000000000;
  *(unsigned char *)(v24 + 8) = 0;
  uint64_t v25 = a1 + v14[67];
  *(void *)uint64_t v25 = 0x4004CCCCCCCCCCCDLL;
  *(unsigned char *)(v25 + 8) = 0;
  strcpy((char *)(a1 + v14[68]), "333333\a@");
  uint64_t v26 = a1 + v14[69];
  *(void *)uint64_t v26 = 0x3FF999999999999ALL;
  *(unsigned char *)(v26 + 8) = 0;
  *(unsigned char *)(a1 + v14[71]) = 1;
  *(unsigned char *)(a1 + v14[72]) = 1;
  *(unsigned char *)(a1 + v14[73]) = 0;
  uint64_t v27 = a1 + v14[74];
  *(void *)uint64_t v27 = 0x4092C00000000000;
  *(unsigned char *)(v27 + 8) = 0;
  uint64_t v28 = a1 + v14[75];
  *(void *)uint64_t v28 = 0x4082C00000000000;
  *(unsigned char *)(v28 + 8) = 0;
  uint64_t v29 = a1 + v14[76];
  *(void *)uint64_t v29 = 0x4092C00000000000;
  *(unsigned char *)(v29 + 8) = 0;
  uint64_t v30 = a1 + v14[77];
  *(void *)uint64_t v30 = 0x4082C00000000000;
  *(unsigned char *)(v30 + 8) = 0;
  uint64_t v31 = a1 + v14[78];
  *(void *)uint64_t v31 = 0x40B0E00000000000;
  *(unsigned char *)(v31 + 8) = 0;
  uint64_t v32 = a1 + v14[79];
  *(void *)uint64_t v32 = 0x4150266000000000;
  *(unsigned char *)(v32 + 8) = 0;
  uint64_t v33 = a1 + v14[80];
  *(void *)uint64_t v33 = 0x4122750000000000;
  *(unsigned char *)(v33 + 8) = 0;
  uint64_t v34 = a1 + v14[81];
  *(void *)uint64_t v34 = 0x40AC200000000000;
  *(unsigned char *)(v34 + 8) = 0;
  uint64_t v35 = a1 + v14[82];
  *(void *)uint64_t v35 = 60;
  *(unsigned char *)(v35 + 8) = 0;
  Class v36 = (void *)(a1 + v14[83]);
  *Class v36 = 0xD000000000000010;
  v36[1] = 0x800000010140C8F0;
  uint64_t v37 = a1 + v14[84];
  *(void *)uint64_t v37 = 43200;
  *(unsigned char *)(v37 + 8) = 0;
  uint64_t v38 = (void *)(a1 + v14[85]);
  *uint64_t v38 = 0xD000000000000019;
  v38[1] = 0x800000010140C910;
  uint64_t v39 = a1 + v14[86];
  *(void *)uint64_t v39 = 43200;
  *(unsigned char *)(v39 + 8) = 0;
  uint64_t v40 = qword_101636E40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 != -1) {
    swift_once();
  }
  *(void *)(a1 + v14[87]) = qword_10170E700;
  unint64_t v41 = (void *)(a1 + v14[88]);
  *unint64_t v41 = 0xD000000000000018;
  v41[1] = 0x800000010140C930;
  uint64_t v42 = a1 + v14[89];
  *(void *)uint64_t v42 = 0x404E000000000000;
  *(unsigned char *)(v42 + 8) = 0;
  *(unsigned char *)(a1 + v14[90]) = 1;
  *(unsigned char *)(a1 + v14[91]) = 1;
  *(unsigned char *)(a1 + v14[92]) = 1;
  *(unsigned char *)(a1 + v14[93]) = 1;
  uint64_t v43 = qword_101636E48;
  swift_bridgeObjectRetain();
  if (v43 != -1) {
    swift_once();
  }
  uint64_t v44 = a1 + v14[94];
  *(void *)uint64_t v44 = qword_10170E708;
  *(unsigned char *)(v44 + 8) = 0;
  uint64_t v45 = a1 + v14[95];
  *(void *)uint64_t v45 = 15;
  *(unsigned char *)(v45 + 8) = 0;
  uint64_t v46 = a1 + v14[96];
  *(void *)uint64_t v46 = 5;
  *(unsigned char *)(v46 + 8) = 0;
  uint64_t v47 = a1 + v14[97];
  *(void *)uint64_t v47 = 120;
  *(unsigned char *)(v47 + 8) = 0;
  uint64_t v48 = a1 + v14[98];
  *(void *)uint64_t v48 = 24;
  *(unsigned char *)(v48 + 8) = 0;
  uint64_t v49 = a1 + v14[99];
  *(void *)uint64_t v49 = 0x4049000000000000;
  *(unsigned char *)(v49 + 8) = 0;
  uint64_t v50 = a1 + v14[100];
  *(void *)uint64_t v50 = 0x4024000000000000;
  *(unsigned char *)(v50 + 8) = 0;
  uint64_t v51 = a1 + v14[101];
  *(void *)uint64_t v51 = 0x4044000000000000;
  *(unsigned char *)(v51 + 8) = 0;
  uint64_t v52 = a1 + v14[102];
  *(void *)uint64_t v52 = 32;
  *(unsigned char *)(v52 + 8) = 0;
  uint64_t v53 = a1 + v14[103];
  *(void *)uint64_t v53 = 12;
  *(unsigned char *)(v53 + 8) = 0;
  uint64_t v54 = a1 + v14[104];
  *(void *)uint64_t v54 = 32;
  *(unsigned char *)(v54 + 8) = 0;
  uint64_t v55 = a1 + v14[105];
  *(void *)uint64_t v55 = 0x4034000000000000;
  *(unsigned char *)(v55 + 8) = 0;
  uint64_t v56 = a1 + v14[106];
  *(void *)uint64_t v56 = 0x403E000000000000;
  *(unsigned char *)(v56 + 8) = 0;
  uint64_t v57 = a1 + v14[107];
  *(void *)uint64_t v57 = 7;
  *(unsigned char *)(v57 + 8) = 0;
  uint64_t v58 = a1 + v14[108];
  *(void *)uint64_t v58 = 30;
  *(unsigned char *)(v58 + 8) = 0;
  uint64_t v59 = a1 + v14[109];
  *(void *)uint64_t v59 = 60;
  *(unsigned char *)(v59 + 8) = 0;
  uint64_t v60 = a1 + v14[110];
  *(void *)uint64_t v60 = 30;
  *(unsigned char *)(v60 + 8) = 0;
  uint64_t v61 = a1 + v14[111];
  *(void *)uint64_t v61 = 14;
  *(unsigned char *)(v61 + 8) = 0;
  uint64_t v62 = a1 + v14[112];
  *(void *)uint64_t v62 = 4320;
  *(unsigned char *)(v62 + 8) = 0;
  uint64_t v63 = a1 + v14[113];
  *(void *)uint64_t v63 = 2160;
  *(unsigned char *)(v63 + 8) = 0;
  uint64_t v64 = a1 + v14[114];
  *(void *)uint64_t v64 = 2160;
  *(unsigned char *)(v64 + 8) = 0;
  uint64_t v65 = a1 + v14[115];
  *(void *)uint64_t v65 = 0x405E000000000000;
  *(unsigned char *)(v65 + 8) = 0;
  *(unsigned char *)(a1 + v14[116]) = 1;
  if (qword_101636E50 != -1) {
    swift_once();
  }
  uint64_t v66 = a1 + v14[117];
  *(void *)uint64_t v66 = qword_10170E710;
  *(unsigned char *)(v66 + 8) = 0;
  uint64_t v67 = a1 + v14[118];
  *(void *)uint64_t v67 = 0x4000000000000000;
  *(unsigned char *)(v67 + 8) = 0;
  uint64_t v68 = a1 + v14[119];
  *(void *)uint64_t v68 = 50;
  *(unsigned char *)(v68 + 8) = 0;
  *(unsigned char *)(a1 + v14[120]) = 1;
  *(unsigned char *)(a1 + v14[121]) = 1;
  *(unsigned char *)(a1 + v14[122]) = 1;
  uint64_t v69 = a1 + v14[123];
  *(void *)uint64_t v69 = 86400;
  *(unsigned char *)(v69 + 8) = 0;
  uint64_t v70 = a1 + v14[124];
  *(void *)uint64_t v70 = 0x4014000000000000;
  *(unsigned char *)(v70 + 8) = 0;
  if (qword_101636E58 != -1) {
    swift_once();
  }
  uint64_t v71 = a1 + v14[125];
  *(void *)uint64_t v71 = qword_10170E718;
  *(unsigned char *)(v71 + 8) = 0;
  uint64_t v72 = a1 + v14[126];
  *(void *)uint64_t v72 = 96;
  *(unsigned char *)(v72 + 8) = 0;
  uint64_t v73 = a1 + v14[127];
  *(void *)uint64_t v73 = 0;
  *(unsigned char *)(v73 + 8) = 0;
  uint64_t v74 = a1 + v14[128];
  *(void *)uint64_t v74 = 96;
  *(unsigned char *)(v74 + 8) = 0;
  uint64_t v75 = a1 + v14[129];
  *(void *)uint64_t v75 = 0;
  *(unsigned char *)(v75 + 8) = 0;
  if (qword_101636E60 != -1) {
    swift_once();
  }
  uint64_t v76 = a1 + v14[130];
  *(void *)uint64_t v76 = qword_10170E720;
  *(unsigned char *)(v76 + 8) = 0;
  *(unsigned char *)(a1 + v14[131]) = 1;
  uint64_t v77 = a1 + v14[132];
  *(void *)uint64_t v77 = 0x404E000000000000;
  *(unsigned char *)(v77 + 8) = 0;
  if (qword_101636E70 != -1) {
    swift_once();
  }
  *(void *)(a1 + v14[133]) = qword_10170E730;
  uint64_t v78 = qword_101636E68;
  swift_bridgeObjectRetain();
  if (v78 != -1) {
    swift_once();
  }
  uint64_t v79 = a1 + v14[134];
  *(void *)uint64_t v79 = qword_10170E728;
  *(unsigned char *)(v79 + 8) = 0;
  *(unsigned char *)(a1 + v14[135]) = 1;
  if (qword_101636E78 != -1) {
    swift_once();
  }
  *(void *)(a1 + v14[136]) = qword_10170E738;
  *(unsigned char *)(a1 + v14[137]) = 0;
  uint64_t v80 = a1 + v14[138];
  *(void *)uint64_t v80 = 0x3FB999999999999ALL;
  *(unsigned char *)(v80 + 8) = 0;
  uint64_t v81 = a1 + v14[139];
  *(void *)uint64_t v81 = 0x40F5180000000000;
  *(unsigned char *)(v81 + 8) = 0;
  *(unsigned char *)(a1 + v14[140]) = 1;
  *(unsigned char *)(a1 + v14[141]) = 0;
  uint64_t v82 = a1 + v14[142];
  *(void *)uint64_t v82 = 6;
  *(unsigned char *)(v82 + 8) = 0;
  uint64_t v83 = a1 + v14[143];
  *(void *)uint64_t v83 = 8;
  *(unsigned char *)(v83 + 8) = 0;
  uint64_t v84 = a1 + v14[144];
  *(void *)uint64_t v84 = 165;
  *(unsigned char *)(v84 + 8) = 0;
  uint64_t v85 = a1 + v14[145];
  *(void *)uint64_t v85 = 32;
  *(unsigned char *)(v85 + 8) = 0;
  uint64_t v86 = a1 + v14[146];
  *(void *)uint64_t v86 = 32;
  *(unsigned char *)(v86 + 8) = 0;
  uint64_t v87 = a1 + v14[147];
  *(void *)uint64_t v87 = 200;
  *(unsigned char *)(v87 + 8) = 0;
  uint64_t v88 = a1 + v14[148];
  *(void *)uint64_t v88 = 5;
  *(unsigned char *)(v88 + 8) = 0;
  uint64_t v89 = a1 + v14[149];
  *(void *)uint64_t v89 = 32;
  *(unsigned char *)(v89 + 8) = 0;
  uint64_t v90 = a1 + v14[150];
  *(void *)uint64_t v90 = 1160;
  *(unsigned char *)(v90 + 8) = 0;
  uint64_t v91 = a1 + v14[151];
  *(void *)uint64_t v91 = 7;
  *(unsigned char *)(v91 + 8) = 0;
  uint64_t v92 = a1 + v14[152];
  *(void *)uint64_t v92 = 3;
  *(unsigned char *)(v92 + 8) = 0;
  uint64_t v93 = a1 + v14[153];
  *(void *)uint64_t v93 = 3;
  *(unsigned char *)(v93 + 8) = 0;
  uint64_t v94 = a1 + v14[154];
  *(void *)uint64_t v94 = 30;
  *(unsigned char *)(v94 + 8) = 0;
  uint64_t v95 = a1 + v14[155];
  *(void *)uint64_t v95 = 300;
  *(unsigned char *)(v95 + 8) = 0;
  uint64_t v96 = a1 + v14[156];
  *(void *)uint64_t v96 = 2160;
  *(unsigned char *)(v96 + 8) = 0;
  uint64_t v97 = a1 + v14[157];
  *(void *)uint64_t v97 = 1200;
  *(unsigned char *)(v97 + 8) = 0;
  uint64_t v98 = a1 + v14[158];
  *(void *)uint64_t v98 = 0x404E000000000000;
  *(unsigned char *)(v98 + 8) = 0;
  uint64_t v99 = a1 + v14[159];
  *(void *)uint64_t v99 = 0x4132750000000000;
  *(unsigned char *)(v99 + 8) = 0;
  *(unsigned char *)(a1 + v14[160]) = 0;
  uint64_t v100 = a1 + v14[161];
  *(void *)uint64_t v100 = 0x408A400000000000;
  *(unsigned char *)(v100 + 8) = 0;
  uint64_t v101 = a1 + v14[162];
  *(void *)uint64_t v101 = 0x405E000000000000;
  *(unsigned char *)(v101 + 8) = 0;
  uint64_t v102 = a1 + v14[163];
  *(void *)uint64_t v102 = 0x4122750000000000;
  *(unsigned char *)(v102 + 8) = 0;
  v103 = (void *)(a1 + v14[164]);
  void *v103 = 0xD00000000000001BLL;
  v103[1] = 0x800000010140C950;
  uint64_t v104 = a1 + v14[165];
  *(void *)uint64_t v104 = 32;
  *(unsigned char *)(v104 + 8) = 0;
  *(unsigned char *)(a1 + v14[166]) = 0;
  *(unsigned char *)(a1 + v14[167]) = 0;
  uint64_t v105 = a1 + v14[168];
  *(void *)uint64_t v105 = 0x40AC200000000000;
  *(unsigned char *)(v105 + 8) = 0;
  uint64_t v106 = a1 + v14[169];
  *(void *)uint64_t v106 = 0x409C200000000000;
  *(unsigned char *)(v106 + 8) = 0;
  *(unsigned char *)(a1 + v14[170]) = 0;
  uint64_t v107 = a1 + v14[171];
  *(_DWORD *)uint64_t v107 = 2;
  *(unsigned char *)(v107 + 4) = 0;
  uint64_t v108 = a1 + v14[172];
  *(void *)uint64_t v108 = 10;
  *(unsigned char *)(v108 + 8) = 0;
  uint64_t v109 = a1 + v14[173];
  *(void *)uint64_t v109 = 0x404E000000000000;
  *(unsigned char *)(v109 + 8) = 0;
  uint64_t v110 = a1 + v14[174];
  *(void *)uint64_t v110 = 0x4034000000000000;
  *(unsigned char *)(v110 + 8) = 0;
  uint64_t v111 = a1 + v14[175];
  *(void *)uint64_t v111 = 0x4014000000000000;
  *(unsigned char *)(v111 + 8) = 0;
  uint64_t v112 = a1 + v14[176];
  *(void *)uint64_t v112 = 0x408C200000000000;
  *(unsigned char *)(v112 + 8) = 0;
  uint64_t v113 = a1 + v14[177];
  *(void *)uint64_t v113 = 0x408C200000000000;
  *(unsigned char *)(v113 + 8) = 0;
  uint64_t v114 = a1 + v14[178];
  *(void *)uint64_t v114 = 0x404E000000000000;
  *(unsigned char *)(v114 + 8) = 0;
  *(unsigned char *)(a1 + v14[179]) = 1;
  uint64_t v115 = a1 + v14[180];
  *(void *)uint64_t v115 = 0x40F5180000000000;
  *(unsigned char *)(v115 + 8) = 0;
  uint64_t v116 = a1 + v14[181];
  *(void *)uint64_t v116 = 0x4122750000000000;
  *(unsigned char *)(v116 + 8) = 0;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100931F64@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for DefaultConfigurationLayer();
  id v7 = (int *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)v689 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_10001CD44(a1, v10);
  *(void *)long long v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  *((void *)v9 + 1) = v12;
  v9[25] = a2;
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_10001CD44(a1, v13);
  *((void *)v9 + 2) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14);
  v9[24] = v15 & 1;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_10001CD44(a1, v16);
  *((void *)v9 + 4) = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17);
  v9[40] = v18 & 1;
  uint64_t v19 = a1[3];
  uint64_t v20 = a1[4];
  sub_10001CD44(a1, v19);
  *((void *)v9 + 6) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(v19, v20);
  v9[56] = v21 & 1;
  uint64_t v22 = a1[3];
  uint64_t v23 = a1[4];
  sub_10001CD44(a1, v22);
  v9[57] = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v22, v23);
  uint64_t v24 = a1[3];
  uint64_t v25 = a1[4];
  sub_10001CD44(a1, v24);
  *((void *)v9 + 8) = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 48))(v24, v25);
  uint64_t v26 = a1[3];
  uint64_t v27 = a1[4];
  sub_10001CD44(a1, v26);
  v9[72] = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
  uint64_t v28 = a1[3];
  uint64_t v29 = a1[4];
  sub_10001CD44(a1, v28);
  *((void *)v9 + 10) = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 64))(v28, v29);
  *((void *)v9 + 11) = v30;
  uint64_t v31 = a1[3];
  uint64_t v32 = a1[4];
  sub_10001CD44(a1, v31);
  *((void *)v9 + 12) = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 80))(v31, v32);
  v9[104] = v33 & 1;
  uint64_t v34 = a1[3];
  uint64_t v35 = a1[4];
  sub_10001CD44(a1, v34);
  v9[105] = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 72))(v34, v35);
  uint64_t v36 = a1[3];
  uint64_t v37 = a1[4];
  sub_10001CD44(a1, v36);
  v9[106] = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 88))(v36, v37);
  uint64_t v38 = a1[3];
  uint64_t v39 = a1[4];
  sub_10001CD44(a1, v38);
  *((void *)v9 + 14) = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 96))(v38, v39);
  v9[120] = v40 & 1;
  uint64_t v41 = a1[3];
  uint64_t v42 = a1[4];
  sub_10001CD44(a1, v41);
  *((void *)v9 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 104))(v41, v42);
  v9[136] = v43 & 1;
  uint64_t v44 = a1[3];
  uint64_t v45 = a1[4];
  sub_10001CD44(a1, v44);
  *((void *)v9 + 18) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 112))(v44, v45);
  v9[152] = v46 & 1;
  uint64_t v47 = a1[3];
  uint64_t v48 = a1[4];
  sub_10001CD44(a1, v47);
  *((void *)v9 + 20) = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 120))(v47, v48);
  v9[168] = v49 & 1;
  uint64_t v50 = a1[3];
  uint64_t v51 = a1[4];
  sub_10001CD44(a1, v50);
  *((void *)v9 + 22) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 128))(v50, v51);
  v9[184] = v52 & 1;
  uint64_t v53 = a1[3];
  uint64_t v54 = a1[4];
  sub_10001CD44(a1, v53);
  *((void *)v9 + 24) = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 136))(v53, v54);
  v9[200] = v55 & 1;
  uint64_t v56 = a1[3];
  uint64_t v57 = a1[4];
  sub_10001CD44(a1, v56);
  *((void *)v9 + 26) = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 144))(v56, v57);
  v9[216] = v58 & 1;
  uint64_t v59 = a1[3];
  uint64_t v60 = a1[4];
  sub_10001CD44(a1, v59);
  *((void *)v9 + 28) = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 152))(v59, v60);
  v9[232] = v61 & 1;
  uint64_t v62 = a1[3];
  uint64_t v63 = a1[4];
  sub_10001CD44(a1, v62);
  *((void *)v9 + 30) = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 160))(v62, v63);
  v9[248] = v64 & 1;
  uint64_t v65 = a1[3];
  uint64_t v66 = a1[4];
  sub_10001CD44(a1, v65);
  *((void *)v9 + 32) = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 168))(v65, v66);
  v9[264] = v67 & 1;
  uint64_t v68 = a1[3];
  uint64_t v69 = a1[4];
  sub_10001CD44(a1, v68);
  *((void *)v9 + 34) = (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 176))(v68, v69);
  v9[280] = v70 & 1;
  uint64_t v71 = a1[3];
  uint64_t v72 = a1[4];
  sub_10001CD44(a1, v71);
  *((void *)v9 + 36) = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 184))(v71, v72);
  v9[296] = v73 & 1;
  uint64_t v74 = a1[3];
  uint64_t v75 = a1[4];
  sub_10001CD44(a1, v74);
  *((void *)v9 + 38) = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 192))(v74, v75);
  v9[312] = v76 & 1;
  uint64_t v77 = a1[3];
  uint64_t v78 = a1[4];
  sub_10001CD44(a1, v77);
  v9[313] = (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 200))(v77, v78);
  uint64_t v79 = a1[3];
  uint64_t v80 = a1[4];
  sub_10001CD44(a1, v79);
  *((void *)v9 + 40) = (*(uint64_t (**)(uint64_t, uint64_t))(v80 + 208))(v79, v80);
  uint64_t v81 = a1[3];
  uint64_t v82 = a1[4];
  sub_10001CD44(a1, v81);
  *((void *)v9 + 41) = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 216))(v81, v82);
  v9[336] = v83 & 1;
  uint64_t v84 = a1[3];
  uint64_t v85 = a1[4];
  sub_10001CD44(a1, v84);
  *((void *)v9 + 43) = (*(uint64_t (**)(uint64_t, uint64_t))(v85 + 224))(v84, v85);
  v9[352] = v86 & 1;
  uint64_t v87 = a1[3];
  uint64_t v88 = a1[4];
  sub_10001CD44(a1, v87);
  *((void *)v9 + 45) = (*(uint64_t (**)(uint64_t, uint64_t))(v88 + 232))(v87, v88);
  v9[368] = v89 & 1;
  uint64_t v90 = a1[3];
  uint64_t v91 = a1[4];
  sub_10001CD44(a1, v90);
  *((void *)v9 + 47) = (*(uint64_t (**)(uint64_t, uint64_t))(v91 + 240))(v90, v91);
  v9[384] = v92 & 1;
  uint64_t v93 = a1[3];
  uint64_t v94 = a1[4];
  sub_10001CD44(a1, v93);
  *((void *)v9 + 49) = (*(uint64_t (**)(uint64_t, uint64_t))(v94 + 248))(v93, v94);
  v9[400] = v95 & 1;
  uint64_t v96 = a1[3];
  uint64_t v97 = a1[4];
  sub_10001CD44(a1, v96);
  *((void *)v9 + 51) = (*(uint64_t (**)(uint64_t, uint64_t))(v97 + 256))(v96, v97);
  v9[416] = v98 & 1;
  uint64_t v99 = a1[3];
  uint64_t v100 = a1[4];
  sub_10001CD44(a1, v99);
  *((void *)v9 + 53) = (*(uint64_t (**)(uint64_t, uint64_t))(v100 + 264))(v99, v100);
  v9[432] = v101 & 1;
  uint64_t v102 = a1[3];
  uint64_t v103 = a1[4];
  sub_10001CD44(a1, v102);
  *((void *)v9 + 55) = (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 264))(v102, v103);
  v9[448] = v104 & 1;
  uint64_t v105 = a1[3];
  uint64_t v106 = a1[4];
  sub_10001CD44(a1, v105);
  *((void *)v9 + 57) = (*(uint64_t (**)(uint64_t, uint64_t))(v106 + 280))(v105, v106);
  v9[464] = v107 & 1;
  uint64_t v108 = a1[3];
  uint64_t v109 = a1[4];
  sub_10001CD44(a1, v108);
  *((void *)v9 + 59) = (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 288))(v108, v109);
  v9[480] = v110 & 1;
  uint64_t v111 = a1[3];
  uint64_t v112 = a1[4];
  sub_10001CD44(a1, v111);
  v9[481] = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 296))(v111, v112);
  uint64_t v113 = a1[3];
  uint64_t v114 = a1[4];
  sub_10001CD44(a1, v113);
  *((void *)v9 + 61) = (*(uint64_t (**)(uint64_t, uint64_t))(v114 + 304))(v113, v114);
  v9[496] = v115 & 1;
  uint64_t v116 = a1[3];
  uint64_t v117 = a1[4];
  sub_10001CD44(a1, v116);
  *((void *)v9 + 63) = (*(uint64_t (**)(uint64_t, uint64_t))(v117 + 312))(v116, v117);
  v9[512] = v118 & 1;
  uint64_t v119 = a1[3];
  uint64_t v120 = a1[4];
  sub_10001CD44(a1, v119);
  *((void *)v9 + 65) = (*(uint64_t (**)(uint64_t, uint64_t))(v120 + 320))(v119, v120);
  v9[528] = v121 & 1;
  uint64_t v122 = a1[3];
  uint64_t v123 = a1[4];
  sub_10001CD44(a1, v122);
  *((void *)v9 + 67) = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 328))(v122, v123);
  v9[544] = v124 & 1;
  uint64_t v125 = a1[3];
  uint64_t v126 = a1[4];
  sub_10001CD44(a1, v125);
  *((void *)v9 + 69) = (*(uint64_t (**)(uint64_t, uint64_t))(v126 + 336))(v125, v126);
  v9[560] = v127 & 1;
  uint64_t v128 = a1[3];
  uint64_t v129 = a1[4];
  sub_10001CD44(a1, v128);
  *((void *)v9 + 71) = (*(uint64_t (**)(uint64_t, uint64_t))(v129 + 344))(v128, v129);
  v9[576] = v130 & 1;
  uint64_t v131 = a1[3];
  uint64_t v132 = a1[4];
  sub_10001CD44(a1, v131);
  *((void *)v9 + 73) = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 352))(v131, v132);
  v9[592] = v133 & 1;
  uint64_t v134 = a1[3];
  uint64_t v135 = a1[4];
  sub_10001CD44(a1, v134);
  *((void *)v9 + 75) = (*(uint64_t (**)(uint64_t, uint64_t))(v135 + 360))(v134, v135);
  uint64_t v136 = a1[3];
  uint64_t v137 = a1[4];
  sub_10001CD44(a1, v136);
  *((void *)v9 + 76) = (*(uint64_t (**)(uint64_t, uint64_t))(v137 + 368))(v136, v137);
  v9[616] = v138 & 1;
  uint64_t v139 = a1[3];
  uint64_t v140 = a1[4];
  sub_10001CD44(a1, v139);
  *((void *)v9 + 78) = (*(uint64_t (**)(uint64_t, uint64_t))(v140 + 376))(v139, v140);
  v9[632] = v141 & 1;
  uint64_t v142 = a1[3];
  uint64_t v143 = a1[4];
  sub_10001CD44(a1, v142);
  *((void *)v9 + 80) = (*(uint64_t (**)(uint64_t, uint64_t))(v143 + 384))(v142, v143);
  uint64_t v144 = a1[3];
  uint64_t v145 = a1[4];
  sub_10001CD44(a1, v144);
  *((void *)v9 + 81) = (*(uint64_t (**)(uint64_t, uint64_t))(v145 + 392))(v144, v145);
  uint64_t v146 = a1[3];
  uint64_t v147 = a1[4];
  sub_10001CD44(a1, v146);
  *((void *)v9 + 82) = (*(uint64_t (**)(uint64_t, uint64_t))(v147 + 400))(v146, v147);
  v9[664] = v148 & 1;
  uint64_t v149 = a1[3];
  uint64_t v150 = a1[4];
  sub_10001CD44(a1, v149);
  *((void *)v9 + 84) = (*(uint64_t (**)(uint64_t, uint64_t))(v150 + 408))(v149, v150);
  v9[680] = v151 & 1;
  uint64_t v152 = a1[3];
  uint64_t v153 = a1[4];
  sub_10001CD44(a1, v152);
  *((void *)v9 + 86) = (*(uint64_t (**)(uint64_t, uint64_t))(v153 + 416))(v152, v153);
  v9[696] = v154 & 1;
  uint64_t v155 = a1[3];
  uint64_t v156 = a1[4];
  sub_10001CD44(a1, v155);
  *((void *)v9 + 88) = (*(uint64_t (**)(uint64_t, uint64_t))(v156 + 424))(v155, v156);
  v9[712] = v157 & 1;
  uint64_t v158 = a1[3];
  uint64_t v159 = a1[4];
  sub_10001CD44(a1, v158);
  *((void *)v9 + 90) = (*(uint64_t (**)(uint64_t, uint64_t))(v159 + 432))(v158, v159);
  v9[728] = v160 & 1;
  uint64_t v161 = a1[3];
  uint64_t v162 = a1[4];
  sub_10001CD44(a1, v161);
  v9[729] = (*(uint64_t (**)(uint64_t, uint64_t))(v162 + 440))(v161, v162);
  uint64_t v163 = a1[3];
  uint64_t v164 = a1[4];
  sub_10001CD44(a1, v163);
  (*(void (**)(uint64_t, uint64_t))(v164 + 448))(v163, v164);
  uint64_t v165 = a1[3];
  uint64_t v166 = a1[4];
  sub_10001CD44(a1, v165);
  (*(void (**)(uint64_t, uint64_t))(v166 + 456))(v165, v166);
  uint64_t v167 = a1[3];
  uint64_t v168 = a1[4];
  sub_10001CD44(a1, v167);
  uint64_t v169 = (*(uint64_t (**)(uint64_t, uint64_t))(v168 + 464))(v167, v168);
  v170 = &v9[v7[64]];
  *(void *)v170 = v169;
  v170[8] = v171 & 1;
  uint64_t v172 = a1[3];
  uint64_t v173 = a1[4];
  sub_10001CD44(a1, v172);
  (*(void (**)(uint64_t, uint64_t))(v173 + 472))(v172, v173);
  uint64_t v174 = a1[3];
  uint64_t v175 = a1[4];
  sub_10001CD44(a1, v174);
  uint64_t v176 = (*(uint64_t (**)(uint64_t, uint64_t))(v175 + 480))(v174, v175);
  v177 = &v9[v7[66]];
  *(void *)v177 = v176;
  v177[8] = v178 & 1;
  uint64_t v179 = a1[3];
  uint64_t v180 = a1[4];
  sub_10001CD44(a1, v179);
  uint64_t v181 = (*(uint64_t (**)(uint64_t, uint64_t))(v180 + 488))(v179, v180);
  v182 = &v9[v7[67]];
  *(void *)v182 = v181;
  v182[8] = v183 & 1;
  uint64_t v184 = a1[3];
  uint64_t v185 = a1[4];
  sub_10001CD44(a1, v184);
  uint64_t v186 = (*(uint64_t (**)(uint64_t, uint64_t))(v185 + 496))(v184, v185);
  v187 = &v9[v7[68]];
  *(void *)v187 = v186;
  v187[8] = v188 & 1;
  uint64_t v189 = a1[3];
  uint64_t v190 = a1[4];
  sub_10001CD44(a1, v189);
  uint64_t v191 = (*(uint64_t (**)(uint64_t, uint64_t))(v190 + 504))(v189, v190);
  v192 = &v9[v7[69]];
  *(void *)v192 = v191;
  v192[8] = v193 & 1;
  uint64_t v194 = a1[3];
  uint64_t v195 = a1[4];
  sub_10001CD44(a1, v194);
  uint64_t v196 = (*(uint64_t (**)(uint64_t, uint64_t))(v195 + 512))(v194, v195);
  v197 = &v9[v7[70]];
  *(void *)v197 = v196;
  v197[8] = v198 & 1;
  uint64_t v199 = a1[3];
  uint64_t v200 = a1[4];
  sub_10001CD44(a1, v199);
  uint64_t v201 = (*(uint64_t (**)(uint64_t, uint64_t))(v200 + 520))(v199, v200);
  v202 = &v9[v7[71]];
  *(void *)v202 = v201;
  v202[8] = v203 & 1;
  uint64_t v204 = a1[3];
  uint64_t v205 = a1[4];
  sub_10001CD44(a1, v204);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v205 + 528))(v689, v204, v205);
  sub_10001D608((uint64_t)v689, (uint64_t)&v9[v7[72]], &qword_101652428);
  uint64_t v206 = a1[3];
  uint64_t v207 = a1[4];
  sub_10001CD44(a1, v206);
  v9[v7[73]] = (*(uint64_t (**)(uint64_t, uint64_t))(v207 + 536))(v206, v207);
  uint64_t v208 = a1[3];
  uint64_t v209 = a1[4];
  sub_10001CD44(a1, v208);
  v9[v7[74]] = (*(uint64_t (**)(uint64_t, uint64_t))(v209 + 544))(v208, v209);
  uint64_t v210 = a1[3];
  uint64_t v211 = a1[4];
  sub_10001CD44(a1, v210);
  v9[v7[75]] = (*(uint64_t (**)(uint64_t, uint64_t))(v211 + 552))(v210, v211);
  uint64_t v212 = a1[3];
  uint64_t v213 = a1[4];
  sub_10001CD44(a1, v212);
  uint64_t v214 = (*(uint64_t (**)(uint64_t, uint64_t))(v213 + 560))(v212, v213);
  v215 = &v9[v7[76]];
  *(void *)v215 = v214;
  v215[8] = v216 & 1;
  uint64_t v217 = a1[3];
  uint64_t v218 = a1[4];
  sub_10001CD44(a1, v217);
  uint64_t v219 = (*(uint64_t (**)(uint64_t, uint64_t))(v218 + 568))(v217, v218);
  v220 = &v9[v7[77]];
  *(void *)v220 = v219;
  v220[8] = v221 & 1;
  uint64_t v222 = a1[3];
  uint64_t v223 = a1[4];
  sub_10001CD44(a1, v222);
  uint64_t v224 = (*(uint64_t (**)(uint64_t, uint64_t))(v223 + 576))(v222, v223);
  v225 = &v9[v7[78]];
  *(void *)v225 = v224;
  v225[8] = v226 & 1;
  uint64_t v227 = a1[3];
  uint64_t v228 = a1[4];
  sub_10001CD44(a1, v227);
  uint64_t v229 = (*(uint64_t (**)(uint64_t, uint64_t))(v228 + 584))(v227, v228);
  v230 = &v9[v7[79]];
  *(void *)v230 = v229;
  v230[8] = v231 & 1;
  uint64_t v232 = a1[3];
  uint64_t v233 = a1[4];
  sub_10001CD44(a1, v232);
  uint64_t v234 = (*(uint64_t (**)(uint64_t, uint64_t))(v233 + 592))(v232, v233);
  v235 = &v9[v7[80]];
  *(void *)v235 = v234;
  v235[8] = v236 & 1;
  uint64_t v237 = a1[3];
  uint64_t v238 = a1[4];
  sub_10001CD44(a1, v237);
  uint64_t v239 = (*(uint64_t (**)(uint64_t, uint64_t))(v238 + 600))(v237, v238);
  v240 = &v9[v7[81]];
  *(void *)v240 = v239;
  v240[8] = v241 & 1;
  uint64_t v242 = a1[3];
  uint64_t v243 = a1[4];
  sub_10001CD44(a1, v242);
  uint64_t v244 = (*(uint64_t (**)(uint64_t, uint64_t))(v243 + 608))(v242, v243);
  v245 = &v9[v7[82]];
  *(void *)v245 = v244;
  v245[8] = v246 & 1;
  uint64_t v247 = a1[3];
  uint64_t v248 = a1[4];
  sub_10001CD44(a1, v247);
  uint64_t v249 = (*(uint64_t (**)(uint64_t, uint64_t))(v248 + 616))(v247, v248);
  v250 = &v9[v7[83]];
  *(void *)v250 = v249;
  v250[8] = v251 & 1;
  uint64_t v252 = a1[3];
  uint64_t v253 = a1[4];
  sub_10001CD44(a1, v252);
  uint64_t v254 = (*(uint64_t (**)(uint64_t, uint64_t))(v253 + 624))(v252, v253);
  v255 = &v9[v7[84]];
  *(void *)v255 = v254;
  v255[8] = v256 & 1;
  uint64_t v257 = a1[3];
  uint64_t v258 = a1[4];
  sub_10001CD44(a1, v257);
  uint64_t v259 = (*(uint64_t (**)(uint64_t, uint64_t))(v258 + 632))(v257, v258);
  v260 = (uint64_t *)&v9[v7[85]];
  uint64_t *v260 = v259;
  v260[1] = v261;
  uint64_t v262 = a1[3];
  uint64_t v263 = a1[4];
  sub_10001CD44(a1, v262);
  uint64_t v264 = (*(uint64_t (**)(uint64_t, uint64_t))(v263 + 640))(v262, v263);
  v265 = &v9[v7[86]];
  *(void *)v265 = v264;
  v265[8] = v266 & 1;
  uint64_t v267 = a1[3];
  uint64_t v268 = a1[4];
  sub_10001CD44(a1, v267);
  uint64_t v269 = (*(uint64_t (**)(uint64_t, uint64_t))(v268 + 648))(v267, v268);
  v270 = (uint64_t *)&v9[v7[87]];
  uint64_t *v270 = v269;
  v270[1] = v271;
  uint64_t v272 = a1[3];
  uint64_t v273 = a1[4];
  sub_10001CD44(a1, v272);
  uint64_t v274 = (*(uint64_t (**)(uint64_t, uint64_t))(v273 + 656))(v272, v273);
  v275 = &v9[v7[88]];
  *(void *)v275 = v274;
  v275[8] = v276 & 1;
  uint64_t v277 = a1[3];
  uint64_t v278 = a1[4];
  sub_10001CD44(a1, v277);
  *(void *)&v9[v7[89]] = (*(uint64_t (**)(uint64_t, uint64_t))(v278 + 664))(v277, v278);
  uint64_t v279 = a1[3];
  uint64_t v280 = a1[4];
  sub_10001CD44(a1, v279);
  uint64_t v281 = (*(uint64_t (**)(uint64_t, uint64_t))(v280 + 672))(v279, v280);
  v282 = (uint64_t *)&v9[v7[90]];
  uint64_t *v282 = v281;
  v282[1] = v283;
  uint64_t v284 = a1[3];
  uint64_t v285 = a1[4];
  sub_10001CD44(a1, v284);
  uint64_t v286 = (*(uint64_t (**)(uint64_t, uint64_t))(v285 + 680))(v284, v285);
  v287 = &v9[v7[91]];
  *(void *)v287 = v286;
  v287[8] = v288 & 1;
  uint64_t v289 = a1[3];
  uint64_t v290 = a1[4];
  sub_10001CD44(a1, v289);
  uint64_t v291 = (*(uint64_t (**)(uint64_t, uint64_t))(v290 + 720))(v289, v290);
  v292 = &v9[v7[96]];
  *(void *)v292 = v291;
  v292[8] = v293 & 1;
  uint64_t v294 = a1[3];
  uint64_t v295 = a1[4];
  sub_10001CD44(a1, v294);
  uint64_t v296 = (*(uint64_t (**)(uint64_t, uint64_t))(v295 + 728))(v294, v295);
  v297 = &v9[v7[97]];
  *(void *)v297 = v296;
  v297[8] = v298 & 1;
  uint64_t v299 = a1[3];
  uint64_t v300 = a1[4];
  sub_10001CD44(a1, v299);
  uint64_t v301 = (*(uint64_t (**)(uint64_t, uint64_t))(v300 + 736))(v299, v300);
  v302 = &v9[v7[98]];
  *(void *)v302 = v301;
  v302[8] = v303 & 1;
  uint64_t v304 = a1[3];
  uint64_t v305 = a1[4];
  sub_10001CD44(a1, v304);
  uint64_t v306 = (*(uint64_t (**)(uint64_t, uint64_t))(v305 + 744))(v304, v305);
  v307 = &v9[v7[99]];
  *(void *)v307 = v306;
  v307[8] = v308 & 1;
  uint64_t v309 = a1[3];
  uint64_t v310 = a1[4];
  sub_10001CD44(a1, v309);
  uint64_t v311 = (*(uint64_t (**)(uint64_t, uint64_t))(v310 + 752))(v309, v310);
  v312 = &v9[v7[100]];
  *(void *)v312 = v311;
  v312[8] = v313 & 1;
  uint64_t v314 = a1[3];
  uint64_t v315 = a1[4];
  sub_10001CD44(a1, v314);
  uint64_t v316 = (*(uint64_t (**)(uint64_t, uint64_t))(v315 + 760))(v314, v315);
  v317 = &v9[v7[101]];
  *(void *)v317 = v316;
  v317[8] = v318 & 1;
  uint64_t v319 = a1[3];
  uint64_t v320 = a1[4];
  sub_10001CD44(a1, v319);
  uint64_t v321 = (*(uint64_t (**)(uint64_t, uint64_t))(v320 + 768))(v319, v320);
  v322 = &v9[v7[102]];
  *(void *)v322 = v321;
  v322[8] = v323 & 1;
  uint64_t v324 = a1[3];
  uint64_t v325 = a1[4];
  sub_10001CD44(a1, v324);
  uint64_t v326 = (*(uint64_t (**)(uint64_t, uint64_t))(v325 + 776))(v324, v325);
  v327 = &v9[v7[103]];
  *(void *)v327 = v326;
  v327[8] = v328 & 1;
  uint64_t v329 = a1[3];
  uint64_t v330 = a1[4];
  sub_10001CD44(a1, v329);
  uint64_t v331 = (*(uint64_t (**)(uint64_t, uint64_t))(v330 + 784))(v329, v330);
  v332 = &v9[v7[104]];
  *(void *)v332 = v331;
  v332[8] = v333 & 1;
  uint64_t v334 = a1[3];
  uint64_t v335 = a1[4];
  sub_10001CD44(a1, v334);
  uint64_t v336 = (*(uint64_t (**)(uint64_t, uint64_t))(v335 + 792))(v334, v335);
  v337 = &v9[v7[105]];
  *(void *)v337 = v336;
  v337[8] = v338 & 1;
  uint64_t v339 = a1[3];
  uint64_t v340 = a1[4];
  sub_10001CD44(a1, v339);
  uint64_t v341 = (*(uint64_t (**)(uint64_t, uint64_t))(v340 + 800))(v339, v340);
  v342 = &v9[v7[106]];
  *(void *)v342 = v341;
  v342[8] = v343 & 1;
  uint64_t v344 = a1[3];
  uint64_t v345 = a1[4];
  sub_10001CD44(a1, v344);
  v9[v7[92]] = (*(uint64_t (**)(uint64_t, uint64_t))(v345 + 688))(v344, v345);
  uint64_t v346 = a1[3];
  uint64_t v347 = a1[4];
  sub_10001CD44(a1, v346);
  v9[v7[93]] = (*(uint64_t (**)(uint64_t, uint64_t))(v347 + 696))(v346, v347);
  uint64_t v348 = a1[3];
  uint64_t v349 = a1[4];
  sub_10001CD44(a1, v348);
  v9[v7[94]] = (*(uint64_t (**)(uint64_t, uint64_t))(v349 + 704))(v348, v349);
  uint64_t v350 = a1[3];
  uint64_t v351 = a1[4];
  sub_10001CD44(a1, v350);
  v9[v7[95]] = (*(uint64_t (**)(uint64_t, uint64_t))(v351 + 712))(v350, v351);
  uint64_t v352 = a1[3];
  uint64_t v353 = a1[4];
  sub_10001CD44(a1, v352);
  uint64_t v354 = (*(uint64_t (**)(uint64_t, uint64_t))(v353 + 808))(v352, v353);
  v355 = &v9[v7[107]];
  *(void *)v355 = v354;
  v355[8] = v356 & 1;
  uint64_t v357 = a1[3];
  uint64_t v358 = a1[4];
  sub_10001CD44(a1, v357);
  uint64_t v359 = (*(uint64_t (**)(uint64_t, uint64_t))(v358 + 816))(v357, v358);
  v360 = &v9[v7[108]];
  *(void *)v360 = v359;
  v360[8] = v361 & 1;
  uint64_t v362 = a1[3];
  uint64_t v363 = a1[4];
  sub_10001CD44(a1, v362);
  uint64_t v364 = (*(uint64_t (**)(uint64_t, uint64_t))(v363 + 824))(v362, v363);
  v365 = &v9[v7[109]];
  *(void *)v365 = v364;
  v365[8] = v366 & 1;
  uint64_t v367 = a1[3];
  uint64_t v368 = a1[4];
  sub_10001CD44(a1, v367);
  uint64_t v369 = (*(uint64_t (**)(uint64_t, uint64_t))(v368 + 832))(v367, v368);
  v370 = &v9[v7[110]];
  *(void *)v370 = v369;
  v370[8] = v371 & 1;
  uint64_t v372 = a1[3];
  uint64_t v373 = a1[4];
  sub_10001CD44(a1, v372);
  uint64_t v374 = (*(uint64_t (**)(uint64_t, uint64_t))(v373 + 840))(v372, v373);
  v375 = &v9[v7[111]];
  *(void *)v375 = v374;
  v375[8] = v376 & 1;
  uint64_t v377 = a1[3];
  uint64_t v378 = a1[4];
  sub_10001CD44(a1, v377);
  uint64_t v379 = (*(uint64_t (**)(uint64_t, uint64_t))(v378 + 848))(v377, v378);
  v380 = &v9[v7[112]];
  *(void *)v380 = v379;
  v380[8] = v381 & 1;
  uint64_t v382 = a1[3];
  uint64_t v383 = a1[4];
  sub_10001CD44(a1, v382);
  uint64_t v384 = (*(uint64_t (**)(uint64_t, uint64_t))(v383 + 856))(v382, v383);
  v385 = &v9[v7[113]];
  *(void *)v385 = v384;
  v385[8] = v386 & 1;
  uint64_t v387 = a1[3];
  uint64_t v388 = a1[4];
  sub_10001CD44(a1, v387);
  uint64_t v389 = (*(uint64_t (**)(uint64_t, uint64_t))(v388 + 864))(v387, v388);
  v390 = &v9[v7[114]];
  *(void *)v390 = v389;
  v390[8] = v391 & 1;
  uint64_t v392 = a1[3];
  uint64_t v393 = a1[4];
  sub_10001CD44(a1, v392);
  uint64_t v394 = (*(uint64_t (**)(uint64_t, uint64_t))(v393 + 872))(v392, v393);
  v395 = &v9[v7[115]];
  *(void *)v395 = v394;
  v395[8] = v396 & 1;
  uint64_t v397 = a1[3];
  uint64_t v398 = a1[4];
  sub_10001CD44(a1, v397);
  uint64_t v399 = (*(uint64_t (**)(uint64_t, uint64_t))(v398 + 880))(v397, v398);
  v400 = &v9[v7[116]];
  *(void *)v400 = v399;
  v400[8] = v401 & 1;
  uint64_t v402 = a1[3];
  uint64_t v403 = a1[4];
  sub_10001CD44(a1, v402);
  uint64_t v404 = (*(uint64_t (**)(uint64_t, uint64_t))(v403 + 888))(v402, v403);
  v405 = &v9[v7[117]];
  *(void *)v405 = v404;
  v405[8] = v406 & 1;
  uint64_t v407 = a1[3];
  uint64_t v408 = a1[4];
  sub_10001CD44(a1, v407);
  v9[v7[118]] = (*(uint64_t (**)(uint64_t, uint64_t))(v408 + 896))(v407, v408);
  uint64_t v409 = a1[3];
  uint64_t v410 = a1[4];
  sub_10001CD44(a1, v409);
  uint64_t v411 = (*(uint64_t (**)(uint64_t, uint64_t))(v410 + 904))(v409, v410);
  v412 = &v9[v7[119]];
  *(void *)v412 = v411;
  v412[8] = v413 & 1;
  uint64_t v414 = a1[3];
  uint64_t v415 = a1[4];
  sub_10001CD44(a1, v414);
  uint64_t v416 = (*(uint64_t (**)(uint64_t, uint64_t))(v415 + 912))(v414, v415);
  v417 = &v9[v7[120]];
  *(void *)v417 = v416;
  v417[8] = v418 & 1;
  uint64_t v419 = a1[3];
  uint64_t v420 = a1[4];
  sub_10001CD44(a1, v419);
  uint64_t v421 = (*(uint64_t (**)(uint64_t, uint64_t))(v420 + 920))(v419, v420);
  v422 = &v9[v7[121]];
  *(void *)v422 = v421;
  v422[8] = v423 & 1;
  uint64_t v424 = a1[3];
  uint64_t v425 = a1[4];
  sub_10001CD44(a1, v424);
  v9[v7[122]] = (*(uint64_t (**)(uint64_t, uint64_t))(v425 + 928))(v424, v425);
  uint64_t v426 = a1[3];
  uint64_t v427 = a1[4];
  sub_10001CD44(a1, v426);
  v9[v7[123]] = (*(uint64_t (**)(uint64_t, uint64_t))(v427 + 936))(v426, v427);
  uint64_t v428 = a1[3];
  uint64_t v429 = a1[4];
  sub_10001CD44(a1, v428);
  v9[v7[124]] = (*(uint64_t (**)(uint64_t, uint64_t))(v429 + 944))(v428, v429);
  uint64_t v430 = a1[3];
  uint64_t v431 = a1[4];
  sub_10001CD44(a1, v430);
  uint64_t v432 = (*(uint64_t (**)(uint64_t, uint64_t))(v431 + 952))(v430, v431);
  v433 = &v9[v7[125]];
  *(void *)v433 = v432;
  v433[8] = v434 & 1;
  uint64_t v435 = a1[3];
  uint64_t v436 = a1[4];
  sub_10001CD44(a1, v435);
  uint64_t v437 = (*(uint64_t (**)(uint64_t, uint64_t))(v436 + 960))(v435, v436);
  v438 = &v9[v7[126]];
  *(void *)v438 = v437;
  v438[8] = v439 & 1;
  uint64_t v440 = a1[3];
  uint64_t v441 = a1[4];
  sub_10001CD44(a1, v440);
  uint64_t v442 = (*(uint64_t (**)(uint64_t, uint64_t))(v441 + 968))(v440, v441);
  v443 = &v9[v7[127]];
  *(void *)v443 = v442;
  v443[8] = v444 & 1;
  uint64_t v445 = a1[3];
  uint64_t v446 = a1[4];
  sub_10001CD44(a1, v445);
  uint64_t v447 = (*(uint64_t (**)(uint64_t, uint64_t))(v446 + 976))(v445, v446);
  v448 = &v9[v7[128]];
  *(void *)v448 = v447;
  v448[8] = v449 & 1;
  uint64_t v450 = a1[3];
  uint64_t v451 = a1[4];
  sub_10001CD44(a1, v450);
  uint64_t v452 = (*(uint64_t (**)(uint64_t, uint64_t))(v451 + 984))(v450, v451);
  v453 = &v9[v7[129]];
  *(void *)v453 = v452;
  v453[8] = v454 & 1;
  uint64_t v455 = a1[3];
  uint64_t v456 = a1[4];
  sub_10001CD44(a1, v455);
  uint64_t v457 = (*(uint64_t (**)(uint64_t, uint64_t))(v456 + 992))(v455, v456);
  v458 = &v9[v7[130]];
  *(void *)v458 = v457;
  v458[8] = v459 & 1;
  uint64_t v460 = a1[3];
  uint64_t v461 = a1[4];
  sub_10001CD44(a1, v460);
  uint64_t v462 = (*(uint64_t (**)(uint64_t, uint64_t))(v461 + 1000))(v460, v461);
  v463 = &v9[v7[131]];
  *(void *)v463 = v462;
  v463[8] = v464 & 1;
  uint64_t v465 = a1[3];
  uint64_t v466 = a1[4];
  sub_10001CD44(a1, v465);
  uint64_t v467 = (*(uint64_t (**)(uint64_t, uint64_t))(v466 + 1008))(v465, v466);
  v468 = &v9[v7[132]];
  *(void *)v468 = v467;
  v468[8] = v469 & 1;
  uint64_t v470 = a1[3];
  uint64_t v471 = a1[4];
  sub_10001CD44(a1, v470);
  v9[v7[133]] = (*(uint64_t (**)(uint64_t, uint64_t))(v471 + 1016))(v470, v471);
  uint64_t v472 = a1[3];
  uint64_t v473 = a1[4];
  sub_10001CD44(a1, v472);
  uint64_t v474 = (*(uint64_t (**)(uint64_t, uint64_t))(v473 + 1024))(v472, v473);
  v475 = &v9[v7[134]];
  *(void *)v475 = v474;
  v475[8] = v476 & 1;
  uint64_t v477 = a1[3];
  uint64_t v478 = a1[4];
  sub_10001CD44(a1, v477);
  *(void *)&v9[v7[135]] = (*(uint64_t (**)(uint64_t, uint64_t))(v478 + 1032))(v477, v478);
  uint64_t v479 = a1[3];
  uint64_t v480 = a1[4];
  sub_10001CD44(a1, v479);
  uint64_t v481 = (*(uint64_t (**)(uint64_t, uint64_t))(v480 + 1040))(v479, v480);
  v482 = &v9[v7[136]];
  *(void *)v482 = v481;
  v482[8] = v483 & 1;
  uint64_t v484 = a1[3];
  uint64_t v485 = a1[4];
  sub_10001CD44(a1, v484);
  v9[v7[137]] = (*(uint64_t (**)(uint64_t, uint64_t))(v485 + 1048))(v484, v485);
  uint64_t v486 = a1[3];
  uint64_t v487 = a1[4];
  sub_10001CD44(a1, v486);
  *(void *)&v9[v7[138]] = (*(uint64_t (**)(uint64_t, uint64_t))(v487 + 1056))(v486, v487);
  uint64_t v488 = a1[3];
  uint64_t v489 = a1[4];
  sub_10001CD44(a1, v488);
  v9[v7[139]] = (*(uint64_t (**)(uint64_t, uint64_t))(v489 + 1064))(v488, v489);
  uint64_t v490 = a1[3];
  uint64_t v491 = a1[4];
  sub_10001CD44(a1, v490);
  uint64_t v492 = (*(uint64_t (**)(uint64_t, uint64_t))(v491 + 1072))(v490, v491);
  v493 = &v9[v7[140]];
  *(void *)v493 = v492;
  v493[8] = v494 & 1;
  uint64_t v495 = a1[3];
  uint64_t v496 = a1[4];
  sub_10001CD44(a1, v495);
  uint64_t v497 = (*(uint64_t (**)(uint64_t, uint64_t))(v496 + 1080))(v495, v496);
  v498 = &v9[v7[141]];
  *(void *)v498 = v497;
  v498[8] = v499 & 1;
  uint64_t v500 = a1[3];
  uint64_t v501 = a1[4];
  sub_10001CD44(a1, v500);
  v9[v7[142]] = (*(uint64_t (**)(uint64_t, uint64_t))(v501 + 1088))(v500, v501);
  uint64_t v502 = a1[3];
  uint64_t v503 = a1[4];
  sub_10001CD44(a1, v502);
  v9[v7[143]] = (*(uint64_t (**)(uint64_t, uint64_t))(v503 + 1096))(v502, v503);
  uint64_t v504 = a1[3];
  uint64_t v505 = a1[4];
  sub_10001CD44(a1, v504);
  uint64_t v506 = (*(uint64_t (**)(uint64_t, uint64_t))(v505 + 1104))(v504, v505);
  v507 = &v9[v7[144]];
  *(void *)v507 = v506;
  v507[8] = v508 & 1;
  uint64_t v509 = a1[3];
  uint64_t v510 = a1[4];
  sub_10001CD44(a1, v509);
  uint64_t v511 = (*(uint64_t (**)(uint64_t, uint64_t))(v510 + 1112))(v509, v510);
  v512 = &v9[v7[145]];
  *(void *)v512 = v511;
  v512[8] = v513 & 1;
  uint64_t v514 = a1[3];
  uint64_t v515 = a1[4];
  sub_10001CD44(a1, v514);
  uint64_t v516 = (*(uint64_t (**)(uint64_t, uint64_t))(v515 + 1120))(v514, v515);
  v517 = &v9[v7[146]];
  *(void *)v517 = v516;
  v517[8] = v518 & 1;
  uint64_t v519 = a1[3];
  uint64_t v520 = a1[4];
  sub_10001CD44(a1, v519);
  uint64_t v521 = (*(uint64_t (**)(uint64_t, uint64_t))(v520 + 1128))(v519, v520);
  v522 = &v9[v7[147]];
  *(void *)v522 = v521;
  v522[8] = v523 & 1;
  uint64_t v524 = a1[3];
  uint64_t v525 = a1[4];
  sub_10001CD44(a1, v524);
  uint64_t v526 = (*(uint64_t (**)(uint64_t, uint64_t))(v525 + 1136))(v524, v525);
  v527 = &v9[v7[148]];
  *(void *)v527 = v526;
  v527[8] = v528 & 1;
  uint64_t v529 = a1[3];
  uint64_t v530 = a1[4];
  sub_10001CD44(a1, v529);
  uint64_t v531 = (*(uint64_t (**)(uint64_t, uint64_t))(v530 + 1144))(v529, v530);
  v532 = &v9[v7[149]];
  *(void *)v532 = v531;
  v532[8] = v533 & 1;
  uint64_t v534 = a1[3];
  uint64_t v535 = a1[4];
  sub_10001CD44(a1, v534);
  uint64_t v536 = (*(uint64_t (**)(uint64_t, uint64_t))(v535 + 1152))(v534, v535);
  v537 = &v9[v7[150]];
  *(void *)v537 = v536;
  v537[8] = v538 & 1;
  uint64_t v539 = a1[3];
  uint64_t v540 = a1[4];
  sub_10001CD44(a1, v539);
  uint64_t v541 = (*(uint64_t (**)(uint64_t, uint64_t))(v540 + 1160))(v539, v540);
  v542 = &v9[v7[151]];
  *(void *)v542 = v541;
  v542[8] = v543 & 1;
  uint64_t v544 = a1[3];
  uint64_t v545 = a1[4];
  sub_10001CD44(a1, v544);
  uint64_t v546 = (*(uint64_t (**)(uint64_t, uint64_t))(v545 + 1168))(v544, v545);
  v547 = &v9[v7[152]];
  *(void *)v547 = v546;
  v547[8] = v548 & 1;
  uint64_t v549 = a1[3];
  uint64_t v550 = a1[4];
  sub_10001CD44(a1, v549);
  uint64_t v551 = (*(uint64_t (**)(uint64_t, uint64_t))(v550 + 1176))(v549, v550);
  v552 = &v9[v7[153]];
  *(void *)v552 = v551;
  v552[8] = v553 & 1;
  uint64_t v554 = a1[3];
  uint64_t v555 = a1[4];
  sub_10001CD44(a1, v554);
  uint64_t v556 = (*(uint64_t (**)(uint64_t, uint64_t))(v555 + 1184))(v554, v555);
  v557 = &v9[v7[154]];
  *(void *)v557 = v556;
  v557[8] = v558 & 1;
  uint64_t v559 = a1[3];
  uint64_t v560 = a1[4];
  sub_10001CD44(a1, v559);
  uint64_t v561 = (*(uint64_t (**)(uint64_t, uint64_t))(v560 + 1192))(v559, v560);
  v562 = &v9[v7[155]];
  *(void *)v562 = v561;
  v562[8] = v563 & 1;
  uint64_t v564 = a1[3];
  uint64_t v565 = a1[4];
  sub_10001CD44(a1, v564);
  uint64_t v566 = (*(uint64_t (**)(uint64_t, uint64_t))(v565 + 1200))(v564, v565);
  v567 = &v9[v7[156]];
  *(void *)v567 = v566;
  v567[8] = v568 & 1;
  uint64_t v569 = a1[3];
  uint64_t v570 = a1[4];
  sub_10001CD44(a1, v569);
  uint64_t v571 = (*(uint64_t (**)(uint64_t, uint64_t))(v570 + 1208))(v569, v570);
  v572 = &v9[v7[157]];
  *(void *)v572 = v571;
  v572[8] = v573 & 1;
  uint64_t v574 = a1[3];
  uint64_t v575 = a1[4];
  sub_10001CD44(a1, v574);
  uint64_t v576 = (*(uint64_t (**)(uint64_t, uint64_t))(v575 + 1216))(v574, v575);
  v577 = &v9[v7[158]];
  *(void *)v577 = v576;
  v577[8] = v578 & 1;
  uint64_t v579 = a1[3];
  uint64_t v580 = a1[4];
  sub_10001CD44(a1, v579);
  uint64_t v581 = (*(uint64_t (**)(uint64_t, uint64_t))(v580 + 1224))(v579, v580);
  v582 = &v9[v7[159]];
  *(void *)v582 = v581;
  v582[8] = v583 & 1;
  uint64_t v584 = a1[3];
  uint64_t v585 = a1[4];
  sub_10001CD44(a1, v584);
  uint64_t v586 = (*(uint64_t (**)(uint64_t, uint64_t))(v585 + 1232))(v584, v585);
  v587 = &v9[v7[160]];
  *(void *)v587 = v586;
  v587[8] = v588 & 1;
  uint64_t v589 = a1[3];
  uint64_t v590 = a1[4];
  sub_10001CD44(a1, v589);
  uint64_t v591 = (*(uint64_t (**)(uint64_t, uint64_t))(v590 + 1240))(v589, v590);
  v592 = &v9[v7[161]];
  *(void *)v592 = v591;
  v592[8] = v593 & 1;
  uint64_t v594 = a1[3];
  uint64_t v595 = a1[4];
  sub_10001CD44(a1, v594);
  v9[v7[162]] = (*(uint64_t (**)(uint64_t, uint64_t))(v595 + 1248))(v594, v595);
  uint64_t v596 = a1[3];
  uint64_t v597 = a1[4];
  sub_10001CD44(a1, v596);
  uint64_t v598 = (*(uint64_t (**)(uint64_t, uint64_t))(v597 + 1256))(v596, v597);
  v599 = &v9[v7[163]];
  *(void *)v599 = v598;
  v599[8] = v600 & 1;
  uint64_t v601 = a1[3];
  uint64_t v602 = a1[4];
  sub_10001CD44(a1, v601);
  uint64_t v603 = (*(uint64_t (**)(uint64_t, uint64_t))(v602 + 1264))(v601, v602);
  v604 = &v9[v7[164]];
  *(void *)v604 = v603;
  v604[8] = v605 & 1;
  uint64_t v606 = a1[3];
  uint64_t v607 = a1[4];
  sub_10001CD44(a1, v606);
  uint64_t v608 = (*(uint64_t (**)(uint64_t, uint64_t))(v607 + 1272))(v606, v607);
  v609 = &v9[v7[165]];
  *(void *)v609 = v608;
  v609[8] = v610 & 1;
  uint64_t v611 = a1[3];
  uint64_t v612 = a1[4];
  sub_10001CD44(a1, v611);
  uint64_t v613 = (*(uint64_t (**)(uint64_t, uint64_t))(v612 + 1280))(v611, v612);
  v614 = (uint64_t *)&v9[v7[166]];
  uint64_t *v614 = v613;
  v614[1] = v615;
  uint64_t v616 = a1[3];
  uint64_t v617 = a1[4];
  sub_10001CD44(a1, v616);
  uint64_t v618 = (*(uint64_t (**)(uint64_t, uint64_t))(v617 + 1288))(v616, v617);
  v619 = &v9[v7[167]];
  *(void *)v619 = v618;
  v619[8] = v620 & 1;
  uint64_t v621 = a1[3];
  uint64_t v622 = a1[4];
  sub_10001CD44(a1, v621);
  v9[v7[168]] = (*(uint64_t (**)(uint64_t, uint64_t))(v622 + 1296))(v621, v622);
  uint64_t v623 = a1[3];
  uint64_t v624 = a1[4];
  sub_10001CD44(a1, v623);
  v9[v7[169]] = (*(uint64_t (**)(uint64_t, uint64_t))(v624 + 1304))(v623, v624);
  uint64_t v625 = a1[3];
  uint64_t v626 = a1[4];
  sub_10001CD44(a1, v625);
  uint64_t v627 = (*(uint64_t (**)(uint64_t, uint64_t))(v626 + 1312))(v625, v626);
  v628 = &v9[v7[170]];
  *(void *)v628 = v627;
  v628[8] = v629 & 1;
  uint64_t v630 = a1[3];
  uint64_t v631 = a1[4];
  sub_10001CD44(a1, v630);
  uint64_t v632 = (*(uint64_t (**)(uint64_t, uint64_t))(v631 + 1320))(v630, v631);
  v633 = &v9[v7[171]];
  *(void *)v633 = v632;
  v633[8] = v634 & 1;
  uint64_t v635 = a1[3];
  uint64_t v636 = a1[4];
  sub_10001CD44(a1, v635);
  v9[v7[172]] = (*(uint64_t (**)(uint64_t, uint64_t))(v636 + 1328))(v635, v636);
  uint64_t v637 = a1[3];
  uint64_t v638 = a1[4];
  sub_10001CD44(a1, v637);
  uint64_t v639 = (*(uint64_t (**)(uint64_t, uint64_t))(v638 + 1336))(v637, v638);
  v640 = &v9[v7[173]];
  *(_DWORD *)v640 = v639;
  v640[4] = BYTE4(v639) & 1;
  uint64_t v641 = a1[3];
  uint64_t v642 = a1[4];
  sub_10001CD44(a1, v641);
  uint64_t v643 = (*(uint64_t (**)(uint64_t, uint64_t))(v642 + 1344))(v641, v642);
  v644 = &v9[v7[174]];
  *(void *)v644 = v643;
  v644[8] = v645 & 1;
  uint64_t v646 = a1[3];
  uint64_t v647 = a1[4];
  sub_10001CD44(a1, v646);
  uint64_t v648 = (*(uint64_t (**)(uint64_t, uint64_t))(v647 + 1352))(v646, v647);
  v649 = &v9[v7[175]];
  *(void *)v649 = v648;
  v649[8] = v650 & 1;
  uint64_t v651 = a1[3];
  uint64_t v652 = a1[4];
  sub_10001CD44(a1, v651);
  uint64_t v653 = (*(uint64_t (**)(uint64_t, uint64_t))(v652 + 1360))(v651, v652);
  v654 = &v9[v7[176]];
  *(void *)v654 = v653;
  v654[8] = v655 & 1;
  uint64_t v656 = a1[3];
  uint64_t v657 = a1[4];
  sub_10001CD44(a1, v656);
  uint64_t v658 = (*(uint64_t (**)(uint64_t, uint64_t))(v657 + 1368))(v656, v657);
  v659 = &v9[v7[177]];
  *(void *)v659 = v658;
  v659[8] = v660 & 1;
  uint64_t v661 = a1[3];
  uint64_t v662 = a1[4];
  sub_10001CD44(a1, v661);
  uint64_t v663 = (*(uint64_t (**)(uint64_t, uint64_t))(v662 + 1376))(v661, v662);
  v664 = &v9[v7[178]];
  *(void *)v664 = v663;
  v664[8] = v665 & 1;
  uint64_t v666 = a1[3];
  uint64_t v667 = a1[4];
  sub_10001CD44(a1, v666);
  uint64_t v668 = (*(uint64_t (**)(uint64_t, uint64_t))(v667 + 1384))(v666, v667);
  v669 = &v9[v7[179]];
  *(void *)v669 = v668;
  v669[8] = v670 & 1;
  uint64_t v671 = a1[3];
  uint64_t v672 = a1[4];
  sub_10001CD44(a1, v671);
  uint64_t v673 = (*(uint64_t (**)(uint64_t, uint64_t))(v672 + 1392))(v671, v672);
  v674 = &v9[v7[180]];
  *(void *)v674 = v673;
  v674[8] = v675 & 1;
  uint64_t v676 = a1[3];
  uint64_t v677 = a1[4];
  sub_10001CD44(a1, v676);
  v9[v7[181]] = (*(uint64_t (**)(uint64_t, uint64_t))(v677 + 1400))(v676, v677);
  uint64_t v678 = a1[3];
  uint64_t v679 = a1[4];
  sub_10001CD44(a1, v678);
  uint64_t v680 = (*(uint64_t (**)(uint64_t, uint64_t))(v679 + 1408))(v678, v679);
  v681 = &v9[v7[182]];
  *(void *)v681 = v680;
  v681[8] = v682 & 1;
  uint64_t v683 = a1[3];
  uint64_t v684 = a1[4];
  sub_10001CD44(a1, v683);
  uint64_t v685 = (*(uint64_t (**)(uint64_t, uint64_t))(v684 + 1416))(v683, v684);
  v686 = &v9[v7[183]];
  *(void *)v686 = v685;
  v686[8] = v687 & 1;
  sub_100940528((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for DefaultConfigurationLayer);
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
}

unint64_t sub_100934BA4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x754E6C6169726573;
      break;
    case 2:
      unint64_t result = 0x656372756F73;
      break;
    case 3:
      unint64_t result = 0x496873696C627570;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 7:
      unint64_t result = 0x74537265646E6966;
      break;
    case 8:
      unint64_t result = 0x74736F486E736361;
      break;
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 12:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 13:
      unint64_t result = 0xD000000000000021;
      break;
    case 14:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 17:
      unint64_t result = 0xD000000000000016;
      break;
    case 18:
      unint64_t result = 0xD000000000000017;
      break;
    case 19:
      unint64_t result = 0xD000000000000024;
      break;
    case 20:
      unint64_t result = 0xD00000000000003ALL;
      break;
    case 21:
      unint64_t result = 0xD000000000000043;
      break;
    case 22:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 23:
      unint64_t result = 0xD000000000000028;
      break;
    case 24:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 25:
      unint64_t result = 0xD000000000000021;
      break;
    case 26:
      unint64_t result = 0xD000000000000014;
      break;
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 28:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 29:
      unint64_t result = 0xD000000000000023;
      break;
    case 30:
      unint64_t result = 0xD000000000000021;
      break;
    case 31:
      unint64_t result = 0xD000000000000023;
      break;
    case 32:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 33:
      unint64_t result = 0xD000000000000023;
      break;
    case 34:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 35:
      unint64_t result = 0xD000000000000025;
      break;
    case 36:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 37:
    case 39:
    case 60:
    case 94:
    case 102:
    case 109:
    case -128:
    case -127:
    case -124:
    case -122:
    case -102:
    case -98:
    case -85:
    case -80:
    case -79:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 38:
      unint64_t result = 0xD000000000000021;
      break;
    case 40:
      unint64_t result = 0xD000000000000017;
      break;
    case 41:
      unint64_t result = 0xD000000000000021;
      break;
    case 42:
      unint64_t result = 0xD000000000000025;
      break;
    case 43:
      unint64_t result = 0xD000000000000023;
      break;
    case 44:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 45:
      unint64_t result = 0x65746143656C6F72;
      break;
    case 46:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 47:
      unint64_t result = 0xD000000000000026;
      break;
    case 48:
      unint64_t result = 0x5365636976726573;
      break;
    case 49:
      unint64_t result = 0xD000000000000016;
      break;
    case 50:
      unint64_t result = 0xD000000000000017;
      break;
    case 51:
      unint64_t result = 0xD000000000000012;
      break;
    case 52:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 53:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 54:
      unint64_t result = 0xD000000000000011;
      break;
    case 55:
      unint64_t result = 0xD000000000000013;
      break;
    case 56:
      unint64_t result = 0x63616542666C6573;
      break;
    case 57:
      unint64_t result = 0xD000000000000016;
      break;
    case 58:
      unint64_t result = 0xD000000000000017;
      break;
    case 59:
      unint64_t result = 0x5279654B7473616CLL;
      break;
    case 61:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 62:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 63:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 64:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 65:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 66:
      unint64_t result = 0xD000000000000013;
      break;
    case 67:
      unint64_t result = 0xD000000000000015;
      break;
    case 68:
      unint64_t result = 0x724473776F6C6C61;
      break;
    case 69:
      unint64_t result = 0xD000000000000014;
      break;
    case 70:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 71:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 72:
      unint64_t result = 0xD000000000000025;
      break;
    case 73:
      unint64_t result = 0xD000000000000028;
      break;
    case 74:
      unint64_t result = 0xD000000000000020;
      break;
    case 75:
      unint64_t result = 0xD000000000000021;
      break;
    case 76:
      unint64_t result = 0xD000000000000017;
      break;
    case 77:
      unint64_t result = 0xD000000000000015;
      break;
    case 78:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 79:
      unint64_t result = 0xD000000000000015;
      break;
    case 80:
      unint64_t result = 0xD000000000000022;
      break;
    case 81:
      unint64_t result = 0xD000000000000018;
      break;
    case 82:
      unint64_t result = 0xD000000000000025;
      break;
    case 83:
      unint64_t result = 0xD000000000000013;
      break;
    case 84:
      unint64_t result = 0xD000000000000014;
      break;
    case 85:
      unint64_t result = 0xD000000000000013;
      break;
    case 86:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 87:
      unint64_t result = 0x6941656C65487369;
      break;
    case 88:
      unint64_t result = 0xD000000000000018;
      break;
    case 89:
      unint64_t result = 0xD000000000000013;
      break;
    case 90:
      unint64_t result = 0xD000000000000021;
      break;
    case 91:
      unint64_t result = 0xD000000000000023;
      break;
    case 92:
      unint64_t result = 0xD000000000000024;
      break;
    case 93:
      unint64_t result = 0xD000000000000021;
      break;
    case 95:
      unint64_t result = 0xD000000000000020;
      break;
    case 96:
      unint64_t result = 0xD000000000000019;
      break;
    case 97:
      unint64_t result = 0xD000000000000023;
      break;
    case 98:
      unint64_t result = 0xD000000000000016;
      break;
    case 99:
      unint64_t result = 0xD000000000000015;
      break;
    case 100:
      unint64_t result = 0xD000000000000018;
      break;
    case 101:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 103:
      unint64_t result = 0xD000000000000019;
      break;
    case 104:
      unint64_t result = 0xD000000000000023;
      break;
    case 105:
      unint64_t result = 0xD000000000000025;
      break;
    case 106:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 107:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 108:
      unint64_t result = 0xD000000000000017;
      break;
    case 110:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 111:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 112:
      unint64_t result = 0xD000000000000020;
      break;
    case 113:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 114:
      unint64_t result = 0xD000000000000022;
      break;
    case 115:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 116:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 117:
      unint64_t result = 0xD000000000000018;
      break;
    case 118:
      unint64_t result = 0xD000000000000019;
      break;
    case 119:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 120:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 121:
      unint64_t result = 0xD000000000000022;
      break;
    case 122:
      unint64_t result = 0xD000000000000032;
      break;
    case 123:
      unint64_t result = 0xD000000000000031;
      break;
    case 124:
      unint64_t result = 0xD000000000000032;
      break;
    case 125:
      unint64_t result = 0xD000000000000031;
      break;
    case 126:
      unint64_t result = 0xD000000000000028;
      break;
    case 127:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case -126:
      unint64_t result = 0xD000000000000032;
      break;
    case -125:
      unint64_t result = 0xD000000000000015;
      break;
    case -123:
      unint64_t result = 0xD000000000000022;
      break;
    case -121:
      unint64_t result = 0xD000000000000020;
      break;
    case -120:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -119:
      unint64_t result = 0xD000000000000019;
      break;
    case -116:
    case -115:
      unint64_t result = 0x657261685378616DLL;
      break;
    case -114:
      unint64_t result = 0xD000000000000016;
      break;
    case -113:
      unint64_t result = 0xD000000000000014;
      break;
    case -112:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case -111:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -110:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case -109:
      unint64_t result = 0xD000000000000022;
      break;
    case -108:
      unint64_t result = 0xD000000000000023;
      break;
    case -107:
      unint64_t result = 0xD000000000000023;
      break;
    case -106:
      unint64_t result = 0xD000000000000024;
      break;
    case -105:
      unint64_t result = 0xD000000000000018;
      break;
    case -104:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case -103:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case -101:
      unint64_t result = 0xD000000000000023;
      break;
    case -100:
      unint64_t result = 0xD000000000000020;
      break;
    case -99:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case -97:
      unint64_t result = 0xD000000000000021;
      break;
    case -95:
      unint64_t result = 0xD000000000000014;
      break;
    case -94:
      unint64_t result = 0xD000000000000017;
      break;
    case -93:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case -92:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -91:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case -90:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case -89:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case -88:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case -87:
      unint64_t result = 0xD000000000000022;
      break;
    case -86:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case -84:
      unint64_t result = 0xD000000000000018;
      break;
    case -83:
      unint64_t result = 0xD000000000000023;
      break;
    case -82:
      unint64_t result = 0xD000000000000029;
      break;
    case -81:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100935A5C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101652918);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100946BE4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  unint64_t v10 = *(void *)(v3 + 8);
  id v32 = *(id *)v3;
  uint64_t v9 = (uint64_t)v32;
  unint64_t v33 = v10;
  char v46 = 0;
  sub_100037A38((uint64_t)v32, v10);
  sub_100037BB4();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (v2)
  {
    sub_100037A24(v9, v10);
  }
  else
  {
    sub_100037A24((uint64_t)v32, v33);
    LOBYTE(v32) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = *(unsigned char *)(v3 + 25);
    char v46 = 2;
    sub_100946F34();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v32) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + 64);
    char v46 = 6;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_101654A30);
    sub_1009471E8((unint64_t *)&qword_10163CCD8, &qword_101654A30);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 9;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 10;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 11;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 12;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 13;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 14;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 15;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 16;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 17;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 18;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 19;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 20;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 21;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 22;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 23;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 24;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 25;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + 320);
    char v46 = 26;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_10163ABD8);
    sub_100946F88();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = 27;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 28;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 29;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 30;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 31;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 32;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 33;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 34;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 35;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 36;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 37;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 38;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 39;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 40;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 41;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 42;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 43;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 44;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + 600);
    char v46 = 45;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_10163ABE8);
    sub_100947088(&qword_101652940, (void (*)(void))sub_1009470F8);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = 46;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 47;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + 640);
    id v12 = v32;
    char v46 = 48;
    type metadata accessor for SPServiceState(0);
    sub_10094714C(&qword_101652950, type metadata accessor for SPServiceState);
    v12;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();

    id v32 = *(id *)(v3 + 648);
    char v46 = 49;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_10163ABC0);
    sub_100946D8C(&qword_101652958, &qword_101652960);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = 50;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 51;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 52;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 53;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 54;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 55;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v13 = (int *)type metadata accessor for DefaultConfigurationLayer();
    LOBYTE(v32) = 56;
    type metadata accessor for UUID();
    sub_10094714C(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v32) = 57;
    type metadata accessor for Date();
    sub_10094714C((unint64_t *)&unk_10163ACE0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v32) = 58;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 59;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v32) = 60;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 61;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 62;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 63;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 64;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 65;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v14 = v3 + v13[70];
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    uint64_t v18 = *(void *)(v14 + 32);
    uint64_t v19 = *(void *)(v14 + 40);
    uint64_t v20 = *(void *)(v14 + 48);
    uint64_t v21 = *(void *)(v14 + 56);
    uint64_t v22 = *(void *)(v14 + 64);
    uint64_t v23 = *(void *)(v14 + 72);
    uint64_t v24 = *(void *)(v14 + 80);
    uint64_t v25 = *(void *)(v14 + 88);
    uint64_t v26 = *(void *)(v14 + 96);
    uint64_t v27 = *(void *)(v14 + 104);
    id v32 = *(id *)v14;
    unint64_t v33 = v15;
    uint64_t v34 = v16;
    uint64_t v35 = v17;
    uint64_t v36 = v18;
    uint64_t v37 = v19;
    uint64_t v38 = v20;
    uint64_t v39 = v21;
    uint64_t v40 = v22;
    uint64_t v41 = v23;
    uint64_t v42 = v24;
    uint64_t v43 = v25;
    uint64_t v44 = v26;
    uint64_t v45 = v27;
    char v46 = 66;
    v30[1] = v25;
    void v30[2] = v24;
    v30[3] = v23;
    v30[4] = v22;
    v30[11] = v15;
    uint64_t v31 = (uint64_t)v32;
    v30[9] = v17;
    v30[10] = v16;
    v30[7] = v19;
    v30[8] = v18;
    v30[6] = v20;
    v30[5] = v21;
    sub_1009403D4((uint64_t)v32, v15, v16, v17, v18, v19, v20);
    sub_100947194();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_1009404E4((uint64_t)v32, v33, v34, v35, v36, v37, v38);
    LOBYTE(v32) = 67;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 68;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 69;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 70;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 71;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 72;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 73;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 74;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 75;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 76;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 77;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 78;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 79;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 80;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 81;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 82;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + v13[87]);
    char v46 = 83;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_10000588C(&qword_10163AB88);
    sub_1009471E8(&qword_1016419C0, &qword_10163AB88);
    uint64_t v31 = v28;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = 84;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 85;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 86;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 87;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 88;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 89;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 90;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 91;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 92;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 93;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 94;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 95;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 96;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 97;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 98;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 99;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 100;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 101;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 102;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 103;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 104;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 105;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 106;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 107;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 108;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 109;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 110;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 111;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 112;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 113;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 114;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 115;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 116;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 117;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 118;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 119;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 120;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 121;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 122;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 123;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 124;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 125;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 126;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 127;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = 0x80;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + v13[133]);
    char v46 = -127;
    swift_bridgeObjectRetain();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = -126;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -125;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v32 = *(id *)(v3 + v13[136]);
    char v46 = -124;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_10163AB70);
    sub_100947248(&qword_101652970);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    swift_bridgeObjectRelease();
    LOBYTE(v32) = -123;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -122;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -121;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -120;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -119;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -118;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -117;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -116;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -115;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -114;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -113;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -112;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -111;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -110;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -109;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -108;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -107;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -106;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -105;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -104;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -103;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -102;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -101;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -100;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -99;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -98;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -97;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -96;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -95;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -94;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -93;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -92;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -91;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -90;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v29 = *(unsigned char *)(v3 + v13[171] + 4);
    LOBYTE(v32) = -89;
    char v46 = v29;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -88;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -87;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -86;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -85;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -84;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -83;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -82;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -81;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -80;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v32) = -79;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1009381D4(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v612 = a2;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v611 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v611 - v8;
  uint64_t v10 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v611 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v614 = sub_10000588C(&qword_1016528C0);
  uint64_t v13 = *(void *)(v614 - 8);
  __chkstk_darwin(v614);
  uint64_t v15 = (char *)&v611 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v617 = (int *)type metadata accessor for DefaultConfigurationLayer();
  __chkstk_darwin(v617);
  uint64_t v17 = (char *)&v611 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)v17 + 2) = 0;
  uint64_t v618 = v17;
  v17[24] = 1;
  uint64_t v18 = a1[3];
  uint64_t v615 = a1;
  sub_10001CD44(a1, v18);
  sub_100946BE4();
  uint64_t v613 = v15;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v616 = v2;
  if (v2) {
    goto LABEL_4;
  }
  uint64_t v19 = (uint64_t)v12;
  uint64_t v20 = v612;
  char v626 = 0;
  sub_100037AA0();
  uint64_t v21 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  if (v21)
  {
    uint64_t v616 = v21;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
LABEL_4:
    int v22 = 0;
    uint64_t v23 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    goto LABEL_5;
  }
  id v32 = v618;
  *(_OWORD *)uint64_t v618 = v619;
  LOBYTE(v619) = 1;
  *((void *)v32 + 2) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v32[24] = v33 & 1;
  char v626 = 2;
  sub_100946C38();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v32[25] = v619;
  LOBYTE(v619) = 3;
  *((void *)v32 + 4) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v32[40] = v34 & 1;
  LOBYTE(v619) = 4;
  *((void *)v32 + 6) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v32[56] = v35 & 1;
  LOBYTE(v619) = 5;
  v32[57] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  sub_10000588C(&qword_101654A30);
  char v626 = 6;
  sub_1009471E8((unint64_t *)&qword_1016475B0, &qword_101654A30);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *((void *)v32 + 8) = v619;
  LOBYTE(v619) = 7;
  char v36 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = 0;
  v618[72] = v36;
  LOBYTE(v619) = 8;
  uint64_t v37 = v616;
  uint64_t v38 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v37;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v23 = 65;
    goto LABEL_5;
  }
  uint64_t v40 = v618;
  *((void *)v618 + 10) = v38;
  *((void *)v40 + 11) = v39;
  LOBYTE(v619) = 9;
  uint64_t v41 = v616;
  uint64_t v42 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v41;
  if (v41) {
    goto LABEL_55;
  }
  uint64_t v44 = v618;
  *((void *)v618 + 12) = v42;
  v44[104] = v43 & 1;
  LOBYTE(v619) = 10;
  uint64_t v45 = v616;
  char v46 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v45;
  if (v45) {
    goto LABEL_55;
  }
  v618[105] = v46;
  LOBYTE(v619) = 11;
  uint64_t v47 = v616;
  char v48 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v47;
  if (v47) {
    goto LABEL_55;
  }
  v618[106] = v48;
  LOBYTE(v619) = 12;
  uint64_t v49 = v616;
  uint64_t v50 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v49;
  if (v49) {
    goto LABEL_55;
  }
  char v52 = v618;
  *((void *)v618 + 14) = v50;
  v52[120] = v51 & 1;
  LOBYTE(v619) = 13;
  uint64_t v53 = v616;
  uint64_t v54 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v53;
  if (v53) {
    goto LABEL_55;
  }
  uint64_t v56 = v618;
  *((void *)v618 + 16) = v54;
  v56[136] = v55 & 1;
  LOBYTE(v619) = 14;
  uint64_t v57 = v616;
  uint64_t v58 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v57;
  if (v57) {
    goto LABEL_55;
  }
  uint64_t v60 = v618;
  *((void *)v618 + 18) = v58;
  v60[152] = v59 & 1;
  LOBYTE(v619) = 15;
  uint64_t v61 = v616;
  uint64_t v62 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v61;
  if (v61) {
    goto LABEL_55;
  }
  char v64 = v618;
  *((void *)v618 + 20) = v62;
  v64[168] = v63 & 1;
  LOBYTE(v619) = 16;
  uint64_t v65 = v616;
  uint64_t v66 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v65;
  if (v65) {
    goto LABEL_55;
  }
  uint64_t v68 = v618;
  *((void *)v618 + 22) = v66;
  v68[184] = v67 & 1;
  LOBYTE(v619) = 17;
  uint64_t v69 = v616;
  uint64_t v70 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v69;
  if (v69) {
    goto LABEL_55;
  }
  uint64_t v72 = v618;
  *((void *)v618 + 24) = v70;
  v72[200] = v71 & 1;
  LOBYTE(v619) = 18;
  uint64_t v73 = v616;
  uint64_t v74 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v73;
  if (v73) {
    goto LABEL_55;
  }
  char v76 = v618;
  *((void *)v618 + 26) = v74;
  v76[216] = v75 & 1;
  LOBYTE(v619) = 19;
  uint64_t v77 = v616;
  uint64_t v78 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v77;
  if (v77) {
    goto LABEL_55;
  }
  uint64_t v80 = v618;
  *((void *)v618 + 28) = v78;
  v80[232] = v79 & 1;
  LOBYTE(v619) = 20;
  uint64_t v81 = v616;
  uint64_t v82 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v81;
  if (v81) {
    goto LABEL_55;
  }
  uint64_t v84 = v618;
  *((void *)v618 + 30) = v82;
  v84[248] = v83 & 1;
  LOBYTE(v619) = 21;
  uint64_t v85 = v616;
  uint64_t v86 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v85;
  if (v85) {
    goto LABEL_55;
  }
  uint64_t v88 = v618;
  char v89 = v618 + 264;
  *((void *)v618 + 32) = v86;
  v88[264] = v87 & 1;
  LOBYTE(v619) = 22;
  uint64_t v90 = v616;
  uint64_t v91 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v90;
  if (v90) {
    goto LABEL_55;
  }
  *((void *)v618 + 34) = v91;
  v89[16] = v92 & 1;
  LOBYTE(v619) = 23;
  uint64_t v93 = v616;
  uint64_t v94 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v93;
  if (v93) {
    goto LABEL_55;
  }
  *((void *)v618 + 36) = v94;
  v89[32] = v95 & 1;
  LOBYTE(v619) = 24;
  uint64_t v96 = v616;
  uint64_t v97 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v96;
  if (v96) {
    goto LABEL_55;
  }
  *((void *)v618 + 38) = v97;
  v89[48] = v98 & 1;
  LOBYTE(v619) = 25;
  uint64_t v99 = v616;
  char v100 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v99;
  if (v99
    || (v618[313] = v100,
        sub_10000588C(&qword_10163ABD8),
        char v626 = 26,
        sub_100946C8C(),
        uint64_t v101 = v616,
        KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)(),
        (uint64_t v616 = v101) != 0))
  {
LABEL_55:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v23 = 321;
    goto LABEL_5;
  }
  uint64_t v23 = 67109185;
  *((void *)v618 + 40) = v619;
  LOBYTE(v619) = 27;
  uint64_t v102 = v616;
  uint64_t v103 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v102;
  if (v102) {
    goto LABEL_98;
  }
  *((void *)v618 + 41) = v103;
  v89[72] = v104 & 1;
  LOBYTE(v619) = 28;
  uint64_t v105 = v616;
  uint64_t v106 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v105;
  if (v105) {
    goto LABEL_98;
  }
  *((void *)v618 + 43) = v106;
  v89[88] = v107 & 1;
  LOBYTE(v619) = 29;
  uint64_t v108 = v616;
  uint64_t v109 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v108;
  if (v108) {
    goto LABEL_98;
  }
  *((void *)v618 + 45) = v109;
  v89[104] = v110 & 1;
  LOBYTE(v619) = 30;
  uint64_t v111 = v616;
  uint64_t v112 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v111;
  if (v111) {
    goto LABEL_98;
  }
  *((void *)v618 + 47) = v112;
  v89[120] = v113 & 1;
  LOBYTE(v619) = 31;
  uint64_t v114 = v616;
  uint64_t v115 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v114;
  if (v114) {
    goto LABEL_98;
  }
  *((void *)v618 + 49) = v115;
  v89[136] = v116 & 1;
  LOBYTE(v619) = 32;
  uint64_t v117 = v616;
  uint64_t v118 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v117;
  if (v117) {
    goto LABEL_98;
  }
  *((void *)v618 + 51) = v118;
  v89[152] = v119 & 1;
  LOBYTE(v619) = 33;
  uint64_t v120 = v616;
  uint64_t v121 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v120;
  if (v120) {
    goto LABEL_98;
  }
  *((void *)v618 + 53) = v121;
  v89[168] = v122 & 1;
  LOBYTE(v619) = 34;
  uint64_t v123 = v616;
  uint64_t v124 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v123;
  if (v123) {
    goto LABEL_98;
  }
  *((void *)v618 + 55) = v124;
  v89[184] = v125 & 1;
  LOBYTE(v619) = 35;
  uint64_t v126 = v616;
  uint64_t v127 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v126;
  if (v126) {
    goto LABEL_98;
  }
  *((void *)v618 + 57) = v127;
  v89[200] = v128 & 1;
  LOBYTE(v619) = 36;
  uint64_t v129 = v616;
  uint64_t v130 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v129;
  if (v129) {
    goto LABEL_98;
  }
  *((void *)v618 + 59) = v130;
  v89[216] = v131 & 1;
  LOBYTE(v619) = 37;
  uint64_t v132 = v616;
  char v133 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v132;
  if (v132) {
    goto LABEL_98;
  }
  v618[481] = v133;
  LOBYTE(v619) = 38;
  uint64_t v134 = v616;
  uint64_t v135 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v134;
  if (v134) {
    goto LABEL_98;
  }
  *((void *)v618 + 61) = v135;
  v89[232] = v136 & 1;
  LOBYTE(v619) = 39;
  uint64_t v137 = v616;
  uint64_t v138 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v137;
  if (v137) {
    goto LABEL_98;
  }
  *((void *)v618 + 63) = v138;
  v89[248] = v139 & 1;
  LOBYTE(v619) = 40;
  uint64_t v140 = v616;
  uint64_t v141 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v140;
  if (v140) {
    goto LABEL_98;
  }
  *((void *)v618 + 65) = v141;
  v89[264] = v142 & 1;
  LOBYTE(v619) = 41;
  uint64_t v143 = v616;
  uint64_t v144 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v143;
  if (v143) {
    goto LABEL_98;
  }
  *((void *)v618 + 67) = v144;
  v89[280] = v145 & 1;
  LOBYTE(v619) = 42;
  uint64_t v146 = v616;
  uint64_t v147 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v146;
  if (v146) {
    goto LABEL_98;
  }
  *((void *)v618 + 69) = v147;
  v89[296] = v148 & 1;
  LOBYTE(v619) = 43;
  uint64_t v149 = v616;
  uint64_t v150 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v149;
  if (v149) {
    goto LABEL_98;
  }
  *((void *)v618 + 71) = v150;
  v89[312] = v151 & 1;
  LOBYTE(v619) = 44;
  uint64_t v152 = v616;
  uint64_t v153 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v152;
  if (v152) {
    goto LABEL_98;
  }
  *((void *)v618 + 73) = v153;
  v89[328] = v154 & 1;
  sub_10000588C(&qword_10163ABE8);
  char v626 = 45;
  sub_100947088(&qword_10164BD10, (void (*)(void))sub_1006E98B4);
  uint64_t v155 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v155;
  if (v155) {
    goto LABEL_98;
  }
  uint64_t v23 = 0x200004000141;
  *((void *)v618 + 75) = v619;
  LOBYTE(v619) = 46;
  uint64_t v156 = v616;
  uint64_t v157 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v156;
  if (v156) {
    goto LABEL_98;
  }
  *((void *)v618 + 76) = v157;
  v89[352] = v158 & 1;
  LOBYTE(v619) = 47;
  uint64_t v159 = v616;
  uint64_t v160 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v159;
  if (v159) {
    goto LABEL_98;
  }
  *((void *)v618 + 78) = v160;
  v89[368] = v161 & 1;
  type metadata accessor for SPServiceState(0);
  char v626 = 48;
  sub_10094714C(&qword_1016528F0, type metadata accessor for SPServiceState);
  uint64_t v162 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v162;
  if (v162) {
    goto LABEL_98;
  }
  *((void *)v618 + 80) = v619;
  sub_10000588C(&qword_10163ABC0);
  char v626 = 49;
  sub_100946D8C(&qword_1016528F8, &qword_101652900);
  uint64_t v163 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v163;
  if (v163)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v23 = 0x1200004000141;
    goto LABEL_5;
  }
  uint64_t v23 = 0x3200004000141;
  *((void *)v618 + 81) = v619;
  LOBYTE(v619) = 50;
  uint64_t v164 = v616;
  uint64_t v165 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v164;
  if (v164) {
    goto LABEL_98;
  }
  *((void *)v618 + 82) = v165;
  v89[400] = v166 & 1;
  LOBYTE(v619) = 51;
  uint64_t v167 = v616;
  uint64_t v168 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v167;
  if (v167) {
    goto LABEL_98;
  }
  *((void *)v618 + 84) = v168;
  v89[416] = v169 & 1;
  LOBYTE(v619) = 52;
  uint64_t v170 = v616;
  uint64_t v171 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v170;
  if (v170) {
    goto LABEL_98;
  }
  *((void *)v618 + 86) = v171;
  v89[432] = v172 & 1;
  LOBYTE(v619) = 53;
  uint64_t v173 = v616;
  uint64_t v174 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v173;
  if (v173) {
    goto LABEL_98;
  }
  *((void *)v618 + 88) = v174;
  v89[448] = v175 & 1;
  LOBYTE(v619) = 54;
  uint64_t v176 = v616;
  uint64_t v177 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v176;
  if (v176) {
    goto LABEL_98;
  }
  *((void *)v618 + 90) = v177;
  v89[464] = v178 & 1;
  LOBYTE(v619) = 55;
  uint64_t v179 = v616;
  char v180 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v179;
  if (v179) {
    goto LABEL_98;
  }
  v618[729] = v180;
  type metadata accessor for UUID();
  LOBYTE(v619) = 56;
  sub_10094714C((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v181 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v181;
  if (v181) {
    goto LABEL_98;
  }
  sub_10001D608(v19, (uint64_t)&v618[v617[60]], &qword_101638CF0);
  type metadata accessor for Date();
  LOBYTE(v619) = 57;
  sub_10094714C(&qword_10163ACC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v182 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v182;
  if (v182)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    uint64_t v23 = 0x103200004000141;
    goto LABEL_5;
  }
  uint64_t v23 = 0x303200004000141;
  sub_10001D608((uint64_t)v9, (uint64_t)&v618[v617[61]], (uint64_t *)&unk_10163AC90);
  LOBYTE(v619) = 58;
  uint64_t v183 = v616;
  uint64_t v184 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v183;
  if (v183) {
    goto LABEL_98;
  }
  uint64_t v186 = &v618[v617[62]];
  *(void *)uint64_t v186 = v184;
  v186[8] = v185 & 1;
  LOBYTE(v619) = 59;
  uint64_t v187 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v187;
  if (v187) {
    goto LABEL_98;
  }
  uint64_t v23 = 0xB03200004000141;
  sub_10001D608((uint64_t)v7, (uint64_t)&v618[v617[63]], (uint64_t *)&unk_10163AC90);
  LOBYTE(v619) = 60;
  uint64_t v188 = v616;
  uint64_t v189 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v188;
  if (v188) {
    goto LABEL_98;
  }
  uint64_t v191 = &v618[v617[64]];
  *(void *)uint64_t v191 = v189;
  v191[8] = v190 & 1;
  LOBYTE(v619) = 61;
  uint64_t v192 = v616;
  uint64_t v193 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v192;
  if (v192) {
    goto LABEL_98;
  }
  uint64_t v195 = &v618[v617[65]];
  *(void *)uint64_t v195 = v193;
  v195[8] = v194 & 1;
  LOBYTE(v619) = 62;
  uint64_t v196 = v616;
  uint64_t v197 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v196;
  if (v196) {
    goto LABEL_98;
  }
  uint64_t v199 = &v618[v617[66]];
  *(void *)uint64_t v199 = v197;
  v199[8] = v198 & 1;
  LOBYTE(v619) = 63;
  uint64_t v200 = v616;
  uint64_t v201 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v200;
  if (v200) {
    goto LABEL_98;
  }
  char v203 = &v618[v617[67]];
  *(void *)char v203 = v201;
  v203[8] = v202 & 1;
  LOBYTE(v619) = 64;
  uint64_t v204 = v616;
  uint64_t v205 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v204;
  if (v204) {
    goto LABEL_98;
  }
  uint64_t v207 = &v618[v617[68]];
  *(void *)uint64_t v207 = v205;
  v207[8] = v206 & 1;
  LOBYTE(v619) = 65;
  uint64_t v208 = v616;
  uint64_t v209 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v208;
  if (v208) {
    goto LABEL_98;
  }
  uint64_t v211 = &v618[v617[69]];
  *(void *)uint64_t v211 = v209;
  v211[8] = v210 & 1;
  char v626 = 66;
  sub_100946E20();
  uint64_t v212 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v212;
  if (v212)
  {
LABEL_98:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 0;
    unint64_t v25 = 0;
    goto LABEL_5;
  }
  unint64_t v25 = 0;
  uint64_t v213 = &v618[v617[70]];
  long long v214 = v620;
  *(_OWORD *)uint64_t v213 = v619;
  *((_OWORD *)v213 + 1) = v214;
  long long v215 = v622;
  *((_OWORD *)v213 + 2) = v621;
  *((_OWORD *)v213 + 3) = v215;
  long long v216 = v624;
  *((_OWORD *)v213 + 4) = v623;
  *((_OWORD *)v213 + 5) = v216;
  *((_OWORD *)v213 + 6) = v625;
  LOBYTE(v619) = 67;
  uint64_t v217 = v616;
  char v218 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v217;
  if (v217) {
    goto LABEL_112;
  }
  v618[v617[71]] = v218;
  LOBYTE(v619) = 68;
  uint64_t v219 = v616;
  char v220 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v219;
  if (v219) {
    goto LABEL_112;
  }
  v618[v617[72]] = v220;
  LOBYTE(v619) = 69;
  uint64_t v221 = v616;
  char v222 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v221;
  if (v221) {
    goto LABEL_112;
  }
  v618[v617[73]] = v222;
  LOBYTE(v619) = 70;
  uint64_t v223 = v616;
  uint64_t v224 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v223;
  if (v223) {
    goto LABEL_112;
  }
  char v226 = &v618[v617[74]];
  *(void *)char v226 = v224;
  v226[8] = v225 & 1;
  LOBYTE(v619) = 71;
  uint64_t v227 = v616;
  uint64_t v228 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v227;
  if (v227) {
    goto LABEL_112;
  }
  v230 = &v618[v617[75]];
  *(void *)v230 = v228;
  v230[8] = v229 & 1;
  LOBYTE(v619) = 72;
  uint64_t v231 = v616;
  uint64_t v232 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v231;
  if (v231) {
    goto LABEL_112;
  }
  uint64_t v234 = &v618[v617[76]];
  *(void *)uint64_t v234 = v232;
  v234[8] = v233 & 1;
  LOBYTE(v619) = 73;
  uint64_t v235 = v616;
  uint64_t v236 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v235;
  if (v235) {
    goto LABEL_112;
  }
  uint64_t v238 = &v618[v617[77]];
  *(void *)uint64_t v238 = v236;
  v238[8] = v237 & 1;
  LOBYTE(v619) = 74;
  uint64_t v239 = v616;
  uint64_t v240 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v239;
  if (v239) {
    goto LABEL_112;
  }
  uint64_t v242 = &v618[v617[78]];
  *(void *)uint64_t v242 = v240;
  v242[8] = v241 & 1;
  LOBYTE(v619) = 75;
  uint64_t v243 = v616;
  uint64_t v244 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v243;
  if (v243) {
    goto LABEL_112;
  }
  char v246 = &v618[v617[79]];
  *(void *)char v246 = v244;
  v246[8] = v245 & 1;
  LOBYTE(v619) = 76;
  uint64_t v247 = v616;
  uint64_t v248 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v247;
  if (v247) {
    goto LABEL_112;
  }
  v250 = &v618[v617[80]];
  *(void *)v250 = v248;
  v250[8] = v249 & 1;
  LOBYTE(v619) = 77;
  uint64_t v251 = v616;
  uint64_t v252 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v251;
  if (v251) {
    goto LABEL_112;
  }
  uint64_t v254 = &v618[v617[81]];
  *(void *)uint64_t v254 = v252;
  v254[8] = v253 & 1;
  LOBYTE(v619) = 78;
  uint64_t v255 = v616;
  uint64_t v256 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v255;
  if (v255
    || (uint64_t v258 = &v618[v617[82]],
        *(void *)uint64_t v258 = v256,
        v258[8] = v257 & 1,
        LOBYTE(v619) = 79,
        uint64_t v259 = v616,
        uint64_t v260 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(),
        (uint64_t v616 = v259) != 0))
  {
LABEL_112:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 4;
    goto LABEL_5;
  }
  unint64_t v25 = 0;
  uint64_t v262 = (uint64_t *)&v618[v617[83]];
  *uint64_t v262 = v260;
  v262[1] = v261;
  LOBYTE(v619) = 80;
  uint64_t v263 = v616;
  uint64_t v264 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v263;
  if (v263
    || (char v266 = &v618[v617[84]],
        *(void *)char v266 = v264,
        v266[8] = v265 & 1,
        LOBYTE(v619) = 81,
        uint64_t v267 = v616,
        uint64_t v268 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(),
        (uint64_t v616 = v267) != 0))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 32772;
    goto LABEL_5;
  }
  unint64_t v25 = 0;
  v270 = (uint64_t *)&v618[v617[85]];
  uint64_t *v270 = v268;
  v270[1] = v269;
  LOBYTE(v619) = 82;
  uint64_t v271 = v616;
  uint64_t v272 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v271;
  if (v271) {
    goto LABEL_118;
  }
  uint64_t v274 = &v618[v617[86]];
  *(void *)uint64_t v274 = v272;
  v274[8] = v273 & 1;
  sub_10000588C(&qword_10163AB88);
  char v626 = 83;
  sub_1009471E8(&qword_101641A00, &qword_10163AB88);
  uint64_t v275 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v275;
  if (v275)
  {
LABEL_118:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
    unint64_t v24 = 163844;
    goto LABEL_5;
  }
  *(void *)&v618[v617[87]] = v619;
  LOBYTE(v619) = 84;
  uint64_t v276 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = 0;
  unint64_t v25 = 0;
  uint64_t v277 = (uint64_t *)&v618[v617[88]];
  *uint64_t v277 = v276;
  v277[1] = v278;
  LOBYTE(v619) = 85;
  uint64_t v279 = v616;
  uint64_t v280 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v279;
  if (v279) {
    goto LABEL_193;
  }
  v282 = &v618[v617[89]];
  *(void *)v282 = v280;
  v282[8] = v281 & 1;
  LOBYTE(v619) = 86;
  uint64_t v283 = v616;
  char v284 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v283;
  if (v283) {
    goto LABEL_193;
  }
  v618[v617[90]] = v284;
  LOBYTE(v619) = 87;
  uint64_t v285 = v616;
  char v286 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v285;
  if (v285) {
    goto LABEL_193;
  }
  v618[v617[91]] = v286;
  LOBYTE(v619) = 88;
  uint64_t v287 = v616;
  char v288 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v287;
  if (v287) {
    goto LABEL_193;
  }
  v618[v617[92]] = v288;
  LOBYTE(v619) = 89;
  uint64_t v289 = v616;
  char v290 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v289;
  if (v289) {
    goto LABEL_193;
  }
  v618[v617[93]] = v290;
  LOBYTE(v619) = 90;
  uint64_t v291 = v616;
  uint64_t v292 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v291;
  if (v291) {
    goto LABEL_193;
  }
  uint64_t v294 = &v618[v617[94]];
  *(void *)uint64_t v294 = v292;
  v294[8] = v293 & 1;
  LOBYTE(v619) = 91;
  uint64_t v295 = v616;
  uint64_t v296 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v295;
  if (v295) {
    goto LABEL_193;
  }
  char v298 = &v618[v617[95]];
  *(void *)char v298 = v296;
  v298[8] = v297 & 1;
  LOBYTE(v619) = 92;
  uint64_t v299 = v616;
  uint64_t v300 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v299;
  if (v299) {
    goto LABEL_193;
  }
  v302 = &v618[v617[96]];
  *(void *)v302 = v300;
  v302[8] = v301 & 1;
  LOBYTE(v619) = 93;
  uint64_t v303 = v616;
  uint64_t v304 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v303;
  if (v303) {
    goto LABEL_193;
  }
  uint64_t v306 = &v618[v617[97]];
  *(void *)uint64_t v306 = v304;
  v306[8] = v305 & 1;
  LOBYTE(v619) = 94;
  uint64_t v307 = v616;
  uint64_t v308 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v307;
  if (v307) {
    goto LABEL_193;
  }
  uint64_t v310 = &v618[v617[98]];
  *(void *)uint64_t v310 = v308;
  v310[8] = v309 & 1;
  LOBYTE(v619) = 95;
  uint64_t v311 = v616;
  uint64_t v312 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v311;
  if (v311) {
    goto LABEL_193;
  }
  uint64_t v314 = &v618[v617[99]];
  *(void *)uint64_t v314 = v312;
  v314[8] = v313 & 1;
  LOBYTE(v619) = 96;
  uint64_t v315 = v616;
  uint64_t v316 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v315;
  if (v315) {
    goto LABEL_193;
  }
  char v318 = &v618[v617[100]];
  *(void *)char v318 = v316;
  v318[8] = v317 & 1;
  LOBYTE(v619) = 97;
  uint64_t v319 = v616;
  uint64_t v320 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v319;
  if (v319) {
    goto LABEL_193;
  }
  v322 = &v618[v617[101]];
  *(void *)v322 = v320;
  v322[8] = v321 & 1;
  LOBYTE(v619) = 98;
  uint64_t v323 = v616;
  uint64_t v324 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v323;
  if (v323) {
    goto LABEL_193;
  }
  uint64_t v326 = &v618[v617[102]];
  *(void *)uint64_t v326 = v324;
  v326[8] = v325 & 1;
  LOBYTE(v619) = 99;
  uint64_t v327 = v616;
  uint64_t v328 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v327;
  if (v327) {
    goto LABEL_193;
  }
  uint64_t v330 = &v618[v617[103]];
  *(void *)uint64_t v330 = v328;
  v330[8] = v329 & 1;
  LOBYTE(v619) = 100;
  uint64_t v331 = v616;
  uint64_t v332 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v331;
  if (v331) {
    goto LABEL_193;
  }
  uint64_t v334 = &v618[v617[104]];
  *(void *)uint64_t v334 = v332;
  v334[8] = v333 & 1;
  LOBYTE(v619) = 101;
  uint64_t v335 = v616;
  uint64_t v336 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v335;
  if (v335) {
    goto LABEL_193;
  }
  char v338 = &v618[v617[105]];
  *(void *)char v338 = v336;
  v338[8] = v337 & 1;
  LOBYTE(v619) = 102;
  uint64_t v339 = v616;
  uint64_t v340 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v339;
  if (v339) {
    goto LABEL_193;
  }
  v342 = &v618[v617[106]];
  *(void *)v342 = v340;
  v342[8] = v341 & 1;
  LOBYTE(v619) = 103;
  uint64_t v343 = v616;
  uint64_t v344 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v343;
  if (v343) {
    goto LABEL_193;
  }
  uint64_t v346 = &v618[v617[107]];
  *(void *)uint64_t v346 = v344;
  v346[8] = v345 & 1;
  LOBYTE(v619) = 104;
  uint64_t v347 = v616;
  uint64_t v348 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v347;
  if (v347) {
    goto LABEL_193;
  }
  uint64_t v350 = &v618[v617[108]];
  *(void *)uint64_t v350 = v348;
  v350[8] = v349 & 1;
  LOBYTE(v619) = 105;
  uint64_t v351 = v616;
  uint64_t v352 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v351;
  if (v351) {
    goto LABEL_193;
  }
  uint64_t v354 = &v618[v617[109]];
  *(void *)uint64_t v354 = v352;
  v354[8] = v353 & 1;
  LOBYTE(v619) = 106;
  uint64_t v355 = v616;
  uint64_t v356 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v355;
  if (v355) {
    goto LABEL_193;
  }
  uint64_t v358 = &v618[v617[110]];
  *(void *)uint64_t v358 = v356;
  v358[8] = v357 & 1;
  LOBYTE(v619) = 107;
  uint64_t v359 = v616;
  uint64_t v360 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v359;
  if (v359) {
    goto LABEL_193;
  }
  uint64_t v362 = &v618[v617[111]];
  *(void *)uint64_t v362 = v360;
  v362[8] = v361 & 1;
  LOBYTE(v619) = 108;
  uint64_t v363 = v616;
  uint64_t v364 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v363;
  if (v363) {
    goto LABEL_193;
  }
  char v366 = &v618[v617[112]];
  *(void *)char v366 = v364;
  v366[8] = v365 & 1;
  LOBYTE(v619) = 109;
  uint64_t v367 = v616;
  uint64_t v368 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v367;
  if (v367) {
    goto LABEL_193;
  }
  v370 = &v618[v617[113]];
  *(void *)v370 = v368;
  v370[8] = v369 & 1;
  LOBYTE(v619) = 110;
  uint64_t v371 = v616;
  uint64_t v372 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v371;
  if (v371) {
    goto LABEL_193;
  }
  uint64_t v374 = &v618[v617[114]];
  *(void *)uint64_t v374 = v372;
  v374[8] = v373 & 1;
  LOBYTE(v619) = 111;
  uint64_t v375 = v616;
  uint64_t v376 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v375;
  if (v375) {
    goto LABEL_193;
  }
  uint64_t v378 = &v618[v617[115]];
  *(void *)uint64_t v378 = v376;
  v378[8] = v377 & 1;
  LOBYTE(v619) = 112;
  uint64_t v379 = v616;
  char v380 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v379;
  if (v379) {
    goto LABEL_193;
  }
  v618[v617[116]] = v380;
  LOBYTE(v619) = 113;
  uint64_t v381 = v616;
  uint64_t v382 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v381;
  if (v381) {
    goto LABEL_193;
  }
  uint64_t v384 = &v618[v617[117]];
  *(void *)uint64_t v384 = v382;
  v384[8] = v383 & 1;
  LOBYTE(v619) = 114;
  uint64_t v385 = v616;
  uint64_t v386 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v385;
  if (v385) {
    goto LABEL_193;
  }
  uint64_t v388 = &v618[v617[118]];
  *(void *)uint64_t v388 = v386;
  v388[8] = v387 & 1;
  LOBYTE(v619) = 115;
  uint64_t v389 = v616;
  uint64_t v390 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v389;
  if (v389) {
    goto LABEL_193;
  }
  uint64_t v392 = &v618[v617[119]];
  *(void *)uint64_t v392 = v390;
  v392[8] = v391 & 1;
  LOBYTE(v619) = 116;
  uint64_t v393 = v616;
  char v394 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v393;
  if (v393) {
    goto LABEL_193;
  }
  v618[v617[120]] = v394;
  LOBYTE(v619) = 117;
  uint64_t v395 = v616;
  char v396 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v395;
  if (v395) {
    goto LABEL_193;
  }
  v618[v617[121]] = v396;
  LOBYTE(v619) = 118;
  uint64_t v397 = v616;
  char v398 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v397;
  if (v397) {
    goto LABEL_193;
  }
  v618[v617[122]] = v398;
  LOBYTE(v619) = 119;
  uint64_t v399 = v616;
  uint64_t v400 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v399;
  if (v399) {
    goto LABEL_193;
  }
  uint64_t v402 = &v618[v617[123]];
  *(void *)uint64_t v402 = v400;
  v402[8] = v401 & 1;
  LOBYTE(v619) = 120;
  uint64_t v403 = v616;
  uint64_t v404 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v403;
  if (v403) {
    goto LABEL_193;
  }
  char v406 = &v618[v617[124]];
  *(void *)char v406 = v404;
  v406[8] = v405 & 1;
  LOBYTE(v619) = 121;
  uint64_t v407 = v616;
  uint64_t v408 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v407;
  if (v407) {
    goto LABEL_193;
  }
  uint64_t v410 = &v618[v617[125]];
  *(void *)uint64_t v410 = v408;
  v410[8] = v409 & 1;
  LOBYTE(v619) = 122;
  uint64_t v411 = v616;
  uint64_t v412 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v411;
  if (v411) {
    goto LABEL_193;
  }
  uint64_t v414 = &v618[v617[126]];
  *(void *)uint64_t v414 = v412;
  v414[8] = v413 & 1;
  LOBYTE(v619) = 123;
  uint64_t v415 = v616;
  uint64_t v416 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v415;
  if (v415) {
    goto LABEL_193;
  }
  char v418 = &v618[v617[127]];
  *(void *)char v418 = v416;
  v418[8] = v417 & 1;
  LOBYTE(v619) = 124;
  uint64_t v419 = v616;
  uint64_t v420 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v419;
  if (v419) {
    goto LABEL_193;
  }
  v422 = &v618[v617[128]];
  *(void *)v422 = v420;
  v422[8] = v421 & 1;
  LOBYTE(v619) = 125;
  uint64_t v423 = v616;
  uint64_t v424 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v423;
  if (v423) {
    goto LABEL_193;
  }
  uint64_t v426 = &v618[v617[129]];
  *(void *)uint64_t v426 = v424;
  v426[8] = v425 & 1;
  LOBYTE(v619) = 126;
  uint64_t v427 = v616;
  uint64_t v428 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v427;
  if (v427) {
    goto LABEL_193;
  }
  uint64_t v430 = &v618[v617[130]];
  *(void *)uint64_t v430 = v428;
  v430[8] = v429 & 1;
  LOBYTE(v619) = 127;
  uint64_t v431 = v616;
  char v432 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v431;
  if (v431) {
    goto LABEL_193;
  }
  v618[v617[131]] = v432;
  LOBYTE(v619) = 0x80;
  uint64_t v433 = v616;
  uint64_t v434 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v433;
  if (v433) {
    goto LABEL_193;
  }
  uint64_t v436 = &v618[v617[132]];
  *(void *)uint64_t v436 = v434;
  v436[8] = v435 & 1;
  char v626 = -127;
  uint64_t v437 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v437;
  if (v437) {
    goto LABEL_193;
  }
  unint64_t v25 = 2;
  *(void *)&v618[v617[133]] = v619;
  LOBYTE(v619) = -126;
  uint64_t v438 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = 0;
  char v439 = &v618[v617[134]];
  *(void *)char v439 = v438;
  v439[8] = v440 & 1;
  LOBYTE(v619) = -125;
  uint64_t v441 = v616;
  char v442 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v441;
  if (v441) {
    goto LABEL_193;
  }
  v618[v617[135]] = v442;
  sub_10000588C(&qword_10163AB70);
  char v626 = -124;
  sub_100947248((unint64_t *)&qword_101652910);
  uint64_t v443 = v616;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v616 = v443;
  if (v443) {
    goto LABEL_193;
  }
  unint64_t v25 = 18;
  *(void *)&v618[v617[136]] = v619;
  LOBYTE(v619) = -123;
  char v444 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = 0;
  v618[v617[137]] = v444;
  LOBYTE(v619) = -122;
  uint64_t v445 = v616;
  uint64_t v446 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v445;
  if (v445) {
    goto LABEL_193;
  }
  v448 = &v618[v617[138]];
  *(void *)v448 = v446;
  v448[8] = v447 & 1;
  LOBYTE(v619) = -121;
  uint64_t v449 = v616;
  uint64_t v450 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v449;
  if (v449) {
    goto LABEL_193;
  }
  uint64_t v452 = &v618[v617[139]];
  *(void *)uint64_t v452 = v450;
  v452[8] = v451 & 1;
  LOBYTE(v619) = -120;
  uint64_t v453 = v616;
  char v454 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v453;
  if (v453) {
    goto LABEL_193;
  }
  v618[v617[140]] = v454;
  LOBYTE(v619) = -119;
  uint64_t v455 = v616;
  char v456 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v455;
  if (v455) {
    goto LABEL_193;
  }
  v618[v617[141]] = v456;
  LOBYTE(v619) = -118;
  uint64_t v457 = v616;
  uint64_t v458 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v457;
  if (v457) {
    goto LABEL_193;
  }
  uint64_t v460 = &v618[v617[142]];
  *(void *)uint64_t v460 = v458;
  v460[8] = v459 & 1;
  LOBYTE(v619) = -117;
  uint64_t v461 = v616;
  uint64_t v462 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v461;
  if (v461) {
    goto LABEL_193;
  }
  char v464 = &v618[v617[143]];
  *(void *)char v464 = v462;
  v464[8] = v463 & 1;
  LOBYTE(v619) = -116;
  uint64_t v465 = v616;
  uint64_t v466 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v465;
  if (v465) {
    goto LABEL_193;
  }
  v468 = &v618[v617[144]];
  *(void *)v468 = v466;
  v468[8] = v467 & 1;
  LOBYTE(v619) = -115;
  uint64_t v469 = v616;
  uint64_t v470 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v469;
  if (v469) {
    goto LABEL_193;
  }
  uint64_t v472 = &v618[v617[145]];
  *(void *)uint64_t v472 = v470;
  v472[8] = v471 & 1;
  LOBYTE(v619) = -114;
  uint64_t v473 = v616;
  uint64_t v474 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v473;
  if (v473) {
    goto LABEL_193;
  }
  char v476 = &v618[v617[146]];
  *(void *)char v476 = v474;
  v476[8] = v475 & 1;
  LOBYTE(v619) = -113;
  uint64_t v477 = v616;
  uint64_t v478 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v477;
  if (v477) {
    goto LABEL_193;
  }
  uint64_t v480 = &v618[v617[147]];
  *(void *)uint64_t v480 = v478;
  v480[8] = v479 & 1;
  LOBYTE(v619) = -112;
  uint64_t v481 = v616;
  uint64_t v482 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v481;
  if (v481) {
    goto LABEL_193;
  }
  uint64_t v484 = &v618[v617[148]];
  *(void *)uint64_t v484 = v482;
  v484[8] = v483 & 1;
  LOBYTE(v619) = -111;
  uint64_t v485 = v616;
  uint64_t v486 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v485;
  if (v485) {
    goto LABEL_193;
  }
  uint64_t v488 = &v618[v617[149]];
  *(void *)uint64_t v488 = v486;
  v488[8] = v487 & 1;
  LOBYTE(v619) = -110;
  uint64_t v489 = v616;
  uint64_t v490 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v489;
  if (v489) {
    goto LABEL_193;
  }
  uint64_t v492 = &v618[v617[150]];
  *(void *)uint64_t v492 = v490;
  v492[8] = v491 & 1;
  LOBYTE(v619) = -109;
  uint64_t v493 = v616;
  uint64_t v494 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v493;
  if (v493) {
    goto LABEL_193;
  }
  uint64_t v496 = &v618[v617[151]];
  *(void *)uint64_t v496 = v494;
  v496[8] = v495 & 1;
  LOBYTE(v619) = -108;
  uint64_t v497 = v616;
  uint64_t v498 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v497;
  if (v497) {
    goto LABEL_193;
  }
  uint64_t v500 = &v618[v617[152]];
  *(void *)uint64_t v500 = v498;
  v500[8] = v499 & 1;
  LOBYTE(v619) = -107;
  uint64_t v501 = v616;
  uint64_t v502 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v501;
  if (v501) {
    goto LABEL_193;
  }
  uint64_t v504 = &v618[v617[153]];
  *(void *)uint64_t v504 = v502;
  v504[8] = v503 & 1;
  LOBYTE(v619) = -106;
  uint64_t v505 = v616;
  uint64_t v506 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v505;
  if (v505) {
    goto LABEL_193;
  }
  char v508 = &v618[v617[154]];
  *(void *)char v508 = v506;
  v508[8] = v507 & 1;
  LOBYTE(v619) = -105;
  uint64_t v509 = v616;
  uint64_t v510 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v509;
  if (v509) {
    goto LABEL_193;
  }
  v512 = &v618[v617[155]];
  *(void *)v512 = v510;
  v512[8] = v511 & 1;
  LOBYTE(v619) = -104;
  uint64_t v513 = v616;
  uint64_t v514 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v513;
  if (v513) {
    goto LABEL_193;
  }
  uint64_t v516 = &v618[v617[156]];
  *(void *)uint64_t v516 = v514;
  v516[8] = v515 & 1;
  LOBYTE(v619) = -103;
  uint64_t v517 = v616;
  uint64_t v518 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v517;
  if (v517) {
    goto LABEL_193;
  }
  uint64_t v520 = &v618[v617[157]];
  *(void *)uint64_t v520 = v518;
  v520[8] = v519 & 1;
  LOBYTE(v619) = -102;
  uint64_t v521 = v616;
  uint64_t v522 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v521;
  if (v521) {
    goto LABEL_193;
  }
  uint64_t v524 = &v618[v617[158]];
  *(void *)uint64_t v524 = v522;
  v524[8] = v523 & 1;
  LOBYTE(v619) = -101;
  uint64_t v525 = v616;
  uint64_t v526 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v525;
  if (v525) {
    goto LABEL_193;
  }
  char v528 = &v618[v617[159]];
  *(void *)char v528 = v526;
  v528[8] = v527 & 1;
  LOBYTE(v619) = -100;
  uint64_t v529 = v616;
  char v530 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v529;
  if (v529) {
    goto LABEL_193;
  }
  v618[v617[160]] = v530;
  LOBYTE(v619) = -99;
  uint64_t v531 = v616;
  uint64_t v532 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v531;
  if (v531) {
    goto LABEL_193;
  }
  uint64_t v534 = &v618[v617[161]];
  *(void *)uint64_t v534 = v532;
  v534[8] = v533 & 1;
  LOBYTE(v619) = -98;
  uint64_t v535 = v616;
  uint64_t v536 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v535;
  if (v535) {
    goto LABEL_193;
  }
  char v538 = &v618[v617[162]];
  *(void *)char v538 = v536;
  v538[8] = v537 & 1;
  LOBYTE(v619) = -97;
  uint64_t v539 = v616;
  uint64_t v540 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v539;
  if (v539
    || (v542 = &v618[v617[163]],
        *(void *)v542 = v540,
        v542[8] = v541 & 1,
        LOBYTE(v619) = -96,
        uint64_t v543 = v616,
        uint64_t v544 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(),
        (uint64_t v616 = v543) != 0))
  {
LABEL_193:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 0;
LABEL_208:
    unint64_t v24 = 1736708;
LABEL_5:
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v615);
    uint64_t v26 = (v24 >> 15) & 1;
    uint64_t v27 = (v24 >> 17) & 1;
    uint64_t v13 = (v24 >> 19) & 1;
    __int16 v28 = v24;
    uint64_t v29 = (v24 >> 20) & 1;
    uint64_t v30 = (v25 >> 1) & 1;
    uint64_t v31 = (v25 >> 4) & 1;
    if (v23)
    {
      sub_100037A24(*(void *)v618, *((void *)v618 + 1));
      if ((v23 & 0x40) == 0)
      {
LABEL_7:
        if ((v23 & 0x100) == 0) {
          goto LABEL_8;
        }
        goto LABEL_19;
      }
    }
    else if ((v23 & 0x40) == 0)
    {
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
    if ((v23 & 0x100) == 0)
    {
LABEL_8:
      if ((v23 & 0x4000000) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    if ((v23 & 0x4000000) == 0)
    {
LABEL_9:
      if ((v23 & 0x200000000000) == 0) {
        goto LABEL_10;
      }
      goto LABEL_21;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    if ((v23 & 0x200000000000) == 0)
    {
LABEL_10:
      if ((v23 & 0x1000000000000) == 0) {
        goto LABEL_11;
      }
      goto LABEL_22;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    if ((v23 & 0x1000000000000) == 0)
    {
LABEL_11:
      if ((v23 & 0x2000000000000) == 0) {
        goto LABEL_12;
      }
      goto LABEL_23;
    }
LABEL_22:

    if ((v23 & 0x2000000000000) == 0)
    {
LABEL_12:
      if ((v23 & 0x100000000000000) == 0) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    if ((v23 & 0x100000000000000) == 0)
    {
LABEL_13:
      if ((v23 & 0x200000000000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_25;
    }
LABEL_24:
    sub_10001DAB4((uint64_t)&v618[v617[60]], &qword_101638CF0);
    if ((v23 & 0x200000000000000) == 0)
    {
LABEL_14:
      if ((v23 & 0x800000000000000) == 0) {
        goto LABEL_15;
      }
      goto LABEL_26;
    }
LABEL_25:
    sub_10001DAB4((uint64_t)&v618[v617[61]], (uint64_t *)&unk_10163AC90);
    if ((v23 & 0x800000000000000) == 0)
    {
LABEL_15:
      if ((v28 & 4) != 0) {
        goto LABEL_214;
      }
LABEL_27:
      if ((v28 & 0x8000) == 0) {
        goto LABEL_215;
      }
LABEL_28:
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_216;
      }
LABEL_29:
      if (!v13) {
        goto LABEL_217;
      }
LABEL_30:
      swift_bridgeObjectRelease();
      if (v29) {
        goto LABEL_218;
      }
LABEL_31:
      if (!v30) {
        goto LABEL_219;
      }
LABEL_32:
      swift_bridgeObjectRelease();
      if (v31) {
        goto LABEL_220;
      }
      goto LABEL_33;
    }
LABEL_26:
    sub_10001DAB4((uint64_t)&v618[v617[63]], (uint64_t *)&unk_10163AC90);
    if ((v28 & 4) != 0) {
      goto LABEL_214;
    }
    goto LABEL_27;
  }
  unint64_t v25 = 0x100000012;
  uint64_t v546 = (uint64_t *)&v618[v617[164]];
  *uint64_t v546 = v544;
  v546[1] = v545;
  LOBYTE(v619) = -95;
  uint64_t v547 = v616;
  uint64_t v548 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v547;
  if (v547) {
    goto LABEL_207;
  }
  uint64_t v550 = &v618[v617[165]];
  *(void *)uint64_t v550 = v548;
  v550[8] = v549 & 1;
  LOBYTE(v619) = -94;
  uint64_t v551 = v616;
  char v552 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v551;
  if (v551) {
    goto LABEL_207;
  }
  v618[v617[166]] = v552;
  LOBYTE(v619) = -93;
  uint64_t v553 = v616;
  char v554 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v553;
  if (v553) {
    goto LABEL_207;
  }
  v618[v617[167]] = v554;
  LOBYTE(v619) = -92;
  uint64_t v555 = v616;
  uint64_t v556 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v555;
  if (v555) {
    goto LABEL_207;
  }
  char v558 = &v618[v617[168]];
  *(void *)char v558 = v556;
  v558[8] = v557 & 1;
  LOBYTE(v619) = -91;
  uint64_t v559 = v616;
  uint64_t v560 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v559;
  if (v559) {
    goto LABEL_207;
  }
  v562 = &v618[v617[169]];
  *(void *)v562 = v560;
  v562[8] = v561 & 1;
  LOBYTE(v619) = -90;
  uint64_t v563 = v616;
  char v564 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v563;
  if (v563) {
    goto LABEL_207;
  }
  v618[v617[170]] = v564;
  LOBYTE(v619) = -89;
  uint64_t v565 = v616;
  uint64_t v566 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v565;
  if (v565) {
    goto LABEL_207;
  }
  v567 = &v618[v617[171]];
  *(_DWORD *)v567 = v566;
  v567[4] = BYTE4(v566) & 1;
  LOBYTE(v619) = -88;
  uint64_t v568 = v616;
  uint64_t v569 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v568;
  if (v568) {
    goto LABEL_207;
  }
  uint64_t v571 = &v618[v617[172]];
  *(void *)uint64_t v571 = v569;
  v571[8] = v570 & 1;
  LOBYTE(v619) = -87;
  uint64_t v572 = v616;
  uint64_t v573 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v572;
  if (v572) {
    goto LABEL_207;
  }
  uint64_t v575 = &v618[v617[173]];
  *(void *)uint64_t v575 = v573;
  v575[8] = v574 & 1;
  LOBYTE(v619) = -86;
  uint64_t v576 = v616;
  uint64_t v577 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v576;
  if (v576) {
    goto LABEL_207;
  }
  uint64_t v579 = &v618[v617[174]];
  *(void *)uint64_t v579 = v577;
  v579[8] = v578 & 1;
  LOBYTE(v619) = -85;
  uint64_t v580 = v616;
  uint64_t v581 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v580;
  if (v580) {
    goto LABEL_207;
  }
  char v583 = &v618[v617[175]];
  *(void *)char v583 = v581;
  v583[8] = v582 & 1;
  LOBYTE(v619) = -84;
  uint64_t v584 = v616;
  uint64_t v585 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v584;
  if (v584
    || (v587 = &v618[v617[176]],
        *(void *)v587 = v585,
        v587[8] = v586 & 1,
        LOBYTE(v619) = -83,
        uint64_t v588 = v616,
        uint64_t v589 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)(),
        (uint64_t v616 = v588) != 0))
  {
LABEL_207:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
    int v22 = 1;
    goto LABEL_208;
  }
  uint64_t v591 = &v618[v617[177]];
  *(void *)uint64_t v591 = v589;
  v591[8] = v590 & 1;
  LOBYTE(v619) = -82;
  uint64_t v592 = v616;
  uint64_t v593 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v616 = v592;
  if (!v592)
  {
    uint64_t v595 = &v618[v617[178]];
    *(void *)uint64_t v595 = v593;
    v595[8] = v594 & 1;
    LOBYTE(v619) = -81;
    uint64_t v596 = v616;
    char v597 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v616 = v596;
    if (!v596)
    {
      v618[v617[179]] = v597;
      LOBYTE(v619) = -80;
      uint64_t v598 = v616;
      uint64_t v599 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
      uint64_t v616 = v598;
      if (!v598)
      {
        uint64_t v601 = &v618[v617[180]];
        *(void *)uint64_t v601 = v599;
        v601[8] = v600 & 1;
        LOBYTE(v619) = -79;
        uint64_t v602 = v616;
        uint64_t v603 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
        uint64_t v616 = v602;
        if (!v602)
        {
          uint64_t v607 = v603;
          char v608 = v604;
          (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
          uint64_t v609 = (uint64_t)v618;
          char v610 = &v618[v617[181]];
          *(void *)char v610 = v607;
          v610[8] = v608 & 1;
          sub_100946E74(v609, v20);
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v615);
          sub_100946ED8(v609);
          return;
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v613, v614);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v615);
  char v605 = (id *)v618;
  sub_100037A24(*(void *)v618, *((void *)v618 + 1));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v27 = (uint64_t)v617;
  sub_10001DAB4((uint64_t)v605 + v617[60], &qword_101638CF0);
  sub_10001DAB4((uint64_t)v605 + *(int *)(v27 + 244), (uint64_t *)&unk_10163AC90);
  sub_10001DAB4((uint64_t)v605 + *(int *)(v27 + 252), (uint64_t *)&unk_10163AC90);
  LOBYTE(v26) = 1;
  LODWORD(v27) = 1;
  LODWORD(v13) = 1;
  LODWORD(v29) = 1;
  LODWORD(v30) = 1;
  LODWORD(v31) = 1;
  int v22 = 1;
LABEL_214:
  uint64_t v606 = (uint64_t *)&v618[v617[70]];
  sub_1009404E4(*v606, v606[1], v606[2], v606[3], v606[4], v606[5], v606[6]);
  if (v26) {
    goto LABEL_28;
  }
LABEL_215:
  if (!v27) {
    goto LABEL_29;
  }
LABEL_216:
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_30;
  }
LABEL_217:
  if (!v29) {
    goto LABEL_31;
  }
LABEL_218:
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_32;
  }
LABEL_219:
  if (v31)
  {
LABEL_220:
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      return;
    }
    goto LABEL_221;
  }
LABEL_33:
  if (!v22) {
    return;
  }
LABEL_221:
  swift_bridgeObjectRelease();
}

unint64_t sub_10093B014()
{
  return sub_100934BA4(*v0);
}

uint64_t sub_10093B01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10094754C(a1, a2);
  *a3 = result;
  return result;
}

void sub_10093B044(unsigned char *a1@<X8>)
{
  *a1 = -78;
}

uint64_t sub_10093B050(uint64_t a1)
{
  unint64_t v2 = sub_100946BE4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10093B08C(uint64_t a1)
{
  unint64_t v2 = sub_100946BE4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10093B0C8()
{
  uint64_t v1 = *(void *)v0;
  sub_100037A38(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t sub_10093B0FC()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10093B108()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_10093B114()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_10093B120()
{
  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t sub_10093B128()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093B130()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_10093B138()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10093B168()
{
  return *(unsigned __int8 *)(v0 + 105);
}

uint64_t sub_10093B170()
{
  return *(void *)(v0 + 96);
}

uint64_t sub_10093B17C()
{
  return *(unsigned __int8 *)(v0 + 106);
}

uint64_t sub_10093B184()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_10093B190()
{
  return *(void *)(v0 + 128);
}

uint64_t sub_10093B19C()
{
  return *(void *)(v0 + 144);
}

uint64_t sub_10093B1A8()
{
  return *(void *)(v0 + 160);
}

uint64_t sub_10093B1B4()
{
  return *(void *)(v0 + 176);
}

uint64_t sub_10093B1C0()
{
  return *(void *)(v0 + 192);
}

uint64_t sub_10093B1CC()
{
  return *(void *)(v0 + 208);
}

uint64_t sub_10093B1D8()
{
  return *(void *)(v0 + 224);
}

uint64_t sub_10093B1E4()
{
  return *(void *)(v0 + 240);
}

uint64_t sub_10093B1F0()
{
  return *(void *)(v0 + 256);
}

uint64_t sub_10093B200()
{
  return *(void *)(v0 + 272);
}

uint64_t sub_10093B210()
{
  return *(void *)(v0 + 288);
}

uint64_t sub_10093B220()
{
  return *(void *)(v0 + 304);
}

uint64_t sub_10093B230()
{
  return *(unsigned __int8 *)(v0 + 313);
}

uint64_t sub_10093B238()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093B240()
{
  return *(void *)(v0 + 328);
}

uint64_t sub_10093B250()
{
  return *(void *)(v0 + 344);
}

uint64_t sub_10093B260()
{
  return *(void *)(v0 + 360);
}

uint64_t sub_10093B270()
{
  return *(void *)(v0 + 376);
}

uint64_t sub_10093B280()
{
  return *(void *)(v0 + 392);
}

uint64_t sub_10093B290()
{
  return *(void *)(v0 + 408);
}

uint64_t sub_10093B2A0()
{
  return *(void *)(v0 + 424);
}

uint64_t sub_10093B2B0()
{
  return *(void *)(v0 + 440);
}

uint64_t sub_10093B2C0()
{
  return *(void *)(v0 + 456);
}

uint64_t sub_10093B2D0()
{
  return *(void *)(v0 + 472);
}

uint64_t sub_10093B2E0()
{
  return *(unsigned __int8 *)(v0 + 481);
}

uint64_t sub_10093B2E8()
{
  return *(void *)(v0 + 488);
}

uint64_t sub_10093B2F8()
{
  return *(void *)(v0 + 504);
}

uint64_t sub_10093B308()
{
  return *(void *)(v0 + 520);
}

uint64_t sub_10093B318()
{
  return *(void *)(v0 + 536);
}

uint64_t sub_10093B328()
{
  return *(void *)(v0 + 552);
}

uint64_t sub_10093B338()
{
  return *(void *)(v0 + 568);
}

uint64_t sub_10093B348()
{
  return *(void *)(v0 + 584);
}

uint64_t sub_10093B358()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093B360()
{
  return *(void *)(v0 + 608);
}

uint64_t sub_10093B370()
{
  return *(void *)(v0 + 624);
}

void *sub_10093B380()
{
  uint64_t v1 = *(void **)(v0 + 640);
  id v2 = v1;
  return v1;
}

uint64_t sub_10093B3A8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093B3B0()
{
  return *(void *)(v0 + 656);
}

uint64_t sub_10093B3C0()
{
  return *(void *)(v0 + 672);
}

uint64_t sub_10093B3D0()
{
  return *(void *)(v0 + 688);
}

uint64_t sub_10093B3E0()
{
  return *(void *)(v0 + 704);
}

uint64_t sub_10093B3F0()
{
  return *(void *)(v0 + 720);
}

uint64_t sub_10093B400()
{
  return *(unsigned __int8 *)(v0 + 729);
}

uint64_t sub_10093B408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D074(v2 + *(int *)(a1 + 240), a2, &qword_101638CF0);
}

uint64_t sub_10093B434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D074(v2 + *(int *)(a1 + 244), a2, (uint64_t *)&unk_10163AC90);
}

uint64_t sub_10093B460(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 248));
}

uint64_t sub_10093B474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D074(v2 + *(int *)(a1 + 252), a2, (uint64_t *)&unk_10163AC90);
}

uint64_t sub_10093B4A0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 256));
}

uint64_t sub_10093B4B4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 260));
}

uint64_t sub_10093B4C8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 264));
}

uint64_t sub_10093B4DC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 268));
}

uint64_t sub_10093B4F0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 272));
}

uint64_t sub_10093B504(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 276));
}

uint64_t sub_10093B518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10001D074(v2 + *(int *)(a1 + 280), a2, &qword_101652428);
}

uint64_t sub_10093B544(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 284));
}

uint64_t sub_10093B550(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 288));
}

uint64_t sub_10093B55C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 292));
}

uint64_t sub_10093B568(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 296));
}

uint64_t sub_10093B57C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 300));
}

uint64_t sub_10093B590(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 304));
}

uint64_t sub_10093B5A4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 308));
}

uint64_t sub_10093B5B8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 312));
}

uint64_t sub_10093B5CC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 316));
}

uint64_t sub_10093B5E0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 320));
}

uint64_t sub_10093B5F4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 324));
}

uint64_t sub_10093B608(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 328));
}

uint64_t sub_10093B61C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 332));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10093B654(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 336));
}

uint64_t sub_10093B668(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 340));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10093B6A0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 344));
}

uint64_t sub_10093B6B4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093B6C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 352));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10093B6F8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 356));
}

uint64_t sub_10093B70C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 360));
}

uint64_t sub_10093B718(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 364));
}

uint64_t sub_10093B724(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 368));
}

uint64_t sub_10093B730(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 372));
}

uint64_t sub_10093B73C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 376));
}

uint64_t sub_10093B750(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 380));
}

uint64_t sub_10093B764(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 384));
}

uint64_t sub_10093B778(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 388));
}

uint64_t sub_10093B78C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 392));
}

uint64_t sub_10093B7A0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 396));
}

uint64_t sub_10093B7B4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 400));
}

uint64_t sub_10093B7C8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 404));
}

uint64_t sub_10093B7DC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 408));
}

uint64_t sub_10093B7F0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 412));
}

uint64_t sub_10093B804(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 416));
}

uint64_t sub_10093B818(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 420));
}

uint64_t sub_10093B82C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 424));
}

uint64_t sub_10093B840(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 428));
}

uint64_t sub_10093B854(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 432));
}

uint64_t sub_10093B868(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 436));
}

uint64_t sub_10093B87C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 440));
}

uint64_t sub_10093B890(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 444));
}

uint64_t sub_10093B8A4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 448));
}

uint64_t sub_10093B8B8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 452));
}

uint64_t sub_10093B8CC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 456));
}

uint64_t sub_10093B8E0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 460));
}

uint64_t sub_10093B8F4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 464));
}

uint64_t sub_10093B900(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 468));
}

uint64_t sub_10093B914(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 472));
}

uint64_t sub_10093B928(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 476));
}

uint64_t sub_10093B93C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 480));
}

uint64_t sub_10093B948(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 484));
}

uint64_t sub_10093B954(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 488));
}

uint64_t sub_10093B960(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 492));
}

uint64_t sub_10093B974(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 496));
}

uint64_t sub_10093B988(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 500));
}

uint64_t sub_10093B99C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 504));
}

uint64_t sub_10093B9B0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 508));
}

uint64_t sub_10093B9C4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 512));
}

uint64_t sub_10093B9D8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 516));
}

uint64_t sub_10093B9EC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 520));
}

uint64_t sub_10093BA00(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 524));
}

uint64_t sub_10093BA0C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 528));
}

uint64_t sub_10093BA20()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093BA2C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 536));
}

uint64_t sub_10093BA40(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 540));
}

uint64_t sub_10093BA4C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10093BA58(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 548));
}

uint64_t sub_10093BA64(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 552));
}

uint64_t sub_10093BA78(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 556));
}

uint64_t sub_10093BA8C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 560));
}

uint64_t sub_10093BA98(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 564));
}

uint64_t sub_10093BAA4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 568));
}

uint64_t sub_10093BAB8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 572));
}

uint64_t sub_10093BACC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 576));
}

uint64_t sub_10093BAE0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 580));
}

uint64_t sub_10093BAF4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 584));
}

uint64_t sub_10093BB08(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 588));
}

uint64_t sub_10093BB1C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 592));
}

uint64_t sub_10093BB30(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 596));
}

uint64_t sub_10093BB44(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 600));
}

uint64_t sub_10093BB58(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 604));
}

uint64_t sub_10093BB6C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 608));
}

uint64_t sub_10093BB80(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 612));
}

uint64_t sub_10093BB94(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 616));
}

uint64_t sub_10093BBA8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 620));
}

uint64_t sub_10093BBBC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 624));
}

uint64_t sub_10093BBD0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 628));
}

uint64_t sub_10093BBE4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 632));
}

uint64_t sub_10093BBF8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 636));
}

uint64_t sub_10093BC0C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 640));
}

uint64_t sub_10093BC18(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 644));
}

uint64_t sub_10093BC2C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 648));
}

uint64_t sub_10093BC40(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 652));
}

uint64_t sub_10093BC54(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 656));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10093BC8C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 660));
}

uint64_t sub_10093BCA0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 664));
}

uint64_t sub_10093BCAC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 668));
}

uint64_t sub_10093BCB8(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 672));
}

uint64_t sub_10093BCCC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 676));
}

uint64_t sub_10093BCE0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 680));
}

unint64_t sub_10093BCEC(uint64_t a1)
{
  return *(unsigned int *)(v1 + *(int *)(a1 + 684)) | ((unint64_t)*(unsigned __int8 *)(v1 + *(int *)(a1 + 684) + 4) << 32);
}

uint64_t sub_10093BD14(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 688));
}

uint64_t sub_10093BD28(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 692));
}

uint64_t sub_10093BD3C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 696));
}

uint64_t sub_10093BD50(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 700));
}

uint64_t sub_10093BD64(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 704));
}

uint64_t sub_10093BD78(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 708));
}

uint64_t sub_10093BD8C(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 712));
}

uint64_t sub_10093BDA0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 716));
}

uint64_t sub_10093BDAC(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 720));
}

uint64_t sub_10093BDC0(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 724));
}

void sub_10093BDD4(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10093BDEC(void *a1)
{
  return sub_100935A5C(a1);
}

uint64_t sub_10093BE08()
{
  sub_10092CF14((uint64_t)&off_10159F0A8);
  uint64_t v0 = Dictionary<>.dataRepresentation.getter();
  uint64_t v2 = v1;
  uint64_t result = swift_bridgeObjectRelease();
  qword_10170E660 = v0;
  *(void *)algn_10170E668 = v2;
  return result;
}

void sub_10093BE94()
{
  qword_10170E670 = (uint64_t)&off_10159F0E0;
}

unint64_t sub_10093BEA8()
{
  sub_10000588C(&qword_101652358);
  uint64_t v0 = (int *)(sub_10000588C(&qword_101652360) - 8);
  unint64_t v1 = (*(unsigned __int8 *)(*(void *)v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v0 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_101342130;
  unint64_t v2 = v15 + v1 + v0[14];
  *(unsigned char *)(v15 + v1) = 1;
  unint64_t v14 = sub_10092D028((uint64_t)&off_10159F140);
  sub_10000588C(&qword_101652368);
  uint64_t v3 = *(void *)(sub_10000588C(&qword_101652370) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10134CDE0;
  uint64_t v7 = (void *)(v6 + v5);
  *uint64_t v7 = 0x656E6F685069;
  v7[1] = 0xE600000000000000;
  SystemVersionNumber.init(stringLiteral:)();
  uint64_t v8 = (void *)(v6 + v5 + v4);
  *uint64_t v8 = 1684099177;
  v8[1] = 0xE400000000000000;
  SystemVersionNumber.init(stringLiteral:)();
  uint64_t v9 = (void *)(v6 + v5 + 2 * v4);
  *uint64_t v9 = 0x506B6F6F4263614DLL;
  v9[1] = 0xEA00000000006F72;
  SystemVersionNumber.init(stringLiteral:)();
  uint64_t v10 = (void *)(v6 + v5 + 3 * v4);
  *uint64_t v10 = 0x416B6F6F4263614DLL;
  v10[1] = 0xEA00000000007269;
  SystemVersionNumber.init(stringLiteral:)();
  uint64_t v11 = (void *)(v6 + v5 + 4 * v4);
  *uint64_t v11 = 1685016681;
  v11[1] = 0xE400000000000000;
  SystemVersionNumber.init(stringLiteral:)();
  unint64_t v12 = sub_10092D13C(v6);
  *(unsigned char *)unint64_t v2 = 1;
  *(void *)(v2 + 8) = v14;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v12;
  *(void *)(v2 + 32) = 0;
  type metadata accessor for FeatureSupportMatrix();
  sub_1008BB900();
  sub_100940314();
  CustomCodableKeyDictionary.init(wrappedValue:)();
  unint64_t result = sub_10092D33C(v15);
  qword_10170E678 = result;
  return result;
}

id sub_10093C1AC()
{
  qword_10170E680 = SPServiceStateEnabled;
  return SPServiceStateEnabled;
}

id sub_10093C1C4()
{
  sub_10000588C(&qword_10164C958);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101342130;
  unint64_t v1 = (void *)SPDisabledReasoniCloudSignedOut;
  *(void *)(v0 + 32) = SPDisabledReasoniCloudSignedOut;
  qword_10170E688 = v0;

  return v1;
}

double sub_10093C224()
{
  xmmword_10170E690 = xmmword_10136E650;
  xmmword_10170E6A0 = xmmword_10136E660;
  xmmword_10170E6B0 = xmmword_10136E670;
  qword_10170E6C0 = (uint64_t)&off_10159F1D8;
  double result = 0.0;
  unk_10170E6C8 = 0u;
  unk_10170E6D8 = 0u;
  *(_OWORD *)&qword_10170E6E8 = 0u;
  qword_10170E6F8 = 0;
  return result;
}

void *sub_10093C270()
{
  double result = sub_1004E13B8();
  qword_10170E700 = (uint64_t)result;
  return result;
}

void sub_10093C290()
{
  qword_10170E708 = 150;
}

void sub_10093C2A0()
{
  qword_10170E710 = 0x4122750000000000;
}

void sub_10093C2B4()
{
  qword_10170E718 = 0x408C200000000000;
}

void sub_10093C2C8()
{
  qword_10170E720 = 0x40F5180000000000;
}

void sub_10093C2DC()
{
  qword_10170E728 = 0x4143C68000000000;
}

void sub_10093C2F0()
{
  qword_10170E730 = (uint64_t)&off_10159F230;
}

unint64_t sub_10093C304()
{
  unint64_t result = sub_10092D530((uint64_t)&off_10159F268);
  qword_10170E738 = result;
  return result;
}

BOOL sub_10093C32C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v790 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v788 = (uint64_t)&v761 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v784 = sub_10000588C((uint64_t *)&unk_10165C700);
  uint64_t v6 = __chkstk_darwin(v784);
  uint64_t v789 = (uint64_t)&v761 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v783 = (uint64_t)&v761 - v8;
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v787 = (uint64_t)&v761 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v785 = (uint64_t)&v761 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v786 = (uint64_t)&v761 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v782 = (uint64_t)&v761 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v780 = (uint64_t)&v761 - v19;
  __chkstk_darwin(v18);
  uint64_t v781 = (uint64_t)&v761 - v20;
  uint64_t v779 = type metadata accessor for UUID();
  uint64_t v777 = *(void *)(v779 - 8);
  __chkstk_darwin(v779);
  v776 = (char *)&v761 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10000588C((uint64_t *)&unk_10166EAF0);
  __chkstk_darwin(v22);
  uint64_t v778 = (uint64_t)&v761 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10000588C(&qword_101638CF0);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  __int16 v28 = (char *)&v761 - v27;
  __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v761 - v30;
  uint64_t v33 = *a1;
  unint64_t v32 = a1[1];
  v791 = a1;
  uint64_t v35 = *a2;
  unint64_t v34 = a2[1];
  if (v32 >> 60 == 15)
  {
    if (v34 >> 60 == 15)
    {
      uint64_t v774 = v29;
      uint64_t v775 = v4;
      char v36 = a2;
      sub_100037A38(v33, v32);
      sub_100037A38(v35, v34);
      sub_100037A24(v33, v32);
      goto LABEL_7;
    }
LABEL_5:
    sub_100037A38(v33, v32);
    sub_100037A38(v35, v34);
    sub_100037A24(v33, v32);
    sub_100037A24(v35, v34);
    return 0;
  }
  if (v34 >> 60 == 15) {
    goto LABEL_5;
  }
  uint64_t v774 = v29;
  uint64_t v775 = v4;
  char v36 = a2;
  sub_100037A38(v33, v32);
  sub_100037A38(v35, v34);
  sub_100037A38(v33, v32);
  char v38 = _s12searchpartyd24KeyRepresentableInternalV23__derived_struct_equalsySbAC_ACtFZ_0(v33, v32, v35, v34);
  sub_100037A24(v35, v34);
  sub_100037A24(v33, v32);
  sub_100037A24(v33, v32);
  if ((v38 & 1) == 0) {
    return 0;
  }
LABEL_7:
  uint64_t v39 = v36;
  char v40 = *((unsigned char *)v36 + 24);
  if (v791[3])
  {
    if (!*((unsigned char *)v36 + 24)) {
      return 0;
    }
  }
  else
  {
    if (v791[2] != v36[2]) {
      char v40 = 1;
    }
    if (v40) {
      return 0;
    }
  }
  char v41 = *((unsigned char *)v36 + 25);
  uint64_t v42 = v791;
  if ((sub_10071BB44(*((unsigned char *)v791 + 25), v41) & 1) == 0) {
    return 0;
  }
  char v43 = *((unsigned char *)v39 + 40);
  if (v42[5])
  {
    if (!*((unsigned char *)v39 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*((double *)v42 + 4) != *((double *)v39 + 4)) {
      char v43 = 1;
    }
    if (v43) {
      return 0;
    }
  }
  char v44 = *((unsigned char *)v39 + 56);
  if (v791[7])
  {
    if (!*((unsigned char *)v39 + 56)) {
      return 0;
    }
  }
  else
  {
    if (*((double *)v791 + 6) != *((double *)v39 + 6)) {
      char v44 = 1;
    }
    if (v44) {
      return 0;
    }
  }
  int v45 = *((unsigned __int8 *)v791 + 57);
  int v46 = *((unsigned __int8 *)v39 + 57);
  if (v45 == 2)
  {
    if (v46 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v47 = (v45 & 1) == 0;
    if (v46 == 2 || ((v47 ^ v46) & 1) == 0) {
      return result;
    }
  }
  char v48 = (void *)v791[8];
  uint64_t v49 = (void *)v39[8];
  if (v48)
  {
    if (!v49 || (sub_100335B90(v48, v49) & 1) == 0) {
      return 0;
    }
  }
  else if (v49)
  {
    return 0;
  }
  int v50 = *((unsigned __int8 *)v791 + 72);
  int v51 = *((unsigned __int8 *)v39 + 72);
  if (v50 == 2)
  {
    if (v51 != 2) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    BOOL v52 = (v50 & 1) == 0;
    if (v51 == 2 || ((v52 ^ v51) & 1) == 0) {
      return result;
    }
  }
  uint64_t v53 = v791[11];
  uint64_t v54 = v39[11];
  if (!v53)
  {
    if (v54) {
      return 0;
    }
    goto LABEL_48;
  }
  if (!v54) {
    return 0;
  }
  if (v791[10] == v39[10] && v53 == v54
    || (v55 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v55 & 1) != 0))
  {
LABEL_48:
    char v56 = *((unsigned char *)v39 + 104);
    if (v791[13])
    {
      if (!*((unsigned char *)v39 + 104)) {
        return 0;
      }
    }
    else
    {
      if (v791[12] != v39[12]) {
        char v56 = 1;
      }
      if (v56) {
        return 0;
      }
    }
    int v57 = *((unsigned __int8 *)v791 + 105);
    int v58 = *((unsigned __int8 *)v39 + 105);
    if (v57 == 2)
    {
      char v59 = v39;
      if (v58 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v60 = (v57 & 1) == 0;
      if (v58 == 2) {
        return result;
      }
      char v59 = v39;
      if (((v60 ^ v58) & 1) == 0) {
        return result;
      }
    }
    int v61 = *((unsigned __int8 *)v791 + 106);
    int v62 = *((unsigned __int8 *)v59 + 106);
    if (v61 == 2)
    {
      if (v62 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v63 = (v61 & 1) == 0;
      if (v62 == 2 || ((v63 ^ v62) & 1) == 0) {
        return result;
      }
    }
    char v64 = *((unsigned char *)v59 + 120);
    if (v791[15])
    {
      if (!*((unsigned char *)v59 + 120)) {
        return 0;
      }
    }
    else
    {
      if (v791[14] != v59[14]) {
        char v64 = 1;
      }
      if (v64) {
        return 0;
      }
    }
    uint64_t v65 = v59;
    char v66 = *((unsigned char *)v59 + 136);
    if (v791[17])
    {
      if (!*((unsigned char *)v59 + 136)) {
        return 0;
      }
    }
    else
    {
      if (v791[16] != v59[16]) {
        char v66 = 1;
      }
      if (v66) {
        return 0;
      }
    }
    char v67 = *((unsigned char *)v59 + 152);
    if (v791[19])
    {
      if (!*((unsigned char *)v59 + 152)) {
        return 0;
      }
    }
    else
    {
      if (v791[18] != v59[18]) {
        char v67 = 1;
      }
      if (v67) {
        return 0;
      }
    }
    char v68 = *((unsigned char *)v59 + 168);
    if (v791[21])
    {
      if (!*((unsigned char *)v59 + 168)) {
        return 0;
      }
    }
    else
    {
      if (v791[20] != v59[20]) {
        char v68 = 1;
      }
      if (v68) {
        return 0;
      }
    }
    char v69 = *((unsigned char *)v59 + 184);
    if (v791[23])
    {
      if (!*((unsigned char *)v59 + 184)) {
        return 0;
      }
    }
    else
    {
      if (v791[22] != v59[22]) {
        char v69 = 1;
      }
      if (v69) {
        return 0;
      }
    }
    char v70 = *((unsigned char *)v59 + 200);
    if (v791[25])
    {
      if (!*((unsigned char *)v59 + 200)) {
        return 0;
      }
    }
    else
    {
      if (*((double *)v791 + 24) != *((double *)v59 + 24)) {
        char v70 = 1;
      }
      if (v70) {
        return 0;
      }
    }
    char v71 = *((unsigned char *)v59 + 216);
    if (v791[27])
    {
      if (!*((unsigned char *)v59 + 216)) {
        return 0;
      }
    }
    else
    {
      if (v791[26] != v59[26]) {
        char v71 = 1;
      }
      if (v71) {
        return 0;
      }
    }
    char v72 = *((unsigned char *)v59 + 232);
    if (v791[29])
    {
      if (!*((unsigned char *)v59 + 232)) {
        return 0;
      }
    }
    else
    {
      if (v791[28] != v59[28]) {
        char v72 = 1;
      }
      if (v72) {
        return 0;
      }
    }
    char v73 = *((unsigned char *)v59 + 248);
    if (v791[31])
    {
      if (!*((unsigned char *)v59 + 248)) {
        return 0;
      }
    }
    else
    {
      if (*((double *)v791 + 30) != *((double *)v59 + 30)) {
        char v73 = 1;
      }
      if (v73) {
        return 0;
      }
    }
    uint64_t v74 = v791 + 33;
    char v75 = *((unsigned char *)v59 + 264);
    if (v791[33])
    {
      if (!*((unsigned char *)v59 + 264)) {
        return 0;
      }
    }
    else
    {
      if (v791[32] != v59[32]) {
        char v75 = 1;
      }
      if (v75) {
        return 0;
      }
    }
    char v76 = *((unsigned char *)v59 + 280);
    if (v791[35])
    {
      if (!*((unsigned char *)v59 + 280)) {
        return 0;
      }
    }
    else
    {
      if (v791[34] != v59[34]) {
        char v76 = 1;
      }
      if (v76) {
        return 0;
      }
    }
    char v77 = *((unsigned char *)v59 + 296);
    if (v791[37])
    {
      if (!*((unsigned char *)v59 + 296)) {
        return 0;
      }
    }
    else
    {
      if (v791[36] != v59[36]) {
        char v77 = 1;
      }
      if (v77) {
        return 0;
      }
    }
    char v78 = *((unsigned char *)v59 + 312);
    if (v791[39])
    {
      if (!*((unsigned char *)v59 + 312)) {
        return 0;
      }
    }
    else
    {
      if (v791[38] != v59[38]) {
        char v78 = 1;
      }
      if (v78) {
        return 0;
      }
    }
    int v79 = *((unsigned __int8 *)v791 + 313);
    int v80 = *((unsigned __int8 *)v59 + 313);
    if (v79 == 2)
    {
      if (v80 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v81 = (v79 & 1) == 0;
      if (v80 == 2 || ((v81 ^ v80) & 1) == 0) {
        return result;
      }
    }
    uint64_t v82 = v59[40];
    if (v791[40])
    {
      if (!v82) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v83 = swift_bridgeObjectRetain();
      char v84 = sub_100DF5444(v83, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v84 & 1) == 0) {
        return 0;
      }
    }
    else if (v82)
    {
      return 0;
    }
    char v85 = *((unsigned char *)v65 + 336);
    if (v74[72])
    {
      if (!*((unsigned char *)v65 + 336)) {
        return 0;
      }
    }
    else
    {
      if (v791[41] != v65[41]) {
        char v85 = 1;
      }
      if (v85) {
        return 0;
      }
    }
    char v86 = *((unsigned char *)v65 + 352);
    if (v74[88])
    {
      if (!*((unsigned char *)v65 + 352)) {
        return 0;
      }
    }
    else
    {
      if (v791[43] != v65[43]) {
        char v86 = 1;
      }
      if (v86) {
        return 0;
      }
    }
    char v87 = *((unsigned char *)v65 + 368);
    if (v74[104])
    {
      if (!*((unsigned char *)v65 + 368)) {
        return 0;
      }
    }
    else
    {
      if (v791[45] != v65[45]) {
        char v87 = 1;
      }
      if (v87) {
        return 0;
      }
    }
    char v88 = *((unsigned char *)v65 + 384);
    if (v74[120])
    {
      if (!*((unsigned char *)v65 + 384)) {
        return 0;
      }
    }
    else
    {
      if (v791[47] != v65[47]) {
        char v88 = 1;
      }
      if (v88) {
        return 0;
      }
    }
    char v89 = *((unsigned char *)v65 + 400);
    if (v74[136])
    {
      if (!*((unsigned char *)v65 + 400)) {
        return 0;
      }
    }
    else
    {
      if (v791[49] != v65[49]) {
        char v89 = 1;
      }
      if (v89) {
        return 0;
      }
    }
    char v90 = *((unsigned char *)v65 + 416);
    if (v74[152])
    {
      if (!*((unsigned char *)v65 + 416)) {
        return 0;
      }
    }
    else
    {
      if (v791[51] != v65[51]) {
        char v90 = 1;
      }
      if (v90) {
        return 0;
      }
    }
    char v91 = *((unsigned char *)v65 + 432);
    if (v74[168])
    {
      if (!*((unsigned char *)v65 + 432)) {
        return 0;
      }
    }
    else
    {
      if (v791[53] != v65[53]) {
        char v91 = 1;
      }
      if (v91) {
        return 0;
      }
    }
    char v92 = *((unsigned char *)v65 + 448);
    if (v74[184])
    {
      if (!*((unsigned char *)v65 + 448)) {
        return 0;
      }
    }
    else
    {
      if (v791[55] != v65[55]) {
        char v92 = 1;
      }
      if (v92) {
        return 0;
      }
    }
    char v93 = *((unsigned char *)v65 + 464);
    if (v74[200])
    {
      if (!*((unsigned char *)v65 + 464)) {
        return 0;
      }
    }
    else
    {
      if (v791[57] != v65[57]) {
        char v93 = 1;
      }
      if (v93) {
        return 0;
      }
    }
    char v94 = *((unsigned char *)v65 + 480);
    if (v74[216])
    {
      if (!*((unsigned char *)v65 + 480)) {
        return 0;
      }
    }
    else
    {
      if (v791[59] != v65[59]) {
        char v94 = 1;
      }
      if (v94) {
        return 0;
      }
    }
    int v95 = *((unsigned __int8 *)v791 + 481);
    int v96 = *((unsigned __int8 *)v65 + 481);
    if (v95 == 2)
    {
      if (v96 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v97 = (v95 & 1) == 0;
      if (v96 == 2 || ((v97 ^ v96) & 1) == 0) {
        return result;
      }
    }
    char v98 = *((unsigned char *)v65 + 496);
    if (v74[232])
    {
      if (!*((unsigned char *)v65 + 496)) {
        return 0;
      }
    }
    else
    {
      if (v791[61] != v65[61]) {
        char v98 = 1;
      }
      if (v98) {
        return 0;
      }
    }
    char v99 = *((unsigned char *)v65 + 512);
    if (v74[248])
    {
      if (!*((unsigned char *)v65 + 512)) {
        return 0;
      }
    }
    else
    {
      if (v791[63] != v65[63]) {
        char v99 = 1;
      }
      if (v99) {
        return 0;
      }
    }
    char v100 = *((unsigned char *)v65 + 528);
    if (v74[264])
    {
      if (!*((unsigned char *)v65 + 528)) {
        return 0;
      }
    }
    else
    {
      if (v791[65] != v65[65]) {
        char v100 = 1;
      }
      if (v100) {
        return 0;
      }
    }
    char v101 = *((unsigned char *)v65 + 544);
    if (v74[280])
    {
      if (!*((unsigned char *)v65 + 544)) {
        return 0;
      }
    }
    else
    {
      if (v791[67] != v65[67]) {
        char v101 = 1;
      }
      if (v101) {
        return 0;
      }
    }
    char v102 = *((unsigned char *)v65 + 560);
    if (v74[296])
    {
      if (!*((unsigned char *)v65 + 560)) {
        return 0;
      }
    }
    else
    {
      if (v791[69] != v65[69]) {
        char v102 = 1;
      }
      if (v102) {
        return 0;
      }
    }
    char v103 = *((unsigned char *)v65 + 576);
    if (v74[312])
    {
      if (!*((unsigned char *)v65 + 576)) {
        return 0;
      }
    }
    else
    {
      if (v791[71] != v65[71]) {
        char v103 = 1;
      }
      if (v103) {
        return 0;
      }
    }
    char v104 = *((unsigned char *)v65 + 592);
    if (v74[328])
    {
      if (!*((unsigned char *)v65 + 592)) {
        return 0;
      }
    }
    else
    {
      if (v791[73] != v65[73]) {
        char v104 = 1;
      }
      if (v104) {
        return 0;
      }
    }
    uint64_t v105 = v791[75];
    uint64_t v106 = v65[75];
    if (v105)
    {
      if (!v106 || (sub_1003369DC(v105, v106) & 1) == 0) {
        return 0;
      }
    }
    else if (v106)
    {
      return 0;
    }
    char v107 = *((unsigned char *)v65 + 616);
    if (v74[352])
    {
      if (!*((unsigned char *)v65 + 616)) {
        return 0;
      }
    }
    else
    {
      if (*((double *)v791 + 76) != *((double *)v65 + 76)) {
        char v107 = 1;
      }
      if (v107) {
        return 0;
      }
    }
    char v108 = *((unsigned char *)v65 + 632);
    if (v74[368])
    {
      if (!*((unsigned char *)v65 + 632)) {
        return 0;
      }
    }
    else
    {
      if (*((double *)v791 + 78) != *((double *)v65 + 78)) {
        char v108 = 1;
      }
      if (v108) {
        return 0;
      }
    }
    uint64_t v109 = (void *)v791[80];
    char v110 = (void *)v65[80];
    if (v109)
    {
      if (!v110) {
        return 0;
      }
      id v111 = v110;
      id v112 = v109;
      char v113 = sub_10071BAB8();

      if ((v113 & 1) == 0) {
        return 0;
      }
    }
    else if (v110)
    {
      return 0;
    }
    uint64_t v114 = v65[81];
    if (v791[81])
    {
      if (!v114) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v115 = swift_bridgeObjectRetain();
      char v116 = sub_100336B4C(v115, v114);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v116 & 1) == 0) {
        return 0;
      }
    }
    else if (v114)
    {
      return 0;
    }
    char v117 = *((unsigned char *)v65 + 664);
    if (v74[400])
    {
      if (!*((unsigned char *)v65 + 664)) {
        return 0;
      }
    }
    else
    {
      if (v791[82] != v65[82]) {
        char v117 = 1;
      }
      if (v117) {
        return 0;
      }
    }
    char v118 = *((unsigned char *)v65 + 680);
    if (v74[416])
    {
      if (!*((unsigned char *)v65 + 680)) {
        return 0;
      }
    }
    else
    {
      if (v791[84] != v65[84]) {
        char v118 = 1;
      }
      if (v118) {
        return 0;
      }
    }
    char v119 = *((unsigned char *)v65 + 696);
    if (v74[432])
    {
      if (!*((unsigned char *)v65 + 696)) {
        return 0;
      }
    }
    else
    {
      if (v791[86] != v65[86]) {
        char v119 = 1;
      }
      if (v119) {
        return 0;
      }
    }
    char v120 = *((unsigned char *)v65 + 712);
    if (v74[448])
    {
      if (!*((unsigned char *)v65 + 712)) {
        return 0;
      }
    }
    else
    {
      if (v791[88] != v65[88]) {
        char v120 = 1;
      }
      if (v120) {
        return 0;
      }
    }
    char v121 = *((unsigned char *)v65 + 728);
    if (v74[464])
    {
      if (!*((unsigned char *)v65 + 728)) {
        return 0;
      }
    }
    else
    {
      if (v791[90] != v65[90]) {
        char v121 = 1;
      }
      if (v121) {
        return 0;
      }
    }
    int v122 = *((unsigned __int8 *)v791 + 729);
    int v123 = *((unsigned __int8 *)v65 + 729);
    if (v122 == 2)
    {
      if (v123 != 2) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      BOOL v124 = (v122 & 1) == 0;
      if (v123 == 2 || ((v124 ^ v123) & 1) == 0) {
        return result;
      }
    }
    uint64_t v125 = type metadata accessor for DefaultConfigurationLayer();
    sub_10001D074((uint64_t)v791 + *(int *)(v125 + 240), (uint64_t)v31, &qword_101638CF0);
    v773 = (int *)v125;
    sub_10001D074((uint64_t)v65 + *(int *)(v125 + 240), (uint64_t)v28, &qword_101638CF0);
    uint64_t v126 = v778;
    uint64_t v127 = v778 + *(int *)(v22 + 48);
    sub_10001D074((uint64_t)v31, v778, &qword_101638CF0);
    sub_10001D074((uint64_t)v28, v127, &qword_101638CF0);
    char v128 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v777 + 48);
    if (v128(v126, 1, v779) == 1)
    {
      sub_10001DAB4((uint64_t)v28, &qword_101638CF0);
      sub_10001DAB4((uint64_t)v31, &qword_101638CF0);
      if (v128(v127, 1, v779) == 1)
      {
        sub_10001DAB4(v778, &qword_101638CF0);
        goto LABEL_328;
      }
    }
    else
    {
      sub_10001D074(v778, v774, &qword_101638CF0);
      if (v128(v127, 1, v779) != 1)
      {
        uint64_t v132 = v776;
        uint64_t v131 = v777;
        uint64_t v133 = v779;
        (*(void (**)(char *, uint64_t, uint64_t))(v777 + 32))(v776, v127, v779);
        sub_10094714C((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v134 = v774;
        char v135 = dispatch thunk of static Equatable.== infix(_:_:)();
        char v136 = *(void (**)(char *, uint64_t))(v131 + 8);
        v136(v132, v133);
        sub_10001DAB4((uint64_t)v28, &qword_101638CF0);
        sub_10001DAB4((uint64_t)v31, &qword_101638CF0);
        v136((char *)v134, v133);
        sub_10001DAB4(v778, &qword_101638CF0);
        if ((v135 & 1) == 0) {
          return 0;
        }
LABEL_328:
        uint64_t v137 = v773;
        uint64_t v138 = v781;
        sub_10001D074((uint64_t)v791 + v773[61], v781, (uint64_t *)&unk_10163AC90);
        uint64_t v139 = v780;
        sub_10001D074((uint64_t)v65 + v137[61], v780, (uint64_t *)&unk_10163AC90);
        uint64_t v140 = v783;
        uint64_t v141 = v783 + *(int *)(v784 + 48);
        sub_10001D074(v138, v783, (uint64_t *)&unk_10163AC90);
        sub_10001D074(v139, v141, (uint64_t *)&unk_10163AC90);
        char v142 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v790 + 48);
        if (v142(v140, 1, v775) == 1)
        {
          sub_10001DAB4(v780, (uint64_t *)&unk_10163AC90);
          sub_10001DAB4(v781, (uint64_t *)&unk_10163AC90);
          if (v142(v141, 1, v775) == 1)
          {
            sub_10001DAB4(v783, (uint64_t *)&unk_10163AC90);
LABEL_336:
            uint64_t v149 = v773[62];
            uint64_t v150 = (uint64_t *)((char *)v791 + v149);
            char v151 = *((unsigned char *)v791 + v149 + 8);
            uint64_t v152 = (uint64_t *)((char *)v65 + v149);
            int v153 = *((unsigned __int8 *)v65 + v149 + 8);
            if (v151)
            {
              if (!v153) {
                return 0;
              }
            }
            else
            {
              if (*v150 != *v152) {
                LOBYTE(v153) = 1;
              }
              if (v153) {
                return 0;
              }
            }
            char v154 = v773;
            uint64_t v155 = v786;
            sub_10001D074((uint64_t)v791 + v773[63], v786, (uint64_t *)&unk_10163AC90);
            uint64_t v156 = v785;
            sub_10001D074((uint64_t)v65 + v154[63], v785, (uint64_t *)&unk_10163AC90);
            uint64_t v157 = v789;
            uint64_t v158 = v789 + *(int *)(v784 + 48);
            sub_10001D074(v155, v789, (uint64_t *)&unk_10163AC90);
            sub_10001D074(v156, v158, (uint64_t *)&unk_10163AC90);
            if (v142(v157, 1, v775) == 1)
            {
              sub_10001DAB4(v785, (uint64_t *)&unk_10163AC90);
              sub_10001DAB4(v786, (uint64_t *)&unk_10163AC90);
              if (v142(v158, 1, v775) == 1)
              {
                sub_10001DAB4(v789, (uint64_t *)&unk_10163AC90);
                goto LABEL_349;
              }
            }
            else
            {
              sub_10001D074(v789, v787, (uint64_t *)&unk_10163AC90);
              if (v142(v158, 1, v775) != 1)
              {
                uint64_t v159 = v790;
                uint64_t v160 = v788;
                uint64_t v161 = v775;
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v790 + 32))(v788, v158, v775);
                sub_10094714C(&qword_10163AFA0, (void (*)(uint64_t))&type metadata accessor for Date);
                uint64_t v162 = v787;
                char v163 = dispatch thunk of static Equatable.== infix(_:_:)();
                uint64_t v164 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
                v164(v160, v161);
                sub_10001DAB4(v785, (uint64_t *)&unk_10163AC90);
                sub_10001DAB4(v786, (uint64_t *)&unk_10163AC90);
                v164(v162, v161);
                sub_10001DAB4(v789, (uint64_t *)&unk_10163AC90);
                if ((v163 & 1) == 0) {
                  return 0;
                }
LABEL_349:
                uint64_t v165 = v773[64];
                char v166 = (uint64_t *)((char *)v791 + v165);
                char v167 = *((unsigned char *)v791 + v165 + 8);
                uint64_t v168 = (uint64_t *)((char *)v65 + v165);
                int v169 = *((unsigned __int8 *)v65 + v165 + 8);
                if (v167)
                {
                  if (!v169) {
                    return 0;
                  }
                }
                else
                {
                  if (*v166 != *v168) {
                    LOBYTE(v169) = 1;
                  }
                  if (v169) {
                    return 0;
                  }
                }
                uint64_t v170 = v773[65];
                uint64_t v171 = (uint64_t *)((char *)v791 + v170);
                char v172 = *((unsigned char *)v791 + v170 + 8);
                uint64_t v173 = (uint64_t *)((char *)v65 + v170);
                int v174 = *((unsigned __int8 *)v65 + v170 + 8);
                if (v172)
                {
                  if (!v174) {
                    return 0;
                  }
                }
                else
                {
                  if (*v171 != *v173) {
                    LOBYTE(v174) = 1;
                  }
                  if (v174) {
                    return 0;
                  }
                }
                uint64_t v175 = v773[66];
                uint64_t v176 = (double *)((char *)v791 + v175);
                char v177 = *((unsigned char *)v791 + v175 + 8);
                char v178 = (double *)((char *)v65 + v175);
                int v179 = *((unsigned __int8 *)v65 + v175 + 8);
                if (v177)
                {
                  if (!v179) {
                    return 0;
                  }
                }
                else
                {
                  if (*v176 != *v178) {
                    LOBYTE(v179) = 1;
                  }
                  if (v179) {
                    return 0;
                  }
                }
                uint64_t v180 = v773[67];
                uint64_t v181 = (double *)((char *)v791 + v180);
                char v182 = *((unsigned char *)v791 + v180 + 8);
                uint64_t v183 = (double *)((char *)v65 + v180);
                int v184 = *((unsigned __int8 *)v65 + v180 + 8);
                if (v182)
                {
                  if (!v184) {
                    return 0;
                  }
                }
                else
                {
                  if (*v181 != *v183) {
                    LOBYTE(v184) = 1;
                  }
                  if (v184) {
                    return 0;
                  }
                }
                uint64_t v185 = v773[68];
                uint64_t v186 = (double *)((char *)v791 + v185);
                char v187 = *((unsigned char *)v791 + v185 + 8);
                uint64_t v188 = (double *)((char *)v65 + v185);
                int v189 = *((unsigned __int8 *)v65 + v185 + 8);
                if (v187)
                {
                  if (!v189) {
                    return 0;
                  }
                }
                else
                {
                  if (*v186 != *v188) {
                    LOBYTE(v189) = 1;
                  }
                  if (v189) {
                    return 0;
                  }
                }
                uint64_t v190 = v773[69];
                uint64_t v191 = (double *)((char *)v791 + v190);
                char v192 = *((unsigned char *)v791 + v190 + 8);
                uint64_t v193 = (double *)((char *)v65 + v190);
                int v194 = *((unsigned __int8 *)v65 + v190 + 8);
                if (v192)
                {
                  if (!v194) {
                    return 0;
                  }
                }
                else
                {
                  if (*v191 != *v193) {
                    LOBYTE(v194) = 1;
                  }
                  if (v194) {
                    return 0;
                  }
                }
                uint64_t v195 = v773[70];
                uint64_t v197 = *(uint64_t *)((char *)v791 + v195);
                uint64_t v196 = *(uint64_t *)((char *)v791 + v195 + 8);
                uint64_t v199 = *(uint64_t *)((char *)v791 + v195 + 16);
                uint64_t v198 = *(uint64_t *)((char *)v791 + v195 + 24);
                uint64_t v201 = *(uint64_t *)((char *)v791 + v195 + 32);
                uint64_t v200 = *(uint64_t *)((char *)v791 + v195 + 40);
                uint64_t v202 = *(uint64_t *)((char *)v791 + v195 + 48);
                uint64_t v203 = *(uint64_t *)((char *)v791 + v195 + 56);
                uint64_t v204 = *(uint64_t *)((char *)v791 + v195 + 64);
                uint64_t v205 = *(uint64_t *)((char *)v791 + v195 + 72);
                uint64_t v206 = *(uint64_t *)((char *)v791 + v195 + 80);
                uint64_t v207 = *(char **)((char *)v791 + v195 + 88);
                uint64_t v208 = *(uint64_t *)((char *)v791 + v195 + 96);
                uint64_t v209 = *(uint64_t *)((char *)v791 + v195 + 104);
                char v210 = (uint64_t *)((char *)v65 + v195);
                uint64_t v784 = *v210;
                uint64_t v785 = v210[1];
                uint64_t v786 = v210[2];
                uint64_t v787 = v210[3];
                uint64_t v788 = v210[4];
                uint64_t v211 = v210[6];
                uint64_t v789 = v210[5];
                uint64_t v790 = v210[7];
                uint64_t v783 = v210[8];
                uint64_t v782 = v210[9];
                uint64_t v781 = v210[10];
                uint64_t v212 = v210[11];
                uint64_t v777 = v205;
                uint64_t v778 = v212;
                uint64_t v213 = v210[12];
                uint64_t v779 = v210[13];
                uint64_t v780 = v213;
                uint64_t v775 = v206;
                v776 = v207;
                uint64_t v774 = v208;
                uint64_t v772 = v209;
                if (v202)
                {
                  if (v211)
                  {
                    v820[0] = v197;
                    v820[1] = v196;
                    uint64_t v764 = v197;
                    uint64_t v765 = v199;
                    v820[2] = v199;
                    v820[3] = v198;
                    uint64_t v767 = v201;
                    uint64_t v768 = v198;
                    v820[4] = v201;
                    v820[5] = v200;
                    uint64_t v769 = v200;
                    v820[6] = v202;
                    v820[7] = v203;
                    uint64_t v766 = v203;
                    v820[8] = v204;
                    v820[9] = v205;
                    uint64_t v770 = v211;
                    uint64_t v771 = v204;
                    v820[10] = v206;
                    v820[11] = v207;
                    v820[12] = v208;
                    v820[13] = v209;
                    uint64_t v792 = v784;
                    uint64_t v793 = v785;
                    uint64_t v794 = v786;
                    uint64_t v795 = v787;
                    uint64_t v796 = v788;
                    uint64_t v797 = v789;
                    uint64_t v798 = v211;
                    uint64_t v799 = v790;
                    uint64_t v800 = v783;
                    uint64_t v801 = v782;
                    uint64_t v802 = v781;
                    uint64_t v803 = v778;
                    uint64_t v804 = v780;
                    uint64_t v805 = v779;
                    uint64_t v214 = v197;
                    uint64_t v215 = v196;
                    uint64_t v762 = v196;
                    uint64_t v216 = v202;
                    sub_1009403D4(v214, v196, v199, v198, v201, v200, v202);
                    sub_1009403D4(v784, v785, v786, v787, v788, v789, v770);
                    uint64_t v218 = v764;
                    uint64_t v217 = v765;
                    sub_1009403D4(v764, v215, v765, v768, v767, v769, v216);
                    int v763 = _s12searchpartyd19AllMacBeaconConfigsV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v820, (uint64_t)&v792);
                    sub_1009404E4(v784, v785, v786, v787, v788, v789, v770);
                    uint64_t v219 = v218;
                    uint64_t v220 = v762;
                    uint64_t v221 = v217;
                    uint64_t v222 = v767;
                    uint64_t v223 = v768;
                    uint64_t v224 = v769;
                    sub_1009404E4(v219, v762, v221, v768, v767, v769, v216);
                    sub_1009404E4(v764, v220, v765, v223, v222, v224, v216);
                    if ((v763 & 1) == 0) {
                      return 0;
                    }
LABEL_392:
                    uint64_t v228 = v773[71];
                    int v229 = *((unsigned __int8 *)v791 + v228);
                    int v230 = *((unsigned __int8 *)v65 + v228);
                    if (v229 == 2)
                    {
                      if (v230 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v231 = (v229 & 1) == 0;
                      if (v230 == 2 || ((v231 ^ v230) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v232 = v773[72];
                    int v233 = *((unsigned __int8 *)v791 + v232);
                    int v234 = *((unsigned __int8 *)v65 + v232);
                    if (v233 == 2)
                    {
                      if (v234 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v235 = (v233 & 1) == 0;
                      if (v234 == 2 || ((v235 ^ v234) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v236 = v773[73];
                    int v237 = *((unsigned __int8 *)v791 + v236);
                    int v238 = *((unsigned __int8 *)v65 + v236);
                    if (v237 == 2)
                    {
                      if (v238 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v239 = (v237 & 1) == 0;
                      if (v238 == 2 || ((v239 ^ v238) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v240 = v773[74];
                    char v241 = (double *)((char *)v791 + v240);
                    char v242 = *((unsigned char *)v791 + v240 + 8);
                    uint64_t v243 = (double *)((char *)v65 + v240);
                    int v244 = *((unsigned __int8 *)v65 + v240 + 8);
                    if (v242)
                    {
                      if (!v244) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v241 != *v243) {
                        LOBYTE(v244) = 1;
                      }
                      if (v244) {
                        return 0;
                      }
                    }
                    uint64_t v245 = v773[75];
                    char v246 = (double *)((char *)v791 + v245);
                    char v247 = *((unsigned char *)v791 + v245 + 8);
                    uint64_t v248 = (double *)((char *)v65 + v245);
                    int v249 = *((unsigned __int8 *)v65 + v245 + 8);
                    if (v247)
                    {
                      if (!v249) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v246 != *v248) {
                        LOBYTE(v249) = 1;
                      }
                      if (v249) {
                        return 0;
                      }
                    }
                    uint64_t v250 = v773[76];
                    uint64_t v251 = (double *)((char *)v791 + v250);
                    char v252 = *((unsigned char *)v791 + v250 + 8);
                    char v253 = (double *)((char *)v65 + v250);
                    int v254 = *((unsigned __int8 *)v65 + v250 + 8);
                    if (v252)
                    {
                      if (!v254) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v251 != *v253) {
                        LOBYTE(v254) = 1;
                      }
                      if (v254) {
                        return 0;
                      }
                    }
                    uint64_t v255 = v773[77];
                    uint64_t v256 = (double *)((char *)v791 + v255);
                    char v257 = *((unsigned char *)v791 + v255 + 8);
                    uint64_t v258 = (double *)((char *)v65 + v255);
                    int v259 = *((unsigned __int8 *)v65 + v255 + 8);
                    if (v257)
                    {
                      if (!v259) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v256 != *v258) {
                        LOBYTE(v259) = 1;
                      }
                      if (v259) {
                        return 0;
                      }
                    }
                    uint64_t v260 = v773[78];
                    uint64_t v261 = (double *)((char *)v791 + v260);
                    char v262 = *((unsigned char *)v791 + v260 + 8);
                    uint64_t v263 = (double *)((char *)v65 + v260);
                    int v264 = *((unsigned __int8 *)v65 + v260 + 8);
                    if (v262)
                    {
                      if (!v264) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v261 != *v263) {
                        LOBYTE(v264) = 1;
                      }
                      if (v264) {
                        return 0;
                      }
                    }
                    uint64_t v265 = v773[79];
                    char v266 = (double *)((char *)v791 + v265);
                    char v267 = *((unsigned char *)v791 + v265 + 8);
                    uint64_t v268 = (double *)((char *)v65 + v265);
                    int v269 = *((unsigned __int8 *)v65 + v265 + 8);
                    if (v267)
                    {
                      if (!v269) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v266 != *v268) {
                        LOBYTE(v269) = 1;
                      }
                      if (v269) {
                        return 0;
                      }
                    }
                    uint64_t v270 = v773[80];
                    uint64_t v271 = (double *)((char *)v791 + v270);
                    char v272 = *((unsigned char *)v791 + v270 + 8);
                    char v273 = (double *)((char *)v65 + v270);
                    int v274 = *((unsigned __int8 *)v65 + v270 + 8);
                    if (v272)
                    {
                      if (!v274) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v271 != *v273) {
                        LOBYTE(v274) = 1;
                      }
                      if (v274) {
                        return 0;
                      }
                    }
                    uint64_t v275 = v773[81];
                    uint64_t v276 = (double *)((char *)v791 + v275);
                    char v277 = *((unsigned char *)v791 + v275 + 8);
                    uint64_t v278 = (double *)((char *)v65 + v275);
                    int v279 = *((unsigned __int8 *)v65 + v275 + 8);
                    if (v277)
                    {
                      if (!v279) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v276 != *v278) {
                        LOBYTE(v279) = 1;
                      }
                      if (v279) {
                        return 0;
                      }
                    }
                    uint64_t v280 = v773[82];
                    char v281 = (uint64_t *)((char *)v791 + v280);
                    char v282 = *((unsigned char *)v791 + v280 + 8);
                    uint64_t v283 = (uint64_t *)((char *)v65 + v280);
                    int v284 = *((unsigned __int8 *)v65 + v280 + 8);
                    if (v282)
                    {
                      if (!v284) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v281 != *v283) {
                        LOBYTE(v284) = 1;
                      }
                      if (v284) {
                        return 0;
                      }
                    }
                    uint64_t v285 = v773[83];
                    char v286 = (uint64_t *)((char *)v791 + v285);
                    uint64_t v287 = *(uint64_t *)((char *)v791 + v285 + 8);
                    char v288 = (uint64_t *)((char *)v65 + v285);
                    uint64_t v289 = v288[1];
                    if (v287)
                    {
                      if (!v289) {
                        return 0;
                      }
                      if (*v286 != *v288 || v287 != v289)
                      {
                        char v290 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        BOOL result = 0;
                        if ((v290 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else if (v289)
                    {
                      return 0;
                    }
                    uint64_t v291 = v773[84];
                    uint64_t v292 = (uint64_t *)((char *)v791 + v291);
                    char v293 = *((unsigned char *)v791 + v291 + 8);
                    uint64_t v294 = (uint64_t *)((char *)v65 + v291);
                    int v295 = *((unsigned __int8 *)v65 + v291 + 8);
                    if (v293)
                    {
                      if (!v295) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v292 != *v294) {
                        LOBYTE(v295) = 1;
                      }
                      if (v295) {
                        return 0;
                      }
                    }
                    uint64_t v296 = v773[85];
                    char v297 = (uint64_t *)((char *)v791 + v296);
                    uint64_t v298 = *(uint64_t *)((char *)v791 + v296 + 8);
                    uint64_t v299 = (uint64_t *)((char *)v65 + v296);
                    uint64_t v300 = v299[1];
                    if (v298)
                    {
                      if (!v300) {
                        return 0;
                      }
                      if (*v297 != *v299 || v298 != v300)
                      {
                        char v301 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        BOOL result = 0;
                        if ((v301 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else if (v300)
                    {
                      return 0;
                    }
                    uint64_t v302 = v773[86];
                    uint64_t v303 = (uint64_t *)((char *)v791 + v302);
                    char v304 = *((unsigned char *)v791 + v302 + 8);
                    char v305 = (uint64_t *)((char *)v65 + v302);
                    int v306 = *((unsigned __int8 *)v65 + v302 + 8);
                    if (v304)
                    {
                      if (!v306) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v303 != *v305) {
                        LOBYTE(v306) = 1;
                      }
                      if (v306) {
                        return 0;
                      }
                    }
                    uint64_t v307 = v773[87];
                    uint64_t v308 = *(void **)((char *)v791 + v307);
                    char v309 = *(void **)((char *)v65 + v307);
                    if (v308)
                    {
                      if (!v309 || !sub_100336C24(v308, v309)) {
                        return 0;
                      }
                    }
                    else if (v309)
                    {
                      return 0;
                    }
                    uint64_t v310 = v773[88];
                    uint64_t v311 = (uint64_t *)((char *)v791 + v310);
                    uint64_t v312 = *(uint64_t *)((char *)v791 + v310 + 8);
                    char v313 = (uint64_t *)((char *)v65 + v310);
                    uint64_t v314 = v313[1];
                    if (v312)
                    {
                      if (!v314) {
                        return 0;
                      }
                      if (*v311 != *v313 || v312 != v314)
                      {
                        char v315 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        BOOL result = 0;
                        if ((v315 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else if (v314)
                    {
                      return 0;
                    }
                    uint64_t v316 = v773[89];
                    char v317 = (double *)((char *)v791 + v316);
                    char v318 = *((unsigned char *)v791 + v316 + 8);
                    uint64_t v319 = (double *)((char *)v65 + v316);
                    int v320 = *((unsigned __int8 *)v65 + v316 + 8);
                    if (v318)
                    {
                      if (!v320) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v317 != *v319) {
                        LOBYTE(v320) = 1;
                      }
                      if (v320) {
                        return 0;
                      }
                    }
                    uint64_t v321 = v773[90];
                    int v322 = *((unsigned __int8 *)v791 + v321);
                    int v323 = *((unsigned __int8 *)v65 + v321);
                    if (v322 == 2)
                    {
                      if (v323 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v324 = (v322 & 1) == 0;
                      if (v323 == 2 || ((v324 ^ v323) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v325 = v773[91];
                    int v326 = *((unsigned __int8 *)v791 + v325);
                    int v327 = *((unsigned __int8 *)v65 + v325);
                    if (v326 == 2)
                    {
                      if (v327 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v328 = (v326 & 1) == 0;
                      if (v327 == 2 || ((v328 ^ v327) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v329 = v773[92];
                    int v330 = *((unsigned __int8 *)v791 + v329);
                    int v331 = *((unsigned __int8 *)v65 + v329);
                    if (v330 == 2)
                    {
                      if (v331 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v332 = (v330 & 1) == 0;
                      if (v331 == 2 || ((v332 ^ v331) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v333 = v773[93];
                    int v334 = *((unsigned __int8 *)v791 + v333);
                    int v335 = *((unsigned __int8 *)v65 + v333);
                    if (v334 == 2)
                    {
                      if (v335 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v336 = (v334 & 1) == 0;
                      if (v335 == 2 || ((v336 ^ v335) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v337 = v773[94];
                    char v338 = (uint64_t *)((char *)v791 + v337);
                    char v339 = *((unsigned char *)v791 + v337 + 8);
                    uint64_t v340 = (uint64_t *)((char *)v65 + v337);
                    int v341 = *((unsigned __int8 *)v65 + v337 + 8);
                    if (v339)
                    {
                      if (!v341) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v338 != *v340) {
                        LOBYTE(v341) = 1;
                      }
                      if (v341) {
                        return 0;
                      }
                    }
                    uint64_t v342 = v773[95];
                    uint64_t v343 = (uint64_t *)((char *)v791 + v342);
                    char v344 = *((unsigned char *)v791 + v342 + 8);
                    char v345 = (uint64_t *)((char *)v65 + v342);
                    int v346 = *((unsigned __int8 *)v65 + v342 + 8);
                    if (v344)
                    {
                      if (!v346) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v343 != *v345) {
                        LOBYTE(v346) = 1;
                      }
                      if (v346) {
                        return 0;
                      }
                    }
                    uint64_t v347 = v773[96];
                    uint64_t v348 = (uint64_t *)((char *)v791 + v347);
                    char v349 = *((unsigned char *)v791 + v347 + 8);
                    uint64_t v350 = (uint64_t *)((char *)v65 + v347);
                    int v351 = *((unsigned __int8 *)v65 + v347 + 8);
                    if (v349)
                    {
                      if (!v351) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v348 != *v350) {
                        LOBYTE(v351) = 1;
                      }
                      if (v351) {
                        return 0;
                      }
                    }
                    uint64_t v352 = v773[97];
                    char v353 = (uint64_t *)((char *)v791 + v352);
                    char v354 = *((unsigned char *)v791 + v352 + 8);
                    uint64_t v355 = (uint64_t *)((char *)v65 + v352);
                    int v356 = *((unsigned __int8 *)v65 + v352 + 8);
                    if (v354)
                    {
                      if (!v356) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v353 != *v355) {
                        LOBYTE(v356) = 1;
                      }
                      if (v356) {
                        return 0;
                      }
                    }
                    uint64_t v357 = v773[98];
                    uint64_t v358 = (uint64_t *)((char *)v791 + v357);
                    char v359 = *((unsigned char *)v791 + v357 + 8);
                    uint64_t v360 = (uint64_t *)((char *)v65 + v357);
                    int v361 = *((unsigned __int8 *)v65 + v357 + 8);
                    if (v359)
                    {
                      if (!v361) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v358 != *v360) {
                        LOBYTE(v361) = 1;
                      }
                      if (v361) {
                        return 0;
                      }
                    }
                    uint64_t v362 = v773[99];
                    uint64_t v363 = (double *)((char *)v791 + v362);
                    char v364 = *((unsigned char *)v791 + v362 + 8);
                    char v365 = (double *)((char *)v65 + v362);
                    int v366 = *((unsigned __int8 *)v65 + v362 + 8);
                    if (v364)
                    {
                      if (!v366) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v363 != *v365) {
                        LOBYTE(v366) = 1;
                      }
                      if (v366) {
                        return 0;
                      }
                    }
                    uint64_t v367 = v773[100];
                    uint64_t v368 = (double *)((char *)v791 + v367);
                    char v369 = *((unsigned char *)v791 + v367 + 8);
                    v370 = (double *)((char *)v65 + v367);
                    int v371 = *((unsigned __int8 *)v65 + v367 + 8);
                    if (v369)
                    {
                      if (!v371) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v368 != *v370) {
                        LOBYTE(v371) = 1;
                      }
                      if (v371) {
                        return 0;
                      }
                    }
                    uint64_t v372 = v773[101];
                    char v373 = (double *)((char *)v791 + v372);
                    char v374 = *((unsigned char *)v791 + v372 + 8);
                    uint64_t v375 = (double *)((char *)v65 + v372);
                    int v376 = *((unsigned __int8 *)v65 + v372 + 8);
                    if (v374)
                    {
                      if (!v376) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v373 != *v375) {
                        LOBYTE(v376) = 1;
                      }
                      if (v376) {
                        return 0;
                      }
                    }
                    uint64_t v377 = v773[102];
                    uint64_t v378 = (uint64_t *)((char *)v791 + v377);
                    char v379 = *((unsigned char *)v791 + v377 + 8);
                    char v380 = (uint64_t *)((char *)v65 + v377);
                    int v381 = *((unsigned __int8 *)v65 + v377 + 8);
                    if (v379)
                    {
                      if (!v381) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v378 != *v380) {
                        LOBYTE(v381) = 1;
                      }
                      if (v381) {
                        return 0;
                      }
                    }
                    uint64_t v382 = v773[103];
                    char v383 = (uint64_t *)((char *)v791 + v382);
                    char v384 = *((unsigned char *)v791 + v382 + 8);
                    uint64_t v385 = (uint64_t *)((char *)v65 + v382);
                    int v386 = *((unsigned __int8 *)v65 + v382 + 8);
                    if (v384)
                    {
                      if (!v386) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v383 != *v385) {
                        LOBYTE(v386) = 1;
                      }
                      if (v386) {
                        return 0;
                      }
                    }
                    uint64_t v387 = v773[104];
                    uint64_t v388 = (uint64_t *)((char *)v791 + v387);
                    char v389 = *((unsigned char *)v791 + v387 + 8);
                    uint64_t v390 = (uint64_t *)((char *)v65 + v387);
                    int v391 = *((unsigned __int8 *)v65 + v387 + 8);
                    if (v389)
                    {
                      if (!v391) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v388 != *v390) {
                        LOBYTE(v391) = 1;
                      }
                      if (v391) {
                        return 0;
                      }
                    }
                    uint64_t v392 = v773[105];
                    uint64_t v393 = (double *)((char *)v791 + v392);
                    char v394 = *((unsigned char *)v791 + v392 + 8);
                    uint64_t v395 = (double *)((char *)v65 + v392);
                    int v396 = *((unsigned __int8 *)v65 + v392 + 8);
                    if (v394)
                    {
                      if (!v396) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v393 != *v395) {
                        LOBYTE(v396) = 1;
                      }
                      if (v396) {
                        return 0;
                      }
                    }
                    uint64_t v397 = v773[106];
                    char v398 = (double *)((char *)v791 + v397);
                    char v399 = *((unsigned char *)v791 + v397 + 8);
                    uint64_t v400 = (double *)((char *)v65 + v397);
                    int v401 = *((unsigned __int8 *)v65 + v397 + 8);
                    if (v399)
                    {
                      if (!v401) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v398 != *v400) {
                        LOBYTE(v401) = 1;
                      }
                      if (v401) {
                        return 0;
                      }
                    }
                    uint64_t v402 = v773[107];
                    uint64_t v403 = (uint64_t *)((char *)v791 + v402);
                    char v404 = *((unsigned char *)v791 + v402 + 8);
                    char v405 = (uint64_t *)((char *)v65 + v402);
                    int v406 = *((unsigned __int8 *)v65 + v402 + 8);
                    if (v404)
                    {
                      if (!v406) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v403 != *v405) {
                        LOBYTE(v406) = 1;
                      }
                      if (v406) {
                        return 0;
                      }
                    }
                    uint64_t v407 = v773[108];
                    uint64_t v408 = (uint64_t *)((char *)v791 + v407);
                    char v409 = *((unsigned char *)v791 + v407 + 8);
                    uint64_t v410 = (uint64_t *)((char *)v65 + v407);
                    int v411 = *((unsigned __int8 *)v65 + v407 + 8);
                    if (v409)
                    {
                      if (!v411) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v408 != *v410) {
                        LOBYTE(v411) = 1;
                      }
                      if (v411) {
                        return 0;
                      }
                    }
                    uint64_t v412 = v773[109];
                    char v413 = (uint64_t *)((char *)v791 + v412);
                    char v414 = *((unsigned char *)v791 + v412 + 8);
                    uint64_t v415 = (uint64_t *)((char *)v65 + v412);
                    int v416 = *((unsigned __int8 *)v65 + v412 + 8);
                    if (v414)
                    {
                      if (!v416) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v413 != *v415) {
                        LOBYTE(v416) = 1;
                      }
                      if (v416) {
                        return 0;
                      }
                    }
                    uint64_t v417 = v773[110];
                    char v418 = (uint64_t *)((char *)v791 + v417);
                    char v419 = *((unsigned char *)v791 + v417 + 8);
                    uint64_t v420 = (uint64_t *)((char *)v65 + v417);
                    int v421 = *((unsigned __int8 *)v65 + v417 + 8);
                    if (v419)
                    {
                      if (!v421) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v418 != *v420) {
                        LOBYTE(v421) = 1;
                      }
                      if (v421) {
                        return 0;
                      }
                    }
                    uint64_t v422 = v773[111];
                    uint64_t v423 = (uint64_t *)((char *)v791 + v422);
                    char v424 = *((unsigned char *)v791 + v422 + 8);
                    char v425 = (uint64_t *)((char *)v65 + v422);
                    int v426 = *((unsigned __int8 *)v65 + v422 + 8);
                    if (v424)
                    {
                      if (!v426) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v423 != *v425) {
                        LOBYTE(v426) = 1;
                      }
                      if (v426) {
                        return 0;
                      }
                    }
                    uint64_t v427 = v773[112];
                    uint64_t v428 = (uint64_t *)((char *)v791 + v427);
                    char v429 = *((unsigned char *)v791 + v427 + 8);
                    uint64_t v430 = (uint64_t *)((char *)v65 + v427);
                    int v431 = *((unsigned __int8 *)v65 + v427 + 8);
                    if (v429)
                    {
                      if (!v431) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v428 != *v430) {
                        LOBYTE(v431) = 1;
                      }
                      if (v431) {
                        return 0;
                      }
                    }
                    uint64_t v432 = v773[113];
                    uint64_t v433 = (uint64_t *)((char *)v791 + v432);
                    char v434 = *((unsigned char *)v791 + v432 + 8);
                    char v435 = (uint64_t *)((char *)v65 + v432);
                    int v436 = *((unsigned __int8 *)v65 + v432 + 8);
                    if (v434)
                    {
                      if (!v436) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v433 != *v435) {
                        LOBYTE(v436) = 1;
                      }
                      if (v436) {
                        return 0;
                      }
                    }
                    uint64_t v437 = v773[114];
                    uint64_t v438 = (uint64_t *)((char *)v791 + v437);
                    char v439 = *((unsigned char *)v791 + v437 + 8);
                    char v440 = (uint64_t *)((char *)v65 + v437);
                    int v441 = *((unsigned __int8 *)v65 + v437 + 8);
                    if (v439)
                    {
                      if (!v441) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v438 != *v440) {
                        LOBYTE(v441) = 1;
                      }
                      if (v441) {
                        return 0;
                      }
                    }
                    uint64_t v442 = v773[115];
                    uint64_t v443 = (double *)((char *)v791 + v442);
                    char v444 = *((unsigned char *)v791 + v442 + 8);
                    uint64_t v445 = (double *)((char *)v65 + v442);
                    int v446 = *((unsigned __int8 *)v65 + v442 + 8);
                    if (v444)
                    {
                      if (!v446) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v443 != *v445) {
                        LOBYTE(v446) = 1;
                      }
                      if (v446) {
                        return 0;
                      }
                    }
                    uint64_t v447 = v773[116];
                    int v448 = *((unsigned __int8 *)v791 + v447);
                    int v449 = *((unsigned __int8 *)v65 + v447);
                    if (v448 == 2)
                    {
                      if (v449 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v450 = (v448 & 1) == 0;
                      if (v449 == 2 || ((v450 ^ v449) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v451 = v773[117];
                    uint64_t v452 = (double *)((char *)v791 + v451);
                    char v453 = *((unsigned char *)v791 + v451 + 8);
                    char v454 = (double *)((char *)v65 + v451);
                    int v455 = *((unsigned __int8 *)v65 + v451 + 8);
                    if (v453)
                    {
                      if (!v455) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v452 != *v454) {
                        LOBYTE(v455) = 1;
                      }
                      if (v455) {
                        return 0;
                      }
                    }
                    uint64_t v456 = v773[118];
                    uint64_t v457 = (double *)((char *)v791 + v456);
                    char v458 = *((unsigned char *)v791 + v456 + 8);
                    char v459 = (double *)((char *)v65 + v456);
                    int v460 = *((unsigned __int8 *)v65 + v456 + 8);
                    if (v458)
                    {
                      if (!v460) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v457 != *v459) {
                        LOBYTE(v460) = 1;
                      }
                      if (v460) {
                        return 0;
                      }
                    }
                    uint64_t v461 = v773[119];
                    uint64_t v462 = (uint64_t *)((char *)v791 + v461);
                    char v463 = *((unsigned char *)v791 + v461 + 8);
                    char v464 = (uint64_t *)((char *)v65 + v461);
                    int v465 = *((unsigned __int8 *)v65 + v461 + 8);
                    if (v463)
                    {
                      if (!v465) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v462 != *v464) {
                        LOBYTE(v465) = 1;
                      }
                      if (v465) {
                        return 0;
                      }
                    }
                    uint64_t v466 = v773[120];
                    int v467 = *((unsigned __int8 *)v791 + v466);
                    int v468 = *((unsigned __int8 *)v65 + v466);
                    if (v467 == 2)
                    {
                      if (v468 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v469 = (v467 & 1) == 0;
                      if (v468 == 2 || ((v469 ^ v468) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v470 = v773[121];
                    int v471 = *((unsigned __int8 *)v791 + v470);
                    int v472 = *((unsigned __int8 *)v65 + v470);
                    if (v471 == 2)
                    {
                      if (v472 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v473 = (v471 & 1) == 0;
                      if (v472 == 2 || ((v473 ^ v472) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v474 = v773[122];
                    int v475 = *((unsigned __int8 *)v791 + v474);
                    int v476 = *((unsigned __int8 *)v65 + v474);
                    if (v475 == 2)
                    {
                      if (v476 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v477 = (v475 & 1) == 0;
                      if (v476 == 2 || ((v477 ^ v476) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v478 = v773[123];
                    char v479 = (uint64_t *)((char *)v791 + v478);
                    char v480 = *((unsigned char *)v791 + v478 + 8);
                    uint64_t v481 = (uint64_t *)((char *)v65 + v478);
                    int v482 = *((unsigned __int8 *)v65 + v478 + 8);
                    if (v480)
                    {
                      if (!v482) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v479 != *v481) {
                        LOBYTE(v482) = 1;
                      }
                      if (v482) {
                        return 0;
                      }
                    }
                    uint64_t v483 = v773[124];
                    uint64_t v484 = (double *)((char *)v791 + v483);
                    char v485 = *((unsigned char *)v791 + v483 + 8);
                    uint64_t v486 = (double *)((char *)v65 + v483);
                    int v487 = *((unsigned __int8 *)v65 + v483 + 8);
                    if (v485)
                    {
                      if (!v487) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v484 != *v486) {
                        LOBYTE(v487) = 1;
                      }
                      if (v487) {
                        return 0;
                      }
                    }
                    uint64_t v488 = v773[125];
                    uint64_t v489 = (double *)((char *)v791 + v488);
                    char v490 = *((unsigned char *)v791 + v488 + 8);
                    char v491 = (double *)((char *)v65 + v488);
                    int v492 = *((unsigned __int8 *)v65 + v488 + 8);
                    if (v490)
                    {
                      if (!v492) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v489 != *v491) {
                        LOBYTE(v492) = 1;
                      }
                      if (v492) {
                        return 0;
                      }
                    }
                    uint64_t v493 = v773[126];
                    uint64_t v494 = (uint64_t *)((char *)v791 + v493);
                    char v495 = *((unsigned char *)v791 + v493 + 8);
                    uint64_t v496 = (uint64_t *)((char *)v65 + v493);
                    int v497 = *((unsigned __int8 *)v65 + v493 + 8);
                    if (v495)
                    {
                      if (!v497) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v494 != *v496) {
                        LOBYTE(v497) = 1;
                      }
                      if (v497) {
                        return 0;
                      }
                    }
                    uint64_t v498 = v773[127];
                    char v499 = (uint64_t *)((char *)v791 + v498);
                    char v500 = *((unsigned char *)v791 + v498 + 8);
                    uint64_t v501 = (uint64_t *)((char *)v65 + v498);
                    int v502 = *((unsigned __int8 *)v65 + v498 + 8);
                    if (v500)
                    {
                      if (!v502) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v499 != *v501) {
                        LOBYTE(v502) = 1;
                      }
                      if (v502) {
                        return 0;
                      }
                    }
                    uint64_t v503 = v773[128];
                    uint64_t v504 = (uint64_t *)((char *)v791 + v503);
                    char v505 = *((unsigned char *)v791 + v503 + 8);
                    uint64_t v506 = (uint64_t *)((char *)v65 + v503);
                    int v507 = *((unsigned __int8 *)v65 + v503 + 8);
                    if (v505)
                    {
                      if (!v507) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v504 != *v506) {
                        LOBYTE(v507) = 1;
                      }
                      if (v507) {
                        return 0;
                      }
                    }
                    uint64_t v508 = v773[129];
                    uint64_t v509 = (uint64_t *)((char *)v791 + v508);
                    char v510 = *((unsigned char *)v791 + v508 + 8);
                    char v511 = (uint64_t *)((char *)v65 + v508);
                    int v512 = *((unsigned __int8 *)v65 + v508 + 8);
                    if (v510)
                    {
                      if (!v512) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v509 != *v511) {
                        LOBYTE(v512) = 1;
                      }
                      if (v512) {
                        return 0;
                      }
                    }
                    uint64_t v513 = v773[130];
                    uint64_t v514 = (double *)((char *)v791 + v513);
                    char v515 = *((unsigned char *)v791 + v513 + 8);
                    uint64_t v516 = (double *)((char *)v65 + v513);
                    int v517 = *((unsigned __int8 *)v65 + v513 + 8);
                    if (v515)
                    {
                      if (!v517) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v514 != *v516) {
                        LOBYTE(v517) = 1;
                      }
                      if (v517) {
                        return 0;
                      }
                    }
                    uint64_t v518 = v773[131];
                    int v519 = *((unsigned __int8 *)v791 + v518);
                    int v520 = *((unsigned __int8 *)v65 + v518);
                    if (v519 == 2)
                    {
                      if (v520 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v521 = (v519 & 1) == 0;
                      if (v520 == 2 || ((v521 ^ v520) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v522 = v773[132];
                    char v523 = (double *)((char *)v791 + v522);
                    char v524 = *((unsigned char *)v791 + v522 + 8);
                    uint64_t v525 = (double *)((char *)v65 + v522);
                    int v526 = *((unsigned __int8 *)v65 + v522 + 8);
                    if (v524)
                    {
                      if (!v526) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v523 != *v525) {
                        LOBYTE(v526) = 1;
                      }
                      if (v526) {
                        return 0;
                      }
                    }
                    uint64_t v527 = v773[133];
                    char v528 = *(void **)((char *)v791 + v527);
                    uint64_t v529 = *(void **)((char *)v65 + v527);
                    if (v528)
                    {
                      if (!v529 || !sub_100336C24(v528, v529)) {
                        return 0;
                      }
                    }
                    else if (v529)
                    {
                      return 0;
                    }
                    uint64_t v530 = v773[134];
                    uint64_t v531 = (double *)((char *)v791 + v530);
                    char v532 = *((unsigned char *)v791 + v530 + 8);
                    char v533 = (double *)((char *)v65 + v530);
                    int v534 = *((unsigned __int8 *)v65 + v530 + 8);
                    if (v532)
                    {
                      if (!v534) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v531 != *v533) {
                        LOBYTE(v534) = 1;
                      }
                      if (v534) {
                        return 0;
                      }
                    }
                    uint64_t v535 = v773[135];
                    int v536 = *((unsigned __int8 *)v791 + v535);
                    int v537 = *((unsigned __int8 *)v65 + v535);
                    if (v536 == 2)
                    {
                      if (v537 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v538 = (v536 & 1) == 0;
                      if (v537 == 2 || ((v538 ^ v537) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v539 = v773[136];
                    uint64_t v540 = *(uint64_t *)((char *)v65 + v539);
                    if (*(uint64_t *)((char *)v791 + v539))
                    {
                      if (!v540) {
                        return 0;
                      }
                      swift_bridgeObjectRetain();
                      uint64_t v541 = swift_bridgeObjectRetain();
                      char v542 = sub_100DF5A28(v541, v540);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      if ((v542 & 1) == 0) {
                        return 0;
                      }
                    }
                    else if (v540)
                    {
                      return 0;
                    }
                    uint64_t v543 = v773[137];
                    int v544 = *((unsigned __int8 *)v791 + v543);
                    int v545 = *((unsigned __int8 *)v65 + v543);
                    if (v544 == 2)
                    {
                      if (v545 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v546 = (v544 & 1) == 0;
                      if (v545 == 2 || ((v546 ^ v545) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v547 = v773[138];
                    uint64_t v548 = (double *)((char *)v791 + v547);
                    char v549 = *((unsigned char *)v791 + v547 + 8);
                    uint64_t v550 = (double *)((char *)v65 + v547);
                    int v551 = *((unsigned __int8 *)v65 + v547 + 8);
                    if (v549)
                    {
                      if (!v551) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v548 != *v550) {
                        LOBYTE(v551) = 1;
                      }
                      if (v551) {
                        return 0;
                      }
                    }
                    uint64_t v552 = v773[139];
                    uint64_t v553 = (double *)((char *)v791 + v552);
                    char v554 = *((unsigned char *)v791 + v552 + 8);
                    uint64_t v555 = (double *)((char *)v65 + v552);
                    int v556 = *((unsigned __int8 *)v65 + v552 + 8);
                    if (v554)
                    {
                      if (!v556) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v553 != *v555) {
                        LOBYTE(v556) = 1;
                      }
                      if (v556) {
                        return 0;
                      }
                    }
                    uint64_t v557 = v773[140];
                    int v558 = *((unsigned __int8 *)v791 + v557);
                    int v559 = *((unsigned __int8 *)v65 + v557);
                    if (v558 == 2)
                    {
                      if (v559 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v560 = (v558 & 1) == 0;
                      if (v559 == 2 || ((v560 ^ v559) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v561 = v773[141];
                    int v562 = *((unsigned __int8 *)v791 + v561);
                    int v563 = *((unsigned __int8 *)v65 + v561);
                    if (v562 == 2)
                    {
                      if (v563 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v564 = (v562 & 1) == 0;
                      if (v563 == 2 || ((v564 ^ v563) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v565 = v773[142];
                    uint64_t v566 = (uint64_t *)((char *)v791 + v565);
                    char v567 = *((unsigned char *)v791 + v565 + 8);
                    uint64_t v568 = (uint64_t *)((char *)v65 + v565);
                    int v569 = *((unsigned __int8 *)v65 + v565 + 8);
                    if (v567)
                    {
                      if (!v569) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v566 != *v568) {
                        LOBYTE(v569) = 1;
                      }
                      if (v569) {
                        return 0;
                      }
                    }
                    uint64_t v570 = v773[143];
                    uint64_t v571 = (uint64_t *)((char *)v791 + v570);
                    char v572 = *((unsigned char *)v791 + v570 + 8);
                    uint64_t v573 = (uint64_t *)((char *)v65 + v570);
                    int v574 = *((unsigned __int8 *)v65 + v570 + 8);
                    if (v572)
                    {
                      if (!v574) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v571 != *v573) {
                        LOBYTE(v574) = 1;
                      }
                      if (v574) {
                        return 0;
                      }
                    }
                    uint64_t v575 = v773[144];
                    uint64_t v576 = (uint64_t *)((char *)v791 + v575);
                    char v577 = *((unsigned char *)v791 + v575 + 8);
                    char v578 = (uint64_t *)((char *)v65 + v575);
                    int v579 = *((unsigned __int8 *)v65 + v575 + 8);
                    if (v577)
                    {
                      if (!v579) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v576 != *v578) {
                        LOBYTE(v579) = 1;
                      }
                      if (v579) {
                        return 0;
                      }
                    }
                    uint64_t v580 = v773[145];
                    uint64_t v581 = (uint64_t *)((char *)v791 + v580);
                    char v582 = *((unsigned char *)v791 + v580 + 8);
                    char v583 = (uint64_t *)((char *)v65 + v580);
                    int v584 = *((unsigned __int8 *)v65 + v580 + 8);
                    if (v582)
                    {
                      if (!v584) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v581 != *v583) {
                        LOBYTE(v584) = 1;
                      }
                      if (v584) {
                        return 0;
                      }
                    }
                    uint64_t v585 = v773[146];
                    char v586 = (uint64_t *)((char *)v791 + v585);
                    char v587 = *((unsigned char *)v791 + v585 + 8);
                    uint64_t v588 = (uint64_t *)((char *)v65 + v585);
                    int v589 = *((unsigned __int8 *)v65 + v585 + 8);
                    if (v587)
                    {
                      if (!v589) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v586 != *v588) {
                        LOBYTE(v589) = 1;
                      }
                      if (v589) {
                        return 0;
                      }
                    }
                    uint64_t v590 = v773[147];
                    uint64_t v591 = (uint64_t *)((char *)v791 + v590);
                    char v592 = *((unsigned char *)v791 + v590 + 8);
                    uint64_t v593 = (uint64_t *)((char *)v65 + v590);
                    int v594 = *((unsigned __int8 *)v65 + v590 + 8);
                    if (v592)
                    {
                      if (!v594) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v591 != *v593) {
                        LOBYTE(v594) = 1;
                      }
                      if (v594) {
                        return 0;
                      }
                    }
                    uint64_t v595 = v773[148];
                    uint64_t v596 = (uint64_t *)((char *)v791 + v595);
                    char v597 = *((unsigned char *)v791 + v595 + 8);
                    uint64_t v598 = (uint64_t *)((char *)v65 + v595);
                    int v599 = *((unsigned __int8 *)v65 + v595 + 8);
                    if (v597)
                    {
                      if (!v599) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v596 != *v598) {
                        LOBYTE(v599) = 1;
                      }
                      if (v599) {
                        return 0;
                      }
                    }
                    uint64_t v600 = v773[149];
                    uint64_t v601 = (uint64_t *)((char *)v791 + v600);
                    char v602 = *((unsigned char *)v791 + v600 + 8);
                    uint64_t v603 = (uint64_t *)((char *)v65 + v600);
                    int v604 = *((unsigned __int8 *)v65 + v600 + 8);
                    if (v602)
                    {
                      if (!v604) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v601 != *v603) {
                        LOBYTE(v604) = 1;
                      }
                      if (v604) {
                        return 0;
                      }
                    }
                    uint64_t v605 = v773[150];
                    uint64_t v606 = (uint64_t *)((char *)v791 + v605);
                    char v607 = *((unsigned char *)v791 + v605 + 8);
                    char v608 = (uint64_t *)((char *)v65 + v605);
                    int v609 = *((unsigned __int8 *)v65 + v605 + 8);
                    if (v607)
                    {
                      if (!v609) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v606 != *v608) {
                        LOBYTE(v609) = 1;
                      }
                      if (v609) {
                        return 0;
                      }
                    }
                    uint64_t v610 = v773[151];
                    uint64_t v611 = (uint64_t *)((char *)v791 + v610);
                    char v612 = *((unsigned char *)v791 + v610 + 8);
                    uint64_t v613 = (uint64_t *)((char *)v65 + v610);
                    int v614 = *((unsigned __int8 *)v65 + v610 + 8);
                    if (v612)
                    {
                      if (!v614) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v611 != *v613) {
                        LOBYTE(v614) = 1;
                      }
                      if (v614) {
                        return 0;
                      }
                    }
                    uint64_t v615 = v773[152];
                    uint64_t v616 = (uint64_t *)((char *)v791 + v615);
                    char v617 = *((unsigned char *)v791 + v615 + 8);
                    uint64_t v618 = (uint64_t *)((char *)v65 + v615);
                    int v619 = *((unsigned __int8 *)v65 + v615 + 8);
                    if (v617)
                    {
                      if (!v619) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v616 != *v618) {
                        LOBYTE(v619) = 1;
                      }
                      if (v619) {
                        return 0;
                      }
                    }
                    uint64_t v620 = v773[153];
                    long long v621 = (uint64_t *)((char *)v791 + v620);
                    char v622 = *((unsigned char *)v791 + v620 + 8);
                    long long v623 = (uint64_t *)((char *)v65 + v620);
                    int v624 = *((unsigned __int8 *)v65 + v620 + 8);
                    if (v622)
                    {
                      if (!v624) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v621 != *v623) {
                        LOBYTE(v624) = 1;
                      }
                      if (v624) {
                        return 0;
                      }
                    }
                    uint64_t v625 = v773[154];
                    char v626 = (uint64_t *)((char *)v791 + v625);
                    char v627 = *((unsigned char *)v791 + v625 + 8);
                    v628 = (uint64_t *)((char *)v65 + v625);
                    int v629 = *((unsigned __int8 *)v65 + v625 + 8);
                    if (v627)
                    {
                      if (!v629) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v626 != *v628) {
                        LOBYTE(v629) = 1;
                      }
                      if (v629) {
                        return 0;
                      }
                    }
                    uint64_t v630 = v773[155];
                    uint64_t v631 = (uint64_t *)((char *)v791 + v630);
                    char v632 = *((unsigned char *)v791 + v630 + 8);
                    v633 = (uint64_t *)((char *)v65 + v630);
                    int v634 = *((unsigned __int8 *)v65 + v630 + 8);
                    if (v632)
                    {
                      if (!v634) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v631 != *v633) {
                        LOBYTE(v634) = 1;
                      }
                      if (v634) {
                        return 0;
                      }
                    }
                    uint64_t v635 = v773[156];
                    uint64_t v636 = (uint64_t *)((char *)v791 + v635);
                    char v637 = *((unsigned char *)v791 + v635 + 8);
                    uint64_t v638 = (uint64_t *)((char *)v65 + v635);
                    int v639 = *((unsigned __int8 *)v65 + v635 + 8);
                    if (v637)
                    {
                      if (!v639) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v636 != *v638) {
                        LOBYTE(v639) = 1;
                      }
                      if (v639) {
                        return 0;
                      }
                    }
                    uint64_t v640 = v773[157];
                    uint64_t v641 = (uint64_t *)((char *)v791 + v640);
                    char v642 = *((unsigned char *)v791 + v640 + 8);
                    uint64_t v643 = (uint64_t *)((char *)v65 + v640);
                    int v644 = *((unsigned __int8 *)v65 + v640 + 8);
                    if (v642)
                    {
                      if (!v644) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v641 != *v643) {
                        LOBYTE(v644) = 1;
                      }
                      if (v644) {
                        return 0;
                      }
                    }
                    uint64_t v645 = v773[158];
                    uint64_t v646 = (double *)((char *)v791 + v645);
                    char v647 = *((unsigned char *)v791 + v645 + 8);
                    uint64_t v648 = (double *)((char *)v65 + v645);
                    int v649 = *((unsigned __int8 *)v65 + v645 + 8);
                    if (v647)
                    {
                      if (!v649) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v646 != *v648) {
                        LOBYTE(v649) = 1;
                      }
                      if (v649) {
                        return 0;
                      }
                    }
                    uint64_t v650 = v773[159];
                    uint64_t v651 = (double *)((char *)v791 + v650);
                    char v652 = *((unsigned char *)v791 + v650 + 8);
                    uint64_t v653 = (double *)((char *)v65 + v650);
                    int v654 = *((unsigned __int8 *)v65 + v650 + 8);
                    if (v652)
                    {
                      if (!v654) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v651 != *v653) {
                        LOBYTE(v654) = 1;
                      }
                      if (v654) {
                        return 0;
                      }
                    }
                    uint64_t v655 = v773[160];
                    int v656 = *((unsigned __int8 *)v791 + v655);
                    int v657 = *((unsigned __int8 *)v65 + v655);
                    if (v656 == 2)
                    {
                      if (v657 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v658 = (v656 & 1) == 0;
                      if (v657 == 2 || ((v658 ^ v657) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v659 = v773[161];
                    char v660 = (double *)((char *)v791 + v659);
                    char v661 = *((unsigned char *)v791 + v659 + 8);
                    uint64_t v662 = (double *)((char *)v65 + v659);
                    int v663 = *((unsigned __int8 *)v65 + v659 + 8);
                    if (v661)
                    {
                      if (!v663) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v660 != *v662) {
                        LOBYTE(v663) = 1;
                      }
                      if (v663) {
                        return 0;
                      }
                    }
                    uint64_t v664 = v773[162];
                    char v665 = (double *)((char *)v791 + v664);
                    char v666 = *((unsigned char *)v791 + v664 + 8);
                    uint64_t v667 = (double *)((char *)v65 + v664);
                    int v668 = *((unsigned __int8 *)v65 + v664 + 8);
                    if (v666)
                    {
                      if (!v668) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v665 != *v667) {
                        LOBYTE(v668) = 1;
                      }
                      if (v668) {
                        return 0;
                      }
                    }
                    uint64_t v669 = v773[163];
                    char v670 = (double *)((char *)v791 + v669);
                    char v671 = *((unsigned char *)v791 + v669 + 8);
                    uint64_t v672 = (double *)((char *)v65 + v669);
                    int v673 = *((unsigned __int8 *)v65 + v669 + 8);
                    if (v671)
                    {
                      if (!v673) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v670 != *v672) {
                        LOBYTE(v673) = 1;
                      }
                      if (v673) {
                        return 0;
                      }
                    }
                    uint64_t v674 = v773[164];
                    char v675 = (uint64_t *)((char *)v791 + v674);
                    uint64_t v676 = *(uint64_t *)((char *)v791 + v674 + 8);
                    uint64_t v677 = (uint64_t *)((char *)v65 + v674);
                    uint64_t v678 = v677[1];
                    if (v676)
                    {
                      if (!v678) {
                        return 0;
                      }
                      if (*v675 != *v677 || v676 != v678)
                      {
                        char v679 = _stringCompareWithSmolCheck(_:_:expecting:)();
                        BOOL result = 0;
                        if ((v679 & 1) == 0) {
                          return result;
                        }
                      }
                    }
                    else if (v678)
                    {
                      return 0;
                    }
                    uint64_t v680 = v773[165];
                    v681 = (uint64_t *)((char *)v791 + v680);
                    char v682 = *((unsigned char *)v791 + v680 + 8);
                    uint64_t v683 = (uint64_t *)((char *)v65 + v680);
                    int v684 = *((unsigned __int8 *)v65 + v680 + 8);
                    if (v682)
                    {
                      if (!v684) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v681 != *v683) {
                        LOBYTE(v684) = 1;
                      }
                      if (v684) {
                        return 0;
                      }
                    }
                    uint64_t v685 = v773[166];
                    int v686 = *((unsigned __int8 *)v791 + v685);
                    int v687 = *((unsigned __int8 *)v65 + v685);
                    if (v686 == 2)
                    {
                      if (v687 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v688 = (v686 & 1) == 0;
                      if (v687 == 2 || ((v688 ^ v687) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v689 = v773[167];
                    int v690 = *((unsigned __int8 *)v791 + v689);
                    int v691 = *((unsigned __int8 *)v65 + v689);
                    if (v690 == 2)
                    {
                      if (v691 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v692 = (v690 & 1) == 0;
                      if (v691 == 2 || ((v692 ^ v691) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v693 = v773[168];
                    v694 = (double *)((char *)v791 + v693);
                    char v695 = *((unsigned char *)v791 + v693 + 8);
                    v696 = (double *)((char *)v65 + v693);
                    int v697 = *((unsigned __int8 *)v65 + v693 + 8);
                    if (v695)
                    {
                      if (!v697) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v694 != *v696) {
                        LOBYTE(v697) = 1;
                      }
                      if (v697) {
                        return 0;
                      }
                    }
                    uint64_t v698 = v773[169];
                    v699 = (double *)((char *)v791 + v698);
                    char v700 = *((unsigned char *)v791 + v698 + 8);
                    v701 = (double *)((char *)v65 + v698);
                    int v702 = *((unsigned __int8 *)v65 + v698 + 8);
                    if (v700)
                    {
                      if (!v702) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v699 != *v701) {
                        LOBYTE(v702) = 1;
                      }
                      if (v702) {
                        return 0;
                      }
                    }
                    uint64_t v703 = v773[170];
                    int v704 = *((unsigned __int8 *)v791 + v703);
                    int v705 = *((unsigned __int8 *)v65 + v703);
                    if (v704 == 2)
                    {
                      if (v705 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v706 = (v704 & 1) == 0;
                      if (v705 == 2 || ((v706 ^ v705) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v707 = v773[171];
                    v708 = (_DWORD *)((char *)v791 + v707);
                    char v709 = *((unsigned char *)v791 + v707 + 4);
                    v710 = (_DWORD *)((char *)v65 + v707);
                    int v711 = *((unsigned __int8 *)v65 + v707 + 4);
                    if (v709)
                    {
                      if (!v711) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v708 != *v710) {
                        LOBYTE(v711) = 1;
                      }
                      if (v711) {
                        return 0;
                      }
                    }
                    uint64_t v712 = v773[172];
                    v713 = (uint64_t *)((char *)v791 + v712);
                    char v714 = *((unsigned char *)v791 + v712 + 8);
                    v715 = (uint64_t *)((char *)v65 + v712);
                    int v716 = *((unsigned __int8 *)v65 + v712 + 8);
                    if (v714)
                    {
                      if (!v716) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v713 != *v715) {
                        LOBYTE(v716) = 1;
                      }
                      if (v716) {
                        return 0;
                      }
                    }
                    uint64_t v717 = v773[173];
                    v718 = (double *)((char *)v791 + v717);
                    char v719 = *((unsigned char *)v791 + v717 + 8);
                    v720 = (double *)((char *)v65 + v717);
                    int v721 = *((unsigned __int8 *)v65 + v717 + 8);
                    if (v719)
                    {
                      if (!v721) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v718 != *v720) {
                        LOBYTE(v721) = 1;
                      }
                      if (v721) {
                        return 0;
                      }
                    }
                    uint64_t v722 = v773[174];
                    v723 = (double *)((char *)v791 + v722);
                    char v724 = *((unsigned char *)v791 + v722 + 8);
                    v725 = (double *)((char *)v65 + v722);
                    int v726 = *((unsigned __int8 *)v65 + v722 + 8);
                    if (v724)
                    {
                      if (!v726) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v723 != *v725) {
                        LOBYTE(v726) = 1;
                      }
                      if (v726) {
                        return 0;
                      }
                    }
                    uint64_t v727 = v773[175];
                    v728 = (double *)((char *)v791 + v727);
                    char v729 = *((unsigned char *)v791 + v727 + 8);
                    v730 = (double *)((char *)v65 + v727);
                    int v731 = *((unsigned __int8 *)v65 + v727 + 8);
                    if (v729)
                    {
                      if (!v731) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v728 != *v730) {
                        LOBYTE(v731) = 1;
                      }
                      if (v731) {
                        return 0;
                      }
                    }
                    uint64_t v732 = v773[176];
                    v733 = (double *)((char *)v791 + v732);
                    char v734 = *((unsigned char *)v791 + v732 + 8);
                    v735 = (double *)((char *)v65 + v732);
                    int v736 = *((unsigned __int8 *)v65 + v732 + 8);
                    if (v734)
                    {
                      if (!v736) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v733 != *v735) {
                        LOBYTE(v736) = 1;
                      }
                      if (v736) {
                        return 0;
                      }
                    }
                    uint64_t v737 = v773[177];
                    v738 = (double *)((char *)v791 + v737);
                    char v739 = *((unsigned char *)v791 + v737 + 8);
                    v740 = (double *)((char *)v65 + v737);
                    int v741 = *((unsigned __int8 *)v65 + v737 + 8);
                    if (v739)
                    {
                      if (!v741) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v738 != *v740) {
                        LOBYTE(v741) = 1;
                      }
                      if (v741) {
                        return 0;
                      }
                    }
                    uint64_t v742 = v773[178];
                    v743 = (double *)((char *)v791 + v742);
                    char v744 = *((unsigned char *)v791 + v742 + 8);
                    v745 = (double *)((char *)v65 + v742);
                    int v746 = *((unsigned __int8 *)v65 + v742 + 8);
                    if (v744)
                    {
                      if (!v746) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v743 != *v745) {
                        LOBYTE(v746) = 1;
                      }
                      if (v746) {
                        return 0;
                      }
                    }
                    uint64_t v747 = v773[179];
                    int v748 = *((unsigned __int8 *)v791 + v747);
                    int v749 = *((unsigned __int8 *)v65 + v747);
                    if (v748 == 2)
                    {
                      if (v749 != 2) {
                        return 0;
                      }
                    }
                    else
                    {
                      BOOL result = 0;
                      BOOL v750 = (v748 & 1) == 0;
                      if (v749 == 2 || ((v750 ^ v749) & 1) == 0) {
                        return result;
                      }
                    }
                    uint64_t v751 = v773[180];
                    v752 = (double *)((char *)v791 + v751);
                    char v753 = *((unsigned char *)v791 + v751 + 8);
                    v754 = (double *)((char *)v65 + v751);
                    int v755 = *((unsigned __int8 *)v65 + v751 + 8);
                    if ((v753 & 1) == 0)
                    {
                      if (*v752 != *v754) {
                        LOBYTE(v755) = 1;
                      }
                      if (v755) {
                        return 0;
                      }
                      goto LABEL_1028;
                    }
                    if (v755)
                    {
LABEL_1028:
                      uint64_t v756 = v773[181];
                      v757 = (double *)((char *)v791 + v756);
                      char v758 = *((unsigned char *)v791 + v756 + 8);
                      v759 = (double *)((char *)v65 + v756);
                      char v760 = *((unsigned char *)v65 + v756 + 8);
                      if ((v758 & 1) == 0)
                      {
                        if (*v757 != *v759) {
                          char v760 = 1;
                        }
                        return (v760 & 1) == 0;
                      }
                      return (v760 & 1) != 0;
                    }
                    return 0;
                  }
                }
                else if (!v211)
                {
                  uint64_t v227 = v200;
                  sub_1009403D4(v197, v196, v199, v198, v201, v200, 0);
                  sub_1009403D4(v784, v785, v786, v787, v788, v789, 0);
                  sub_1009404E4(v197, v196, v199, v198, v201, v227, 0);
                  goto LABEL_392;
                }
                uint64_t v792 = v197;
                uint64_t v793 = v196;
                uint64_t v794 = v199;
                uint64_t v795 = v198;
                uint64_t v225 = v201;
                uint64_t v796 = v201;
                uint64_t v797 = v200;
                uint64_t v798 = v202;
                uint64_t v799 = v203;
                uint64_t v800 = v204;
                uint64_t v801 = v205;
                uint64_t v802 = v206;
                uint64_t v803 = (uint64_t)v207;
                uint64_t v804 = v208;
                uint64_t v805 = v209;
                uint64_t v226 = v784;
                uint64_t v806 = v784;
                uint64_t v807 = v785;
                uint64_t v808 = v786;
                uint64_t v809 = v787;
                uint64_t v810 = v788;
                uint64_t v811 = v789;
                uint64_t v812 = v211;
                uint64_t v813 = v790;
                uint64_t v814 = v783;
                uint64_t v815 = v782;
                uint64_t v816 = v781;
                uint64_t v817 = v778;
                uint64_t v818 = v780;
                uint64_t v819 = v779;
                sub_1009403D4(v197, v196, v199, v198, v225, v200, v202);
                sub_1009403D4(v226, v785, v786, v787, v788, v789, v211);
                sub_100940418(&v792);
                return 0;
              }
              sub_10001DAB4(v785, (uint64_t *)&unk_10163AC90);
              sub_10001DAB4(v786, (uint64_t *)&unk_10163AC90);
              (*(void (**)(uint64_t, uint64_t))(v790 + 8))(v787, v775);
            }
            uint64_t v129 = (uint64_t *)&unk_10165C700;
            uint64_t v130 = v789;
LABEL_334:
            sub_10001DAB4(v130, v129);
            return 0;
          }
        }
        else
        {
          sub_10001D074(v783, v782, (uint64_t *)&unk_10163AC90);
          if (v142(v141, 1, v775) != 1)
          {
            uint64_t v143 = v790;
            uint64_t v144 = v788;
            uint64_t v145 = v775;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v790 + 32))(v788, v141, v775);
            sub_10094714C(&qword_10163AFA0, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v146 = v782;
            char v147 = dispatch thunk of static Equatable.== infix(_:_:)();
            char v148 = *(void (**)(uint64_t, uint64_t))(v143 + 8);
            v148(v144, v145);
            sub_10001DAB4(v780, (uint64_t *)&unk_10163AC90);
            sub_10001DAB4(v781, (uint64_t *)&unk_10163AC90);
            v148(v146, v145);
            sub_10001DAB4(v783, (uint64_t *)&unk_10163AC90);
            if ((v147 & 1) == 0) {
              return 0;
            }
            goto LABEL_336;
          }
          sub_10001DAB4(v780, (uint64_t *)&unk_10163AC90);
          sub_10001DAB4(v781, (uint64_t *)&unk_10163AC90);
          (*(void (**)(uint64_t, uint64_t))(v790 + 8))(v782, v775);
        }
        uint64_t v129 = (uint64_t *)&unk_10165C700;
        uint64_t v130 = v783;
        goto LABEL_334;
      }
      sub_10001DAB4((uint64_t)v28, &qword_101638CF0);
      sub_10001DAB4((uint64_t)v31, &qword_101638CF0);
      (*(void (**)(uint64_t, uint64_t))(v777 + 8))(v774, v779);
    }
    uint64_t v129 = (uint64_t *)&unk_10166EAF0;
    uint64_t v130 = v778;
    goto LABEL_334;
  }
  return result;
}

unint64_t sub_10093FA3C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000588C(&qword_101652400);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_100723EF4(v4);
  if (v6)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v11 = (_OWORD *)((char *)v7 + 24);
    uint64_t v4 = *((void *)v7 - 1);
    long long v13 = *v7;
    swift_retain();
    unint64_t result = sub_100723EF4(v4);
    uint64_t v7 = v11;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10093FB44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000588C(&qword_10163F8E0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t v6 = *(void *)(a1 + 48);
  unint64_t result = sub_1007245A4(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  BOOL v9 = (unint64_t *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v10 = (uint64_t *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_1000361E0(v5, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v5 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_1007245A4(v4);
    v9 += 3;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10093FC48(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_10000588C((uint64_t *)&unk_1016609C0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_1007248D8(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  char v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    char v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_1007248D8(v4);
    char v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_10093FD40(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_10000588C(&qword_1016523E0);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_1007243A4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  char v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1007243A4(v4);
    char v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void *sub_10093FE44()
{
  uint64_t v0 = sub_100A6E4D4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  unint64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_100A6E4D4((void *)(v1 > 1), v2 + 1, 1, v0);
    unint64_t v1 = v0[3];
    unint64_t v3 = v1 >> 1;
  }
  v0[2] = v4;
  uint64_t v5 = &v0[5 * v2];
  *((_OWORD *)v5 + 2) = xmmword_10136E680;
  v5[6] = 0xE800000000000000;
  v5[7] = 2458820592;
  v5[8] = 0xA400000000000000;
  int64_t v6 = v2 + 2;
  if (v3 <= v4) {
    uint64_t v0 = sub_100A6E4D4((void *)(v1 > 1), v6, 1, v0);
  }
  v0[2] = v6;
  char v7 = &v0[5 * v4];
  *((_OWORD *)v7 + 2) = xmmword_10136E690;
  v7[6] = 0xE400000000000000;
  v7[7] = 2996477936;
  v7[8] = 0xA400000000000000;
  unint64_t v9 = v0[2];
  unint64_t v8 = v0[3];
  unint64_t v10 = v8 >> 1;
  unint64_t v11 = v9 + 1;
  if (v8 >> 1 <= v9)
  {
    uint64_t v0 = sub_100A6E4D4((void *)(v8 > 1), v9 + 1, 1, v0);
    unint64_t v8 = v0[3];
    unint64_t v10 = v8 >> 1;
  }
  v0[2] = v11;
  uint64_t v12 = &v0[5 * v9];
  *((_OWORD *)v12 + 2) = xmmword_10136E6A0;
  v12[6] = 0xE600000000000000;
  v12[7] = 3079905264;
  v12[8] = 0xA400000000000000;
  int64_t v13 = v9 + 2;
  if (v10 <= v11) {
    uint64_t v0 = sub_100A6E4D4((void *)(v8 > 1), v13, 1, v0);
  }
  v0[2] = v13;
  char v14 = &v0[5 * v11];
  *((_OWORD *)v14 + 2) = xmmword_10136E6B0;
  v14[6] = 0xE700000000000000;
  v14[7] = 2626789360;
  v14[8] = 0xA400000000000000;
  unint64_t v16 = v0[2];
  unint64_t v15 = v0[3];
  unint64_t v17 = v15 >> 1;
  unint64_t v18 = v16 + 1;
  if (v15 >> 1 <= v16)
  {
    uint64_t v0 = sub_100A6E4D4((void *)(v15 > 1), v16 + 1, 1, v0);
    unint64_t v15 = v0[3];
    unint64_t v17 = v15 >> 1;
  }
  v0[2] = v18;
  uint64_t v19 = &v0[5 * v16];
  *((_OWORD *)v19 + 2) = xmmword_10136E6C0;
  v19[6] = 0xE600000000000000;
  v19[7] = 2779226096;
  v19[8] = 0xA400000000000000;
  int64_t v20 = v16 + 2;
  if (v17 <= v18) {
    uint64_t v0 = sub_100A6E4D4((void *)(v15 > 1), v20, 1, v0);
  }
  v0[2] = v20;
  uint64_t v21 = &v0[5 * v18];
  *((_OWORD *)v21 + 2) = xmmword_10136E6D0;
  v21[6] = 0xE400000000000000;
  v21[7] = 2442436592;
  v21[8] = 0xA400000000000000;
  unint64_t v23 = v0[2];
  unint64_t v22 = v0[3];
  unint64_t v24 = v22 >> 1;
  unint64_t v25 = v23 + 1;
  if (v22 >> 1 <= v23)
  {
    uint64_t v0 = sub_100A6E4D4((void *)(v22 > 1), v23 + 1, 1, v0);
    unint64_t v22 = v0[3];
    unint64_t v24 = v22 >> 1;
  }
  v0[2] = v25;
  uint64_t v26 = &v0[5 * v23];
  *((_OWORD *)v26 + 2) = xmmword_10136E6E0;
  v26[6] = 0xE700000000000000;
  v26[7] = 3014107120;
  v26[8] = 0xA400000000000000;
  int64_t v27 = v23 + 2;
  if (v24 <= v25) {
    uint64_t v0 = sub_100A6E4D4((void *)(v22 > 1), v27, 1, v0);
  }
  v0[2] = v27;
  __int16 v28 = &v0[5 * v25];
  *((_OWORD *)v28 + 2) = xmmword_10136E6F0;
  v28[6] = 0xE800000000000000;
  v28[7] = 0x8FB8EF8298E2;
  v28[8] = 0xA600000000000000;
  unint64_t v30 = v0[2];
  unint64_t v29 = v0[3];
  unint64_t v31 = v29 >> 1;
  unint64_t v32 = v30 + 1;
  if (v29 >> 1 <= v30)
  {
    uint64_t v0 = sub_100A6E4D4((void *)(v29 > 1), v30 + 1, 1, v0);
    unint64_t v29 = v0[3];
    unint64_t v31 = v29 >> 1;
  }
  v0[2] = v32;
  uint64_t v33 = &v0[5 * v30];
  *((_OWORD *)v33 + 2) = xmmword_10136E700;
  v33[6] = 0xE600000000000000;
  v33[7] = 3012730864;
  v33[8] = 0xA400000000000000;
  int64_t v34 = v30 + 2;
  if (v31 <= v32) {
    uint64_t v0 = sub_100A6E4D4((void *)(v29 > 1), v34, 1, v0);
  }
  v0[2] = v34;
  uint64_t v35 = &v0[5 * v32];
  *((_OWORD *)v35 + 2) = xmmword_10136E710;
  v35[6] = 0xEB00000000656D61;
  v35[7] = 2157486064;
  v35[8] = 0xA400000000000000;
  char v36 = sub_100A6E3C4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v38 = v36[2];
  unint64_t v37 = v36[3];
  if (v38 >= v37 >> 1) {
    char v36 = sub_100A6E3C4((void *)(v37 > 1), v38 + 1, 1, v36);
  }
  v36[2] = v38 + 1;
  uint64_t v39 = &v36[4 * v38];
  *((_OWORD *)v39 + 2) = xmmword_10136E720;
  v39[6] = 0xE500000000000000;
  v39[7] = v0;
  return v36;
}

uint64_t type metadata accessor for DefaultConfigurationLayer()
{
  uint64_t result = qword_1016525C8;
  if (!qword_1016525C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100940314()
{
  unint64_t result = qword_101652378;
  if (!qword_101652378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652378);
  }
  return result;
}

id sub_100940368(id result, char a2)
{
  if (!a2) {
    return result;
  }
  return result;
}

uint64_t sub_100940378(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1009403D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t *sub_100940418(uint64_t *a1)
{
  uint64_t v2 = a1[15];
  uint64_t v9 = a1[14];
  uint64_t v3 = a1[16];
  uint64_t v4 = a1[17];
  uint64_t v5 = a1[18];
  uint64_t v6 = a1[19];
  uint64_t v7 = a1[20];
  sub_1009404E4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1009404E4(v9, v2, v3, v4, v5, v6, v7);
  return a1;
}

uint64_t sub_1009404E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (a7)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100940528(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

_OWORD *sub_100940590(_OWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
      *(void *)uint64_t v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    *((void *)v4 + 2) = *(void *)(a2 + 16);
    *((_WORD *)v4 + 12) = *(_WORD *)(a2 + 24);
    *((void *)v4 + 4) = *(void *)(a2 + 32);
    *((unsigned char *)v4 + 40) = *(unsigned char *)(a2 + 40);
    *((void *)v4 + 6) = *(void *)(a2 + 48);
    *((_WORD *)v4 + 28) = *(_WORD *)(a2 + 56);
    *((void *)v4 + 8) = *(void *)(a2 + 64);
    *((unsigned char *)v4 + 72) = *(unsigned char *)(a2 + 72);
    uint64_t v10 = *(void *)(a2 + 88);
    *((void *)v4 + 10) = *(void *)(a2 + 80);
    *((void *)v4 + 11) = v10;
    *((void *)v4 + 12) = *(void *)(a2 + 96);
    *((unsigned char *)v4 + 104) = *(unsigned char *)(a2 + 104);
    *(_WORD *)((char *)v4 + 105) = *(_WORD *)(a2 + 105);
    *((void *)v4 + 14) = *(void *)(a2 + 112);
    *((unsigned char *)v4 + 120) = *(unsigned char *)(a2 + 120);
    *((void *)v4 + 16) = *(void *)(a2 + 128);
    *((unsigned char *)v4 + 136) = *(unsigned char *)(a2 + 136);
    uint64_t v11 = *(void *)(a2 + 144);
    *((unsigned char *)v4 + 152) = *(unsigned char *)(a2 + 152);
    *((void *)v4 + 18) = v11;
    *((unsigned char *)v4 + 168) = *(unsigned char *)(a2 + 168);
    *((void *)v4 + 20) = *(void *)(a2 + 160);
    *((unsigned char *)v4 + 184) = *(unsigned char *)(a2 + 184);
    *((void *)v4 + 22) = *(void *)(a2 + 176);
    *((unsigned char *)v4 + 200) = *(unsigned char *)(a2 + 200);
    *((void *)v4 + 24) = *(void *)(a2 + 192);
    *((unsigned char *)v4 + 216) = *(unsigned char *)(a2 + 216);
    *((void *)v4 + 26) = *(void *)(a2 + 208);
    uint64_t v12 = *(void *)(a2 + 224);
    *((unsigned char *)v4 + 232) = *(unsigned char *)(a2 + 232);
    *((void *)v4 + 28) = v12;
    uint64_t v13 = *(void *)(a2 + 240);
    *((unsigned char *)v4 + 248) = *(unsigned char *)(a2 + 248);
    *((void *)v4 + 30) = v13;
    uint64_t v14 = *(void *)(a2 + 256);
    *((unsigned char *)v4 + 264) = *(unsigned char *)(a2 + 264);
    *((void *)v4 + 32) = v14;
    uint64_t v15 = *(void *)(a2 + 272);
    *((unsigned char *)v4 + 280) = *(unsigned char *)(a2 + 280);
    *((void *)v4 + 34) = v15;
    uint64_t v16 = *(void *)(a2 + 288);
    *((unsigned char *)v4 + 296) = *(unsigned char *)(a2 + 296);
    *((void *)v4 + 36) = v16;
    uint64_t v17 = *(void *)(a2 + 304);
    *((unsigned char *)v4 + 312) = *(unsigned char *)(a2 + 312);
    *((void *)v4 + 38) = v17;
    *((unsigned char *)v4 + 313) = *(unsigned char *)(a2 + 313);
    uint64_t v18 = *(void *)(a2 + 328);
    uint64_t v19 = *(void *)(a2 + 320);
    *((unsigned char *)v4 + 336) = *(unsigned char *)(a2 + 336);
    *((void *)v4 + 40) = v19;
    *((void *)v4 + 41) = v18;
    uint64_t v20 = *(void *)(a2 + 344);
    *((unsigned char *)v4 + 352) = *(unsigned char *)(a2 + 352);
    *((void *)v4 + 43) = v20;
    uint64_t v21 = *(void *)(a2 + 360);
    *((unsigned char *)v4 + 368) = *(unsigned char *)(a2 + 368);
    *((void *)v4 + 45) = v21;
    uint64_t v22 = *(void *)(a2 + 376);
    *((unsigned char *)v4 + 384) = *(unsigned char *)(a2 + 384);
    *((void *)v4 + 47) = v22;
    uint64_t v23 = *(void *)(a2 + 392);
    *((unsigned char *)v4 + 400) = *(unsigned char *)(a2 + 400);
    *((void *)v4 + 49) = v23;
    uint64_t v24 = *(void *)(a2 + 408);
    *((unsigned char *)v4 + 416) = *(unsigned char *)(a2 + 416);
    *((void *)v4 + 51) = v24;
    uint64_t v25 = *(void *)(a2 + 424);
    *((unsigned char *)v4 + 432) = *(unsigned char *)(a2 + 432);
    *((void *)v4 + 53) = v25;
    uint64_t v26 = *(void *)(a2 + 440);
    *((unsigned char *)v4 + 448) = *(unsigned char *)(a2 + 448);
    *((void *)v4 + 55) = v26;
    uint64_t v27 = *(void *)(a2 + 456);
    *((unsigned char *)v4 + 464) = *(unsigned char *)(a2 + 464);
    *((void *)v4 + 57) = v27;
    uint64_t v28 = *(void *)(a2 + 472);
    *((unsigned char *)v4 + 480) = *(unsigned char *)(a2 + 480);
    *((void *)v4 + 59) = v28;
    *((unsigned char *)v4 + 481) = *(unsigned char *)(a2 + 481);
    uint64_t v29 = *(void *)(a2 + 488);
    *((unsigned char *)v4 + 496) = *(unsigned char *)(a2 + 496);
    *((void *)v4 + 61) = v29;
    uint64_t v30 = *(void *)(a2 + 504);
    *((unsigned char *)v4 + 512) = *(unsigned char *)(a2 + 512);
    *((void *)v4 + 63) = v30;
    uint64_t v31 = *(void *)(a2 + 520);
    *((unsigned char *)v4 + 528) = *(unsigned char *)(a2 + 528);
    *((void *)v4 + 65) = v31;
    uint64_t v32 = *(void *)(a2 + 536);
    *((unsigned char *)v4 + 544) = *(unsigned char *)(a2 + 544);
    *((void *)v4 + 67) = v32;
    uint64_t v33 = *(void *)(a2 + 552);
    *((unsigned char *)v4 + 560) = *(unsigned char *)(a2 + 560);
    *((void *)v4 + 69) = v33;
    uint64_t v34 = *(void *)(a2 + 568);
    *((unsigned char *)v4 + 576) = *(unsigned char *)(a2 + 576);
    *((void *)v4 + 71) = v34;
    uint64_t v35 = *(void *)(a2 + 584);
    *((unsigned char *)v4 + 592) = *(unsigned char *)(a2 + 592);
    *((void *)v4 + 73) = v35;
    *((void *)v4 + 75) = *(void *)(a2 + 600);
    uint64_t v36 = *(void *)(a2 + 608);
    *((unsigned char *)v4 + 616) = *(unsigned char *)(a2 + 616);
    *((void *)v4 + 76) = v36;
    uint64_t v37 = *(void *)(a2 + 624);
    *((unsigned char *)v4 + 632) = *(unsigned char *)(a2 + 632);
    *((void *)v4 + 78) = v37;
    unint64_t v38 = *(void **)(a2 + 640);
    *((void *)v4 + 80) = v38;
    uint64_t v39 = *(void *)(a2 + 648);
    uint64_t v40 = *(void *)(a2 + 656);
    *((unsigned char *)v4 + 664) = *(unsigned char *)(a2 + 664);
    *((void *)v4 + 82) = v40;
    uint64_t v41 = *(void *)(a2 + 672);
    *((unsigned char *)v4 + 680) = *(unsigned char *)(a2 + 680);
    *((void *)v4 + 84) = v41;
    uint64_t v42 = *(void *)(a2 + 688);
    *((unsigned char *)v4 + 696) = *(unsigned char *)(a2 + 696);
    *((void *)v4 + 86) = v42;
    uint64_t v43 = *(void *)(a2 + 704);
    *((unsigned char *)v4 + 712) = *(unsigned char *)(a2 + 712);
    *((void *)v4 + 88) = v43;
    uint64_t v44 = *(void *)(a2 + 720);
    *((unsigned char *)v4 + 728) = *(unsigned char *)(a2 + 728);
    *((void *)v4 + 90) = v44;
    *((unsigned char *)v4 + 729) = *(unsigned char *)(a2 + 729);
    uint64_t v45 = a3[60];
    __dst = (char *)v4 + v45;
    int v46 = (const void *)(a2 + v45);
    *((void *)v4 + 81) = v39;
    uint64_t v47 = type metadata accessor for UUID();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v50 = v38;
    swift_bridgeObjectRetain();
    if (v49(v46, 1, v47))
    {
      uint64_t v51 = sub_10000588C(&qword_101638CF0);
      memcpy(__dst, v46, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v48 + 16))(__dst, v46, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(__dst, 0, 1, v47);
    }
    uint64_t v52 = a3[61];
    uint64_t v53 = (char *)v4 + v52;
    uint64_t v54 = (const void *)(a2 + v52);
    uint64_t v55 = type metadata accessor for Date();
    uint64_t v56 = *(void *)(v55 - 8);
    int v57 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48);
    if (v57(v54, 1, v55))
    {
      uint64_t v58 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
    }
    uint64_t v59 = a3[62];
    uint64_t v60 = a3[63];
    int v61 = (char *)v4 + v59;
    uint64_t v62 = a2 + v59;
    *(void *)int v61 = *(void *)v62;
    v61[8] = *(unsigned char *)(v62 + 8);
    BOOL v63 = (char *)v4 + v60;
    char v64 = (const void *)(a2 + v60);
    if (v57((const void *)(a2 + v60), 1, v55))
    {
      uint64_t v65 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v56 + 16))(v63, v64, v55);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v63, 0, 1, v55);
    }
    uint64_t v66 = a3[64];
    char v67 = (char *)v4 + v66;
    uint64_t v68 = a2 + v66;
    *(void *)char v67 = *(void *)v68;
    v67[8] = *(unsigned char *)(v68 + 8);
    uint64_t v69 = a3[65];
    char v70 = (char *)v4 + v69;
    uint64_t v71 = a2 + v69;
    *(void *)char v70 = *(void *)v71;
    v70[8] = *(unsigned char *)(v71 + 8);
    uint64_t v72 = a3[66];
    char v73 = (char *)v4 + v72;
    uint64_t v74 = a2 + v72;
    *(void *)char v73 = *(void *)v74;
    v73[8] = *(unsigned char *)(v74 + 8);
    uint64_t v75 = a3[67];
    char v76 = (char *)v4 + v75;
    uint64_t v77 = a2 + v75;
    *(void *)char v76 = *(void *)v77;
    v76[8] = *(unsigned char *)(v77 + 8);
    uint64_t v78 = a3[68];
    int v79 = (char *)v4 + v78;
    int v80 = (uint64_t *)(a2 + v78);
    uint64_t v81 = *v80;
    v79[8] = *((unsigned char *)v80 + 8);
    *(void *)int v79 = v81;
    uint64_t v82 = a3[69];
    uint64_t v83 = (char *)v4 + v82;
    uint64_t v84 = a2 + v82;
    v83[8] = *(unsigned char *)(v84 + 8);
    *(void *)uint64_t v83 = *(void *)v84;
    uint64_t v85 = a3[70];
    char v86 = (char *)v4 + v85;
    uint64_t v87 = a2 + v85;
    uint64_t v88 = *(void *)(v87 + 48);
    if (v88)
    {
      long long v89 = *(_OWORD *)(v87 + 16);
      *(_OWORD *)char v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v89;
      *((_OWORD *)v86 + 2) = *(_OWORD *)(v87 + 32);
      *((void *)v86 + 6) = v88;
      *(_OWORD *)(v86 + 56) = *(_OWORD *)(v87 + 56);
      *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
      *(_OWORD *)(v86 + 88) = *(_OWORD *)(v87 + 88);
      *((void *)v86 + 13) = *(void *)(v87 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v90 = *(_OWORD *)(v87 + 80);
      *((_OWORD *)v86 + 4) = *(_OWORD *)(v87 + 64);
      *((_OWORD *)v86 + 5) = v90;
      *((_OWORD *)v86 + 6) = *(_OWORD *)(v87 + 96);
      long long v91 = *(_OWORD *)(v87 + 16);
      *(_OWORD *)char v86 = *(_OWORD *)v87;
      *((_OWORD *)v86 + 1) = v91;
      long long v92 = *(_OWORD *)(v87 + 48);
      *((_OWORD *)v86 + 2) = *(_OWORD *)(v87 + 32);
      *((_OWORD *)v86 + 3) = v92;
    }
    *((unsigned char *)v4 + a3[71]) = *(unsigned char *)(a2 + a3[71]);
    *((unsigned char *)v4 + a3[72]) = *(unsigned char *)(a2 + a3[72]);
    *((unsigned char *)v4 + a3[73]) = *(unsigned char *)(a2 + a3[73]);
    uint64_t v93 = a3[74];
    char v94 = (char *)v4 + v93;
    uint64_t v95 = a2 + v93;
    *(void *)char v94 = *(void *)v95;
    v94[8] = *(unsigned char *)(v95 + 8);
    uint64_t v96 = a3[75];
    BOOL v97 = (char *)v4 + v96;
    uint64_t v98 = a2 + v96;
    *(void *)BOOL v97 = *(void *)v98;
    v97[8] = *(unsigned char *)(v98 + 8);
    uint64_t v99 = a3[76];
    char v100 = (char *)v4 + v99;
    uint64_t v101 = a2 + v99;
    *(void *)char v100 = *(void *)v101;
    v100[8] = *(unsigned char *)(v101 + 8);
    uint64_t v102 = a3[77];
    char v103 = (char *)v4 + v102;
    uint64_t v104 = a2 + v102;
    *(void *)char v103 = *(void *)v104;
    v103[8] = *(unsigned char *)(v104 + 8);
    uint64_t v105 = a3[78];
    uint64_t v106 = (char *)v4 + v105;
    char v107 = (uint64_t *)(a2 + v105);
    uint64_t v108 = *v107;
    v106[8] = *((unsigned char *)v107 + 8);
    *(void *)uint64_t v106 = v108;
    uint64_t v109 = a3[79];
    char v110 = (char *)v4 + v109;
    uint64_t v111 = a2 + v109;
    *(void *)char v110 = *(void *)v111;
    v110[8] = *(unsigned char *)(v111 + 8);
    uint64_t v112 = a3[80];
    char v113 = (char *)v4 + v112;
    uint64_t v114 = a2 + v112;
    *(void *)char v113 = *(void *)v114;
    v113[8] = *(unsigned char *)(v114 + 8);
    uint64_t v115 = a3[81];
    char v116 = (char *)v4 + v115;
    uint64_t v117 = a2 + v115;
    *(void *)char v116 = *(void *)v117;
    v116[8] = *(unsigned char *)(v117 + 8);
    uint64_t v118 = a3[82];
    char v119 = (char *)v4 + v118;
    uint64_t v120 = a2 + v118;
    *(void *)char v119 = *(void *)v120;
    v119[8] = *(unsigned char *)(v120 + 8);
    uint64_t v121 = a3[83];
    int v122 = (void *)((char *)v4 + v121);
    int v123 = (void *)(a2 + v121);
    uint64_t v124 = v123[1];
    *int v122 = *v123;
    v122[1] = v124;
    uint64_t v125 = a3[84];
    uint64_t v126 = (char *)v4 + v125;
    uint64_t v127 = a2 + v125;
    *(void *)uint64_t v126 = *(void *)v127;
    v126[8] = *(unsigned char *)(v127 + 8);
    uint64_t v128 = a3[85];
    uint64_t v129 = (void *)((char *)v4 + v128);
    uint64_t v130 = (void *)(a2 + v128);
    uint64_t v131 = v130[1];
    *uint64_t v129 = *v130;
    v129[1] = v131;
    uint64_t v132 = a3[86];
    uint64_t v133 = (char *)v4 + v132;
    uint64_t v134 = a2 + v132;
    *(void *)uint64_t v133 = *(void *)v134;
    v133[8] = *(unsigned char *)(v134 + 8);
    *(void *)((char *)v4 + a3[87]) = *(void *)(a2 + a3[87]);
    uint64_t v135 = a3[88];
    char v136 = (void *)((char *)v4 + v135);
    uint64_t v137 = (void *)(a2 + v135);
    uint64_t v138 = v137[1];
    *char v136 = *v137;
    v136[1] = v138;
    uint64_t v139 = a3[89];
    uint64_t v140 = (char *)v4 + v139;
    uint64_t v141 = a2 + v139;
    *(void *)uint64_t v140 = *(void *)v141;
    v140[8] = *(unsigned char *)(v141 + 8);
    *((unsigned char *)v4 + a3[90]) = *(unsigned char *)(a2 + a3[90]);
    *((unsigned char *)v4 + a3[91]) = *(unsigned char *)(a2 + a3[91]);
    *((unsigned char *)v4 + a3[92]) = *(unsigned char *)(a2 + a3[92]);
    *((unsigned char *)v4 + a3[93]) = *(unsigned char *)(a2 + a3[93]);
    uint64_t v142 = a3[94];
    uint64_t v143 = (char *)v4 + v142;
    uint64_t v144 = a2 + v142;
    *(void *)uint64_t v143 = *(void *)v144;
    v143[8] = *(unsigned char *)(v144 + 8);
    uint64_t v145 = a3[95];
    uint64_t v146 = (char *)v4 + v145;
    uint64_t v147 = a2 + v145;
    *(void *)uint64_t v146 = *(void *)v147;
    v146[8] = *(unsigned char *)(v147 + 8);
    uint64_t v148 = a3[96];
    uint64_t v149 = (char *)v4 + v148;
    uint64_t v150 = a2 + v148;
    *(void *)uint64_t v149 = *(void *)v150;
    v149[8] = *(unsigned char *)(v150 + 8);
    uint64_t v151 = a3[97];
    uint64_t v152 = (char *)v4 + v151;
    uint64_t v153 = a2 + v151;
    *(void *)uint64_t v152 = *(void *)v153;
    v152[8] = *(unsigned char *)(v153 + 8);
    uint64_t v154 = a3[98];
    uint64_t v155 = (char *)v4 + v154;
    uint64_t v156 = (uint64_t *)(a2 + v154);
    uint64_t v157 = *v156;
    v155[8] = *((unsigned char *)v156 + 8);
    *(void *)uint64_t v155 = v157;
    uint64_t v158 = a3[99];
    uint64_t v159 = (char *)v4 + v158;
    uint64_t v160 = a2 + v158;
    *(void *)uint64_t v159 = *(void *)v160;
    v159[8] = *(unsigned char *)(v160 + 8);
    uint64_t v161 = a3[100];
    uint64_t v162 = (char *)v4 + v161;
    uint64_t v163 = a2 + v161;
    *(void *)uint64_t v162 = *(void *)v163;
    v162[8] = *(unsigned char *)(v163 + 8);
    uint64_t v164 = a3[101];
    uint64_t v165 = (char *)v4 + v164;
    uint64_t v166 = a2 + v164;
    *(void *)uint64_t v165 = *(void *)v166;
    v165[8] = *(unsigned char *)(v166 + 8);
    uint64_t v167 = a3[102];
    uint64_t v168 = (char *)v4 + v167;
    uint64_t v169 = a2 + v167;
    *(void *)uint64_t v168 = *(void *)v169;
    v168[8] = *(unsigned char *)(v169 + 8);
    uint64_t v170 = a3[103];
    uint64_t v171 = (char *)v4 + v170;
    uint64_t v172 = a2 + v170;
    *(void *)uint64_t v171 = *(void *)v172;
    v171[8] = *(unsigned char *)(v172 + 8);
    uint64_t v173 = a3[104];
    int v174 = (char *)v4 + v173;
    uint64_t v175 = a2 + v173;
    *(void *)int v174 = *(void *)v175;
    v174[8] = *(unsigned char *)(v175 + 8);
    uint64_t v176 = a3[105];
    char v177 = (char *)v4 + v176;
    uint64_t v178 = a2 + v176;
    *(void *)char v177 = *(void *)v178;
    v177[8] = *(unsigned char *)(v178 + 8);
    uint64_t v179 = a3[106];
    uint64_t v180 = (char *)v4 + v179;
    uint64_t v181 = a2 + v179;
    *(void *)uint64_t v180 = *(void *)v181;
    v180[8] = *(unsigned char *)(v181 + 8);
    uint64_t v182 = a3[107];
    uint64_t v183 = (char *)v4 + v182;
    uint64_t v184 = a2 + v182;
    *(void *)uint64_t v183 = *(void *)v184;
    v183[8] = *(unsigned char *)(v184 + 8);
    uint64_t v185 = a3[108];
    uint64_t v186 = (char *)v4 + v185;
    uint64_t v187 = a2 + v185;
    *(void *)uint64_t v186 = *(void *)v187;
    v186[8] = *(unsigned char *)(v187 + 8);
    uint64_t v188 = a3[109];
    int v189 = (char *)v4 + v188;
    uint64_t v190 = a2 + v188;
    *(void *)int v189 = *(void *)v190;
    v189[8] = *(unsigned char *)(v190 + 8);
    uint64_t v191 = a3[110];
    char v192 = (char *)v4 + v191;
    uint64_t v193 = a2 + v191;
    *(void *)char v192 = *(void *)v193;
    v192[8] = *(unsigned char *)(v193 + 8);
    uint64_t v194 = a3[111];
    uint64_t v195 = (char *)v4 + v194;
    uint64_t v196 = a2 + v194;
    *(void *)uint64_t v195 = *(void *)v196;
    v195[8] = *(unsigned char *)(v196 + 8);
    uint64_t v197 = a3[112];
    uint64_t v198 = (char *)v4 + v197;
    uint64_t v199 = a2 + v197;
    *(void *)uint64_t v198 = *(void *)v199;
    v198[8] = *(unsigned char *)(v199 + 8);
    uint64_t v200 = a3[113];
    uint64_t v201 = (char *)v4 + v200;
    uint64_t v202 = a2 + v200;
    *(void *)uint64_t v201 = *(void *)v202;
    v201[8] = *(unsigned char *)(v202 + 8);
    uint64_t v203 = a3[114];
    uint64_t v204 = (char *)v4 + v203;
    uint64_t v205 = a2 + v203;
    *(void *)uint64_t v204 = *(void *)v205;
    v204[8] = *(unsigned char *)(v205 + 8);
    uint64_t v206 = a3[115];
    uint64_t v207 = (char *)v4 + v206;
    uint64_t v208 = a2 + v206;
    *(void *)uint64_t v207 = *(void *)v208;
    v207[8] = *(unsigned char *)(v208 + 8);
    *((unsigned char *)v4 + a3[116]) = *(unsigned char *)(a2 + a3[116]);
    uint64_t v209 = a3[117];
    char v210 = (char *)v4 + v209;
    uint64_t v211 = a2 + v209;
    *(void *)char v210 = *(void *)v211;
    v210[8] = *(unsigned char *)(v211 + 8);
    uint64_t v212 = a3[118];
    uint64_t v213 = (char *)v4 + v212;
    uint64_t v214 = a2 + v212;
    *(void *)uint64_t v213 = *(void *)v214;
    v213[8] = *(unsigned char *)(v214 + 8);
    uint64_t v215 = a3[119];
    uint64_t v216 = (char *)v4 + v215;
    uint64_t v217 = a2 + v215;
    *(void *)uint64_t v216 = *(void *)v217;
    v216[8] = *(unsigned char *)(v217 + 8);
    *((unsigned char *)v4 + a3[120]) = *(unsigned char *)(a2 + a3[120]);
    *((unsigned char *)v4 + a3[121]) = *(unsigned char *)(a2 + a3[121]);
    *((unsigned char *)v4 + a3[122]) = *(unsigned char *)(a2 + a3[122]);
    uint64_t v218 = a3[123];
    uint64_t v219 = (char *)v4 + v218;
    uint64_t v220 = a2 + v218;
    *(void *)uint64_t v219 = *(void *)v220;
    v219[8] = *(unsigned char *)(v220 + 8);
    uint64_t v221 = a3[124];
    uint64_t v222 = (char *)v4 + v221;
    uint64_t v223 = a2 + v221;
    *(void *)uint64_t v222 = *(void *)v223;
    v222[8] = *(unsigned char *)(v223 + 8);
    uint64_t v224 = a3[125];
    uint64_t v225 = (char *)v4 + v224;
    uint64_t v226 = a2 + v224;
    *(void *)uint64_t v225 = *(void *)v226;
    v225[8] = *(unsigned char *)(v226 + 8);
    uint64_t v227 = a3[126];
    uint64_t v228 = (char *)v4 + v227;
    uint64_t v229 = a2 + v227;
    *(void *)uint64_t v228 = *(void *)v229;
    v228[8] = *(unsigned char *)(v229 + 8);
    uint64_t v230 = a3[127];
    BOOL v231 = (char *)v4 + v230;
    uint64_t v232 = (uint64_t *)(a2 + v230);
    uint64_t v233 = *v232;
    v231[8] = *((unsigned char *)v232 + 8);
    *(void *)BOOL v231 = v233;
    uint64_t v234 = a3[128];
    BOOL v235 = (char *)v4 + v234;
    uint64_t v236 = a2 + v234;
    *(void *)BOOL v235 = *(void *)v236;
    v235[8] = *(unsigned char *)(v236 + 8);
    uint64_t v237 = a3[129];
    int v238 = (char *)v4 + v237;
    uint64_t v239 = a2 + v237;
    *(void *)int v238 = *(void *)v239;
    v238[8] = *(unsigned char *)(v239 + 8);
    uint64_t v240 = a3[130];
    char v241 = (char *)v4 + v240;
    uint64_t v242 = a2 + v240;
    *(void *)char v241 = *(void *)v242;
    v241[8] = *(unsigned char *)(v242 + 8);
    *((unsigned char *)v4 + a3[131]) = *(unsigned char *)(a2 + a3[131]);
    uint64_t v243 = a3[132];
    int v244 = (char *)v4 + v243;
    uint64_t v245 = a2 + v243;
    *(void *)int v244 = *(void *)v245;
    v244[8] = *(unsigned char *)(v245 + 8);
    *(void *)((char *)v4 + a3[133]) = *(void *)(a2 + a3[133]);
    uint64_t v246 = a3[134];
    char v247 = (char *)v4 + v246;
    uint64_t v248 = a2 + v246;
    *(void *)char v247 = *(void *)v248;
    v247[8] = *(unsigned char *)(v248 + 8);
    *((unsigned char *)v4 + a3[135]) = *(unsigned char *)(a2 + a3[135]);
    *(void *)((char *)v4 + a3[136]) = *(void *)(a2 + a3[136]);
    *((unsigned char *)v4 + a3[137]) = *(unsigned char *)(a2 + a3[137]);
    uint64_t v249 = a3[138];
    uint64_t v250 = (char *)v4 + v249;
    uint64_t v251 = a2 + v249;
    *(void *)uint64_t v250 = *(void *)v251;
    v250[8] = *(unsigned char *)(v251 + 8);
    uint64_t v252 = a3[139];
    char v253 = (char *)v4 + v252;
    uint64_t v254 = a2 + v252;
    *(void *)char v253 = *(void *)v254;
    v253[8] = *(unsigned char *)(v254 + 8);
    *((unsigned char *)v4 + a3[140]) = *(unsigned char *)(a2 + a3[140]);
    *((unsigned char *)v4 + a3[141]) = *(unsigned char *)(a2 + a3[141]);
    uint64_t v255 = a3[142];
    uint64_t v256 = (char *)v4 + v255;
    uint64_t v257 = a2 + v255;
    *(void *)uint64_t v256 = *(void *)v257;
    v256[8] = *(unsigned char *)(v257 + 8);
    uint64_t v258 = a3[143];
    int v259 = (char *)v4 + v258;
    uint64_t v260 = a2 + v258;
    *(void *)int v259 = *(void *)v260;
    v259[8] = *(unsigned char *)(v260 + 8);
    uint64_t v261 = a3[144];
    char v262 = (char *)v4 + v261;
    uint64_t v263 = a2 + v261;
    *(void *)char v262 = *(void *)v263;
    v262[8] = *(unsigned char *)(v263 + 8);
    uint64_t v264 = a3[145];
    uint64_t v265 = (char *)v4 + v264;
    uint64_t v266 = a2 + v264;
    *(void *)uint64_t v265 = *(void *)v266;
    v265[8] = *(unsigned char *)(v266 + 8);
    uint64_t v267 = a3[146];
    uint64_t v268 = (char *)v4 + v267;
    int v269 = (uint64_t *)(a2 + v267);
    uint64_t v270 = *v269;
    v268[8] = *((unsigned char *)v269 + 8);
    *(void *)uint64_t v268 = v270;
    uint64_t v271 = a3[147];
    char v272 = (char *)v4 + v271;
    uint64_t v273 = a2 + v271;
    *(void *)char v272 = *(void *)v273;
    v272[8] = *(unsigned char *)(v273 + 8);
    uint64_t v274 = a3[148];
    uint64_t v275 = (char *)v4 + v274;
    uint64_t v276 = a2 + v274;
    *(void *)uint64_t v275 = *(void *)v276;
    v275[8] = *(unsigned char *)(v276 + 8);
    uint64_t v277 = a3[149];
    uint64_t v278 = (char *)v4 + v277;
    uint64_t v279 = a2 + v277;
    *(void *)uint64_t v278 = *(void *)v279;
    v278[8] = *(unsigned char *)(v279 + 8);
    uint64_t v280 = a3[150];
    char v281 = (char *)v4 + v280;
    uint64_t v282 = a2 + v280;
    *(void *)char v281 = *(void *)v282;
    v281[8] = *(unsigned char *)(v282 + 8);
    uint64_t v283 = a3[151];
    int v284 = (char *)v4 + v283;
    uint64_t v285 = a2 + v283;
    *(void *)int v284 = *(void *)v285;
    v284[8] = *(unsigned char *)(v285 + 8);
    uint64_t v286 = a3[152];
    uint64_t v287 = (char *)v4 + v286;
    uint64_t v288 = a2 + v286;
    *(void *)uint64_t v287 = *(void *)v288;
    v287[8] = *(unsigned char *)(v288 + 8);
    uint64_t v289 = a3[153];
    char v290 = (char *)v4 + v289;
    uint64_t v291 = a2 + v289;
    *(void *)char v290 = *(void *)v291;
    v290[8] = *(unsigned char *)(v291 + 8);
    uint64_t v292 = a3[154];
    char v293 = (char *)v4 + v292;
    uint64_t v294 = a2 + v292;
    *(void *)char v293 = *(void *)v294;
    v293[8] = *(unsigned char *)(v294 + 8);
    uint64_t v295 = a3[155];
    uint64_t v296 = (char *)v4 + v295;
    uint64_t v297 = a2 + v295;
    *(void *)uint64_t v296 = *(void *)v297;
    v296[8] = *(unsigned char *)(v297 + 8);
    uint64_t v298 = a3[156];
    uint64_t v299 = (char *)v4 + v298;
    uint64_t v300 = a2 + v298;
    *(void *)uint64_t v299 = *(void *)v300;
    v299[8] = *(unsigned char *)(v300 + 8);
    uint64_t v301 = a3[157];
    uint64_t v302 = (char *)v4 + v301;
    uint64_t v303 = a2 + v301;
    *(void *)uint64_t v302 = *(void *)v303;
    v302[8] = *(unsigned char *)(v303 + 8);
    uint64_t v304 = a3[158];
    char v305 = (char *)v4 + v304;
    uint64_t v306 = a2 + v304;
    *(void *)char v305 = *(void *)v306;
    v305[8] = *(unsigned char *)(v306 + 8);
    uint64_t v307 = a3[159];
    uint64_t v308 = (char *)v4 + v307;
    uint64_t v309 = a2 + v307;
    *(void *)uint64_t v308 = *(void *)v309;
    v308[8] = *(unsigned char *)(v309 + 8);
    *((unsigned char *)v4 + a3[160]) = *(unsigned char *)(a2 + a3[160]);
    uint64_t v310 = a3[161];
    uint64_t v311 = (char *)v4 + v310;
    uint64_t v312 = a2 + v310;
    *(void *)uint64_t v311 = *(void *)v312;
    v311[8] = *(unsigned char *)(v312 + 8);
    uint64_t v313 = a3[162];
    uint64_t v314 = (char *)v4 + v313;
    uint64_t v315 = a2 + v313;
    *(void *)uint64_t v314 = *(void *)v315;
    v314[8] = *(unsigned char *)(v315 + 8);
    uint64_t v316 = a3[163];
    char v317 = (char *)v4 + v316;
    uint64_t v318 = a2 + v316;
    *(void *)char v317 = *(void *)v318;
    v317[8] = *(unsigned char *)(v318 + 8);
    uint64_t v319 = a3[164];
    int v320 = (void *)((char *)v4 + v319);
    uint64_t v321 = (void *)(a2 + v319);
    uint64_t v322 = v321[1];
    *int v320 = *v321;
    v320[1] = v322;
    uint64_t v323 = a3[165];
    BOOL v324 = (char *)v4 + v323;
    uint64_t v325 = a2 + v323;
    *(void *)BOOL v324 = *(void *)v325;
    uint64_t v326 = a3[166];
    char v327 = *(unsigned char *)(a2 + v326);
    v324[8] = *(unsigned char *)(v325 + 8);
    *((unsigned char *)v4 + v326) = v327;
    *((unsigned char *)v4 + a3[167]) = *(unsigned char *)(a2 + a3[167]);
    uint64_t v328 = a3[168];
    uint64_t v329 = (char *)v4 + v328;
    uint64_t v330 = a2 + v328;
    *(void *)uint64_t v329 = *(void *)v330;
    v329[8] = *(unsigned char *)(v330 + 8);
    uint64_t v331 = a3[169];
    BOOL v332 = (char *)v4 + v331;
    uint64_t v333 = a2 + v331;
    *(void *)BOOL v332 = *(void *)v333;
    uint64_t v334 = a3[170];
    char v335 = *(unsigned char *)(a2 + v334);
    v332[8] = *(unsigned char *)(v333 + 8);
    *((unsigned char *)v4 + v334) = v335;
    uint64_t v336 = a3[171];
    uint64_t v337 = (char *)v4 + v336;
    uint64_t v338 = a2 + v336;
    *(_DWORD *)uint64_t v337 = *(_DWORD *)v338;
    v337[4] = *(unsigned char *)(v338 + 4);
    uint64_t v339 = a3[172];
    uint64_t v340 = (char *)v4 + v339;
    uint64_t v341 = a2 + v339;
    *(void *)uint64_t v340 = *(void *)v341;
    v340[8] = *(unsigned char *)(v341 + 8);
    uint64_t v342 = a3[173];
    uint64_t v343 = (char *)v4 + v342;
    uint64_t v344 = a2 + v342;
    *(void *)uint64_t v343 = *(void *)v344;
    v343[8] = *(unsigned char *)(v344 + 8);
    uint64_t v345 = a3[174];
    int v346 = (char *)v4 + v345;
    uint64_t v347 = a2 + v345;
    *(void *)int v346 = *(void *)v347;
    v346[8] = *(unsigned char *)(v347 + 8);
    uint64_t v348 = a3[175];
    char v349 = (char *)v4 + v348;
    uint64_t v350 = (uint64_t *)(a2 + v348);
    uint64_t v351 = *v350;
    v349[8] = *((unsigned char *)v350 + 8);
    *(void *)char v349 = v351;
    uint64_t v352 = a3[176];
    char v353 = (char *)v4 + v352;
    uint64_t v354 = a2 + v352;
    *(void *)char v353 = *(void *)v354;
    v353[8] = *(unsigned char *)(v354 + 8);
    uint64_t v355 = a3[177];
    int v356 = (char *)v4 + v355;
    uint64_t v357 = a2 + v355;
    *(void *)int v356 = *(void *)v357;
    v356[8] = *(unsigned char *)(v357 + 8);
    uint64_t v358 = a3[178];
    char v359 = (char *)v4 + v358;
    uint64_t v360 = a2 + v358;
    *(void *)char v359 = *(void *)v360;
    v359[8] = *(unsigned char *)(v360 + 8);
    *((unsigned char *)v4 + a3[179]) = *(unsigned char *)(a2 + a3[179]);
    uint64_t v361 = a3[180];
    uint64_t v362 = (char *)v4 + v361;
    uint64_t v363 = a2 + v361;
    *(void *)uint64_t v362 = *(void *)v363;
    v362[8] = *(unsigned char *)(v363 + 8);
    uint64_t v364 = a3[181];
    char v365 = (char *)v4 + v364;
    uint64_t v366 = a2 + v364;
    *(void *)char v365 = *(void *)v366;
    v365[8] = *(unsigned char *)(v366 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1009417D8(uint64_t a1, int *a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 != 15) {
    sub_10001CFB8(*(void *)a1, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[60];
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v8 = a1 + a2[61];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v11(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v12 = a1 + a2[63];
  if (!v11(v12, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v9);
  }
  if (*(void *)(a1 + a2[70] + 48))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100941A34(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_1000361E0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  *(void *)(a1 + 16) = a2[2];
  *(_WORD *)(a1 + 24) = *((_WORD *)a2 + 12);
  *(void *)(a1 + 32) = a2[4];
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(void *)(a1 + 48) = a2[6];
  *(_WORD *)(a1 + 56) = *((_WORD *)a2 + 28);
  *(void *)(a1 + 64) = a2[8];
  *(unsigned char *)(a1 + 72) = *((unsigned char *)a2 + 72);
  uint64_t v8 = a2[11];
  *(void *)(a1 + 80) = a2[10];
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = a2[12];
  *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
  *(_WORD *)(a1 + 105) = *(_WORD *)((char *)a2 + 105);
  *(void *)(a1 + 112) = a2[14];
  *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
  *(void *)(a1 + 128) = a2[16];
  *(unsigned char *)(a1 + 136) = *((unsigned char *)a2 + 136);
  uint64_t v9 = a2[18];
  *(unsigned char *)(a1 + 152) = *((unsigned char *)a2 + 152);
  *(void *)(a1 + 144) = v9;
  *(unsigned char *)(a1 + 168) = *((unsigned char *)a2 + 168);
  *(void *)(a1 + 160) = a2[20];
  *(unsigned char *)(a1 + 184) = *((unsigned char *)a2 + 184);
  *(void *)(a1 + 176) = a2[22];
  *(unsigned char *)(a1 + 200) = *((unsigned char *)a2 + 200);
  *(void *)(a1 + 192) = a2[24];
  *(unsigned char *)(a1 + 216) = *((unsigned char *)a2 + 216);
  *(void *)(a1 + 208) = a2[26];
  uint64_t v10 = a2[28];
  *(unsigned char *)(a1 + 232) = *((unsigned char *)a2 + 232);
  *(void *)(a1 + 224) = v10;
  uint64_t v11 = a2[30];
  *(unsigned char *)(a1 + 248) = *((unsigned char *)a2 + 248);
  *(void *)(a1 + 240) = v11;
  uint64_t v12 = a2[32];
  *(unsigned char *)(a1 + 264) = *((unsigned char *)a2 + 264);
  *(void *)(a1 + 256) = v12;
  uint64_t v13 = a2[34];
  *(unsigned char *)(a1 + 280) = *((unsigned char *)a2 + 280);
  *(void *)(a1 + 272) = v13;
  uint64_t v14 = a2[36];
  *(unsigned char *)(a1 + 296) = *((unsigned char *)a2 + 296);
  *(void *)(a1 + 288) = v14;
  uint64_t v15 = a2[38];
  *(unsigned char *)(a1 + 312) = *((unsigned char *)a2 + 312);
  *(void *)(a1 + 304) = v15;
  *(unsigned char *)(a1 + 313) = *((unsigned char *)a2 + 313);
  uint64_t v16 = a2[41];
  uint64_t v17 = a2[40];
  *(unsigned char *)(a1 + 336) = *((unsigned char *)a2 + 336);
  *(void *)(a1 + 320) = v17;
  *(void *)(a1 + 328) = v16;
  uint64_t v18 = a2[43];
  *(unsigned char *)(a1 + 352) = *((unsigned char *)a2 + 352);
  *(void *)(a1 + 344) = v18;
  uint64_t v19 = a2[45];
  *(unsigned char *)(a1 + 368) = *((unsigned char *)a2 + 368);
  *(void *)(a1 + 360) = v19;
  uint64_t v20 = a2[47];
  *(unsigned char *)(a1 + 384) = *((unsigned char *)a2 + 384);
  *(void *)(a1 + 376) = v20;
  uint64_t v21 = a2[49];
  *(unsigned char *)(a1 + 400) = *((unsigned char *)a2 + 400);
  *(void *)(a1 + 392) = v21;
  uint64_t v22 = a2[51];
  *(unsigned char *)(a1 + 416) = *((unsigned char *)a2 + 416);
  *(void *)(a1 + 408) = v22;
  uint64_t v23 = a2[53];
  *(unsigned char *)(a1 + 432) = *((unsigned char *)a2 + 432);
  *(void *)(a1 + 424) = v23;
  uint64_t v24 = a2[55];
  *(unsigned char *)(a1 + 448) = *((unsigned char *)a2 + 448);
  *(void *)(a1 + 440) = v24;
  uint64_t v25 = a2[57];
  *(unsigned char *)(a1 + 464) = *((unsigned char *)a2 + 464);
  *(void *)(a1 + 456) = v25;
  uint64_t v26 = a2[59];
  *(unsigned char *)(a1 + 480) = *((unsigned char *)a2 + 480);
  *(void *)(a1 + 472) = v26;
  *(unsigned char *)(a1 + 481) = *((unsigned char *)a2 + 481);
  uint64_t v27 = a2[61];
  *(unsigned char *)(a1 + 496) = *((unsigned char *)a2 + 496);
  *(void *)(a1 + 488) = v27;
  uint64_t v28 = a2[63];
  *(unsigned char *)(a1 + 512) = *((unsigned char *)a2 + 512);
  *(void *)(a1 + 504) = v28;
  uint64_t v29 = a2[65];
  *(unsigned char *)(a1 + 528) = *((unsigned char *)a2 + 528);
  *(void *)(a1 + 520) = v29;
  uint64_t v30 = a2[67];
  *(unsigned char *)(a1 + 544) = *((unsigned char *)a2 + 544);
  *(void *)(a1 + 536) = v30;
  uint64_t v31 = a2[69];
  *(unsigned char *)(a1 + 560) = *((unsigned char *)a2 + 560);
  *(void *)(a1 + 552) = v31;
  uint64_t v32 = a2[71];
  *(unsigned char *)(a1 + 576) = *((unsigned char *)a2 + 576);
  *(void *)(a1 + 568) = v32;
  uint64_t v33 = a2[73];
  *(unsigned char *)(a1 + 592) = *((unsigned char *)a2 + 592);
  *(void *)(a1 + 584) = v33;
  *(void *)(a1 + 600) = a2[75];
  uint64_t v34 = a2[76];
  *(unsigned char *)(a1 + 616) = *((unsigned char *)a2 + 616);
  *(void *)(a1 + 608) = v34;
  uint64_t v35 = a2[78];
  *(unsigned char *)(a1 + 632) = *((unsigned char *)a2 + 632);
  *(void *)(a1 + 624) = v35;
  uint64_t v36 = (void *)a2[80];
  *(void *)(a1 + 640) = v36;
  uint64_t v37 = a2[81];
  uint64_t v38 = a2[82];
  *(unsigned char *)(a1 + 664) = *((unsigned char *)a2 + 664);
  *(void *)(a1 + 656) = v38;
  uint64_t v39 = a2[84];
  *(unsigned char *)(a1 + 680) = *((unsigned char *)a2 + 680);
  *(void *)(a1 + 672) = v39;
  uint64_t v40 = a2[86];
  *(unsigned char *)(a1 + 696) = *((unsigned char *)a2 + 696);
  *(void *)(a1 + 688) = v40;
  uint64_t v41 = a2[88];
  *(unsigned char *)(a1 + 712) = *((unsigned char *)a2 + 712);
  *(void *)(a1 + 704) = v41;
  uint64_t v42 = a2[90];
  *(unsigned char *)(a1 + 728) = *((unsigned char *)a2 + 728);
  *(void *)(a1 + 720) = v42;
  *(unsigned char *)(a1 + 729) = *((unsigned char *)a2 + 729);
  uint64_t v43 = a3[60];
  __dst = (void *)(a1 + v43);
  uint64_t v44 = (char *)a2 + v43;
  *(void *)(a1 + 648) = v37;
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v47 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v46 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v48 = v36;
  swift_bridgeObjectRetain();
  if (v47(v44, 1, v45))
  {
    uint64_t v49 = sub_10000588C(&qword_101638CF0);
    memcpy(__dst, v44, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v46 + 16))(__dst, v44, v45);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v45);
  }
  uint64_t v50 = a3[61];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = type metadata accessor for Date();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v54 + 48);
  if (v55(v52, 1, v53))
  {
    uint64_t v56 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v51, v52, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
  }
  uint64_t v57 = a3[62];
  uint64_t v58 = a3[63];
  uint64_t v59 = a1 + v57;
  uint64_t v60 = (uint64_t)a2 + v57;
  *(void *)uint64_t v59 = *(void *)v60;
  *(unsigned char *)(v59 + 8) = *(unsigned char *)(v60 + 8);
  int v61 = (void *)(a1 + v58);
  uint64_t v62 = (char *)a2 + v58;
  if (v55((char *)a2 + v58, 1, v53))
  {
    uint64_t v63 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v54 + 16))(v61, v62, v53);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v61, 0, 1, v53);
  }
  uint64_t v64 = a3[64];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = (uint64_t)a2 + v64;
  *(void *)uint64_t v65 = *(void *)v66;
  *(unsigned char *)(v65 + 8) = *(unsigned char *)(v66 + 8);
  uint64_t v67 = a3[65];
  uint64_t v68 = a1 + v67;
  uint64_t v69 = (uint64_t)a2 + v67;
  *(void *)uint64_t v68 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  uint64_t v70 = a3[66];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = (uint64_t)a2 + v70;
  *(void *)uint64_t v71 = *(void *)v72;
  *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
  uint64_t v73 = a3[67];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = (uint64_t)a2 + v73;
  *(void *)uint64_t v74 = *(void *)v75;
  *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
  uint64_t v76 = a3[68];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = (uint64_t *)((char *)a2 + v76);
  uint64_t v79 = *v78;
  *(unsigned char *)(v77 + 8) = *((unsigned char *)v78 + 8);
  *(void *)uint64_t v77 = v79;
  uint64_t v80 = a3[69];
  uint64_t v81 = a1 + v80;
  uint64_t v82 = (uint64_t)a2 + v80;
  *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
  *(void *)uint64_t v81 = *(void *)v82;
  uint64_t v83 = a3[70];
  uint64_t v84 = a1 + v83;
  uint64_t v85 = (uint64_t)a2 + v83;
  uint64_t v86 = *(void *)(v85 + 48);
  if (v86)
  {
    long long v87 = *(_OWORD *)(v85 + 16);
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    *(_OWORD *)(v84 + 16) = v87;
    *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
    *(void *)(v84 + 48) = v86;
    *(_OWORD *)(v84 + 56) = *(_OWORD *)(v85 + 56);
    *(_OWORD *)(v84 + 72) = *(_OWORD *)(v85 + 72);
    *(_OWORD *)(v84 + 88) = *(_OWORD *)(v85 + 88);
    *(void *)(v84 + 104) = *(void *)(v85 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v88 = *(_OWORD *)(v85 + 80);
    *(_OWORD *)(v84 + 64) = *(_OWORD *)(v85 + 64);
    *(_OWORD *)(v84 + 80) = v88;
    *(_OWORD *)(v84 + 96) = *(_OWORD *)(v85 + 96);
    long long v89 = *(_OWORD *)(v85 + 16);
    *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
    *(_OWORD *)(v84 + 16) = v89;
    long long v90 = *(_OWORD *)(v85 + 48);
    *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
    *(_OWORD *)(v84 + 48) = v90;
  }
  *(unsigned char *)(a1 + a3[71]) = *((unsigned char *)a2 + a3[71]);
  *(unsigned char *)(a1 + a3[72]) = *((unsigned char *)a2 + a3[72]);
  *(unsigned char *)(a1 + a3[73]) = *((unsigned char *)a2 + a3[73]);
  uint64_t v91 = a3[74];
  uint64_t v92 = a1 + v91;
  uint64_t v93 = (uint64_t)a2 + v91;
  *(void *)uint64_t v92 = *(void *)v93;
  *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
  uint64_t v94 = a3[75];
  uint64_t v95 = a1 + v94;
  uint64_t v96 = (uint64_t)a2 + v94;
  *(void *)uint64_t v95 = *(void *)v96;
  *(unsigned char *)(v95 + 8) = *(unsigned char *)(v96 + 8);
  uint64_t v97 = a3[76];
  uint64_t v98 = a1 + v97;
  uint64_t v99 = (uint64_t)a2 + v97;
  *(void *)uint64_t v98 = *(void *)v99;
  *(unsigned char *)(v98 + 8) = *(unsigned char *)(v99 + 8);
  uint64_t v100 = a3[77];
  uint64_t v101 = a1 + v100;
  uint64_t v102 = (uint64_t)a2 + v100;
  *(void *)uint64_t v101 = *(void *)v102;
  *(unsigned char *)(v101 + 8) = *(unsigned char *)(v102 + 8);
  uint64_t v103 = a3[78];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = (uint64_t *)((char *)a2 + v103);
  uint64_t v106 = *v105;
  *(unsigned char *)(v104 + 8) = *((unsigned char *)v105 + 8);
  *(void *)uint64_t v104 = v106;
  uint64_t v107 = a3[79];
  uint64_t v108 = a1 + v107;
  uint64_t v109 = (uint64_t)a2 + v107;
  *(void *)uint64_t v108 = *(void *)v109;
  *(unsigned char *)(v108 + 8) = *(unsigned char *)(v109 + 8);
  uint64_t v110 = a3[80];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = (uint64_t)a2 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
  uint64_t v113 = a3[81];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = (uint64_t)a2 + v113;
  *(void *)uint64_t v114 = *(void *)v115;
  *(unsigned char *)(v114 + 8) = *(unsigned char *)(v115 + 8);
  uint64_t v116 = a3[82];
  uint64_t v117 = a1 + v116;
  uint64_t v118 = (uint64_t)a2 + v116;
  *(void *)uint64_t v117 = *(void *)v118;
  *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
  uint64_t v119 = a3[83];
  uint64_t v120 = (void *)(a1 + v119);
  uint64_t v121 = (uint64_t *)((char *)a2 + v119);
  uint64_t v122 = v121[1];
  *uint64_t v120 = *v121;
  v120[1] = v122;
  uint64_t v123 = a3[84];
  uint64_t v124 = a1 + v123;
  uint64_t v125 = (uint64_t)a2 + v123;
  *(void *)uint64_t v124 = *(void *)v125;
  *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
  uint64_t v126 = a3[85];
  uint64_t v127 = (void *)(a1 + v126);
  uint64_t v128 = (uint64_t *)((char *)a2 + v126);
  uint64_t v129 = v128[1];
  *uint64_t v127 = *v128;
  v127[1] = v129;
  uint64_t v130 = a3[86];
  uint64_t v131 = a1 + v130;
  uint64_t v132 = (uint64_t)a2 + v130;
  *(void *)uint64_t v131 = *(void *)v132;
  *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
  *(void *)(a1 + a3[87]) = *(uint64_t *)((char *)a2 + a3[87]);
  uint64_t v133 = a3[88];
  uint64_t v134 = (void *)(a1 + v133);
  uint64_t v135 = (uint64_t *)((char *)a2 + v133);
  uint64_t v136 = v135[1];
  *uint64_t v134 = *v135;
  v134[1] = v136;
  uint64_t v137 = a3[89];
  uint64_t v138 = a1 + v137;
  uint64_t v139 = (uint64_t)a2 + v137;
  *(void *)uint64_t v138 = *(void *)v139;
  *(unsigned char *)(v138 + 8) = *(unsigned char *)(v139 + 8);
  *(unsigned char *)(a1 + a3[90]) = *((unsigned char *)a2 + a3[90]);
  *(unsigned char *)(a1 + a3[91]) = *((unsigned char *)a2 + a3[91]);
  *(unsigned char *)(a1 + a3[92]) = *((unsigned char *)a2 + a3[92]);
  *(unsigned char *)(a1 + a3[93]) = *((unsigned char *)a2 + a3[93]);
  uint64_t v140 = a3[94];
  uint64_t v141 = a1 + v140;
  uint64_t v142 = (uint64_t)a2 + v140;
  *(void *)uint64_t v141 = *(void *)v142;
  *(unsigned char *)(v141 + 8) = *(unsigned char *)(v142 + 8);
  uint64_t v143 = a3[95];
  uint64_t v144 = a1 + v143;
  uint64_t v145 = (uint64_t)a2 + v143;
  *(void *)uint64_t v144 = *(void *)v145;
  *(unsigned char *)(v144 + 8) = *(unsigned char *)(v145 + 8);
  uint64_t v146 = a3[96];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = (uint64_t)a2 + v146;
  *(void *)uint64_t v147 = *(void *)v148;
  *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
  uint64_t v149 = a3[97];
  uint64_t v150 = a1 + v149;
  uint64_t v151 = (uint64_t)a2 + v149;
  *(void *)uint64_t v150 = *(void *)v151;
  *(unsigned char *)(v150 + 8) = *(unsigned char *)(v151 + 8);
  uint64_t v152 = a3[98];
  uint64_t v153 = a1 + v152;
  uint64_t v154 = (uint64_t *)((char *)a2 + v152);
  uint64_t v155 = *v154;
  *(unsigned char *)(v153 + 8) = *((unsigned char *)v154 + 8);
  *(void *)uint64_t v153 = v155;
  uint64_t v156 = a3[99];
  uint64_t v157 = a1 + v156;
  uint64_t v158 = (uint64_t)a2 + v156;
  *(void *)uint64_t v157 = *(void *)v158;
  *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
  uint64_t v159 = a3[100];
  uint64_t v160 = a1 + v159;
  uint64_t v161 = (uint64_t)a2 + v159;
  *(void *)uint64_t v160 = *(void *)v161;
  *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
  uint64_t v162 = a3[101];
  uint64_t v163 = a1 + v162;
  uint64_t v164 = (uint64_t)a2 + v162;
  *(void *)uint64_t v163 = *(void *)v164;
  *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
  uint64_t v165 = a3[102];
  uint64_t v166 = a1 + v165;
  uint64_t v167 = (uint64_t)a2 + v165;
  *(void *)uint64_t v166 = *(void *)v167;
  *(unsigned char *)(v166 + 8) = *(unsigned char *)(v167 + 8);
  uint64_t v168 = a3[103];
  uint64_t v169 = a1 + v168;
  uint64_t v170 = (uint64_t)a2 + v168;
  *(void *)uint64_t v169 = *(void *)v170;
  *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
  uint64_t v171 = a3[104];
  uint64_t v172 = a1 + v171;
  uint64_t v173 = (uint64_t)a2 + v171;
  *(void *)uint64_t v172 = *(void *)v173;
  *(unsigned char *)(v172 + 8) = *(unsigned char *)(v173 + 8);
  uint64_t v174 = a3[105];
  uint64_t v175 = a1 + v174;
  uint64_t v176 = (uint64_t)a2 + v174;
  *(void *)uint64_t v175 = *(void *)v176;
  *(unsigned char *)(v175 + 8) = *(unsigned char *)(v176 + 8);
  uint64_t v177 = a3[106];
  uint64_t v178 = a1 + v177;
  uint64_t v179 = (uint64_t)a2 + v177;
  *(void *)uint64_t v178 = *(void *)v179;
  *(unsigned char *)(v178 + 8) = *(unsigned char *)(v179 + 8);
  uint64_t v180 = a3[107];
  uint64_t v181 = a1 + v180;
  uint64_t v182 = (uint64_t)a2 + v180;
  *(void *)uint64_t v181 = *(void *)v182;
  *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
  uint64_t v183 = a3[108];
  uint64_t v184 = a1 + v183;
  uint64_t v185 = (uint64_t)a2 + v183;
  *(void *)uint64_t v184 = *(void *)v185;
  *(unsigned char *)(v184 + 8) = *(unsigned char *)(v185 + 8);
  uint64_t v186 = a3[109];
  uint64_t v187 = a1 + v186;
  uint64_t v188 = (uint64_t)a2 + v186;
  *(void *)uint64_t v187 = *(void *)v188;
  *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
  uint64_t v189 = a3[110];
  uint64_t v190 = a1 + v189;
  uint64_t v191 = (uint64_t)a2 + v189;
  *(void *)uint64_t v190 = *(void *)v191;
  *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
  uint64_t v192 = a3[111];
  uint64_t v193 = a1 + v192;
  uint64_t v194 = (uint64_t)a2 + v192;
  *(void *)uint64_t v193 = *(void *)v194;
  *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
  uint64_t v195 = a3[112];
  uint64_t v196 = a1 + v195;
  uint64_t v197 = (uint64_t)a2 + v195;
  *(void *)uint64_t v196 = *(void *)v197;
  *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
  uint64_t v198 = a3[113];
  uint64_t v199 = a1 + v198;
  uint64_t v200 = (uint64_t)a2 + v198;
  *(void *)uint64_t v199 = *(void *)v200;
  *(unsigned char *)(v199 + 8) = *(unsigned char *)(v200 + 8);
  uint64_t v201 = a3[114];
  uint64_t v202 = a1 + v201;
  uint64_t v203 = (uint64_t)a2 + v201;
  *(void *)uint64_t v202 = *(void *)v203;
  *(unsigned char *)(v202 + 8) = *(unsigned char *)(v203 + 8);
  uint64_t v204 = a3[115];
  uint64_t v205 = a1 + v204;
  uint64_t v206 = (uint64_t)a2 + v204;
  *(void *)uint64_t v205 = *(void *)v206;
  *(unsigned char *)(v205 + 8) = *(unsigned char *)(v206 + 8);
  *(unsigned char *)(a1 + a3[116]) = *((unsigned char *)a2 + a3[116]);
  uint64_t v207 = a3[117];
  uint64_t v208 = a1 + v207;
  uint64_t v209 = (uint64_t)a2 + v207;
  *(void *)uint64_t v208 = *(void *)v209;
  *(unsigned char *)(v208 + 8) = *(unsigned char *)(v209 + 8);
  uint64_t v210 = a3[118];
  uint64_t v211 = a1 + v210;
  uint64_t v212 = (uint64_t)a2 + v210;
  *(void *)uint64_t v211 = *(void *)v212;
  *(unsigned char *)(v211 + 8) = *(unsigned char *)(v212 + 8);
  uint64_t v213 = a3[119];
  uint64_t v214 = a1 + v213;
  uint64_t v215 = (uint64_t)a2 + v213;
  *(void *)uint64_t v214 = *(void *)v215;
  *(unsigned char *)(v214 + 8) = *(unsigned char *)(v215 + 8);
  *(unsigned char *)(a1 + a3[120]) = *((unsigned char *)a2 + a3[120]);
  *(unsigned char *)(a1 + a3[121]) = *((unsigned char *)a2 + a3[121]);
  *(unsigned char *)(a1 + a3[122]) = *((unsigned char *)a2 + a3[122]);
  uint64_t v216 = a3[123];
  uint64_t v217 = a1 + v216;
  uint64_t v218 = (uint64_t)a2 + v216;
  *(void *)uint64_t v217 = *(void *)v218;
  *(unsigned char *)(v217 + 8) = *(unsigned char *)(v218 + 8);
  uint64_t v219 = a3[124];
  uint64_t v220 = a1 + v219;
  uint64_t v221 = (uint64_t)a2 + v219;
  *(void *)uint64_t v220 = *(void *)v221;
  *(unsigned char *)(v220 + 8) = *(unsigned char *)(v221 + 8);
  uint64_t v222 = a3[125];
  uint64_t v223 = a1 + v222;
  uint64_t v224 = (uint64_t)a2 + v222;
  *(void *)uint64_t v223 = *(void *)v224;
  *(unsigned char *)(v223 + 8) = *(unsigned char *)(v224 + 8);
  uint64_t v225 = a3[126];
  uint64_t v226 = a1 + v225;
  uint64_t v227 = (uint64_t)a2 + v225;
  *(void *)uint64_t v226 = *(void *)v227;
  *(unsigned char *)(v226 + 8) = *(unsigned char *)(v227 + 8);
  uint64_t v228 = a3[127];
  uint64_t v229 = a1 + v228;
  uint64_t v230 = (uint64_t *)((char *)a2 + v228);
  uint64_t v231 = *v230;
  *(unsigned char *)(v229 + 8) = *((unsigned char *)v230 + 8);
  *(void *)uint64_t v229 = v231;
  uint64_t v232 = a3[128];
  uint64_t v233 = a1 + v232;
  uint64_t v234 = (uint64_t)a2 + v232;
  *(void *)uint64_t v233 = *(void *)v234;
  *(unsigned char *)(v233 + 8) = *(unsigned char *)(v234 + 8);
  uint64_t v235 = a3[129];
  uint64_t v236 = a1 + v235;
  uint64_t v237 = (uint64_t)a2 + v235;
  *(void *)uint64_t v236 = *(void *)v237;
  *(unsigned char *)(v236 + 8) = *(unsigned char *)(v237 + 8);
  uint64_t v238 = a3[130];
  uint64_t v239 = a1 + v238;
  uint64_t v240 = (uint64_t)a2 + v238;
  *(void *)uint64_t v239 = *(void *)v240;
  *(unsigned char *)(v239 + 8) = *(unsigned char *)(v240 + 8);
  *(unsigned char *)(a1 + a3[131]) = *((unsigned char *)a2 + a3[131]);
  uint64_t v241 = a3[132];
  uint64_t v242 = a1 + v241;
  uint64_t v243 = (uint64_t)a2 + v241;
  *(void *)uint64_t v242 = *(void *)v243;
  *(unsigned char *)(v242 + 8) = *(unsigned char *)(v243 + 8);
  *(void *)(a1 + a3[133]) = *(uint64_t *)((char *)a2 + a3[133]);
  uint64_t v244 = a3[134];
  uint64_t v245 = a1 + v244;
  uint64_t v246 = (uint64_t)a2 + v244;
  *(void *)uint64_t v245 = *(void *)v246;
  *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
  *(unsigned char *)(a1 + a3[135]) = *((unsigned char *)a2 + a3[135]);
  *(void *)(a1 + a3[136]) = *(uint64_t *)((char *)a2 + a3[136]);
  *(unsigned char *)(a1 + a3[137]) = *((unsigned char *)a2 + a3[137]);
  uint64_t v247 = a3[138];
  uint64_t v248 = a1 + v247;
  uint64_t v249 = (uint64_t)a2 + v247;
  *(void *)uint64_t v248 = *(void *)v249;
  *(unsigned char *)(v248 + 8) = *(unsigned char *)(v249 + 8);
  uint64_t v250 = a3[139];
  uint64_t v251 = a1 + v250;
  uint64_t v252 = (uint64_t)a2 + v250;
  *(void *)uint64_t v251 = *(void *)v252;
  *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
  *(unsigned char *)(a1 + a3[140]) = *((unsigned char *)a2 + a3[140]);
  *(unsigned char *)(a1 + a3[141]) = *((unsigned char *)a2 + a3[141]);
  uint64_t v253 = a3[142];
  uint64_t v254 = a1 + v253;
  uint64_t v255 = (uint64_t)a2 + v253;
  *(void *)uint64_t v254 = *(void *)v255;
  *(unsigned char *)(v254 + 8) = *(unsigned char *)(v255 + 8);
  uint64_t v256 = a3[143];
  uint64_t v257 = a1 + v256;
  uint64_t v258 = (uint64_t)a2 + v256;
  *(void *)uint64_t v257 = *(void *)v258;
  *(unsigned char *)(v257 + 8) = *(unsigned char *)(v258 + 8);
  uint64_t v259 = a3[144];
  uint64_t v260 = a1 + v259;
  uint64_t v261 = (uint64_t)a2 + v259;
  *(void *)uint64_t v260 = *(void *)v261;
  *(unsigned char *)(v260 + 8) = *(unsigned char *)(v261 + 8);
  uint64_t v262 = a3[145];
  uint64_t v263 = a1 + v262;
  uint64_t v264 = (uint64_t)a2 + v262;
  *(void *)uint64_t v263 = *(void *)v264;
  *(unsigned char *)(v263 + 8) = *(unsigned char *)(v264 + 8);
  uint64_t v265 = a3[146];
  uint64_t v266 = a1 + v265;
  uint64_t v267 = (uint64_t *)((char *)a2 + v265);
  uint64_t v268 = *v267;
  *(unsigned char *)(v266 + 8) = *((unsigned char *)v267 + 8);
  *(void *)uint64_t v266 = v268;
  uint64_t v269 = a3[147];
  uint64_t v270 = a1 + v269;
  uint64_t v271 = (uint64_t)a2 + v269;
  *(void *)uint64_t v270 = *(void *)v271;
  *(unsigned char *)(v270 + 8) = *(unsigned char *)(v271 + 8);
  uint64_t v272 = a3[148];
  uint64_t v273 = a1 + v272;
  uint64_t v274 = (uint64_t)a2 + v272;
  *(void *)uint64_t v273 = *(void *)v274;
  *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
  uint64_t v275 = a3[149];
  uint64_t v276 = a1 + v275;
  uint64_t v277 = (uint64_t)a2 + v275;
  *(void *)uint64_t v276 = *(void *)v277;
  *(unsigned char *)(v276 + 8) = *(unsigned char *)(v277 + 8);
  uint64_t v278 = a3[150];
  uint64_t v279 = a1 + v278;
  uint64_t v280 = (uint64_t)a2 + v278;
  *(void *)uint64_t v279 = *(void *)v280;
  *(unsigned char *)(v279 + 8) = *(unsigned char *)(v280 + 8);
  uint64_t v281 = a3[151];
  uint64_t v282 = a1 + v281;
  uint64_t v283 = (uint64_t)a2 + v281;
  *(void *)uint64_t v282 = *(void *)v283;
  *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
  uint64_t v284 = a3[152];
  uint64_t v285 = a1 + v284;
  uint64_t v286 = (uint64_t)a2 + v284;
  *(void *)uint64_t v285 = *(void *)v286;
  *(unsigned char *)(v285 + 8) = *(unsigned char *)(v286 + 8);
  uint64_t v287 = a3[153];
  uint64_t v288 = a1 + v287;
  uint64_t v289 = (uint64_t)a2 + v287;
  *(void *)uint64_t v288 = *(void *)v289;
  *(unsigned char *)(v288 + 8) = *(unsigned char *)(v289 + 8);
  uint64_t v290 = a3[154];
  uint64_t v291 = a1 + v290;
  uint64_t v292 = (uint64_t)a2 + v290;
  *(void *)uint64_t v291 = *(void *)v292;
  *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
  uint64_t v293 = a3[155];
  uint64_t v294 = a1 + v293;
  uint64_t v295 = (uint64_t)a2 + v293;
  *(void *)uint64_t v294 = *(void *)v295;
  *(unsigned char *)(v294 + 8) = *(unsigned char *)(v295 + 8);
  uint64_t v296 = a3[156];
  uint64_t v297 = a1 + v296;
  uint64_t v298 = (uint64_t)a2 + v296;
  *(void *)uint64_t v297 = *(void *)v298;
  *(unsigned char *)(v297 + 8) = *(unsigned char *)(v298 + 8);
  uint64_t v299 = a3[157];
  uint64_t v300 = a1 + v299;
  uint64_t v301 = (uint64_t)a2 + v299;
  *(void *)uint64_t v300 = *(void *)v301;
  *(unsigned char *)(v300 + 8) = *(unsigned char *)(v301 + 8);
  uint64_t v302 = a3[158];
  uint64_t v303 = a1 + v302;
  uint64_t v304 = (uint64_t)a2 + v302;
  *(void *)uint64_t v303 = *(void *)v304;
  *(unsigned char *)(v303 + 8) = *(unsigned char *)(v304 + 8);
  uint64_t v305 = a3[159];
  uint64_t v306 = a1 + v305;
  uint64_t v307 = (uint64_t)a2 + v305;
  *(void *)uint64_t v306 = *(void *)v307;
  *(unsigned char *)(v306 + 8) = *(unsigned char *)(v307 + 8);
  *(unsigned char *)(a1 + a3[160]) = *((unsigned char *)a2 + a3[160]);
  uint64_t v308 = a3[161];
  uint64_t v309 = a1 + v308;
  uint64_t v310 = (uint64_t)a2 + v308;
  *(void *)uint64_t v309 = *(void *)v310;
  *(unsigned char *)(v309 + 8) = *(unsigned char *)(v310 + 8);
  uint64_t v311 = a3[162];
  uint64_t v312 = a1 + v311;
  uint64_t v313 = (uint64_t)a2 + v311;
  *(void *)uint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  uint64_t v314 = a3[163];
  uint64_t v315 = a1 + v314;
  uint64_t v316 = (uint64_t)a2 + v314;
  *(void *)uint64_t v315 = *(void *)v316;
  *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
  uint64_t v317 = a3[164];
  uint64_t v318 = (void *)(a1 + v317);
  uint64_t v319 = (uint64_t *)((char *)a2 + v317);
  uint64_t v320 = v319[1];
  *uint64_t v318 = *v319;
  v318[1] = v320;
  uint64_t v321 = a3[165];
  uint64_t v322 = a1 + v321;
  uint64_t v323 = (uint64_t)a2 + v321;
  *(void *)uint64_t v322 = *(void *)v323;
  uint64_t v324 = a3[166];
  char v325 = *((unsigned char *)a2 + v324);
  *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
  *(unsigned char *)(a1 + v324) = v325;
  *(unsigned char *)(a1 + a3[167]) = *((unsigned char *)a2 + a3[167]);
  uint64_t v326 = a3[168];
  uint64_t v327 = a1 + v326;
  uint64_t v328 = (uint64_t)a2 + v326;
  *(void *)uint64_t v327 = *(void *)v328;
  *(unsigned char *)(v327 + 8) = *(unsigned char *)(v328 + 8);
  uint64_t v329 = a3[169];
  uint64_t v330 = a1 + v329;
  uint64_t v331 = (uint64_t)a2 + v329;
  *(void *)uint64_t v330 = *(void *)v331;
  uint64_t v332 = a3[170];
  char v333 = *((unsigned char *)a2 + v332);
  *(unsigned char *)(v330 + 8) = *(unsigned char *)(v331 + 8);
  *(unsigned char *)(a1 + v332) = v333;
  uint64_t v334 = a3[171];
  uint64_t v335 = a1 + v334;
  uint64_t v336 = (uint64_t)a2 + v334;
  *(_DWORD *)uint64_t v335 = *(_DWORD *)v336;
  *(unsigned char *)(v335 + 4) = *(unsigned char *)(v336 + 4);
  uint64_t v337 = a3[172];
  uint64_t v338 = a1 + v337;
  uint64_t v339 = (uint64_t)a2 + v337;
  *(void *)uint64_t v338 = *(void *)v339;
  *(unsigned char *)(v338 + 8) = *(unsigned char *)(v339 + 8);
  uint64_t v340 = a3[173];
  uint64_t v341 = a1 + v340;
  uint64_t v342 = (uint64_t)a2 + v340;
  *(void *)uint64_t v341 = *(void *)v342;
  *(unsigned char *)(v341 + 8) = *(unsigned char *)(v342 + 8);
  uint64_t v343 = a3[174];
  uint64_t v344 = a1 + v343;
  uint64_t v345 = (uint64_t)a2 + v343;
  *(void *)uint64_t v344 = *(void *)v345;
  *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
  uint64_t v346 = a3[175];
  uint64_t v347 = a1 + v346;
  uint64_t v348 = (uint64_t *)((char *)a2 + v346);
  uint64_t v349 = *v348;
  *(unsigned char *)(v347 + 8) = *((unsigned char *)v348 + 8);
  *(void *)uint64_t v347 = v349;
  uint64_t v350 = a3[176];
  uint64_t v351 = a1 + v350;
  uint64_t v352 = (uint64_t)a2 + v350;
  *(void *)uint64_t v351 = *(void *)v352;
  *(unsigned char *)(v351 + 8) = *(unsigned char *)(v352 + 8);
  uint64_t v353 = a3[177];
  uint64_t v354 = a1 + v353;
  uint64_t v355 = (uint64_t)a2 + v353;
  *(void *)uint64_t v354 = *(void *)v355;
  *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
  uint64_t v356 = a3[178];
  uint64_t v357 = a1 + v356;
  uint64_t v358 = (uint64_t)a2 + v356;
  *(void *)uint64_t v357 = *(void *)v358;
  *(unsigned char *)(v357 + 8) = *(unsigned char *)(v358 + 8);
  *(unsigned char *)(a1 + a3[179]) = *((unsigned char *)a2 + a3[179]);
  uint64_t v359 = a3[180];
  uint64_t v360 = a1 + v359;
  uint64_t v361 = (uint64_t)a2 + v359;
  *(void *)uint64_t v360 = *(void *)v361;
  *(unsigned char *)(v360 + 8) = *(unsigned char *)(v361 + 8);
  uint64_t v362 = a3[181];
  uint64_t v363 = a1 + v362;
  uint64_t v364 = (uint64_t)a2 + v362;
  *(void *)uint64_t v363 = *(void *)v364;
  *(unsigned char *)(v363 + 8) = *(unsigned char *)(v364 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100942C2C(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v7;
      *(void *)(a1 + 8) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1001356D0(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *(void *)a1;
  unint64_t v10 = *(void *)(a1 + 8);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v6;
  sub_10001CFB8(v9, v10);
LABEL_8:
  uint64_t v11 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v12 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v12;
  uint64_t v13 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  uint64_t v15 = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = v15;
  uint64_t v16 = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = v17;
  uint64_t v18 = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = v18;
  uint64_t v19 = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = v19;
  uint64_t v20 = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = v20;
  uint64_t v21 = *(void *)(a2 + 208);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = v21;
  uint64_t v22 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v22;
  uint64_t v23 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v23;
  uint64_t v24 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v24;
  uint64_t v25 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v25;
  uint64_t v26 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v26;
  uint64_t v27 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v27;
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(a2 + 328);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(void *)(a1 + 328) = v28;
  uint64_t v29 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v29;
  uint64_t v30 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 360) = v30;
  uint64_t v31 = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 376) = v31;
  uint64_t v32 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v32;
  uint64_t v33 = *(void *)(a2 + 408);
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(void *)(a1 + 408) = v33;
  uint64_t v34 = *(void *)(a2 + 424);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(void *)(a1 + 424) = v34;
  uint64_t v35 = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(void *)(a1 + 440) = v35;
  uint64_t v36 = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 456) = v36;
  uint64_t v37 = *(void *)(a2 + 472);
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(void *)(a1 + 472) = v37;
  *(unsigned char *)(a1 + 481) = *(unsigned char *)(a2 + 481);
  uint64_t v38 = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 488) = v38;
  uint64_t v39 = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 504) = v39;
  uint64_t v40 = *(void *)(a2 + 520);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 520) = v40;
  uint64_t v41 = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 536) = v41;
  uint64_t v42 = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 552) = v42;
  uint64_t v43 = *(void *)(a2 + 568);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(void *)(a1 + 568) = v43;
  uint64_t v44 = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 584) = v44;
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(void *)(a1 + 608) = v45;
  LOBYTE(v45) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = v45;
  uint64_t v46 = *(void **)(a1 + 640);
  uint64_t v47 = *(void **)(a2 + 640);
  *(void *)(a1 + 640) = v47;
  id v48 = v47;

  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(void *)(a1 + 656) = v49;
  uint64_t v50 = *(void *)(a2 + 672);
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 672) = v50;
  uint64_t v51 = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(void *)(a1 + 688) = v51;
  uint64_t v52 = *(void *)(a2 + 704);
  *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
  *(void *)(a1 + 704) = v52;
  uint64_t v53 = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 720) = v53;
  *(unsigned char *)(a1 + 729) = *(unsigned char *)(a2 + 729);
  uint64_t v54 = a3[60];
  uint64_t v55 = (void *)(a1 + v54);
  uint64_t v56 = (void *)(a2 + v54);
  uint64_t v57 = type metadata accessor for UUID();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  int v60 = v59(v55, 1, v57);
  int v61 = v59(v56, 1, v57);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v61)
  {
    (*(void (**)(void *, uint64_t))(v58 + 8))(v55, v57);
LABEL_13:
    uint64_t v62 = sub_10000588C(&qword_101638CF0);
    memcpy(v55, v56, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, void *, uint64_t))(v58 + 24))(v55, v56, v57);
LABEL_14:
  uint64_t v63 = a3[61];
  uint64_t v64 = (void *)(a1 + v63);
  uint64_t v65 = (void *)(a2 + v63);
  uint64_t v66 = type metadata accessor for Date();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v68 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v67 + 48);
  int v69 = v68(v64, 1, v66);
  int v70 = v68(v65, 1, v66);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(void *, void *, uint64_t))(v67 + 16))(v64, v65, v66);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (v70)
  {
    (*(void (**)(void *, uint64_t))(v67 + 8))(v64, v66);
LABEL_19:
    uint64_t v71 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v64, v65, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, void *, uint64_t))(v67 + 24))(v64, v65, v66);
LABEL_20:
  uint64_t v72 = a3[62];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = (uint64_t *)(a2 + v72);
  uint64_t v75 = *v74;
  *(unsigned char *)(v73 + 8) = *((unsigned char *)v74 + 8);
  *(void *)uint64_t v73 = v75;
  uint64_t v76 = a3[63];
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(a2 + v76);
  int v79 = v68((void *)(a1 + v76), 1, v66);
  int v80 = v68(v78, 1, v66);
  if (v79)
  {
    if (!v80)
    {
      (*(void (**)(void *, void *, uint64_t))(v67 + 16))(v77, v78, v66);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v77, 0, 1, v66);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v80)
  {
    (*(void (**)(void *, uint64_t))(v67 + 8))(v77, v66);
LABEL_25:
    uint64_t v81 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v77, v78, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(void *, void *, uint64_t))(v67 + 24))(v77, v78, v66);
LABEL_26:
  uint64_t v82 = a3[64];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = (uint64_t *)(a2 + v82);
  uint64_t v85 = *v84;
  *(unsigned char *)(v83 + 8) = *((unsigned char *)v84 + 8);
  *(void *)uint64_t v83 = v85;
  uint64_t v86 = a3[65];
  uint64_t v87 = a1 + v86;
  long long v88 = (uint64_t *)(a2 + v86);
  uint64_t v89 = *v88;
  *(unsigned char *)(v87 + 8) = *((unsigned char *)v88 + 8);
  *(void *)uint64_t v87 = v89;
  uint64_t v90 = a3[66];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = (uint64_t *)(a2 + v90);
  uint64_t v93 = *v92;
  *(unsigned char *)(v91 + 8) = *((unsigned char *)v92 + 8);
  *(void *)uint64_t v91 = v93;
  uint64_t v94 = a3[67];
  uint64_t v95 = a1 + v94;
  uint64_t v96 = (uint64_t *)(a2 + v94);
  uint64_t v97 = *v96;
  *(unsigned char *)(v95 + 8) = *((unsigned char *)v96 + 8);
  *(void *)uint64_t v95 = v97;
  uint64_t v98 = a3[68];
  uint64_t v99 = a1 + v98;
  uint64_t v100 = (uint64_t *)(a2 + v98);
  uint64_t v101 = *v100;
  *(unsigned char *)(v99 + 8) = *((unsigned char *)v100 + 8);
  *(void *)uint64_t v99 = v101;
  uint64_t v102 = a3[69];
  uint64_t v103 = a1 + v102;
  uint64_t v104 = (uint64_t *)(a2 + v102);
  uint64_t v105 = *v104;
  *(unsigned char *)(v103 + 8) = *((unsigned char *)v104 + 8);
  *(void *)uint64_t v103 = v105;
  uint64_t v106 = a3[70];
  uint64_t v107 = (void *)(a1 + v106);
  uint64_t v108 = (void *)(a2 + v106);
  uint64_t v109 = *(void *)(a1 + v106 + 48);
  uint64_t v110 = *(void *)(a2 + v106 + 48);
  if (v109)
  {
    if (v110)
    {
      *uint64_t v107 = *v108;
      v107[1] = v108[1];
      v107[2] = v108[2];
      v107[3] = v108[3];
      v107[4] = v108[4];
      v107[5] = v108[5];
      v107[6] = v108[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v107[7] = v108[7];
      v107[8] = v108[8];
      v107[9] = v108[9];
      v107[10] = v108[10];
      v107[11] = v108[11];
      v107[12] = v108[12];
      v107[13] = v108[13];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_100944118((uint64_t)v107);
      long long v112 = *((_OWORD *)v108 + 1);
      long long v111 = *((_OWORD *)v108 + 2);
      *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v112;
      *((_OWORD *)v107 + 2) = v111;
      long long v113 = *((_OWORD *)v108 + 6);
      long long v115 = *((_OWORD *)v108 + 3);
      long long v114 = *((_OWORD *)v108 + 4);
      *((_OWORD *)v107 + 5) = *((_OWORD *)v108 + 5);
      *((_OWORD *)v107 + 6) = v113;
      *((_OWORD *)v107 + 3) = v115;
      *((_OWORD *)v107 + 4) = v114;
    }
  }
  else if (v110)
  {
    *uint64_t v107 = *v108;
    v107[1] = v108[1];
    v107[2] = v108[2];
    v107[3] = v108[3];
    v107[4] = v108[4];
    v107[5] = v108[5];
    v107[6] = v108[6];
    v107[7] = v108[7];
    v107[8] = v108[8];
    v107[9] = v108[9];
    v107[10] = v108[10];
    v107[11] = v108[11];
    v107[12] = v108[12];
    v107[13] = v108[13];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v116 = *(_OWORD *)v108;
    long long v117 = *((_OWORD *)v108 + 2);
    *((_OWORD *)v107 + 1) = *((_OWORD *)v108 + 1);
    *((_OWORD *)v107 + 2) = v117;
    *(_OWORD *)uint64_t v107 = v116;
    long long v118 = *((_OWORD *)v108 + 3);
    long long v119 = *((_OWORD *)v108 + 4);
    long long v120 = *((_OWORD *)v108 + 6);
    *((_OWORD *)v107 + 5) = *((_OWORD *)v108 + 5);
    *((_OWORD *)v107 + 6) = v120;
    *((_OWORD *)v107 + 3) = v118;
    *((_OWORD *)v107 + 4) = v119;
  }
  *(unsigned char *)(a1 + a3[71]) = *(unsigned char *)(a2 + a3[71]);
  *(unsigned char *)(a1 + a3[72]) = *(unsigned char *)(a2 + a3[72]);
  *(unsigned char *)(a1 + a3[73]) = *(unsigned char *)(a2 + a3[73]);
  uint64_t v121 = a3[74];
  uint64_t v122 = a1 + v121;
  uint64_t v123 = (uint64_t *)(a2 + v121);
  uint64_t v124 = *v123;
  *(unsigned char *)(v122 + 8) = *((unsigned char *)v123 + 8);
  *(void *)uint64_t v122 = v124;
  uint64_t v125 = a3[75];
  uint64_t v126 = a1 + v125;
  uint64_t v127 = (uint64_t *)(a2 + v125);
  uint64_t v128 = *v127;
  *(unsigned char *)(v126 + 8) = *((unsigned char *)v127 + 8);
  *(void *)uint64_t v126 = v128;
  uint64_t v129 = a3[76];
  uint64_t v130 = a1 + v129;
  uint64_t v131 = (uint64_t *)(a2 + v129);
  uint64_t v132 = *v131;
  *(unsigned char *)(v130 + 8) = *((unsigned char *)v131 + 8);
  *(void *)uint64_t v130 = v132;
  uint64_t v133 = a3[77];
  uint64_t v134 = a1 + v133;
  uint64_t v135 = (uint64_t *)(a2 + v133);
  uint64_t v136 = *v135;
  *(unsigned char *)(v134 + 8) = *((unsigned char *)v135 + 8);
  *(void *)uint64_t v134 = v136;
  uint64_t v137 = a3[78];
  uint64_t v138 = a1 + v137;
  uint64_t v139 = (uint64_t *)(a2 + v137);
  uint64_t v140 = *v139;
  *(unsigned char *)(v138 + 8) = *((unsigned char *)v139 + 8);
  *(void *)uint64_t v138 = v140;
  uint64_t v141 = a3[79];
  uint64_t v142 = a1 + v141;
  uint64_t v143 = (uint64_t *)(a2 + v141);
  uint64_t v144 = *v143;
  *(unsigned char *)(v142 + 8) = *((unsigned char *)v143 + 8);
  *(void *)uint64_t v142 = v144;
  uint64_t v145 = a3[80];
  uint64_t v146 = a1 + v145;
  uint64_t v147 = (uint64_t *)(a2 + v145);
  uint64_t v148 = *v147;
  *(unsigned char *)(v146 + 8) = *((unsigned char *)v147 + 8);
  *(void *)uint64_t v146 = v148;
  uint64_t v149 = a3[81];
  uint64_t v150 = a1 + v149;
  uint64_t v151 = (uint64_t *)(a2 + v149);
  uint64_t v152 = *v151;
  *(unsigned char *)(v150 + 8) = *((unsigned char *)v151 + 8);
  *(void *)uint64_t v150 = v152;
  uint64_t v153 = a3[82];
  uint64_t v154 = a1 + v153;
  uint64_t v155 = (uint64_t *)(a2 + v153);
  uint64_t v156 = *v155;
  *(unsigned char *)(v154 + 8) = *((unsigned char *)v155 + 8);
  *(void *)uint64_t v154 = v156;
  uint64_t v157 = a3[83];
  uint64_t v158 = (void *)(a1 + v157);
  uint64_t v159 = (void *)(a2 + v157);
  *uint64_t v158 = *v159;
  v158[1] = v159[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v160 = a3[84];
  uint64_t v161 = a1 + v160;
  uint64_t v162 = (uint64_t *)(a2 + v160);
  uint64_t v163 = *v162;
  *(unsigned char *)(v161 + 8) = *((unsigned char *)v162 + 8);
  *(void *)uint64_t v161 = v163;
  uint64_t v164 = a3[85];
  uint64_t v165 = (void *)(a1 + v164);
  uint64_t v166 = (void *)(a2 + v164);
  *uint64_t v165 = *v166;
  v165[1] = v166[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v167 = a3[86];
  uint64_t v168 = a1 + v167;
  uint64_t v169 = (uint64_t *)(a2 + v167);
  uint64_t v170 = *v169;
  *(unsigned char *)(v168 + 8) = *((unsigned char *)v169 + 8);
  *(void *)uint64_t v168 = v170;
  *(void *)(a1 + a3[87]) = *(void *)(a2 + a3[87]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v171 = a3[88];
  uint64_t v172 = (void *)(a1 + v171);
  uint64_t v173 = (void *)(a2 + v171);
  *uint64_t v172 = *v173;
  v172[1] = v173[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v174 = a3[89];
  uint64_t v175 = a1 + v174;
  uint64_t v176 = (uint64_t *)(a2 + v174);
  uint64_t v177 = *v176;
  *(unsigned char *)(v175 + 8) = *((unsigned char *)v176 + 8);
  *(void *)uint64_t v175 = v177;
  *(unsigned char *)(a1 + a3[90]) = *(unsigned char *)(a2 + a3[90]);
  *(unsigned char *)(a1 + a3[91]) = *(unsigned char *)(a2 + a3[91]);
  *(unsigned char *)(a1 + a3[92]) = *(unsigned char *)(a2 + a3[92]);
  *(unsigned char *)(a1 + a3[93]) = *(unsigned char *)(a2 + a3[93]);
  uint64_t v178 = a3[94];
  uint64_t v179 = a1 + v178;
  uint64_t v180 = (uint64_t *)(a2 + v178);
  uint64_t v181 = *v180;
  *(unsigned char *)(v179 + 8) = *((unsigned char *)v180 + 8);
  *(void *)uint64_t v179 = v181;
  uint64_t v182 = a3[95];
  uint64_t v183 = a1 + v182;
  uint64_t v184 = (uint64_t *)(a2 + v182);
  uint64_t v185 = *v184;
  *(unsigned char *)(v183 + 8) = *((unsigned char *)v184 + 8);
  *(void *)uint64_t v183 = v185;
  uint64_t v186 = a3[96];
  uint64_t v187 = a1 + v186;
  uint64_t v188 = (uint64_t *)(a2 + v186);
  uint64_t v189 = *v188;
  *(unsigned char *)(v187 + 8) = *((unsigned char *)v188 + 8);
  *(void *)uint64_t v187 = v189;
  uint64_t v190 = a3[97];
  uint64_t v191 = a1 + v190;
  uint64_t v192 = (uint64_t *)(a2 + v190);
  uint64_t v193 = *v192;
  *(unsigned char *)(v191 + 8) = *((unsigned char *)v192 + 8);
  *(void *)uint64_t v191 = v193;
  uint64_t v194 = a3[98];
  uint64_t v195 = a1 + v194;
  uint64_t v196 = (uint64_t *)(a2 + v194);
  uint64_t v197 = *v196;
  *(unsigned char *)(v195 + 8) = *((unsigned char *)v196 + 8);
  *(void *)uint64_t v195 = v197;
  uint64_t v198 = a3[99];
  uint64_t v199 = a1 + v198;
  uint64_t v200 = (uint64_t *)(a2 + v198);
  uint64_t v201 = *v200;
  *(unsigned char *)(v199 + 8) = *((unsigned char *)v200 + 8);
  *(void *)uint64_t v199 = v201;
  uint64_t v202 = a3[100];
  uint64_t v203 = a1 + v202;
  uint64_t v204 = (uint64_t *)(a2 + v202);
  uint64_t v205 = *v204;
  *(unsigned char *)(v203 + 8) = *((unsigned char *)v204 + 8);
  *(void *)uint64_t v203 = v205;
  uint64_t v206 = a3[101];
  uint64_t v207 = a1 + v206;
  uint64_t v208 = (uint64_t *)(a2 + v206);
  uint64_t v209 = *v208;
  *(unsigned char *)(v207 + 8) = *((unsigned char *)v208 + 8);
  *(void *)uint64_t v207 = v209;
  uint64_t v210 = a3[102];
  uint64_t v211 = a1 + v210;
  uint64_t v212 = (uint64_t *)(a2 + v210);
  uint64_t v213 = *v212;
  *(unsigned char *)(v211 + 8) = *((unsigned char *)v212 + 8);
  *(void *)uint64_t v211 = v213;
  uint64_t v214 = a3[103];
  uint64_t v215 = a1 + v214;
  uint64_t v216 = (uint64_t *)(a2 + v214);
  uint64_t v217 = *v216;
  *(unsigned char *)(v215 + 8) = *((unsigned char *)v216 + 8);
  *(void *)uint64_t v215 = v217;
  uint64_t v218 = a3[104];
  uint64_t v219 = a1 + v218;
  uint64_t v220 = (uint64_t *)(a2 + v218);
  uint64_t v221 = *v220;
  *(unsigned char *)(v219 + 8) = *((unsigned char *)v220 + 8);
  *(void *)uint64_t v219 = v221;
  uint64_t v222 = a3[105];
  uint64_t v223 = a1 + v222;
  uint64_t v224 = (uint64_t *)(a2 + v222);
  uint64_t v225 = *v224;
  *(unsigned char *)(v223 + 8) = *((unsigned char *)v224 + 8);
  *(void *)uint64_t v223 = v225;
  uint64_t v226 = a3[106];
  uint64_t v227 = a1 + v226;
  uint64_t v228 = (uint64_t *)(a2 + v226);
  uint64_t v229 = *v228;
  *(unsigned char *)(v227 + 8) = *((unsigned char *)v228 + 8);
  *(void *)uint64_t v227 = v229;
  uint64_t v230 = a3[107];
  uint64_t v231 = a1 + v230;
  uint64_t v232 = (uint64_t *)(a2 + v230);
  uint64_t v233 = *v232;
  *(unsigned char *)(v231 + 8) = *((unsigned char *)v232 + 8);
  *(void *)uint64_t v231 = v233;
  uint64_t v234 = a3[108];
  uint64_t v235 = a1 + v234;
  uint64_t v236 = (uint64_t *)(a2 + v234);
  uint64_t v237 = *v236;
  *(unsigned char *)(v235 + 8) = *((unsigned char *)v236 + 8);
  *(void *)uint64_t v235 = v237;
  uint64_t v238 = a3[109];
  uint64_t v239 = a1 + v238;
  uint64_t v240 = (uint64_t *)(a2 + v238);
  uint64_t v241 = *v240;
  *(unsigned char *)(v239 + 8) = *((unsigned char *)v240 + 8);
  *(void *)uint64_t v239 = v241;
  uint64_t v242 = a3[110];
  uint64_t v243 = a1 + v242;
  uint64_t v244 = (uint64_t *)(a2 + v242);
  uint64_t v245 = *v244;
  *(unsigned char *)(v243 + 8) = *((unsigned char *)v244 + 8);
  *(void *)uint64_t v243 = v245;
  uint64_t v246 = a3[111];
  uint64_t v247 = a1 + v246;
  uint64_t v248 = (uint64_t *)(a2 + v246);
  uint64_t v249 = *v248;
  *(unsigned char *)(v247 + 8) = *((unsigned char *)v248 + 8);
  *(void *)uint64_t v247 = v249;
  uint64_t v250 = a3[112];
  uint64_t v251 = a1 + v250;
  uint64_t v252 = (uint64_t *)(a2 + v250);
  uint64_t v253 = *v252;
  *(unsigned char *)(v251 + 8) = *((unsigned char *)v252 + 8);
  *(void *)uint64_t v251 = v253;
  uint64_t v254 = a3[113];
  uint64_t v255 = a1 + v254;
  uint64_t v256 = (uint64_t *)(a2 + v254);
  uint64_t v257 = *v256;
  *(unsigned char *)(v255 + 8) = *((unsigned char *)v256 + 8);
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = a3[114];
  uint64_t v259 = a1 + v258;
  uint64_t v260 = (uint64_t *)(a2 + v258);
  uint64_t v261 = *v260;
  *(unsigned char *)(v259 + 8) = *((unsigned char *)v260 + 8);
  *(void *)uint64_t v259 = v261;
  uint64_t v262 = a3[115];
  uint64_t v263 = a1 + v262;
  uint64_t v264 = (uint64_t *)(a2 + v262);
  uint64_t v265 = *v264;
  *(unsigned char *)(v263 + 8) = *((unsigned char *)v264 + 8);
  *(void *)uint64_t v263 = v265;
  *(unsigned char *)(a1 + a3[116]) = *(unsigned char *)(a2 + a3[116]);
  uint64_t v266 = a3[117];
  uint64_t v267 = a1 + v266;
  uint64_t v268 = (uint64_t *)(a2 + v266);
  uint64_t v269 = *v268;
  *(unsigned char *)(v267 + 8) = *((unsigned char *)v268 + 8);
  *(void *)uint64_t v267 = v269;
  uint64_t v270 = a3[118];
  uint64_t v271 = a1 + v270;
  uint64_t v272 = (uint64_t *)(a2 + v270);
  uint64_t v273 = *v272;
  *(unsigned char *)(v271 + 8) = *((unsigned char *)v272 + 8);
  *(void *)uint64_t v271 = v273;
  uint64_t v274 = a3[119];
  uint64_t v275 = a1 + v274;
  uint64_t v276 = (uint64_t *)(a2 + v274);
  uint64_t v277 = *v276;
  *(unsigned char *)(v275 + 8) = *((unsigned char *)v276 + 8);
  *(void *)uint64_t v275 = v277;
  *(unsigned char *)(a1 + a3[120]) = *(unsigned char *)(a2 + a3[120]);
  *(unsigned char *)(a1 + a3[121]) = *(unsigned char *)(a2 + a3[121]);
  *(unsigned char *)(a1 + a3[122]) = *(unsigned char *)(a2 + a3[122]);
  uint64_t v278 = a3[123];
  uint64_t v279 = a1 + v278;
  uint64_t v280 = (uint64_t *)(a2 + v278);
  uint64_t v281 = *v280;
  *(unsigned char *)(v279 + 8) = *((unsigned char *)v280 + 8);
  *(void *)uint64_t v279 = v281;
  uint64_t v282 = a3[124];
  uint64_t v283 = a1 + v282;
  uint64_t v284 = (uint64_t *)(a2 + v282);
  uint64_t v285 = *v284;
  *(unsigned char *)(v283 + 8) = *((unsigned char *)v284 + 8);
  *(void *)uint64_t v283 = v285;
  uint64_t v286 = a3[125];
  uint64_t v287 = a1 + v286;
  uint64_t v288 = (uint64_t *)(a2 + v286);
  uint64_t v289 = *v288;
  *(unsigned char *)(v287 + 8) = *((unsigned char *)v288 + 8);
  *(void *)uint64_t v287 = v289;
  uint64_t v290 = a3[126];
  uint64_t v291 = a1 + v290;
  uint64_t v292 = (uint64_t *)(a2 + v290);
  uint64_t v293 = *v292;
  *(unsigned char *)(v291 + 8) = *((unsigned char *)v292 + 8);
  *(void *)uint64_t v291 = v293;
  uint64_t v294 = a3[127];
  uint64_t v295 = a1 + v294;
  uint64_t v296 = (uint64_t *)(a2 + v294);
  uint64_t v297 = *v296;
  *(unsigned char *)(v295 + 8) = *((unsigned char *)v296 + 8);
  *(void *)uint64_t v295 = v297;
  uint64_t v298 = a3[128];
  uint64_t v299 = a1 + v298;
  uint64_t v300 = (uint64_t *)(a2 + v298);
  uint64_t v301 = *v300;
  *(unsigned char *)(v299 + 8) = *((unsigned char *)v300 + 8);
  *(void *)uint64_t v299 = v301;
  uint64_t v302 = a3[129];
  uint64_t v303 = a1 + v302;
  uint64_t v304 = (uint64_t *)(a2 + v302);
  uint64_t v305 = *v304;
  *(unsigned char *)(v303 + 8) = *((unsigned char *)v304 + 8);
  *(void *)uint64_t v303 = v305;
  uint64_t v306 = a3[130];
  uint64_t v307 = a1 + v306;
  uint64_t v308 = (uint64_t *)(a2 + v306);
  uint64_t v309 = *v308;
  *(unsigned char *)(v307 + 8) = *((unsigned char *)v308 + 8);
  *(void *)uint64_t v307 = v309;
  *(unsigned char *)(a1 + a3[131]) = *(unsigned char *)(a2 + a3[131]);
  uint64_t v310 = a3[132];
  uint64_t v311 = a1 + v310;
  uint64_t v312 = (uint64_t *)(a2 + v310);
  uint64_t v313 = *v312;
  *(unsigned char *)(v311 + 8) = *((unsigned char *)v312 + 8);
  *(void *)uint64_t v311 = v313;
  *(void *)(a1 + a3[133]) = *(void *)(a2 + a3[133]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v314 = a3[134];
  uint64_t v315 = a1 + v314;
  uint64_t v316 = (uint64_t *)(a2 + v314);
  uint64_t v317 = *v316;
  *(unsigned char *)(v315 + 8) = *((unsigned char *)v316 + 8);
  *(void *)uint64_t v315 = v317;
  *(unsigned char *)(a1 + a3[135]) = *(unsigned char *)(a2 + a3[135]);
  *(void *)(a1 + a3[136]) = *(void *)(a2 + a3[136]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[137]) = *(unsigned char *)(a2 + a3[137]);
  uint64_t v318 = a3[138];
  uint64_t v319 = a1 + v318;
  uint64_t v320 = a2 + v318;
  char v321 = *(unsigned char *)(v320 + 8);
  *(void *)uint64_t v319 = *(void *)v320;
  *(unsigned char *)(v319 + 8) = v321;
  uint64_t v322 = a3[139];
  uint64_t v323 = a1 + v322;
  uint64_t v324 = (uint64_t *)(a2 + v322);
  uint64_t v325 = *v324;
  *(unsigned char *)(v323 + 8) = *((unsigned char *)v324 + 8);
  *(void *)uint64_t v323 = v325;
  *(unsigned char *)(a1 + a3[140]) = *(unsigned char *)(a2 + a3[140]);
  *(unsigned char *)(a1 + a3[141]) = *(unsigned char *)(a2 + a3[141]);
  uint64_t v326 = a3[142];
  uint64_t v327 = a1 + v326;
  uint64_t v328 = (uint64_t *)(a2 + v326);
  uint64_t v329 = *v328;
  *(unsigned char *)(v327 + 8) = *((unsigned char *)v328 + 8);
  *(void *)uint64_t v327 = v329;
  uint64_t v330 = a3[143];
  uint64_t v331 = a1 + v330;
  uint64_t v332 = (uint64_t *)(a2 + v330);
  uint64_t v333 = *v332;
  *(unsigned char *)(v331 + 8) = *((unsigned char *)v332 + 8);
  *(void *)uint64_t v331 = v333;
  uint64_t v334 = a3[144];
  uint64_t v335 = a1 + v334;
  uint64_t v336 = (uint64_t *)(a2 + v334);
  uint64_t v337 = *v336;
  *(unsigned char *)(v335 + 8) = *((unsigned char *)v336 + 8);
  *(void *)uint64_t v335 = v337;
  uint64_t v338 = a3[145];
  uint64_t v339 = a1 + v338;
  uint64_t v340 = (uint64_t *)(a2 + v338);
  uint64_t v341 = *v340;
  *(unsigned char *)(v339 + 8) = *((unsigned char *)v340 + 8);
  *(void *)uint64_t v339 = v341;
  uint64_t v342 = a3[146];
  uint64_t v343 = a1 + v342;
  uint64_t v344 = (uint64_t *)(a2 + v342);
  uint64_t v345 = *v344;
  *(unsigned char *)(v343 + 8) = *((unsigned char *)v344 + 8);
  *(void *)uint64_t v343 = v345;
  uint64_t v346 = a3[147];
  uint64_t v347 = a1 + v346;
  uint64_t v348 = (uint64_t *)(a2 + v346);
  uint64_t v349 = *v348;
  *(unsigned char *)(v347 + 8) = *((unsigned char *)v348 + 8);
  *(void *)uint64_t v347 = v349;
  uint64_t v350 = a3[148];
  uint64_t v351 = a1 + v350;
  uint64_t v352 = (uint64_t *)(a2 + v350);
  uint64_t v353 = *v352;
  *(unsigned char *)(v351 + 8) = *((unsigned char *)v352 + 8);
  *(void *)uint64_t v351 = v353;
  uint64_t v354 = a3[149];
  uint64_t v355 = a1 + v354;
  uint64_t v356 = (uint64_t *)(a2 + v354);
  uint64_t v357 = *v356;
  *(unsigned char *)(v355 + 8) = *((unsigned char *)v356 + 8);
  *(void *)uint64_t v355 = v357;
  uint64_t v358 = a3[150];
  uint64_t v359 = a1 + v358;
  uint64_t v360 = (uint64_t *)(a2 + v358);
  uint64_t v361 = *v360;
  *(unsigned char *)(v359 + 8) = *((unsigned char *)v360 + 8);
  *(void *)uint64_t v359 = v361;
  uint64_t v362 = a3[151];
  uint64_t v363 = a1 + v362;
  uint64_t v364 = (uint64_t *)(a2 + v362);
  uint64_t v365 = *v364;
  *(unsigned char *)(v363 + 8) = *((unsigned char *)v364 + 8);
  *(void *)uint64_t v363 = v365;
  uint64_t v366 = a3[152];
  uint64_t v367 = a1 + v366;
  uint64_t v368 = (uint64_t *)(a2 + v366);
  uint64_t v369 = *v368;
  *(unsigned char *)(v367 + 8) = *((unsigned char *)v368 + 8);
  *(void *)uint64_t v367 = v369;
  uint64_t v370 = a3[153];
  uint64_t v371 = a1 + v370;
  uint64_t v372 = (uint64_t *)(a2 + v370);
  uint64_t v373 = *v372;
  *(unsigned char *)(v371 + 8) = *((unsigned char *)v372 + 8);
  *(void *)uint64_t v371 = v373;
  uint64_t v374 = a3[154];
  uint64_t v375 = a1 + v374;
  int v376 = (uint64_t *)(a2 + v374);
  uint64_t v377 = *v376;
  *(unsigned char *)(v375 + 8) = *((unsigned char *)v376 + 8);
  *(void *)uint64_t v375 = v377;
  uint64_t v378 = a3[155];
  uint64_t v379 = a1 + v378;
  char v380 = (uint64_t *)(a2 + v378);
  uint64_t v381 = *v380;
  *(unsigned char *)(v379 + 8) = *((unsigned char *)v380 + 8);
  *(void *)uint64_t v379 = v381;
  uint64_t v382 = a3[156];
  uint64_t v383 = a1 + v382;
  char v384 = (uint64_t *)(a2 + v382);
  uint64_t v385 = *v384;
  *(unsigned char *)(v383 + 8) = *((unsigned char *)v384 + 8);
  *(void *)uint64_t v383 = v385;
  uint64_t v386 = a3[157];
  uint64_t v387 = a1 + v386;
  uint64_t v388 = (uint64_t *)(a2 + v386);
  uint64_t v389 = *v388;
  *(unsigned char *)(v387 + 8) = *((unsigned char *)v388 + 8);
  *(void *)uint64_t v387 = v389;
  uint64_t v390 = a3[158];
  uint64_t v391 = a1 + v390;
  uint64_t v392 = (uint64_t *)(a2 + v390);
  uint64_t v393 = *v392;
  *(unsigned char *)(v391 + 8) = *((unsigned char *)v392 + 8);
  *(void *)uint64_t v391 = v393;
  uint64_t v394 = a3[159];
  uint64_t v395 = a1 + v394;
  int v396 = (uint64_t *)(a2 + v394);
  uint64_t v397 = *v396;
  *(unsigned char *)(v395 + 8) = *((unsigned char *)v396 + 8);
  *(void *)uint64_t v395 = v397;
  *(unsigned char *)(a1 + a3[160]) = *(unsigned char *)(a2 + a3[160]);
  uint64_t v398 = a3[161];
  uint64_t v399 = a1 + v398;
  uint64_t v400 = (uint64_t *)(a2 + v398);
  uint64_t v401 = *v400;
  *(unsigned char *)(v399 + 8) = *((unsigned char *)v400 + 8);
  *(void *)uint64_t v399 = v401;
  uint64_t v402 = a3[162];
  uint64_t v403 = a1 + v402;
  char v404 = (uint64_t *)(a2 + v402);
  uint64_t v405 = *v404;
  *(unsigned char *)(v403 + 8) = *((unsigned char *)v404 + 8);
  *(void *)uint64_t v403 = v405;
  uint64_t v406 = a3[163];
  uint64_t v407 = a1 + v406;
  uint64_t v408 = (uint64_t *)(a2 + v406);
  uint64_t v409 = *v408;
  *(unsigned char *)(v407 + 8) = *((unsigned char *)v408 + 8);
  *(void *)uint64_t v407 = v409;
  uint64_t v410 = a3[164];
  int v411 = (void *)(a1 + v410);
  uint64_t v412 = (void *)(a2 + v410);
  *int v411 = *v412;
  v411[1] = v412[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v413 = a3[165];
  uint64_t v414 = a1 + v413;
  uint64_t v415 = (uint64_t *)(a2 + v413);
  uint64_t v416 = *v415;
  *(unsigned char *)(v414 + 8) = *((unsigned char *)v415 + 8);
  *(void *)uint64_t v414 = v416;
  *(unsigned char *)(a1 + a3[166]) = *(unsigned char *)(a2 + a3[166]);
  *(unsigned char *)(a1 + a3[167]) = *(unsigned char *)(a2 + a3[167]);
  uint64_t v417 = a3[168];
  uint64_t v418 = a1 + v417;
  char v419 = (uint64_t *)(a2 + v417);
  uint64_t v420 = *v419;
  *(unsigned char *)(v418 + 8) = *((unsigned char *)v419 + 8);
  *(void *)uint64_t v418 = v420;
  uint64_t v421 = a3[169];
  uint64_t v422 = a1 + v421;
  uint64_t v423 = (uint64_t *)(a2 + v421);
  uint64_t v424 = *v423;
  *(unsigned char *)(v422 + 8) = *((unsigned char *)v423 + 8);
  *(void *)uint64_t v422 = v424;
  *(unsigned char *)(a1 + a3[170]) = *(unsigned char *)(a2 + a3[170]);
  uint64_t v425 = a3[171];
  uint64_t v426 = a1 + v425;
  uint64_t v427 = a2 + v425;
  LODWORD(v424) = *(_DWORD *)v427;
  *(unsigned char *)(v426 + 4) = *(unsigned char *)(v427 + 4);
  *(_DWORD *)uint64_t v426 = v424;
  uint64_t v428 = a3[172];
  uint64_t v429 = a1 + v428;
  uint64_t v430 = (uint64_t *)(a2 + v428);
  uint64_t v431 = *v430;
  *(unsigned char *)(v429 + 8) = *((unsigned char *)v430 + 8);
  *(void *)uint64_t v429 = v431;
  uint64_t v432 = a3[173];
  uint64_t v433 = a1 + v432;
  char v434 = (uint64_t *)(a2 + v432);
  uint64_t v435 = *v434;
  *(unsigned char *)(v433 + 8) = *((unsigned char *)v434 + 8);
  *(void *)uint64_t v433 = v435;
  uint64_t v436 = a3[174];
  uint64_t v437 = a1 + v436;
  uint64_t v438 = (uint64_t *)(a2 + v436);
  uint64_t v439 = *v438;
  *(unsigned char *)(v437 + 8) = *((unsigned char *)v438 + 8);
  *(void *)uint64_t v437 = v439;
  uint64_t v440 = a3[175];
  uint64_t v441 = a1 + v440;
  uint64_t v442 = (uint64_t *)(a2 + v440);
  uint64_t v443 = *v442;
  *(unsigned char *)(v441 + 8) = *((unsigned char *)v442 + 8);
  *(void *)uint64_t v441 = v443;
  uint64_t v444 = a3[176];
  uint64_t v445 = a1 + v444;
  int v446 = (uint64_t *)(a2 + v444);
  uint64_t v447 = *v446;
  *(unsigned char *)(v445 + 8) = *((unsigned char *)v446 + 8);
  *(void *)uint64_t v445 = v447;
  uint64_t v448 = a3[177];
  uint64_t v449 = a1 + v448;
  BOOL v450 = (uint64_t *)(a2 + v448);
  uint64_t v451 = *v450;
  *(unsigned char *)(v449 + 8) = *((unsigned char *)v450 + 8);
  *(void *)uint64_t v449 = v451;
  uint64_t v452 = a3[178];
  uint64_t v453 = a1 + v452;
  char v454 = (uint64_t *)(a2 + v452);
  uint64_t v455 = *v454;
  *(unsigned char *)(v453 + 8) = *((unsigned char *)v454 + 8);
  *(void *)uint64_t v453 = v455;
  *(unsigned char *)(a1 + a3[179]) = *(unsigned char *)(a2 + a3[179]);
  uint64_t v456 = a3[180];
  uint64_t v457 = a1 + v456;
  char v458 = (uint64_t *)(a2 + v456);
  uint64_t v459 = *v458;
  *(unsigned char *)(v457 + 8) = *((unsigned char *)v458 + 8);
  *(void *)uint64_t v457 = v459;
  uint64_t v460 = a3[181];
  uint64_t v461 = a1 + v460;
  uint64_t v462 = (uint64_t *)(a2 + v460);
  uint64_t v463 = *v462;
  *(unsigned char *)(v461 + 8) = *((unsigned char *)v462 + 8);
  *(void *)uint64_t v461 = v463;
  return a1;
}

uint64_t sub_100944118(uint64_t a1)
{
  return a1;
}

uint64_t sub_10094416C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v6 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v6;
  uint64_t v7 = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = v7;
  uint64_t v8 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v8;
  uint64_t v9 = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = v9;
  uint64_t v10 = *(void *)(a2 + 288);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = v10;
  uint64_t v11 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v11;
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  uint64_t v12 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v12;
  uint64_t v13 = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 344) = v13;
  uint64_t v14 = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(void *)(a1 + 360) = v14;
  uint64_t v15 = *(void *)(a2 + 376);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 376) = v15;
  uint64_t v16 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v16;
  uint64_t v17 = *(void *)(a2 + 408);
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(void *)(a1 + 408) = v17;
  uint64_t v18 = *(void *)(a2 + 424);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(void *)(a1 + 424) = v18;
  uint64_t v19 = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(void *)(a1 + 440) = v19;
  uint64_t v20 = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 456) = v20;
  uint64_t v21 = *(void *)(a2 + 472);
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(void *)(a1 + 472) = v21;
  *(unsigned char *)(a1 + 481) = *(unsigned char *)(a2 + 481);
  uint64_t v22 = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 488) = v22;
  uint64_t v23 = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 504) = v23;
  uint64_t v24 = *(void *)(a2 + 520);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 520) = v24;
  uint64_t v25 = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 536) = v25;
  uint64_t v26 = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 552) = v26;
  uint64_t v27 = *(void *)(a2 + 568);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(void *)(a1 + 568) = v27;
  uint64_t v28 = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 584) = v28;
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  uint64_t v29 = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(void *)(a1 + 608) = v29;
  uint64_t v30 = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 624) = v30;
  long long v31 = *(_OWORD *)(a2 + 640);
  uint64_t v32 = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(void *)(a1 + 656) = v32;
  uint64_t v33 = *(void *)(a2 + 672);
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 672) = v33;
  uint64_t v34 = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(void *)(a1 + 688) = v34;
  uint64_t v35 = *(void *)(a2 + 704);
  *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
  *(void *)(a1 + 704) = v35;
  uint64_t v36 = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 720) = v36;
  *(unsigned char *)(a1 + 729) = *(unsigned char *)(a2 + 729);
  uint64_t v37 = a3[60];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (const void *)(a2 + v37);
  *(_OWORD *)(a1 + 640) = v31;
  uint64_t v40 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    uint64_t v42 = sub_10000588C(&qword_101638CF0);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  uint64_t v43 = a3[61];
  uint64_t v44 = (void *)(a1 + v43);
  uint64_t v45 = (const void *)(a2 + v43);
  uint64_t v46 = type metadata accessor for Date();
  uint64_t v47 = *(void *)(v46 - 8);
  id v48 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v47 + 48);
  if (v48(v45, 1, v46))
  {
    uint64_t v49 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v44, v45, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a1 + v50;
  uint64_t v53 = a2 + v50;
  *(void *)uint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  uint64_t v54 = (void *)(a1 + v51);
  uint64_t v55 = (const void *)(a2 + v51);
  if (v48((const void *)(a2 + v51), 1, v46))
  {
    uint64_t v56 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v47 + 32))(v54, v55, v46);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v47 + 56))(v54, 0, 1, v46);
  }
  uint64_t v57 = a3[64];
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  *(void *)uint64_t v58 = *(void *)v59;
  *(unsigned char *)(v58 + 8) = *(unsigned char *)(v59 + 8);
  uint64_t v60 = a3[65];
  uint64_t v61 = a1 + v60;
  uint64_t v62 = a2 + v60;
  *(void *)uint64_t v61 = *(void *)v62;
  *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
  uint64_t v63 = a3[66];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  *(void *)uint64_t v64 = *(void *)v65;
  *(unsigned char *)(v64 + 8) = *(unsigned char *)(v65 + 8);
  uint64_t v66 = a3[67];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  *(void *)uint64_t v67 = *(void *)v68;
  uint64_t v69 = a3[68];
  uint64_t v70 = a1 + v69;
  uint64_t v71 = a2 + v69;
  *(void *)uint64_t v70 = *(void *)v71;
  *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
  uint64_t v72 = a3[69];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  *(void *)uint64_t v73 = *(void *)v74;
  *(unsigned char *)(v73 + 8) = *(unsigned char *)(v74 + 8);
  uint64_t v75 = a3[70];
  uint64_t v76 = (_OWORD *)(a1 + v75);
  uint64_t v77 = (_OWORD *)(a2 + v75);
  long long v78 = v77[1];
  *uint64_t v76 = *v77;
  v76[1] = v78;
  long long v79 = v77[6];
  long long v80 = v77[4];
  v76[5] = v77[5];
  v76[6] = v79;
  long long v81 = v77[3];
  v76[2] = v77[2];
  v76[3] = v81;
  v76[4] = v80;
  *(unsigned char *)(a1 + a3[71]) = *(unsigned char *)(a2 + a3[71]);
  *(unsigned char *)(a1 + a3[72]) = *(unsigned char *)(a2 + a3[72]);
  *(unsigned char *)(a1 + a3[73]) = *(unsigned char *)(a2 + a3[73]);
  uint64_t v82 = a3[74];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  *(void *)uint64_t v83 = *(void *)v84;
  *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
  uint64_t v85 = a3[75];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = a2 + v85;
  *(void *)uint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  uint64_t v88 = a3[76];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  *(void *)uint64_t v89 = *(void *)v90;
  *(unsigned char *)(v89 + 8) = *(unsigned char *)(v90 + 8);
  uint64_t v91 = a3[77];
  uint64_t v92 = a1 + v91;
  uint64_t v93 = a2 + v91;
  *(void *)uint64_t v92 = *(void *)v93;
  *(unsigned char *)(v92 + 8) = *(unsigned char *)(v93 + 8);
  uint64_t v94 = a3[78];
  uint64_t v95 = a1 + v94;
  uint64_t v96 = (uint64_t *)(a2 + v94);
  uint64_t v97 = *v96;
  *(unsigned char *)(v95 + 8) = *((unsigned char *)v96 + 8);
  *(void *)uint64_t v95 = v97;
  uint64_t v98 = a3[79];
  uint64_t v99 = a1 + v98;
  uint64_t v100 = a2 + v98;
  *(void *)uint64_t v99 = *(void *)v100;
  *(unsigned char *)(v99 + 8) = *(unsigned char *)(v100 + 8);
  uint64_t v101 = a3[80];
  uint64_t v102 = a1 + v101;
  uint64_t v103 = a2 + v101;
  *(void *)uint64_t v102 = *(void *)v103;
  *(unsigned char *)(v102 + 8) = *(unsigned char *)(v103 + 8);
  uint64_t v104 = a3[81];
  uint64_t v105 = a1 + v104;
  uint64_t v106 = a2 + v104;
  *(void *)uint64_t v105 = *(void *)v106;
  *(unsigned char *)(v105 + 8) = *(unsigned char *)(v106 + 8);
  uint64_t v107 = a3[82];
  uint64_t v108 = a1 + v107;
  uint64_t v109 = a2 + v107;
  *(void *)uint64_t v108 = *(void *)v109;
  *(unsigned char *)(v108 + 8) = *(unsigned char *)(v109 + 8);
  *(_OWORD *)(a1 + a3[83]) = *(_OWORD *)(a2 + a3[83]);
  uint64_t v110 = a3[84];
  uint64_t v111 = a1 + v110;
  uint64_t v112 = a2 + v110;
  *(void *)uint64_t v111 = *(void *)v112;
  *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
  *(_OWORD *)(a1 + a3[85]) = *(_OWORD *)(a2 + a3[85]);
  uint64_t v113 = a3[86];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = a2 + v113;
  *(void *)uint64_t v114 = *(void *)v115;
  *(unsigned char *)(v114 + 8) = *(unsigned char *)(v115 + 8);
  *(void *)(a1 + a3[87]) = *(void *)(a2 + a3[87]);
  *(_OWORD *)(a1 + a3[88]) = *(_OWORD *)(a2 + a3[88]);
  uint64_t v116 = a3[89];
  uint64_t v117 = a1 + v116;
  uint64_t v118 = a2 + v116;
  *(void *)uint64_t v117 = *(void *)v118;
  *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
  *(unsigned char *)(a1 + a3[90]) = *(unsigned char *)(a2 + a3[90]);
  *(unsigned char *)(a1 + a3[91]) = *(unsigned char *)(a2 + a3[91]);
  *(unsigned char *)(a1 + a3[92]) = *(unsigned char *)(a2 + a3[92]);
  *(unsigned char *)(a1 + a3[93]) = *(unsigned char *)(a2 + a3[93]);
  uint64_t v119 = a3[94];
  uint64_t v120 = a1 + v119;
  uint64_t v121 = a2 + v119;
  *(void *)uint64_t v120 = *(void *)v121;
  *(unsigned char *)(v120 + 8) = *(unsigned char *)(v121 + 8);
  uint64_t v122 = a3[95];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = a2 + v122;
  *(void *)uint64_t v123 = *(void *)v124;
  *(unsigned char *)(v123 + 8) = *(unsigned char *)(v124 + 8);
  uint64_t v125 = a3[96];
  uint64_t v126 = a1 + v125;
  uint64_t v127 = a2 + v125;
  *(void *)uint64_t v126 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  uint64_t v128 = a3[97];
  uint64_t v129 = a1 + v128;
  uint64_t v130 = a2 + v128;
  *(void *)uint64_t v129 = *(void *)v130;
  *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
  uint64_t v131 = a3[98];
  uint64_t v132 = a1 + v131;
  uint64_t v133 = (uint64_t *)(a2 + v131);
  uint64_t v134 = *v133;
  *(unsigned char *)(v132 + 8) = *((unsigned char *)v133 + 8);
  *(void *)uint64_t v132 = v134;
  uint64_t v135 = a3[99];
  uint64_t v136 = a1 + v135;
  uint64_t v137 = a2 + v135;
  *(void *)uint64_t v136 = *(void *)v137;
  *(unsigned char *)(v136 + 8) = *(unsigned char *)(v137 + 8);
  uint64_t v138 = a3[100];
  uint64_t v139 = a1 + v138;
  uint64_t v140 = a2 + v138;
  *(void *)uint64_t v139 = *(void *)v140;
  *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
  uint64_t v141 = a3[101];
  uint64_t v142 = a1 + v141;
  uint64_t v143 = a2 + v141;
  *(void *)uint64_t v142 = *(void *)v143;
  *(unsigned char *)(v142 + 8) = *(unsigned char *)(v143 + 8);
  uint64_t v144 = a3[102];
  uint64_t v145 = a1 + v144;
  uint64_t v146 = a2 + v144;
  *(void *)uint64_t v145 = *(void *)v146;
  *(unsigned char *)(v145 + 8) = *(unsigned char *)(v146 + 8);
  uint64_t v147 = a3[103];
  uint64_t v148 = a1 + v147;
  uint64_t v149 = a2 + v147;
  *(void *)uint64_t v148 = *(void *)v149;
  *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
  uint64_t v150 = a3[104];
  uint64_t v151 = a1 + v150;
  uint64_t v152 = a2 + v150;
  *(void *)uint64_t v151 = *(void *)v152;
  *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
  uint64_t v153 = a3[105];
  uint64_t v154 = a1 + v153;
  uint64_t v155 = a2 + v153;
  *(void *)uint64_t v154 = *(void *)v155;
  *(unsigned char *)(v154 + 8) = *(unsigned char *)(v155 + 8);
  uint64_t v156 = a3[106];
  uint64_t v157 = a1 + v156;
  uint64_t v158 = a2 + v156;
  *(void *)uint64_t v157 = *(void *)v158;
  *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
  uint64_t v159 = a3[107];
  uint64_t v160 = a1 + v159;
  uint64_t v161 = a2 + v159;
  *(void *)uint64_t v160 = *(void *)v161;
  *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
  uint64_t v162 = a3[108];
  uint64_t v163 = a1 + v162;
  uint64_t v164 = a2 + v162;
  *(void *)uint64_t v163 = *(void *)v164;
  *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
  uint64_t v165 = a3[109];
  uint64_t v166 = a1 + v165;
  uint64_t v167 = a2 + v165;
  *(void *)uint64_t v166 = *(void *)v167;
  *(unsigned char *)(v166 + 8) = *(unsigned char *)(v167 + 8);
  uint64_t v168 = a3[110];
  uint64_t v169 = a1 + v168;
  uint64_t v170 = a2 + v168;
  *(void *)uint64_t v169 = *(void *)v170;
  *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
  uint64_t v171 = a3[111];
  uint64_t v172 = a1 + v171;
  uint64_t v173 = a2 + v171;
  *(void *)uint64_t v172 = *(void *)v173;
  *(unsigned char *)(v172 + 8) = *(unsigned char *)(v173 + 8);
  uint64_t v174 = a3[112];
  uint64_t v175 = a1 + v174;
  uint64_t v176 = a2 + v174;
  *(void *)uint64_t v175 = *(void *)v176;
  *(unsigned char *)(v175 + 8) = *(unsigned char *)(v176 + 8);
  uint64_t v177 = a3[113];
  uint64_t v178 = a1 + v177;
  uint64_t v179 = a2 + v177;
  *(void *)uint64_t v178 = *(void *)v179;
  *(unsigned char *)(v178 + 8) = *(unsigned char *)(v179 + 8);
  uint64_t v180 = a3[114];
  uint64_t v181 = a1 + v180;
  uint64_t v182 = a2 + v180;
  *(void *)uint64_t v181 = *(void *)v182;
  *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
  uint64_t v183 = a3[115];
  uint64_t v184 = a1 + v183;
  uint64_t v185 = a2 + v183;
  *(void *)uint64_t v184 = *(void *)v185;
  *(unsigned char *)(v184 + 8) = *(unsigned char *)(v185 + 8);
  *(unsigned char *)(a1 + a3[116]) = *(unsigned char *)(a2 + a3[116]);
  uint64_t v186 = a3[117];
  uint64_t v187 = a1 + v186;
  uint64_t v188 = a2 + v186;
  *(void *)uint64_t v187 = *(void *)v188;
  *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
  uint64_t v189 = a3[118];
  uint64_t v190 = a1 + v189;
  uint64_t v191 = a2 + v189;
  *(void *)uint64_t v190 = *(void *)v191;
  *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
  uint64_t v192 = a3[119];
  uint64_t v193 = a1 + v192;
  uint64_t v194 = a2 + v192;
  *(void *)uint64_t v193 = *(void *)v194;
  *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
  *(unsigned char *)(a1 + a3[120]) = *(unsigned char *)(a2 + a3[120]);
  *(unsigned char *)(a1 + a3[121]) = *(unsigned char *)(a2 + a3[121]);
  *(unsigned char *)(a1 + a3[122]) = *(unsigned char *)(a2 + a3[122]);
  uint64_t v195 = a3[123];
  uint64_t v196 = a1 + v195;
  uint64_t v197 = a2 + v195;
  *(void *)uint64_t v196 = *(void *)v197;
  *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
  uint64_t v198 = a3[124];
  uint64_t v199 = a1 + v198;
  uint64_t v200 = a2 + v198;
  *(void *)uint64_t v199 = *(void *)v200;
  *(unsigned char *)(v199 + 8) = *(unsigned char *)(v200 + 8);
  uint64_t v201 = a3[125];
  uint64_t v202 = a1 + v201;
  uint64_t v203 = a2 + v201;
  *(void *)uint64_t v202 = *(void *)v203;
  *(unsigned char *)(v202 + 8) = *(unsigned char *)(v203 + 8);
  uint64_t v204 = a3[126];
  uint64_t v205 = a1 + v204;
  uint64_t v206 = a2 + v204;
  *(void *)uint64_t v205 = *(void *)v206;
  *(unsigned char *)(v205 + 8) = *(unsigned char *)(v206 + 8);
  uint64_t v207 = a3[127];
  uint64_t v208 = a1 + v207;
  uint64_t v209 = (uint64_t *)(a2 + v207);
  uint64_t v210 = *v209;
  *(unsigned char *)(v208 + 8) = *((unsigned char *)v209 + 8);
  *(void *)uint64_t v208 = v210;
  uint64_t v211 = a3[128];
  uint64_t v212 = a1 + v211;
  uint64_t v213 = a2 + v211;
  *(void *)uint64_t v212 = *(void *)v213;
  *(unsigned char *)(v212 + 8) = *(unsigned char *)(v213 + 8);
  uint64_t v214 = a3[129];
  uint64_t v215 = a1 + v214;
  uint64_t v216 = a2 + v214;
  *(void *)uint64_t v215 = *(void *)v216;
  *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
  uint64_t v217 = a3[130];
  uint64_t v218 = a1 + v217;
  uint64_t v219 = a2 + v217;
  *(void *)uint64_t v218 = *(void *)v219;
  *(unsigned char *)(v218 + 8) = *(unsigned char *)(v219 + 8);
  *(unsigned char *)(a1 + a3[131]) = *(unsigned char *)(a2 + a3[131]);
  uint64_t v220 = a3[132];
  uint64_t v221 = a1 + v220;
  uint64_t v222 = a2 + v220;
  *(void *)uint64_t v221 = *(void *)v222;
  *(unsigned char *)(v221 + 8) = *(unsigned char *)(v222 + 8);
  *(void *)(a1 + a3[133]) = *(void *)(a2 + a3[133]);
  uint64_t v223 = a3[134];
  uint64_t v224 = a1 + v223;
  uint64_t v225 = a2 + v223;
  *(void *)uint64_t v224 = *(void *)v225;
  *(unsigned char *)(v224 + 8) = *(unsigned char *)(v225 + 8);
  *(unsigned char *)(a1 + a3[135]) = *(unsigned char *)(a2 + a3[135]);
  *(void *)(a1 + a3[136]) = *(void *)(a2 + a3[136]);
  *(unsigned char *)(a1 + a3[137]) = *(unsigned char *)(a2 + a3[137]);
  uint64_t v226 = a3[138];
  uint64_t v227 = a1 + v226;
  uint64_t v228 = a2 + v226;
  *(void *)uint64_t v227 = *(void *)v228;
  *(unsigned char *)(v227 + 8) = *(unsigned char *)(v228 + 8);
  uint64_t v229 = a3[139];
  uint64_t v230 = a1 + v229;
  uint64_t v231 = a2 + v229;
  *(void *)uint64_t v230 = *(void *)v231;
  *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
  *(unsigned char *)(a1 + a3[140]) = *(unsigned char *)(a2 + a3[140]);
  *(unsigned char *)(a1 + a3[141]) = *(unsigned char *)(a2 + a3[141]);
  uint64_t v232 = a3[142];
  uint64_t v233 = a1 + v232;
  uint64_t v234 = a2 + v232;
  *(void *)uint64_t v233 = *(void *)v234;
  *(unsigned char *)(v233 + 8) = *(unsigned char *)(v234 + 8);
  uint64_t v235 = a3[143];
  uint64_t v236 = a1 + v235;
  uint64_t v237 = a2 + v235;
  *(void *)uint64_t v236 = *(void *)v237;
  *(unsigned char *)(v236 + 8) = *(unsigned char *)(v237 + 8);
  uint64_t v238 = a3[144];
  uint64_t v239 = a1 + v238;
  uint64_t v240 = a2 + v238;
  *(void *)uint64_t v239 = *(void *)v240;
  *(unsigned char *)(v239 + 8) = *(unsigned char *)(v240 + 8);
  uint64_t v241 = a3[145];
  uint64_t v242 = a1 + v241;
  uint64_t v243 = a2 + v241;
  *(void *)uint64_t v242 = *(void *)v243;
  *(unsigned char *)(v242 + 8) = *(unsigned char *)(v243 + 8);
  uint64_t v244 = a3[146];
  uint64_t v245 = a1 + v244;
  uint64_t v246 = (uint64_t *)(a2 + v244);
  uint64_t v247 = *v246;
  *(unsigned char *)(v245 + 8) = *((unsigned char *)v246 + 8);
  *(void *)uint64_t v245 = v247;
  uint64_t v248 = a3[147];
  uint64_t v249 = a1 + v248;
  uint64_t v250 = a2 + v248;
  *(void *)uint64_t v249 = *(void *)v250;
  *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
  uint64_t v251 = a3[148];
  uint64_t v252 = a1 + v251;
  uint64_t v253 = a2 + v251;
  *(void *)uint64_t v252 = *(void *)v253;
  *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
  uint64_t v254 = a3[149];
  uint64_t v255 = a1 + v254;
  uint64_t v256 = a2 + v254;
  *(void *)uint64_t v255 = *(void *)v256;
  *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
  uint64_t v257 = a3[150];
  uint64_t v258 = a1 + v257;
  uint64_t v259 = a2 + v257;
  *(void *)uint64_t v258 = *(void *)v259;
  *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
  uint64_t v260 = a3[151];
  uint64_t v261 = a1 + v260;
  uint64_t v262 = a2 + v260;
  *(void *)uint64_t v261 = *(void *)v262;
  *(unsigned char *)(v261 + 8) = *(unsigned char *)(v262 + 8);
  uint64_t v263 = a3[152];
  uint64_t v264 = a1 + v263;
  uint64_t v265 = a2 + v263;
  *(void *)uint64_t v264 = *(void *)v265;
  *(unsigned char *)(v264 + 8) = *(unsigned char *)(v265 + 8);
  uint64_t v266 = a3[153];
  uint64_t v267 = a1 + v266;
  uint64_t v268 = a2 + v266;
  *(void *)uint64_t v267 = *(void *)v268;
  *(unsigned char *)(v267 + 8) = *(unsigned char *)(v268 + 8);
  uint64_t v269 = a3[154];
  uint64_t v270 = a1 + v269;
  uint64_t v271 = a2 + v269;
  *(void *)uint64_t v270 = *(void *)v271;
  *(unsigned char *)(v270 + 8) = *(unsigned char *)(v271 + 8);
  uint64_t v272 = a3[155];
  uint64_t v273 = a1 + v272;
  uint64_t v274 = a2 + v272;
  *(void *)uint64_t v273 = *(void *)v274;
  *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
  uint64_t v275 = a3[156];
  uint64_t v276 = a1 + v275;
  uint64_t v277 = a2 + v275;
  *(void *)uint64_t v276 = *(void *)v277;
  *(unsigned char *)(v276 + 8) = *(unsigned char *)(v277 + 8);
  uint64_t v278 = a3[157];
  uint64_t v279 = a1 + v278;
  uint64_t v280 = a2 + v278;
  *(void *)uint64_t v279 = *(void *)v280;
  *(unsigned char *)(v279 + 8) = *(unsigned char *)(v280 + 8);
  uint64_t v281 = a3[158];
  uint64_t v282 = a1 + v281;
  uint64_t v283 = a2 + v281;
  *(void *)uint64_t v282 = *(void *)v283;
  *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
  uint64_t v284 = a3[159];
  uint64_t v285 = a1 + v284;
  uint64_t v286 = a2 + v284;
  *(void *)uint64_t v285 = *(void *)v286;
  *(unsigned char *)(v285 + 8) = *(unsigned char *)(v286 + 8);
  *(unsigned char *)(a1 + a3[160]) = *(unsigned char *)(a2 + a3[160]);
  uint64_t v287 = a3[161];
  uint64_t v288 = a1 + v287;
  uint64_t v289 = a2 + v287;
  *(void *)uint64_t v288 = *(void *)v289;
  *(unsigned char *)(v288 + 8) = *(unsigned char *)(v289 + 8);
  uint64_t v290 = a3[162];
  uint64_t v291 = a1 + v290;
  uint64_t v292 = a2 + v290;
  *(void *)uint64_t v291 = *(void *)v292;
  *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
  uint64_t v293 = a3[163];
  uint64_t v294 = a1 + v293;
  uint64_t v295 = a2 + v293;
  *(void *)uint64_t v294 = *(void *)v295;
  *(unsigned char *)(v294 + 8) = *(unsigned char *)(v295 + 8);
  *(_OWORD *)(a1 + a3[164]) = *(_OWORD *)(a2 + a3[164]);
  uint64_t v296 = a3[165];
  uint64_t v297 = a1 + v296;
  uint64_t v298 = a2 + v296;
  *(void *)uint64_t v297 = *(void *)v298;
  *(unsigned char *)(v297 + 8) = *(unsigned char *)(v298 + 8);
  *(unsigned char *)(a1 + a3[166]) = *(unsigned char *)(a2 + a3[166]);
  *(unsigned char *)(a1 + a3[167]) = *(unsigned char *)(a2 + a3[167]);
  uint64_t v299 = a3[168];
  uint64_t v300 = a1 + v299;
  uint64_t v301 = a2 + v299;
  *(void *)uint64_t v300 = *(void *)v301;
  *(unsigned char *)(v300 + 8) = *(unsigned char *)(v301 + 8);
  uint64_t v302 = a3[169];
  uint64_t v303 = a1 + v302;
  uint64_t v304 = a2 + v302;
  *(void *)uint64_t v303 = *(void *)v304;
  *(unsigned char *)(v303 + 8) = *(unsigned char *)(v304 + 8);
  *(unsigned char *)(a1 + a3[170]) = *(unsigned char *)(a2 + a3[170]);
  uint64_t v305 = a3[171];
  uint64_t v306 = a1 + v305;
  uint64_t v307 = a2 + v305;
  *(_DWORD *)uint64_t v306 = *(_DWORD *)v307;
  *(unsigned char *)(v306 + 4) = *(unsigned char *)(v307 + 4);
  uint64_t v308 = a3[172];
  uint64_t v309 = a1 + v308;
  uint64_t v310 = a2 + v308;
  *(void *)uint64_t v309 = *(void *)v310;
  *(unsigned char *)(v309 + 8) = *(unsigned char *)(v310 + 8);
  uint64_t v311 = a3[173];
  uint64_t v312 = a1 + v311;
  uint64_t v313 = a2 + v311;
  *(void *)uint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  uint64_t v314 = a3[174];
  uint64_t v315 = a1 + v314;
  uint64_t v316 = a2 + v314;
  *(void *)uint64_t v315 = *(void *)v316;
  *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
  uint64_t v317 = a3[175];
  uint64_t v318 = a1 + v317;
  uint64_t v319 = (uint64_t *)(a2 + v317);
  uint64_t v320 = *v319;
  *(unsigned char *)(v318 + 8) = *((unsigned char *)v319 + 8);
  *(void *)uint64_t v318 = v320;
  uint64_t v321 = a3[176];
  uint64_t v322 = a1 + v321;
  uint64_t v323 = a2 + v321;
  *(void *)uint64_t v322 = *(void *)v323;
  *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
  uint64_t v324 = a3[177];
  uint64_t v325 = a1 + v324;
  uint64_t v326 = a2 + v324;
  *(void *)uint64_t v325 = *(void *)v326;
  *(unsigned char *)(v325 + 8) = *(unsigned char *)(v326 + 8);
  uint64_t v327 = a3[178];
  uint64_t v328 = a1 + v327;
  uint64_t v329 = a2 + v327;
  *(void *)uint64_t v328 = *(void *)v329;
  uint64_t v330 = a3[179];
  char v331 = *(unsigned char *)(a2 + v330);
  *(unsigned char *)(v328 + 8) = *(unsigned char *)(v329 + 8);
  *(unsigned char *)(a1 + v330) = v331;
  uint64_t v332 = a3[180];
  uint64_t v333 = a1 + v332;
  uint64_t v334 = a2 + v332;
  *(void *)uint64_t v333 = *(void *)v334;
  *(unsigned char *)(v333 + 8) = *(unsigned char *)(v334 + 8);
  uint64_t v335 = a3[181];
  uint64_t v336 = a1 + v335;
  uint64_t v337 = a2 + v335;
  *(void *)uint64_t v336 = *(void *)v337;
  *(unsigned char *)(v336 + 8) = *(unsigned char *)(v337 + 8);
  return a1;
}

uint64_t sub_100945248(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_1001356D0(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_10001CFB8(v8, v6);
LABEL_6:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v9 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v9;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  uint64_t v10 = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(void *)(a1 + 224) = v10;
  *(unsigned char *)(a1 + 248) = *(unsigned char *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(unsigned char *)(a1 + 296) = *(unsigned char *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  uint64_t v11 = *(void *)(a2 + 304);
  *(unsigned char *)(a1 + 312) = *(unsigned char *)(a2 + 312);
  *(void *)(a1 + 304) = v11;
  *(unsigned char *)(a1 + 313) = *(unsigned char *)(a2 + 313);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(unsigned char *)(a1 + 336) = *(unsigned char *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(unsigned char *)(a1 + 352) = *(unsigned char *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(unsigned char *)(a1 + 368) = *(unsigned char *)(a2 + 368);
  *(unsigned char *)(a1 + 384) = *(unsigned char *)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  uint64_t v12 = *(void *)(a2 + 392);
  *(unsigned char *)(a1 + 400) = *(unsigned char *)(a2 + 400);
  *(void *)(a1 + 392) = v12;
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(unsigned char *)(a1 + 416) = *(unsigned char *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(unsigned char *)(a1 + 432) = *(unsigned char *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 512) = *(unsigned char *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(unsigned char *)(a1 + 528) = *(unsigned char *)(a2 + 528);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  uint64_t v13 = *(void *)(a2 + 536);
  *(unsigned char *)(a1 + 544) = *(unsigned char *)(a2 + 544);
  *(void *)(a1 + 536) = v13;
  uint64_t v14 = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 552) = v14;
  uint64_t v15 = *(void *)(a2 + 568);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(void *)(a1 + 568) = v15;
  uint64_t v16 = *(void *)(a2 + 584);
  *(unsigned char *)(a1 + 592) = *(unsigned char *)(a2 + 592);
  *(void *)(a1 + 584) = v16;
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(unsigned char *)(a1 + 616) = *(unsigned char *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  uint64_t v17 = *(void **)(a1 + 640);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);

  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(unsigned char *)(a1 + 696) = *(unsigned char *)(a2 + 696);
  *(unsigned char *)(a1 + 712) = *(unsigned char *)(a2 + 712);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  uint64_t v18 = *(void *)(a2 + 720);
  *(unsigned char *)(a1 + 728) = *(unsigned char *)(a2 + 728);
  *(void *)(a1 + 720) = v18;
  *(unsigned char *)(a1 + 729) = *(unsigned char *)(a2 + 729);
  uint64_t v19 = a3[60];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v26)
  {
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
LABEL_11:
    uint64_t v27 = sub_10000588C(&qword_101638CF0);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
LABEL_12:
  uint64_t v28 = a3[61];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for Date();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v32 + 48);
  int v34 = v33(v29, 1, v31);
  int v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
LABEL_17:
    uint64_t v36 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v29, v30, v31);
LABEL_18:
  uint64_t v37 = a3[62];
  uint64_t v38 = a3[63];
  uint64_t v39 = a1 + v37;
  uint64_t v40 = a2 + v37;
  *(void *)uint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  uint64_t v41 = (void *)(a1 + v38);
  uint64_t v42 = (void *)(a2 + v38);
  int v43 = v33((void *)(a1 + v38), 1, v31);
  int v44 = v33(v42, 1, v31);
  if (v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v32 + 32))(v41, v42, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v31);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v32 + 8))(v41, v31);
LABEL_23:
    uint64_t v45 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v32 + 40))(v41, v42, v31);
LABEL_24:
  uint64_t v46 = a3[64];
  uint64_t v47 = a1 + v46;
  uint64_t v48 = a2 + v46;
  *(void *)uint64_t v47 = *(void *)v48;
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  uint64_t v49 = a3[65];
  uint64_t v50 = a1 + v49;
  uint64_t v51 = a2 + v49;
  *(void *)uint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
  uint64_t v52 = a3[66];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  *(void *)uint64_t v53 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  uint64_t v55 = a3[67];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  *(void *)uint64_t v56 = *(void *)v57;
  *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
  uint64_t v58 = a3[68];
  uint64_t v59 = a1 + v58;
  uint64_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v61 = *v60;
  *(unsigned char *)(v59 + 8) = *((unsigned char *)v60 + 8);
  *(void *)uint64_t v59 = v61;
  uint64_t v62 = a3[69];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  *(unsigned char *)(v63 + 8) = *(unsigned char *)(v64 + 8);
  *(void *)uint64_t v63 = *(void *)v64;
  uint64_t v65 = a3[70];
  uint64_t v66 = a1 + v65;
  uint64_t v67 = a2 + v65;
  if (!*(void *)(a1 + v65 + 48))
  {
LABEL_28:
    long long v70 = *(_OWORD *)(v67 + 80);
    *(_OWORD *)(v66 + 64) = *(_OWORD *)(v67 + 64);
    *(_OWORD *)(v66 + 80) = v70;
    *(_OWORD *)(v66 + 96) = *(_OWORD *)(v67 + 96);
    long long v71 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v71;
    long long v72 = *(_OWORD *)(v67 + 48);
    *(_OWORD *)(v66 + 32) = *(_OWORD *)(v67 + 32);
    *(_OWORD *)(v66 + 48) = v72;
    goto LABEL_29;
  }
  uint64_t v68 = *(void *)(v67 + 48);
  if (!v68)
  {
    sub_100944118(v66);
    goto LABEL_28;
  }
  long long v69 = *(_OWORD *)(v67 + 16);
  *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
  *(_OWORD *)(v66 + 16) = v69;
  *(_OWORD *)(v66 + 32) = *(_OWORD *)(v67 + 32);
  *(void *)(v66 + 48) = v68;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v66 + 56) = *(_OWORD *)(v67 + 56);
  *(_OWORD *)(v66 + 72) = *(_OWORD *)(v67 + 72);
  *(_OWORD *)(v66 + 88) = *(_OWORD *)(v67 + 88);
  *(void *)(v66 + 104) = *(void *)(v67 + 104);
  swift_bridgeObjectRelease();
LABEL_29:
  *(unsigned char *)(a1 + a3[71]) = *(unsigned char *)(a2 + a3[71]);
  *(unsigned char *)(a1 + a3[72]) = *(unsigned char *)(a2 + a3[72]);
  *(unsigned char *)(a1 + a3[73]) = *(unsigned char *)(a2 + a3[73]);
  uint64_t v73 = a3[74];
  uint64_t v74 = a1 + v73;
  uint64_t v75 = a2 + v73;
  *(void *)uint64_t v74 = *(void *)v75;
  *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
  uint64_t v76 = a3[75];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  *(void *)uint64_t v77 = *(void *)v78;
  *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
  uint64_t v79 = a3[76];
  uint64_t v80 = a1 + v79;
  uint64_t v81 = a2 + v79;
  *(void *)uint64_t v80 = *(void *)v81;
  *(unsigned char *)(v80 + 8) = *(unsigned char *)(v81 + 8);
  uint64_t v82 = a3[77];
  uint64_t v83 = a1 + v82;
  uint64_t v84 = a2 + v82;
  *(void *)uint64_t v83 = *(void *)v84;
  *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
  uint64_t v85 = a3[78];
  uint64_t v86 = a1 + v85;
  uint64_t v87 = (uint64_t *)(a2 + v85);
  uint64_t v88 = *v87;
  *(unsigned char *)(v86 + 8) = *((unsigned char *)v87 + 8);
  *(void *)uint64_t v86 = v88;
  uint64_t v89 = a3[79];
  uint64_t v90 = a1 + v89;
  uint64_t v91 = a2 + v89;
  *(void *)uint64_t v90 = *(void *)v91;
  *(unsigned char *)(v90 + 8) = *(unsigned char *)(v91 + 8);
  uint64_t v92 = a3[80];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  *(void *)uint64_t v93 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  uint64_t v95 = a3[81];
  uint64_t v96 = a1 + v95;
  uint64_t v97 = a2 + v95;
  *(void *)uint64_t v96 = *(void *)v97;
  *(unsigned char *)(v96 + 8) = *(unsigned char *)(v97 + 8);
  uint64_t v98 = a3[82];
  uint64_t v99 = a1 + v98;
  uint64_t v100 = a2 + v98;
  *(void *)uint64_t v99 = *(void *)v100;
  *(unsigned char *)(v99 + 8) = *(unsigned char *)(v100 + 8);
  uint64_t v101 = a3[83];
  uint64_t v102 = (void *)(a1 + v101);
  uint64_t v103 = (uint64_t *)(a2 + v101);
  uint64_t v105 = *v103;
  uint64_t v104 = v103[1];
  *uint64_t v102 = v105;
  v102[1] = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = a3[84];
  uint64_t v107 = a1 + v106;
  uint64_t v108 = a2 + v106;
  *(void *)uint64_t v107 = *(void *)v108;
  *(unsigned char *)(v107 + 8) = *(unsigned char *)(v108 + 8);
  uint64_t v109 = a3[85];
  uint64_t v110 = (void *)(a1 + v109);
  uint64_t v111 = (uint64_t *)(a2 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *uint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  uint64_t v114 = a3[86];
  uint64_t v115 = a1 + v114;
  uint64_t v116 = a2 + v114;
  *(void *)uint64_t v115 = *(void *)v116;
  *(unsigned char *)(v115 + 8) = *(unsigned char *)(v116 + 8);
  *(void *)(a1 + a3[87]) = *(void *)(a2 + a3[87]);
  swift_bridgeObjectRelease();
  uint64_t v117 = a3[88];
  uint64_t v118 = (void *)(a1 + v117);
  uint64_t v119 = (uint64_t *)(a2 + v117);
  uint64_t v121 = *v119;
  uint64_t v120 = v119[1];
  *uint64_t v118 = v121;
  v118[1] = v120;
  swift_bridgeObjectRelease();
  uint64_t v122 = a3[89];
  uint64_t v123 = a1 + v122;
  uint64_t v124 = a2 + v122;
  *(unsigned char *)(v123 + 8) = *(unsigned char *)(v124 + 8);
  uint64_t v125 = a3[90];
  char v126 = *(unsigned char *)(a2 + v125);
  *(void *)uint64_t v123 = *(void *)v124;
  *(unsigned char *)(a1 + v125) = v126;
  *(unsigned char *)(a1 + a3[91]) = *(unsigned char *)(a2 + a3[91]);
  *(unsigned char *)(a1 + a3[92]) = *(unsigned char *)(a2 + a3[92]);
  *(unsigned char *)(a1 + a3[93]) = *(unsigned char *)(a2 + a3[93]);
  uint64_t v127 = a3[94];
  uint64_t v128 = a1 + v127;
  uint64_t v129 = a2 + v127;
  *(void *)uint64_t v128 = *(void *)v129;
  *(unsigned char *)(v128 + 8) = *(unsigned char *)(v129 + 8);
  uint64_t v130 = a3[95];
  uint64_t v131 = a1 + v130;
  uint64_t v132 = a2 + v130;
  *(void *)uint64_t v131 = *(void *)v132;
  *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
  uint64_t v133 = a3[96];
  uint64_t v134 = a1 + v133;
  uint64_t v135 = a2 + v133;
  *(void *)uint64_t v134 = *(void *)v135;
  *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
  uint64_t v136 = a3[97];
  uint64_t v137 = a1 + v136;
  uint64_t v138 = a2 + v136;
  *(void *)uint64_t v137 = *(void *)v138;
  *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
  uint64_t v139 = a3[98];
  uint64_t v140 = a1 + v139;
  uint64_t v141 = (uint64_t *)(a2 + v139);
  uint64_t v142 = *v141;
  *(unsigned char *)(v140 + 8) = *((unsigned char *)v141 + 8);
  *(void *)uint64_t v140 = v142;
  uint64_t v143 = a3[99];
  uint64_t v144 = a1 + v143;
  uint64_t v145 = a2 + v143;
  *(void *)uint64_t v144 = *(void *)v145;
  *(unsigned char *)(v144 + 8) = *(unsigned char *)(v145 + 8);
  uint64_t v146 = a3[100];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = a2 + v146;
  *(void *)uint64_t v147 = *(void *)v148;
  *(unsigned char *)(v147 + 8) = *(unsigned char *)(v148 + 8);
  uint64_t v149 = a3[101];
  uint64_t v150 = a1 + v149;
  uint64_t v151 = a2 + v149;
  *(void *)uint64_t v150 = *(void *)v151;
  *(unsigned char *)(v150 + 8) = *(unsigned char *)(v151 + 8);
  uint64_t v152 = a3[102];
  uint64_t v153 = a1 + v152;
  uint64_t v154 = a2 + v152;
  *(void *)uint64_t v153 = *(void *)v154;
  *(unsigned char *)(v153 + 8) = *(unsigned char *)(v154 + 8);
  uint64_t v155 = a3[103];
  uint64_t v156 = a1 + v155;
  uint64_t v157 = a2 + v155;
  *(void *)uint64_t v156 = *(void *)v157;
  *(unsigned char *)(v156 + 8) = *(unsigned char *)(v157 + 8);
  uint64_t v158 = a3[104];
  uint64_t v159 = a1 + v158;
  uint64_t v160 = a2 + v158;
  *(void *)uint64_t v159 = *(void *)v160;
  *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
  uint64_t v161 = a3[105];
  uint64_t v162 = a1 + v161;
  uint64_t v163 = a2 + v161;
  *(void *)uint64_t v162 = *(void *)v163;
  *(unsigned char *)(v162 + 8) = *(unsigned char *)(v163 + 8);
  uint64_t v164 = a3[106];
  uint64_t v165 = a1 + v164;
  uint64_t v166 = a2 + v164;
  *(void *)uint64_t v165 = *(void *)v166;
  *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
  uint64_t v167 = a3[107];
  uint64_t v168 = a1 + v167;
  uint64_t v169 = a2 + v167;
  *(void *)uint64_t v168 = *(void *)v169;
  *(unsigned char *)(v168 + 8) = *(unsigned char *)(v169 + 8);
  uint64_t v170 = a3[108];
  uint64_t v171 = a1 + v170;
  uint64_t v172 = a2 + v170;
  *(void *)uint64_t v171 = *(void *)v172;
  *(unsigned char *)(v171 + 8) = *(unsigned char *)(v172 + 8);
  uint64_t v173 = a3[109];
  uint64_t v174 = a1 + v173;
  uint64_t v175 = a2 + v173;
  *(void *)uint64_t v174 = *(void *)v175;
  *(unsigned char *)(v174 + 8) = *(unsigned char *)(v175 + 8);
  uint64_t v176 = a3[110];
  uint64_t v177 = a1 + v176;
  uint64_t v178 = a2 + v176;
  *(void *)uint64_t v177 = *(void *)v178;
  *(unsigned char *)(v177 + 8) = *(unsigned char *)(v178 + 8);
  uint64_t v179 = a3[111];
  uint64_t v180 = a1 + v179;
  uint64_t v181 = a2 + v179;
  *(void *)uint64_t v180 = *(void *)v181;
  *(unsigned char *)(v180 + 8) = *(unsigned char *)(v181 + 8);
  uint64_t v182 = a3[112];
  uint64_t v183 = a1 + v182;
  uint64_t v184 = a2 + v182;
  *(void *)uint64_t v183 = *(void *)v184;
  *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
  uint64_t v185 = a3[113];
  uint64_t v186 = a1 + v185;
  uint64_t v187 = a2 + v185;
  *(void *)uint64_t v186 = *(void *)v187;
  *(unsigned char *)(v186 + 8) = *(unsigned char *)(v187 + 8);
  uint64_t v188 = a3[114];
  uint64_t v189 = a1 + v188;
  uint64_t v190 = a2 + v188;
  *(void *)uint64_t v189 = *(void *)v190;
  *(unsigned char *)(v189 + 8) = *(unsigned char *)(v190 + 8);
  uint64_t v191 = a3[115];
  uint64_t v192 = a1 + v191;
  uint64_t v193 = a2 + v191;
  *(void *)uint64_t v192 = *(void *)v193;
  *(unsigned char *)(v192 + 8) = *(unsigned char *)(v193 + 8);
  *(unsigned char *)(a1 + a3[116]) = *(unsigned char *)(a2 + a3[116]);
  uint64_t v194 = a3[117];
  uint64_t v195 = a1 + v194;
  uint64_t v196 = a2 + v194;
  *(void *)uint64_t v195 = *(void *)v196;
  *(unsigned char *)(v195 + 8) = *(unsigned char *)(v196 + 8);
  uint64_t v197 = a3[118];
  uint64_t v198 = a1 + v197;
  uint64_t v199 = a2 + v197;
  *(void *)uint64_t v198 = *(void *)v199;
  *(unsigned char *)(v198 + 8) = *(unsigned char *)(v199 + 8);
  uint64_t v200 = a3[119];
  uint64_t v201 = a1 + v200;
  uint64_t v202 = a2 + v200;
  *(void *)uint64_t v201 = *(void *)v202;
  uint64_t v203 = a3[120];
  char v204 = *(unsigned char *)(a2 + v203);
  *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
  *(unsigned char *)(a1 + v203) = v204;
  *(unsigned char *)(a1 + a3[121]) = *(unsigned char *)(a2 + a3[121]);
  *(unsigned char *)(a1 + a3[122]) = *(unsigned char *)(a2 + a3[122]);
  uint64_t v205 = a3[123];
  uint64_t v206 = a1 + v205;
  uint64_t v207 = a2 + v205;
  *(void *)uint64_t v206 = *(void *)v207;
  *(unsigned char *)(v206 + 8) = *(unsigned char *)(v207 + 8);
  uint64_t v208 = a3[124];
  uint64_t v209 = a1 + v208;
  uint64_t v210 = a2 + v208;
  *(void *)uint64_t v209 = *(void *)v210;
  *(unsigned char *)(v209 + 8) = *(unsigned char *)(v210 + 8);
  uint64_t v211 = a3[125];
  uint64_t v212 = a1 + v211;
  uint64_t v213 = a2 + v211;
  *(void *)uint64_t v212 = *(void *)v213;
  *(unsigned char *)(v212 + 8) = *(unsigned char *)(v213 + 8);
  uint64_t v214 = a3[126];
  uint64_t v215 = a1 + v214;
  uint64_t v216 = a2 + v214;
  *(void *)uint64_t v215 = *(void *)v216;
  *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
  uint64_t v217 = a3[127];
  uint64_t v218 = a1 + v217;
  uint64_t v219 = (uint64_t *)(a2 + v217);
  uint64_t v220 = *v219;
  *(unsigned char *)(v218 + 8) = *((unsigned char *)v219 + 8);
  *(void *)uint64_t v218 = v220;
  uint64_t v221 = a3[128];
  uint64_t v222 = a1 + v221;
  uint64_t v223 = a2 + v221;
  *(void *)uint64_t v222 = *(void *)v223;
  *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
  uint64_t v224 = a3[129];
  uint64_t v225 = a1 + v224;
  uint64_t v226 = a2 + v224;
  *(void *)uint64_t v225 = *(void *)v226;
  *(unsigned char *)(v225 + 8) = *(unsigned char *)(v226 + 8);
  uint64_t v227 = a3[130];
  uint64_t v228 = a1 + v227;
  uint64_t v229 = a2 + v227;
  *(void *)uint64_t v228 = *(void *)v229;
  *(unsigned char *)(v228 + 8) = *(unsigned char *)(v229 + 8);
  *(unsigned char *)(a1 + a3[131]) = *(unsigned char *)(a2 + a3[131]);
  uint64_t v230 = a3[132];
  uint64_t v231 = a1 + v230;
  uint64_t v232 = a2 + v230;
  *(void *)uint64_t v231 = *(void *)v232;
  *(unsigned char *)(v231 + 8) = *(unsigned char *)(v232 + 8);
  *(void *)(a1 + a3[133]) = *(void *)(a2 + a3[133]);
  swift_bridgeObjectRelease();
  uint64_t v233 = a3[134];
  uint64_t v234 = a1 + v233;
  uint64_t v235 = a2 + v233;
  *(void *)uint64_t v234 = *(void *)v235;
  *(unsigned char *)(v234 + 8) = *(unsigned char *)(v235 + 8);
  *(unsigned char *)(a1 + a3[135]) = *(unsigned char *)(a2 + a3[135]);
  *(void *)(a1 + a3[136]) = *(void *)(a2 + a3[136]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[137]) = *(unsigned char *)(a2 + a3[137]);
  uint64_t v236 = a3[138];
  uint64_t v237 = a1 + v236;
  uint64_t v238 = a2 + v236;
  *(void *)uint64_t v237 = *(void *)v238;
  *(unsigned char *)(v237 + 8) = *(unsigned char *)(v238 + 8);
  uint64_t v239 = a3[139];
  uint64_t v240 = a1 + v239;
  uint64_t v241 = a2 + v239;
  *(void *)uint64_t v240 = *(void *)v241;
  *(unsigned char *)(v240 + 8) = *(unsigned char *)(v241 + 8);
  *(unsigned char *)(a1 + a3[140]) = *(unsigned char *)(a2 + a3[140]);
  *(unsigned char *)(a1 + a3[141]) = *(unsigned char *)(a2 + a3[141]);
  uint64_t v242 = a3[142];
  uint64_t v243 = a1 + v242;
  uint64_t v244 = a2 + v242;
  *(void *)uint64_t v243 = *(void *)v244;
  *(unsigned char *)(v243 + 8) = *(unsigned char *)(v244 + 8);
  uint64_t v245 = a3[143];
  uint64_t v246 = a1 + v245;
  uint64_t v247 = a2 + v245;
  *(void *)uint64_t v246 = *(void *)v247;
  *(unsigned char *)(v246 + 8) = *(unsigned char *)(v247 + 8);
  uint64_t v248 = a3[144];
  uint64_t v249 = a1 + v248;
  uint64_t v250 = a2 + v248;
  *(void *)uint64_t v249 = *(void *)v250;
  *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
  uint64_t v251 = a3[145];
  uint64_t v252 = a1 + v251;
  uint64_t v253 = a2 + v251;
  *(void *)uint64_t v252 = *(void *)v253;
  *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
  uint64_t v254 = a3[146];
  uint64_t v255 = a1 + v254;
  uint64_t v256 = (uint64_t *)(a2 + v254);
  uint64_t v257 = *v256;
  *(unsigned char *)(v255 + 8) = *((unsigned char *)v256 + 8);
  *(void *)uint64_t v255 = v257;
  uint64_t v258 = a3[147];
  uint64_t v259 = a1 + v258;
  uint64_t v260 = a2 + v258;
  *(void *)uint64_t v259 = *(void *)v260;
  *(unsigned char *)(v259 + 8) = *(unsigned char *)(v260 + 8);
  uint64_t v261 = a3[148];
  uint64_t v262 = a1 + v261;
  uint64_t v263 = a2 + v261;
  *(void *)uint64_t v262 = *(void *)v263;
  *(unsigned char *)(v262 + 8) = *(unsigned char *)(v263 + 8);
  uint64_t v264 = a3[149];
  uint64_t v265 = a1 + v264;
  uint64_t v266 = a2 + v264;
  *(void *)uint64_t v265 = *(void *)v266;
  *(unsigned char *)(v265 + 8) = *(unsigned char *)(v266 + 8);
  uint64_t v267 = a3[150];
  uint64_t v268 = a1 + v267;
  uint64_t v269 = a2 + v267;
  *(void *)uint64_t v268 = *(void *)v269;
  *(unsigned char *)(v268 + 8) = *(unsigned char *)(v269 + 8);
  uint64_t v270 = a3[151];
  uint64_t v271 = a1 + v270;
  uint64_t v272 = a2 + v270;
  *(void *)uint64_t v271 = *(void *)v272;
  *(unsigned char *)(v271 + 8) = *(unsigned char *)(v272 + 8);
  uint64_t v273 = a3[152];
  uint64_t v274 = a1 + v273;
  uint64_t v275 = a2 + v273;
  *(void *)uint64_t v274 = *(void *)v275;
  *(unsigned char *)(v274 + 8) = *(unsigned char *)(v275 + 8);
  uint64_t v276 = a3[153];
  uint64_t v277 = a1 + v276;
  uint64_t v278 = a2 + v276;
  *(void *)uint64_t v277 = *(void *)v278;
  *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
  uint64_t v279 = a3[154];
  uint64_t v280 = a1 + v279;
  uint64_t v281 = a2 + v279;
  *(void *)uint64_t v280 = *(void *)v281;
  *(unsigned char *)(v280 + 8) = *(unsigned char *)(v281 + 8);
  uint64_t v282 = a3[155];
  uint64_t v283 = a1 + v282;
  uint64_t v284 = a2 + v282;
  *(void *)uint64_t v283 = *(void *)v284;
  *(unsigned char *)(v283 + 8) = *(unsigned char *)(v284 + 8);
  uint64_t v285 = a3[156];
  uint64_t v286 = a1 + v285;
  uint64_t v287 = a2 + v285;
  *(void *)uint64_t v286 = *(void *)v287;
  *(unsigned char *)(v286 + 8) = *(unsigned char *)(v287 + 8);
  uint64_t v288 = a3[157];
  uint64_t v289 = a1 + v288;
  uint64_t v290 = a2 + v288;
  *(void *)uint64_t v289 = *(void *)v290;
  *(unsigned char *)(v289 + 8) = *(unsigned char *)(v290 + 8);
  uint64_t v291 = a3[158];
  uint64_t v292 = a1 + v291;
  uint64_t v293 = a2 + v291;
  *(void *)uint64_t v292 = *(void *)v293;
  *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
  uint64_t v294 = a3[159];
  uint64_t v295 = a1 + v294;
  uint64_t v296 = a2 + v294;
  *(void *)uint64_t v295 = *(void *)v296;
  *(unsigned char *)(v295 + 8) = *(unsigned char *)(v296 + 8);
  *(unsigned char *)(a1 + a3[160]) = *(unsigned char *)(a2 + a3[160]);
  uint64_t v297 = a3[161];
  uint64_t v298 = a1 + v297;
  uint64_t v299 = a2 + v297;
  *(void *)uint64_t v298 = *(void *)v299;
  *(unsigned char *)(v298 + 8) = *(unsigned char *)(v299 + 8);
  uint64_t v300 = a3[162];
  uint64_t v301 = a1 + v300;
  uint64_t v302 = a2 + v300;
  *(void *)uint64_t v301 = *(void *)v302;
  *(unsigned char *)(v301 + 8) = *(unsigned char *)(v302 + 8);
  uint64_t v303 = a3[163];
  uint64_t v304 = a1 + v303;
  uint64_t v305 = a2 + v303;
  *(void *)uint64_t v304 = *(void *)v305;
  *(unsigned char *)(v304 + 8) = *(unsigned char *)(v305 + 8);
  uint64_t v306 = a3[164];
  uint64_t v307 = (void *)(a1 + v306);
  uint64_t v308 = (uint64_t *)(a2 + v306);
  uint64_t v310 = *v308;
  uint64_t v309 = v308[1];
  void *v307 = v310;
  v307[1] = v309;
  swift_bridgeObjectRelease();
  uint64_t v311 = a3[165];
  uint64_t v312 = a1 + v311;
  uint64_t v313 = a2 + v311;
  *(void *)uint64_t v312 = *(void *)v313;
  *(unsigned char *)(v312 + 8) = *(unsigned char *)(v313 + 8);
  *(unsigned char *)(a1 + a3[166]) = *(unsigned char *)(a2 + a3[166]);
  *(unsigned char *)(a1 + a3[167]) = *(unsigned char *)(a2 + a3[167]);
  uint64_t v314 = a3[168];
  uint64_t v315 = a1 + v314;
  uint64_t v316 = a2 + v314;
  *(void *)uint64_t v315 = *(void *)v316;
  *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
  uint64_t v317 = a3[169];
  uint64_t v318 = a1 + v317;
  uint64_t v319 = a2 + v317;
  *(void *)uint64_t v318 = *(void *)v319;
  *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
  *(unsigned char *)(a1 + a3[170]) = *(unsigned char *)(a2 + a3[170]);
  uint64_t v320 = a3[171];
  uint64_t v321 = a1 + v320;
  uint64_t v322 = a2 + v320;
  *(_DWORD *)uint64_t v321 = *(_DWORD *)v322;
  *(unsigned char *)(v321 + 4) = *(unsigned char *)(v322 + 4);
  uint64_t v323 = a3[172];
  uint64_t v324 = a1 + v323;
  uint64_t v325 = a2 + v323;
  *(void *)uint64_t v324 = *(void *)v325;
  *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
  uint64_t v326 = a3[173];
  uint64_t v327 = a1 + v326;
  uint64_t v328 = a2 + v326;
  *(void *)uint64_t v327 = *(void *)v328;
  *(unsigned char *)(v327 + 8) = *(unsigned char *)(v328 + 8);
  uint64_t v329 = a3[174];
  uint64_t v330 = a1 + v329;
  uint64_t v331 = a2 + v329;
  *(void *)uint64_t v330 = *(void *)v331;
  *(unsigned char *)(v330 + 8) = *(unsigned char *)(v331 + 8);
  uint64_t v332 = a3[175];
  uint64_t v333 = a1 + v332;
  uint64_t v334 = (uint64_t *)(a2 + v332);
  uint64_t v335 = *v334;
  *(unsigned char *)(v333 + 8) = *((unsigned char *)v334 + 8);
  *(void *)uint64_t v333 = v335;
  uint64_t v336 = a3[176];
  uint64_t v337 = a1 + v336;
  uint64_t v338 = a2 + v336;
  *(void *)uint64_t v337 = *(void *)v338;
  *(unsigned char *)(v337 + 8) = *(unsigned char *)(v338 + 8);
  uint64_t v339 = a3[177];
  uint64_t v340 = a1 + v339;
  uint64_t v341 = a2 + v339;
  *(void *)uint64_t v340 = *(void *)v341;
  *(unsigned char *)(v340 + 8) = *(unsigned char *)(v341 + 8);
  uint64_t v342 = a3[178];
  uint64_t v343 = a1 + v342;
  uint64_t v344 = a2 + v342;
  *(void *)uint64_t v343 = *(void *)v344;
  uint64_t v345 = a3[179];
  char v346 = *(unsigned char *)(a2 + v345);
  *(unsigned char *)(v343 + 8) = *(unsigned char *)(v344 + 8);
  *(unsigned char *)(a1 + v345) = v346;
  uint64_t v347 = a3[180];
  uint64_t v348 = a1 + v347;
  uint64_t v349 = a2 + v347;
  *(void *)uint64_t v348 = *(void *)v349;
  *(unsigned char *)(v348 + 8) = *(unsigned char *)(v349 + 8);
  uint64_t v350 = a3[181];
  uint64_t v351 = a1 + v350;
  uint64_t v352 = a2 + v350;
  *(void *)uint64_t v351 = *(void *)v352;
  *(unsigned char *)(v351 + 8) = *(unsigned char *)(v352 + 8);
  return a1;
}

uint64_t sub_100946564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100946578);
}

uint64_t sub_100946578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 64);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10000588C(&qword_101638CF0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = a1 + *(int *)(a3 + 240);
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = sub_10000588C((uint64_t *)&unk_10163AC90);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = a1 + *(int *)(a3 + 244);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t sub_1009466B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009466CC);
}

uint64_t sub_1009466CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 64) = a2;
  }
  else
  {
    uint64_t v8 = sub_10000588C(&qword_101638CF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 240);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000588C((uint64_t *)&unk_10163AC90);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 244);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100946800()
{
  sub_100946B90(319, (unint64_t *)&qword_101655AB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F)
  {
    sub_100946B90(319, (unint64_t *)&qword_10165C690, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100946B90(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_100946BE4()
{
  unint64_t result = qword_1016528C8;
  if (!qword_1016528C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016528C8);
  }
  return result;
}

unint64_t sub_100946C38()
{
  unint64_t result = qword_1016528D0;
  if (!qword_1016528D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016528D0);
  }
  return result;
}

unint64_t sub_100946C8C()
{
  unint64_t result = qword_1016528D8;
  if (!qword_1016528D8)
  {
    sub_10000592C(&qword_10163ABD8);
    sub_100946D38();
    sub_10094714C(&qword_1016528E8, (void (*)(uint64_t))type metadata accessor for FeatureSupportMatrix);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016528D8);
  }
  return result;
}

unint64_t sub_100946D38()
{
  unint64_t result = qword_1016528E0;
  if (!qword_1016528E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016528E0);
  }
  return result;
}

uint64_t sub_100946D8C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(&qword_10163ABC0);
    sub_10094714C(a2, type metadata accessor for SPDisabledReason);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100946E20()
{
  unint64_t result = qword_101652908;
  if (!qword_101652908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652908);
  }
  return result;
}

uint64_t sub_100946E74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DefaultConfigurationLayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100946ED8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DefaultConfigurationLayer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100946F34()
{
  unint64_t result = qword_101652920;
  if (!qword_101652920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652920);
  }
  return result;
}

unint64_t sub_100946F88()
{
  unint64_t result = qword_101652928;
  if (!qword_101652928)
  {
    sub_10000592C(&qword_10163ABD8);
    sub_100947034();
    sub_10094714C(&qword_101652938, (void (*)(uint64_t))type metadata accessor for FeatureSupportMatrix);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652928);
  }
  return result;
}

unint64_t sub_100947034()
{
  unint64_t result = qword_101652930;
  if (!qword_101652930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652930);
  }
  return result;
}

uint64_t sub_100947088(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(&qword_10163ABE8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1009470F8()
{
  unint64_t result = qword_101652948;
  if (!qword_101652948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652948);
  }
  return result;
}

uint64_t sub_10094714C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100947194()
{
  unint64_t result = qword_101652968;
  if (!qword_101652968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652968);
  }
  return result;
}

uint64_t sub_1009471E8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100947248(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(&qword_10163AB70);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DefaultConfigurationLayer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x4F) {
    goto LABEL_17;
  }
  if (a2 + 177 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 177) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 177;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 177;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 177;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB2;
  int v8 = v6 - 178;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DefaultConfigurationLayer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 177 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 177) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x4F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x4E)
  {
    unsigned int v6 = ((a2 - 79) >> 8) + 1;
    *uint64_t result = a2 - 79;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10094740CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 - 79;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultConfigurationLayer.CodingKeys()
{
  return &type metadata for DefaultConfigurationLayer.CodingKeys;
}

unint64_t sub_100947448()
{
  unint64_t result = qword_101652978;
  if (!qword_101652978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652978);
  }
  return result;
}

unint64_t sub_1009474A0()
{
  unint64_t result = qword_101652980;
  if (!qword_101652980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652980);
  }
  return result;
}

unint64_t sub_1009474F8()
{
  unint64_t result = qword_101652988;
  if (!qword_101652988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652988);
  }
  return result;
}

uint64_t sub_10094754C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001013EF5F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656372756F73 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x496873696C627570 && a2 == 0xEF6C61767265746ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010140C970 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010140C990 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013EF6C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x74537265646E6966 && a2 == 0xEB00000000657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x74736F486E736361 && a2 == 0xEC000000656D614ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010140C9B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010140C9D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013EFB00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013EFB20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EFB40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001013EFB70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013EF690 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013EF6E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001013EF700 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013EF720 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001013EF740 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD00000000000003ALL && a2 == 0x80000001013EF770 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000043 && a2 == 0x80000001013EF7B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EF800 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001013EF820 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013EF850 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EF870 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001013EF8A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013EF8C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013EF8E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013EF900 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x800000010140C9F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000010140CA20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010140CA50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013EF9B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD00000000000002ALL && a2 == 0x80000001013EF9E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001013EFA10 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0xD00000000000002CLL && a2 == 0x80000001013EFA40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013EFA70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EFA90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013EFAC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013EFAE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EFBA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001013EFBD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013EFC00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFC30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0x65746143656C6F72 && a2 == 0xEE00736569726F67 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFC50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x80000001013EFC70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x5365636976726573 && a2 == 0xEC00000065746174 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010140CA70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013EFCC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001013EFCE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013EFD00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFD20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001013EFD40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 54;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001013EFD60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 55;
  }
  else if (a1 == 0x63616542666C6573 && a2 == 0xEE00444955556E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 56;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000010140CA90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 57;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000010140CAB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 58;
  }
  else if (a1 == 0x5279654B7473616CLL && a2 == 0xEF657461446C6C6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 59;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013EFD80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 60;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013EFDA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 61;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFDC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 62;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFDE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 63;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013EFE00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 64;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013EFE20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 65;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010140CAD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 66;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013EFE40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 67;
  }
  else if (a1 == 0x724473776F6C6C61 && a2 == 0xEE00676E69746661 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 68;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010140CAF0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 69;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFE90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 70;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013EFEB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 71;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001013EFED0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 72;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001013EFF00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 73;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001013EFF30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 74;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EFF60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 75;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013EFF90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 76;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010140CB10 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 77;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x800000010140CB30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 78;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013F0B20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 79;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001013F0B40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 80;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F0B70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 81;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001013F0B90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 82;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001013F0BC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 83;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010140CB50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 84;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010140CB70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 85;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x800000010140CB90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 86;
  }
  else if (a1 == 0x6941656C65487369 && a2 == 0xED000073646F5072 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 87;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F01A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 88;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001013F01C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 89;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013EFFB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 90;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013EFFE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 91;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001013F0010 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 92;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013F0040 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 93;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 94;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001013F0090 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 95;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001013F00C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 96;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F00E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 97;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001013EFCA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 98;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013F0110 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 99;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F0130 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 100;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F0150 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 101;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0170 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 102;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001013F01E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 103;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F0200 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 104;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000001013F0230 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 105;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013F0260 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 106;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013F0280 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 107;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013F02A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 108;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F02C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 109;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F02E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 110;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F0300 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 111;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001013F0320 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 112;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013F0350 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 113;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001013F0370 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 114;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F03A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 115;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013F03C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 116;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F03E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 117;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001013F0400 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 118;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001013F0420 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 119;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001013F0450 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 120;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001013F0470 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 121;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x800000010140CBC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 122;
  }
  else if (a1 == 0xD000000000000031 && a2 == 0x800000010140CC00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 123;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x800000010140CC40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 124;
  }
  else if (a1 == 0xD000000000000031 && a2 == 0x800000010140CC80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 125;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001013F04A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 126;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001013F04D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 127;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0500 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 128;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0520 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 129;
  }
  else if (a1 == 0xD000000000000032 && a2 == 0x80000001013F0540 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 130;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013F0580 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 131;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F05A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 132;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000010140CCC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 133;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F05C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 134;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001013F05E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 135;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013F0610 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 136;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001013F0630 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 137;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013F0650 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 138;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013F0670 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 139;
  }
  else if (a1 == 0x657261685378616DLL && a2 == 0xEF737265626D654DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 140;
  }
  else if (a1 == 0x657261685378616DLL && a2 == 0xEE00736D65744964 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 141;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001013F06A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 142;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001013F06C0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 143;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001013F06E0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 144;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F0700 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 145;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001013F0720 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 146;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001013F0740 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 147;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F0770 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 148;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F07A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 149;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001013F07D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 150;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F0800 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 151;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x80000001013F0820 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 152;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001013F0850 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 153;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0880 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 154;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F08A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 155;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001013F08D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 156;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013F0BE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 157;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0C00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 158;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001013F0C20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 159;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013F0C50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 160;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001013F0C70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 161;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013F0C90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 162;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013F0900 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 163;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F0920 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 164;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013F0940 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 165;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001013F0960 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 166;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F0980 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 167;
  }
  else if (a1 == 0xD00000000000002DLL && a2 == 0x80000001013F09A0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 168;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x80000001013F09D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 169;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001013F0A00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 170;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0A20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 171;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001013F0A40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 172;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x80000001013F0A60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 173;
  }
  else if (a1 == 0xD000000000000029 && a2 == 0x80000001013F0A90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 174;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001013F0AC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 175;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0AE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 176;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001013F0B00)
  {
    swift_bridgeObjectRelease();
    return 177;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4294967217;
    }
    else {
      return 4294967218;
    }
  }
}

Swift::Int sub_10094B208(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for BeaconObservation() - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_100B73638(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1009528B0(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_10094B2B0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100B73804(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1009538BC(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_10094B31C@<X0>(unint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    uint64_t v4 = *(char **)(Strong + 280);
    swift_retain();
    sub_10094B440(v3, v4, &v12);
    unint64_t v6 = v12;
    sub_10094E0AC(v3, &v12);
    unint64_t v8 = v12;
    sub_10094ECB4(&v12);
    swift_release();
    unint64_t result = swift_release();
    unint64_t v11 = v12;
  }
  else
  {
    unint64_t v6 = sub_10092F838((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v11 = sub_10092FA94((uint64_t)_swiftEmptyArrayStorage);
    unint64_t result = sub_10092F838((uint64_t)_swiftEmptyArrayStorage);
    unint64_t v8 = result;
  }
  *a1 = v6;
  a1[1] = v11;
  a1[2] = v8;
  return result;
}

uint64_t sub_10094B440@<X0>(uint64_t a1@<X0>, char *a2@<X1>, void *a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v51 = type metadata accessor for BeaconState(0);
  uint64_t v6 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v42 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_101652990);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v44 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v50 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = a1;
  uint64_t v16 = sub_100AD2AD4();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v37 = a3;
    uint64_t v38 = v3;
    uint64_t v36 = v16;
    uint64_t v18 = v16 + 32;
    uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v49 = (void (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v40 = v6;
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    uint64_t v19 = _swiftEmptyDictionarySingleton;
    uint64_t v20 = v44;
    uint64_t v39 = v12;
    uint64_t v46 = v13;
    uint64_t v43 = v14;
    do
    {
      sub_10001D010(v18, (uint64_t)v52);
      uint64_t v25 = v53;
      uint64_t v24 = v54;
      sub_10001CD44(v52, v53);
      uint64_t v26 = (uint64_t)v50;
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v24 + 8) + 8) + 32))(v25);
      sub_10094B8C8(v52, v48, (uint64_t)v12);
      if ((*v45)(v12, 1, v51) == 1)
      {
        sub_10001DAB4((uint64_t)v12, &qword_101652990);
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_1007240CC(v26);
        char v29 = v28;
        swift_bridgeObjectRelease();
        uint64_t v30 = v49;
        if (v29)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v55 = v19;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_100E857D4();
            uint64_t v19 = v55;
          }
          uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
          uint64_t v33 = v46;
          v32(v19[6] + *(void *)(v43 + 72) * v27, v46);
          uint64_t v19 = v55;
          uint64_t v34 = v40;
          uint64_t v20 = v44;
          sub_100952624(v55[7] + *(void *)(v40 + 72) * v27, v44, type metadata accessor for BeaconState);
          sub_100169D28(v27, (uint64_t)v19);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v34 + 56))(v20, 0, 1, v51);
          unint64_t v12 = v39;
        }
        else
        {
          (*v41)(v20, 1, 1, v51);
          uint64_t v32 = *v30;
          uint64_t v33 = v46;
        }
        v32((uint64_t)v50, v33);
        sub_10001DAB4(v20, &qword_101652990);
      }
      else
      {
        uint64_t v21 = v42;
        sub_100952624((uint64_t)v12, v42, type metadata accessor for BeaconState);
        char v22 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v55 = v19;
        uint64_t v23 = v21;
        uint64_t v20 = v44;
        sub_100170B10(v23, v26, v22);
        uint64_t v19 = v55;
        swift_bridgeObjectRelease();
        (*v49)(v26, v46);
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v52);
      v18 += 40;
      --v17;
    }
    while (v17);
    uint64_t result = swift_bridgeObjectRelease();
    a3 = v37;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = _swiftEmptyDictionarySingleton;
  }
  *a3 = v19;
  return result;
}

uint64_t sub_10094B8C8@<X0>(void *a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v320 = a2;
  uint64_t v317 = a3;
  uint64_t v299 = type metadata accessor for SharedBeaconState(0);
  __chkstk_darwin(v299);
  uint64_t v300 = (char *)&v297 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v349 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v5 = __chkstk_darwin(v349);
  uint64_t v298 = (uint64_t *)((char *)&v297 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v348 = (char *)&v297 - v7;
  uint64_t v8 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v8 - 8);
  uint64_t v316 = (uint64_t)&v297 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = type metadata accessor for OwnedBeaconState(0);
  __chkstk_darwin(v311);
  uint64_t v312 = (char *)&v297 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_10163BBB0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v307 = (uint64_t)&v297 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v308 = (char *)&v297 - v14;
  uint64_t v310 = type metadata accessor for ProductInfoState(0);
  uint64_t v15 = __chkstk_darwin(v310);
  uint64_t v309 = (char *)&v297 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v315 = (uint64_t)&v297 - v17;
  uint64_t v342 = type metadata accessor for TimeZone();
  uint64_t v318 = *(void *)(v342 - 8);
  __chkstk_darwin(v342);
  uint64_t v341 = (char *)&v297 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v353 = (int *)type metadata accessor for ShareRecord();
  uint64_t v301 = *((void *)v353 - 1);
  __chkstk_darwin(v353);
  uint64_t v352 = (uint64_t *)((char *)&v297 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v340 = type metadata accessor for ShareState(0);
  uint64_t v339 = *(void *)(v340 - 8);
  __chkstk_darwin(v340);
  uint64_t v351 = (uint64_t)&v297 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000588C(&qword_10164B290);
  __chkstk_darwin(v21 - 8);
  uint64_t v304 = (uint64_t)&v297 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v319 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v23 = __chkstk_darwin(v319);
  uint64_t v322 = (uint64_t)&v297 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v346 = (char *)&v297 - v25;
  uint64_t v26 = sub_10000588C(&qword_10163BB80);
  __chkstk_darwin(v26 - 8);
  uint64_t v345 = (uint64_t)&v297 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v335 = type metadata accessor for KeyAlignmentRecord();
  uint64_t v333 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v335 - 8);
  __chkstk_darwin(v335);
  uint64_t v302 = (uint64_t)&v297 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v338 = (uint64_t)&v297 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v337 = (char *)&v297 - v32;
  uint64_t v327 = (void (**)(char *, uint64_t))sub_10000588C((uint64_t *)&unk_101653D40);
  uint64_t v33 = __chkstk_darwin(v327);
  uint64_t v336 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v297 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v328 = (uint64_t *)((char *)&v297 - v36);
  __chkstk_darwin(v35);
  uint64_t v326 = (uint64_t)&v297 - v37;
  uint64_t v354 = type metadata accessor for UUID();
  int64_t v350 = *(void *)(v354 - 8);
  uint64_t v38 = __chkstk_darwin(v354);
  uint64_t v334 = (char *)&v297 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v41 = (char *)&v297 - v40;
  uint64_t v42 = sub_10000588C(&qword_10163B9E0);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v297 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v344 = type metadata accessor for Date();
  uint64_t v325 = *(void *)(v344 - 8);
  uint64_t v45 = __chkstk_darwin(v344);
  uint64_t v306 = (char *)&v297 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __chkstk_darwin(v45);
  uint64_t v330 = (char *)&v297 - v48;
  uint64_t v49 = __chkstk_darwin(v47);
  uint64_t v329 = (char *)&v297 - v50;
  uint64_t v51 = __chkstk_darwin(v49);
  uint64_t v323 = (char *)&v297 - v52;
  __chkstk_darwin(v51);
  uint64_t v324 = (char *)&v297 - v53;
  uint64_t v54 = type metadata accessor for BeaconNamingRecord();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v58 = (char *)&v297 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  uint64_t v60 = (_OWORD *)((char *)&v297 - v59);
  uint64_t v61 = a1;
  uint64_t v62 = a1[3];
  uint64_t v63 = v61[4];
  uint64_t v64 = v61;
  sub_10001CD44(v61, v62);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v62);
  uint64_t v355 = v320;
  uint64_t v356 = v41;
  QueueSynchronizer.conditionalSync<A>(_:)();
  uint64_t v65 = (int *)v54;
  uint64_t v332 = 0;
  uint64_t v66 = v354;
  int64_t v67 = v350;
  uint64_t v331 = *(void (***)(uint64_t, char *, uint64_t))(v350 + 8);
  uint64_t v314 = v350 + 8;
  ((void (*)(char *, uint64_t))v331)(v41, v354);
  int v68 = (*(uint64_t (**)(char *, uint64_t, int *))(v55 + 48))(v44, 1, v65);
  uint64_t v343 = v41;
  uint64_t v321 = v60;
  uint64_t v313 = v65;
  if (v68 == 1)
  {
    sub_10001DAB4((uint64_t)v44, &qword_10163B9E0);
    UUID.init()();
    long long v69 = v65;
    uint64_t v70 = v64[3];
    uint64_t v71 = v64[4];
    sub_10001CD44(v64, v70);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v71 + 8) + 8) + 32))(v70);
    *uint64_t v60 = xmmword_101348180;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))((char *)v60 + v69[5], v41, v66);
    *(void *)((char *)v60 + v69[7]) = -1;
    long long v72 = (void *)((char *)v60 + v69[8]);
    *long long v72 = 0xD000000000000017;
    v72[1] = 0x800000010140CD30;
    uint64_t v73 = (void *)((char *)v60 + v69[9]);
    *uint64_t v73 = 0;
    v73[1] = 0;
  }
  else
  {
    sub_100952624((uint64_t)v44, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
    sub_100952624((uint64_t)v58, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
  }
  sub_10001D010((uint64_t)v64, (uint64_t)&v361);
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v347;
  sub_10001CEB0(&v361, v74 + 24);
  swift_retain();
  uint64_t v75 = v326;
  unsafeFromAsyncTask<A>(_:)();
  swift_release();
  uint64_t v76 = (uint64_t *)&unk_101653D40;
  uint64_t v77 = v328;
  sub_10001D074(v75, (uint64_t)v328, (uint64_t *)&unk_101653D40);
  uint64_t v78 = sub_10000588C(&qword_10163F7B0);
  uint64_t v79 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48);
  int v80 = v79(v77, 1, v78);
  uint64_t v81 = (uint64_t)v336;
  if (v80 == 1)
  {
    uint64_t v305 = 1;
  }
  else
  {
    uint64_t v305 = *v77;
    uint64_t v76 = &qword_10163F7B0;
  }
  sub_10001DAB4((uint64_t)v77, v76);
  uint64_t v82 = (uint64_t *)&unk_101653D40;
  sub_10001D074(v326, v81, (uint64_t *)&unk_101653D40);
  uint64_t v83 = 1;
  if (v79((uint64_t *)v81, 1, v78) == 1)
  {
    uint64_t v84 = v344;
    uint64_t v85 = v81;
    uint64_t v86 = v325;
    uint64_t v87 = v337;
  }
  else
  {
    uint64_t v88 = v81 + *(int *)(v78 + 36);
    uint64_t v85 = v81;
    uint64_t v86 = v325;
    uint64_t v87 = v337;
    uint64_t v84 = v344;
    (*(void (**)(char *, uint64_t, uint64_t))(v325 + 16))(v337, v88, v344);
    uint64_t v83 = 0;
    uint64_t v82 = &qword_10163F7B0;
  }
  sub_10001DAB4(v85, v82);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v86 + 56))(v87, v83, 1, v84);
  sub_10001D010((uint64_t)v64, (uint64_t)&v361);
  uint64_t v89 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
  uint64_t v337 = (char *)(v86 + 48);
  uint64_t v336 = v89;
  if (v89((uint64_t)v87, 1, v84) == 1)
  {
    uint64_t v90 = (uint64_t)v87;
    uint64_t v91 = v362;
    uint64_t v92 = v363;
    sub_10001CD44(&v361, v362);
    uint64_t v93 = v329;
    (*(void (**)(uint64_t, uint64_t))(v92 + 184))(v91, v92);
    sub_10001DAB4(v90, (uint64_t *)&unk_10163AC90);
  }
  else
  {
    uint64_t v93 = v329;
    (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v329, v87, v84);
  }
  uint64_t v94 = v331;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v361);
  uint64_t v95 = *(uint64_t **)(v86 + 32);
  uint64_t v329 = (char *)(v86 + 32);
  uint64_t v328 = v95;
  ((void (*)(char *, char *, uint64_t))v95)(v324, v93, v84);
  uint64_t v96 = v64[3];
  uint64_t v97 = v64[4];
  sub_10001CD44(v64, v96);
  uint64_t v98 = v343;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v97 + 8) + 8) + 32))(v96);
  uint64_t v99 = v345;
  sub_100B6C53C(v345);
  ((void (*)(char *, uint64_t))v94)(v98, v354);
  uint64_t v100 = v335;
  if (v333[6](v99, 1, v335) == 1)
  {
    sub_10001DAB4(v99, &qword_10163BB80);
    static Date.distantPast.getter();
    uint64_t v303 = 0;
  }
  else
  {
    uint64_t v101 = v99;
    uint64_t v102 = v302;
    sub_100952624(v101, v302, (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
    uint64_t v103 = *(int *)(v100 + 32);
    uint64_t v303 = *(void *)(v102 + *(int *)(v100 + 28));
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v323, v102 + v103, v84);
    sub_10095268C(v102, (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
  }
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v105 = v64[3];
  uint64_t v104 = v64[4];
  sub_10001CD44(v64, v105);
  uint64_t v106 = (uint64_t)v334;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v104 + 8) + 8) + 32))(v105);
  uint64_t v108 = (uint64_t)v332;
  sub_1007B4970(v106, 0, 0, &v360);
  uint64_t v109 = v360;
  ((void (*)(uint64_t, uint64_t))v94)(v106, v354);
  uint64_t v360 = v109;
  swift_bridgeObjectRetain();
  sub_10094B208(&v360);
  uint64_t v302 = v108;
  if (!v108)
  {
    swift_bridgeObjectRelease();
    uint64_t v314 = sub_100954EAC((uint64_t)v360);
    swift_release();
    sub_10001D010((uint64_t)v64, (uint64_t)&v360);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    uint64_t v110 = (uint64_t)v346;
    uint64_t v111 = v319;
    char v112 = swift_dynamicCast();
    uint64_t v113 = (int *)v349;
    uint64_t v114 = v348;
    int64_t v115 = v350;
    if (v112)
    {
      uint64_t v116 = v322;
      sub_100952624(v110, v322, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v117 = (char *)(v116 + *(int *)(v111 + 20));
      uint64_t v118 = *((void *)v320 + 20);
      uint64_t v300 = v117;
      uint64_t v119 = sub_100B6DD88();
      int64_t v120 = v119[2];
      if (v120)
      {
        uint64_t v299 = v118;
        uint64_t v359 = _swiftEmptyArrayStorage;
        sub_1000B835C(0, v120, 0);
        uint64_t v121 = self;
        unint64_t v122 = (*(unsigned __int8 *)(v301 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v301 + 80);
        uint64_t v298 = v119;
        uint64_t v123 = (uint64_t)v119 + v122;
        uint64_t v334 = *(char **)(v301 + 72);
        uint64_t v333 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v318 + 8);
        uint64_t v327 = (void (**)(char *, uint64_t))(v86 + 8);
        uint64_t v332 = (void (*)(char *, uint64_t))(v115 + 16);
        uint64_t v331 = (void (**)(uint64_t, char *, uint64_t))(v115 + 32);
        uint64_t v124 = &selRef_moveItemAtURL_toURL_error_;
        uint64_t v335 = (uint64_t)v121;
        do
        {
          uint64_t v125 = (void (*)(void, void))v352;
          sub_10095540C(v123, (uint64_t)v352, (uint64_t (*)(void))type metadata accessor for ShareRecord);
          uint64_t v126 = (uint64_t)v125 + v353[8];
          uint64_t v127 = v338;
          sub_10001D074(v126, v338, (uint64_t *)&unk_10163AC90);
          int v128 = v336(v127, 1, v84);
          int64_t v350 = v120;
          uint64_t v349 = v123;
          if (v128 == 1)
          {
            sub_10001DAB4(v127, (uint64_t *)&unk_10163AC90);
            uint64_t v348 = 0;
            unint64_t v347 = 0xE000000000000000;
            uint64_t v129 = v342;
            uint64_t v130 = v341;
            uint64_t v131 = v343;
            uint64_t v132 = (void (**)(char *, uint64_t))v333;
          }
          else
          {
            uint64_t v133 = v330;
            ((void (*)(char *, uint64_t, uint64_t))v328)(v330, v127, v84);
            Class isa = Date._bridgeToObjectiveC()().super.isa;
            uint64_t v130 = v341;
            static TimeZone.gmt.getter();
            Class v135 = TimeZone._bridgeToObjectiveC()().super.isa;
            uint64_t v132 = (void (**)(char *, uint64_t))v333;
            uint64_t v129 = v342;
            ((void (*)(char *, uint64_t))*v333)(v130, v342);
            id v136 = [v121 v124[31] isa:v135 1907];

            uint64_t v348 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v347 = v137;

            (*v327)(v133, v84);
            uint64_t v131 = v343;
          }
          uint64_t v138 = v124;
          uint64_t v139 = v353;
          uint64_t v140 = v352;
          (*(void (**)(char *, uint64_t, uint64_t))v332)(v131, (uint64_t)v352 + v353[5], v354);
          Class v141 = Date._bridgeToObjectiveC()().super.isa;
          static TimeZone.gmt.getter();
          Class v142 = TimeZone._bridgeToObjectiveC()().super.isa;
          (*v132)(v130, v129);
          id v143 = [v121 v138[31] v141 v142 1907];

          char v346 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v145 = v144;

          uint64_t v146 = &v140[v139[9]];
          uint64_t v147 = *((void *)v146 + 1);
          uint64_t v148 = *((void *)v146 + 2);
          uint64_t v149 = (uint64_t *)&v140[v139[10]];
          uint64_t v150 = v149[1];
          uint64_t v345 = *v149;
          uint64_t v151 = *(void *)&v140[v139[11]];
          LOBYTE(v139) = v140[v139[12]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v152 = sub_1008F4D3C((char)v139);
          uint64_t v154 = v153;
          uint64_t v155 = v351;
          (*v331)(v351, v131, v354);
          uint64_t v156 = (int *)v340;
          uint64_t v157 = (void *)(v155 + *(int *)(v340 + 20));
          *uint64_t v157 = v346;
          v157[1] = v145;
          uint64_t v158 = (void *)(v155 + v156[6]);
          unint64_t v159 = v347;
          *uint64_t v158 = v348;
          v158[1] = v159;
          uint64_t v160 = (void *)(v155 + v156[7]);
          *uint64_t v160 = v147;
          v160[1] = v148;
          uint64_t v161 = (void *)(v155 + v156[8]);
          *uint64_t v161 = v345;
          v161[1] = v150;
          *(void *)(v155 + v156[9]) = v151;
          uint64_t v162 = (uint64_t *)(v155 + v156[10]);
          *uint64_t v162 = v152;
          v162[1] = v154;
          sub_10095268C((uint64_t)v140, (uint64_t (*)(void))type metadata accessor for ShareRecord);
          uint64_t v163 = v359;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000B835C(0, v163[2] + 1, 1);
            uint64_t v163 = v359;
          }
          int64_t v164 = v350;
          uint64_t v165 = v349;
          unint64_t v167 = v163[2];
          unint64_t v166 = v163[3];
          uint64_t v84 = v344;
          uint64_t v121 = (void *)v335;
          uint64_t v124 = &selRef_moveItemAtURL_toURL_error_;
          if (v167 >= v166 >> 1)
          {
            sub_1000B835C(v166 > 1, v167 + 1, 1);
            uint64_t v163 = v359;
          }
          v163[2] = v167 + 1;
          sub_100952624(v351, (uint64_t)v163+ ((*(unsigned __int8 *)(v339 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v339 + 80))+ *(void *)(v339 + 72) * v167, type metadata accessor for ShareState);
          uint64_t v123 = (uint64_t)&v334[v165];
          int64_t v120 = v164 - 1;
        }
        while (v120);
        swift_bridgeObjectRelease();
        uint64_t v212 = (uint64_t)v300;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v163 = _swiftEmptyArrayStorage;
        uint64_t v212 = (uint64_t)v300;
      }
      uint64_t v220 = sub_100B6CAA8();
      uint64_t v221 = v220[2];
      uint64_t v222 = type metadata accessor for LeashRecord();
      uint64_t v223 = *(void *)(v222 - 8);
      if (v221)
      {
        uint64_t v224 = v304;
        sub_10095540C((uint64_t)v220+ ((*(unsigned __int8 *)(*(void *)(v222 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v222 - 8) + 80)), v304, (uint64_t (*)(void))type metadata accessor for LeashRecord);
        uint64_t v225 = 0;
      }
      else
      {
        uint64_t v225 = 1;
        uint64_t v224 = v304;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v223 + 56))(v224, v225, 1, v222);
      swift_bridgeObjectRelease();
      int v226 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v223 + 48))(v224, 1, v222);
      uint64_t v227 = v224;
      uint64_t v228 = (uint64_t)v308;
      if (v226 == 1)
      {
        sub_10001DAB4(v227, &qword_10164B290);
        LODWORD(v354) = 0;
      }
      else
      {
        uint64_t v229 = *(void *)(v227 + *(int *)(v222 + 24));
        swift_bridgeObjectRetain();
        uint64_t v230 = sub_10095268C(v227, (uint64_t (*)(void))type metadata accessor for LeashRecord);
        __chkstk_darwin(v230);
        *(&v297 - 2) = v212;
        LODWORD(v354) = sub_100A9F998((uint64_t (*)(char *))sub_1005E4C34, (uint64_t)(&v297 - 4), v229);
        swift_bridgeObjectRelease();
      }
      uint64_t v231 = (uint64_t)v309;
      uint64_t v353 = (int *)sub_100698648(v322, v320);
      sub_100AE311C(v212, v228);
      sub_10001D074(v228, v231, &qword_10163BBB0);
      uint64_t v232 = v307;
      sub_10001D074(v228, v307, &qword_10163BBB0);
      uint64_t v233 = type metadata accessor for BeaconProductInfoRecord();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v233 - 8) + 48))(v232, 1, v233) == 1)
      {
        sub_10001DAB4(v228, &qword_10163BBB0);
        sub_10001DAB4(v232, &qword_10163BBB0);
        uint64_t v234 = 0;
        uint64_t v235 = 0;
      }
      else
      {
        int v236 = *(_DWORD *)(v232 + *(int *)(v233 + 68));
        sub_10095268C(v232, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
        uint64_t v234 = sub_10110E1B4(v236);
        uint64_t v235 = v237;
        sub_10001DAB4(v228, &qword_10163BBB0);
      }
      uint64_t v238 = (uint64_t *)(v231 + *(int *)(v310 + 20));
      *uint64_t v238 = v234;
      v238[1] = v235;
      sub_100952624(v231, v315, type metadata accessor for ProductInfoState);
      uint64_t v239 = (int *)v319;
      uint64_t v240 = v322;
      sub_10095540C(v322 + *(int *)(v319 + 24), v316, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
      uint64_t v241 = v325;
      uint64_t v242 = v306;
      (*(void (**)(char *, uint64_t, uint64_t))(v325 + 16))(v306, v240 + v239[8], v84);
      uint64_t v243 = (void (**)(uint64_t, char *, uint64_t))self;
      uint64_t v331 = v243;
      Class v244 = Date._bridgeToObjectiveC()().super.isa;
      uint64_t v245 = v341;
      static TimeZone.gmt.getter();
      Class v246 = TimeZone._bridgeToObjectiveC()().super.isa;
      uint64_t v332 = *(void (**)(char *, uint64_t))(v318 + 8);
      v332(v245, v342);
      id v247 = [v243 stringFromDate:v244 timeZone:v246 formatOptions:1907];

      uint64_t v351 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      int64_t v350 = v248;

      uint64_t v249 = *(uint64_t **)(v241 + 8);
      uint64_t v325 = v241 + 8;
      uint64_t v352 = v249;
      ((void (*)(char *, uint64_t))v249)(v242, v84);
      uint64_t v250 = v313[7];
      uint64_t v251 = (char **)((char *)v321 + v313[8]);
      uint64_t v252 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v251[1];
      char v346 = *v251;
      uint64_t v336 = v252;
      uint64_t v253 = v239[15];
      uint64_t v254 = (unint64_t *)(v322 + v239[14]);
      uint64_t v255 = v254[1];
      unint64_t v347 = *v254;
      uint64_t v338 = v255;
      uint64_t v256 = v239[17];
      uint64_t v335 = *(void *)(v322 + v239[16]);
      uint64_t v257 = v335;
      uint64_t v337 = *(char **)(v322 + v256);
      uint64_t v258 = (uint64_t)v337;
      uint64_t v259 = *(void *)(v322 + v253 + 8);
      uint64_t v348 = *(char **)(v322 + v253);
      uint64_t v339 = v259;
      uint64_t v349 = *(void *)((char *)v321 + v250);
      LOBYTE(v246) = *(unsigned char *)(v322 + v239[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v345 = sub_1012D5698((char)v246);
      uint64_t v343 = v260;
      LODWORD(v340) = sub_100DF1520(v257, v258);
      Class v261 = Date._bridgeToObjectiveC()().super.isa;
      static TimeZone.gmt.getter();
      Class v262 = TimeZone._bridgeToObjectiveC()().super.isa;
      uint64_t v263 = v342;
      uint64_t v264 = v332;
      v332(v245, v342);
      uint64_t v265 = v331;
      id v266 = [v331 stringFromDate:v261 timeZone:v262 formatOptions:1907];

      uint64_t v334 = (char *)static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v333 = v267;

      Class v268 = Date._bridgeToObjectiveC()().super.isa;
      static TimeZone.gmt.getter();
      Class v269 = TimeZone._bridgeToObjectiveC()().super.isa;
      v264(v245, v263);
      id v270 = [v265 stringFromDate:v268 timeZone:v269 formatOptions:1907];

      uint64_t v271 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v273 = v272;

      LOBYTE(v268) = sub_100DC7494(8u, (uint64_t)v353);
      swift_bridgeObjectRelease();
      uint64_t v274 = v322;
      uint64_t v275 = (int *)v311;
      uint64_t v276 = v312;
      sub_10001D074(v322 + v239[7], (uint64_t)&v312[*(int *)(v311 + 96)], &qword_101638CF0);
      LOWORD(v269) = sub_100D1C588();
      uint64_t v277 = v315;
      sub_10095540C(v315, (uint64_t)v276 + v275[26], type metadata accessor for ProductInfoState);
      *uint64_t v276 = 0x61654264656E774FLL;
      v276[1] = 0xEB000000006E6F63;
      sub_100952624(v316, (uint64_t)v276 + v275[5], (uint64_t (*)(void))type metadata accessor for StableIdentifier);
      uint64_t v278 = (void *)((char *)v276 + v275[6]);
      int64_t v279 = v350;
      *uint64_t v278 = v351;
      v278[1] = v279;
      uint64_t v280 = (void *)((char *)v276 + v275[7]);
      uint64_t v281 = v336;
      *uint64_t v280 = v346;
      v280[1] = v281;
      uint64_t v282 = (void *)((char *)v276 + v275[8]);
      uint64_t v283 = v338;
      unint64_t *v282 = v347;
      v282[1] = v283;
      uint64_t v284 = (void *)((char *)v276 + v275[9]);
      uint64_t v285 = v339;
      *uint64_t v284 = v348;
      v284[1] = v285;
      *(void *)((char *)v276 + v275[10]) = v335;
      *(void *)((char *)v276 + v275[11]) = v337;
      *(void *)((char *)v276 + v275[12]) = v349;
      uint64_t v286 = (void *)((char *)v276 + v275[13]);
      uint64_t v287 = v343;
      *uint64_t v286 = v345;
      v286[1] = v287;
      *((unsigned char *)v276 + v275[14]) = v340 & 1;
      *(void *)((char *)v276 + v275[15]) = v305;
      uint64_t v288 = (void *)((char *)v276 + v275[16]);
      uint64_t v289 = v333;
      *uint64_t v288 = v334;
      v288[1] = v289;
      *(void *)((char *)v276 + v275[17]) = 1;
      *(void *)((char *)v276 + v275[18]) = v303;
      uint64_t v290 = (void *)((char *)v276 + v275[19]);
      *uint64_t v290 = v271;
      v290[1] = v273;
      *(void *)((char *)v276 + v275[20]) = v163;
      *(void *)((char *)v276 + v275[21]) = v314;
      *((unsigned char *)v276 + v275[22]) = v354 & 1;
      *((unsigned char *)v276 + v275[23]) = v268 & 1;
      uint64_t v291 = (char *)v276 + v275[25];
      *uint64_t v291 = (_BYTE)v269;
      v291[1] = BYTE1(v269) & 1;
      sub_10095268C(v277, type metadata accessor for ProductInfoState);
      sub_10095268C(v274, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      sub_10001DAB4(v326, (uint64_t *)&unk_101653D40);
      uint64_t v292 = v344;
      uint64_t v293 = (void (*)(char *, uint64_t))v352;
      ((void (*)(char *, uint64_t))v352)(v323, v344);
      v293(v324, v292);
      sub_10095268C((uint64_t)v321, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
      uint64_t v210 = v317;
      sub_100952624((uint64_t)v276, v317, type metadata accessor for OwnedBeaconState);
      uint64_t v211 = type metadata accessor for BeaconState(0);
    }
    else
    {
      int v168 = swift_dynamicCast();
      uint64_t v169 = (uint64_t)v321;
      if (!v168)
      {
        swift_bridgeObjectRelease();
        if (qword_101636F50 != -1) {
          swift_once();
        }
        uint64_t v213 = type metadata accessor for Logger();
        sub_100010324(v213, (uint64_t)qword_10170E9E8);
        sub_10001D010((uint64_t)v64, (uint64_t)&v359);
        uint64_t v214 = Logger.logObject.getter();
        os_log_type_t v215 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v214, v215))
        {
          uint64_t v216 = (uint8_t *)swift_slowAlloc();
          uint64_t v358 = swift_slowAlloc();
          *(_DWORD *)uint64_t v216 = 136315138;
          sub_10001D010((uint64_t)&v359, (uint64_t)&v357);
          uint64_t v217 = String.init<A>(describing:)();
          uint64_t v357 = sub_1008FA0F0(v217, v218, &v358);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v359);
          _os_log_impl((void *)&_mh_execute_header, v214, v215, "Unhandled beacon type: %s", v216, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_10001DAB4(v326, (uint64_t *)&unk_101653D40);
          uint64_t v219 = *(void (**)(char *, uint64_t))(v86 + 8);
          v219(v323, v84);
          v219(v324, v84);
        }
        else
        {

          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v359);
          sub_10001DAB4(v326, (uint64_t *)&unk_101653D40);
          uint64_t v294 = *(void (**)(char *, uint64_t))(v86 + 8);
          v294(v323, v84);
          v294(v324, v84);
        }
        sub_10095268C((uint64_t)v321, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
        uint64_t v295 = type metadata accessor for BeaconState(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v295 - 8) + 56))(v317, 1, 1, v295);
        return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v360);
      }
      uint64_t v170 = (uint64_t)v114;
      uint64_t v171 = (uint64_t)v298;
      sub_100952624(v170, (uint64_t)v298, type metadata accessor for SharedBeaconRecord);
      (*(void (**)(char *, uint64_t, uint64_t))(v115 + 16))(v343, v171 + v113[6], v354);
      uint64_t v172 = v113[8];
      uint64_t v173 = v171 + v113[7];
      uint64_t v174 = *(void (**)(char *, uint64_t))(v173 + 16);
      uint64_t v352 = *(uint64_t **)(v173 + 8);
      uint64_t v332 = v174;
      uint64_t v175 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v171 + v172 + 8);
      uint64_t v353 = *(int **)(v171 + v172);
      uint64_t v333 = v175;
      uint64_t v176 = v313[7];
      uint64_t v177 = (uint64_t *)(v169 + v313[8]);
      uint64_t v178 = (char *)v177[1];
      uint64_t v339 = *v177;
      uint64_t v334 = v178;
      uint64_t v179 = v113[10];
      uint64_t v180 = (uint64_t *)(v171 + v113[9]);
      uint64_t v181 = v180[1];
      uint64_t v345 = *v180;
      uint64_t v335 = v181;
      uint64_t v182 = v113[12];
      char v346 = *(char **)(v171 + v113[11]);
      unint64_t v347 = *(void *)(v171 + v182);
      LODWORD(v348) = *(unsigned __int8 *)(v171 + v113[13]);
      uint64_t v183 = *(void *)(v171 + v179 + 8);
      uint64_t v340 = *(void *)(v171 + v179);
      uint64_t v351 = *(void *)(v169 + v176);
      char v184 = *(unsigned char *)(v171 + v113[16]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v338 = sub_1008F4D3C(v184);
      uint64_t v337 = v185;
      uint64_t v336 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v171 + v113[17]);
      uint64_t v186 = self;
      int64_t v187 = v115;
      Class v188 = Date._bridgeToObjectiveC()().super.isa;
      uint64_t v189 = v341;
      static TimeZone.gmt.getter();
      Class v190 = TimeZone._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(v318 + 8))(v189, v342);
      id v191 = [v186 stringFromDate:v188 timeZone:v190 formatOptions:1907];

      uint64_t v192 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v194 = v193;

      uint64_t v195 = (int *)v299;
      uint64_t v196 = (uint64_t)v300;
      sub_10001D074(v171 + v113[19], (uint64_t)&v300[*(int *)(v299 + 76)], &qword_101638CF0);
      strcpy((char *)v196, "SharedBeacon");
      *(unsigned char *)(v196 + 13) = 0;
      *(_WORD *)(v196 + 14) = -5120;
      (*(void (**)(uint64_t, char *, uint64_t))(v187 + 32))(v196 + v195[5], v343, v354);
      uint64_t v197 = (void *)(v196 + v195[6]);
      uint64_t v198 = v332;
      void *v197 = v352;
      v197[1] = v198;
      uint64_t v199 = (int **)(v196 + v195[7]);
      uint64_t v200 = (int *)v333;
      *uint64_t v199 = v353;
      v199[1] = v200;
      uint64_t v201 = (void *)(v196 + v195[8]);
      uint64_t v202 = v334;
      *uint64_t v201 = v339;
      v201[1] = v202;
      uint64_t v203 = (void *)(v196 + v195[9]);
      uint64_t v204 = v335;
      *uint64_t v203 = v345;
      v203[1] = v204;
      uint64_t v205 = (uint64_t *)(v196 + v195[10]);
      *uint64_t v205 = v340;
      v205[1] = v183;
      *(void *)(v196 + v195[11]) = v346;
      *(void *)(v196 + v195[12]) = v347;
      *(unsigned char *)(v196 + v195[13]) = (_BYTE)v348;
      *(void *)(v196 + v195[14]) = v351;
      uint64_t v206 = (void *)(v196 + v195[15]);
      uint64_t v207 = v337;
      *uint64_t v206 = v338;
      v206[1] = v207;
      *(void *)(v196 + v195[16]) = v336;
      uint64_t v208 = (uint64_t *)(v196 + v195[17]);
      *uint64_t v208 = v192;
      v208[1] = v194;
      *(void *)(v196 + v195[18]) = v314;
      sub_10095268C(v171, type metadata accessor for SharedBeaconRecord);
      sub_10001DAB4(v326, (uint64_t *)&unk_101653D40);
      uint64_t v209 = *(void (**)(char *, uint64_t))(v86 + 8);
      v209(v323, v84);
      v209(v324, v84);
      sub_10095268C((uint64_t)v321, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
      uint64_t v210 = v317;
      sub_100952624(v196, v317, type metadata accessor for SharedBeaconState);
      uint64_t v211 = type metadata accessor for BeaconState(0);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v211 - 8) + 56))(v210, 0, 1, v211);
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v360);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10094E0AC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v60 = type metadata accessor for BeaconState(0);
  uint64_t v4 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (uint64_t)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000588C(&qword_101652990);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v52 = (uint64_t)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v46 - v9;
  uint64_t v57 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v59 = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100AE4A24();
  uint64_t v14 = sub_100A9C06C((uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v15 = sub_100AE4C44();
  uint64_t v16 = sub_100A9C23C((uint64_t)v15);
  swift_bridgeObjectRelease();
  v61[0] = v14;
  sub_1004445F4((uint64_t)v16);
  uint64_t v17 = *(void *)(v61[0] + 16);
  if (!v17)
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = _swiftEmptyDictionarySingleton;
LABEL_24:
    *uint64_t v47 = v19;
    return result;
  }
  v46[0] = v61[0];
  v46[1] = v2;
  uint64_t v18 = v61[0] + 32;
  uint64_t v56 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
  uint64_t v48 = v11 + 16;
  uint64_t v49 = v11;
  uint64_t v53 = v4;
  uint64_t v54 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  uint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v19 = _swiftEmptyDictionarySingleton;
  uint64_t v55 = v10;
  uint64_t v20 = v59;
  uint64_t v50 = a1;
  while (1)
  {
    sub_10001D010(v18, (uint64_t)v61);
    uint64_t v25 = v62;
    uint64_t v26 = v63;
    sub_10001CD44(v61, v62);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
    sub_10094E690((uint64_t)v61, (uint64_t)v10);
    if ((*v56)(v10, 1, v60) == 1)
    {
      sub_10001DAB4((uint64_t)v10, &qword_101652990);
      swift_bridgeObjectRetain();
      unint64_t v27 = sub_1007240CC(v20);
      char v29 = v28;
      swift_bridgeObjectRelease();
      if (v29)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100E857D4();
          uint64_t v19 = v64;
        }
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
        uint64_t v24 = v57;
        v23(v19[6] + *(void *)(v49 + 72) * v27, v57);
        uint64_t v19 = v64;
        uint64_t v22 = v52;
        uint64_t v31 = v53;
        sub_100952624(v64[7] + *(void *)(v53 + 72) * v27, v52, type metadata accessor for BeaconState);
        sub_100169D28(v27, (uint64_t)v19);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v22, 0, 1, v60);
        uint64_t v20 = v59;
      }
      else
      {
        uint64_t v21 = v54;
        uint64_t v22 = v52;
        (*v51)(v52, 1, 1, v60);
        uint64_t v23 = *v21;
        uint64_t v24 = v57;
      }
      v23(v20, v24);
      sub_10001DAB4(v22, &qword_101652990);
      uint64_t v10 = v55;
      goto LABEL_5;
    }
    sub_100952624((uint64_t)v10, v58, type metadata accessor for BeaconState);
    int v32 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = v19;
    unint64_t v34 = sub_1007240CC(v20);
    uint64_t v35 = v19[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    if (v19[3] >= v37)
    {
      if ((v32 & 1) == 0) {
        sub_100E857D4();
      }
    }
    else
    {
      sub_100E747D8(v37, v32);
      unint64_t v39 = sub_1007240CC(v59);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_27;
      }
      unint64_t v34 = v39;
    }
    uint64_t v41 = v57;
    uint64_t v19 = v64;
    if (v38)
    {
      sub_1009525C0(v58, v64[7] + *(void *)(v53 + 72) * v34);
    }
    else
    {
      v64[(v34 >> 6) + 8] |= 1 << v34;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v49 + 16))(v19[6] + *(void *)(v49 + 72) * v34, v59, v41);
      sub_100952624(v58, v19[7] + *(void *)(v53 + 72) * v34, type metadata accessor for BeaconState);
      uint64_t v42 = v19[2];
      BOOL v43 = __OFADD__(v42, 1);
      uint64_t v44 = v42 + 1;
      if (v43) {
        goto LABEL_26;
      }
      v19[2] = v44;
      uint64_t v19 = v64;
    }
    swift_bridgeObjectRelease();
    uint64_t v20 = v59;
    (*v54)(v59, v41);
    uint64_t v10 = v55;
LABEL_5:
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v61);
    v18 += 40;
    if (!--v17)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10094E690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SharedBeaconGroup();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v37 - v17;
  sub_10001D010(a1, (uint64_t)v44);
  sub_10000588C((uint64_t *)&unk_101657950);
  if (swift_dynamicCast())
  {
    sub_100952624((uint64_t)v18, (uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
    uint64_t v19 = MACAddress.description.getter();
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    uint64_t v21 = v13[9];
    int v38 = v16[v13[8]];
    uint64_t v22 = *(void *)&v16[v21 + 8];
    uint64_t v37 = *(void *)&v16[v21];
    type metadata accessor for OwnedBeaconGroup.PairingState(0);
    sub_1009526EC();
    sub_100061B8C();
    sub_100955474(&qword_1016529A0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconGroup.PairingState);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = Dictionary<>.stringRepresentation.getter();
    swift_bridgeObjectRelease();
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v24 = (uint64_t)&v16[v13[6]];
    sub_1007B4970(v24, 0, 0, v43);
    LOBYTE(v24) = sub_1004DA910((uint64_t)v12, v43[0]);
    swift_bridgeObjectRelease();
    sub_10001DAB4((uint64_t)v12, (uint64_t *)&unk_10163AC90);
    sub_10095268C((uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
    *(void *)a2 = 0xD000000000000010;
    *(void *)(a2 + 8) = 0x800000010140CD10;
    uint64_t v26 = v39;
    *(void *)(a2 + 16) = v40;
    *(void *)(a2 + 24) = v26;
    *(unsigned char *)(a2 + 32) = v38;
    *(void *)(a2 + 40) = v37;
    *(void *)(a2 + 48) = v22;
    *(void *)(a2 + 56) = v23;
    *(unsigned char *)(a2 + 64) = v24 & 1;
    uint64_t v27 = type metadata accessor for BeaconState(0);
    goto LABEL_7;
  }
  if (swift_dynamicCast())
  {
    sub_100952624((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedBeaconGroup);
    uint64_t v28 = *(void *)&v7[*(int *)(v4 + 20)];
    swift_bridgeObjectRetain();
    sub_10095268C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SharedBeaconGroup);
    *(void *)a2 = 0xD000000000000011;
    *(void *)(a2 + 8) = 0x800000010140CCF0;
    *(void *)(a2 + 16) = v28;
    uint64_t v27 = type metadata accessor for BeaconState(0);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a2, 0, 1, v27);
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v44);
  }
  if (qword_101636F50 != -1) {
    swift_once();
  }
  uint64_t v29 = type metadata accessor for Logger();
  sub_100010324(v29, (uint64_t)qword_10170E9E8);
  sub_10001D010(a1, (uint64_t)v43);
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v30, v31))
  {
    int v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)int v32 = 136315138;
    sub_10001D010((uint64_t)v43, (uint64_t)v41);
    uint64_t v33 = String.init<A>(describing:)();
    v41[0] = sub_1008FA0F0(v33, v34, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v43);
    _os_log_impl((void *)&_mh_execute_header, v30, v31, "Unhandled beacon group type: %s", v32, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v43);
  }

  uint64_t v35 = type metadata accessor for BeaconState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(a2, 1, 1, v35);
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v44);
}

uint64_t sub_10094ECB4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v52 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for SafeLocation();
  uint64_t v7 = *((void *)v6 - 1);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100B6C090();
  uint64_t v11 = v10[2];
  if (v11)
  {
    uint64_t v41 = a1;
    uint64_t v42 = v1;
    uint64_t v12 = v6[6];
    uint64_t v49 = &v9[v6[5]];
    uint64_t v50 = v12;
    uint64_t v13 = v6[13];
    uint64_t v47 = v6[12];
    uint64_t v48 = v13;
    unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v40[1] = v10;
    uint64_t v15 = (uint64_t)v10 + v14;
    uint64_t v16 = *(void *)(v7 + 72);
    uint64_t v51 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
    uint64_t v43 = v4;
    uint64_t v44 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v45 = v16;
    uint64_t v17 = _swiftEmptyDictionarySingleton;
    uint64_t v18 = (uint64_t)v52;
    uint64_t v46 = v9;
    while (1)
    {
      uint64_t v53 = v11;
      sub_10095540C(v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SafeLocation);
      uint64_t v21 = *v51;
      uint64_t v22 = v3;
      (*v51)(v18, v49, v3);
      uint64_t v23 = *(void *)&v9[v48];
      uint64_t v24 = v9[v47];
      uint64_t v54 = v9[v50];
      swift_bridgeObjectRetain();
      sub_10095268C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SafeLocation);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v55 = v17;
      unint64_t v27 = sub_1007240CC(v18);
      uint64_t v28 = v17[2];
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29)) {
        break;
      }
      char v31 = v26;
      if (v17[3] >= v30)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_100E8581C();
        }
      }
      else
      {
        sub_100E74820(v30, isUniquelyReferenced_nonNull_native);
        unint64_t v32 = sub_1007240CC((uint64_t)v52);
        if ((v31 & 1) != (v33 & 1)) {
          goto LABEL_19;
        }
        unint64_t v27 = v32;
      }
      uint64_t v3 = v22;
      uint64_t v17 = v55;
      if (v31)
      {
        uint64_t v19 = v55[7] + 40 * v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        strcpy((char *)v19, "SafeLocation");
        *(unsigned char *)(v19 + 13) = 0;
        *(_WORD *)(v19 + 14) = -5120;
        *(void *)(v19 + 16) = v23;
        uint64_t v20 = v54;
        *(void *)(v19 + 24) = v24;
        *(void *)(v19 + 32) = v20;
        uint64_t v18 = (uint64_t)v52;
      }
      else
      {
        v55[(v27 >> 6) + 8] |= 1 << v27;
        uint64_t v18 = (uint64_t)v52;
        v21(v17[6] + *(void *)(v43 + 72) * v27, v52, v22);
        uint64_t v34 = v17[7] + 40 * v27;
        strcpy((char *)v34, "SafeLocation");
        *(unsigned char *)(v34 + 13) = 0;
        *(_WORD *)(v34 + 14) = -5120;
        *(void *)(v34 + 16) = v23;
        uint64_t v35 = v54;
        *(void *)(v34 + 24) = v24;
        *(void *)(v34 + 32) = v35;
        uint64_t v36 = v17[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_18;
        }
        v17[2] = v38;
      }
      swift_bridgeObjectRelease();
      (*v44)(v18, v22);
      uint64_t v9 = v46;
      v15 += v45;
      uint64_t v11 = v53 - 1;
      if (v53 == 1)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a1 = v41;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v17 = _swiftEmptyDictionarySingleton;
LABEL_16:
    *a1 = v17;
  }
  return result;
}

uint64_t sub_10094F0C8(uint64_t a1, uint64_t a2)
{
  v2[15] = a1;
  v2[16] = a2;
  uint64_t v3 = type metadata accessor for Date();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  return _swift_task_switch(sub_10094F1E4, 0, 0);
}

uint64_t sub_10094F1E4()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 184) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10094F320;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10094F320(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10094F420, 0, 0);
}

uint64_t sub_10094F420()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[24])
  {
    uint64_t v2 = (void *)v0[16];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    sub_10001CD44(v2, v3);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    sub_10001CD44(v2, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 184))(v5, v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[25] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1006DE288;
    uint64_t v8 = v0[22];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[15];
    return sub_1011044F4(v10, v8, v9);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_1016368D8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170D7E8);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No ObservationStoreService available!", v15, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    void *v16 = 0xD000000000000017;
    v16[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_10094F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  void *v6 = v3;
  v6[1] = sub_10094F764;
  return sub_10094F0C8(a1, a3);
}

uint64_t sub_10094F764()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_10094F91C;
  }
  else
  {
    uint64_t v1 = sub_10094F87C;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10094F87C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_10000588C(&qword_10163F7B0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10094F91C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_10000588C(&qword_10163F7B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10094F9BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = type metadata accessor for SharedBeaconState(0);
  __chkstk_darwin(v26);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OwnedBeaconState(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BeaconState(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of Encoder.singleValueContainer()();
  sub_10095540C(v2, (uint64_t)v11, type metadata accessor for BeaconState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100952624((uint64_t)v11, (uint64_t)v5, type metadata accessor for SharedBeaconState);
      sub_1000BD078((uint64_t)v36, v37);
      sub_100955474(&qword_101652E38, (void (*)(uint64_t))type metadata accessor for SharedBeaconState);
      dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
      uint64_t v12 = type metadata accessor for SharedBeaconState;
      uint64_t v13 = (uint64_t)v5;
      goto LABEL_7;
    case 2u:
      uint64_t v14 = *((void *)v11 + 1);
      uint64_t v15 = *((void *)v11 + 2);
      uint64_t v16 = *((void *)v11 + 3);
      char v17 = v11[32];
      uint64_t v18 = *((void *)v11 + 5);
      uint64_t v19 = *((void *)v11 + 6);
      uint64_t v20 = *((void *)v11 + 7);
      char v21 = v11[64];
      uint64_t v27 = *(void *)v11;
      uint64_t v28 = v14;
      uint64_t v29 = v15;
      uint64_t v30 = v16;
      char v31 = v17;
      uint64_t v32 = v18;
      uint64_t v33 = v19;
      uint64_t v34 = v20;
      char v35 = v21;
      sub_1000BD078((uint64_t)v36, v37);
      sub_1009669CC();
      dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3u:
      uint64_t v22 = *((void *)v11 + 1);
      uint64_t v23 = *((void *)v11 + 2);
      uint64_t v27 = *(void *)v11;
      uint64_t v28 = v22;
      uint64_t v29 = v23;
      sub_1000BD078((uint64_t)v36, v37);
      sub_100966978();
      dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
LABEL_5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      sub_100952624((uint64_t)v11, (uint64_t)v8, type metadata accessor for OwnedBeaconState);
      sub_1000BD078((uint64_t)v36, v37);
      sub_100955474(&qword_101652E40, (void (*)(uint64_t))type metadata accessor for OwnedBeaconState);
      dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
      uint64_t v12 = type metadata accessor for OwnedBeaconState;
      uint64_t v13 = (uint64_t)v8;
LABEL_7:
      sub_10095268C(v13, v12);
      break;
  }
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v36);
}

uint64_t sub_10094FDA8(void *a1)
{
  return sub_10094F9BC(a1);
}

uint64_t sub_10094FDC0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101652E48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100966A20();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    v10[15] = 1;
    sub_10000588C((uint64_t *)&unk_1016636E0);
    sub_100966A74((unint64_t *)&qword_101663710, (uint64_t *)&unk_1016636E0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[14] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v10[13] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10094FFB8()
{
  unint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x6C61766F72707061;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100950058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100967AB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100950080(uint64_t a1)
{
  unint64_t v2 = sub_100966A20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009500BC(uint64_t a1)
{
  unint64_t v2 = sub_100966A20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009500F8(void *a1)
{
  return sub_10094FDC0(a1);
}

uint64_t sub_100950134(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_101652DC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100966710();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for BeaconProductInfoRecord();
  sub_100955474(&qword_10164F250, (void (*)(uint64_t))type metadata accessor for BeaconProductInfoRecord);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ProductInfoState(0);
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1009502EC()
{
  if (*v0) {
    return 0x696C696261706163;
  }
  else {
    return 0x49746375646F7270;
  }
}

uint64_t sub_100950338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100967C7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100950360(uint64_t a1)
{
  unint64_t v2 = sub_100966710();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095039C(uint64_t a1)
{
  unint64_t v2 = sub_100966710();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009503D8(void *a1)
{
  return sub_100950134(a1);
}

unint64_t sub_1009503F0(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6449656C62617473;
      break;
    case 2:
      unint64_t result = 0x44676E6972696170;
      break;
    case 3:
      unint64_t result = 1701667182;
      break;
    case 4:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 5:
      unint64_t result = 0x65566D6574737973;
      break;
    case 6:
      unint64_t result = 0x6449726F646E6576;
      break;
    case 7:
    case 22:
      unint64_t result = 0x49746375646F7270;
      break;
    case 8:
      unint64_t result = 1701605234;
      break;
    case 9:
      unint64_t result = 0x4C79726574746162;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
    case 13:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000024;
      break;
    case 16:
      unint64_t result = 0x736572616873;
      break;
    case 17:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 19:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 20:
      unint64_t result = 0x644970756F7267;
      break;
    case 21:
      unint64_t result = 0x644974726170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009506A0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101652DD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100966764();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for OwnedBeaconState(0);
    LOBYTE(v12) = 1;
    type metadata accessor for StableIdentifier();
    sub_100955474((unint64_t *)&unk_10165DD90, (void (*)(uint64_t))type metadata accessor for StableIdentifier);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 7;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 8;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 9;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 10;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 11;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 12;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 13;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 14;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 15;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 80));
    HIBYTE(v11) = 16;
    sub_10000588C(&qword_101652DE0);
    sub_1009667B8();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 84));
    HIBYTE(v11) = 17;
    sub_10000588C(&qword_101652DF8);
    sub_10096685C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 18;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 19;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 20;
    type metadata accessor for UUID();
    sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 21;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 22;
    type metadata accessor for ProductInfoState(0);
    sub_100955474(&qword_101652E10, (void (*)(uint64_t))type metadata accessor for ProductInfoState);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100950D00(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7461446572616873;
      break;
    case 2:
      unint64_t result = 0x6974617269707865;
      break;
    case 3:
      unint64_t result = 0x6148656572616873;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0xD000000000000011;
      break;
    case 6:
      unint64_t result = 0x7079546572616873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100950E08(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_101652DB0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_1009666BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for UUID();
  sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for ShareState(0);
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[11] = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[10] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[9] = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1009510B0()
{
  return sub_1009503F0(*v0);
}

uint64_t sub_1009510B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100967DA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1009510E0(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_1009510EC(uint64_t a1)
{
  unint64_t v2 = sub_100966764();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100951128(uint64_t a1)
{
  unint64_t v2 = sub_100966764();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100951164(void *a1)
{
  return sub_1009506A0(a1);
}

unint64_t sub_10095117C()
{
  return sub_100950D00(*v0);
}

uint64_t sub_100951184@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009686C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009511AC(uint64_t a1)
{
  unint64_t v2 = sub_1009666BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009511E8(uint64_t a1)
{
  unint64_t v2 = sub_1009666BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100951224(void *a1)
{
  return sub_100950E08(a1);
}

unint64_t sub_10095123C(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6564496572616873;
      break;
    case 2:
      unint64_t result = 0x6E614872656E776FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 1701667182;
      break;
    case 5:
      unint64_t result = 0x6C65646F6DLL;
      break;
    case 6:
      unint64_t result = 0x65566D6574737973;
      break;
    case 7:
      unint64_t result = 0x6449726F646E6576;
      break;
    case 8:
      unint64_t result = 0x49746375646F7270;
      break;
    case 9:
      unint64_t result = 0x6465747065636361;
      break;
    case 10:
      unint64_t result = 1701605234;
      break;
    case 11:
      unint64_t result = 0x7079546572616873;
      break;
    case 12:
      unint64_t result = 0x7369747265766461;
      break;
    case 13:
      unint64_t result = 0x7461446572616873;
      break;
    case 14:
      unint64_t result = 0x746176726573626FLL;
      break;
    case 15:
      unint64_t result = 0x644970756F7267;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10095143C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101652E18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100966924();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for SharedBeaconState(0);
    LOBYTE(v12) = 1;
    type metadata accessor for UUID();
    sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 6;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 7;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 8;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 9;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 10;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 11;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 12;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v12) = 13;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 72));
    v11[15] = 14;
    sub_10000588C(&qword_101652DF8);
    sub_10096685C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v12) = 15;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1009518B4()
{
  return sub_10095123C(*v0);
}

uint64_t sub_1009518BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009689D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009518E4(uint64_t a1)
{
  unint64_t v2 = sub_100966924();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100951920(uint64_t a1)
{
  unint64_t v2 = sub_100966924();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10095195C(void *a1)
{
  return sub_10095143C(a1);
}

unint64_t sub_100951974(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657264644163616DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 1701667182;
      break;
    case 4:
      unint64_t result = 0x614D6E6F63616562;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100951A40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101652F18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100969698();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v15 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v14 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 56);
    v10[15] = 4;
    sub_10000588C(&qword_10163BD60);
    sub_1009696EC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v10[14] = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_100951C64()
{
  return sub_100951974(*v0);
}

uint64_t sub_100951C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009690B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100951C94(uint64_t a1)
{
  unint64_t v2 = sub_100969698();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100951CD0(uint64_t a1)
{
  unint64_t v2 = sub_100969698();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100951D0C(void *a1)
{
  return sub_100951A40(a1);
}

uint64_t sub_100951D50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_10000588C(&qword_101652F00);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100969644();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_10000588C((uint64_t *)&unk_101653DC0);
    sub_100966A74(&qword_101652F10, (uint64_t *)&unk_101653DC0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100951F0C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v8 = sub_10000588C(&qword_101652D60);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100966438();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v15 = a2;
  char v14 = 0;
  sub_10000588C(&qword_101652D70);
  sub_10096648C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    uint64_t v15 = v13;
    char v14 = 1;
    sub_10000588C(&qword_101652D88);
    sub_100966568();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v15 = a4;
    char v14 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1009520F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_10000588C(&qword_101652DA0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100966668();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_10000588C(&qword_101654A30);
    sub_100176E3C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100952290()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1009522C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100969320(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009522F0(uint64_t a1)
{
  unint64_t v2 = sub_100969644();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10095232C(uint64_t a1)
{
  unint64_t v2 = sub_100969644();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952368(void *a1)
{
  return sub_100951D50(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_100952388()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x70756F72476C6C61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F636165426C6C61;
  }
}

uint64_t sub_1009523F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100969400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952418(uint64_t a1)
{
  unint64_t v2 = sub_100966438();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952454(uint64_t a1)
{
  unint64_t v2 = sub_100966438();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952490(void *a1)
{
  return sub_100951F0C(a1, *v1, v1[1], v1[2]);
}

uint64_t sub_1009524B0()
{
  if (*v0) {
    return 0x7365746164;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1009524E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100969568(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100952508(uint64_t a1)
{
  unint64_t v2 = sub_100966668();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100952544(uint64_t a1)
{
  unint64_t v2 = sub_100966668();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100952580(void *a1)
{
  return sub_1009520F8(a1, *v1, v1[1], v1[2]);
}

uint64_t type metadata accessor for BeaconState(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101652D28);
}

uint64_t sub_1009525C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BeaconState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100952624(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10095268C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1009526EC()
{
  unint64_t result = qword_101652998;
  if (!qword_101652998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652998);
  }
  return result;
}

uint64_t type metadata accessor for SharedBeaconState(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101652C48);
}

uint64_t type metadata accessor for OwnedBeaconState(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101652B60);
}

uint64_t type metadata accessor for ProductInfoState(uint64_t a1)
{
  return sub_1000F4EA4(a1, (uint64_t *)&unk_101652AC8);
}

uint64_t type metadata accessor for ShareState(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101652A20);
}

uint64_t sub_1009527C0()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100952800(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001D2E4;
  return sub_10094F6B0(a1, v4, v1 + 24);
}

Swift::Int sub_1009528B0(uint64_t *a1)
{
  uint64_t v199 = sub_10000588C(&qword_1016529B8);
  uint64_t v3 = __chkstk_darwin(v199);
  uint64_t v209 = (char *)&v176 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v208 = (char *)&v176 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v189 = (char *)&v176 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  Class v188 = (char *)&v176 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v181 = (char *)&v176 - v12;
  __chkstk_darwin(v11);
  uint64_t v180 = (char *)&v176 - v13;
  uint64_t v202 = type metadata accessor for BeaconObservation();
  uint64_t v191 = *(void *)(v202 - 8);
  uint64_t v14 = __chkstk_darwin(v202);
  uint64_t v183 = (uint64_t)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v203 = (uint64_t)&v176 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v176 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (char *)&v176 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v187 = (uint64_t)&v176 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v186 = (uint64_t)&v176 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v179 = (uint64_t)&v176 - v29;
  __chkstk_darwin(v28);
  uint64_t v178 = (uint64_t)&v176 - v30;
  Swift::Int v31 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v31);
  if (result >= v31)
  {
    if (v31 < 0) {
      goto LABEL_149;
    }
    if (v31) {
      return sub_100953F7C(0, v31, 1, a1);
    }
    return result;
  }
  if (v31 >= 0) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v31 + 1;
  }
  if (v31 < -1) {
    goto LABEL_157;
  }
  uint64_t v193 = v23;
  uint64_t v194 = v20;
  Swift::Int v177 = result;
  uint64_t v192 = v1;
  if (v31 < 2)
  {
    uint64_t v37 = (char *)_swiftEmptyArrayStorage;
    unint64_t v190 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
    uint64_t v176 = _swiftEmptyArrayStorage;
    if (v31 != 1)
    {
      unint64_t v39 = _swiftEmptyArrayStorage[2];
LABEL_113:
      if (v39 >= 2)
      {
        uint64_t v168 = *a1;
        uint64_t v169 = v176;
        while (1)
        {
          unint64_t v170 = v39 - 2;
          if (v39 < 2) {
            goto LABEL_144;
          }
          if (!v168) {
            goto LABEL_156;
          }
          uint64_t v171 = *(void *)&v37[16 * v170 + 32];
          uint64_t v172 = *(void *)&v37[16 * v39 + 24];
          uint64_t v173 = v192;
          sub_1009543D0(v168 + *(void *)(v191 + 72) * v171, v168 + *(void *)(v191 + 72) * *(void *)&v37[16 * v39 + 16], v168 + *(void *)(v191 + 72) * v172, v190);
          uint64_t v192 = v173;
          if (v173) {
            goto LABEL_126;
          }
          if (v172 < v171) {
            goto LABEL_145;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_100B73584((uint64_t)v37);
          }
          if (v170 >= *((void *)v37 + 2)) {
            goto LABEL_146;
          }
          uint64_t v174 = &v37[16 * v170 + 32];
          *(void *)uint64_t v174 = v171;
          *((void *)v174 + 1) = v172;
          unint64_t v175 = *((void *)v37 + 2);
          if (v39 > v175) {
            goto LABEL_147;
          }
          memmove(&v37[16 * v39 + 16], &v37[16 * v39 + 32], 16 * (v175 - v39));
          *((void *)v37 + 2) = v175 - 1;
          unint64_t v39 = v175 - 1;
          if (v175 <= 2) {
            goto LABEL_126;
          }
        }
      }
LABEL_125:
      uint64_t v169 = v176;
LABEL_126:
      swift_bridgeObjectRelease();
      v169[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v34 = v33 >> 1;
    uint64_t v35 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v35 + 16) = v34;
    uint64_t v36 = *(unsigned __int8 *)(v191 + 80);
    uint64_t v176 = (void *)v35;
    unint64_t v190 = v35 + ((v36 + 32) & ~v36);
  }
  Swift::Int v38 = 0;
  uint64_t v37 = (char *)_swiftEmptyArrayStorage;
  uint64_t v195 = a1;
  while (1)
  {
    Swift::Int v40 = v38;
    Swift::Int v41 = v38 + 1;
    uint64_t v185 = v37;
    if (v38 + 1 < v31)
    {
      uint64_t v42 = *a1;
      uint64_t v43 = *(void *)(v191 + 72);
      Swift::Int v197 = v38 + 1;
      uint64_t v44 = v178;
      sub_10095540C(v42 + v43 * v41, v178, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      Swift::Int v184 = v40;
      uint64_t v182 = v42;
      uint64_t v207 = v43;
      uint64_t v45 = v42 + v43 * v40;
      uint64_t v46 = v179;
      sub_10095540C(v45, v179, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v48 = *(int *)(v202 + 20);
      uint64_t v47 = *(int *)(v202 + 24);
      uint64_t v49 = *(char *)(v44 + v47);
      uint64_t v50 = v44 + v48;
      uint64_t v51 = *(char *)(v46 + v47);
      uint64_t v205 = v46 + v48;
      uint64_t v52 = v180;
      *uint64_t v180 = v49;
      uint64_t v53 = v199;
      uint64_t v54 = &v52[*(int *)(v199 + 48)];
      uint64_t v55 = type metadata accessor for Date();
      uint64_t v56 = *(void *)(v55 - 8);
      uint64_t v57 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v56 + 16);
      uint64_t v58 = v56 + 16;
      Swift::Int v200 = (Swift::Int)v54;
      v57(v54, v50, v55);
      uint64_t v59 = v181;
      *uint64_t v181 = v51;
      uint64_t v60 = &v59[*(int *)(v53 + 48)];
      uint64_t v201 = v57;
      uint64_t v198 = v58;
      v57(v60, v205, v55);
      unint64_t v61 = qword_10136F618[v49];
      unint64_t v62 = qword_10136F618[v51];
      uint64_t v204 = v55;
      if (v61 == v62)
      {
        sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
        LODWORD(v205) = dispatch thunk of static Comparable.< infix(_:_:)();
      }
      else
      {
        LODWORD(v205) = v61 < v62;
      }
      sub_10001DAB4((uint64_t)v181, &qword_1016529B8);
      sub_10001DAB4((uint64_t)v180, &qword_1016529B8);
      sub_10095268C(v179, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      sub_10095268C(v178, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      Swift::Int v40 = v184;
      Swift::Int v41 = v184 + 2;
      uint64_t v37 = v185;
      if (v184 + 2 >= v31)
      {
        a1 = v195;
      }
      else
      {
        v197 *= v207;
        uint64_t v63 = v182;
        Swift::Int v196 = v207 * v41;
        Swift::Int v206 = v31;
        while (1)
        {
          Swift::Int v200 = v41;
          uint64_t v64 = v186;
          sub_10095540C(v63 + v196, v186, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v65 = v187;
          sub_10095540C(v63 + v197, v187, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v66 = v201;
          uint64_t v68 = *(int *)(v202 + 20);
          uint64_t v67 = *(int *)(v202 + 24);
          uint64_t v69 = *(char *)(v64 + v67);
          uint64_t v70 = v64 + v68;
          uint64_t v71 = *(char *)(v65 + v67);
          uint64_t v72 = v65 + v68;
          uint64_t v73 = v188;
          *Class v188 = v69;
          uint64_t v74 = v199;
          uint64_t v75 = v204;
          v66(&v73[*(int *)(v199 + 48)], v70, v204);
          uint64_t v76 = v189;
          *uint64_t v189 = v71;
          v66(&v76[*(int *)(v74 + 48)], v72, v75);
          unint64_t v77 = qword_10136F618[v69];
          unint64_t v78 = qword_10136F618[v71];
          if (v77 == v78)
          {
            sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
            int v79 = dispatch thunk of static Comparable.< infix(_:_:)();
          }
          else
          {
            int v79 = v77 < v78;
          }
          sub_10001DAB4((uint64_t)v189, &qword_1016529B8);
          sub_10001DAB4((uint64_t)v188, &qword_1016529B8);
          sub_10095268C(v187, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          sub_10095268C(v186, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v37 = v185;
          Swift::Int v31 = v206;
          if ((v205 ^ v79)) {
            break;
          }
          Swift::Int v41 = v200 + 1;
          v63 += v207;
          if (v206 == v200 + 1)
          {
            Swift::Int v41 = v206;
            a1 = v195;
            goto LABEL_29;
          }
        }
        a1 = v195;
        Swift::Int v41 = v200;
LABEL_29:
        Swift::Int v40 = v184;
      }
      uint64_t v80 = v182;
      if (v205)
      {
        if (v41 < v40) {
          goto LABEL_150;
        }
        if (v40 < v41)
        {
          uint64_t v81 = 0;
          Swift::Int v82 = v40;
          uint64_t v83 = v207 * (v41 - 1);
          Swift::Int v84 = v41 * v207;
          Swift::Int v85 = v82;
          uint64_t v86 = v82 * v207;
          Swift::Int v206 = v31;
          do
          {
            if (v85 != v41 + v81 - 1)
            {
              if (!v80) {
                goto LABEL_155;
              }
              unint64_t v88 = v80 + v86;
              uint64_t v205 = v80 + v83;
              uint64_t v89 = v80;
              sub_100952624(v80 + v86, v183, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
              if (v86 < v83 || v88 >= v89 + v84)
              {
                uint64_t v87 = v205;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v87 = v205;
                if (v86 != v83) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_100952624(v183, v87, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
              Swift::Int v31 = v206;
              uint64_t v80 = v182;
            }
            ++v85;
            --v81;
            v83 -= v207;
            v84 -= v207;
            v86 += v207;
          }
          while (v85 < v41 + v81);
          a1 = v195;
          Swift::Int v40 = v184;
        }
      }
    }
    if (v41 < v31)
    {
      if (__OFSUB__(v41, v40)) {
        goto LABEL_148;
      }
      if (v41 - v40 < v177) {
        break;
      }
    }
LABEL_65:
    if (v41 < v40) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v200 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v37 = sub_100B729CC(0, *((void *)v37 + 2) + 1, 1, v37);
    }
    unint64_t v118 = *((void *)v37 + 2);
    unint64_t v117 = *((void *)v37 + 3);
    unint64_t v39 = v118 + 1;
    if (v118 >= v117 >> 1) {
      uint64_t v37 = sub_100B729CC((char *)(v117 > 1), v118 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v39;
    uint64_t v119 = v37 + 32;
    int64_t v120 = &v37[16 * v118 + 32];
    Swift::Int v121 = v200;
    *(void *)int64_t v120 = v40;
    *((void *)v120 + 1) = v121;
    if (v118)
    {
      while (1)
      {
        unint64_t v122 = v39 - 1;
        if (v39 >= 4)
        {
          uint64_t v127 = &v119[16 * v39];
          uint64_t v128 = *((void *)v127 - 8);
          uint64_t v129 = *((void *)v127 - 7);
          BOOL v133 = __OFSUB__(v129, v128);
          uint64_t v130 = v129 - v128;
          if (v133) {
            goto LABEL_132;
          }
          uint64_t v132 = *((void *)v127 - 6);
          uint64_t v131 = *((void *)v127 - 5);
          BOOL v133 = __OFSUB__(v131, v132);
          uint64_t v125 = v131 - v132;
          char v126 = v133;
          if (v133) {
            goto LABEL_133;
          }
          unint64_t v134 = v39 - 2;
          Class v135 = &v119[16 * v39 - 32];
          uint64_t v137 = *(void *)v135;
          uint64_t v136 = *((void *)v135 + 1);
          BOOL v133 = __OFSUB__(v136, v137);
          uint64_t v138 = v136 - v137;
          if (v133) {
            goto LABEL_135;
          }
          BOOL v133 = __OFADD__(v125, v138);
          uint64_t v139 = v125 + v138;
          if (v133) {
            goto LABEL_138;
          }
          if (v139 >= v130)
          {
            uint64_t v157 = &v119[16 * v122];
            uint64_t v159 = *(void *)v157;
            uint64_t v158 = *((void *)v157 + 1);
            BOOL v133 = __OFSUB__(v158, v159);
            uint64_t v160 = v158 - v159;
            if (v133) {
              goto LABEL_142;
            }
            BOOL v150 = v125 < v160;
            goto LABEL_102;
          }
        }
        else
        {
          if (v39 != 3)
          {
            uint64_t v151 = *((void *)v37 + 4);
            uint64_t v152 = *((void *)v37 + 5);
            BOOL v133 = __OFSUB__(v152, v151);
            uint64_t v144 = v152 - v151;
            char v145 = v133;
            goto LABEL_96;
          }
          uint64_t v124 = *((void *)v37 + 4);
          uint64_t v123 = *((void *)v37 + 5);
          BOOL v133 = __OFSUB__(v123, v124);
          uint64_t v125 = v123 - v124;
          char v126 = v133;
        }
        if (v126) {
          goto LABEL_134;
        }
        unint64_t v134 = v39 - 2;
        uint64_t v140 = &v119[16 * v39 - 32];
        uint64_t v142 = *(void *)v140;
        uint64_t v141 = *((void *)v140 + 1);
        BOOL v143 = __OFSUB__(v141, v142);
        uint64_t v144 = v141 - v142;
        char v145 = v143;
        if (v143) {
          goto LABEL_137;
        }
        uint64_t v146 = &v119[16 * v122];
        uint64_t v148 = *(void *)v146;
        uint64_t v147 = *((void *)v146 + 1);
        BOOL v133 = __OFSUB__(v147, v148);
        uint64_t v149 = v147 - v148;
        if (v133) {
          goto LABEL_140;
        }
        if (__OFADD__(v144, v149)) {
          goto LABEL_141;
        }
        if (v144 + v149 >= v125)
        {
          BOOL v150 = v125 < v149;
LABEL_102:
          if (v150) {
            unint64_t v122 = v134;
          }
          goto LABEL_104;
        }
LABEL_96:
        if (v145) {
          goto LABEL_136;
        }
        uint64_t v153 = &v119[16 * v122];
        uint64_t v155 = *(void *)v153;
        uint64_t v154 = *((void *)v153 + 1);
        BOOL v133 = __OFSUB__(v154, v155);
        uint64_t v156 = v154 - v155;
        if (v133) {
          goto LABEL_139;
        }
        if (v156 < v144) {
          goto LABEL_14;
        }
LABEL_104:
        unint64_t v161 = v122 - 1;
        if (v122 - 1 >= v39)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!*a1) {
          goto LABEL_154;
        }
        uint64_t v162 = &v119[16 * v161];
        uint64_t v163 = *(void *)v162;
        int64_t v164 = &v119[16 * v122];
        uint64_t v165 = *((void *)v164 + 1);
        uint64_t v166 = v192;
        sub_1009543D0(*a1 + *(void *)(v191 + 72) * *(void *)v162, *a1 + *(void *)(v191 + 72) * *(void *)v164, *a1 + *(void *)(v191 + 72) * v165, v190);
        uint64_t v192 = v166;
        if (v166) {
          goto LABEL_125;
        }
        if (v165 < v163) {
          goto LABEL_129;
        }
        if (v122 > *((void *)v37 + 2)) {
          goto LABEL_130;
        }
        *(void *)uint64_t v162 = v163;
        *(void *)&v119[16 * v161 + 8] = v165;
        unint64_t v167 = *((void *)v37 + 2);
        if (v122 >= v167) {
          goto LABEL_131;
        }
        unint64_t v39 = v167 - 1;
        memmove(&v119[16 * v122], v164 + 16, 16 * (v167 - 1 - v122));
        *((void *)v37 + 2) = v167 - 1;
        if (v167 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v39 = 1;
LABEL_14:
    Swift::Int v31 = a1[1];
    Swift::Int v38 = v200;
    if (v200 >= v31) {
      goto LABEL_113;
    }
  }
  if (__OFADD__(v40, v177)) {
    goto LABEL_151;
  }
  if (v40 + v177 >= v31) {
    Swift::Int v90 = v31;
  }
  else {
    Swift::Int v90 = v40 + v177;
  }
  if (v90 >= v40)
  {
    if (v41 != v90)
    {
      Swift::Int v184 = v40;
      Swift::Int v91 = *(void *)(v191 + 72);
      uint64_t v92 = v91 * (v41 - 1);
      Swift::Int v196 = v91;
      Swift::Int v93 = v41 * v91;
      uint64_t v94 = (uint64_t)v193;
      uint64_t v95 = (uint64_t)v194;
      uint64_t v182 = v90;
      do
      {
        uint64_t v97 = 0;
        Swift::Int v98 = v184;
        Swift::Int v200 = v41;
        Swift::Int v197 = v93;
        uint64_t v198 = v92;
        while (1)
        {
          Swift::Int v206 = v98;
          uint64_t v99 = *a1;
          uint64_t v205 = v93 + v97;
          sub_10095540C(v93 + v97 + v99, v94, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v204 = v92 + v97;
          sub_10095540C(v92 + v97 + v99, v95, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v101 = *(int *)(v202 + 20);
          uint64_t v100 = *(int *)(v202 + 24);
          uint64_t v102 = *(char *)(v94 + v100);
          uint64_t v103 = v94 + v101;
          uint64_t v104 = *(char *)(v95 + v100);
          uint64_t v207 = v95 + v101;
          uint64_t v105 = v208;
          *uint64_t v208 = v102;
          uint64_t v106 = v199;
          uint64_t v107 = &v105[*(int *)(v199 + 48)];
          uint64_t v108 = type metadata accessor for Date();
          uint64_t v109 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v108 - 8) + 16);
          uint64_t v201 = (void (*)(unsigned char *, uint64_t, uint64_t))v107;
          v109(v107, v103, v108);
          uint64_t v110 = v209;
          *uint64_t v209 = v104;
          v109(&v110[*(int *)(v106 + 48)], v207, v108);
          unint64_t v111 = qword_10136F618[v102];
          unint64_t v112 = qword_10136F618[v104];
          if (v111 == v112)
          {
            sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v113 = dispatch thunk of static Comparable.< infix(_:_:)();
          }
          else
          {
            char v113 = v111 < v112;
          }
          sub_10001DAB4((uint64_t)v209, &qword_1016529B8);
          sub_10001DAB4((uint64_t)v208, &qword_1016529B8);
          uint64_t v95 = (uint64_t)v194;
          sub_10095268C((uint64_t)v194, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v94 = (uint64_t)v193;
          sub_10095268C((uint64_t)v193, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          a1 = v195;
          Swift::Int v93 = v197;
          uint64_t v92 = v198;
          if ((v113 & 1) == 0) {
            break;
          }
          uint64_t v114 = *v195;
          if (!*v195) {
            goto LABEL_153;
          }
          uint64_t v115 = v114 + v198 + v97;
          sub_100952624(v114 + v197 + v97, v203, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          swift_arrayInitWithTakeFrontToBack();
          sub_100952624(v203, v115, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          v97 -= v196;
          Swift::Int v98 = v206 + 1;
          Swift::Int v96 = v200;
          if (v200 == v206 + 1) {
            goto LABEL_55;
          }
        }
        Swift::Int v96 = v200;
LABEL_55:
        Swift::Int v41 = v96 + 1;
        v92 += v196;
        v93 += v196;
      }
      while (v41 != v182);
      Swift::Int v41 = v182;
      uint64_t v37 = v185;
      Swift::Int v40 = v184;
    }
    goto LABEL_65;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

Swift::Int sub_1009538BC(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        char v81 = *(unsigned char *)(v79 + i);
        unint64_t v82 = qword_10136F618[v81];
        uint64_t v83 = v78;
        do
        {
          uint64_t v84 = *(char *)(v79 + v83);
          if (v82 >= qword_10136F618[v84]) {
            break;
          }
          if (!v79) {
            goto LABEL_140;
          }
          *(unsigned char *)(v79 + v83 + 1) = v84;
          *(unsigned char *)(v79 + v83--) = v81;
        }
        while (v83 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v95 = result;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      Swift::Int v85 = v11;
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v86 = *v2;
        do
        {
          unint64_t v87 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_131;
          }
          if (!v86) {
            goto LABEL_144;
          }
          unint64_t v88 = v85;
          uint64_t v89 = *(void *)&v85[16 * v87 + 32];
          uint64_t v90 = *(void *)&v85[16 * v12 + 24];
          sub_100954C44((char *)(v86 + v89), (char *)(v86 + *(void *)&v85[16 * v12 + 16]), v86 + v90, __dst);
          if (v1) {
            break;
          }
          if (v90 < v89) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v88 = sub_100B73584((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_133;
          }
          Swift::Int v91 = &v88[16 * v87 + 32];
          *(void *)Swift::Int v91 = v89;
          *((void *)v91 + 1) = v90;
          unint64_t v92 = *((void *)v88 + 2);
          if (v12 > v92) {
            goto LABEL_134;
          }
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v92 - v12));
          Swift::Int v85 = v88;
          *((void *)v88 + 2) = v92 - 1;
          unint64_t v12 = v92 - 1;
        }
        while (v92 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v7 + 16) = v6;
    uint64_t v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  Swift::Int v93 = v2;
  uint64_t v10 = *v2;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v96 = v3;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      uint64_t v14 = *(char *)(v10 + v9);
      unint64_t v15 = qword_10136F618[v14];
      unint64_t v16 = qword_10136F618[*(char *)(v10 + v13)];
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        while (v15 < v16 != qword_10136F618[*(char *)(v10 + v9)] >= qword_10136F618[(char)v14])
        {
          LOBYTE(v14) = *(unsigned char *)(v10 + v9++);
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v9 < v13) {
          goto LABEL_137;
        }
        if (v13 < v9)
        {
          Swift::Int v17 = v9 - 1;
          Swift::Int v18 = v13;
          do
          {
            if (v18 != v17)
            {
              if (!v10) {
                goto LABEL_143;
              }
              char v19 = *(unsigned char *)(v10 + v18);
              *(unsigned char *)(v10 + v18) = *(unsigned char *)(v10 + v17);
              *(unsigned char *)(v10 + v17) = v19;
            }
            BOOL v59 = ++v18 < v17--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_135;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_46;
    }
    Swift::Int v20 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_138;
    }
    if (v20 >= v3) {
      Swift::Int v20 = v3;
    }
    if (v20 < v13) {
      break;
    }
    if (v9 != v20)
    {
      uint64_t v21 = (unsigned char *)(v10 + v9);
      do
      {
        char v22 = *(unsigned char *)(v10 + v9);
        unint64_t v23 = qword_10136F618[v22];
        Swift::Int v24 = v13;
        uint64_t v25 = v21;
        do
        {
          uint64_t v26 = (char)*(v25 - 1);
          if (v23 >= qword_10136F618[v26]) {
            break;
          }
          if (!v10) {
            goto LABEL_141;
          }
          *uint64_t v25 = v26;
          *--uint64_t v25 = v22;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v21;
      }
      while (v9 != v20);
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v13) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_100B729CC(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      unint64_t v77 = sub_100B729CC((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_119;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_120;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_122;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_125;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_129;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_77;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_121;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_124;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_127;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_128;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_83:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v54) {
          goto LABEL_123;
        }
        unint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_126;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10) {
          goto LABEL_142;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_100954C44((char *)(v10 + *(void *)v71), (char *)(v10 + *(void *)v74), v10 + v75, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v75 < v72) {
          goto LABEL_116;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_117;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_118;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v2 = v93;
      uint64_t v8 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100953F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v55 = a4;
  uint64_t v41 = a1;
  uint64_t v45 = sub_10000588C(&qword_1016529B8);
  uint64_t v6 = __chkstk_darwin(v45);
  uint64_t v58 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v9 = (char *)&v39 - v8;
  uint64_t v50 = type metadata accessor for BeaconObservation();
  uint64_t v10 = __chkstk_darwin(v50);
  uint64_t v52 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t result = __chkstk_darwin(v12);
  Swift::Int v18 = (char *)&v39 - v17;
  uint64_t v49 = a3;
  uint64_t v40 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    uint64_t v20 = v19 * (v49 - 1);
    uint64_t v46 = v19;
    uint64_t v21 = v19 * v49;
    unint64_t v43 = v14;
    uint64_t v44 = v9;
    BOOL v42 = (char *)&v39 - v17;
LABEL_5:
    uint64_t v22 = 0;
    uint64_t v56 = v41;
    uint64_t v47 = v21;
    uint64_t v48 = v20;
    while (1)
    {
      uint64_t v23 = *v55;
      uint64_t v54 = v21 + v22;
      sub_10095540C(v21 + v22 + v23, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v53 = v20 + v22;
      sub_10095540C(v20 + v22 + v23, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v25 = *(int *)(v50 + 20);
      uint64_t v24 = *(int *)(v50 + 24);
      uint64_t v26 = v18[v24];
      unint64_t v27 = &v18[v25];
      uint64_t v28 = v14[v24];
      uint64_t v57 = &v14[v25];
      *Swift::Int v9 = v26;
      uint64_t v29 = v45;
      uint64_t v30 = &v9[*(int *)(v45 + 48)];
      uint64_t v31 = type metadata accessor for Date();
      uint64_t v32 = *(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      uint64_t v51 = v30;
      v32(v30, v27, v31);
      uint64_t v33 = v58;
      *uint64_t v58 = v28;
      v32(&v33[*(int *)(v29 + 48)], v57, v31);
      unint64_t v34 = qword_10136F618[v26];
      unint64_t v35 = qword_10136F618[v28];
      if (v34 == v35)
      {
        sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v36 = dispatch thunk of static Comparable.< infix(_:_:)();
      }
      else
      {
        char v36 = v34 < v35;
      }
      sub_10001DAB4((uint64_t)v58, &qword_1016529B8);
      Swift::Int v9 = v44;
      sub_10001DAB4((uint64_t)v44, &qword_1016529B8);
      uint64_t v14 = v43;
      sub_10095268C((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      Swift::Int v18 = v42;
      uint64_t result = sub_10095268C((uint64_t)v42, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      uint64_t v21 = v47;
      uint64_t v20 = v48;
      if ((v36 & 1) == 0)
      {
LABEL_4:
        v20 += v46;
        v21 += v46;
        if (++v49 == v40) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v37 = *v55;
      if (!*v55) {
        break;
      }
      uint64_t v38 = v37 + v48 + v22;
      sub_100952624(v37 + v47 + v22, v52, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100952624(v52, v38, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      v22 -= v46;
      if (v49 == ++v56) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1009543D0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v94 = sub_10000588C(&qword_1016529B8);
  uint64_t v8 = __chkstk_darwin(v94);
  Swift::Int v93 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v82 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  unint64_t v92 = (char *)&v82 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v96 = type metadata accessor for BeaconObservation();
  uint64_t v17 = __chkstk_darwin(v96);
  uint64_t v91 = (uint64_t)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v90 = (uint64_t)&v82 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v89 = (uint64_t)&v82 - v22;
  __chkstk_darwin(v21);
  uint64_t v88 = (uint64_t)&v82 - v23;
  uint64_t v25 = *(void *)(v24 + 72);
  if (!v25)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v25 == -1) {
    goto LABEL_68;
  }
  int64_t v26 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v25 == -1) {
    goto LABEL_69;
  }
  uint64_t v27 = (uint64_t)(a2 - a1) / v25;
  uint64_t v100 = (unsigned char *)a1;
  uint64_t v99 = (unsigned char *)a4;
  uint64_t v28 = v26 / v25;
  if (v27 >= v26 / v25)
  {
    if ((v28 & 0x8000000000000000) == 0)
    {
      uint64_t v30 = v28 * v25;
      if (a4 < a2 || a2 + v30 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v54 = a4 + v30;
      unint64_t v98 = a4 + v30;
      uint64_t v100 = (unsigned char *)a2;
      if (v30 >= 1 && a1 < a2)
      {
        uint64_t v56 = -v25;
        unint64_t v86 = a1;
        unint64_t v87 = a4;
        Swift::Int v85 = v12;
        uint64_t v89 = v56;
        do
        {
          unint64_t v95 = a3;
          uint64_t v57 = v90;
          sub_10095540C(v54 + v56, v90, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          unint64_t v97 = a2;
          unint64_t v92 = (unsigned char *)(a2 + v56);
          uint64_t v58 = v91;
          sub_10095540C(a2 + v56, v91, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v60 = *(int *)(v96 + 20);
          uint64_t v59 = *(int *)(v96 + 24);
          uint64_t v61 = *(char *)(v57 + v59);
          uint64_t v62 = v57 + v60;
          uint64_t v63 = *(char *)(v58 + v59);
          uint64_t v64 = v58 + v60;
          unsigned char *v12 = v61;
          uint64_t v65 = v94;
          uint64_t v66 = &v12[*(int *)(v94 + 48)];
          uint64_t v67 = type metadata accessor for Date();
          uint64_t v68 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 16);
          v68(v66, v62, v67);
          uint64_t v69 = v93;
          *Swift::Int v93 = v63;
          v68(&v69[*(int *)(v65 + 48)], v64, v67);
          unint64_t v70 = qword_10136F618[v61];
          unint64_t v71 = qword_10136F618[v63];
          if (v70 == v71)
          {
            sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v72 = dispatch thunk of static Comparable.< infix(_:_:)();
          }
          else
          {
            char v72 = v70 < v71;
          }
          unint64_t v73 = v95;
          uint64_t v56 = v89;
          unint64_t v74 = v95 + v89;
          sub_10001DAB4((uint64_t)v93, &qword_1016529B8);
          uint64_t v12 = v85;
          sub_10001DAB4((uint64_t)v85, &qword_1016529B8);
          sub_10095268C(v91, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          sub_10095268C(v90, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
          uint64_t v75 = (unsigned char *)v97;
          unint64_t v76 = v86;
          if (v72)
          {
            unint64_t v77 = v87;
            if (v73 < v97 || v74 >= v97)
            {
              uint64_t v79 = v92;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              BOOL v78 = v73 == v97;
              uint64_t v79 = v92;
              if (!v78) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v100 += v56;
          }
          else
          {
            unint64_t v80 = v98;
            v98 += v56;
            unint64_t v77 = v87;
            if (v73 < v80 || v74 >= v80)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v73 != v80)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v79 = v75;
          }
          unint64_t v54 = v98;
          if (v98 <= v77) {
            break;
          }
          a2 = (unint64_t)v79;
          a3 = v74;
        }
        while ((unint64_t)v79 > v76);
      }
      goto LABEL_66;
    }
  }
  else if ((v27 & 0x8000000000000000) == 0)
  {
    uint64_t v29 = v27 * v25;
    if (a4 < a1 || a1 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    Swift::Int v93 = (unsigned char *)(a4 + v29);
    unint64_t v98 = a4 + v29;
    if (v29 >= 1 && a2 < a3)
    {
      unint64_t v95 = a3;
      uint64_t v83 = v16;
      uint64_t v84 = v25;
      do
      {
        unint64_t v97 = a2;
        uint64_t v32 = v88;
        sub_10095540C(a2, v88, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v33 = v89;
        sub_10095540C(a4, v89, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v35 = *(int *)(v96 + 20);
        uint64_t v34 = *(int *)(v96 + 24);
        uint64_t v36 = *(char *)(v32 + v34);
        uint64_t v37 = v32 + v35;
        uint64_t v38 = *(char *)(v33 + v34);
        uint64_t v39 = v33 + v35;
        unsigned char *v16 = v36;
        uint64_t v40 = v94;
        uint64_t v41 = &v16[*(int *)(v94 + 48)];
        uint64_t v42 = type metadata accessor for Date();
        unint64_t v43 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
        v43(v41, v37, v42);
        uint64_t v44 = v92;
        *unint64_t v92 = v38;
        v43(&v44[*(int *)(v40 + 48)], v39, v42);
        unint64_t v45 = qword_10136F618[v36];
        unint64_t v46 = qword_10136F618[v38];
        if (v45 == v46)
        {
          sub_100955474((unint64_t *)&qword_1016605E0, (void (*)(uint64_t))&type metadata accessor for Date);
          char v47 = dispatch thunk of static Comparable.< infix(_:_:)();
        }
        else
        {
          char v47 = v45 < v46;
        }
        sub_10001DAB4((uint64_t)v92, &qword_1016529B8);
        uint64_t v16 = v83;
        sub_10001DAB4((uint64_t)v83, &qword_1016529B8);
        sub_10095268C(v89, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        sub_10095268C(v88, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        unint64_t v48 = (unint64_t)v100;
        uint64_t v49 = v84;
        if (v47)
        {
          unint64_t v50 = v97 + v84;
          if ((unint64_t)v100 < v97 || (unint64_t)v100 >= v50)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v51 = v95;
          }
          else
          {
            unint64_t v51 = v95;
            if (v100 == (unsigned char *)v97) {
              unint64_t v48 = v97;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v52 = (unint64_t)&v99[v84];
          if (v100 < v99 || (unint64_t)v100 >= v52)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v51 = v95;
            unint64_t v53 = v97;
          }
          else
          {
            unint64_t v51 = v95;
            unint64_t v53 = v97;
            if (v100 != v99) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t v99 = (unsigned char *)v52;
          unint64_t v50 = v53;
        }
        uint64_t v100 = (unsigned char *)(v48 + v49);
        a4 = (unint64_t)v99;
        if (v99 >= v93) {
          break;
        }
        a2 = v50;
      }
      while (v50 < v51);
    }
LABEL_66:
    sub_100B72CBC((unint64_t *)&v100, (unint64_t *)&v99, (uint64_t *)&v98);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100954C44(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v22 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      uint64_t v14 = &v4[v9];
      uint64_t v20 = &v4[v9];
      uint64_t v22 = v6;
      if (v7 < v6 && (char *)a3 != v6)
      {
        uint64_t v15 = (char *)(a3 - 1);
        while (1)
        {
          uint64_t v16 = v6 - 1;
          uint64_t v17 = *(v6 - 1);
          uint64_t v18 = v15 + 1;
          if (qword_10136F618[*(v14 - 1)] >= qword_10136F618[v17])
          {
            uint64_t v20 = v14 - 1;
            if (v18 < v14 || v15 >= v14 || v18 != v14) {
              char *v15 = *(v14 - 1);
            }
            --v14;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v18 != v6 || v15 >= v6) {
              char *v15 = v17;
            }
            uint64_t v22 = --v6;
            if (v16 <= v7) {
              goto LABEL_38;
            }
          }
          --v15;
          if (v14 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    uint64_t v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        uint64_t v11 = *v6;
        uint64_t v12 = *v4;
        if (qword_10136F618[v11] >= qword_10136F618[v12])
        {
          if (v7 != v4) {
            *uint64_t v7 = v12;
          }
          uint64_t v21 = ++v4;
          uint64_t v13 = v6;
        }
        else
        {
          uint64_t v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6) {
            *uint64_t v7 = v11;
          }
        }
        ++v7;
        if (v4 >= v10) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v22 = v7;
    }
LABEL_38:
    sub_100B72CA0(&v22, &v21, &v20);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100954EAC(uint64_t a1)
{
  uint64_t v62 = type metadata accessor for TimeZone();
  uint64_t v2 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for BeaconObservation();
  uint64_t v4 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v6 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    size_t v8 = self;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v58 = (void (**)(char *, uint64_t))(v2 + 8);
    id v59 = v8;
    uint64_t v10 = *(void *)(v4 + 72);
    v55[1] = a1;
    uint64_t v56 = v10;
    swift_bridgeObjectRetain();
    uint64_t v11 = _swiftEmptyDictionarySingleton;
    uint64_t v57 = v6;
    while (1)
    {
      sub_10095540C(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      char v12 = v6[*(int *)(v60 + 24)];
      swift_bridgeObjectRetain();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      uint64_t v14 = v61;
      static TimeZone.gmt.getter();
      Class v15 = TimeZone._bridgeToObjectiveC()().super.isa;
      (*v58)(v14, v62);
      id v16 = [v59 stringFromDate:isa timeZone:v15 formatOptions:1907];

      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v64 = v11;
      unint64_t v22 = sub_1007243A4(v12);
      uint64_t v23 = v11[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24)) {
        break;
      }
      char v26 = v21;
      if (v11[3] >= v25)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v27 = v11;
        }
        else
        {
          sub_100E857C8();
          uint64_t v27 = v64;
        }
      }
      else
      {
        sub_100E744FC(v25, isUniquelyReferenced_nonNull_native);
        uint64_t v27 = v64;
        unint64_t v28 = sub_1007243A4(v12);
        if ((v26 & 1) != (v29 & 1)) {
          goto LABEL_35;
        }
        unint64_t v22 = v28;
      }
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
      {
        v27[(v22 >> 6) + 8] |= 1 << v22;
        *(unsigned char *)(v27[6] + v22) = v12;
        *(void *)(v27[7] + 8 * v22) = _swiftEmptyArrayStorage;
        uint64_t v30 = v27[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_34;
        }
        v27[2] = v32;
      }
      uint64_t v33 = v27[7];
      uint64_t v34 = *(void **)(v33 + 8 * v22);
      char v35 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v33 + 8 * v22) = v34;
      uint64_t v63 = v7;
      if ((v35 & 1) == 0)
      {
        uint64_t v34 = sub_100A6E25C(0, v34[2] + 1, 1, v34);
        *(void *)(v33 + 8 * v22) = v34;
      }
      unint64_t v37 = v34[2];
      unint64_t v36 = v34[3];
      if (v37 >= v36 >> 1)
      {
        uint64_t v34 = sub_100A6E25C((void *)(v36 > 1), v37 + 1, 1, v34);
        *(void *)(v33 + 8 * v22) = v34;
      }
      v34[2] = v37 + 1;
      uint64_t v38 = &v34[2 * v37];
      v38[4] = v17;
      v38[5] = v19;
      uint64_t v6 = v57;
      sub_10095268C((uint64_t)v57, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      swift_bridgeObjectRelease();
      v9 += v56;
      uint64_t v11 = v27;
      uint64_t v7 = v63 - 1;
      if (v63 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    uint64_t v27 = _swiftEmptyDictionarySingleton;
LABEL_20:
    swift_bridgeObjectRetain_n();
    uint64_t v39 = sub_100711220((uint64_t)v27);
    swift_bridgeObjectRelease();
    uint64_t v64 = v39;
    sub_10094B2B0((uint64_t *)&v64);
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v64;
    uint64_t v41 = v64[2];
    if (v41)
    {
      swift_retain();
      uint64_t v42 = 0;
      unint64_t v43 = _swiftEmptyArrayStorage;
      do
      {
        if (v27[2])
        {
          char v45 = *(unsigned char *)(v40 + v42 + 32);
          unint64_t v46 = sub_1007243A4(v45);
          if (v47)
          {
            uint64_t v48 = *(void *)(v27[7] + 8 * v46);
            swift_bridgeObjectRetain();
            unint64_t v49 = sub_10096A84C(v45);
            uint64_t v51 = v50;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v43 = sub_100A71C4C(0, v43[2] + 1, 1, v43);
            }
            unint64_t v53 = v43[2];
            unint64_t v52 = v43[3];
            if (v53 >= v52 >> 1) {
              unint64_t v43 = sub_100A71C4C((void *)(v52 > 1), v53 + 1, 1, v43);
            }
            v43[2] = v53 + 1;
            uint64_t v44 = &v43[3 * v53];
            v44[4] = v49;
            v44[5] = v51;
            v44[6] = v48;
          }
        }
        ++v42;
      }
      while (v41 != v42);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v43 = _swiftEmptyArrayStorage;
    }
    swift_release();
    return (uint64_t)v43;
  }
  return result;
}

uint64_t sub_10095540C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100955474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for ObservationState()
{
  return &type metadata for ObservationState;
}

uint64_t *sub_1009554E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    char v21 = (uint64_t *)((char *)a1 + v17);
    unint64_t v22 = (uint64_t *)((char *)a2 + v17);
    uint64_t v23 = v22[1];
    void *v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    char v26 = (uint64_t *)((char *)a2 + v24);
    uint64_t v27 = v26[1];
    *uint64_t v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100955630(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1009556E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  char v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  *uint64_t v20 = *v21;
  v20[1] = v22;
  uint64_t v23 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1009557E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  void *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (void *)(a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v19 = a3[10];
  uint64_t v20 = (void *)(a1 + v19);
  char v21 = (void *)(a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100955940(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_1009559EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v28 = (void *)(a1 + v27);
  char v29 = (uint64_t *)(a2 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100955AF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100955B04);
}

uint64_t sub_100955B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100955BC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100955BDC);
}

uint64_t sub_100955BDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100955C9C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100955D48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = (int *)type metadata accessor for BeaconProductInfoRecord();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10000588C(&qword_10163BBB0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v92 = v8;
      uint64_t v11 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *((unsigned char *)a1 + v7[5]) = *((unsigned char *)a2 + v7[5]);
      *((unsigned char *)a1 + v7[6]) = *((unsigned char *)a2 + v7[6]);
      *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
      uint64_t v12 = v7[8];
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v96 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v96;
      uint64_t v15 = v7[9];
      uint64_t v16 = (uint64_t *)((char *)a1 + v15);
      uint64_t v17 = (uint64_t *)((char *)a2 + v15);
      uint64_t v18 = v17[1];
      void *v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v7[10];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      *(void *)uint64_t v20 = *(void *)v21;
      v20[8] = v21[8];
      uint64_t v22 = v7[11];
      uint64_t v23 = (uint64_t *)((char *)a1 + v22);
      uint64_t v24 = (uint64_t *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v7[12];
      __dst = (char *)a1 + v26;
      uint64_t v90 = (char *)a2 + v26;
      uint64_t v27 = type metadata accessor for URL();
      uint64_t v28 = *(void *)(v27 - 8);
      char v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v95 = v29;
      uint64_t v94 = v28;
      if (v29(v90, 1, v27))
      {
        uint64_t v30 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v90, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v90, v27);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      uint64_t v31 = v27;
      uint64_t v32 = v7[13];
      uint64_t v33 = (char *)a1 + v32;
      uint64_t v34 = (char *)a2 + v32;
      uint64_t v89 = v6;
      uint64_t v93 = v31;
      if (v29((char *)a2 + v32, 1, v31))
      {
        uint64_t v35 = sub_10000588C(&qword_101649E40);
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v33, v34, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v33, 0, 1, v31);
      }
      uint64_t v36 = v7[14];
      unint64_t v37 = (uint64_t *)((char *)a1 + v36);
      uint64_t v38 = (uint64_t *)((char *)a2 + v36);
      uint64_t v39 = v38[1];
      *unint64_t v37 = *v38;
      v37[1] = v39;
      *(uint64_t *)((char *)a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
      uint64_t v40 = v7[16];
      uint64_t v41 = (uint64_t *)((char *)a1 + v40);
      uint64_t v42 = (uint64_t *)((char *)a2 + v40);
      unint64_t v43 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
      uint64_t v44 = *((void *)v43 - 1);
      char v45 = *(unsigned int (**)(void *, uint64_t, int *))(v44 + 48);
      swift_bridgeObjectRetain();
      if (v45(v42, 1, v43))
      {
        uint64_t v46 = sub_10000588C(&qword_101649E50);
        memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        uint64_t v91 = v44;
        uint64_t v47 = v42[1];
        *uint64_t v41 = *v42;
        v41[1] = v47;
        uint64_t v48 = v42[3];
        v41[2] = v42[2];
        v41[3] = v48;
        uint64_t v49 = v42[5];
        v41[4] = v42[4];
        uint64_t v41[5] = v49;
        *((_WORD *)v41 + 24) = *((_WORD *)v42 + 24);
        *((unsigned char *)v41 + 72) = *((unsigned char *)v42 + 72);
        uint64_t v50 = v42[8];
        v41[7] = v42[7];
        v41[8] = v50;
        uint64_t v51 = v43[10];
        unint64_t v52 = (char *)v41 + v51;
        unint64_t v53 = (char *)v42 + v51;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v95(v53, 1, v93))
        {
          uint64_t v54 = sub_10000588C(&qword_101649E40);
          memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
          uint64_t v55 = v94;
        }
        else
        {
          uint64_t v56 = v53;
          uint64_t v55 = v94;
          (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v52, v56, v93);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v52, 0, 1, v93);
        }
        uint64_t v57 = v43[11];
        uint64_t v58 = (char *)v41 + v57;
        id v59 = (char *)v42 + v57;
        if (v95((char *)v42 + v57, 1, v93))
        {
          uint64_t v60 = sub_10000588C(&qword_101649E40);
          memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v58, v59, v93);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v58, 0, 1, v93);
        }
        uint64_t v61 = v43[12];
        uint64_t v62 = (char *)v41 + v61;
        uint64_t v63 = (char *)v42 + v61;
        *(void *)uint64_t v62 = *(void *)v63;
        v62[8] = v63[8];
        uint64_t v64 = v43[13];
        uint64_t v65 = (void *)((char *)v41 + v64);
        uint64_t v66 = (void *)((char *)v42 + v64);
        uint64_t v67 = v66[1];
        *uint64_t v65 = *v66;
        v65[1] = v67;
        *(void *)((char *)v41 + v43[14]) = *(void *)((char *)v42 + v43[14]);
        uint64_t v68 = v43[15];
        uint64_t v69 = (void *)((char *)v41 + v68);
        unint64_t v70 = (void *)((char *)v42 + v68);
        uint64_t v71 = v70[1];
        *uint64_t v69 = *v70;
        v69[1] = v71;
        *(void *)((char *)v41 + v43[16]) = *(void *)((char *)v42 + v43[16]);
        uint64_t v72 = v43[17];
        unint64_t v73 = (char *)v41 + v72;
        unint64_t v74 = (char *)v42 + v72;
        *(_OWORD *)unint64_t v73 = *(_OWORD *)v74;
        v73[16] = v74[16];
        uint64_t v75 = v43[18];
        unint64_t v76 = (char *)v41 + v75;
        unint64_t v77 = (char *)v42 + v75;
        *(_OWORD *)unint64_t v76 = *(_OWORD *)v77;
        v76[16] = v77[16];
        BOOL v78 = *(void (**)(void *, void, uint64_t, int *))(v91 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v78(v41, 0, 1, v43);
      }
      uint64_t v6 = v89;
      *(_DWORD *)((char *)a1 + v7[17]) = *(_DWORD *)((char *)a2 + v7[17]);
      *(uint64_t *)((char *)a1 + v7[18]) = *(uint64_t *)((char *)a2 + v7[18]);
      uint64_t v79 = v7[19];
      unint64_t v80 = (char *)a1 + v79;
      char v81 = (char *)a2 + v79;
      uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
      swift_bridgeObjectRetain();
      v82(v80, v81, v93);
      v82((char *)a1 + v7[20], (char *)a2 + v7[20], v93);
      v82((char *)a1 + v7[21], (char *)a2 + v7[21], v93);
      v82((char *)a1 + v7[22], (char *)a2 + v7[22], v93);
      v82((char *)a1 + v7[23], (char *)a2 + v7[23], v93);
      v82((char *)a1 + v7[24], (char *)a2 + v7[24], v93);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v92 + 56))(a1, 0, 1, v7);
    }
    uint64_t v83 = *(int *)(v6 + 20);
    uint64_t v84 = (uint64_t *)((char *)a1 + v83);
    Swift::Int v85 = (uint64_t *)((char *)a2 + v83);
    uint64_t v86 = v85[1];
    *uint64_t v84 = *v85;
    v84[1] = v86;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100956544(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for BeaconProductInfoRecord();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2))
  {
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[12];
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v2[13];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v2[16];
    uint64_t v10 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v11 = v9 + *(int *)(v10 + 40);
      if (!v7(v11, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
      }
      uint64_t v12 = v9 + *(int *)(v10 + 44);
      if (!v7(v12, 1, v5)) {
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v13(a1 + v2[19], v5);
    v13(a1 + v2[20], v5);
    v13(a1 + v2[21], v5);
    v13(a1 + v2[22], v5);
    v13(a1 + v2[23], v5);
    v13(a1 + v2[24], v5);
  }

  return swift_bridgeObjectRelease();
}

char *sub_1009568DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000588C(&qword_10163BBB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v87 = v7;
    uint64_t v88 = a3;
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    uint64_t v10 = v6[8];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v92 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v92;
    uint64_t v13 = v6[9];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v6[10];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    *(void *)uint64_t v18 = *(void *)v19;
    v18[8] = v19[8];
    uint64_t v20 = v6[11];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    uint64_t v24 = v6[12];
    __dst = &a1[v24];
    uint64_t v25 = &a2[v24];
    uint64_t v26 = type metadata accessor for URL();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v91 = v28;
    uint64_t v93 = v27;
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v25, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
    }
    uint64_t v30 = v6[13];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    __dsta = (void *)v26;
    if (v91(&a2[v30], 1, v26))
    {
      uint64_t v33 = sub_10000588C(&qword_101649E40);
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v31, v32, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
    }
    uint64_t v34 = v6[14];
    uint64_t v35 = &a1[v34];
    uint64_t v36 = &a2[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
    uint64_t v38 = v6[16];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    uint64_t v41 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v42 = *((void *)v41 - 1);
    unint64_t v43 = *(unsigned int (**)(char *, uint64_t, int *))(v42 + 48);
    swift_bridgeObjectRetain();
    if (v43(v40, 1, v41))
    {
      uint64_t v44 = sub_10000588C(&qword_101649E50);
      memcpy(v39, v40, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      uint64_t v86 = v42;
      uint64_t v45 = *((void *)v40 + 1);
      *(void *)uint64_t v39 = *(void *)v40;
      *((void *)v39 + 1) = v45;
      uint64_t v46 = *((void *)v40 + 3);
      *((void *)v39 + 2) = *((void *)v40 + 2);
      *((void *)v39 + 3) = v46;
      uint64_t v47 = *((void *)v40 + 5);
      *((void *)v39 + 4) = *((void *)v40 + 4);
      *((void *)v39 + 5) = v47;
      *((_WORD *)v39 + 24) = *((_WORD *)v40 + 24);
      v39[72] = v40[72];
      uint64_t v48 = *((void *)v40 + 8);
      *((void *)v39 + 7) = *((void *)v40 + 7);
      *((void *)v39 + 8) = v48;
      uint64_t v49 = v41[10];
      uint64_t v50 = &v39[v49];
      uint64_t v51 = &v40[v49];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v91(v51, 1, (uint64_t)__dsta))
      {
        uint64_t v52 = sub_10000588C(&qword_101649E40);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        uint64_t v53 = v93;
      }
      else
      {
        uint64_t v54 = v50;
        uint64_t v53 = v93;
        (*(void (**)(char *, char *, void *))(v93 + 16))(v54, v51, __dsta);
        (*(void (**)(char *, void, uint64_t, void *))(v93 + 56))(v54, 0, 1, __dsta);
      }
      uint64_t v55 = v41[11];
      uint64_t v56 = &v39[v55];
      uint64_t v57 = &v40[v55];
      if (v91(&v40[v55], 1, (uint64_t)__dsta))
      {
        uint64_t v58 = sub_10000588C(&qword_101649E40);
        memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v53 + 16))(v56, v57, __dsta);
        (*(void (**)(char *, void, uint64_t, void *))(v53 + 56))(v56, 0, 1, __dsta);
      }
      uint64_t v59 = v41[12];
      uint64_t v60 = &v39[v59];
      uint64_t v61 = &v40[v59];
      *(void *)uint64_t v60 = *(void *)v61;
      v60[8] = v61[8];
      uint64_t v62 = v41[13];
      uint64_t v63 = &v39[v62];
      uint64_t v64 = &v40[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      *(void *)&v39[v41[14]] = *(void *)&v40[v41[14]];
      uint64_t v66 = v41[15];
      uint64_t v67 = &v39[v66];
      uint64_t v68 = &v40[v66];
      uint64_t v69 = *((void *)v68 + 1);
      *(void *)uint64_t v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      *(void *)&v39[v41[16]] = *(void *)&v40[v41[16]];
      uint64_t v70 = v41[17];
      uint64_t v71 = &v39[v70];
      uint64_t v72 = &v40[v70];
      *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
      v71[16] = v72[16];
      uint64_t v73 = v41[18];
      unint64_t v74 = &v39[v73];
      uint64_t v75 = &v40[v73];
      *(_OWORD *)unint64_t v74 = *(_OWORD *)v75;
      v74[16] = v75[16];
      unint64_t v76 = *(void (**)(char *, void, uint64_t, int *))(v86 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v76(v39, 0, 1, v41);
    }
    *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    uint64_t v77 = v6[19];
    BOOL v78 = &a1[v77];
    uint64_t v79 = &a2[v77];
    unint64_t v80 = *(void (**)(char *, char *, void *))(v93 + 16);
    swift_bridgeObjectRetain();
    v80(v78, v79, __dsta);
    v80(&a1[v6[20]], &a2[v6[20]], __dsta);
    v80(&a1[v6[21]], &a2[v6[21]], __dsta);
    v80(&a1[v6[22]], &a2[v6[22]], __dsta);
    v80(&a1[v6[23]], &a2[v6[23]], __dsta);
    v80(&a1[v6[24]], &a2[v6[24]], __dsta);
    (*(void (**)(char *, void, uint64_t, int *))(v87 + 56))(a1, 0, 1, v6);
    a3 = v88;
  }
  uint64_t v81 = *(int *)(a3 + 20);
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = *((void *)v83 + 1);
  *(void *)uint64_t v82 = *(void *)v83;
  *((void *)v82 + 1) = v84;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_10095707C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v7 = (void *)*((void *)v6 - 1);
  uint64_t v8 = (uint64_t (*)(unsigned char *, uint64_t, int *))v7[6];
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10095268C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
      goto LABEL_7;
    }
    uint64_t v32 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v32 - 8) + 24))(a1, a2, v32);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    uint64_t v33 = v6[8];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    *uint64_t v34 = *v35;
    v34[1] = v35[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = v6[9];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    *uint64_t v37 = *v38;
    v37[1] = v38[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = v6[10];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    uint64_t v42 = *(void *)v41;
    v40[8] = v41[8];
    *(void *)uint64_t v40 = v42;
    uint64_t v43 = v6[11];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    *uint64_t v44 = *v45;
    v44[1] = v45[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v46 = v6[12];
    uint64_t v47 = &a1[v46];
    uint64_t v48 = &a2[v46];
    uint64_t v49 = type metadata accessor for URL();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(uint64_t (**)(void))(v50 + 48);
    uint64_t v194 = v47;
    LODWORD(v47) = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v47, 1, v49);
    uint64_t v198 = v51;
    uint64_t v201 = (void *)v49;
    int v52 = ((uint64_t (*)(char *, uint64_t, uint64_t))v51)(v48, 1, v49);
    if (v47)
    {
      if (v52)
      {
        uint64_t v53 = sub_10000588C(&qword_101649E40);
        memcpy(v194, v48, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v54 = v49;
      }
      else
      {
        uint64_t v54 = v49;
        (*(void (**)(void *, char *, uint64_t))(v50 + 16))(v194, v48, v49);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v194, 0, 1, v49);
      }
    }
    else
    {
      uint64_t v54 = v49;
      if (v52)
      {
        (*(void (**)(void *, uint64_t))(v50 + 8))(v194, v49);
        uint64_t v75 = sub_10000588C(&qword_101649E40);
        memcpy(v194, v48, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v50 + 24))(v194, v48, v49);
      }
    }
    uint64_t v103 = v6[13];
    uint64_t v104 = &a2[v103];
    uint64_t v191 = &a1[v103];
    int v105 = v198();
    int v106 = ((uint64_t (*)(char *, uint64_t, uint64_t))v198)(v104, 1, v54);
    __srca = (void (**)(void *, const void *, void))v50;
    uint64_t v203 = a3;
    if (v105)
    {
      if (v106)
      {
        uint64_t v107 = sub_10000588C(&qword_101649E40);
        memcpy(v191, v104, *(void *)(*(void *)(v107 - 8) + 64));
        uint64_t v108 = (void *)v49;
      }
      else
      {
        uint64_t v108 = (void *)v49;
        (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v191, v104, v49);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v191, 0, 1, v49);
      }
    }
    else
    {
      uint64_t v108 = (void *)v49;
      if (v106)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v191, v49);
        uint64_t v109 = sub_10000588C(&qword_101649E40);
        memcpy(v191, v104, *(void *)(*(void *)(v109 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v50 + 24))(v191, v104, v49);
      }
    }
    uint64_t v110 = v6[14];
    unint64_t v111 = &a1[v110];
    unint64_t v112 = &a2[v110];
    *unint64_t v111 = *v112;
    v111[1] = v112[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
    uint64_t v113 = v6[16];
    uint64_t v114 = &a1[v113];
    uint64_t v115 = &a2[v113];
    uint64_t v116 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v192 = (void *)*((void *)v116 - 1);
    unint64_t v117 = (uint64_t (*)(char *, uint64_t, int *))v192[6];
    int v118 = v117(v114, 1, v116);
    uint64_t v195 = v116;
    int v119 = v117(v115, 1, v116);
    if (v118)
    {
      if (!v119)
      {
        *(void *)uint64_t v114 = *(void *)v115;
        *((void *)v114 + 1) = *((void *)v115 + 1);
        *((void *)v114 + 2) = *((void *)v115 + 2);
        *((void *)v114 + 3) = *((void *)v115 + 3);
        *((void *)v114 + 4) = *((void *)v115 + 4);
        *((void *)v114 + 5) = *((void *)v115 + 5);
        *((_WORD *)v114 + 24) = *((_WORD *)v115 + 24);
        *((void *)v114 + 7) = *((void *)v115 + 7);
        uint64_t v120 = *((void *)v115 + 8);
        v114[72] = v115[72];
        *((void *)v114 + 8) = v120;
        Swift::Int v121 = v116;
        uint64_t v122 = v116[10];
        uint64_t v202 = &v114[v122];
        uint64_t v123 = &v115[v122];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (((unsigned int (*)(char *, uint64_t, void *))v198)(v123, 1, v108))
        {
          uint64_t v124 = sub_10000588C(&qword_101649E40);
          memcpy(v202, v123, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, void *))(v50 + 16))(v202, v123, v108);
          (*(void (**)(char *, void, uint64_t, void *))(v50 + 56))(v202, 0, 1, v108);
        }
        uint64_t v133 = v195[11];
        unint64_t v134 = &v114[v133];
        Class v135 = &v115[v133];
        if (((unsigned int (*)(char *, uint64_t, void *))v198)(&v115[v133], 1, v108))
        {
          uint64_t v136 = sub_10000588C(&qword_101649E40);
          memcpy(v134, v135, *(void *)(*(void *)(v136 - 8) + 64));
        }
        else
        {
          ((void (**)(void *, const void *, void *))__srca)[2](v134, v135, v108);
          Swift::Int v121 = v195;
          ((void (*)(char *, void, uint64_t, void *))__srca[7])(v134, 0, 1, v108);
        }
        uint64_t v137 = v121[12];
        uint64_t v138 = &v114[v137];
        uint64_t v139 = &v115[v137];
        uint64_t v140 = *(void *)v139;
        v138[8] = v139[8];
        *(void *)uint64_t v138 = v140;
        uint64_t v141 = v121[13];
        uint64_t v142 = &v114[v141];
        BOOL v143 = &v115[v141];
        *(void *)uint64_t v142 = *(void *)v143;
        *((void *)v142 + 1) = *((void *)v143 + 1);
        *(void *)&v114[v121[14]] = *(void *)&v115[v121[14]];
        uint64_t v144 = v121[15];
        char v145 = &v114[v144];
        uint64_t v146 = &v115[v144];
        *(void *)char v145 = *(void *)v146;
        *((void *)v145 + 1) = *((void *)v146 + 1);
        *(void *)&v114[v121[16]] = *(void *)&v115[v121[16]];
        uint64_t v147 = v121[17];
        uint64_t v148 = &v114[v147];
        uint64_t v149 = &v115[v147];
        long long v150 = *(_OWORD *)v149;
        v148[16] = v149[16];
        *(_OWORD *)uint64_t v148 = v150;
        uint64_t v151 = v121[18];
        uint64_t v152 = &v114[v151];
        uint64_t v153 = &v115[v151];
        long long v154 = *(_OWORD *)v153;
        v152[16] = v153[16];
        *(_OWORD *)uint64_t v152 = v154;
        uint64_t v155 = (void (*)(char *, void, uint64_t, int *))v192[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v155(v114, 0, 1, v121);
        goto LABEL_63;
      }
    }
    else
    {
      if (!v119)
      {
        *(void *)uint64_t v114 = *(void *)v115;
        *((void *)v114 + 1) = *((void *)v115 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v114 + 2) = *((void *)v115 + 2);
        *((void *)v114 + 3) = *((void *)v115 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((void *)v114 + 4) = *((void *)v115 + 4);
        *((void *)v114 + 5) = *((void *)v115 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((_WORD *)v114 + 24) = *((_WORD *)v115 + 24);
        *((void *)v114 + 7) = *((void *)v115 + 7);
        uint64_t v126 = *((void *)v115 + 8);
        v114[72] = v115[72];
        *((void *)v114 + 8) = v126;
        uint64_t v127 = v116[10];
        uint64_t v128 = &v115[v127];
        uint64_t v186 = &v114[v127];
        int v129 = v198();
        int v130 = ((uint64_t (*)(char *, uint64_t, void *))v198)(v128, 1, v108);
        if (v129)
        {
          if (v130)
          {
            uint64_t v131 = sub_10000588C(&qword_101649E40);
            memcpy(v186, v128, *(void *)(*(void *)(v131 - 8) + 64));
            uint64_t v132 = v201;
          }
          else
          {
            uint64_t v132 = v201;
            ((void (**)(void *, const void *, void *))__srca)[2](v186, v128, v201);
            ((void (*)(char *, void, uint64_t, void *))__srca[7])(v186, 0, 1, v201);
          }
        }
        else
        {
          uint64_t v132 = v201;
          if (v130)
          {
            ((void (*)(char *, void *))__srca[1])(v186, v201);
            uint64_t v156 = sub_10000588C(&qword_101649E40);
            memcpy(v186, v128, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            ((void (**)(void *, const void *, void *))__srca)[3](v186, v128, v201);
          }
        }
        uint64_t v157 = v116[11];
        uint64_t v158 = &v115[v157];
        uint64_t v187 = &v114[v157];
        int v159 = v198();
        int v160 = ((uint64_t (*)(char *, uint64_t, void *))v198)(v158, 1, v132);
        if (v159)
        {
          if (v160)
          {
            uint64_t v161 = sub_10000588C(&qword_101649E40);
            memcpy(v187, v158, *(void *)(*(void *)(v161 - 8) + 64));
            uint64_t v108 = v201;
          }
          else
          {
            uint64_t v108 = v201;
            ((void (**)(void *, const void *, void *))__srca)[2](v187, v158, v201);
            ((void (*)(char *, void, uint64_t, void *))__srca[7])(v187, 0, 1, v201);
          }
        }
        else
        {
          uint64_t v108 = v201;
          if (v160)
          {
            ((void (*)(char *, void *))__srca[1])(v187, v201);
            uint64_t v162 = sub_10000588C(&qword_101649E40);
            memcpy(v187, v158, *(void *)(*(void *)(v162 - 8) + 64));
          }
          else
          {
            ((void (**)(void *, const void *, void *))__srca)[3](v187, v158, v201);
          }
        }
        uint64_t v163 = v116[12];
        int64_t v164 = &v114[v163];
        uint64_t v165 = &v115[v163];
        uint64_t v166 = *(void *)v165;
        v164[8] = v165[8];
        *(void *)int64_t v164 = v166;
        uint64_t v167 = v116[13];
        uint64_t v168 = &v114[v167];
        uint64_t v169 = &v115[v167];
        *(void *)uint64_t v168 = *(void *)v169;
        *((void *)v168 + 1) = *((void *)v169 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v114[v116[14]] = *(void *)&v115[v116[14]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v170 = v116[15];
        uint64_t v171 = &v114[v170];
        uint64_t v172 = &v115[v170];
        *(void *)uint64_t v171 = *(void *)v172;
        *((void *)v171 + 1) = *((void *)v172 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v114[v116[16]] = *(void *)&v115[v116[16]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v173 = v116[17];
        uint64_t v174 = &v114[v173];
        unint64_t v175 = &v115[v173];
        long long v176 = *(_OWORD *)v175;
        v174[16] = v175[16];
        *(_OWORD *)uint64_t v174 = v176;
        uint64_t v177 = v116[18];
        uint64_t v178 = &v114[v177];
        uint64_t v179 = &v115[v177];
        long long v180 = *(_OWORD *)v179;
        v178[16] = v179[16];
        *(_OWORD *)uint64_t v178 = v180;
        goto LABEL_63;
      }
      sub_10095268C((uint64_t)v114, type metadata accessor for AccessoryInfoResponseContent.Configuration);
    }
    uint64_t v125 = sub_10000588C(&qword_101649E50);
    memcpy(v114, v115, *(void *)(*(void *)(v125 - 8) + 64));
LABEL_63:
    a3 = v203;
    *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v181 = (void (*)(void *, const void *, void *))__srca[3];
    v181(&a1[v6[19]], &a2[v6[19]], v108);
    v181(&a1[v6[20]], &a2[v6[20]], v108);
    v181(&a1[v6[21]], &a2[v6[21]], v108);
    v181(&a1[v6[22]], &a2[v6[22]], v108);
    v181(&a1[v6[23]], &a2[v6[23]], v108);
    v181(&a1[v6[24]], &a2[v6[24]], v108);
    goto LABEL_64;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v31 = sub_10000588C(&qword_10163BBB0);
    memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_64;
  }
  uint64_t v193 = (void (**)(void *, void, uint64_t, int *))v7;
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  a1[v6[6]] = a2[v6[6]];
  a1[v6[7]] = a2[v6[7]];
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  uint64_t v15 = v6[9];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  void *v16 = *v17;
  v16[1] = v17[1];
  uint64_t v18 = v6[10];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  char v21 = v20[8];
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v21;
  uint64_t v22 = v6[11];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = v6[12];
  __dst = &a1[v25];
  uint64_t v189 = a2;
  uint64_t v26 = &a2[v25];
  uint64_t v27 = type metadata accessor for URL();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v200 = v29;
  if (v29(v26, 1, v27))
  {
    uint64_t v30 = sub_10000588C(&qword_101649E40);
    memcpy(__dst, v26, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  uint64_t v55 = v27;
  a2 = v189;
  uint64_t v56 = v6[13];
  uint64_t v57 = &a1[v56];
  uint64_t v58 = &v189[v56];
  __src = (void (**)(void *, const void *, void))v28;
  uint64_t v199 = v55;
  if (v200(&v189[v56], 1, v55))
  {
    uint64_t v59 = sub_10000588C(&qword_101649E40);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v57, v58, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v57, 0, 1, v55);
  }
  uint64_t v60 = v6[14];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &v189[v60];
  *uint64_t v61 = *(void *)v62;
  v61[1] = *((void *)v62 + 1);
  *(void *)&a1[v6[15]] = *(void *)&v189[v6[15]];
  uint64_t v63 = v6[16];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &v189[v63];
  uint64_t v66 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v67 = (void *)*((void *)v66 - 1);
  uint64_t v68 = (unsigned int (*)(char *, uint64_t, int *))v67[6];
  swift_bridgeObjectRetain();
  if (v68(v65, 1, v66))
  {
    uint64_t v69 = sub_10000588C(&qword_101649E50);
    memcpy(v64, v65, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    unint64_t v190 = v67;
    *uint64_t v64 = *(void *)v65;
    v64[1] = *((void *)v65 + 1);
    v64[2] = *((void *)v65 + 2);
    v64[3] = *((void *)v65 + 3);
    v64[4] = *((void *)v65 + 4);
    v64[5] = *((void *)v65 + 5);
    *((_WORD *)v64 + 24) = *((_WORD *)v65 + 24);
    v64[7] = *((void *)v65 + 7);
    uint64_t v70 = *((void *)v65 + 8);
    *((unsigned char *)v64 + 72) = v65[72];
    v64[8] = v70;
    uint64_t v71 = v66[10];
    uint64_t v72 = (char *)v64 + v71;
    uint64_t v73 = &v65[v71];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v200(v73, 1, v199))
    {
      uint64_t v74 = sub_10000588C(&qword_101649E40);
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
    else
    {
      __src[2](v72, v73, v199);
      ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v72, 0, 1, v199);
    }
    uint64_t v76 = v66[11];
    uint64_t v77 = (char *)v64 + v76;
    BOOL v78 = &v65[v76];
    if (v200(&v65[v76], 1, v199))
    {
      uint64_t v79 = sub_10000588C(&qword_101649E40);
      memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
    }
    else
    {
      __src[2](v77, v78, v199);
      ((void (*)(char *, void, uint64_t, uint64_t))__src[7])(v77, 0, 1, v199);
    }
    uint64_t v80 = v66[12];
    uint64_t v81 = (char *)v64 + v80;
    uint64_t v82 = &v65[v80];
    uint64_t v83 = *(void *)v82;
    v81[8] = v82[8];
    *(void *)uint64_t v81 = v83;
    uint64_t v84 = v66[13];
    Swift::Int v85 = (void *)((char *)v64 + v84);
    uint64_t v86 = &v65[v84];
    *Swift::Int v85 = *(void *)v86;
    v85[1] = *((void *)v86 + 1);
    *(void *)((char *)v64 + v66[14]) = *(void *)&v65[v66[14]];
    uint64_t v87 = v66[15];
    uint64_t v88 = (void *)((char *)v64 + v87);
    uint64_t v89 = &v65[v87];
    *uint64_t v88 = *(void *)v89;
    v88[1] = *((void *)v89 + 1);
    *(void *)((char *)v64 + v66[16]) = *(void *)&v65[v66[16]];
    uint64_t v90 = v66[17];
    uint64_t v91 = (char *)v64 + v90;
    uint64_t v92 = &v65[v90];
    long long v93 = *(_OWORD *)v92;
    v91[16] = v92[16];
    *(_OWORD *)uint64_t v91 = v93;
    uint64_t v94 = v66[18];
    unint64_t v95 = (char *)v64 + v94;
    uint64_t v96 = &v65[v94];
    long long v97 = *(_OWORD *)v96;
    v95[16] = v96[16];
    *(_OWORD *)unint64_t v95 = v97;
    unint64_t v98 = (void (*)(void *, void, uint64_t, int *))v190[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v98(v64, 0, 1, v66);
  }
  *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
  *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
  uint64_t v99 = v6[19];
  uint64_t v100 = &a1[v99];
  uint64_t v101 = &a2[v99];
  uint64_t v102 = __src[2];
  swift_bridgeObjectRetain();
  v102(v100, v101, v199);
  v102(&a1[v6[20]], &a2[v6[20]], v199);
  v102(&a1[v6[21]], &a2[v6[21]], v199);
  v102(&a1[v6[22]], &a2[v6[22]], v199);
  v102(&a1[v6[23]], &a2[v6[23]], v199);
  v102(&a1[v6[24]], &a2[v6[24]], v199);
  v193[7](a1, 0, 1, v6);
LABEL_64:
  uint64_t v182 = *(int *)(a3 + 20);
  uint64_t v183 = &a1[v182];
  Swift::Int v184 = &a2[v182];
  *uint64_t v183 = *v184;
  v183[1] = v184[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100958558(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10000588C(&qword_10163BBB0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v53 = v7;
    uint64_t v54 = a3;
    uint64_t v9 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
    *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
    uint64_t v10 = v6[10];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    *(void *)uint64_t v11 = *(void *)v12;
    v11[8] = v12[8];
    *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
    uint64_t v13 = v6[12];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for URL();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      uint64_t v19 = sub_10000588C(&qword_101649E40);
      memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    uint64_t v20 = v6[13];
    char v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    int v52 = v18;
    if (v18(&a2[v20], 1, v16))
    {
      uint64_t v23 = sub_10000588C(&qword_101649E40);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v22, v16);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
    }
    *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
    *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
    uint64_t v24 = v6[16];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    uint64_t v27 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v28 = *((void *)v27 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v28 + 48))(v26, 1, v27))
    {
      uint64_t v29 = sub_10000588C(&qword_101649E50);
      memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      long long v30 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v30;
      *((_OWORD *)v25 + 2) = *((_OWORD *)v26 + 2);
      *((_WORD *)v25 + 24) = *((_WORD *)v26 + 24);
      uint64_t v31 = *((void *)v26 + 8);
      *((void *)v25 + 7) = *((void *)v26 + 7);
      *((void *)v25 + 8) = v31;
      v25[72] = v26[72];
      uint64_t v32 = v27[10];
      uint64_t v49 = v28;
      __dst = &v25[v32];
      uint64_t v33 = &v26[v32];
      if (v52(&v26[v32], 1, v16))
      {
        uint64_t v34 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v33, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dst, v33, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v16);
      }
      uint64_t v35 = v27[11];
      __dsta = &v25[v35];
      uint64_t v36 = &v26[v35];
      if (v52(&v26[v35], 1, v16))
      {
        uint64_t v37 = sub_10000588C(&qword_101649E40);
        memcpy(__dsta, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 32))(__dsta, v36, v16);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(__dsta, 0, 1, v16);
      }
      uint64_t v38 = v27[12];
      uint64_t v39 = &v25[v38];
      uint64_t v40 = &v26[v38];
      *(void *)uint64_t v39 = *(void *)v40;
      v39[8] = v40[8];
      *(_OWORD *)&v25[v27[13]] = *(_OWORD *)&v26[v27[13]];
      *(void *)&v25[v27[14]] = *(void *)&v26[v27[14]];
      *(_OWORD *)&v25[v27[15]] = *(_OWORD *)&v26[v27[15]];
      *(void *)&v25[v27[16]] = *(void *)&v26[v27[16]];
      uint64_t v41 = v27[17];
      uint64_t v42 = &v25[v41];
      uint64_t v43 = &v26[v41];
      v42[16] = v43[16];
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      uint64_t v44 = v27[18];
      uint64_t v45 = &v25[v44];
      uint64_t v46 = &v26[v44];
      v45[16] = v46[16];
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      (*(void (**)(char *, void, uint64_t, int *))(v49 + 56))(v25, 0, 1, v27);
    }
    a3 = v54;
    *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
    *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v47(&a1[v6[19]], &a2[v6[19]], v16);
    v47(&a1[v6[20]], &a2[v6[20]], v16);
    v47(&a1[v6[21]], &a2[v6[21]], v16);
    v47(&a1[v6[22]], &a2[v6[22]], v16);
    v47(&a1[v6[23]], &a2[v6[23]], v16);
    v47(&a1[v6[24]], &a2[v6[24]], v16);
    (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

unsigned char *sub_100958C30(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10095268C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
      goto LABEL_7;
    }
    uint64_t v174 = a3;
    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
    uint64_t v23 = v6[8];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = (uint64_t *)&a2[v23];
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    *uint64_t v24 = v27;
    v24[1] = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = v6[9];
    uint64_t v29 = &a1[v28];
    long long v30 = (uint64_t *)&a2[v28];
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    *uint64_t v29 = v32;
    v29[1] = v31;
    swift_bridgeObjectRelease();
    uint64_t v33 = v6[10];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    *(void *)uint64_t v34 = *(void *)v35;
    v34[8] = v35[8];
    uint64_t v36 = v6[11];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = (uint64_t *)&a2[v36];
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    *uint64_t v37 = v40;
    v37[1] = v39;
    swift_bridgeObjectRelease();
    uint64_t v41 = v6[12];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    uint64_t v44 = type metadata accessor for URL();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v46 = *(uint64_t (**)(void))(v45 + 48);
    unsigned int v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v42, 1, v44);
    uint64_t v173 = v46;
    unsigned int v48 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v42, v43, v44);
LABEL_22:
        uint64_t v66 = v6[13];
        uint64_t v67 = &a1[v66];
        uint64_t v68 = &a2[v66];
        unsigned int v69 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v46)(&a1[v66], 1, v44);
        unsigned int v70 = ((uint64_t (*)(char *, uint64_t, uint64_t))v46)(v68, 1, v44);
        __dsta = (void (**)(void *, const void *, uint64_t))v45;
        if (v69)
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v67, v68, v44);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v67, 0, 1, v44);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v70)
          {
            (*(void (**)(char *, char *, uint64_t))(v45 + 40))(v67, v68, v44);
LABEL_28:
            uint64_t v72 = v6[14];
            uint64_t v73 = &a1[v72];
            uint64_t v74 = (uint64_t *)&a2[v72];
            uint64_t v76 = *v74;
            uint64_t v75 = v74[1];
            *uint64_t v73 = v76;
            v73[1] = v75;
            swift_bridgeObjectRelease();
            *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
            uint64_t v77 = v6[16];
            BOOL v78 = &a1[v77];
            uint64_t v79 = &a2[v77];
            uint64_t v80 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
            uint64_t v167 = *((void *)v80 - 1);
            uint64_t v81 = *(uint64_t (**)(char *, uint64_t, int *))(v167 + 48);
            int v82 = v81(v78, 1, v80);
            int v83 = v81(v79, 1, v80);
            if (v82)
            {
              if (!v83)
              {
                long long v84 = *((_OWORD *)v79 + 1);
                *(_OWORD *)BOOL v78 = *(_OWORD *)v79;
                *((_OWORD *)v78 + 1) = v84;
                *((_OWORD *)v78 + 2) = *((_OWORD *)v79 + 2);
                *((_WORD *)v78 + 24) = *((_WORD *)v79 + 24);
                uint64_t v85 = *((void *)v79 + 8);
                *((void *)v78 + 7) = *((void *)v79 + 7);
                *((void *)v78 + 8) = v85;
                v78[72] = v79[72];
                uint64_t v86 = v80[10];
                uint64_t v87 = &v78[v86];
                uint64_t v88 = &v79[v86];
                a3 = v174;
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v173)(&v79[v86], 1, v44))
                {
                  uint64_t v89 = sub_10000588C(&qword_101649E40);
                  memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
                }
                else
                {
                  __dsta[4](v87, v88, v44);
                  ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v87, 0, 1, v44);
                }
                uint64_t v114 = v80[11];
                uint64_t v115 = &v78[v114];
                uint64_t v116 = &v79[v114];
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v173)(&v79[v114], 1, v44))
                {
                  uint64_t v117 = sub_10000588C(&qword_101649E40);
                  memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
                  uint64_t v91 = __dsta;
                }
                else
                {
                  int v118 = v115;
                  int v119 = v116;
                  uint64_t v120 = v115;
                  uint64_t v91 = __dsta;
                  __dsta[4](v118, v119, v44);
                  ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v120, 0, 1, v44);
                }
                uint64_t v121 = v80[12];
                uint64_t v122 = &v78[v121];
                uint64_t v123 = &v79[v121];
                *(void *)uint64_t v122 = *(void *)v123;
                v122[8] = v123[8];
                *(_OWORD *)&v78[v80[13]] = *(_OWORD *)&v79[v80[13]];
                *(void *)&v78[v80[14]] = *(void *)&v79[v80[14]];
                *(_OWORD *)&v78[v80[15]] = *(_OWORD *)&v79[v80[15]];
                *(void *)&v78[v80[16]] = *(void *)&v79[v80[16]];
                uint64_t v124 = v80[17];
                uint64_t v125 = &v78[v124];
                uint64_t v126 = &v79[v124];
                v125[16] = v126[16];
                *(_OWORD *)uint64_t v125 = *(_OWORD *)v126;
                uint64_t v127 = v80[18];
                uint64_t v128 = &v78[v127];
                int v129 = &v79[v127];
                v128[16] = v129[16];
                *(_OWORD *)uint64_t v128 = *(_OWORD *)v129;
                (*(void (**)(char *, void, uint64_t, int *))(v167 + 56))(v78, 0, 1, v80);
                goto LABEL_64;
              }
            }
            else
            {
              if (!v83)
              {
                uint64_t v105 = *((void *)v79 + 1);
                *(void *)BOOL v78 = *(void *)v79;
                *((void *)v78 + 1) = v105;
                swift_bridgeObjectRelease();
                uint64_t v106 = *((void *)v79 + 3);
                *((void *)v78 + 2) = *((void *)v79 + 2);
                *((void *)v78 + 3) = v106;
                swift_bridgeObjectRelease();
                uint64_t v107 = *((void *)v79 + 5);
                *((void *)v78 + 4) = *((void *)v79 + 4);
                *((void *)v78 + 5) = v107;
                swift_bridgeObjectRelease();
                *((_WORD *)v78 + 24) = *((_WORD *)v79 + 24);
                uint64_t v108 = *((void *)v79 + 8);
                *((void *)v78 + 7) = *((void *)v79 + 7);
                *((void *)v78 + 8) = v108;
                v78[72] = v79[72];
                uint64_t v109 = v80[10];
                uint64_t v110 = &v78[v109];
                unint64_t v111 = &v79[v109];
                unsigned int v163 = ((uint64_t (*)(char *, uint64_t, uint64_t))v173)(&v78[v109], 1, v44);
                __src = v111;
                unsigned int v112 = ((uint64_t (*)(char *, uint64_t, uint64_t))v173)(v111, 1, v44);
                if (v163)
                {
                  if (v112)
                  {
                    uint64_t v113 = sub_10000588C(&qword_101649E40);
                    memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
                  }
                  else
                  {
                    __dsta[4](v110, v111, v44);
                    ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v110, 0, 1, v44);
                  }
                  a3 = v174;
                }
                else
                {
                  a3 = v174;
                  if (v112)
                  {
                    ((void (*)(char *, uint64_t))__dsta[1])(v110, v44);
                    uint64_t v130 = sub_10000588C(&qword_101649E40);
                    memcpy(v110, __src, *(void *)(*(void *)(v130 - 8) + 64));
                  }
                  else
                  {
                    __dsta[5](v110, __src, v44);
                  }
                }
                uint64_t v131 = v80[11];
                uint64_t v132 = &v79[v131];
                __srca = &v78[v131];
                int v162 = v173();
                unsigned int v133 = ((uint64_t (*)(char *, uint64_t, uint64_t))v173)(v132, 1, v44);
                if (v162)
                {
                  if (v133)
                  {
                    uint64_t v134 = sub_10000588C(&qword_101649E40);
                    memcpy(__srca, v132, *(void *)(*(void *)(v134 - 8) + 64));
                    uint64_t v91 = __dsta;
                  }
                  else
                  {
                    uint64_t v91 = __dsta;
                    __dsta[4](__srca, v132, v44);
                    ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(__srca, 0, 1, v44);
                  }
                }
                else
                {
                  uint64_t v91 = __dsta;
                  if (v133)
                  {
                    ((void (*)(char *, uint64_t))__dsta[1])(__srca, v44);
                    uint64_t v135 = sub_10000588C(&qword_101649E40);
                    memcpy(__srca, v132, *(void *)(*(void *)(v135 - 8) + 64));
                  }
                  else
                  {
                    __dsta[5](__srca, v132, v44);
                  }
                }
                uint64_t v136 = v80[12];
                uint64_t v137 = &v78[v136];
                uint64_t v138 = &v79[v136];
                *(void *)uint64_t v137 = *(void *)v138;
                v137[8] = v138[8];
                uint64_t v139 = v80[13];
                uint64_t v140 = &v78[v139];
                uint64_t v141 = &v79[v139];
                uint64_t v143 = *(void *)v141;
                uint64_t v142 = *((void *)v141 + 1);
                *(void *)uint64_t v140 = v143;
                *((void *)v140 + 1) = v142;
                swift_bridgeObjectRelease();
                *(void *)&v78[v80[14]] = *(void *)&v79[v80[14]];
                swift_bridgeObjectRelease();
                uint64_t v144 = v80[15];
                char v145 = &v78[v144];
                uint64_t v146 = &v79[v144];
                uint64_t v148 = *(void *)v146;
                uint64_t v147 = *((void *)v146 + 1);
                *(void *)char v145 = v148;
                *((void *)v145 + 1) = v147;
                swift_bridgeObjectRelease();
                *(void *)&v78[v80[16]] = *(void *)&v79[v80[16]];
                swift_bridgeObjectRelease();
                uint64_t v149 = v80[17];
                long long v150 = &v78[v149];
                uint64_t v151 = &v79[v149];
                *(_OWORD *)long long v150 = *(_OWORD *)v151;
                v150[16] = v151[16];
                uint64_t v152 = v80[18];
                uint64_t v153 = &v78[v152];
                long long v154 = &v79[v152];
                v153[16] = v154[16];
                *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
                goto LABEL_64;
              }
              sub_10095268C((uint64_t)v78, type metadata accessor for AccessoryInfoResponseContent.Configuration);
            }
            uint64_t v90 = sub_10000588C(&qword_101649E50);
            memcpy(v78, v79, *(void *)(*(void *)(v90 - 8) + 64));
            a3 = v174;
            uint64_t v91 = __dsta;
LABEL_64:
            *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
            *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
            swift_bridgeObjectRelease();
            uint64_t v155 = v91[5];
            v155(&a1[v6[19]], &a2[v6[19]], v44);
            v155(&a1[v6[20]], &a2[v6[20]], v44);
            v155(&a1[v6[21]], &a2[v6[21]], v44);
            v155(&a1[v6[22]], &a2[v6[22]], v44);
            v155(&a1[v6[23]], &a2[v6[23]], v44);
            v155(&a1[v6[24]], &a2[v6[24]], v44);
            goto LABEL_65;
          }
          (*(void (**)(char *, uint64_t))(v45 + 8))(v67, v44);
        }
        uint64_t v71 = sub_10000588C(&qword_101649E40);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v44);
    }
    uint64_t v65 = sub_10000588C(&qword_101649E40);
    memcpy(v42, v43, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_22;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v21 = sub_10000588C(&qword_10163BBB0);
    memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_65;
  }
  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  a1[v6[5]] = a2[v6[5]];
  a1[v6[6]] = a2[v6[6]];
  a1[v6[7]] = a2[v6[7]];
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  uint64_t v12 = v6[10];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  uint64_t v15 = v6[12];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for URL();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v172 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v172(v17, 1, v18))
  {
    uint64_t v20 = sub_10000588C(&qword_101649E40);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  uint64_t v49 = v6[13];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v175 = a3;
  uint64_t v171 = v7;
  if (v172(&a2[v49], 1, v18))
  {
    uint64_t v52 = sub_10000588C(&qword_101649E40);
    memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v50, v51, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v50, 0, 1, v18);
  }
  *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
  *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
  uint64_t v53 = v6[16];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v57 = *((void *)v56 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
  {
    uint64_t v58 = sub_10000588C(&qword_101649E50);
    memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
    uint64_t v59 = v171;
    a3 = v175;
  }
  else
  {
    long long v60 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v60;
    v54[2] = v55[2];
    *((_WORD *)v54 + 24) = *((_WORD *)v55 + 24);
    uint64_t v61 = *((void *)v55 + 8);
    *((void *)v54 + 7) = *((void *)v55 + 7);
    *((void *)v54 + 8) = v61;
    *((unsigned char *)v54 + 72) = *((unsigned char *)v55 + 72);
    uint64_t v62 = v56[10];
    uint64_t v166 = v57;
    __dst = (char *)v54 + v62;
    uint64_t v63 = (char *)v55 + v62;
    if (v172((char *)v55 + v62, 1, v18))
    {
      uint64_t v64 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v63, *(void *)(*(void *)(v64 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dst, v63, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dst, 0, 1, v18);
    }
    uint64_t v92 = v56[11];
    __dstb = (char *)v54 + v92;
    long long v93 = (char *)v55 + v92;
    if (v172((char *)v55 + v92, 1, v18))
    {
      uint64_t v94 = sub_10000588C(&qword_101649E40);
      memcpy(__dstb, v93, *(void *)(*(void *)(v94 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(__dstb, v93, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(__dstb, 0, 1, v18);
    }
    uint64_t v95 = v56[12];
    uint64_t v96 = (char *)v54 + v95;
    long long v97 = (char *)v55 + v95;
    *(void *)uint64_t v96 = *(void *)v97;
    v96[8] = v97[8];
    *(_OWORD *)((char *)v54 + v56[13]) = *(_OWORD *)((char *)v55 + v56[13]);
    *(void *)((char *)v54 + v56[14]) = *(void *)((char *)v55 + v56[14]);
    *(_OWORD *)((char *)v54 + v56[15]) = *(_OWORD *)((char *)v55 + v56[15]);
    *(void *)((char *)v54 + v56[16]) = *(void *)((char *)v55 + v56[16]);
    uint64_t v98 = v56[17];
    uint64_t v99 = (char *)v54 + v98;
    uint64_t v100 = (char *)v55 + v98;
    v99[16] = v100[16];
    *(_OWORD *)uint64_t v99 = *(_OWORD *)v100;
    uint64_t v101 = v56[18];
    uint64_t v102 = (char *)v54 + v101;
    uint64_t v103 = (char *)v55 + v101;
    v102[16] = v103[16];
    *(_OWORD *)uint64_t v102 = *(_OWORD *)v103;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v166 + 56))(v54, 0, 1, v56);
    a3 = v175;
    uint64_t v59 = v171;
  }
  *(_DWORD *)&a1[v6[17]] = *(_DWORD *)&a2[v6[17]];
  *(void *)&a1[v6[18]] = *(void *)&a2[v6[18]];
  uint64_t v104 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32);
  v104(&a1[v6[19]], &a2[v6[19]], v18);
  v104(&a1[v6[20]], &a2[v6[20]], v18);
  v104(&a1[v6[21]], &a2[v6[21]], v18);
  v104(&a1[v6[22]], &a2[v6[22]], v18);
  v104(&a1[v6[23]], &a2[v6[23]], v18);
  v104(&a1[v6[24]], &a2[v6[24]], v18);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v59 + 56))(a1, 0, 1, v6);
LABEL_65:
  uint64_t v156 = *(int *)(a3 + 20);
  uint64_t v157 = &a1[v156];
  uint64_t v158 = (uint64_t *)&a2[v156];
  uint64_t v160 = *v158;
  uint64_t v159 = v158[1];
  *uint64_t v157 = v160;
  v157[1] = v159;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100959E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100959E2C);
}

uint64_t sub_100959E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000588C(&qword_10163BBB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100959F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100959F14);
}

uint64_t sub_100959F14(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000588C(&qword_10163BBB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

void sub_100959FD8()
{
  sub_10095FD58(319, (unint64_t *)&unk_101652AD8, (void (*)(uint64_t))type metadata accessor for BeaconProductInfoRecord);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_10095A088(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    type metadata accessor for StableIdentifier();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v13;
        uint64_t v14 = v10[3];
        v9[2] = v10[2];
        v9[3] = v14;
        uint64_t v15 = v10[5];
        v9[4] = v10[4];
        v9[5] = v15;
        goto LABEL_8;
      case 2u:
        uint64_t v16 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
        uint64_t v17 = (int *)sub_10000588C(&qword_1016555E0);
        uint64_t v18 = v17[12];
        uint64_t v19 = (void *)((char *)v9 + v18);
        uint64_t v20 = (void *)((char *)v10 + v18);
        uint64_t v22 = *v20;
        uint64_t v21 = v20[1];
        *uint64_t v19 = v22;
        v19[1] = v21;
        uint64_t v23 = v17[16];
        uint64_t v24 = (void *)((char *)v9 + v23);
        uint64_t v25 = (void *)((char *)v10 + v23);
        uint64_t v26 = v25[1];
        *uint64_t v24 = *v25;
        v24[1] = v26;
        uint64_t v27 = v17[20];
        uint64_t v28 = (void *)((char *)v9 + v27);
        uint64_t v29 = (void *)((char *)v10 + v27);
        uint64_t v30 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v30;
        *(_WORD *)((char *)v9 + v17[24]) = *(_WORD *)((char *)v10 + v17[24]);
        uint64_t v31 = v17[28];
        uint64_t v32 = (void *)((char *)v9 + v31);
        uint64_t v33 = (void *)((char *)v10 + v31);
        uint64_t v34 = v33[1];
        *uint64_t v32 = *v33;
        v32[1] = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        uint64_t v35 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v9, v10, v35);
        uint64_t v36 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
        uint64_t v37 = v36[12];
        uint64_t v38 = (void *)((char *)v9 + v37);
        uint64_t v39 = (void *)((char *)v10 + v37);
        uint64_t v41 = *v39;
        uint64_t v40 = v39[1];
        *uint64_t v38 = v41;
        v38[1] = v40;
        uint64_t v42 = v36[16];
        uint64_t v43 = (void *)((char *)v9 + v42);
        uint64_t v44 = (void *)((char *)v10 + v42);
        uint64_t v45 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v45;
        uint64_t v46 = v36[20];
        unsigned int v47 = (void *)((char *)v9 + v46);
        unsigned int v48 = (void *)((char *)v10 + v46);
        uint64_t v49 = v48[1];
        *unsigned int v47 = *v48;
        v47[1] = v49;
        *((unsigned char *)v9 + v36[24]) = *((unsigned char *)v10 + v36[24]);
LABEL_8:
        swift_bridgeObjectRetain();
LABEL_9:
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v11 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v11;
        break;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    uint64_t v50 = a3[6];
    uint64_t v51 = a3[7];
    uint64_t v52 = (void *)((char *)v4 + v50);
    uint64_t v53 = (void *)((char *)a2 + v50);
    uint64_t v173 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v173;
    uint64_t v54 = (void *)((char *)v4 + v51);
    uint64_t v55 = (void *)((char *)a2 + v51);
    uint64_t v175 = v55[1];
    *uint64_t v54 = *v55;
    v54[1] = v175;
    uint64_t v56 = a3[8];
    uint64_t v57 = a3[9];
    uint64_t v58 = (void *)((char *)v4 + v56);
    uint64_t v59 = (void *)((char *)a2 + v56);
    uint64_t v168 = (void *)v59[1];
    *uint64_t v58 = *v59;
    v58[1] = v168;
    long long v60 = (void *)((char *)v4 + v57);
    uint64_t v61 = (void *)((char *)a2 + v57);
    uint64_t v171 = v61[1];
    *long long v60 = *v61;
    v60[1] = v171;
    uint64_t v62 = a3[11];
    *(void *)((char *)v4 + a3[10]) = *(void *)((char *)a2 + a3[10]);
    *(void *)((char *)v4 + v62) = *(void *)((char *)a2 + v62);
    uint64_t v63 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    uint64_t v64 = (void *)((char *)v4 + v63);
    uint64_t v65 = (void *)((char *)a2 + v63);
    uint64_t v166 = v65[1];
    *uint64_t v64 = *v65;
    v64[1] = v166;
    uint64_t v66 = a3[15];
    *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *(void *)((char *)v4 + v66) = *(void *)((char *)a2 + v66);
    uint64_t v67 = a3[16];
    uint64_t v68 = a3[17];
    unsigned int v69 = (void *)((char *)v4 + v67);
    unsigned int v70 = (void *)((char *)a2 + v67);
    uint64_t v71 = v70[1];
    *unsigned int v69 = *v70;
    v69[1] = v71;
    *(void *)((char *)v4 + v68) = *(void *)((char *)a2 + v68);
    uint64_t v72 = a3[19];
    *(void *)((char *)v4 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    uint64_t v73 = (void *)((char *)v4 + v72);
    uint64_t v74 = (void *)((char *)a2 + v72);
    uint64_t v75 = v74[1];
    *uint64_t v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = a3[21];
    *(void *)((char *)v4 + a3[20]) = *(void *)((char *)a2 + a3[20]);
    *(void *)((char *)v4 + v76) = *(void *)((char *)a2 + v76);
    uint64_t v77 = a3[23];
    *((unsigned char *)v4 + a3[22]) = *((unsigned char *)a2 + a3[22]);
    *((unsigned char *)v4 + v77) = *((unsigned char *)a2 + v77);
    uint64_t v78 = a3[24];
    uint64_t v177 = v4;
    __dst = (char *)v4 + v78;
    uint64_t v79 = (char *)a2 + v78;
    uint64_t v80 = type metadata accessor for UUID();
    uint64_t v81 = *(void *)(v80 - 8);
    uint64_t v165 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v165(v79, 1, v80))
    {
      uint64_t v82 = sub_10000588C(&qword_101638CF0);
      memcpy(__dst, v79, *(void *)(*(void *)(v82 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(__dst, v79, v80);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dst, 0, 1, v80);
    }
    uint64_t v83 = a3[26];
    *(_WORD *)((char *)v4 + a3[25]) = *(_WORD *)((char *)a2 + a3[25]);
    long long v84 = (char *)v4 + v83;
    uint64_t v85 = (char *)a2 + v83;
    uint64_t v86 = (int *)type metadata accessor for BeaconProductInfoRecord();
    uint64_t v87 = *((void *)v86 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v87 + 48))(v85, 1, v86))
    {
      uint64_t v88 = sub_10000588C(&qword_10163BBB0);
      memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
    }
    else
    {
      uint64_t v167 = v87;
      (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v84, v85, v80);
      v84[v86[5]] = v85[v86[5]];
      v84[v86[6]] = v85[v86[6]];
      v84[v86[7]] = v85[v86[7]];
      uint64_t v89 = v86[8];
      uint64_t v90 = &v84[v89];
      uint64_t v91 = &v85[v89];
      uint64_t v92 = *((void *)v91 + 1);
      *(void *)uint64_t v90 = *(void *)v91;
      *((void *)v90 + 1) = v92;
      uint64_t v93 = v86[9];
      uint64_t v94 = &v84[v93];
      uint64_t v95 = &v85[v93];
      uint64_t v96 = *((void *)v95 + 1);
      *(void *)uint64_t v94 = *(void *)v95;
      *((void *)v94 + 1) = v96;
      uint64_t v97 = v86[10];
      uint64_t v98 = &v84[v97];
      uint64_t v99 = &v85[v97];
      *(void *)uint64_t v98 = *(void *)v99;
      v98[8] = v99[8];
      uint64_t v100 = v86[11];
      uint64_t v101 = &v84[v100];
      uint64_t v102 = &v85[v100];
      uint64_t v103 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v103;
      uint64_t v104 = v86[12];
      uint64_t v169 = &v84[v104];
      uint64_t v105 = &v85[v104];
      uint64_t v106 = type metadata accessor for URL();
      uint64_t v176 = *(void *)(v106 - 8);
      uint64_t v107 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v176 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v174 = v107;
      if (v107(v105, 1, v106))
      {
        uint64_t v108 = sub_10000588C(&qword_101649E40);
        memcpy(v169, v105, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v169, v105, v106);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v169, 0, 1, v106);
      }
      uint64_t v109 = v86[13];
      uint64_t v110 = &v84[v109];
      unint64_t v111 = &v85[v109];
      uint64_t v4 = v177;
      uint64_t v172 = v106;
      if (v174(&v85[v109], 1, v106))
      {
        uint64_t v112 = sub_10000588C(&qword_101649E40);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v110, v111, v106);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v110, 0, 1, v106);
      }
      uint64_t v113 = v86[14];
      uint64_t v114 = &v84[v113];
      uint64_t v115 = &v85[v113];
      uint64_t v116 = *((void *)v115 + 1);
      *(void *)uint64_t v114 = *(void *)v115;
      *((void *)v114 + 1) = v116;
      *(void *)&v84[v86[15]] = *(void *)&v85[v86[15]];
      uint64_t v117 = v86[16];
      uint64_t v170 = v84;
      int v118 = &v84[v117];
      int v119 = &v85[v117];
      uint64_t v120 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
      uint64_t v121 = *(void *)(v120 - 8);
      uint64_t v122 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48);
      swift_bridgeObjectRetain();
      if (v122(v119, 1, v120))
      {
        uint64_t v123 = sub_10000588C(&qword_101649E50);
        memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        uint64_t v124 = *((void *)v119 + 1);
        *(void *)int v118 = *(void *)v119;
        *((void *)v118 + 1) = v124;
        uint64_t v125 = *((void *)v119 + 3);
        *((void *)v118 + 2) = *((void *)v119 + 2);
        *((void *)v118 + 3) = v125;
        uint64_t v126 = *((void *)v119 + 5);
        *((void *)v118 + 4) = *((void *)v119 + 4);
        *((void *)v118 + 5) = v126;
        *((_WORD *)v118 + 24) = *((_WORD *)v119 + 24);
        v118[72] = v119[72];
        uint64_t v127 = *((void *)v119 + 8);
        *((void *)v118 + 7) = *((void *)v119 + 7);
        *((void *)v118 + 8) = v127;
        __dsta = (int *)v120;
        uint64_t v128 = *(int *)(v120 + 40);
        int v129 = &v118[v128];
        uint64_t v130 = &v119[v128];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v174(v130, 1, v172))
        {
          uint64_t v131 = sub_10000588C(&qword_101649E40);
          memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v129, v130, v172);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v129, 0, 1, v172);
        }
        uint64_t v132 = __dsta[11];
        unsigned int v133 = &v118[v132];
        uint64_t v134 = &v119[v132];
        if (v174(&v119[v132], 1, v172))
        {
          uint64_t v135 = sub_10000588C(&qword_101649E40);
          memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v176 + 16))(v133, v134, v172);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v176 + 56))(v133, 0, 1, v172);
        }
        uint64_t v136 = __dsta[12];
        uint64_t v137 = &v118[v136];
        uint64_t v138 = &v119[v136];
        *(void *)uint64_t v137 = *(void *)v138;
        v137[8] = v138[8];
        uint64_t v139 = __dsta[13];
        uint64_t v140 = &v118[v139];
        uint64_t v141 = &v119[v139];
        uint64_t v142 = *((void *)v141 + 1);
        *(void *)uint64_t v140 = *(void *)v141;
        *((void *)v140 + 1) = v142;
        *(void *)&v118[__dsta[14]] = *(void *)&v119[__dsta[14]];
        uint64_t v143 = __dsta[15];
        uint64_t v144 = &v118[v143];
        char v145 = &v119[v143];
        uint64_t v146 = *((void *)v145 + 1);
        *(void *)uint64_t v144 = *(void *)v145;
        *((void *)v144 + 1) = v146;
        *(void *)&v118[__dsta[16]] = *(void *)&v119[__dsta[16]];
        uint64_t v147 = __dsta[17];
        uint64_t v148 = &v118[v147];
        uint64_t v149 = &v119[v147];
        *(_OWORD *)uint64_t v148 = *(_OWORD *)v149;
        v148[16] = v149[16];
        uint64_t v150 = __dsta[18];
        uint64_t v151 = &v118[v150];
        uint64_t v152 = &v119[v150];
        *(_OWORD *)uint64_t v151 = *(_OWORD *)v152;
        v151[16] = v152[16];
        uint64_t v153 = *(void (**)(char *, void, uint64_t, int *))(v121 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v153(v118, 0, 1, __dsta);
      }
      long long v84 = v170;
      *(_DWORD *)&v170[v86[17]] = *(_DWORD *)&v85[v86[17]];
      *(void *)&v170[v86[18]] = *(void *)&v85[v86[18]];
      uint64_t v154 = v86[19];
      uint64_t v155 = &v170[v154];
      uint64_t v156 = &v85[v154];
      uint64_t v157 = *(void (**)(char *, char *, uint64_t))(v176 + 16);
      swift_bridgeObjectRetain();
      v157(v155, v156, v172);
      v157(&v170[v86[20]], &v85[v86[20]], v172);
      v157(&v170[v86[21]], &v85[v86[21]], v172);
      v157(&v170[v86[22]], &v85[v86[22]], v172);
      v157(&v170[v86[23]], &v85[v86[23]], v172);
      v157(&v170[v86[24]], &v85[v86[24]], v172);
      (*(void (**)(char *, void, uint64_t, int *))(v167 + 56))(v170, 0, 1, v86);
    }
    uint64_t v158 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
    uint64_t v159 = &v84[v158];
    uint64_t v160 = &v85[v158];
    uint64_t v161 = *((void *)v160 + 1);
    *(void *)uint64_t v159 = *(void *)v160;
    *((void *)v159 + 1) = v161;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10095ACC8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  type metadata accessor for StableIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 4u:
      goto LABEL_5;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2u:
      uint64_t v5 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      sub_10000588C(&qword_1016555E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 3u:
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
      sub_10000588C((uint64_t *)&unk_1016565E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[24];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  uint64_t v10 = a1 + a2[26];
  uint64_t v11 = (int *)type metadata accessor for BeaconProductInfoRecord();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v10 + v11[12];
    uint64_t v13 = type metadata accessor for URL();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    if (!v15(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    }
    uint64_t v16 = v10 + v11[13];
    if (!v15(v16, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v13);
    }
    swift_bridgeObjectRelease();
    uint64_t v17 = v10 + v11[16];
    uint64_t v18 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v17 + *(int *)(v18 + 40);
      if (!v15(v19, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v19, v13);
      }
      uint64_t v20 = v17 + *(int *)(v18 + 44);
      if (!v15(v20, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v20, v13);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v21(v10 + v11[19], v13);
    v21(v10 + v11[20], v13);
    v21(v10 + v11[21], v13);
    v21(v10 + v11[22], v13);
    v21(v10 + v11[23], v13);
    v21(v10 + v11[24], v13);
  }
  type metadata accessor for ProductInfoState(0);

  return swift_bridgeObjectRelease();
}

void *sub_10095B2D8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  type metadata accessor for StableIdentifier();
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v11;
      uint64_t v12 = v9[3];
      v8[2] = v9[2];
      v8[3] = v12;
      uint64_t v13 = v9[5];
      v8[4] = v9[4];
      v8[5] = v13;
      goto LABEL_6;
    case 2u:
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v8, v9, v14);
      uint64_t v15 = (int *)sub_10000588C(&qword_1016555E0);
      uint64_t v16 = v15[12];
      uint64_t v17 = (void *)((char *)v8 + v16);
      uint64_t v18 = (void *)((char *)v9 + v16);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      *uint64_t v17 = v20;
      v17[1] = v19;
      uint64_t v21 = v15[16];
      uint64_t v22 = (void *)((char *)v8 + v21);
      uint64_t v23 = (void *)((char *)v9 + v21);
      uint64_t v24 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v24;
      uint64_t v25 = v15[20];
      uint64_t v26 = (void *)((char *)v8 + v25);
      uint64_t v27 = (void *)((char *)v9 + v25);
      uint64_t v28 = v27[1];
      *uint64_t v26 = *v27;
      v26[1] = v28;
      *(_WORD *)((char *)v8 + v15[24]) = *(_WORD *)((char *)v9 + v15[24]);
      uint64_t v29 = v15[28];
      uint64_t v30 = (void *)((char *)v8 + v29);
      uint64_t v31 = (void *)((char *)v9 + v29);
      uint64_t v32 = v31[1];
      *uint64_t v30 = *v31;
      v30[1] = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 3u:
      uint64_t v33 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v8, v9, v33);
      uint64_t v34 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
      uint64_t v35 = v34[12];
      uint64_t v36 = (void *)((char *)v8 + v35);
      uint64_t v37 = (void *)((char *)v9 + v35);
      uint64_t v39 = *v37;
      uint64_t v38 = v37[1];
      *uint64_t v36 = v39;
      v36[1] = v38;
      uint64_t v40 = v34[16];
      uint64_t v41 = (void *)((char *)v8 + v40);
      uint64_t v42 = (void *)((char *)v9 + v40);
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      uint64_t v44 = v34[20];
      uint64_t v45 = (void *)((char *)v8 + v44);
      uint64_t v46 = (void *)((char *)v9 + v44);
      uint64_t v47 = v46[1];
      *uint64_t v45 = *v46;
      v45[1] = v47;
      *((unsigned char *)v8 + v34[24]) = *((unsigned char *)v9 + v34[24]);
LABEL_6:
      swift_bridgeObjectRetain();
LABEL_7:
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v10 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v10;
      break;
  }
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  uint64_t v48 = a3[6];
  uint64_t v49 = a3[7];
  uint64_t v50 = (void *)((char *)a1 + v48);
  uint64_t v51 = (void *)((char *)a2 + v48);
  uint64_t v173 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v173;
  uint64_t v52 = (void *)((char *)a1 + v49);
  uint64_t v53 = (void *)((char *)a2 + v49);
  uint64_t v175 = v53[1];
  *uint64_t v52 = *v53;
  v52[1] = v175;
  uint64_t v54 = a3[8];
  uint64_t v55 = a3[9];
  uint64_t v56 = (void *)((char *)a1 + v54);
  uint64_t v57 = (void *)((char *)a2 + v54);
  uint64_t v168 = v57[1];
  *uint64_t v56 = *v57;
  v56[1] = v168;
  uint64_t v58 = (void *)((char *)a1 + v55);
  uint64_t v59 = (void *)((char *)a2 + v55);
  uint64_t v170 = (void *)v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v170;
  uint64_t v60 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v60) = *(void *)((char *)a2 + v60);
  uint64_t v61 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v62 = (void *)((char *)a1 + v61);
  uint64_t v63 = (void *)((char *)a2 + v61);
  uint64_t v166 = v63[1];
  *uint64_t v62 = *v63;
  v62[1] = v166;
  uint64_t v64 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v64) = *(void *)((char *)a2 + v64);
  uint64_t v65 = a3[16];
  uint64_t v66 = a3[17];
  uint64_t v67 = (void *)((char *)a1 + v65);
  uint64_t v68 = (void *)((char *)a2 + v65);
  uint64_t v69 = v68[1];
  *uint64_t v67 = *v68;
  v67[1] = v69;
  *(void *)((char *)a1 + v66) = *(void *)((char *)a2 + v66);
  uint64_t v70 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v71 = (void *)((char *)a1 + v70);
  uint64_t v72 = (void *)((char *)a2 + v70);
  uint64_t v73 = v72[1];
  *uint64_t v71 = *v72;
  v71[1] = v73;
  uint64_t v74 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  *(void *)((char *)a1 + v74) = *(void *)((char *)a2 + v74);
  uint64_t v75 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v75) = *((unsigned char *)a2 + v75);
  uint64_t v76 = a3[24];
  uint64_t v176 = a1;
  __dst = (char *)a1 + v76;
  uint64_t v77 = (char *)a2 + v76;
  uint64_t v78 = type metadata accessor for UUID();
  uint64_t v79 = *(void *)(v78 - 8);
  unsigned int v163 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v163(v77, 1, v78))
  {
    uint64_t v80 = sub_10000588C(&qword_101638CF0);
    memcpy(__dst, v77, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(__dst, v77, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v78);
  }
  uint64_t v81 = v176;
  uint64_t v82 = a3[26];
  *(_WORD *)((char *)v176 + a3[25]) = *(_WORD *)((char *)a2 + a3[25]);
  uint64_t v83 = (char *)v176 + v82;
  long long v84 = (char *)a2 + v82;
  uint64_t v85 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v86 = *((void *)v85 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v86 + 48))(v84, 1, v85))
  {
    uint64_t v87 = sub_10000588C(&qword_10163BBB0);
    memcpy(v83, v84, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    uint64_t v167 = v86;
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v83, v84, v78);
    v83[v85[5]] = v84[v85[5]];
    v83[v85[6]] = v84[v85[6]];
    v83[v85[7]] = v84[v85[7]];
    uint64_t v88 = v85[8];
    uint64_t v89 = &v83[v88];
    uint64_t v90 = &v84[v88];
    uint64_t v91 = *((void *)v90 + 1);
    *(void *)uint64_t v89 = *(void *)v90;
    *((void *)v89 + 1) = v91;
    uint64_t v92 = v85[9];
    uint64_t v93 = &v83[v92];
    uint64_t v94 = &v84[v92];
    uint64_t v95 = *((void *)v94 + 1);
    *(void *)uint64_t v93 = *(void *)v94;
    *((void *)v93 + 1) = v95;
    uint64_t v96 = v85[10];
    uint64_t v97 = &v83[v96];
    uint64_t v98 = &v84[v96];
    *(void *)uint64_t v97 = *(void *)v98;
    v97[8] = v98[8];
    uint64_t v99 = v85[11];
    uint64_t v100 = &v83[v99];
    uint64_t v101 = &v84[v99];
    uint64_t v102 = *((void *)v101 + 1);
    *(void *)uint64_t v100 = *(void *)v101;
    *((void *)v100 + 1) = v102;
    uint64_t v103 = v85[12];
    uint64_t v171 = &v83[v103];
    int64_t v164 = &v84[v103];
    uint64_t v104 = type metadata accessor for URL();
    uint64_t v105 = *(void *)(v104 - 8);
    uint64_t v106 = *(unsigned int (**)(char *, uint64_t, void *))(v105 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v174 = v106;
    if (v106(v164, 1, (void *)v104))
    {
      uint64_t v107 = sub_10000588C(&qword_101649E40);
      memcpy(v171, v164, *(void *)(*(void *)(v107 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v171, v164, v104);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v171, 0, 1, v104);
    }
    uint64_t v108 = v85[13];
    uint64_t v109 = &v83[v108];
    uint64_t v110 = &v84[v108];
    uint64_t v169 = v105;
    uint64_t v172 = (void *)v104;
    if (v106(&v84[v108], 1, (void *)v104))
    {
      uint64_t v111 = sub_10000588C(&qword_101649E40);
      memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v109, v110, v104);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v109, 0, 1, v104);
    }
    uint64_t v112 = v85[14];
    uint64_t v113 = &v83[v112];
    uint64_t v114 = &v84[v112];
    uint64_t v115 = *((void *)v114 + 1);
    *(void *)uint64_t v113 = *(void *)v114;
    *((void *)v113 + 1) = v115;
    *(void *)&v83[v85[15]] = *(void *)&v84[v85[15]];
    uint64_t v116 = v85[16];
    uint64_t v117 = &v83[v116];
    int v118 = &v84[v116];
    int v119 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v120 = *((void *)v119 - 1);
    uint64_t v121 = *(unsigned int (**)(char *, uint64_t, int *))(v120 + 48);
    swift_bridgeObjectRetain();
    if (v121(v118, 1, v119))
    {
      uint64_t v122 = sub_10000588C(&qword_101649E50);
      memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
      uint64_t v81 = v176;
    }
    else
    {
      uint64_t v165 = v120;
      uint64_t v123 = *((void *)v118 + 1);
      *(void *)uint64_t v117 = *(void *)v118;
      *((void *)v117 + 1) = v123;
      uint64_t v124 = *((void *)v118 + 3);
      *((void *)v117 + 2) = *((void *)v118 + 2);
      *((void *)v117 + 3) = v124;
      uint64_t v125 = *((void *)v118 + 5);
      *((void *)v117 + 4) = *((void *)v118 + 4);
      *((void *)v117 + 5) = v125;
      *((_WORD *)v117 + 24) = *((_WORD *)v118 + 24);
      v117[72] = v118[72];
      uint64_t v126 = *((void *)v118 + 8);
      *((void *)v117 + 7) = *((void *)v118 + 7);
      *((void *)v117 + 8) = v126;
      uint64_t v127 = v119[10];
      uint64_t v128 = &v117[v127];
      int v129 = &v118[v127];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v176;
      if (v174(v129, 1, v172))
      {
        uint64_t v130 = sub_10000588C(&qword_101649E40);
        memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v169 + 16))(v128, v129, v172);
        (*(void (**)(char *, void, uint64_t, void *))(v169 + 56))(v128, 0, 1, v172);
      }
      uint64_t v131 = v119[11];
      uint64_t v132 = &v117[v131];
      unsigned int v133 = &v118[v131];
      if (v174(&v118[v131], 1, v172))
      {
        uint64_t v134 = sub_10000588C(&qword_101649E40);
        memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v169 + 16))(v132, v133, v172);
        (*(void (**)(char *, void, uint64_t, void *))(v169 + 56))(v132, 0, 1, v172);
      }
      uint64_t v135 = v119[12];
      uint64_t v136 = &v117[v135];
      uint64_t v137 = &v118[v135];
      *(void *)uint64_t v136 = *(void *)v137;
      v136[8] = v137[8];
      uint64_t v138 = v119[13];
      uint64_t v139 = &v117[v138];
      uint64_t v140 = &v118[v138];
      uint64_t v141 = *((void *)v140 + 1);
      *(void *)uint64_t v139 = *(void *)v140;
      *((void *)v139 + 1) = v141;
      *(void *)&v117[v119[14]] = *(void *)&v118[v119[14]];
      uint64_t v142 = v119[15];
      uint64_t v143 = &v117[v142];
      uint64_t v144 = &v118[v142];
      uint64_t v145 = *((void *)v144 + 1);
      *(void *)uint64_t v143 = *(void *)v144;
      *((void *)v143 + 1) = v145;
      *(void *)&v117[v119[16]] = *(void *)&v118[v119[16]];
      uint64_t v146 = v119[17];
      uint64_t v147 = &v117[v146];
      uint64_t v148 = &v118[v146];
      *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
      v147[16] = v148[16];
      uint64_t v149 = v119[18];
      uint64_t v150 = &v117[v149];
      uint64_t v151 = &v118[v149];
      *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
      v150[16] = v151[16];
      uint64_t v152 = *(void (**)(char *, void, uint64_t, int *))(v165 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v152(v117, 0, 1, v119);
    }
    *(_DWORD *)&v83[v85[17]] = *(_DWORD *)&v84[v85[17]];
    *(void *)&v83[v85[18]] = *(void *)&v84[v85[18]];
    uint64_t v153 = v85[19];
    uint64_t v154 = &v83[v153];
    uint64_t v155 = &v84[v153];
    uint64_t v156 = *(void (**)(char *, char *, void *))(v169 + 16);
    swift_bridgeObjectRetain();
    v156(v154, v155, v172);
    v156(&v83[v85[20]], &v84[v85[20]], v172);
    v156(&v83[v85[21]], &v84[v85[21]], v172);
    v156(&v83[v85[22]], &v84[v85[22]], v172);
    v156(&v83[v85[23]], &v84[v85[23]], v172);
    v156(&v83[v85[24]], &v84[v85[24]], v172);
    (*(void (**)(char *, void, uint64_t, int *))(v167 + 56))(v83, 0, 1, v85);
  }
  uint64_t v157 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
  uint64_t v158 = &v83[v157];
  uint64_t v159 = &v84[v157];
  uint64_t v160 = *((void *)v159 + 1);
  *(void *)uint64_t v158 = *(void *)v159;
  *((void *)v158 + 1) = v160;
  swift_bridgeObjectRetain();
  return v81;
}

void *sub_10095BEAC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_10095268C((uint64_t)a1 + v6, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
    type metadata accessor for StableIdentifier();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        v7[2] = v8[2];
        v7[3] = v8[3];
        v7[4] = v8[4];
        v7[5] = v8[5];
        goto LABEL_7;
      case 2u:
        uint64_t v9 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        uint64_t v10 = (int *)sub_10000588C(&qword_1016555E0);
        uint64_t v11 = v10[12];
        uint64_t v12 = (void *)((char *)v7 + v11);
        uint64_t v13 = (void *)((char *)v8 + v11);
        void *v12 = *v13;
        v12[1] = v13[1];
        uint64_t v14 = v10[16];
        uint64_t v15 = (void *)((char *)v7 + v14);
        uint64_t v16 = (void *)((char *)v8 + v14);
        void *v15 = *v16;
        v15[1] = v16[1];
        uint64_t v17 = v10[20];
        uint64_t v18 = (void *)((char *)v7 + v17);
        uint64_t v19 = (void *)((char *)v8 + v17);
        *uint64_t v18 = *v19;
        v18[1] = v19[1];
        *(_WORD *)((char *)v7 + v10[24]) = *(_WORD *)((char *)v8 + v10[24]);
        uint64_t v20 = v10[28];
        uint64_t v21 = (void *)((char *)v7 + v20);
        uint64_t v22 = (void *)((char *)v8 + v20);
        void *v21 = *v22;
        v21[1] = v22[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 3u:
        uint64_t v23 = type metadata accessor for UUID();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v7, v8, v23);
        uint64_t v24 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
        uint64_t v25 = v24[12];
        uint64_t v26 = (void *)((char *)v7 + v25);
        uint64_t v27 = (void *)((char *)v8 + v25);
        *uint64_t v26 = *v27;
        v26[1] = v27[1];
        uint64_t v28 = v24[16];
        uint64_t v29 = (void *)((char *)v7 + v28);
        uint64_t v30 = (void *)((char *)v8 + v28);
        *uint64_t v29 = *v30;
        v29[1] = v30[1];
        uint64_t v31 = v24[20];
        uint64_t v32 = (void *)((char *)v7 + v31);
        uint64_t v33 = (void *)((char *)v8 + v31);
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        *((unsigned char *)v7 + v24[24]) = *((unsigned char *)v8 + v24[24]);
LABEL_7:
        swift_bridgeObjectRetain();
LABEL_8:
        swift_bridgeObjectRetain();
        break;
      default:
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        break;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = a3[6];
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  *uint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[7];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[8];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[9];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  *uint64_t v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v46 = a3[13];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  uint64_t v49 = a3[16];
  uint64_t v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v52 = a3[19];
  uint64_t v53 = (void *)((char *)a1 + v52);
  uint64_t v54 = (void *)((char *)a2 + v52);
  *uint64_t v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + a3[23]) = *((unsigned char *)a2 + a3[23]);
  uint64_t v55 = a3[24];
  uint64_t v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_16;
    }
    goto LABEL_15;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_15:
    uint64_t v63 = sub_10000588C(&qword_101638CF0);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_16;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 24))(v56, v57, v58);
LABEL_16:
  *(_WORD *)((char *)a1 + a3[25]) = *(_WORD *)((char *)a2 + a3[25]);
  uint64_t v64 = a3[26];
  uint64_t v65 = (char *)a1 + v64;
  uint64_t v66 = (char *)a2 + v64;
  uint64_t v67 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v68 = (void *)*((void *)v67 - 1);
  uint64_t v69 = (uint64_t (*)(unsigned char *, uint64_t, int *))v68[6];
  int v70 = v69(v65, 1, v67);
  int v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (v71)
    {
      sub_10095268C((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
      goto LABEL_22;
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 24))(v65, v66, v58);
    v65[v67[5]] = v66[v67[5]];
    v65[v67[6]] = v66[v67[6]];
    v65[v67[7]] = v66[v67[7]];
    uint64_t v92 = v67[8];
    uint64_t v93 = &v65[v92];
    uint64_t v94 = &v66[v92];
    *uint64_t v93 = *v94;
    v93[1] = v94[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v95 = v67[9];
    uint64_t v96 = &v65[v95];
    uint64_t v97 = &v66[v95];
    *uint64_t v96 = *v97;
    v96[1] = v97[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v98 = v67[10];
    uint64_t v99 = &v65[v98];
    uint64_t v100 = &v66[v98];
    uint64_t v101 = *(void *)v100;
    v99[8] = v100[8];
    *(void *)uint64_t v99 = v101;
    uint64_t v102 = v67[11];
    uint64_t v103 = &v65[v102];
    uint64_t v104 = &v66[v102];
    void *v103 = *v104;
    v103[1] = v104[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v105 = v67[12];
    uint64_t v106 = &v65[v105];
    uint64_t v107 = &v66[v105];
    uint64_t v108 = type metadata accessor for URL();
    uint64_t v109 = *(void *)(v108 - 8);
    uint64_t v110 = *(uint64_t (**)(void))(v109 + 48);
    uint64_t v253 = v106;
    LODWORD(v106) = ((uint64_t (*)(char *, uint64_t, uint64_t))v110)(v106, 1, v108);
    uint64_t v260 = v110;
    unsigned int v111 = ((uint64_t (*)(char *, uint64_t, uint64_t))v110)(v107, 1, v108);
    if (v106)
    {
      if (v111)
      {
        size_t v112 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v113 = v253;
LABEL_37:
        memcpy(v113, v107, v112);
        goto LABEL_46;
      }
      (*(void (**)(void *, char *, uint64_t))(v109 + 16))(v253, v107, v108);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v109 + 56))(v253, 0, 1, v108);
    }
    else
    {
      if (v111)
      {
        (*(void (**)(void *, uint64_t))(v109 + 8))(v253, v108);
        size_t v112 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v113 = v253;
        goto LABEL_37;
      }
      (*(void (**)(void *, char *, uint64_t))(v109 + 24))(v253, v107, v108);
    }
LABEL_46:
    uint64_t v162 = v67[13];
    unsigned int v163 = &v66[v162];
    uint64_t v249 = &v65[v162];
    int v164 = v110();
    unsigned int v165 = ((uint64_t (*)(char *, uint64_t, uint64_t))v110)(v163, 1, v108);
    __srca = (void *)v108;
    uint64_t v258 = v109;
    if (v164)
    {
      if (v165)
      {
        size_t v166 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v167 = v249;
LABEL_51:
        memcpy(v167, v163, v166);
        goto LABEL_54;
      }
      (*(void (**)(char *, char *, uint64_t))(v109 + 16))(v249, v163, v108);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v109 + 56))(v249, 0, 1, v108);
    }
    else
    {
      if (v165)
      {
        (*(void (**)(char *, uint64_t))(v109 + 8))(v249, v108);
        size_t v166 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        uint64_t v167 = v249;
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v109 + 24))(v249, v163, v108);
    }
LABEL_54:
    uint64_t v168 = v67[14];
    uint64_t v169 = &v65[v168];
    uint64_t v170 = &v66[v168];
    *uint64_t v169 = *v170;
    v169[1] = v170[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v65[v67[15]] = *(void *)&v66[v67[15]];
    uint64_t v171 = v67[16];
    uint64_t v172 = (uint64_t)&v65[v171];
    uint64_t v173 = &v66[v171];
    uint64_t v174 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v250 = (void *)*((void *)v174 - 1);
    uint64_t v175 = (uint64_t (*)(uint64_t, uint64_t, int *))v250[6];
    int v176 = v175(v172, 1, v174);
    int v177 = v175((uint64_t)v173, 1, v174);
    if (v176)
    {
      if (!v177)
      {
        *(void *)uint64_t v172 = *(void *)v173;
        *(void *)(v172 + 8) = *((void *)v173 + 1);
        *(void *)(v172 + 16) = *((void *)v173 + 2);
        *(void *)(v172 + 24) = *((void *)v173 + 3);
        *(void *)(v172 + 32) = *((void *)v173 + 4);
        *(void *)(v172 + 40) = *((void *)v173 + 5);
        *(_WORD *)(v172 + 48) = *((_WORD *)v173 + 24);
        *(void *)(v172 + 56) = *((void *)v173 + 7);
        uint64_t v178 = *((void *)v173 + 8);
        *(unsigned char *)(v172 + 72) = v173[72];
        *(void *)(v172 + 64) = v178;
        uint64_t v179 = v174[10];
        __dstb = (void *)(v172 + v179);
        long long v180 = &v173[v179];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (((unsigned int (*)(char *, uint64_t, void *))v260)(v180, 1, __srca))
        {
          uint64_t v181 = sub_10000588C(&qword_101649E40);
          memcpy(__dstb, v180, *(void *)(*(void *)(v181 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, void *))(v258 + 16))(__dstb, v180, __srca);
          (*(void (**)(void *, void, uint64_t, void *))(v258 + 56))(__dstb, 0, 1, __srca);
        }
        uint64_t v191 = v174[11];
        uint64_t v192 = (void *)(v172 + v191);
        uint64_t v193 = &v173[v191];
        if (((unsigned int (*)(char *, uint64_t, void *))v260)(&v173[v191], 1, __srca))
        {
          uint64_t v194 = sub_10000588C(&qword_101649E40);
          memcpy(v192, v193, *(void *)(*(void *)(v194 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, void *))(v258 + 16))(v192, v193, __srca);
          (*(void (**)(void *, void, uint64_t, void *))(v258 + 56))(v192, 0, 1, __srca);
        }
        uint64_t v195 = v174[12];
        uint64_t v196 = v172 + v195;
        Swift::Int v197 = &v173[v195];
        uint64_t v198 = *(void *)v197;
        *(unsigned char *)(v196 + 8) = v197[8];
        *(void *)uint64_t v196 = v198;
        uint64_t v199 = v174[13];
        Swift::Int v200 = (void *)(v172 + v199);
        uint64_t v201 = &v173[v199];
        *Swift::Int v200 = *(void *)v201;
        v200[1] = *((void *)v201 + 1);
        *(void *)(v172 + v174[14]) = *(void *)&v173[v174[14]];
        uint64_t v202 = v174[15];
        uint64_t v203 = (void *)(v172 + v202);
        uint64_t v204 = &v173[v202];
        *uint64_t v203 = *(void *)v204;
        v203[1] = *((void *)v204 + 1);
        *(void *)(v172 + v174[16]) = *(void *)&v173[v174[16]];
        uint64_t v205 = v174[17];
        uint64_t v206 = v172 + v205;
        uint64_t v207 = &v173[v205];
        long long v208 = *(_OWORD *)v207;
        *(unsigned char *)(v206 + 16) = v207[16];
        *(_OWORD *)uint64_t v206 = v208;
        uint64_t v209 = v174[18];
        uint64_t v210 = v172 + v209;
        uint64_t v211 = &v173[v209];
        long long v212 = *(_OWORD *)v211;
        *(unsigned char *)(v210 + 16) = v211[16];
        *(_OWORD *)uint64_t v210 = v212;
        uint64_t v213 = (void (*)(uint64_t, void, uint64_t, int *))v250[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v213(v172, 0, 1, v174);
        goto LABEL_69;
      }
LABEL_60:
      uint64_t v182 = sub_10000588C(&qword_101649E50);
      memcpy((void *)v172, v173, *(void *)(*(void *)(v182 - 8) + 64));
LABEL_69:
      Swift::Int v184 = __srca;
      uint64_t v188 = v258;
LABEL_70:
      *(_DWORD *)&v65[v67[17]] = *(_DWORD *)&v66[v67[17]];
      *(void *)&v65[v67[18]] = *(void *)&v66[v67[18]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v214 = *(void (**)(unsigned char *, unsigned char *, void *))(v188 + 24);
      v214(&v65[v67[19]], &v66[v67[19]], v184);
      v214(&v65[v67[20]], &v66[v67[20]], v184);
      v214(&v65[v67[21]], &v66[v67[21]], v184);
      v214(&v65[v67[22]], &v66[v67[22]], v184);
      v214(&v65[v67[23]], &v66[v67[23]], v184);
      v214(&v65[v67[24]], &v66[v67[24]], v184);
      goto LABEL_71;
    }
    if (v177)
    {
      sub_10095268C(v172, type metadata accessor for AccessoryInfoResponseContent.Configuration);
      goto LABEL_60;
    }
    *(void *)uint64_t v172 = *(void *)v173;
    *(void *)(v172 + 8) = *((void *)v173 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v172 + 16) = *((void *)v173 + 2);
    *(void *)(v172 + 24) = *((void *)v173 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v172 + 32) = *((void *)v173 + 4);
    *(void *)(v172 + 40) = *((void *)v173 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_WORD *)(v172 + 48) = *((_WORD *)v173 + 24);
    *(void *)(v172 + 56) = *((void *)v173 + 7);
    uint64_t v183 = *((void *)v173 + 8);
    *(unsigned char *)(v172 + 72) = v173[72];
    *(void *)(v172 + 64) = v183;
    Swift::Int v184 = __srca;
    uint64_t v185 = v174[10];
    uint64_t v186 = &v173[v185];
    uint64_t v251 = (void *)(v172 + v185);
    int v241 = v260();
    unsigned int v187 = ((uint64_t (*)(char *, uint64_t, void *))v260)(v186, 1, __srca);
    if (v241)
    {
      uint64_t v188 = v258;
      if (v187)
      {
        size_t v189 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        unint64_t v190 = v251;
LABEL_74:
        memcpy(v190, v186, v189);
        goto LABEL_77;
      }
      (*(void (**)(void *, char *, void *))(v258 + 16))(v251, v186, __srca);
      (*(void (**)(void *, void, uint64_t, void *))(v258 + 56))(v251, 0, 1, __srca);
    }
    else
    {
      uint64_t v188 = v258;
      if (v187)
      {
        (*(void (**)(void *, void *))(v258 + 8))(v251, __srca);
        size_t v189 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
        unint64_t v190 = v251;
        goto LABEL_74;
      }
      (*(void (**)(void *, char *, void *))(v258 + 24))(v251, v186, __srca);
    }
LABEL_77:
    uint64_t v219 = v174[11];
    uint64_t v252 = &v173[v219];
    __dstc = (void *)(v172 + v219);
    int v242 = v260();
    unsigned int v220 = ((uint64_t (*)(char *, uint64_t, void *))v260)(v252, 1, __srca);
    if (v242)
    {
      if (!v220)
      {
        (*(void (**)(void *, char *, void *))(v188 + 16))(__dstc, v252, __srca);
        (*(void (**)(void *, void, uint64_t, void *))(v188 + 56))(__dstc, 0, 1, __srca);
        goto LABEL_85;
      }
      size_t v221 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
      uint64_t v222 = __dstc;
    }
    else
    {
      if (!v220)
      {
        (*(void (**)(void *, char *, void *))(v188 + 24))(__dstc, v252, __srca);
        goto LABEL_85;
      }
      (*(void (**)(void *, void *))(v188 + 8))(__dstc, __srca);
      size_t v221 = *(void *)(*(void *)(sub_10000588C(&qword_101649E40) - 8) + 64);
      uint64_t v222 = __dstc;
    }
    memcpy(v222, v252, v221);
LABEL_85:
    uint64_t v223 = v174[12];
    uint64_t v224 = v172 + v223;
    uint64_t v225 = &v173[v223];
    uint64_t v226 = *(void *)v225;
    *(unsigned char *)(v224 + 8) = v225[8];
    *(void *)uint64_t v224 = v226;
    uint64_t v227 = v174[13];
    uint64_t v228 = (void *)(v172 + v227);
    uint64_t v229 = &v173[v227];
    *uint64_t v228 = *(void *)v229;
    v228[1] = *((void *)v229 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v172 + v174[14]) = *(void *)&v173[v174[14]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v230 = v174[15];
    uint64_t v231 = (void *)(v172 + v230);
    uint64_t v232 = &v173[v230];
    *uint64_t v231 = *(void *)v232;
    v231[1] = *((void *)v232 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v172 + v174[16]) = *(void *)&v173[v174[16]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v233 = v174[17];
    uint64_t v234 = v172 + v233;
    uint64_t v235 = &v173[v233];
    long long v236 = *(_OWORD *)v235;
    *(unsigned char *)(v234 + 16) = v235[16];
    *(_OWORD *)uint64_t v234 = v236;
    uint64_t v237 = v174[18];
    uint64_t v238 = v172 + v237;
    uint64_t v239 = &v173[v237];
    long long v240 = *(_OWORD *)v239;
    *(unsigned char *)(v238 + 16) = v239[16];
    *(_OWORD *)uint64_t v238 = v240;
    goto LABEL_70;
  }
  if (v71)
  {
LABEL_22:
    uint64_t v91 = sub_10000588C(&qword_10163BBB0);
    memcpy(v65, v66, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_71;
  }
  int64_t v248 = (void (**)(void *, void, uint64_t, int *))v68;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 16))(v65, v66, v58);
  v65[v67[5]] = v66[v67[5]];
  v65[v67[6]] = v66[v67[6]];
  v65[v67[7]] = v66[v67[7]];
  uint64_t v72 = v67[8];
  uint64_t v73 = &v65[v72];
  uint64_t v74 = &v66[v72];
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  uint64_t v75 = v67[9];
  uint64_t v76 = &v65[v75];
  uint64_t v77 = &v66[v75];
  *uint64_t v76 = *v77;
  v76[1] = v77[1];
  uint64_t v78 = v67[10];
  uint64_t v79 = &v65[v78];
  uint64_t v80 = &v66[v78];
  char v81 = v80[8];
  *(void *)uint64_t v79 = *(void *)v80;
  v79[8] = v81;
  uint64_t v82 = v67[11];
  uint64_t v83 = &v65[v82];
  long long v84 = &v66[v82];
  *uint64_t v83 = *v84;
  v83[1] = v84[1];
  uint64_t v85 = v67[12];
  __dst = &v65[v85];
  id v247 = v65;
  __src = v66;
  uint64_t v86 = &v66[v85];
  uint64_t v87 = type metadata accessor for URL();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v259 = v89;
  if (v89(v86, 1, v87))
  {
    uint64_t v90 = sub_10000588C(&qword_101649E40);
    memcpy(__dst, v86, *(void *)(*(void *)(v90 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(__dst, v86, v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v87);
  }
  uint64_t v114 = v88;
  uint64_t v66 = __src;
  uint64_t v65 = v247;
  uint64_t v115 = v67[13];
  uint64_t v116 = &v247[v115];
  uint64_t v117 = &__src[v115];
  uint64_t v257 = v87;
  uint64_t v254 = (void (**)(void *, const void *, void))v114;
  if (v259(&__src[v115], 1, v87))
  {
    uint64_t v118 = sub_10000588C(&qword_101649E40);
    memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v116, v117, v87);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v114 + 56))(v116, 0, 1, v87);
  }
  uint64_t v119 = v67[14];
  uint64_t v120 = &v247[v119];
  uint64_t v121 = &__src[v119];
  *uint64_t v120 = *(void *)v121;
  v120[1] = *((void *)v121 + 1);
  *(void *)&v247[v67[15]] = *(void *)&__src[v67[15]];
  uint64_t v122 = v67[16];
  uint64_t v123 = &v247[v122];
  uint64_t v124 = &__src[v122];
  uint64_t v125 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v126 = *(void **)(v125 - 8);
  uint64_t v127 = (unsigned int (*)(char *, uint64_t, int *))v126[6];
  uint64_t v128 = (int *)v125;
  swift_bridgeObjectRetain();
  if (v127(v124, 1, v128))
  {
    uint64_t v129 = sub_10000588C(&qword_101649E50);
    memcpy(v123, v124, *(void *)(*(void *)(v129 - 8) + 64));
  }
  else
  {
    __dsta = v126;
    *uint64_t v123 = *(void *)v124;
    v123[1] = *((void *)v124 + 1);
    v123[2] = *((void *)v124 + 2);
    v123[3] = *((void *)v124 + 3);
    v123[4] = *((void *)v124 + 4);
    v123[5] = *((void *)v124 + 5);
    *((_WORD *)v123 + 24) = *((_WORD *)v124 + 24);
    v123[7] = *((void *)v124 + 7);
    uint64_t v130 = *((void *)v124 + 8);
    *((unsigned char *)v123 + 72) = v124[72];
    v123[8] = v130;
    uint64_t v131 = v128[10];
    uint64_t v132 = (char *)v123 + v131;
    unsigned int v133 = &v124[v131];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v259(v133, 1, v257))
    {
      uint64_t v134 = sub_10000588C(&qword_101649E40);
      memcpy(v132, v133, *(void *)(*(void *)(v134 - 8) + 64));
    }
    else
    {
      v254[2](v132, v133, v257);
      ((void (*)(char *, void, uint64_t, uint64_t))v254[7])(v132, 0, 1, v257);
    }
    uint64_t v135 = v128[11];
    uint64_t v136 = (char *)v123 + v135;
    uint64_t v137 = &v124[v135];
    if (v259(&v124[v135], 1, v257))
    {
      uint64_t v138 = sub_10000588C(&qword_101649E40);
      memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
    }
    else
    {
      v254[2](v136, v137, v257);
      ((void (*)(char *, void, uint64_t, uint64_t))v254[7])(v136, 0, 1, v257);
    }
    uint64_t v66 = __src;
    uint64_t v139 = v128[12];
    uint64_t v140 = (char *)v123 + v139;
    uint64_t v141 = &v124[v139];
    uint64_t v142 = *(void *)v141;
    v140[8] = v141[8];
    *(void *)uint64_t v140 = v142;
    uint64_t v143 = v128[13];
    uint64_t v144 = (void *)((char *)v123 + v143);
    uint64_t v145 = &v124[v143];
    *uint64_t v144 = *(void *)v145;
    v144[1] = *((void *)v145 + 1);
    *(void *)((char *)v123 + v128[14]) = *(void *)&v124[v128[14]];
    uint64_t v146 = v128[15];
    uint64_t v147 = (void *)((char *)v123 + v146);
    uint64_t v148 = &v124[v146];
    *uint64_t v147 = *(void *)v148;
    v147[1] = *((void *)v148 + 1);
    *(void *)((char *)v123 + v128[16]) = *(void *)&v124[v128[16]];
    uint64_t v149 = v128[17];
    uint64_t v150 = (char *)v123 + v149;
    uint64_t v151 = &v124[v149];
    long long v152 = *(_OWORD *)v151;
    v150[16] = v151[16];
    *(_OWORD *)uint64_t v150 = v152;
    uint64_t v153 = v128[18];
    uint64_t v154 = (char *)v123 + v153;
    uint64_t v155 = &v124[v153];
    long long v156 = *(_OWORD *)v155;
    v154[16] = v155[16];
    *(_OWORD *)uint64_t v154 = v156;
    uint64_t v157 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v157(v123, 0, 1, v128);
  }
  *(_DWORD *)&v247[v67[17]] = *(_DWORD *)&v66[v67[17]];
  *(void *)&v247[v67[18]] = *(void *)&v66[v67[18]];
  uint64_t v158 = v67[19];
  uint64_t v159 = &v247[v158];
  uint64_t v160 = &v66[v158];
  uint64_t v161 = v254[2];
  swift_bridgeObjectRetain();
  v161(v159, v160, v257);
  v161(&v247[v67[20]], &v66[v67[20]], v257);
  v161(&v247[v67[21]], &v66[v67[21]], v257);
  v161(&v247[v67[22]], &v66[v67[22]], v257);
  v161(&v247[v67[23]], &v66[v67[23]], v257);
  v161(&v247[v67[24]], &v66[v67[24]], v257);
  v248[7](v247, 0, 1, v67);
LABEL_71:
  uint64_t v215 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
  uint64_t v216 = &v65[v215];
  uint64_t v217 = &v66[v215];
  *uint64_t v216 = *v217;
  v216[1] = v217[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10095D8C4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for StableIdentifier();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v13 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
    uint64_t v14 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
    *(_OWORD *)&v7[v14[12]] = *(_OWORD *)&v8[v14[12]];
    *(_OWORD *)&v7[v14[16]] = *(_OWORD *)&v8[v14[16]];
    *(_OWORD *)&v7[v14[20]] = *(_OWORD *)&v8[v14[20]];
    v7[v14[24]] = v8[v14[24]];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    uint64_t v12 = (int *)sub_10000588C(&qword_1016555E0);
    *(_OWORD *)&v7[v12[12]] = *(_OWORD *)&v8[v12[12]];
    *(_OWORD *)&v7[v12[16]] = *(_OWORD *)&v8[v12[16]];
    *(_OWORD *)&v7[v12[20]] = *(_OWORD *)&v8[v12[20]];
    *(_WORD *)&v7[v12[24]] = *(_WORD *)&v8[v12[24]];
    *(_OWORD *)&v7[v12[28]] = *(_OWORD *)&v8[v12[28]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v15 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  uint64_t v16 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  uint64_t v17 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
  uint64_t v18 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v19 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
  uint64_t v20 = a3[17];
  *(_OWORD *)((char *)a1 + a3[16]) = *(_OWORD *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  uint64_t v21 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(_OWORD *)((char *)a1 + v21) = *(_OWORD *)((char *)a2 + v21);
  uint64_t v22 = a3[21];
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
  uint64_t v23 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
  uint64_t v24 = a3[24];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = sub_10000588C(&qword_101638CF0);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  uint64_t v30 = a3[26];
  *(_WORD *)((char *)a1 + a3[25]) = *(_WORD *)((char *)a2 + a3[25]);
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v34 = *((void *)v33 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v34 + 48))(v32, 1, v33))
  {
    uint64_t v35 = sub_10000588C(&qword_10163BBB0);
    memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v80 = v34;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v31, v32, v27);
    v31[v33[5]] = v32[v33[5]];
    v31[v33[6]] = v32[v33[6]];
    v31[v33[7]] = v32[v33[7]];
    *(_OWORD *)&v31[v33[8]] = *(_OWORD *)&v32[v33[8]];
    *(_OWORD *)&v31[v33[9]] = *(_OWORD *)&v32[v33[9]];
    uint64_t v36 = v33[10];
    uint64_t v37 = &v31[v36];
    uint64_t v38 = &v32[v36];
    *(void *)uint64_t v37 = *(void *)v38;
    v37[8] = v38[8];
    *(_OWORD *)&v31[v33[11]] = *(_OWORD *)&v32[v33[11]];
    uint64_t v39 = v33[12];
    uint64_t v40 = &v31[v39];
    uint64_t v41 = &v32[v39];
    uint64_t v42 = type metadata accessor for URL();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = *(unsigned int (**)(void))(v43 + 48);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v44)(v41, 1, v42))
    {
      uint64_t v45 = sub_10000588C(&qword_101649E40);
      memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
    }
    uint64_t v46 = v33[13];
    uint64_t v47 = &v31[v46];
    uint64_t v48 = &v32[v46];
    uint64_t v79 = v44;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v44)(&v32[v46], 1, v42))
    {
      uint64_t v49 = sub_10000588C(&qword_101649E40);
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v47, v48, v42);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v47, 0, 1, v42);
    }
    *(_OWORD *)&v31[v33[14]] = *(_OWORD *)&v32[v33[14]];
    *(void *)&v31[v33[15]] = *(void *)&v32[v33[15]];
    uint64_t v50 = v33[16];
    uint64_t v51 = &v31[v50];
    uint64_t v52 = &v32[v50];
    uint64_t v53 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    uint64_t v54 = *((void *)v53 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
    {
      uint64_t v55 = sub_10000588C(&qword_101649E50);
      memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      long long v56 = *((_OWORD *)v52 + 1);
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v56;
      *((_OWORD *)v51 + 2) = *((_OWORD *)v52 + 2);
      *((_WORD *)v51 + 24) = *((_WORD *)v52 + 24);
      uint64_t v57 = *((void *)v52 + 8);
      *((void *)v51 + 7) = *((void *)v52 + 7);
      *((void *)v51 + 8) = v57;
      v51[72] = v52[72];
      uint64_t v58 = v53[10];
      uint64_t v76 = v54;
      __dst = &v51[v58];
      uint64_t v59 = &v52[v58];
      if (v79())
      {
        uint64_t v60 = sub_10000588C(&qword_101649E40);
        memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dst, v59, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dst, 0, 1, v42);
      }
      uint64_t v61 = v53[11];
      __dsta = &v51[v61];
      int v62 = &v52[v61];
      if (v79())
      {
        uint64_t v63 = sub_10000588C(&qword_101649E40);
        memcpy(__dsta, v62, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(__dsta, v62, v42);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(__dsta, 0, 1, v42);
      }
      uint64_t v64 = v53[12];
      uint64_t v65 = &v51[v64];
      uint64_t v66 = &v52[v64];
      *(void *)uint64_t v65 = *(void *)v66;
      v65[8] = v66[8];
      *(_OWORD *)&v51[v53[13]] = *(_OWORD *)&v52[v53[13]];
      *(void *)&v51[v53[14]] = *(void *)&v52[v53[14]];
      *(_OWORD *)&v51[v53[15]] = *(_OWORD *)&v52[v53[15]];
      *(void *)&v51[v53[16]] = *(void *)&v52[v53[16]];
      uint64_t v67 = v53[17];
      uint64_t v68 = &v51[v67];
      uint64_t v69 = &v52[v67];
      v68[16] = v69[16];
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      uint64_t v70 = v53[18];
      int v71 = &v51[v70];
      uint64_t v72 = &v52[v70];
      v71[16] = v72[16];
      *(_OWORD *)int v71 = *(_OWORD *)v72;
      (*(void (**)(char *, void, uint64_t, int *))(v76 + 56))(v51, 0, 1, v53);
    }
    *(_DWORD *)&v31[v33[17]] = *(_DWORD *)&v32[v33[17]];
    *(void *)&v31[v33[18]] = *(void *)&v32[v33[18]];
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
    v73(&v31[v33[19]], &v32[v33[19]], v42);
    v73(&v31[v33[20]], &v32[v33[20]], v42);
    v73(&v31[v33[21]], &v32[v33[21]], v42);
    v73(&v31[v33[22]], &v32[v33[22]], v42);
    v73(&v31[v33[23]], &v32[v33[23]], v42);
    v73(&v31[v33[24]], &v32[v33[24]], v42);
    (*(void (**)(char *, void, uint64_t, int *))(v80 + 56))(v31, 0, 1, v33);
  }
  uint64_t v74 = type metadata accessor for ProductInfoState(0);
  *(_OWORD *)&v31[*(int *)(v74 + 20)] = *(_OWORD *)&v32[*(int *)(v74 + 20)];
  return a1;
}

void *sub_10095E28C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_10095268C((uint64_t)a1 + v7, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
    uint64_t v10 = type metadata accessor for StableIdentifier();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v14 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
      uint64_t v15 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
      *(_OWORD *)&v8[v15[12]] = *(_OWORD *)&v9[v15[12]];
      *(_OWORD *)&v8[v15[16]] = *(_OWORD *)&v9[v15[16]];
      *(_OWORD *)&v8[v15[20]] = *(_OWORD *)&v9[v15[20]];
      v8[v15[24]] = v9[v15[24]];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
      uint64_t v13 = (int *)sub_10000588C(&qword_1016555E0);
      *(_OWORD *)&v8[v13[12]] = *(_OWORD *)&v9[v13[12]];
      *(_OWORD *)&v8[v13[16]] = *(_OWORD *)&v9[v13[16]];
      *(_OWORD *)&v8[v13[20]] = *(_OWORD *)&v9[v13[20]];
      *(_WORD *)&v8[v13[24]] = *(_WORD *)&v9[v13[24]];
      *(_OWORD *)&v8[v13[28]] = *(_OWORD *)&v9[v13[28]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v16 = a3[6];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[9];
  uint64_t v32 = (void *)((char *)a1 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v36) = *(void *)((char *)a2 + v36);
  uint64_t v37 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[15];
  *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  *(void *)((char *)a1 + v42) = *(void *)((char *)a2 + v42);
  uint64_t v43 = a3[16];
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[18];
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)a2 + a3[17]);
  *(void *)((char *)a1 + v48) = *(void *)((char *)a2 + v48);
  uint64_t v49 = a3[19];
  uint64_t v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v54) = *((unsigned char *)a2 + v54);
  uint64_t v55 = a3[24];
  long long v56 = (char *)a1 + v55;
  uint64_t v57 = (char *)a2 + v55;
  uint64_t v58 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
  int v61 = v60(v56, 1, v58);
  int v62 = v60(v57, 1, v58);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v56, v57, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v56, v58);
LABEL_12:
    uint64_t v63 = sub_10000588C(&qword_101638CF0);
    memcpy(v56, v57, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 40))(v56, v57, v58);
LABEL_13:
  uint64_t v64 = a3[26];
  *(_WORD *)((char *)a1 + a3[25]) = *(_WORD *)((char *)a2 + a3[25]);
  uint64_t v65 = (char *)a1 + v64;
  uint64_t v66 = (char *)a2 + v64;
  uint64_t v67 = (int *)type metadata accessor for BeaconProductInfoRecord();
  uint64_t v68 = *((void *)v67 - 1);
  uint64_t v69 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v68 + 48);
  int v70 = v69(v65, 1, v67);
  int v71 = v69(v66, 1, v67);
  if (!v70)
  {
    if (v71)
    {
      sub_10095268C((uint64_t)v65, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
      goto LABEL_19;
    }
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 40))(v65, v66, v58);
    v65[v67[5]] = v66[v67[5]];
    v65[v67[6]] = v66[v67[6]];
    v65[v67[7]] = v66[v67[7]];
    uint64_t v83 = v67[8];
    long long v84 = &v65[v83];
    uint64_t v85 = (uint64_t *)&v66[v83];
    uint64_t v87 = *v85;
    uint64_t v86 = v85[1];
    *long long v84 = v87;
    v84[1] = v86;
    swift_bridgeObjectRelease();
    uint64_t v88 = v67[9];
    uint64_t v89 = &v65[v88];
    uint64_t v90 = (uint64_t *)&v66[v88];
    uint64_t v92 = *v90;
    uint64_t v91 = v90[1];
    *uint64_t v89 = v92;
    v89[1] = v91;
    swift_bridgeObjectRelease();
    uint64_t v93 = v67[10];
    uint64_t v94 = &v65[v93];
    uint64_t v95 = &v66[v93];
    *(void *)uint64_t v94 = *(void *)v95;
    v94[8] = v95[8];
    uint64_t v96 = v67[11];
    uint64_t v97 = &v65[v96];
    uint64_t v98 = (uint64_t *)&v66[v96];
    uint64_t v100 = *v98;
    uint64_t v99 = v98[1];
    *uint64_t v97 = v100;
    v97[1] = v99;
    swift_bridgeObjectRelease();
    uint64_t v101 = v67[12];
    uint64_t v102 = &v65[v101];
    uint64_t v103 = &v66[v101];
    uint64_t v104 = type metadata accessor for URL();
    uint64_t v105 = *(void *)(v104 - 8);
    uint64_t v106 = *(uint64_t (**)(void))(v105 + 48);
    uint64_t v227 = v102;
    LODWORD(v102) = ((uint64_t (*)(char *, uint64_t, uint64_t))v106)(v102, 1, v104);
    uint64_t v233 = v106;
    uint64_t v236 = v104;
    int v107 = ((uint64_t (*)(char *, uint64_t, uint64_t))v106)(v103, 1, v104);
    uint64_t v232 = v105;
    if (v102)
    {
      if (v107)
      {
        uint64_t v108 = sub_10000588C(&qword_101649E40);
        memcpy(v227, v103, *(void *)(*(void *)(v108 - 8) + 64));
        uint64_t v109 = v104;
      }
      else
      {
        uint64_t v109 = v104;
        (*(void (**)(void *, char *, uint64_t))(v105 + 32))(v227, v103, v104);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v105 + 56))(v227, 0, 1, v104);
      }
    }
    else
    {
      uint64_t v109 = v104;
      if (v107)
      {
        (*(void (**)(void *, uint64_t))(v105 + 8))(v227, v104);
        uint64_t v125 = sub_10000588C(&qword_101649E40);
        memcpy(v227, v103, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v105 + 40))(v227, v103, v104);
      }
    }
    uint64_t v139 = v67[13];
    uint64_t v140 = &v65[v139];
    uint64_t v141 = &v66[v139];
    int v142 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v233)(&v65[v139], 1, v109);
    int v143 = ((uint64_t (*)(char *, uint64_t, uint64_t))v233)(v141, 1, v109);
    if (v142)
    {
      if (!v143)
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 32))(v140, v141, v236);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v105 + 56))(v140, 0, 1, v236);
        goto LABEL_48;
      }
    }
    else
    {
      if (!v143)
      {
        (*(void (**)(char *, char *, uint64_t))(v105 + 40))(v140, v141, v236);
LABEL_48:
        uint64_t v145 = v67[14];
        uint64_t v146 = &v65[v145];
        uint64_t v147 = (uint64_t *)&v66[v145];
        uint64_t v149 = *v147;
        uint64_t v148 = v147[1];
        *uint64_t v146 = v149;
        v146[1] = v148;
        swift_bridgeObjectRelease();
        *(void *)&v65[v67[15]] = *(void *)&v66[v67[15]];
        uint64_t v150 = v67[16];
        uint64_t v151 = &v65[v150];
        long long v152 = &v66[v150];
        uint64_t v153 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
        uint64_t v224 = *((void *)v153 - 1);
        uint64_t v154 = *(uint64_t (**)(char *, uint64_t, int *))(v224 + 48);
        int v155 = v154(v151, 1, v153);
        uint64_t v229 = v153;
        int v156 = v154(v152, 1, v153);
        if (v155)
        {
          if (!v156)
          {
            long long v157 = *((_OWORD *)v152 + 1);
            *(_OWORD *)uint64_t v151 = *(_OWORD *)v152;
            *((_OWORD *)v151 + 1) = v157;
            *((_OWORD *)v151 + 2) = *((_OWORD *)v152 + 2);
            *((_WORD *)v151 + 24) = *((_WORD *)v152 + 24);
            uint64_t v158 = *((void *)v152 + 8);
            *((void *)v151 + 7) = *((void *)v152 + 7);
            *((void *)v151 + 8) = v158;
            v151[72] = v152[72];
            uint64_t v159 = v153[10];
            __src = &v151[v159];
            uint64_t v160 = &v152[v159];
            uint64_t v161 = v236;
            uint64_t v162 = v232;
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v233)(&v152[v159], 1, v236))
            {
              uint64_t v163 = sub_10000588C(&qword_101649E40);
              memcpy(__src, v160, *(void *)(*(void *)(v163 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v232 + 32))(__src, v160, v236);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v232 + 56))(__src, 0, 1, v236);
            }
            uint64_t v174 = v229[11];
            __srca = &v151[v174];
            uint64_t v175 = &v152[v174];
            if (((unsigned int (*)(char *, uint64_t, uint64_t))v233)(&v152[v174], 1, v236))
            {
              uint64_t v176 = sub_10000588C(&qword_101649E40);
              memcpy(__srca, v175, *(void *)(*(void *)(v176 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v232 + 32))(__srca, v175, v236);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v232 + 56))(__srca, 0, 1, v236);
            }
            uint64_t v177 = v229[12];
            uint64_t v178 = &v151[v177];
            uint64_t v179 = &v152[v177];
            *(void *)uint64_t v178 = *(void *)v179;
            v178[8] = v179[8];
            *(_OWORD *)&v151[v229[13]] = *(_OWORD *)&v152[v229[13]];
            *(void *)&v151[v229[14]] = *(void *)&v152[v229[14]];
            *(_OWORD *)&v151[v229[15]] = *(_OWORD *)&v152[v229[15]];
            *(void *)&v151[v229[16]] = *(void *)&v152[v229[16]];
            uint64_t v180 = v229[17];
            uint64_t v181 = &v151[v180];
            uint64_t v182 = &v152[v180];
            v181[16] = v182[16];
            *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
            uint64_t v183 = v229[18];
            Swift::Int v184 = &v151[v183];
            uint64_t v185 = &v152[v183];
            v184[16] = v185[16];
            *(_OWORD *)Swift::Int v184 = *(_OWORD *)v185;
            (*(void (**)(char *, void, uint64_t))(v224 + 56))(v151, 0, 1);
            goto LABEL_76;
          }
        }
        else
        {
          if (!v156)
          {
            uint64_t v165 = *((void *)v152 + 1);
            *(void *)uint64_t v151 = *(void *)v152;
            *((void *)v151 + 1) = v165;
            swift_bridgeObjectRelease();
            uint64_t v166 = *((void *)v152 + 3);
            *((void *)v151 + 2) = *((void *)v152 + 2);
            *((void *)v151 + 3) = v166;
            swift_bridgeObjectRelease();
            uint64_t v167 = *((void *)v152 + 5);
            *((void *)v151 + 4) = *((void *)v152 + 4);
            *((void *)v151 + 5) = v167;
            swift_bridgeObjectRelease();
            *((_WORD *)v151 + 24) = *((_WORD *)v152 + 24);
            uint64_t v168 = *((void *)v152 + 8);
            *((void *)v151 + 7) = *((void *)v152 + 7);
            *((void *)v151 + 8) = v168;
            v151[72] = v152[72];
            uint64_t v169 = v153[10];
            uint64_t v170 = &v152[v169];
            uint64_t v225 = &v151[v169];
            int v219 = v233();
            int v171 = ((uint64_t (*)(char *, uint64_t, uint64_t))v233)(v170, 1, v236);
            if (v219)
            {
              uint64_t v162 = v232;
              if (v171)
              {
                uint64_t v172 = sub_10000588C(&qword_101649E40);
                memcpy(v225, v170, *(void *)(*(void *)(v172 - 8) + 64));
                uint64_t v173 = v236;
              }
              else
              {
                uint64_t v173 = v236;
                (*(void (**)(char *, char *, uint64_t))(v232 + 32))(v225, v170, v236);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v232 + 56))(v225, 0, 1, v236);
              }
            }
            else
            {
              uint64_t v162 = v232;
              uint64_t v173 = v236;
              if (v171)
              {
                (*(void (**)(char *, uint64_t))(v232 + 8))(v225, v236);
                uint64_t v186 = sub_10000588C(&qword_101649E40);
                memcpy(v225, v170, *(void *)(*(void *)(v186 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v232 + 40))(v225, v170, v236);
              }
            }
            uint64_t v187 = v153[11];
            uint64_t v188 = &v152[v187];
            uint64_t v226 = &v151[v187];
            int v220 = v233();
            __srcb = v188;
            int v189 = ((uint64_t (*)(char *, uint64_t, uint64_t))v233)(v188, 1, v173);
            if (v220)
            {
              if (v189)
              {
                uint64_t v190 = sub_10000588C(&qword_101649E40);
                memcpy(v226, v188, *(void *)(*(void *)(v190 - 8) + 64));
                uint64_t v191 = v236;
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v162 + 32))(v226, v188, v236);
                uint64_t v191 = v236;
                (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v226, 0, 1, v236);
              }
            }
            else
            {
              uint64_t v191 = v236;
              if (v189)
              {
                (*(void (**)(char *))(v162 + 8))(v226);
                uint64_t v192 = sub_10000588C(&qword_101649E40);
                memcpy(v226, __srcb, *(void *)(*(void *)(v192 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *))(v162 + 40))(v226, __srcb);
              }
            }
            uint64_t v193 = v153[12];
            uint64_t v194 = &v151[v193];
            uint64_t v195 = &v152[v193];
            *(void *)uint64_t v194 = *(void *)v195;
            v194[8] = v195[8];
            uint64_t v196 = v153[13];
            Swift::Int v197 = &v151[v196];
            uint64_t v198 = &v152[v196];
            uint64_t v200 = *(void *)v198;
            uint64_t v199 = *((void *)v198 + 1);
            *(void *)Swift::Int v197 = v200;
            *((void *)v197 + 1) = v199;
            swift_bridgeObjectRelease();
            *(void *)&v151[v153[14]] = *(void *)&v152[v153[14]];
            swift_bridgeObjectRelease();
            uint64_t v201 = v153[15];
            uint64_t v202 = &v151[v201];
            uint64_t v203 = &v152[v201];
            uint64_t v205 = *(void *)v203;
            uint64_t v204 = *((void *)v203 + 1);
            *(void *)uint64_t v202 = v205;
            *((void *)v202 + 1) = v204;
            swift_bridgeObjectRelease();
            *(void *)&v151[v153[16]] = *(void *)&v152[v153[16]];
            swift_bridgeObjectRelease();
            uint64_t v206 = v153[17];
            uint64_t v207 = &v151[v206];
            long long v208 = &v152[v206];
            *(_OWORD *)uint64_t v207 = *(_OWORD *)v208;
            v207[16] = v208[16];
            uint64_t v209 = v153[18];
            uint64_t v210 = &v151[v209];
            uint64_t v211 = &v152[v209];
            v210[16] = v211[16];
            *(_OWORD *)uint64_t v210 = *(_OWORD *)v211;
            uint64_t v161 = v191;
            goto LABEL_76;
          }
          sub_10095268C((uint64_t)v151, type metadata accessor for AccessoryInfoResponseContent.Configuration);
        }
        uint64_t v164 = sub_10000588C(&qword_101649E50);
        memcpy(v151, v152, *(void *)(*(void *)(v164 - 8) + 64));
        uint64_t v162 = v232;
        uint64_t v161 = v236;
LABEL_76:
        *(_DWORD *)&v65[v67[17]] = *(_DWORD *)&v66[v67[17]];
        *(void *)&v65[v67[18]] = *(void *)&v66[v67[18]];
        swift_bridgeObjectRelease();
        long long v212 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v162 + 40);
        v212(&v65[v67[19]], &v66[v67[19]], v161);
        v212(&v65[v67[20]], &v66[v67[20]], v161);
        v212(&v65[v67[21]], &v66[v67[21]], v161);
        v212(&v65[v67[22]], &v66[v67[22]], v161);
        v212(&v65[v67[23]], &v66[v67[23]], v161);
        v212(&v65[v67[24]], &v66[v67[24]], v161);
        goto LABEL_77;
      }
      (*(void (**)(char *, uint64_t))(v105 + 8))(v140, v236);
    }
    uint64_t v144 = sub_10000588C(&qword_101649E40);
    memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
    goto LABEL_48;
  }
  if (v71)
  {
LABEL_19:
    uint64_t v82 = sub_10000588C(&qword_10163BBB0);
    memcpy(v65, v66, *(void *)(*(void *)(v82 - 8) + 64));
    goto LABEL_77;
  }
  uint64_t v235 = v68;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v59 + 32))(v65, v66, v58);
  v65[v67[5]] = v66[v67[5]];
  v65[v67[6]] = v66[v67[6]];
  v65[v67[7]] = v66[v67[7]];
  *(_OWORD *)&v65[v67[8]] = *(_OWORD *)&v66[v67[8]];
  *(_OWORD *)&v65[v67[9]] = *(_OWORD *)&v66[v67[9]];
  uint64_t v72 = v67[10];
  uint64_t v73 = &v65[v72];
  uint64_t v74 = &v66[v72];
  *(void *)uint64_t v73 = *(void *)v74;
  v73[8] = v74[8];
  *(_OWORD *)&v65[v67[11]] = *(_OWORD *)&v66[v67[11]];
  uint64_t v75 = v67[12];
  uint64_t v76 = &v65[v75];
  uint64_t v77 = &v66[v75];
  uint64_t v78 = type metadata accessor for URL();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v80 = *(unsigned int (**)(void))(v79 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v80)(v77, 1, v78))
  {
    uint64_t v81 = sub_10000588C(&qword_101649E40);
    memcpy(v76, v77, *(void *)(*(void *)(v81 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v76, v77, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  uint64_t v110 = v67[13];
  unsigned int v111 = &v65[v110];
  size_t v112 = &v66[v110];
  uint64_t v234 = v80;
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v80)(&v66[v110], 1, v78))
  {
    uint64_t v113 = sub_10000588C(&qword_101649E40);
    memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v111, v112, v78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v111, 0, 1, v78);
  }
  *(_OWORD *)&v65[v67[14]] = *(_OWORD *)&v66[v67[14]];
  *(void *)&v65[v67[15]] = *(void *)&v66[v67[15]];
  uint64_t v114 = v67[16];
  uint64_t v115 = &v65[v114];
  uint64_t v116 = &v66[v114];
  uint64_t v117 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
  uint64_t v118 = *((void *)v117 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v118 + 48))(v116, 1, v117))
  {
    uint64_t v119 = sub_10000588C(&qword_101649E50);
    memcpy(v115, v116, *(void *)(*(void *)(v119 - 8) + 64));
  }
  else
  {
    long long v120 = v116[1];
    *uint64_t v115 = *v116;
    v115[1] = v120;
    v115[2] = v116[2];
    *((_WORD *)v115 + 24) = *((_WORD *)v116 + 24);
    uint64_t v121 = *((void *)v116 + 8);
    *((void *)v115 + 7) = *((void *)v116 + 7);
    *((void *)v115 + 8) = v121;
    *((unsigned char *)v115 + 72) = *((unsigned char *)v116 + 72);
    uint64_t v122 = v117[10];
    uint64_t v228 = v118;
    __dst = (char *)v115 + v122;
    uint64_t v123 = (char *)v116 + v122;
    if (v234())
    {
      uint64_t v124 = sub_10000588C(&qword_101649E40);
      memcpy(__dst, v123, *(void *)(*(void *)(v124 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(__dst, v123, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dst, 0, 1, v78);
    }
    uint64_t v126 = v117[11];
    __dsta = (char *)v115 + v126;
    uint64_t v127 = (char *)v116 + v126;
    if (v234())
    {
      uint64_t v128 = sub_10000588C(&qword_101649E40);
      memcpy(__dsta, v127, *(void *)(*(void *)(v128 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(__dsta, v127, v78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(__dsta, 0, 1, v78);
    }
    uint64_t v129 = v117[12];
    uint64_t v130 = (char *)v115 + v129;
    uint64_t v131 = (char *)v116 + v129;
    *(void *)uint64_t v130 = *(void *)v131;
    v130[8] = v131[8];
    *(_OWORD *)((char *)v115 + v117[13]) = *(_OWORD *)((char *)v116 + v117[13]);
    *(void *)((char *)v115 + v117[14]) = *(void *)((char *)v116 + v117[14]);
    *(_OWORD *)((char *)v115 + v117[15]) = *(_OWORD *)((char *)v116 + v117[15]);
    *(void *)((char *)v115 + v117[16]) = *(void *)((char *)v116 + v117[16]);
    uint64_t v132 = v117[17];
    unsigned int v133 = (char *)v115 + v132;
    uint64_t v134 = (char *)v116 + v132;
    v133[16] = v134[16];
    *(_OWORD *)unsigned int v133 = *(_OWORD *)v134;
    uint64_t v135 = v117[18];
    uint64_t v136 = (char *)v115 + v135;
    uint64_t v137 = (char *)v116 + v135;
    v136[16] = v137[16];
    *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v228 + 56))(v115, 0, 1, v117);
  }
  *(_DWORD *)&v65[v67[17]] = *(_DWORD *)&v66[v67[17]];
  *(void *)&v65[v67[18]] = *(void *)&v66[v67[18]];
  uint64_t v138 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 32);
  v138(&v65[v67[19]], &v66[v67[19]], v78);
  v138(&v65[v67[20]], &v66[v67[20]], v78);
  v138(&v65[v67[21]], &v66[v67[21]], v78);
  v138(&v65[v67[22]], &v66[v67[22]], v78);
  v138(&v65[v67[23]], &v66[v67[23]], v78);
  v138(&v65[v67[24]], &v66[v67[24]], v78);
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v235 + 56))(v65, 0, 1, v67);
LABEL_77:
  uint64_t v213 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
  uint64_t v214 = &v65[v213];
  uint64_t v215 = (uint64_t *)&v66[v213];
  uint64_t v217 = *v215;
  uint64_t v216 = v215[1];
  *uint64_t v214 = v217;
  v214[1] = v216;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10095F8C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10095F8D4);
}

uint64_t sub_10095F8D4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = type metadata accessor for StableIdentifier();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_10000588C(&qword_101638CF0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[24];
    goto LABEL_9;
  }
  uint64_t v14 = type metadata accessor for ProductInfoState(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[26];

  return v15(v17, a2, v16);
}

uint64_t sub_10095FA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10095FA64);
}

uint64_t sub_10095FA64(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = type metadata accessor for StableIdentifier();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_10000588C(&qword_101638CF0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[24];
    goto LABEL_7;
  }
  uint64_t v14 = type metadata accessor for ProductInfoState(0);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[26];

  return v15(v17, a2, a2, v16);
}

void sub_10095FBE0()
{
  type metadata accessor for StableIdentifier();
  if (v0 <= 0x3F)
  {
    sub_10095FD58(319, (unint64_t *)&qword_101655AB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      type metadata accessor for ProductInfoState(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10095FD58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *sub_10095FDAC(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v47 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v47 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v51 = type metadata accessor for UUID();
    uint64_t v11 = *(void *)(v51 - 8);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
    swift_bridgeObjectRetain();
    uint64_t v49 = v12;
    v12(v9, v10, v51);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    uint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (void *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (void *)((char *)v4 + v22);
    uint64_t v27 = (void *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = a3[10];
    uint64_t v30 = a3[11];
    uint64_t v31 = (void *)((char *)v4 + v29);
    uint64_t v32 = (void *)((char *)a2 + v29);
    uint64_t v33 = v32[1];
    *uint64_t v31 = *v32;
    v31[1] = v33;
    *(void *)((char *)v4 + v30) = *(void *)((char *)a2 + v30);
    uint64_t v34 = a3[13];
    *(void *)((char *)v4 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    *((unsigned char *)v4 + v34) = *((unsigned char *)a2 + v34);
    uint64_t v35 = a3[15];
    *(void *)((char *)v4 + a3[14]) = *(void *)((char *)a2 + a3[14]);
    uint64_t v36 = (void *)((char *)v4 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    uint64_t v39 = a3[17];
    *(void *)((char *)v4 + a3[16]) = *(void *)((char *)a2 + a3[16]);
    uint64_t v40 = (void *)((char *)v4 + v39);
    uint64_t v41 = (void *)((char *)a2 + v39);
    uint64_t v42 = v41[1];
    void *v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = a3[19];
    *(void *)((char *)v4 + a3[18]) = *(void *)((char *)a2 + a3[18]);
    uint64_t v44 = (char *)a2 + v43;
    uint64_t v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    __dst = (char *)v4 + v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v45(v44, 1, v51))
    {
      uint64_t v46 = sub_10000588C(&qword_101638CF0);
      memcpy(__dst, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      v49(__dst, v44, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v51);
    }
  }
  return v4;
}

uint64_t sub_100960070(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v9(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 76);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

void *sub_1009601F4(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v49 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v49 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  uint64_t v47 = v11;
  v11(v8, v9, v49);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (void *)((char *)a1 + v21);
  uint64_t v26 = (void *)((char *)a2 + v21);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a3[10];
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)((char *)a1 + v28);
  uint64_t v31 = (void *)((char *)a2 + v28);
  uint64_t v32 = v31[1];
  *uint64_t v30 = *v31;
  v30[1] = v32;
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  uint64_t v33 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
  uint64_t v34 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v35 = (void *)((char *)a1 + v34);
  uint64_t v36 = (void *)((char *)a2 + v34);
  uint64_t v37 = v36[1];
  *uint64_t v35 = *v36;
  v35[1] = v37;
  uint64_t v38 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  uint64_t v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v43 = (char *)a2 + v42;
  uint64_t v44 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  __dst = (char *)a1 + v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v44(v43, 1, v49))
  {
    uint64_t v45 = sub_10000588C(&qword_101638CF0);
    memcpy(__dst, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    v47(__dst, v43, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v49);
  }
  return a1;
}

void *sub_100960468(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[8];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  *uint64_t v25 = *v26;
  v25[1] = v26[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  uint64_t v27 = a3[15];
  uint64_t v28 = (void *)((char *)a1 + v27);
  uint64_t v29 = (void *)((char *)a2 + v27);
  *uint64_t v28 = *v29;
  v28[1] = v29[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  uint64_t v30 = a3[17];
  uint64_t v31 = (void *)((char *)a1 + v30);
  uint64_t v32 = (void *)((char *)a2 + v30);
  *uint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[19];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v7) = v36((char *)a1 + v33, 1, v9);
  int v37 = v36(v35, 1, v9);
  if (!v7)
  {
    if (!v37)
    {
      v11(v34, v35, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
    goto LABEL_6;
  }
  if (v37)
  {
LABEL_6:
    uint64_t v38 = sub_10000588C(&qword_101638CF0);
    memcpy(v34, v35, *(void *)(*(void *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v35, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
  return a1;
}

_OWORD *sub_1009607BC(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  uint64_t v17 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  uint64_t v18 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v20, 1, v9))
  {
    uint64_t v21 = sub_10000588C(&qword_101638CF0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v11(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  return a1;
}

void *sub_10096098C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)((char *)a1 + v18);
  uint64_t v20 = (void *)((char *)a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)((char *)a1 + v23);
  uint64_t v25 = (void *)((char *)a2 + v23);
  uint64_t v27 = *v25;
  uint64_t v26 = v25[1];
  *uint64_t v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[9];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v32 = *v30;
  uint64_t v31 = v30[1];
  *uint64_t v29 = v32;
  v29[1] = v31;
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[10];
  uint64_t v34 = (void *)((char *)a1 + v33);
  uint64_t v35 = (void *)((char *)a2 + v33);
  uint64_t v37 = *v35;
  uint64_t v36 = v35[1];
  *uint64_t v34 = v37;
  v34[1] = v36;
  swift_bridgeObjectRelease();
  uint64_t v38 = a3[12];
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
  *(void *)((char *)a1 + v38) = *(void *)((char *)a2 + v38);
  uint64_t v39 = a3[14];
  *((unsigned char *)a1 + a3[13]) = *((unsigned char *)a2 + a3[13]);
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)((char *)a1 + v40);
  uint64_t v42 = (void *)((char *)a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  uint64_t v46 = (void *)((char *)a1 + v45);
  uint64_t v47 = (void *)((char *)a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *uint64_t v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[19];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  uint64_t v53 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v8) = v53((char *)a1 + v50, 1, v10);
  int v54 = v53(v52, 1, v10);
  if (!v8)
  {
    if (!v54)
    {
      v12(v51, v52, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v51, v10);
    goto LABEL_6;
  }
  if (v54)
  {
LABEL_6:
    uint64_t v55 = sub_10000588C(&qword_101638CF0);
    memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v51, v52, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v51, 0, 1, v10);
  return a1;
}

uint64_t sub_100960C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100960C60);
}

uint64_t sub_100960C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000588C(&qword_101638CF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 76);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_100960D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100960DA4);
}

uint64_t sub_100960DA4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_10000588C(&qword_101638CF0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 76);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_100960ED4()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_10095FD58(319, (unint64_t *)&qword_101655AB0, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100960FFC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v13;
        uint64_t v14 = (int *)type metadata accessor for SharedBeaconState(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (void *)(a1 + v15);
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v220 = type metadata accessor for UUID();
        uint64_t v18 = *(void *)(v220 - 8);
        uint64_t v19 = *(void (**)(void *, char *, uint64_t))(v18 + 16);
        swift_bridgeObjectRetain();
        uint64_t v205 = v19;
        v19(v16, v17, v220);
        uint64_t v20 = v14[6];
        uint64_t v21 = (void *)(a1 + v20);
        uint64_t v22 = (uint64_t *)((char *)a2 + v20);
        uint64_t v23 = v22[1];
        void *v21 = *v22;
        v21[1] = v23;
        uint64_t v24 = v14[7];
        uint64_t v25 = (void *)(a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        uint64_t v218 = v26[1];
        *uint64_t v25 = *v26;
        v25[1] = v218;
        uint64_t v27 = v14[8];
        uint64_t v28 = (void *)(a1 + v27);
        uint64_t v29 = (uint64_t *)((char *)a2 + v27);
        uint64_t v30 = v29[1];
        *uint64_t v28 = *v29;
        v28[1] = v30;
        uint64_t v31 = v14[9];
        uint64_t v32 = (void *)(a1 + v31);
        uint64_t v33 = (uint64_t *)((char *)a2 + v31);
        uint64_t v34 = v33[1];
        *uint64_t v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v14[10];
        uint64_t v36 = (void *)(a1 + v35);
        uint64_t v37 = (uint64_t *)((char *)a2 + v35);
        uint64_t v38 = v37[1];
        *uint64_t v36 = *v37;
        v36[1] = v38;
        *(void *)(a1 + v14[11]) = *(uint64_t *)((char *)a2 + v14[11]);
        *(void *)(a1 + v14[12]) = *(uint64_t *)((char *)a2 + v14[12]);
        *(unsigned char *)(a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
        *(void *)(a1 + v14[14]) = *(uint64_t *)((char *)a2 + v14[14]);
        uint64_t v39 = v14[15];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (uint64_t *)((char *)a2 + v39);
        uint64_t v42 = v41[1];
        void *v40 = *v41;
        v40[1] = v42;
        *(void *)(a1 + v14[16]) = *(uint64_t *)((char *)a2 + v14[16]);
        uint64_t v43 = v14[17];
        uint64_t v44 = (void *)(a1 + v43);
        uint64_t v45 = (uint64_t *)((char *)a2 + v43);
        uint64_t v46 = v45[1];
        *uint64_t v44 = *v45;
        v44[1] = v46;
        *(void *)(a1 + v14[18]) = *(uint64_t *)((char *)a2 + v14[18]);
        uint64_t v47 = v14[19];
        uint64_t v211 = v18;
        __dst = (void *)(a1 + v47);
        uint64_t v48 = (char *)a2 + v47;
        uint64_t v49 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49(v48, 1, v220))
        {
          uint64_t v50 = sub_10000588C(&qword_101638CF0);
          memcpy(__dst, v48, *(void *)(*(void *)(v50 - 8) + 64));
        }
        else
        {
          v205(__dst, v48, v220);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v211 + 56))(__dst, 0, 1, v220);
        }
        break;
      case 2u:
        uint64_t v51 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v51;
        uint64_t v52 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v52;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v53 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v53;
        *(void *)(a1 + 56) = a2[7];
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v54 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v54;
        *(void *)(a1 + 16) = a2[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = (int *)type metadata accessor for OwnedBeaconState(0);
        uint64_t v8 = v7[5];
        uint64_t v9 = (void *)(a1 + v8);
        uint64_t v10 = (uint64_t *)((char *)a2 + v8);
        type metadata accessor for StableIdentifier();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v55 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v55;
            uint64_t v56 = v10[3];
            v9[2] = v10[2];
            v9[3] = v56;
            uint64_t v57 = v10[5];
            v9[4] = v10[4];
            v9[5] = v57;
            goto LABEL_14;
          case 2u:
            uint64_t v58 = type metadata accessor for UUID();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v9, v10, v58);
            uint64_t v59 = (int *)sub_10000588C(&qword_1016555E0);
            uint64_t v60 = v59[12];
            int v61 = (void *)((char *)v9 + v60);
            int v62 = (void *)((char *)v10 + v60);
            uint64_t v64 = *v62;
            uint64_t v63 = v62[1];
            *int v61 = v64;
            v61[1] = v63;
            uint64_t v65 = v59[16];
            uint64_t v66 = (void *)((char *)v9 + v65);
            uint64_t v67 = (void *)((char *)v10 + v65);
            uint64_t v68 = v67[1];
            *uint64_t v66 = *v67;
            v66[1] = v68;
            uint64_t v69 = v59[20];
            int v70 = (void *)((char *)v9 + v69);
            int v71 = (void *)((char *)v10 + v69);
            uint64_t v72 = v71[1];
            *int v70 = *v71;
            v70[1] = v72;
            *(_WORD *)((char *)v9 + v59[24]) = *(_WORD *)((char *)v10 + v59[24]);
            uint64_t v73 = v59[28];
            uint64_t v74 = (void *)((char *)v9 + v73);
            uint64_t v75 = (void *)((char *)v10 + v73);
            uint64_t v76 = v75[1];
            *uint64_t v74 = *v75;
            v74[1] = v76;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_15;
          case 3u:
            uint64_t v77 = type metadata accessor for UUID();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v77 - 8) + 16))(v9, v10, v77);
            uint64_t v78 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
            uint64_t v79 = v78[12];
            uint64_t v80 = (void *)((char *)v9 + v79);
            uint64_t v81 = (void *)((char *)v10 + v79);
            uint64_t v83 = *v81;
            uint64_t v82 = v81[1];
            *uint64_t v80 = v83;
            v80[1] = v82;
            uint64_t v84 = v78[16];
            uint64_t v85 = (void *)((char *)v9 + v84);
            uint64_t v86 = (void *)((char *)v10 + v84);
            uint64_t v87 = v86[1];
            *uint64_t v85 = *v86;
            v85[1] = v87;
            uint64_t v88 = v78[20];
            uint64_t v89 = (void *)((char *)v9 + v88);
            uint64_t v90 = (void *)((char *)v10 + v88);
            uint64_t v91 = v90[1];
            *uint64_t v89 = *v90;
            v89[1] = v91;
            *((unsigned char *)v9 + v78[24]) = *((unsigned char *)v10 + v78[24]);
LABEL_14:
            swift_bridgeObjectRetain();
LABEL_15:
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v11 = v10[1];
            *uint64_t v9 = *v10;
            v9[1] = v11;
            break;
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        uint64_t v92 = v7[6];
        uint64_t v93 = (void *)(a1 + v92);
        uint64_t v94 = (uint64_t *)((char *)a2 + v92);
        uint64_t v221 = v94[1];
        *uint64_t v93 = *v94;
        v93[1] = v221;
        uint64_t v95 = v7[7];
        uint64_t v96 = (void *)(a1 + v95);
        uint64_t v97 = (uint64_t *)((char *)a2 + v95);
        uint64_t v219 = v97[1];
        *uint64_t v96 = *v97;
        v96[1] = v219;
        uint64_t v98 = v7[8];
        uint64_t v99 = (void *)(a1 + v98);
        uint64_t v100 = (uint64_t *)((char *)a2 + v98);
        __dstb = (void *)v100[1];
        *uint64_t v99 = *v100;
        v99[1] = __dstb;
        uint64_t v101 = v7[9];
        uint64_t v102 = (void *)(a1 + v101);
        uint64_t v103 = (uint64_t *)((char *)a2 + v101);
        uint64_t v212 = v103[1];
        *uint64_t v102 = *v103;
        v102[1] = v212;
        *(void *)(a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
        *(void *)(a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
        *(void *)(a1 + v7[12]) = *(uint64_t *)((char *)a2 + v7[12]);
        uint64_t v104 = v7[13];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (uint64_t *)((char *)a2 + v104);
        uint64_t v209 = v106[1];
        *uint64_t v105 = *v106;
        v105[1] = v209;
        *(unsigned char *)(a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
        *(void *)(a1 + v7[15]) = *(uint64_t *)((char *)a2 + v7[15]);
        uint64_t v107 = v7[16];
        uint64_t v108 = (void *)(a1 + v107);
        uint64_t v109 = (uint64_t *)((char *)a2 + v107);
        uint64_t v110 = v109[1];
        *uint64_t v108 = *v109;
        v108[1] = v110;
        *(void *)(a1 + v7[17]) = *(uint64_t *)((char *)a2 + v7[17]);
        *(void *)(a1 + v7[18]) = *(uint64_t *)((char *)a2 + v7[18]);
        uint64_t v111 = v7[19];
        size_t v112 = (void *)(a1 + v111);
        uint64_t v113 = (uint64_t *)((char *)a2 + v111);
        uint64_t v114 = v113[1];
        *size_t v112 = *v113;
        v112[1] = v114;
        *(void *)(a1 + v7[20]) = *(uint64_t *)((char *)a2 + v7[20]);
        *(void *)(a1 + v7[21]) = *(uint64_t *)((char *)a2 + v7[21]);
        *(unsigned char *)(a1 + v7[22]) = *((unsigned char *)a2 + v7[22]);
        *(unsigned char *)(a1 + v7[23]) = *((unsigned char *)a2 + v7[23]);
        uint64_t v115 = v7[24];
        uint64_t v202 = (void *)(a1 + v115);
        uint64_t v206 = (char *)a2 + v115;
        uint64_t v116 = type metadata accessor for UUID();
        uint64_t v117 = *(void *)(v116 - 8);
        uint64_t v203 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v203(v206, 1, v116))
        {
          uint64_t v118 = sub_10000588C(&qword_101638CF0);
          memcpy(v202, v206, *(void *)(*(void *)(v118 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v117 + 16))(v202, v206, v116);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v117 + 56))(v202, 0, 1, v116);
        }
        *(_WORD *)(a1 + v7[25]) = *(_WORD *)((char *)a2 + v7[25]);
        uint64_t v119 = v7[26];
        long long v120 = (char *)(a1 + v119);
        uint64_t v121 = (char *)a2 + v119;
        uint64_t v122 = (int *)type metadata accessor for BeaconProductInfoRecord();
        uint64_t v123 = *((void *)v122 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v123 + 48))(v121, 1, v122))
        {
          uint64_t v124 = sub_10000588C(&qword_10163BBB0);
          memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          uint64_t v210 = v123;
          (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v120, v121, v116);
          v120[v122[5]] = v121[v122[5]];
          v120[v122[6]] = v121[v122[6]];
          v120[v122[7]] = v121[v122[7]];
          uint64_t v125 = v122[8];
          uint64_t v126 = &v120[v125];
          uint64_t v127 = &v121[v125];
          uint64_t v128 = *((void *)v127 + 1);
          *(void *)uint64_t v126 = *(void *)v127;
          *((void *)v126 + 1) = v128;
          uint64_t v129 = v122[9];
          uint64_t v130 = &v120[v129];
          uint64_t v131 = &v121[v129];
          uint64_t v132 = *((void *)v131 + 1);
          *(void *)uint64_t v130 = *(void *)v131;
          *((void *)v130 + 1) = v132;
          uint64_t v133 = v122[10];
          uint64_t v134 = &v120[v133];
          uint64_t v135 = &v121[v133];
          *(void *)uint64_t v134 = *(void *)v135;
          v134[8] = v135[8];
          uint64_t v136 = v122[11];
          uint64_t v137 = &v120[v136];
          uint64_t v138 = &v121[v136];
          uint64_t v139 = *((void *)v138 + 1);
          *(void *)uint64_t v137 = *(void *)v138;
          *((void *)v137 + 1) = v139;
          uint64_t v140 = v122[12];
          uint64_t v207 = &v120[v140];
          uint64_t v213 = &v121[v140];
          uint64_t v141 = type metadata accessor for URL();
          uint64_t v222 = *(void *)(v141 - 8);
          int v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsta = v142;
          if (v142(v213, 1, v141))
          {
            uint64_t v143 = sub_10000588C(&qword_101649E40);
            memcpy(v207, v213, *(void *)(*(void *)(v143 - 8) + 64));
            uint64_t v144 = v222;
          }
          else
          {
            uint64_t v144 = v222;
            (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v207, v213, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v207, 0, 1, v141);
          }
          uint64_t v145 = v122[13];
          uint64_t v146 = &v120[v145];
          uint64_t v147 = &v121[v145];
          uint64_t v214 = v141;
          if (__dsta(&v121[v145], 1, v141))
          {
            uint64_t v148 = sub_10000588C(&qword_101649E40);
            memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v146, v147, v141);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v146, 0, 1, v141);
          }
          uint64_t v149 = v122[14];
          uint64_t v150 = &v120[v149];
          uint64_t v151 = &v121[v149];
          uint64_t v152 = *((void *)v151 + 1);
          *(void *)uint64_t v150 = *(void *)v151;
          *((void *)v150 + 1) = v152;
          *(void *)&v120[v122[15]] = *(void *)&v121[v122[15]];
          uint64_t v153 = v122[16];
          uint64_t v154 = &v120[v153];
          int v155 = &v121[v153];
          uint64_t v156 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
          uint64_t v157 = *(void *)(v156 - 8);
          uint64_t v158 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48);
          uint64_t v159 = v156;
          swift_bridgeObjectRetain();
          if (v158(v155, 1, v159))
          {
            uint64_t v160 = sub_10000588C(&qword_101649E50);
            memcpy(v154, v155, *(void *)(*(void *)(v160 - 8) + 64));
          }
          else
          {
            uint64_t v204 = v157;
            uint64_t v161 = *((void *)v155 + 1);
            *(void *)uint64_t v154 = *(void *)v155;
            *((void *)v154 + 1) = v161;
            uint64_t v162 = (int *)v159;
            uint64_t v163 = *((void *)v155 + 3);
            *((void *)v154 + 2) = *((void *)v155 + 2);
            *((void *)v154 + 3) = v163;
            uint64_t v164 = *((void *)v155 + 5);
            *((void *)v154 + 4) = *((void *)v155 + 4);
            *((void *)v154 + 5) = v164;
            *((_WORD *)v154 + 24) = *((_WORD *)v155 + 24);
            v154[72] = v155[72];
            uint64_t v165 = *((void *)v155 + 8);
            *((void *)v154 + 7) = *((void *)v155 + 7);
            *((void *)v154 + 8) = v165;
            long long v208 = v162;
            uint64_t v166 = v162[10];
            uint64_t v167 = &v154[v166];
            uint64_t v168 = &v155[v166];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__dsta(v168, 1, v214))
            {
              uint64_t v169 = sub_10000588C(&qword_101649E40);
              memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v167, v168, v214);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v167, 0, 1, v214);
            }
            uint64_t v170 = v208;
            uint64_t v171 = v208[11];
            uint64_t v172 = &v154[v171];
            uint64_t v173 = &v155[v171];
            if (__dsta(&v155[v171], 1, v214))
            {
              uint64_t v174 = sub_10000588C(&qword_101649E40);
              memcpy(v172, v173, *(void *)(*(void *)(v174 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v222 + 16))(v172, v173, v214);
              uint64_t v170 = v208;
              (*(void (**)(char *, void, uint64_t, uint64_t))(v222 + 56))(v172, 0, 1, v214);
            }
            uint64_t v175 = v170[12];
            uint64_t v176 = &v154[v175];
            uint64_t v177 = &v155[v175];
            *(void *)uint64_t v176 = *(void *)v177;
            v176[8] = v177[8];
            uint64_t v178 = v170[13];
            uint64_t v179 = &v154[v178];
            uint64_t v180 = &v155[v178];
            uint64_t v181 = *((void *)v180 + 1);
            *(void *)uint64_t v179 = *(void *)v180;
            *((void *)v179 + 1) = v181;
            *(void *)&v154[v170[14]] = *(void *)&v155[v170[14]];
            uint64_t v182 = v170[15];
            uint64_t v183 = &v154[v182];
            Swift::Int v184 = &v155[v182];
            uint64_t v185 = *((void *)v184 + 1);
            *(void *)uint64_t v183 = *(void *)v184;
            *((void *)v183 + 1) = v185;
            *(void *)&v154[v170[16]] = *(void *)&v155[v170[16]];
            uint64_t v186 = v170[17];
            uint64_t v187 = &v154[v186];
            uint64_t v188 = &v155[v186];
            *(_OWORD *)uint64_t v187 = *(_OWORD *)v188;
            v187[16] = v188[16];
            uint64_t v189 = v170[18];
            uint64_t v190 = &v154[v189];
            uint64_t v191 = &v155[v189];
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            v190[16] = v191[16];
            uint64_t v192 = *(void (**)(char *, void, uint64_t, int *))(v204 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v192(v154, 0, 1, v170);
          }
          *(_DWORD *)&v120[v122[17]] = *(_DWORD *)&v121[v122[17]];
          *(void *)&v120[v122[18]] = *(void *)&v121[v122[18]];
          uint64_t v193 = v122[19];
          uint64_t v194 = &v120[v193];
          uint64_t v195 = &v121[v193];
          uint64_t v196 = *(void (**)(char *, char *, uint64_t))(v222 + 16);
          swift_bridgeObjectRetain();
          v196(v194, v195, v214);
          v196(&v120[v122[20]], &v121[v122[20]], v214);
          v196(&v120[v122[21]], &v121[v122[21]], v214);
          v196(&v120[v122[22]], &v121[v122[22]], v214);
          v196(&v120[v122[23]], &v121[v122[23]], v214);
          v196(&v120[v122[24]], &v121[v122[24]], v214);
          (*(void (**)(char *, void, uint64_t, int *))(v210 + 56))(v120, 0, 1, v122);
        }
        uint64_t v197 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
        uint64_t v198 = &v120[v197];
        uint64_t v199 = &v121[v197];
        uint64_t v200 = *((void *)v199 + 1);
        *(void *)uint64_t v198 = *(void *)v199;
        *((void *)v198 + 1) = v200;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100961FB4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      uint64_t v3 = (int *)type metadata accessor for OwnedBeaconState(0);
      uint64_t v4 = a1 + v3[5];
      type metadata accessor for StableIdentifier();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 4u:
          goto LABEL_13;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 2u:
          uint64_t v10 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
          sub_10000588C(&qword_1016555E0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_13;
        case 3u:
          uint64_t v11 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v4, v11);
          sub_10000588C((uint64_t *)&unk_1016565E0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_13:
          swift_bridgeObjectRelease();
          break;
        default:
          break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = a1 + v3[24];
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
      }
      uint64_t v15 = a1 + v3[26];
      uint64_t v16 = (int *)type metadata accessor for BeaconProductInfoRecord();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v16 - 1) + 48))(v15, 1, v16))
      {
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v17 = v15 + v16[12];
        uint64_t v18 = type metadata accessor for URL();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
        if (!v20(v17, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
        }
        uint64_t v21 = v15 + v16[13];
        if (!v20(v21, 1, v18)) {
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v21, v18);
        }
        swift_bridgeObjectRelease();
        uint64_t v22 = v15 + v16[16];
        uint64_t v23 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v24 = v22 + *(int *)(v23 + 40);
          if (!v20(v24, 1, v18)) {
            (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v24, v18);
          }
          uint64_t v25 = v22 + *(int *)(v23 + 44);
          if (!v20(v25, 1, v18)) {
            (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v25, v18);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v26(v15 + v16[19], v18);
        v26(v15 + v16[20], v18);
        v26(v15 + v16[21], v18);
        v26(v15 + v16[22], v18);
        v26(v15 + v16[23], v18);
        v26(v15 + v16[24], v18);
      }
      type metadata accessor for ProductInfoState(0);
      goto LABEL_29;
    case 1:
      swift_bridgeObjectRelease();
      uint64_t v5 = type metadata accessor for SharedBeaconState(0);
      uint64_t v6 = a1 + *(int *)(v5 + 20);
      uint64_t v7 = type metadata accessor for UUID();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v27(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = a1 + *(int *)(v5 + 76);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7);
      if (!result)
      {
        return ((uint64_t (*)(uint64_t, uint64_t))v27)(v9, v7);
      }
      return result;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_29;
    case 3:
      swift_bridgeObjectRelease();
LABEL_29:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009627C0(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v10;
      uint64_t v11 = (int *)type metadata accessor for SharedBeaconState(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (void *)(a1 + v12);
      uint64_t v14 = (const void *)(a2 + v12);
      uint64_t v217 = type metadata accessor for UUID();
      uint64_t v15 = *(void *)(v217 - 8);
      uint64_t v16 = *(void (**)(void *, const void *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      uint64_t v203 = v16;
      v16(v13, v14, v217);
      uint64_t v17 = v11[6];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (void *)(a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v11[7];
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      uint64_t v215 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v215;
      uint64_t v24 = v11[8];
      uint64_t v25 = (void *)(a1 + v24);
      uint64_t v26 = (void *)(a2 + v24);
      uint64_t v27 = v26[1];
      *uint64_t v25 = *v26;
      v25[1] = v27;
      uint64_t v28 = v11[9];
      uint64_t v29 = (void *)(a1 + v28);
      uint64_t v30 = (void *)(a2 + v28);
      uint64_t v31 = v30[1];
      *uint64_t v29 = *v30;
      v29[1] = v31;
      uint64_t v32 = v11[10];
      uint64_t v33 = (void *)(a1 + v32);
      uint64_t v34 = (void *)(a2 + v32);
      uint64_t v35 = v34[1];
      *uint64_t v33 = *v34;
      v33[1] = v35;
      *(void *)(a1 + v11[11]) = *(void *)(a2 + v11[11]);
      *(void *)(a1 + v11[12]) = *(void *)(a2 + v11[12]);
      *(unsigned char *)(a1 + v11[13]) = *(unsigned char *)(a2 + v11[13]);
      *(void *)(a1 + v11[14]) = *(void *)(a2 + v11[14]);
      uint64_t v36 = v11[15];
      uint64_t v37 = (void *)(a1 + v36);
      uint64_t v38 = (void *)(a2 + v36);
      uint64_t v39 = v38[1];
      *uint64_t v37 = *v38;
      v37[1] = v39;
      *(void *)(a1 + v11[16]) = *(void *)(a2 + v11[16]);
      uint64_t v40 = v11[17];
      uint64_t v41 = (void *)(a1 + v40);
      uint64_t v42 = (void *)(a2 + v40);
      uint64_t v43 = v42[1];
      *uint64_t v41 = *v42;
      v41[1] = v43;
      *(void *)(a1 + v11[18]) = *(void *)(a2 + v11[18]);
      uint64_t v44 = v11[19];
      uint64_t v209 = v15;
      __dst = (void *)(a1 + v44);
      uint64_t v45 = (const void *)(a2 + v44);
      uint64_t v46 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46(v45, 1, v217))
      {
        uint64_t v47 = sub_10000588C(&qword_101638CF0);
        memcpy(__dst, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        v203(__dst, v45, v217);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v209 + 56))(__dst, 0, 1, v217);
      }
      goto LABEL_37;
    case 2u:
      uint64_t v48 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v48;
      uint64_t v49 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v49;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      uint64_t v50 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v50;
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_36;
    case 3u:
      uint64_t v51 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v51;
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_36;
    default:
      uint64_t v4 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = (int *)type metadata accessor for OwnedBeaconState(0);
      uint64_t v6 = v5[5];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      type metadata accessor for StableIdentifier();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v52 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v52;
          uint64_t v53 = v8[3];
          v7[2] = v8[2];
          v7[3] = v53;
          uint64_t v54 = v8[5];
          v7[4] = v8[4];
          v7[5] = v54;
          goto LABEL_12;
        case 2u:
          uint64_t v55 = type metadata accessor for UUID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v7, v8, v55);
          uint64_t v56 = (int *)sub_10000588C(&qword_1016555E0);
          uint64_t v57 = v56[12];
          uint64_t v58 = (void *)((char *)v7 + v57);
          uint64_t v59 = (void *)((char *)v8 + v57);
          uint64_t v61 = *v59;
          uint64_t v60 = v59[1];
          *uint64_t v58 = v61;
          v58[1] = v60;
          uint64_t v62 = v56[16];
          uint64_t v63 = (void *)((char *)v7 + v62);
          uint64_t v64 = (void *)((char *)v8 + v62);
          uint64_t v65 = v64[1];
          *uint64_t v63 = *v64;
          v63[1] = v65;
          uint64_t v66 = v56[20];
          uint64_t v67 = (void *)((char *)v7 + v66);
          uint64_t v68 = (void *)((char *)v8 + v66);
          uint64_t v69 = v68[1];
          *uint64_t v67 = *v68;
          v67[1] = v69;
          *(_WORD *)((char *)v7 + v56[24]) = *(_WORD *)((char *)v8 + v56[24]);
          uint64_t v70 = v56[28];
          int v71 = (void *)((char *)v7 + v70);
          uint64_t v72 = (void *)((char *)v8 + v70);
          uint64_t v73 = v72[1];
          *int v71 = *v72;
          v71[1] = v73;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_13;
        case 3u:
          uint64_t v74 = type metadata accessor for UUID();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v7, v8, v74);
          uint64_t v75 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
          uint64_t v76 = v75[12];
          uint64_t v77 = (void *)((char *)v7 + v76);
          uint64_t v78 = (void *)((char *)v8 + v76);
          uint64_t v80 = *v78;
          uint64_t v79 = v78[1];
          *uint64_t v77 = v80;
          v77[1] = v79;
          uint64_t v81 = v75[16];
          uint64_t v82 = (void *)((char *)v7 + v81);
          uint64_t v83 = (void *)((char *)v8 + v81);
          uint64_t v84 = v83[1];
          *uint64_t v82 = *v83;
          v82[1] = v84;
          uint64_t v85 = v75[20];
          uint64_t v86 = (void *)((char *)v7 + v85);
          uint64_t v87 = (void *)((char *)v8 + v85);
          uint64_t v88 = v87[1];
          *uint64_t v86 = *v87;
          v86[1] = v88;
          *((unsigned char *)v7 + v75[24]) = *((unsigned char *)v8 + v75[24]);
LABEL_12:
          swift_bridgeObjectRetain();
LABEL_13:
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v9 = v8[1];
          *uint64_t v7 = *v8;
          v7[1] = v9;
          break;
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v89 = v5[6];
      uint64_t v90 = (void *)(a1 + v89);
      uint64_t v91 = (void *)(a2 + v89);
      uint64_t v218 = v91[1];
      *uint64_t v90 = *v91;
      v90[1] = v218;
      uint64_t v92 = v5[7];
      uint64_t v93 = (void *)(a1 + v92);
      uint64_t v94 = (void *)(a2 + v92);
      uint64_t v216 = v94[1];
      *uint64_t v93 = *v94;
      v93[1] = v216;
      uint64_t v95 = v5[8];
      uint64_t v96 = (void *)(a1 + v95);
      uint64_t v97 = (void *)(a2 + v95);
      __dstb = (void *)v97[1];
      *uint64_t v96 = *v97;
      v96[1] = __dstb;
      uint64_t v98 = v5[9];
      uint64_t v99 = (void *)(a1 + v98);
      uint64_t v100 = (void *)(a2 + v98);
      uint64_t v210 = v100[1];
      *uint64_t v99 = *v100;
      v99[1] = v210;
      *(void *)(a1 + v5[10]) = *(void *)(a2 + v5[10]);
      *(void *)(a1 + v5[11]) = *(void *)(a2 + v5[11]);
      *(void *)(a1 + v5[12]) = *(void *)(a2 + v5[12]);
      uint64_t v101 = v5[13];
      uint64_t v102 = (void *)(a1 + v101);
      uint64_t v103 = (void *)(a2 + v101);
      uint64_t v207 = v103[1];
      *uint64_t v102 = *v103;
      v102[1] = v207;
      *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
      *(void *)(a1 + v5[15]) = *(void *)(a2 + v5[15]);
      uint64_t v104 = v5[16];
      uint64_t v105 = (void *)(a1 + v104);
      uint64_t v106 = (void *)(a2 + v104);
      uint64_t v107 = v106[1];
      *uint64_t v105 = *v106;
      v105[1] = v107;
      *(void *)(a1 + v5[17]) = *(void *)(a2 + v5[17]);
      *(void *)(a1 + v5[18]) = *(void *)(a2 + v5[18]);
      uint64_t v108 = v5[19];
      uint64_t v109 = (void *)(a1 + v108);
      uint64_t v110 = (void *)(a2 + v108);
      uint64_t v111 = v110[1];
      *uint64_t v109 = *v110;
      v109[1] = v111;
      *(void *)(a1 + v5[20]) = *(void *)(a2 + v5[20]);
      *(void *)(a1 + v5[21]) = *(void *)(a2 + v5[21]);
      *(unsigned char *)(a1 + v5[22]) = *(unsigned char *)(a2 + v5[22]);
      *(unsigned char *)(a1 + v5[23]) = *(unsigned char *)(a2 + v5[23]);
      uint64_t v112 = v5[24];
      uint64_t v199 = (void *)(a1 + v112);
      uint64_t v200 = (void *)(a2 + v112);
      uint64_t v113 = type metadata accessor for UUID();
      uint64_t v114 = *(void *)(v113 - 8);
      uint64_t v204 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v114 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v204(v200, 1, v113))
      {
        uint64_t v115 = sub_10000588C(&qword_101638CF0);
        memcpy(v199, v200, *(void *)(*(void *)(v115 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v114 + 16))(v199, v200, v113);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v114 + 56))(v199, 0, 1, v113);
      }
      *(_WORD *)(a1 + v5[25]) = *(_WORD *)(a2 + v5[25]);
      uint64_t v116 = v5[26];
      uint64_t v117 = (char *)(a1 + v116);
      uint64_t v118 = (char *)(a2 + v116);
      uint64_t v119 = (int *)type metadata accessor for BeaconProductInfoRecord();
      uint64_t v120 = *((void *)v119 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v120 + 48))(v118, 1, v119))
      {
        uint64_t v121 = sub_10000588C(&qword_10163BBB0);
        memcpy(v117, v118, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        uint64_t v208 = v120;
        (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v117, v118, v113);
        v117[v119[5]] = v118[v119[5]];
        v117[v119[6]] = v118[v119[6]];
        v117[v119[7]] = v118[v119[7]];
        uint64_t v122 = v119[8];
        uint64_t v123 = &v117[v122];
        uint64_t v124 = &v118[v122];
        uint64_t v125 = *((void *)v124 + 1);
        *(void *)uint64_t v123 = *(void *)v124;
        *((void *)v123 + 1) = v125;
        uint64_t v126 = v119[9];
        uint64_t v127 = &v117[v126];
        uint64_t v128 = &v118[v126];
        uint64_t v129 = *((void *)v128 + 1);
        *(void *)uint64_t v127 = *(void *)v128;
        *((void *)v127 + 1) = v129;
        uint64_t v130 = v119[10];
        uint64_t v131 = &v117[v130];
        uint64_t v132 = &v118[v130];
        *(void *)uint64_t v131 = *(void *)v132;
        v131[8] = v132[8];
        uint64_t v133 = v119[11];
        uint64_t v134 = &v117[v133];
        uint64_t v135 = &v118[v133];
        uint64_t v136 = *((void *)v135 + 1);
        *(void *)uint64_t v134 = *(void *)v135;
        *((void *)v134 + 1) = v136;
        uint64_t v137 = v119[12];
        uint64_t v201 = &v117[v137];
        uint64_t v205 = &v118[v137];
        uint64_t v138 = type metadata accessor for URL();
        uint64_t v219 = *(void *)(v138 - 8);
        uint64_t v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        __dsta = v139;
        if (v139(v205, 1, v138))
        {
          uint64_t v140 = sub_10000588C(&qword_101649E40);
          memcpy(v201, v205, *(void *)(*(void *)(v140 - 8) + 64));
          uint64_t v141 = v219;
        }
        else
        {
          uint64_t v141 = v219;
          (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v201, v205, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v201, 0, 1, v138);
        }
        uint64_t v142 = v119[13];
        uint64_t v143 = &v117[v142];
        uint64_t v144 = &v118[v142];
        uint64_t v211 = v138;
        if (__dsta(&v118[v142], 1, v138))
        {
          uint64_t v145 = sub_10000588C(&qword_101649E40);
          memcpy(v143, v144, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v141 + 16))(v143, v144, v138);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v141 + 56))(v143, 0, 1, v138);
        }
        uint64_t v146 = v119[14];
        uint64_t v147 = &v117[v146];
        uint64_t v148 = &v118[v146];
        uint64_t v149 = *((void *)v148 + 1);
        *(void *)uint64_t v147 = *(void *)v148;
        *((void *)v147 + 1) = v149;
        *(void *)&v117[v119[15]] = *(void *)&v118[v119[15]];
        uint64_t v150 = v119[16];
        uint64_t v151 = &v117[v150];
        uint64_t v152 = &v118[v150];
        uint64_t v153 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
        uint64_t v154 = *(void **)(v153 - 8);
        int v155 = (unsigned int (*)(char *, uint64_t, uint64_t))v154[6];
        uint64_t v156 = v153;
        swift_bridgeObjectRetain();
        if (v155(v152, 1, v156))
        {
          uint64_t v157 = sub_10000588C(&qword_101649E50);
          memcpy(v151, v152, *(void *)(*(void *)(v157 - 8) + 64));
        }
        else
        {
          uint64_t v202 = v154;
          uint64_t v158 = *((void *)v152 + 1);
          *(void *)uint64_t v151 = *(void *)v152;
          *((void *)v151 + 1) = v158;
          uint64_t v159 = (int *)v156;
          uint64_t v160 = *((void *)v152 + 3);
          *((void *)v151 + 2) = *((void *)v152 + 2);
          *((void *)v151 + 3) = v160;
          uint64_t v161 = *((void *)v152 + 5);
          *((void *)v151 + 4) = *((void *)v152 + 4);
          *((void *)v151 + 5) = v161;
          *((_WORD *)v151 + 24) = *((_WORD *)v152 + 24);
          v151[72] = v152[72];
          uint64_t v162 = *((void *)v152 + 8);
          *((void *)v151 + 7) = *((void *)v152 + 7);
          *((void *)v151 + 8) = v162;
          uint64_t v206 = v159;
          uint64_t v163 = v159[10];
          uint64_t v164 = &v151[v163];
          uint64_t v165 = &v152[v163];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (__dsta(v165, 1, v211))
          {
            uint64_t v166 = sub_10000588C(&qword_101649E40);
            memcpy(v164, v165, *(void *)(*(void *)(v166 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v164, v165, v211);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v164, 0, 1, v211);
          }
          uint64_t v167 = v206;
          uint64_t v168 = v206[11];
          uint64_t v169 = &v151[v168];
          uint64_t v170 = &v152[v168];
          if (__dsta(&v152[v168], 1, v211))
          {
            uint64_t v171 = sub_10000588C(&qword_101649E40);
            memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v219 + 16))(v169, v170, v211);
            uint64_t v167 = v206;
            (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v169, 0, 1, v211);
          }
          uint64_t v172 = v167[12];
          uint64_t v173 = &v151[v172];
          uint64_t v174 = &v152[v172];
          *(void *)uint64_t v173 = *(void *)v174;
          v173[8] = v174[8];
          uint64_t v175 = v167[13];
          uint64_t v176 = &v151[v175];
          uint64_t v177 = &v152[v175];
          uint64_t v178 = *((void *)v177 + 1);
          *(void *)uint64_t v176 = *(void *)v177;
          *((void *)v176 + 1) = v178;
          *(void *)&v151[v167[14]] = *(void *)&v152[v167[14]];
          uint64_t v179 = v167[15];
          uint64_t v180 = &v151[v179];
          uint64_t v181 = &v152[v179];
          uint64_t v182 = *((void *)v181 + 1);
          *(void *)uint64_t v180 = *(void *)v181;
          *((void *)v180 + 1) = v182;
          *(void *)&v151[v167[16]] = *(void *)&v152[v167[16]];
          uint64_t v183 = v167[17];
          Swift::Int v184 = &v151[v183];
          uint64_t v185 = &v152[v183];
          *(_OWORD *)Swift::Int v184 = *(_OWORD *)v185;
          v184[16] = v185[16];
          uint64_t v186 = v167[18];
          uint64_t v187 = &v151[v186];
          uint64_t v188 = &v152[v186];
          *(_OWORD *)uint64_t v187 = *(_OWORD *)v188;
          v187[16] = v188[16];
          uint64_t v189 = (void (*)(char *, void, uint64_t, int *))v202[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v189(v151, 0, 1, v167);
        }
        *(_DWORD *)&v117[v119[17]] = *(_DWORD *)&v118[v119[17]];
        *(void *)&v117[v119[18]] = *(void *)&v118[v119[18]];
        uint64_t v190 = v119[19];
        uint64_t v191 = &v117[v190];
        uint64_t v192 = &v118[v190];
        uint64_t v193 = *(void (**)(char *, char *, uint64_t))(v219 + 16);
        swift_bridgeObjectRetain();
        v193(v191, v192, v211);
        v193(&v117[v119[20]], &v118[v119[20]], v211);
        v193(&v117[v119[21]], &v118[v119[21]], v211);
        v193(&v117[v119[22]], &v118[v119[22]], v211);
        v193(&v117[v119[23]], &v118[v119[23]], v211);
        v193(&v117[v119[24]], &v118[v119[24]], v211);
        (*(void (**)(char *, void, uint64_t, int *))(v208 + 56))(v117, 0, 1, v119);
      }
      uint64_t v194 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
      uint64_t v195 = &v117[v194];
      uint64_t v196 = &v118[v194];
      uint64_t v197 = *((void *)v196 + 1);
      *(void *)uint64_t v195 = *(void *)v196;
      *((void *)v195 + 1) = v197;
LABEL_36:
      swift_bridgeObjectRetain();
LABEL_37:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
}

uint64_t sub_10096370C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10095268C(a1, type metadata accessor for BeaconState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v8 = (int *)type metadata accessor for SharedBeaconState(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = a1 + v9;
        uint64_t v11 = a2 + v9;
        uint64_t v176 = type metadata accessor for UUID();
        uint64_t v12 = *(void **)(v176 - 8);
        uint64_t v13 = (void (*)(uint64_t, uint64_t, uint64_t))v12[2];
        swift_bridgeObjectRetain();
        v13(v10, v11, v176);
        uint64_t v14 = v8[6];
        uint64_t v15 = (void *)(a1 + v14);
        uint64_t v16 = (void *)(a2 + v14);
        void *v15 = *v16;
        v15[1] = v16[1];
        uint64_t v17 = v8[7];
        uint64_t v18 = (void *)(a1 + v17);
        uint64_t v19 = (void *)(a2 + v17);
        *uint64_t v18 = *v19;
        v18[1] = v19[1];
        uint64_t v20 = v8[8];
        uint64_t v21 = (void *)(a1 + v20);
        uint64_t v22 = (void *)(a2 + v20);
        void *v21 = *v22;
        v21[1] = v22[1];
        uint64_t v23 = v8[9];
        uint64_t v24 = (void *)(a1 + v23);
        uint64_t v25 = (void *)(a2 + v23);
        *uint64_t v24 = *v25;
        v24[1] = v25[1];
        uint64_t v26 = v8[10];
        uint64_t v27 = (void *)(a1 + v26);
        uint64_t v28 = (void *)(a2 + v26);
        *uint64_t v27 = *v28;
        v27[1] = v28[1];
        *(void *)(a1 + v8[11]) = *(void *)(a2 + v8[11]);
        *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
        *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
        *(void *)(a1 + v8[14]) = *(void *)(a2 + v8[14]);
        uint64_t v29 = v8[15];
        uint64_t v30 = (void *)(a1 + v29);
        uint64_t v31 = (void *)(a2 + v29);
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        *(void *)(a1 + v8[16]) = *(void *)(a2 + v8[16]);
        uint64_t v32 = v8[17];
        uint64_t v33 = (void *)(a1 + v32);
        uint64_t v34 = (void *)(a2 + v32);
        *uint64_t v33 = *v34;
        v33[1] = v34[1];
        *(void *)(a1 + v8[18]) = *(void *)(a2 + v8[18]);
        uint64_t v35 = v8[19];
        uint64_t v171 = (void (**)(void *, void, uint64_t, uint64_t))v12;
        __dst = (void *)(a1 + v35);
        uint64_t v36 = (const void *)(a2 + v35);
        uint64_t v37 = (unsigned int (*)(const void *, uint64_t, uint64_t))v12[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37(v36, 1, v176))
        {
          uint64_t v38 = sub_10000588C(&qword_101638CF0);
          memcpy(__dst, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          v13((uint64_t)__dst, (uint64_t)v36, v176);
          v171[7](__dst, 0, 1, v176);
        }
        goto LABEL_38;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_37;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        swift_bridgeObjectRetain();
        goto LABEL_37;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v4 = (int *)type metadata accessor for OwnedBeaconState(0);
        uint64_t v5 = v4[5];
        uint64_t v6 = (void *)(a1 + v5);
        uint64_t v7 = (void *)(a2 + v5);
        type metadata accessor for StableIdentifier();
        swift_bridgeObjectRetain();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            void *v6 = *v7;
            v6[1] = v7[1];
            uint64_t v6[2] = v7[2];
            v6[3] = v7[3];
            v6[4] = v7[4];
            v6[5] = v7[5];
            goto LABEL_13;
          case 2u:
            uint64_t v39 = type metadata accessor for UUID();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v6, v7, v39);
            uint64_t v40 = (int *)sub_10000588C(&qword_1016555E0);
            uint64_t v41 = v40[12];
            uint64_t v42 = (void *)((char *)v6 + v41);
            uint64_t v43 = (void *)((char *)v7 + v41);
            *uint64_t v42 = *v43;
            v42[1] = v43[1];
            uint64_t v44 = v40[16];
            uint64_t v45 = (void *)((char *)v6 + v44);
            uint64_t v46 = (void *)((char *)v7 + v44);
            *uint64_t v45 = *v46;
            v45[1] = v46[1];
            uint64_t v47 = v40[20];
            uint64_t v48 = (void *)((char *)v6 + v47);
            uint64_t v49 = (void *)((char *)v7 + v47);
            *uint64_t v48 = *v49;
            v48[1] = v49[1];
            *(_WORD *)((char *)v6 + v40[24]) = *(_WORD *)((char *)v7 + v40[24]);
            uint64_t v50 = v40[28];
            uint64_t v51 = (void *)((char *)v6 + v50);
            uint64_t v52 = (void *)((char *)v7 + v50);
            *uint64_t v51 = *v52;
            v51[1] = v52[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_14;
          case 3u:
            uint64_t v53 = type metadata accessor for UUID();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v6, v7, v53);
            uint64_t v54 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
            uint64_t v55 = v54[12];
            uint64_t v56 = (void *)((char *)v6 + v55);
            uint64_t v57 = (void *)((char *)v7 + v55);
            *uint64_t v56 = *v57;
            v56[1] = v57[1];
            uint64_t v58 = v54[16];
            uint64_t v59 = (void *)((char *)v6 + v58);
            uint64_t v60 = (void *)((char *)v7 + v58);
            *uint64_t v59 = *v60;
            v59[1] = v60[1];
            uint64_t v61 = v54[20];
            uint64_t v62 = (void *)((char *)v6 + v61);
            uint64_t v63 = (void *)((char *)v7 + v61);
            *uint64_t v62 = *v63;
            v62[1] = v63[1];
            *((unsigned char *)v6 + v54[24]) = *((unsigned char *)v7 + v54[24]);
LABEL_13:
            swift_bridgeObjectRetain();
LABEL_14:
            swift_bridgeObjectRetain();
            break;
          default:
            void *v6 = *v7;
            v6[1] = v7[1];
            break;
        }
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        uint64_t v64 = v4[6];
        uint64_t v65 = (void *)(a1 + v64);
        uint64_t v66 = (void *)(a2 + v64);
        *uint64_t v65 = *v66;
        v65[1] = v66[1];
        uint64_t v67 = v4[7];
        uint64_t v68 = (void *)(a1 + v67);
        uint64_t v69 = (void *)(a2 + v67);
        *uint64_t v68 = *v69;
        v68[1] = v69[1];
        uint64_t v70 = v4[8];
        int v71 = (void *)(a1 + v70);
        uint64_t v72 = (void *)(a2 + v70);
        *int v71 = *v72;
        v71[1] = v72[1];
        uint64_t v73 = v4[9];
        uint64_t v74 = (void *)(a1 + v73);
        uint64_t v75 = (void *)(a2 + v73);
        *uint64_t v74 = *v75;
        v74[1] = v75[1];
        *(void *)(a1 + v4[10]) = *(void *)(a2 + v4[10]);
        *(void *)(a1 + v4[11]) = *(void *)(a2 + v4[11]);
        *(void *)(a1 + v4[12]) = *(void *)(a2 + v4[12]);
        uint64_t v76 = v4[13];
        uint64_t v77 = (void *)(a1 + v76);
        uint64_t v78 = (void *)(a2 + v76);
        *uint64_t v77 = *v78;
        v77[1] = v78[1];
        *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
        *(void *)(a1 + v4[15]) = *(void *)(a2 + v4[15]);
        uint64_t v79 = v4[16];
        uint64_t v80 = (void *)(a1 + v79);
        uint64_t v81 = (void *)(a2 + v79);
        *uint64_t v80 = *v81;
        v80[1] = v81[1];
        *(void *)(a1 + v4[17]) = *(void *)(a2 + v4[17]);
        *(void *)(a1 + v4[18]) = *(void *)(a2 + v4[18]);
        uint64_t v82 = v4[19];
        uint64_t v83 = (void *)(a1 + v82);
        uint64_t v84 = (void *)(a2 + v82);
        *uint64_t v83 = *v84;
        v83[1] = v84[1];
        *(void *)(a1 + v4[20]) = *(void *)(a2 + v4[20]);
        *(void *)(a1 + v4[21]) = *(void *)(a2 + v4[21]);
        *(unsigned char *)(a1 + v4[22]) = *(unsigned char *)(a2 + v4[22]);
        *(unsigned char *)(a1 + v4[23]) = *(unsigned char *)(a2 + v4[23]);
        uint64_t v85 = v4[24];
        uint64_t v165 = (void *)(a1 + v85);
        uint64_t v166 = (const void *)(a2 + v85);
        uint64_t v86 = type metadata accessor for UUID();
        uint64_t v87 = *(void *)(v86 - 8);
        uint64_t v168 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v87 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v168(v166, 1, v86))
        {
          uint64_t v88 = sub_10000588C(&qword_101638CF0);
          memcpy(v165, v166, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v87 + 16))(v165, v166, v86);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v87 + 56))(v165, 0, 1, v86);
        }
        uint64_t v89 = v87;
        *(_WORD *)(a1 + v4[25]) = *(_WORD *)(a2 + v4[25]);
        uint64_t v90 = v4[26];
        uint64_t v91 = (char *)(a1 + v90);
        uint64_t v92 = (char *)(a2 + v90);
        uint64_t v93 = (int *)type metadata accessor for BeaconProductInfoRecord();
        uint64_t v94 = *((void *)v93 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v94 + 48))(v92, 1, v93))
        {
          uint64_t v95 = sub_10000588C(&qword_10163BBB0);
          memcpy(v91, v92, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          uint64_t v170 = v94;
          (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v91, v92, v86);
          v91[v93[5]] = v92[v93[5]];
          v91[v93[6]] = v92[v93[6]];
          v91[v93[7]] = v92[v93[7]];
          uint64_t v96 = v93[8];
          uint64_t v97 = &v91[v96];
          uint64_t v98 = &v92[v96];
          *(void *)uint64_t v97 = *(void *)v98;
          *((void *)v97 + 1) = *((void *)v98 + 1);
          uint64_t v99 = v93[9];
          uint64_t v100 = &v91[v99];
          uint64_t v101 = &v92[v99];
          *(void *)uint64_t v100 = *(void *)v101;
          *((void *)v100 + 1) = *((void *)v101 + 1);
          uint64_t v102 = v93[10];
          uint64_t v103 = &v91[v102];
          uint64_t v104 = &v92[v102];
          char v105 = v104[8];
          *(void *)uint64_t v103 = *(void *)v104;
          v103[8] = v105;
          uint64_t v106 = v93[11];
          uint64_t v107 = &v91[v106];
          uint64_t v108 = &v92[v106];
          *(void *)uint64_t v107 = *(void *)v108;
          *((void *)v107 + 1) = *((void *)v108 + 1);
          uint64_t v109 = v93[12];
          uint64_t v172 = &v91[v109];
          uint64_t v169 = &v92[v109];
          uint64_t v110 = type metadata accessor for URL();
          uint64_t v177 = *(void *)(v110 - 8);
          uint64_t v111 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v177 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsta = v111;
          if (v111(v169, 1, v110))
          {
            uint64_t v112 = sub_10000588C(&qword_101649E40);
            memcpy(v172, v169, *(void *)(*(void *)(v112 - 8) + 64));
            uint64_t v113 = v177;
          }
          else
          {
            uint64_t v113 = v177;
            (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v172, v169, v110);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v177 + 56))(v172, 0, 1, v110);
          }
          uint64_t v114 = v93[13];
          uint64_t v115 = &v91[v114];
          uint64_t v116 = &v92[v114];
          uint64_t v173 = (void *)v110;
          if (__dsta(&v92[v114], 1, v110))
          {
            uint64_t v117 = sub_10000588C(&qword_101649E40);
            memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v115, v116, v110);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v115, 0, 1, v110);
          }
          uint64_t v118 = v93[14];
          uint64_t v119 = &v91[v118];
          uint64_t v120 = &v92[v118];
          *(void *)uint64_t v119 = *(void *)v120;
          *((void *)v119 + 1) = *((void *)v120 + 1);
          *(void *)&v91[v93[15]] = *(void *)&v92[v93[15]];
          uint64_t v121 = v93[16];
          uint64_t v122 = &v91[v121];
          uint64_t v123 = &v92[v121];
          uint64_t v124 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
          uint64_t v125 = *(void *)(v124 - 8);
          uint64_t v126 = *(unsigned int (**)(char *, uint64_t, int *))(v125 + 48);
          uint64_t v127 = (int *)v124;
          swift_bridgeObjectRetain();
          if (v126(v123, 1, v127))
          {
            uint64_t v128 = sub_10000588C(&qword_101649E50);
            memcpy(v122, v123, *(void *)(*(void *)(v128 - 8) + 64));
          }
          else
          {
            uint64_t v167 = v125;
            *(void *)uint64_t v122 = *(void *)v123;
            *((void *)v122 + 1) = *((void *)v123 + 1);
            *((void *)v122 + 2) = *((void *)v123 + 2);
            *((void *)v122 + 3) = *((void *)v123 + 3);
            *((void *)v122 + 4) = *((void *)v123 + 4);
            *((void *)v122 + 5) = *((void *)v123 + 5);
            *((_WORD *)v122 + 24) = *((_WORD *)v123 + 24);
            *((void *)v122 + 7) = *((void *)v123 + 7);
            uint64_t v129 = *((void *)v123 + 8);
            v122[72] = v123[72];
            *((void *)v122 + 8) = v129;
            uint64_t v130 = v127[10];
            uint64_t v131 = &v122[v130];
            uint64_t v132 = &v123[v130];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (__dsta(v132, 1, (uint64_t)v173))
            {
              uint64_t v133 = sub_10000588C(&qword_101649E40);
              memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(v177 + 16))(v131, v132, v173);
              (*(void (**)(char *, void, uint64_t, void *))(v177 + 56))(v131, 0, 1, v173);
            }
            uint64_t v134 = v127[11];
            uint64_t v135 = &v122[v134];
            uint64_t v136 = &v123[v134];
            if (__dsta(&v123[v134], 1, (uint64_t)v173))
            {
              uint64_t v137 = sub_10000588C(&qword_101649E40);
              memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(v177 + 16))(v135, v136, v173);
              (*(void (**)(char *, void, uint64_t, void *))(v177 + 56))(v135, 0, 1, v173);
            }
            uint64_t v138 = v127[12];
            uint64_t v139 = &v122[v138];
            uint64_t v140 = &v123[v138];
            uint64_t v141 = *(void *)v140;
            v139[8] = v140[8];
            *(void *)uint64_t v139 = v141;
            uint64_t v142 = v127[13];
            uint64_t v143 = &v122[v142];
            uint64_t v144 = &v123[v142];
            *(void *)uint64_t v143 = *(void *)v144;
            *((void *)v143 + 1) = *((void *)v144 + 1);
            *(void *)&v122[v127[14]] = *(void *)&v123[v127[14]];
            uint64_t v145 = v127[15];
            uint64_t v146 = &v122[v145];
            uint64_t v147 = &v123[v145];
            *(void *)uint64_t v146 = *(void *)v147;
            *((void *)v146 + 1) = *((void *)v147 + 1);
            *(void *)&v122[v127[16]] = *(void *)&v123[v127[16]];
            uint64_t v148 = v127[17];
            uint64_t v149 = &v122[v148];
            uint64_t v150 = &v123[v148];
            long long v151 = *(_OWORD *)v150;
            v149[16] = v150[16];
            *(_OWORD *)uint64_t v149 = v151;
            uint64_t v152 = v127[18];
            uint64_t v153 = &v122[v152];
            uint64_t v154 = &v123[v152];
            long long v155 = *(_OWORD *)v154;
            v153[16] = v154[16];
            *(_OWORD *)uint64_t v153 = v155;
            uint64_t v156 = *(void (**)(char *, void, uint64_t, int *))(v167 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v156(v122, 0, 1, v127);
          }
          *(_DWORD *)&v91[v93[17]] = *(_DWORD *)&v92[v93[17]];
          *(void *)&v91[v93[18]] = *(void *)&v92[v93[18]];
          uint64_t v157 = v93[19];
          uint64_t v158 = &v91[v157];
          uint64_t v159 = &v92[v157];
          uint64_t v160 = *(void (**)(char *, char *, void *))(v177 + 16);
          swift_bridgeObjectRetain();
          v160(v158, v159, v173);
          v160(&v91[v93[20]], &v92[v93[20]], v173);
          v160(&v91[v93[21]], &v92[v93[21]], v173);
          v160(&v91[v93[22]], &v92[v93[22]], v173);
          v160(&v91[v93[23]], &v92[v93[23]], v173);
          v160(&v91[v93[24]], &v92[v93[24]], v173);
          (*(void (**)(char *, void, uint64_t, int *))(v170 + 56))(v91, 0, 1, v93);
        }
        uint64_t v161 = *(int *)(type metadata accessor for ProductInfoState(0) + 20);
        uint64_t v162 = &v91[v161];
        uint64_t v163 = &v92[v161];
        *(void *)uint64_t v162 = *(void *)v163;
        *((void *)v162 + 1) = *((void *)v163 + 1);
LABEL_37:
        swift_bridgeObjectRetain();
LABEL_38:
        swift_storeEnumTagMultiPayload();
        break;
    }
  }
  return a1;
}

_OWORD *sub_1009647D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v15 = (int *)type metadata accessor for SharedBeaconState(0);
    uint64_t v16 = v15[5];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v21(v17, v18, v19);
    *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
    *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
    *(_OWORD *)((char *)a1 + v15[8]) = *(_OWORD *)((char *)a2 + v15[8]);
    *(_OWORD *)((char *)a1 + v15[9]) = *(_OWORD *)((char *)a2 + v15[9]);
    *(_OWORD *)((char *)a1 + v15[10]) = *(_OWORD *)((char *)a2 + v15[10]);
    *(void *)((char *)a1 + v15[11]) = *(void *)((char *)a2 + v15[11]);
    *(void *)((char *)a1 + v15[12]) = *(void *)((char *)a2 + v15[12]);
    *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
    *(void *)((char *)a1 + v15[14]) = *(void *)((char *)a2 + v15[14]);
    *(_OWORD *)((char *)a1 + v15[15]) = *(_OWORD *)((char *)a2 + v15[15]);
    *(void *)((char *)a1 + v15[16]) = *(void *)((char *)a2 + v15[16]);
    *(_OWORD *)((char *)a1 + v15[17]) = *(_OWORD *)((char *)a2 + v15[17]);
    *(void *)((char *)a1 + v15[18]) = *(void *)((char *)a2 + v15[18]);
    uint64_t v22 = v15[19];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19))
    {
      uint64_t v25 = sub_10000588C(&qword_101638CF0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v21(v23, v24, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
    }
LABEL_35:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    uint64_t v7 = (int *)type metadata accessor for OwnedBeaconState(0);
    uint64_t v8 = v7[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for StableIdentifier();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 3)
    {
      uint64_t v26 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v9, v10, v26);
      uint64_t v27 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
      *(_OWORD *)&v9[v27[12]] = *(_OWORD *)&v10[v27[12]];
      *(_OWORD *)&v9[v27[16]] = *(_OWORD *)&v10[v27[16]];
      *(_OWORD *)&v9[v27[20]] = *(_OWORD *)&v10[v27[20]];
      v9[v27[24]] = v10[v27[24]];
      swift_storeEnumTagMultiPayload();
    }
    else if (v12 == 2)
    {
      uint64_t v13 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
      uint64_t v14 = (int *)sub_10000588C(&qword_1016555E0);
      *(_OWORD *)&v9[v14[12]] = *(_OWORD *)&v10[v14[12]];
      *(_OWORD *)&v9[v14[16]] = *(_OWORD *)&v10[v14[16]];
      *(_OWORD *)&v9[v14[20]] = *(_OWORD *)&v10[v14[20]];
      *(_WORD *)&v9[v14[24]] = *(_WORD *)&v10[v14[24]];
      *(_OWORD *)&v9[v14[28]] = *(_OWORD *)&v10[v14[28]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
    *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
    *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
    *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
    *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
    *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
    *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
    *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
    *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
    *(void *)((char *)a1 + v7[15]) = *(void *)((char *)a2 + v7[15]);
    *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
    *(void *)((char *)a1 + v7[17]) = *(void *)((char *)a2 + v7[17]);
    *(void *)((char *)a1 + v7[18]) = *(void *)((char *)a2 + v7[18]);
    *(_OWORD *)((char *)a1 + v7[19]) = *(_OWORD *)((char *)a2 + v7[19]);
    *(void *)((char *)a1 + v7[20]) = *(void *)((char *)a2 + v7[20]);
    *(void *)((char *)a1 + v7[21]) = *(void *)((char *)a2 + v7[21]);
    *((unsigned char *)a1 + v7[22]) = *((unsigned char *)a2 + v7[22]);
    *((unsigned char *)a1 + v7[23]) = *((unsigned char *)a2 + v7[23]);
    uint64_t v28 = v7[24];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for UUID();
    uint64_t v32 = *(void *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
    {
      uint64_t v33 = sub_10000588C(&qword_101638CF0);
      memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
    }
    *(_WORD *)((char *)a1 + v7[25]) = *(_WORD *)((char *)a2 + v7[25]);
    uint64_t v34 = v7[26];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    uint64_t v37 = (int *)type metadata accessor for BeaconProductInfoRecord();
    uint64_t v38 = *((void *)v37 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
    {
      uint64_t v39 = sub_10000588C(&qword_10163BBB0);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v82 = v38;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v36, v31);
      v35[v37[5]] = v36[v37[5]];
      v35[v37[6]] = v36[v37[6]];
      v35[v37[7]] = v36[v37[7]];
      *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
      *(_OWORD *)&v35[v37[9]] = *(_OWORD *)&v36[v37[9]];
      uint64_t v40 = v37[10];
      uint64_t v41 = &v35[v40];
      uint64_t v42 = &v36[v40];
      *(void *)uint64_t v41 = *(void *)v42;
      v41[8] = v42[8];
      *(_OWORD *)&v35[v37[11]] = *(_OWORD *)&v36[v37[11]];
      uint64_t v43 = v37[12];
      uint64_t v44 = &v35[v43];
      uint64_t v45 = &v36[v43];
      uint64_t v46 = type metadata accessor for URL();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v84 = *(unsigned int (**)(void))(v47 + 48);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v84)(v45, 1, v46))
      {
        uint64_t v48 = sub_10000588C(&qword_101649E40);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      uint64_t v49 = v37[13];
      uint64_t v50 = &v35[v49];
      uint64_t v51 = &v36[v49];
      uint64_t v83 = v47;
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v84)(&v36[v49], 1, v46))
      {
        uint64_t v52 = sub_10000588C(&qword_101649E40);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v50, v51, v46);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v46);
      }
      *(_OWORD *)&v35[v37[14]] = *(_OWORD *)&v36[v37[14]];
      *(void *)&v35[v37[15]] = *(void *)&v36[v37[15]];
      uint64_t v53 = v37[16];
      uint64_t v54 = &v35[v53];
      uint64_t v55 = &v36[v53];
      uint64_t v56 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
      uint64_t v57 = *((void *)v56 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = sub_10000588C(&qword_101649E50);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        uint64_t v79 = v57;
        long long v59 = *((_OWORD *)v55 + 1);
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        *((_OWORD *)v54 + 1) = v59;
        *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
        *((_WORD *)v54 + 24) = *((_WORD *)v55 + 24);
        uint64_t v60 = *((void *)v55 + 8);
        *((void *)v54 + 7) = *((void *)v55 + 7);
        *((void *)v54 + 8) = v60;
        v54[72] = v55[72];
        uint64_t v61 = v56[10];
        uint64_t v62 = &v54[v61];
        __src = &v55[v61];
        if (v84())
        {
          uint64_t v63 = sub_10000588C(&qword_101649E40);
          memcpy(v62, __src, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v62, __src, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v62, 0, 1, v46);
        }
        uint64_t v64 = v56[11];
        uint64_t v65 = &v54[v64];
        __srca = &v55[v64];
        if (v84())
        {
          uint64_t v66 = sub_10000588C(&qword_101649E40);
          memcpy(v65, __srca, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v65, __srca, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v65, 0, 1, v46);
        }
        uint64_t v67 = v56[12];
        uint64_t v68 = &v54[v67];
        uint64_t v69 = &v55[v67];
        *(void *)uint64_t v68 = *(void *)v69;
        v68[8] = v69[8];
        *(_OWORD *)&v54[v56[13]] = *(_OWORD *)&v55[v56[13]];
        *(void *)&v54[v56[14]] = *(void *)&v55[v56[14]];
        *(_OWORD *)&v54[v56[15]] = *(_OWORD *)&v55[v56[15]];
        *(void *)&v54[v56[16]] = *(void *)&v55[v56[16]];
        uint64_t v70 = v56[17];
        int v71 = &v54[v70];
        uint64_t v72 = &v55[v70];
        v71[16] = v72[16];
        *(_OWORD *)int v71 = *(_OWORD *)v72;
        uint64_t v73 = v56[18];
        uint64_t v74 = &v54[v73];
        uint64_t v75 = &v55[v73];
        v74[16] = v75[16];
        *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
        (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v54, 0, 1, v56);
      }
      *(_DWORD *)&v35[v37[17]] = *(_DWORD *)&v36[v37[17]];
      *(void *)&v35[v37[18]] = *(void *)&v36[v37[18]];
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
      v76(&v35[v37[19]], &v36[v37[19]], v46);
      v76(&v35[v37[20]], &v36[v37[20]], v46);
      v76(&v35[v37[21]], &v36[v37[21]], v46);
      v76(&v35[v37[22]], &v36[v37[22]], v46);
      v76(&v35[v37[23]], &v36[v37[23]], v46);
      v76(&v35[v37[24]], &v36[v37[24]], v46);
      (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v35, 0, 1, v37);
    }
    uint64_t v77 = type metadata accessor for ProductInfoState(0);
    *(_OWORD *)&v35[*(int *)(v77 + 20)] = *(_OWORD *)&v36[*(int *)(v77 + 20)];
    goto LABEL_35;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1009653F8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10095268C((uint64_t)a1, type metadata accessor for BeaconState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v15 = (int *)type metadata accessor for SharedBeaconState(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for UUID();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v21(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[6]) = *(_OWORD *)((char *)a2 + v15[6]);
      *(_OWORD *)((char *)a1 + v15[7]) = *(_OWORD *)((char *)a2 + v15[7]);
      *(_OWORD *)((char *)a1 + v15[8]) = *(_OWORD *)((char *)a2 + v15[8]);
      *(_OWORD *)((char *)a1 + v15[9]) = *(_OWORD *)((char *)a2 + v15[9]);
      *(_OWORD *)((char *)a1 + v15[10]) = *(_OWORD *)((char *)a2 + v15[10]);
      *(void *)((char *)a1 + v15[11]) = *(void *)((char *)a2 + v15[11]);
      *(void *)((char *)a1 + v15[12]) = *(void *)((char *)a2 + v15[12]);
      *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
      *(void *)((char *)a1 + v15[14]) = *(void *)((char *)a2 + v15[14]);
      *(_OWORD *)((char *)a1 + v15[15]) = *(_OWORD *)((char *)a2 + v15[15]);
      *(void *)((char *)a1 + v15[16]) = *(void *)((char *)a2 + v15[16]);
      *(_OWORD *)((char *)a1 + v15[17]) = *(_OWORD *)((char *)a2 + v15[17]);
      *(void *)((char *)a1 + v15[18]) = *(void *)((char *)a2 + v15[18]);
      uint64_t v22 = v15[19];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v24, 1, v19))
      {
        uint64_t v25 = sub_10000588C(&qword_101638CF0);
        memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        v21(v23, v24, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      }
LABEL_36:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      *a1 = *a2;
      uint64_t v7 = (int *)type metadata accessor for OwnedBeaconState(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for StableIdentifier();
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 3)
      {
        uint64_t v26 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v26 - 8) + 32))(v9, v10, v26);
        uint64_t v27 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
        *(_OWORD *)&v9[v27[12]] = *(_OWORD *)&v10[v27[12]];
        *(_OWORD *)&v9[v27[16]] = *(_OWORD *)&v10[v27[16]];
        *(_OWORD *)&v9[v27[20]] = *(_OWORD *)&v10[v27[20]];
        v9[v27[24]] = v10[v27[24]];
        swift_storeEnumTagMultiPayload();
      }
      else if (v12 == 2)
      {
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v9, v10, v13);
        uint64_t v14 = (int *)sub_10000588C(&qword_1016555E0);
        *(_OWORD *)&v9[v14[12]] = *(_OWORD *)&v10[v14[12]];
        *(_OWORD *)&v9[v14[16]] = *(_OWORD *)&v10[v14[16]];
        *(_OWORD *)&v9[v14[20]] = *(_OWORD *)&v10[v14[20]];
        *(_WORD *)&v9[v14[24]] = *(_WORD *)&v10[v14[24]];
        *(_OWORD *)&v9[v14[28]] = *(_OWORD *)&v10[v14[28]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      *(_OWORD *)((char *)a1 + v7[6]) = *(_OWORD *)((char *)a2 + v7[6]);
      *(_OWORD *)((char *)a1 + v7[7]) = *(_OWORD *)((char *)a2 + v7[7]);
      *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
      *(_OWORD *)((char *)a1 + v7[9]) = *(_OWORD *)((char *)a2 + v7[9]);
      *(void *)((char *)a1 + v7[10]) = *(void *)((char *)a2 + v7[10]);
      *(void *)((char *)a1 + v7[11]) = *(void *)((char *)a2 + v7[11]);
      *(void *)((char *)a1 + v7[12]) = *(void *)((char *)a2 + v7[12]);
      *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)((char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *(void *)((char *)a1 + v7[15]) = *(void *)((char *)a2 + v7[15]);
      *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
      *(void *)((char *)a1 + v7[17]) = *(void *)((char *)a2 + v7[17]);
      *(void *)((char *)a1 + v7[18]) = *(void *)((char *)a2 + v7[18]);
      *(_OWORD *)((char *)a1 + v7[19]) = *(_OWORD *)((char *)a2 + v7[19]);
      *(void *)((char *)a1 + v7[20]) = *(void *)((char *)a2 + v7[20]);
      *(void *)((char *)a1 + v7[21]) = *(void *)((char *)a2 + v7[21]);
      *((unsigned char *)a1 + v7[22]) = *((unsigned char *)a2 + v7[22]);
      *((unsigned char *)a1 + v7[23]) = *((unsigned char *)a2 + v7[23]);
      uint64_t v28 = v7[24];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = type metadata accessor for UUID();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
      {
        uint64_t v33 = sub_10000588C(&qword_101638CF0);
        memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      }
      *(_WORD *)((char *)a1 + v7[25]) = *(_WORD *)((char *)a2 + v7[25]);
      uint64_t v34 = v7[26];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      uint64_t v37 = (int *)type metadata accessor for BeaconProductInfoRecord();
      uint64_t v38 = *((void *)v37 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v36, 1, v37))
      {
        uint64_t v39 = sub_10000588C(&qword_10163BBB0);
        memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v82 = v38;
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v36, v31);
        v35[v37[5]] = v36[v37[5]];
        v35[v37[6]] = v36[v37[6]];
        v35[v37[7]] = v36[v37[7]];
        *(_OWORD *)&v35[v37[8]] = *(_OWORD *)&v36[v37[8]];
        *(_OWORD *)&v35[v37[9]] = *(_OWORD *)&v36[v37[9]];
        uint64_t v40 = v37[10];
        uint64_t v41 = &v35[v40];
        uint64_t v42 = &v36[v40];
        *(void *)uint64_t v41 = *(void *)v42;
        v41[8] = v42[8];
        *(_OWORD *)&v35[v37[11]] = *(_OWORD *)&v36[v37[11]];
        uint64_t v43 = v37[12];
        uint64_t v44 = &v35[v43];
        uint64_t v45 = &v36[v43];
        uint64_t v46 = type metadata accessor for URL();
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v84 = *(unsigned int (**)(void))(v47 + 48);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v84)(v45, 1, v46))
        {
          uint64_t v48 = sub_10000588C(&qword_101649E40);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v44, v45, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        uint64_t v49 = v37[13];
        uint64_t v50 = &v35[v49];
        uint64_t v51 = &v36[v49];
        uint64_t v83 = v47;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v84)(&v36[v49], 1, v46))
        {
          uint64_t v52 = sub_10000588C(&qword_101649E40);
          memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v50, v51, v46);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v50, 0, 1, v46);
        }
        *(_OWORD *)&v35[v37[14]] = *(_OWORD *)&v36[v37[14]];
        *(void *)&v35[v37[15]] = *(void *)&v36[v37[15]];
        uint64_t v53 = v37[16];
        uint64_t v54 = &v35[v53];
        uint64_t v55 = &v36[v53];
        uint64_t v56 = (int *)type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
        uint64_t v57 = *((void *)v56 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
        {
          uint64_t v58 = sub_10000588C(&qword_101649E50);
          memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          uint64_t v79 = v57;
          long long v59 = *((_OWORD *)v55 + 1);
          *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
          *((_OWORD *)v54 + 1) = v59;
          *((_OWORD *)v54 + 2) = *((_OWORD *)v55 + 2);
          *((_WORD *)v54 + 24) = *((_WORD *)v55 + 24);
          uint64_t v60 = *((void *)v55 + 8);
          *((void *)v54 + 7) = *((void *)v55 + 7);
          *((void *)v54 + 8) = v60;
          v54[72] = v55[72];
          uint64_t v61 = v56[10];
          uint64_t v62 = &v54[v61];
          __src = &v55[v61];
          if (v84())
          {
            uint64_t v63 = sub_10000588C(&qword_101649E40);
            memcpy(v62, __src, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v62, __src, v46);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v62, 0, 1, v46);
          }
          uint64_t v64 = v56[11];
          uint64_t v65 = &v54[v64];
          __srca = &v55[v64];
          if (v84())
          {
            uint64_t v66 = sub_10000588C(&qword_101649E40);
            memcpy(v65, __srca, *(void *)(*(void *)(v66 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v83 + 32))(v65, __srca, v46);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v65, 0, 1, v46);
          }
          uint64_t v67 = v56[12];
          uint64_t v68 = &v54[v67];
          uint64_t v69 = &v55[v67];
          *(void *)uint64_t v68 = *(void *)v69;
          v68[8] = v69[8];
          *(_OWORD *)&v54[v56[13]] = *(_OWORD *)&v55[v56[13]];
          *(void *)&v54[v56[14]] = *(void *)&v55[v56[14]];
          *(_OWORD *)&v54[v56[15]] = *(_OWORD *)&v55[v56[15]];
          *(void *)&v54[v56[16]] = *(void *)&v55[v56[16]];
          uint64_t v70 = v56[17];
          int v71 = &v54[v70];
          uint64_t v72 = &v55[v70];
          v71[16] = v72[16];
          *(_OWORD *)int v71 = *(_OWORD *)v72;
          uint64_t v73 = v56[18];
          uint64_t v74 = &v54[v73];
          uint64_t v75 = &v55[v73];
          v74[16] = v75[16];
          *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
          (*(void (**)(char *, void, uint64_t, int *))(v79 + 56))(v54, 0, 1, v56);
        }
        *(_DWORD *)&v35[v37[17]] = *(_DWORD *)&v36[v37[17]];
        *(void *)&v35[v37[18]] = *(void *)&v36[v37[18]];
        uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
        v76(&v35[v37[19]], &v36[v37[19]], v46);
        v76(&v35[v37[20]], &v36[v37[20]], v46);
        v76(&v35[v37[21]], &v36[v37[21]], v46);
        v76(&v35[v37[22]], &v36[v37[22]], v46);
        v76(&v35[v37[23]], &v36[v37[23]], v46);
        v76(&v35[v37[24]], &v36[v37[24]], v46);
        (*(void (**)(char *, void, uint64_t, int *))(v82 + 56))(v35, 0, 1, v37);
      }
      uint64_t v77 = type metadata accessor for ProductInfoState(0);
      *(_OWORD *)&v35[*(int *)(v77 + 20)] = *(_OWORD *)&v36[*(int *)(v77 + 20)];
      goto LABEL_36;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100966040()
{
  uint64_t result = type metadata accessor for OwnedBeaconState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SharedBeaconState(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeWithCopy for SafeLocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SafeLocationState(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for SafeLocationState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SafeLocationState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SafeLocationState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SafeLocationState()
{
  return &type metadata for SafeLocationState;
}

uint64_t destroy for BeaconStateCapture()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s12searchpartyd18BeaconStateCaptureVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BeaconStateCapture(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BeaconStateCapture(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for BeaconStateCapture()
{
  return &type metadata for BeaconStateCapture;
}

unint64_t sub_100966438()
{
  unint64_t result = qword_101652D68;
  if (!qword_101652D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652D68);
  }
  return result;
}

unint64_t sub_10096648C()
{
  unint64_t result = qword_101652D78;
  if (!qword_101652D78)
  {
    sub_10000592C(&qword_101652D70);
    sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100955474(&qword_101652D80, (void (*)(uint64_t))type metadata accessor for BeaconState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652D78);
  }
  return result;
}

unint64_t sub_100966568()
{
  unint64_t result = qword_101652D90;
  if (!qword_101652D90)
  {
    sub_10000592C(&qword_101652D88);
    sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100966614();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652D90);
  }
  return result;
}

unint64_t sub_100966614()
{
  unint64_t result = qword_101652D98;
  if (!qword_101652D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652D98);
  }
  return result;
}

unint64_t sub_100966668()
{
  unint64_t result = qword_101652DA8;
  if (!qword_101652DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652DA8);
  }
  return result;
}

unint64_t sub_1009666BC()
{
  unint64_t result = qword_101652DB8;
  if (!qword_101652DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652DB8);
  }
  return result;
}

unint64_t sub_100966710()
{
  unint64_t result = qword_101652DC8;
  if (!qword_101652DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652DC8);
  }
  return result;
}

unint64_t sub_100966764()
{
  unint64_t result = qword_101652DD8;
  if (!qword_101652DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652DD8);
  }
  return result;
}

unint64_t sub_1009667B8()
{
  unint64_t result = qword_101652DE8;
  if (!qword_101652DE8)
  {
    sub_10000592C(&qword_101652DE0);
    sub_100955474(&qword_101652DF0, (void (*)(uint64_t))type metadata accessor for ShareState);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652DE8);
  }
  return result;
}

unint64_t sub_10096685C()
{
  unint64_t result = qword_101652E00;
  if (!qword_101652E00)
  {
    sub_10000592C(&qword_101652DF8);
    sub_1009668D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E00);
  }
  return result;
}

unint64_t sub_1009668D0()
{
  unint64_t result = qword_101652E08;
  if (!qword_101652E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E08);
  }
  return result;
}

unint64_t sub_100966924()
{
  unint64_t result = qword_101652E20;
  if (!qword_101652E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E20);
  }
  return result;
}

unint64_t sub_100966978()
{
  unint64_t result = qword_101652E28;
  if (!qword_101652E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E28);
  }
  return result;
}

unint64_t sub_1009669CC()
{
  unint64_t result = qword_101652E30;
  if (!qword_101652E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E30);
  }
  return result;
}

unint64_t sub_100966A20()
{
  unint64_t result = qword_101652E50;
  if (!qword_101652E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E50);
  }
  return result;
}

uint64_t sub_100966A74(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(a2);
    sub_100955474(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SafeLocationState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100966BD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SafeLocationState.CodingKeys()
{
  return &type metadata for SafeLocationState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SharedBeaconState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100966CD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedBeaconState.CodingKeys()
{
  return &type metadata for SharedBeaconState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for OwnedBeaconState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for OwnedBeaconState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *uint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100966E6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedBeaconState.CodingKeys()
{
  return &type metadata for OwnedBeaconState.CodingKeys;
}

ValueMetadata *type metadata accessor for ProductInfoState.CodingKeys()
{
  return &type metadata for ProductInfoState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ShareState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100966F84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShareState.CodingKeys()
{
  return &type metadata for ShareState.CodingKeys;
}

ValueMetadata *type metadata accessor for ObservationState.CodingKeys()
{
  return &type metadata for ObservationState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BeaconStateCapture.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100967098);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconStateCapture.CodingKeys()
{
  return &type metadata for BeaconStateCapture.CodingKeys;
}

ValueMetadata *type metadata accessor for SharedBeaconGroupState()
{
  return &type metadata for SharedBeaconGroupState;
}

uint64_t destroy for OwnedBeaconGroupState()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OwnedBeaconGroupState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for OwnedBeaconGroupState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for OwnedBeaconGroupState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for OwnedBeaconGroupState(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OwnedBeaconGroupState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedBeaconGroupState()
{
  return &type metadata for OwnedBeaconGroupState;
}

unint64_t sub_100967384()
{
  unint64_t result = qword_101652E58;
  if (!qword_101652E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E58);
  }
  return result;
}

unint64_t sub_1009673DC()
{
  unint64_t result = qword_101652E60;
  if (!qword_101652E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E60);
  }
  return result;
}

unint64_t sub_100967434()
{
  unint64_t result = qword_101652E68;
  if (!qword_101652E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E68);
  }
  return result;
}

unint64_t sub_10096748C()
{
  unint64_t result = qword_101652E70;
  if (!qword_101652E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E70);
  }
  return result;
}

unint64_t sub_1009674E4()
{
  unint64_t result = qword_101652E78;
  if (!qword_101652E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E78);
  }
  return result;
}

unint64_t sub_10096753C()
{
  unint64_t result = qword_101652E80;
  if (!qword_101652E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E80);
  }
  return result;
}

unint64_t sub_100967594()
{
  unint64_t result = qword_101652E88;
  if (!qword_101652E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E88);
  }
  return result;
}

unint64_t sub_1009675EC()
{
  unint64_t result = qword_101652E90;
  if (!qword_101652E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E90);
  }
  return result;
}

unint64_t sub_100967644()
{
  unint64_t result = qword_101652E98;
  if (!qword_101652E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652E98);
  }
  return result;
}

unint64_t sub_10096769C()
{
  unint64_t result = qword_101652EA0;
  if (!qword_101652EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EA0);
  }
  return result;
}

unint64_t sub_1009676F4()
{
  unint64_t result = qword_101652EA8;
  if (!qword_101652EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EA8);
  }
  return result;
}

unint64_t sub_10096774C()
{
  unint64_t result = qword_101652EB0;
  if (!qword_101652EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EB0);
  }
  return result;
}

unint64_t sub_1009677A4()
{
  unint64_t result = qword_101652EB8;
  if (!qword_101652EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EB8);
  }
  return result;
}

unint64_t sub_1009677FC()
{
  unint64_t result = qword_101652EC0;
  if (!qword_101652EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EC0);
  }
  return result;
}

unint64_t sub_100967854()
{
  unint64_t result = qword_101652EC8;
  if (!qword_101652EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EC8);
  }
  return result;
}

unint64_t sub_1009678AC()
{
  unint64_t result = qword_101652ED0;
  if (!qword_101652ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652ED0);
  }
  return result;
}

unint64_t sub_100967904()
{
  unint64_t result = qword_101652ED8;
  if (!qword_101652ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652ED8);
  }
  return result;
}

unint64_t sub_10096795C()
{
  unint64_t result = qword_101652EE0;
  if (!qword_101652EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EE0);
  }
  return result;
}

unint64_t sub_1009679B4()
{
  unint64_t result = qword_101652EE8;
  if (!qword_101652EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EE8);
  }
  return result;
}

unint64_t sub_100967A0C()
{
  unint64_t result = qword_101652EF0;
  if (!qword_101652EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EF0);
  }
  return result;
}

unint64_t sub_100967A64()
{
  unint64_t result = qword_101652EF8;
  if (!qword_101652EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652EF8);
  }
  return result;
}

uint64_t sub_100967AB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000010140CE60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61766F72707061 && a2 == 0xED00006574617453 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010140CE80)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100967C7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x49746375646F7270 && a2 == 0xEB000000006F666ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696C696261706163 && a2 == 0xEC00000073656974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100967DA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656C62617473 && a2 == 0xEF72656669746E65 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x44676E6972696170 && a2 == 0xEB00000000657461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6449726F646E6576 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4C79726574746162 && a2 == 0xEC0000006C657665 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001014055D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010140CD70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000010140CD90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000010140CDB0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000010140CDD0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x800000010140CDF0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x736572616873 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEC000000736E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x800000010140CE20 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000010140CE40 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x644974726170 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xEB000000006F666ELL)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 22;
    }
    else {
      return 23;
    }
  }
}

uint64_t sub_1009686C8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446572616873 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6974617269707865 && a2 == 0xEA00000000006E6FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6148656572616873 && a2 == 0xEC000000656C646ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013EE400 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001013F3650 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7079546572616873 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1009689D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6564496572616873 && a2 == 0xEF7265696669746ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E614872656E776FLL && a2 == 0xEB00000000656C64 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001013EE400 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x65566D6574737973 && a2 == 0xED00006E6F697372 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6449726F646E6576 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465747065636361 && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7079546572616873 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x7369747265766461 && a2 == 0xEF7865646E496465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x7461446572616873 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x746176726573626FLL && a2 == 0xEC000000736E6F69 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x644970756F7267 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_1009690B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657264644163616DLL && a2 == 0xEA00000000007373 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001013EEA70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x614D6E6F63616562 && a2 == 0xE900000000000070 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000010140CEC0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_100969320(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000010140CEA0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100969400(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F636165426C6C61 && a2 == 0xEA0000000000736ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000010140CD50 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x70756F72476C6C61 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100969568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365746164 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100969644()
{
  unint64_t result = qword_101652F08;
  if (!qword_101652F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F08);
  }
  return result;
}

unint64_t sub_100969698()
{
  unint64_t result = qword_101652F20;
  if (!qword_101652F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F20);
  }
  return result;
}

unint64_t sub_1009696EC()
{
  unint64_t result = qword_101651F28;
  if (!qword_101651F28)
  {
    sub_10000592C(&qword_10163BD60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101651F28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for OwnedBeaconGroupState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100969824);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedBeaconGroupState.CodingKeys()
{
  return &type metadata for OwnedBeaconGroupState.CodingKeys;
}

unsigned char *_s12searchpartyd16ProductInfoStateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100969928);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharedBeaconGroupState.CodingKeys()
{
  return &type metadata for SharedBeaconGroupState.CodingKeys;
}

unint64_t sub_100969964()
{
  unint64_t result = qword_101652F28;
  if (!qword_101652F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F28);
  }
  return result;
}

unint64_t sub_1009699BC()
{
  unint64_t result = qword_101652F30;
  if (!qword_101652F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F30);
  }
  return result;
}

unint64_t sub_100969A14()
{
  unint64_t result = qword_101652F38;
  if (!qword_101652F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F38);
  }
  return result;
}

unint64_t sub_100969A6C()
{
  unint64_t result = qword_101652F40;
  if (!qword_101652F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F40);
  }
  return result;
}

unint64_t sub_100969AC4()
{
  unint64_t result = qword_101652F48;
  if (!qword_101652F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F48);
  }
  return result;
}

unint64_t sub_100969B1C()
{
  unint64_t result = qword_101652F50;
  if (!qword_101652F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F50);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryNetworkIDResponsePayload()
{
  return &type metadata for AccessoryNetworkIDResponsePayload;
}

uint64_t sub_100969B80@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100969C30(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_100969BAC(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100969BDC();
  unint64_t result = sub_100573E28();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100969BDC()
{
  unint64_t result = qword_101652F58;
  if (!qword_101652F58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652F58);
  }
  return result;
}

uint64_t sub_100969C30(void *a1)
{
  uint64_t v3 = type metadata accessor for Endianness();
  __chkstk_darwin(v3 - 8);
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryDecoding.container()();
  uint64_t v4 = sub_1000BD078((uint64_t)v13, v14);
  uint64_t v5 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  if (!v1)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    sub_1000361E0(v5, v6);
    static Endianness.current.getter();
    sub_10006145C();
    FixedWidthInteger.init(data:ofEndianness:)();
    if (v12 != 1)
    {
      uint64_t v4 = v11;
      sub_10001CFB8(v7, v8);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      return v4;
    }
    uint64_t v4 = type metadata accessor for BinaryEncodingError();
    sub_10017986C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v9, enum case for BinaryEncodingError.encodingError(_:), v4);
    swift_willThrow();
    sub_10001CFB8(v7, v8);
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  return v4;
}

void *sub_100969E00(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_100969F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100969FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10096A090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10096A15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10096A228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10096A2F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10096A308);
}

uint64_t sub_10096A308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 0x2C) {
        return v14 - 43;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10096A418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10096A42C);
}

uint64_t sub_10096A42C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Date();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 43;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for BeaconObservation()
{
  uint64_t result = qword_101652FB8;
  if (!qword_101652FB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10096A588()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BeaconObservation.ObservationType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD5) {
    goto LABEL_17;
  }
  if (a2 + 43 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 43) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 43;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 43;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 43;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x2C;
  int v8 = v6 - 44;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BeaconObservation.ObservationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 43 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 43) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD4)
  {
    unsigned int v6 = ((a2 - 213) >> 8) + 1;
    *uint64_t result = a2 + 43;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10096A7B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 43;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconObservation.ObservationType()
{
  return &type metadata for BeaconObservation.ObservationType;
}

unint64_t sub_10096A7F0()
{
  unint64_t result = qword_101652FF8;
  if (!qword_101652FF8)
  {
    sub_10000592C(&qword_101653000);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101652FF8);
  }
  return result;
}

unint64_t sub_10096A84C(char a1)
{
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0x206465726961702ELL;
      break;
    case 2:
    case 19:
      _StringGuts.grow(_:)(35);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000020;
      break;
    case 3:
      _StringGuts.grow(_:)(34);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001FLL;
      break;
    case 4:
      _StringGuts.grow(_:)(32);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001DLL;
      break;
    case 5:
    case 15:
    case 28:
    case 35:
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001ELL;
      break;
    case 6:
    case 20:
    case 33:
    case 41:
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001BLL;
      break;
    case 7:
    case 9:
    case 14:
    case 30:
    case 32:
      _StringGuts.grow(_:)(28);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000019;
      break;
    case 8:
    case 10:
      _StringGuts.grow(_:)(26);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000017;
      break;
    case 11:
      _StringGuts.grow(_:)(31);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001CLL;
      break;
    case 12:
    case 29:
      _StringGuts.grow(_:)(27);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000018;
      break;
    case 13:
    case 22:
    case 31:
    case 42:
    case 43:
      _StringGuts.grow(_:)(29);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD00000000000001ALL;
      break;
    case 16:
    case 21:
      _StringGuts.grow(_:)(38);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000023;
      break;
    case 17:
    case 38:
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000025;
      break;
    case 18:
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000021;
      break;
    case 23:
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
      break;
    case 24:
    case 26:
    case 27:
    case 39:
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000015;
      break;
    case 25:
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000013;
      break;
    case 34:
    case 36:
      _StringGuts.grow(_:)(41);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000026;
      break;
    case 37:
      _StringGuts.grow(_:)(37);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000022;
      break;
    case 40:
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000014;
      break;
    default:
      unint64_t v4 = 0x64657461636F6C2ELL;
      break;
  }
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return v4;
}

uint64_t sub_10096B4E0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101653030);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_10096C660();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  type metadata accessor for UUID();
  sub_10096C6B4(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for BeaconObservation();
    v11[14] = 1;
    type metadata accessor for Date();
    sub_10096C6B4((unint64_t *)&unk_10163ACE0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    v11[13] = *(unsigned char *)(v3 + *(int *)(v9 + 24));
    v11[12] = 2;
    sub_1007B78EC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10096B728@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  unint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v28 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000588C(&qword_101653020);
  uint64_t v26 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  int v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for BeaconObservation();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_10096C660();
  uint64_t v30 = v8;
  uint64_t v12 = v31;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v12) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v9;
  uint64_t v31 = a1;
  uint64_t v13 = (uint64_t)v11;
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  char v35 = 0;
  sub_10096C6B4((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v16 = v28;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v17 = *(void (**)(uint64_t, char *))(v25 + 32);
  uint64_t v28 = (char *)v5;
  v17(v13, v16);
  char v34 = 1;
  sub_10096C6B4(&qword_10163ACC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v18 = v4;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v19 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v13 + *(int *)(v22 + 20), v18, v14);
  char v32 = 2;
  sub_1007B7AA0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v20 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v29);
  *(unsigned char *)(v13 + *(int *)(v19 + 24)) = v33;
  sub_1001A2590(v13, v23);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v20);
  return sub_1001A2654(v13);
}

BOOL sub_10096BBE4(char *a1, char *a2)
{
  return qword_10136FC28[*a1] == qword_10136FC28[*a2];
}

Swift::Int sub_10096BC08()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10136FC28[v1]);
  return Hasher._finalize()();
}

void sub_10096BC58()
{
  Hasher._combine(_:)(qword_10136FC28[*v0]);
}

Swift::Int sub_10096BC90()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10136FC28[v1]);
  return Hasher._finalize()();
}

uint64_t sub_10096BCDC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10096C6FC(*a1);
  *a2 = result;
  return result;
}

void sub_10096BD08(void *a1@<X8>)
{
  *a1 = qword_10136FC28[*v1];
}

BOOL sub_10096BD20(char *a1, char *a2)
{
  return qword_10136FC28[*a1] < qword_10136FC28[*a2];
}

BOOL sub_10096BD44(char *a1, char *a2)
{
  return qword_10136FC28[*a2] >= qword_10136FC28[*a1];
}

BOOL sub_10096BD68(char *a1, char *a2)
{
  return qword_10136FC28[*a1] >= qword_10136FC28[*a2];
}

BOOL sub_10096BD8C(char *a1, char *a2)
{
  return qword_10136FC28[*a2] < qword_10136FC28[*a1];
}

uint64_t sub_10096BDB0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10096BE10()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_10096BE60()
{
  return sub_10096A84C(*v0);
}

void sub_10096BE68(void *a1@<X8>)
{
  *a1 = &off_10159FC68;
}

unint64_t sub_10096BE7C()
{
  unint64_t result = qword_101653008;
  if (!qword_101653008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653008);
  }
  return result;
}

unint64_t sub_10096BED0()
{
  uint64_t v1 = 1702125924;
  if (*v0 != 1) {
    uint64_t v1 = 1701869940;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_10096BF20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10096CD84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10096BF48(uint64_t a1)
{
  unint64_t v2 = sub_10096C660();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10096BF84(uint64_t a1)
{
  unint64_t v2 = sub_10096C660();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10096BFC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10096B728(a1, a2);
}

uint64_t sub_10096BFD8(void *a1)
{
  return sub_10096B4E0(a1);
}

Swift::Int sub_10096BFF0(uint64_t a1)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_10096C6B4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  sub_10096C6B4((unint64_t *)&unk_10163ADF0, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(qword_10136FC28[*(char *)(v1 + *(int *)(a1 + 24))]);
  return Hasher._finalize()();
}

void sub_10096C0FC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for UUID();
  sub_10096C6B4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  sub_10096C6B4((unint64_t *)&unk_10163ADF0, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(qword_10136FC28[*(char *)(v2 + *(int *)(a2 + 24))]);
}

Swift::Int sub_10096C1F8(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  type metadata accessor for UUID();
  sub_10096C6B4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for Date();
  sub_10096C6B4((unint64_t *)&unk_10163ADF0, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(qword_10136FC28[*(char *)(v2 + *(int *)(a2 + 24))]);
  return Hasher._finalize()();
}

BOOL sub_10096C300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (static UUID.== infix(_:_:)() & 1) != 0
      && (static Date.== infix(_:_:)() & 1) != 0
      && qword_10136FC28[*(char *)(a1 + *(int *)(a3 + 24))] == qword_10136FC28[*(char *)(a2 + *(int *)(a3 + 24))];
}

uint64_t sub_10096C378()
{
  return sub_10096C6B4(&qword_101653010, (void (*)(uint64_t))type metadata accessor for BeaconObservation);
}

uint64_t sub_10096C3C0()
{
  return static Date.< infix(_:_:)();
}

BOOL sub_10096C3D0()
{
  return (static Date.< infix(_:_:)() & 1) == 0;
}

BOOL sub_10096C400()
{
  return (static Date.< infix(_:_:)() & 1) == 0;
}

uint64_t sub_10096C42C()
{
  return static Date.< infix(_:_:)();
}

uint64_t sub_10096C440()
{
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  uint64_t v1 = type metadata accessor for BeaconObservation();
  sub_10096C6B4(&qword_101653018, (void (*)(uint64_t))type metadata accessor for BeaconObservation);
  v2._countAndFlagsBits = CustomStringConvertible.typeDescription.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x6669746E65646920;
  v3._object = (void *)0xED0000203A726569;
  String.append(_:)(v3);
  type metadata accessor for UUID();
  sub_10096C6B4((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x203A6570797420;
  v5._object = (void *)0xE700000000000000;
  String.append(_:)(v5);
  v6._countAndFlagsBits = sub_10096A84C(*(unsigned char *)(v0 + *(int *)(v1 + 24)));
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x203A6574616420;
  v7._object = (void *)0xE700000000000000;
  String.append(_:)(v7);
  type metadata accessor for Date();
  sub_10096C6B4((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 62;
  v9._object = (void *)0xE100000000000000;
  String.append(_:)(v9);
  return 60;
}

unint64_t sub_10096C660()
{
  unint64_t result = qword_101653028;
  if (!qword_101653028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653028);
  }
  return result;
}

uint64_t sub_10096C6B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10096C6FC(uint64_t a1)
{
  if (a1 > 399)
  {
    if (a1 > 600)
    {
      if (a1 <= 699)
      {
        if (a1 == 601) {
          return 39;
        }
        if (a1 == 602) {
          return 40;
        }
      }
      else
      {
        switch(a1)
        {
          case 700:
            return 41;
          case 701:
            return 42;
          case 801:
            return 43;
        }
      }
      return 44;
    }
    else
    {
      uint64_t v2 = a1 - 400;
      uint64_t result = 1;
      switch(v2)
      {
        case 0:
          uint64_t result = 0;
          break;
        case 2:
          return result;
        case 3:
          uint64_t result = 2;
          break;
        case 5:
          uint64_t result = 3;
          break;
        case 6:
          uint64_t result = 4;
          break;
        case 7:
          uint64_t result = 5;
          break;
        case 100:
          uint64_t result = 32;
          break;
        case 101:
          uint64_t result = 33;
          break;
        case 102:
          uint64_t result = 34;
          break;
        case 103:
          uint64_t result = 35;
          break;
        case 104:
          uint64_t result = 36;
          break;
        case 105:
          uint64_t result = 37;
          break;
        case 106:
          uint64_t result = 38;
          break;
        default:
          return 44;
      }
    }
  }
  else
  {
    switch(a1)
    {
      case 2:
        uint64_t result = 6;
        break;
      case 3:
        uint64_t result = 7;
        break;
      case 4:
        uint64_t result = 8;
        break;
      case 5:
        uint64_t result = 9;
        break;
      case 6:
        uint64_t result = 14;
        break;
      case 7:
        uint64_t result = 15;
        break;
      case 8:
        uint64_t result = 16;
        break;
      case 9:
        uint64_t result = 17;
        break;
      case 10:
        uint64_t result = 18;
        break;
      case 11:
        uint64_t result = 19;
        break;
      case 16:
        uint64_t result = 10;
        break;
      case 17:
        uint64_t result = 11;
        break;
      case 18:
        uint64_t result = 12;
        break;
      case 19:
        uint64_t result = 30;
        break;
      case 20:
        uint64_t result = 31;
        break;
      case 22:
        uint64_t result = 20;
        break;
      case 23:
        uint64_t result = 21;
        break;
      case 24:
        uint64_t result = 23;
        break;
      case 25:
        uint64_t result = 24;
        break;
      case 26:
        uint64_t result = 25;
        break;
      case 27:
        uint64_t result = 26;
        break;
      case 28:
        uint64_t result = 27;
        break;
      case 29:
        uint64_t result = 28;
        break;
      case 31:
        uint64_t result = 13;
        break;
      case 32:
        uint64_t result = 29;
        break;
      case 33:
        uint64_t result = 22;
        break;
      default:
        return 44;
    }
  }
  return result;
}

unint64_t sub_10096CB24()
{
  unint64_t result = qword_101653038;
  if (!qword_101653038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653038);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BeaconObservation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10096CC44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconObservation.CodingKeys()
{
  return &type metadata for BeaconObservation.CodingKeys;
}

unint64_t sub_10096CC80()
{
  unint64_t result = qword_101653040;
  if (!qword_101653040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653040);
  }
  return result;
}

unint64_t sub_10096CCD8()
{
  unint64_t result = qword_101653048;
  if (!qword_101653048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653048);
  }
  return result;
}

unint64_t sub_10096CD30()
{
  unint64_t result = qword_101653050;
  if (!qword_101653050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653050);
  }
  return result;
}

uint64_t sub_10096CD84(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001013EE1B0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t *sub_10096CEB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    Swift::String v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    if (v9((uint64_t *)((char *)a2 + v12), 1, v7))
    {
      uint64_t v15 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v9((uint64_t *)v18, 1, v7))
    {
      uint64_t v19 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v18, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v17, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10096D16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  if (!v5(v6, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v7, 1, v4);
  if (!result)
  {
    Swift::String v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v4);
  }
  return result;
}

char *sub_10096D2D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_10096D53C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

char *sub_10096D8BC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  int v15 = &a1[v14];
  int v16 = &a2[v14];
  if (v8(v16, 1, v6))
  {
    uint64_t v17 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v15, v16, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v15, 0, 1, v6);
  }
  return a1;
}

char *sub_10096DB20(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
LABEL_12:
    uint64_t v17 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
LABEL_13:
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = v8(&a1[v18], 1, v6);
  int v22 = v8(v20, 1, v6);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v19, v20, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
    goto LABEL_18;
  }
  if (v22)
  {
LABEL_18:
    uint64_t v23 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v19, v20, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  return a1;
}

uint64_t sub_10096DEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10096DEB4);
}

uint64_t sub_10096DEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10096DF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10096DF38);
}

uint64_t sub_10096DF38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DelegatedBeaconLostDates(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_1016530B0);
}

void sub_10096DFCC()
{
  sub_1000C7D80();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for DelegatedBeaconEncryptAndSignEnvelope()
{
  return &type metadata for DelegatedBeaconEncryptAndSignEnvelope;
}

uint64_t destroy for DelegatedBeaconAttributes()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for DelegatedBeaconAttributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DelegatedBeaconAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for DelegatedBeaconAttributes(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DelegatedBeaconAttributes(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DelegatedBeaconAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatedBeaconAttributes()
{
  return &type metadata for DelegatedBeaconAttributes;
}

void *sub_10096E2E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)int v10 = *(void *)v11;
    v10[8] = v11[8];
    uint64_t v12 = (char *)a1 + v9;
    uint64_t v13 = (char *)a2 + v9;
    uint64_t v14 = type metadata accessor for Date();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_10000588C((uint64_t *)&unk_10163AC90);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    unint64_t v21 = *((void *)v20 + 1);
    if (v21 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    }
    else
    {
      uint64_t v22 = *(void *)v20;
      sub_1000361E0(*(void *)v20, *((void *)v20 + 1));
      *(void *)uint64_t v19 = v22;
      *((void *)v19 + 1) = v21;
    }
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_10096E4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  uint64_t v9 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15)
  {
    uint64_t v11 = *v9;
    return sub_10001CFB8(v11, v10);
  }
  return result;
}

uint64_t sub_10096E610(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (const void *)(a2 + v8);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (uint64_t *)(a2 + v16);
  unint64_t v19 = v18[1];
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_1000361E0(*v18, v18[1]);
    *(void *)uint64_t v17 = v20;
    *(void *)(v17 + 8) = v19;
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10096E7C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  int v17 = v16(v12, 1, v14);
  int v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    uint64_t v19 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v12, v13, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v20 = a3[7];
  unint64_t v21 = (uint64_t *)(a1 + v20);
  uint64_t v22 = (uint64_t *)(a2 + v20);
  unint64_t v23 = *(void *)(a2 + v20 + 8);
  if (*(void *)(a1 + v20 + 8) >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      uint64_t v25 = *v22;
      sub_1000361E0(v25, v23);
      uint64_t v26 = *v21;
      unint64_t v27 = v21[1];
      uint64_t *v21 = v25;
      v21[1] = v23;
      sub_10001CFB8(v26, v27);
      goto LABEL_14;
    }
    sub_1001356D0((uint64_t)v21);
    goto LABEL_12;
  }
  if (v23 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)unint64_t v21 = *(_OWORD *)v22;
    goto LABEL_14;
  }
  uint64_t v24 = *v22;
  sub_1000361E0(v24, v23);
  uint64_t *v21 = v24;
  v21[1] = v23;
LABEL_14:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10096EA2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (const void *)(a2 + v8);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t sub_10096EBB0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    uint64_t v18 = sub_10000588C((uint64_t *)&unk_10163AC90);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v19 = a3[7];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  unint64_t v21 = (uint64_t *)(a2 + v19);
  unint64_t v22 = *(void *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    unint64_t v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v20;
      *uint64_t v20 = *v21;
      v20[1] = v23;
      sub_10001CFB8(v24, v22);
      goto LABEL_12;
    }
    sub_1001356D0((uint64_t)v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
LABEL_12:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_10096EDE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10096EDF4);
}

uint64_t sub_10096EDF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_10163AC90);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10096EF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10096EF30);
}

uint64_t sub_10096EF30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_10000588C((uint64_t *)&unk_10163AC90);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 24);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for DelegatedBeaconMetadata(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101653148);
}

void sub_10096F064()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000C7D80();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10096F148(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_101653190);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_1009708B4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10096F2F8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_1016531A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100970908();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v12 = *v3;
  char v11 = 0;
  sub_100037BB4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[2];
    char v11 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v12 = v3[3];
    char v11 = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_10096F500(char a1)
{
  unint64_t result = 0xD000000000000018;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x43726F7469736976;
      break;
    case 2:
      unint64_t result = 0x6C6275507473616CLL;
      break;
    case 3:
      unint64_t result = 0x656B6F54736E7061;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10096F5D4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_1016531E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_1009714B8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v12) = 0;
  type metadata accessor for UUID();
  sub_1009715D4(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for DelegatedBeaconMetadata(0);
    LOBYTE(v12) = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 2;
    type metadata accessor for Date();
    sub_1009715D4((unint64_t *)&unk_10163ACE0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v12 = *(_OWORD *)(v3 + *(int *)(v9 + 28));
    v11[15] = 3;
    sub_100037BB4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10096F87C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10000588C(&qword_1016531D8);
  uint64_t v28 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for DelegatedBeaconMetadata(0);
  __chkstk_darwin(v10);
  long long v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1009714B8();
  uint64_t v31 = v9;
  uint64_t v13 = (uint64_t)v33;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v13) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v26 = v5;
  char v33 = a1;
  uint64_t v14 = v12;
  uint64_t v16 = v28;
  uint64_t v15 = v29;
  LOBYTE(v34) = 0;
  sub_1009715D4((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
  int v17 = v30;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v19 = (uint64_t)v14;
  v18(v14, v17, v6);
  LOBYTE(v34) = 1;
  uint64_t v20 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  unint64_t v21 = &v14[v10[5]];
  *(void *)unint64_t v21 = v20;
  v21[8] = v22 & 1;
  type metadata accessor for Date();
  LOBYTE(v34) = 2;
  sub_1009715D4(&qword_10163ACC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v23 = (uint64_t)v26;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1000C69AC(v23, v19 + v10[6]);
  char v35 = 3;
  sub_100037AA0();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)(v19 + v10[7]) = v34;
  LOBYTE(v34) = 4;
  char v24 = KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v32);
  *(unsigned char *)(v19 + v10[8]) = v24 & 1;
  sub_10097150C(v19, v27, type metadata accessor for DelegatedBeaconMetadata);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
  return sub_100971574(v19, type metadata accessor for DelegatedBeaconMetadata);
}

unint64_t sub_10096FD84(unsigned __int8 a1)
{
  unint64_t result = 0xD000000000000013;
  if (a1 >= 2u) {
    return 0xD00000000000001ALL;
  }
  return result;
}

uint64_t sub_10096FDE0(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_1016531C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_10097095C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v11 = 0;
  type metadata accessor for Date();
  sub_1009715D4((unint64_t *)&unk_10163ACE0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for DelegatedBeaconLostDates(0);
    char v10 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v9 = 2;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10096FFDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  char v10 = (char *)&v27 - v9;
  __chkstk_darwin(v8);
  uint64_t v32 = (char *)&v27 - v11;
  uint64_t v33 = sub_10000588C(&qword_1016531B0);
  uint64_t v31 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DelegatedBeaconLostDates(0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  long long v34 = a1;
  sub_10001CD44(a1, v17);
  sub_10097095C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v34);
  }
  uint64_t v28 = v10;
  uint64_t v29 = v14;
  uint64_t v18 = (uint64_t)v16;
  uint64_t v27 = v7;
  type metadata accessor for Date();
  char v37 = 0;
  sub_1009715D4(&qword_10163ACC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v19 = v32;
  uint64_t v20 = v33;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v21 = (uint64_t)v19;
  uint64_t v22 = v18;
  sub_1000C69AC(v21, v18);
  char v36 = 1;
  uint64_t v23 = (uint64_t)v28;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1000C69AC(v23, v22 + *(int *)(v29 + 20));
  char v35 = 2;
  uint64_t v24 = v22;
  uint64_t v25 = (uint64_t)v27;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v20);
  sub_1000C69AC(v25, v24 + *(int *)(v29 + 24));
  sub_10097150C(v24, v30, type metadata accessor for DelegatedBeaconLostDates);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v34);
  return sub_100971574(v24, type metadata accessor for DelegatedBeaconLostDates);
}

uint64_t sub_1009703E0()
{
  uint64_t result = 0x754E6C6169726573;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x44746375646F7270;
      break;
    case 2:
      uint64_t result = 0x6C69616D65;
      break;
    case 3:
      uint64_t result = 0x656E6F6870;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100970478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1009709B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009704A0(uint64_t a1)
{
  unint64_t v2 = sub_1009708B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009704DC(uint64_t a1)
{
  unint64_t v2 = sub_1009708B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100970518@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100970B8C(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10097055C(void *a1)
{
  return sub_10096F148(a1);
}

uint64_t sub_100970574()
{
  uint64_t result = 0x727574616E676973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6574707972636E65;
      break;
    case 2:
      uint64_t result = 6775156;
      break;
    case 3:
      uint64_t result = 0x65636E6F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100970608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100970EB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100970630(uint64_t a1)
{
  unint64_t v2 = sub_100970908();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10097066C(uint64_t a1)
{
  unint64_t v2 = sub_100970908();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1009706A8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100971088(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_1009706EC(void *a1)
{
  return sub_10096F2F8(a1);
}

unint64_t sub_100970704()
{
  return sub_10096F500(*v0);
}

uint64_t sub_10097070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100971D5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100970734(uint64_t a1)
{
  unint64_t v2 = sub_1009714B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100970770(uint64_t a1)
{
  unint64_t v2 = sub_1009714B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009707AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10096F87C(a1, a2);
}

uint64_t sub_1009707C4(void *a1)
{
  return sub_10096F5D4(a1);
}

unint64_t sub_1009707DC()
{
  return sub_10096FD84(*v0);
}

uint64_t sub_1009707E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100971FC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10097080C(uint64_t a1)
{
  unint64_t v2 = sub_10097095C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100970848(uint64_t a1)
{
  unint64_t v2 = sub_10097095C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100970884@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10096FFDC(a1, a2);
}

uint64_t sub_10097089C(void *a1)
{
  return sub_10096FDE0(a1);
}

unint64_t sub_1009708B4()
{
  unint64_t result = qword_101653198;
  if (!qword_101653198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653198);
  }
  return result;
}

unint64_t sub_100970908()
{
  unint64_t result = qword_1016531A8;
  if (!qword_1016531A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016531A8);
  }
  return result;
}

unint64_t sub_10097095C()
{
  unint64_t result = qword_1016531B8;
  if (!qword_1016531B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016531B8);
  }
  return result;
}

uint64_t sub_1009709B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x44746375646F7270 && a2 == 0xEB00000000617461 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C69616D65 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6F6870 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100970B8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_1016531D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1009708B4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v19;
  a2[6] = v22;
  a2[7] = v17;
  return result;
}

uint64_t sub_100970EB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x727574616E676973 && a2 == 0xE900000000000065;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574707972636E65 && a2 == 0xED00006174614464 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6775156 && a2 == 0xE300000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65636E6F6ELL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100971088@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_1016531C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100970908();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  char v37 = 0;
  sub_100037AA0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v34 = a2;
  uint64_t v9 = v35;
  unint64_t v10 = v36;
  char v37 = 1;
  sub_1000361E0(v35, v36);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v31 = v9;
  unint64_t v32 = v10;
  char v37 = 2;
  uint64_t v11 = v35;
  unint64_t v12 = v36;
  sub_1000361E0(v35, v36);
  uint64_t v30 = 0;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  unint64_t v33 = v12;
  char v37 = 3;
  uint64_t v28 = v35;
  uint64_t v29 = v11;
  unint64_t v27 = v36;
  sub_1000361E0(v35, v36);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v35;
  uint64_t v30 = v35;
  unint64_t v26 = v36;
  uint64_t v14 = v31;
  unint64_t v15 = v32;
  sub_1000361E0(v31, v32);
  uint64_t v16 = v29;
  unint64_t v17 = v33;
  sub_1000361E0(v29, v33);
  unint64_t v18 = v27;
  uint64_t v19 = v28;
  sub_1000361E0(v28, v27);
  uint64_t v20 = v13;
  unint64_t v21 = v26;
  sub_1000361E0(v20, v26);
  sub_10001CFB8(v19, v18);
  sub_10001CFB8(v16, v17);
  sub_10001CFB8(v14, v15);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  sub_10001CFB8(v14, v15);
  sub_10001CFB8(v16, v17);
  sub_10001CFB8(v19, v18);
  uint64_t v22 = v30;
  uint64_t result = sub_10001CFB8(v30, v21);
  uint64_t v24 = v34;
  *long long v34 = v14;
  v24[1] = v15;
  void v24[2] = v16;
  v24[3] = v17;
  v24[4] = v19;
  v24[5] = v18;
  v24[6] = v22;
  v24[7] = v21;
  return result;
}

unint64_t sub_1009714B8()
{
  unint64_t result = qword_1016531E0;
  if (!qword_1016531E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016531E0);
  }
  return result;
}

uint64_t sub_10097150C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100971574(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1009715D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DelegatedBeaconMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009716E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatedBeaconMetadata.CodingKeys()
{
  return &type metadata for DelegatedBeaconMetadata.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DelegatedBeaconLostDates.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009717ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatedBeaconLostDates.CodingKeys()
{
  return &type metadata for DelegatedBeaconLostDates.CodingKeys;
}

ValueMetadata *type metadata accessor for DelegatedBeaconEncryptAndSignEnvelope.CodingKeys()
{
  return &type metadata for DelegatedBeaconEncryptAndSignEnvelope.CodingKeys;
}

unsigned char *_s12searchpartyd37DelegatedBeaconEncryptAndSignEnvelopeV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100971904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatedBeaconAttributes.CodingKeys()
{
  return &type metadata for DelegatedBeaconAttributes.CodingKeys;
}

unint64_t sub_100971940()
{
  unint64_t result = qword_1016531F0;
  if (!qword_1016531F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016531F0);
  }
  return result;
}

unint64_t sub_100971998()
{
  unint64_t result = qword_1016531F8;
  if (!qword_1016531F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016531F8);
  }
  return result;
}

unint64_t sub_1009719F0()
{
  unint64_t result = qword_101653200;
  if (!qword_101653200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653200);
  }
  return result;
}

unint64_t sub_100971A48()
{
  unint64_t result = qword_101653208;
  if (!qword_101653208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653208);
  }
  return result;
}

unint64_t sub_100971AA0()
{
  unint64_t result = qword_101653210;
  if (!qword_101653210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653210);
  }
  return result;
}

unint64_t sub_100971AF8()
{
  unint64_t result = qword_101653218;
  if (!qword_101653218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653218);
  }
  return result;
}

unint64_t sub_100971B50()
{
  unint64_t result = qword_101653220;
  if (!qword_101653220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653220);
  }
  return result;
}

unint64_t sub_100971BA8()
{
  unint64_t result = qword_101653228;
  if (!qword_101653228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653228);
  }
  return result;
}

unint64_t sub_100971C00()
{
  unint64_t result = qword_101653230;
  if (!qword_101653230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653230);
  }
  return result;
}

unint64_t sub_100971C58()
{
  unint64_t result = qword_101653238;
  if (!qword_101653238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653238);
  }
  return result;
}

unint64_t sub_100971CB0()
{
  unint64_t result = qword_101653240;
  if (!qword_101653240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653240);
  }
  return result;
}

unint64_t sub_100971D08()
{
  unint64_t result = qword_101653248;
  if (!qword_101653248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653248);
  }
  return result;
}

uint64_t sub_100971D5C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x80000001013F7EB0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x43726F7469736976 && a2 == 0xEC000000746E756FLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6275507473616CLL && a2 == 0xEF65746144687369 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656B6F54736E7061 && a2 == 0xE90000000000006ELL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001013F7EF0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100971FC0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x80000001013F4A10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001013F4A30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001013F7F10)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ItemSharingCrossAccountMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009721CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemSharingCrossAccountMessageType()
{
  return &type metadata for ItemSharingCrossAccountMessageType;
}

Swift::Int sub_100972204()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

void sub_10097224C()
{
  Hasher._combine(_:)(*v0 + 1);
}

Swift::Int sub_10097227C()
{
  int v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 + 1);
  return Hasher._finalize()();
}

uint64_t sub_1009722C0@<X0>(int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1009725A8(*a1);
  *a2 = result;
  return result;
}

void sub_1009722EC(_DWORD *a1@<X8>)
{
  *a1 = *v1 + 1;
}

void sub_1009722FC(void *a1@<X8>)
{
  *a1 = &off_1015A5778;
}

uint64_t sub_10097230C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_10097236C()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1009723BC(void *a1)
{
  a1[1] = sub_1009723F4();
  a1[2] = sub_100972448();
  unint64_t result = sub_10097249C();
  a1[3] = result;
  return result;
}

unint64_t sub_1009723F4()
{
  unint64_t result = qword_101653250;
  if (!qword_101653250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653250);
  }
  return result;
}

unint64_t sub_100972448()
{
  unint64_t result = qword_101653258;
  if (!qword_101653258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653258);
  }
  return result;
}

unint64_t sub_10097249C()
{
  unint64_t result = qword_101653260;
  if (!qword_101653260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653260);
  }
  return result;
}

unint64_t sub_1009724F4()
{
  unint64_t result = qword_101653268;
  if (!qword_101653268)
  {
    sub_10000592C(&qword_101653270);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653268);
  }
  return result;
}

unint64_t sub_100972554()
{
  unint64_t result = qword_101653278;
  if (!qword_101653278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653278);
  }
  return result;
}

uint64_t sub_1009725A8(int a1)
{
  if ((a1 - 1) >= 9) {
    return 9;
  }
  else {
    return (a1 - 1);
  }
}

void *sub_1009725BC(_WORD *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_WORD *)a2;
    uint64_t v7 = *(int *)(a3 + 24);
    long long v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for MACAddress();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10000588C((uint64_t *)&unk_1016477E0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *((unsigned char *)v4 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_10097273C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = type metadata accessor for MACAddress();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

_WORD *sub_100972810(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_1016477E0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

unsigned char *sub_100972940(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000588C((uint64_t *)&unk_1016477E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  a1[*(int *)(a3 + 28)] = a2[*(int *)(a3 + 28)];
  return a1;
}

_WORD *sub_100972ADC(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_1016477E0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

_WORD *sub_100972C0C(_WORD *a1, _WORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  long long v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10000588C((uint64_t *)&unk_1016477E0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100972DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100972DB4);
}

uint64_t sub_100972DB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 1);
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10000588C((uint64_t *)&unk_1016477E0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100972E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100972E74);
}

uint64_t sub_100972E74(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 1) = a2 + 2;
  }
  else
  {
    uint64_t v7 = sub_10000588C((uint64_t *)&unk_1016477E0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for MultipartAccessoryPairingInfo(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_1016532D8);
}

void sub_100972F3C()
{
  sub_100994AD8(319, (unint64_t *)&qword_1016498F0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

id sub_100972FFC(uint64_t *a1, char a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v61 = a3;
  uint64_t v62 = a4;
  uint64_t v57 = *v4;
  uint64_t v58 = a1;
  uint64_t v6 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v6 - 8);
  long long v59 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  uint64_t v50 = sub_10000588C(&qword_101639BB0);
  __chkstk_darwin(v50);
  uint64_t v51 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccessoryIdentityPairingLockCheckEndPoint();
  uint64_t v16 = __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v49 - v19;
  static os_log_type_t.default.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_101342130;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_10000B4CC();
  *(void *)(v21 + 32) = 0xD000000000000048;
  *(void *)(v21 + 40) = 0x800000010140D760;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v22 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v23 = type metadata accessor for FMNAccountType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v20, v22, v23);
  char v24 = a2 & 1;
  v20[*(int *)(v15 + 20)] = a2 & 1;
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v25 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 1, 1, v25);
  uint64_t v26 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v27 = swift_allocObject();
  sub_10098BBCC((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for AccessoryIdentityPairingLockCheckEndPoint);
  uint64_t v28 = sub_1004A0EC0((uint64_t)v18, v26, v27);
  uint64_t v29 = 0;
  uint64_t v30 = 0;
  if (a2) {
    goto LABEL_7;
  }
  id result = [self defaultStore];
  if (result)
  {
    unint64_t v32 = result;
    unint64_t v33 = sub_1004C6DD4();

    if (!v33 || (uint64_t v29 = sub_1004C6EF0(), v30 = v34, v33, !v30))
    {
      if (qword_101637320 != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      sub_100010324(v44, (uint64_t)qword_10170F098);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unable to retrieve masked identifier", v47, 2u);
        swift_slowDealloc();
      }

      type metadata accessor for SPPairingSessionError(0);
      uint64_t v63 = 27;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v48 = (uint64_t)v51;
      *(void *)uint64_t v51 = v64;
      swift_storeEnumTagMultiPayload();
      v61(v48);
      swift_release();
      sub_10001DAB4(v48, &qword_101639BB0);
      uint64_t v43 = (uint64_t)v20;
      return (id)sub_10098BC34(v43, (uint64_t (*)(void))type metadata accessor for AccessoryIdentityPairingLockCheckEndPoint);
    }
LABEL_7:
    sub_10000584C();
    static DispatchQoS.unspecified.getter();
    uint64_t v64 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_10000588C((uint64_t *)&unk_1016376F0);
    uint64_t v51 = v20;
    sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v55, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v56);
    uint64_t v35 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t v36 = type metadata accessor for TaskPriority();
    uint64_t v37 = (uint64_t)v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v59, 1, 1, v36);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = 0;
    *(void *)(v38 + 24) = 0;
    uint64_t v39 = v58;
    memcpy((void *)(v38 + 32), v58, 0x150uLL);
    *(void *)(v38 + 368) = v29;
    *(void *)(v38 + 376) = v30;
    uint64_t v40 = v61;
    *(void *)(v38 + 384) = v60;
    *(void *)(v38 + 392) = v35;
    uint64_t v41 = v62;
    *(void *)(v38 + 400) = v40;
    *(void *)(v38 + 408) = v41;
    *(void *)(v38 + 416) = v28;
    *(unsigned char *)(v38 + 424) = v24;
    *(void *)(v38 + 432) = v57;
    sub_100990058(v39);
    swift_retain();
    id v42 = v35;
    swift_retain();
    swift_retain();
    sub_1008F5E44(v37, (uint64_t)&unk_101653400, v38);

    swift_release();
    swift_release();
    uint64_t v43 = (uint64_t)v51;
    return (id)sub_10098BC34(v43, (uint64_t (*)(void))type metadata accessor for AccessoryIdentityPairingLockCheckEndPoint);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009738B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v4 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v51 = *(void *)(v6 - 8);
  uint64_t v52 = v6;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v49);
  uint64_t v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  os_log_type_t v46 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMNAccountType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccessoryIdentityPairingLockAckEndPoint();
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  char v24 = (char *)&v46 - v23;
  uint64_t v25 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26(v17, enum case for FMNAccountType.w2Accessory(_:), v14);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)char v24 = sub_1010E7A64((uint64_t)v17);
  v26(&v24[*(int *)(v19 + 28)], v25, v14);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v27 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
  uint64_t v28 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v29 = swift_allocObject();
  uint64_t v47 = type metadata accessor for AccessoryIdentityPairingLockAckEndPoint;
  sub_10098BBCC((uint64_t)v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AccessoryIdentityPairingLockAckEndPoint);
  uint64_t v30 = sub_1004A12D8((uint64_t)v22, v28, v29);
  sub_10000584C();
  static DispatchQoS.unspecified.getter();
  uint64_t v57 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v51 + 104))(v50, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v52);
  uint64_t v31 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v32 = type metadata accessor for TaskPriority();
  uint64_t v33 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v53, 1, 1, v32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  long long v35 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v34 + 192) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v34 + 208) = v35;
  long long v36 = *(_OWORD *)(a1 + 208);
  *(_OWORD *)(v34 + 224) = *(_OWORD *)(a1 + 192);
  *(_OWORD *)(v34 + 240) = v36;
  long long v37 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v34 + 144) = v37;
  long long v38 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v34 + 176) = v38;
  long long v39 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 80) = v39;
  long long v40 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v34 + 112) = v40;
  long long v41 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 48) = v41;
  uint64_t v42 = v55;
  *(void *)(v34 + 256) = v54;
  *(void *)(v34 + 264) = v31;
  uint64_t v43 = v56;
  *(void *)(v34 + 272) = v42;
  *(void *)(v34 + 280) = v43;
  *(void *)(v34 + 288) = v30;
  sub_10098F9F4((void *)a1);
  swift_retain();
  id v44 = v31;
  swift_retain();
  swift_retain();
  sub_1008F5E44(v33, (uint64_t)&unk_1016533E8, v34);

  swift_release();
  swift_release();
  return sub_10098BC34((uint64_t)v24, (uint64_t (*)(void))v47);
}

id sub_100973EC4(uint64_t *a1, char a2, void (*a3)(void *), uint64_t a4)
{
  int v71 = a3;
  uint64_t v72 = a4;
  uint64_t v70 = a1;
  uint64_t v66 = *v4;
  uint64_t v6 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v6 - 8);
  uint64_t v67 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v61);
  uint64_t v62 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_10000588C(&qword_10163C678);
  __chkstk_darwin(v69);
  uint64_t v13 = (unint64_t *)((char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AirPodsLEPairingLockCheckEndPoint();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v57 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v57 - v21;
  static os_log_type_t.default.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_101342130;
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 64) = sub_10000B4CC();
  *(void *)(v23 + 32) = 0xD000000000000048;
  *(void *)(v23 + 40) = 0x800000010140D690;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v25 = type metadata accessor for FMNAccountType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v22, v24, v25);
  v22[*(int *)(v17 + 20)] = a2 & 1;
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v26 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v16, 1, 1, v26);
  uint64_t v27 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v28 = swift_allocObject();
  sub_10098BBCC((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckEndPoint);
  uint64_t v29 = sub_1004A1F20((uint64_t)v20, v27, v28);
  uint64_t v30 = 0;
  uint64_t v31 = 0;
  if (a2) {
    goto LABEL_7;
  }
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v33 = result;
    uint64_t v34 = sub_1004C6DD4();

    if (!v34 || (uint64_t v30 = sub_1004C6EF0(), v31 = v35, v34, !v31))
    {
      if (qword_101637320 != -1) {
        swift_once();
      }
      uint64_t v53 = type metadata accessor for Logger();
      sub_100010324(v53, (uint64_t)qword_10170F098);
      uint64_t v54 = Logger.logObject.getter();
      os_log_type_t v55 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unable to retrieve masked identifier", v56, 2u);
        swift_slowDealloc();
      }

      type metadata accessor for SPPairingSessionError(0);
      uint64_t v44 = 27;
      goto LABEL_19;
    }
LABEL_7:
    long long v36 = v70;
    sub_10098EE00(v70);
    uint64_t v37 = sub_1009891F4(v36);
    unint64_t v39 = v38;
    sub_10098EFB0(v36);
    if (v39 >> 60 != 15)
    {
      unint64_t v57 = sub_10000584C();
      static DispatchQoS.unspecified.getter();
      uint64_t v74 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      uint64_t v69 = (uint64_t)v22;
      uint64_t v58 = v37;
      sub_10000588C((uint64_t *)&unk_1016376F0);
      int v59 = a2 & 1;
      sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v63 + 104))(v64, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v65);
      uint64_t v45 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v46 = type metadata accessor for TaskPriority();
      uint64_t v47 = (uint64_t)v67;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v67, 1, 1, v46);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      memcpy((void *)(v48 + 32), v36, 0x160uLL);
      *(void *)(v48 + 384) = v30;
      *(void *)(v48 + 392) = v31;
      uint64_t v49 = v58;
      *(void *)(v48 + 400) = v58;
      *(void *)(v48 + 408) = v39;
      *(void *)(v48 + 416) = v68;
      *(void *)(v48 + 424) = v45;
      uint64_t v50 = v72;
      *(void *)(v48 + 432) = v71;
      *(void *)(v48 + 440) = v50;
      *(void *)(v48 + 448) = v29;
      *(unsigned char *)(v48 + 456) = v59;
      *(void *)(v48 + 464) = v66;
      sub_10098EE00(v36);
      sub_100037A38(v49, v39);
      swift_retain();
      id v51 = v45;
      swift_retain();
      swift_retain();
      sub_1008F5E44(v47, (uint64_t)&unk_1016533D0, v48);

      swift_release();
      swift_release();
      sub_100037A24(v49, v39);
      uint64_t v52 = v69;
      return (id)sub_10098BC34(v52, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckEndPoint);
    }
    swift_bridgeObjectRelease();
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100010324(v40, (uint64_t)qword_10170F098);
    long long v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Unable to generate BAA payload", v43, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SPPairingSessionError(0);
    uint64_t v44 = 26;
LABEL_19:
    uint64_t v73 = v44;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    *uint64_t v13 = v74;
    swift_storeEnumTagMultiPayload();
    v71(v13);
    swift_release();
    sub_10001DAB4((uint64_t)v13, &qword_10163C678);
    uint64_t v52 = (uint64_t)v22;
    return (id)sub_10098BC34(v52, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckEndPoint);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009748A0(void *a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v61 = a2;
  uint64_t v62 = a3;
  uint64_t v57 = sub_10000588C(&qword_10163C690);
  __chkstk_darwin(v57);
  int v59 = (char **)((char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v58 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  os_log_type_t v55 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v52);
  uint64_t v53 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  id v51 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMNAccountType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AirPodsLEPairingLockAckEndPoint();
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26(v17, enum case for FMNAccountType.w2Accessory(_:), v14);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)uint64_t v24 = sub_1010E7A64((uint64_t)v17);
  v26(&v24[*(int *)(v19 + 28)], v25, v14);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v27 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
  uint64_t v28 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v29 = swift_allocObject();
  sub_10098BBCC((uint64_t)v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckEndPoint);
  uint64_t v30 = sub_1004A2338((uint64_t)v22, v28, v29);
  sub_1001F0C14(a1);
  uint64_t v31 = sub_100989D4C(a1);
  unint64_t v33 = v32;
  sub_1001F1080(a1);
  if (v33 >> 60 == 15)
  {
    uint64_t v34 = v61;
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100010324(v35, (uint64_t)qword_10170F098);
    long long v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v36, v37))
    {
      unint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v38 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Unable to generate BAA payload", v38, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for SPPairingSessionError(0);
    uint64_t v63 = 1;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v39 = (uint64_t)v59;
    *int v59 = v64;
    swift_storeEnumTagMultiPayload();
    v34(v39);
    swift_release();
    sub_10001DAB4(v39, &qword_10163C690);
  }
  else
  {
    sub_10000584C();
    int v59 = (void *)v31;
    static DispatchQoS.unspecified.getter();
    uint64_t v64 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_10000588C((uint64_t *)&unk_1016376F0);
    uint64_t v40 = a1;
    uint64_t v41 = v30;
    sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v55, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v56);
    os_log_type_t v42 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    uint64_t v43 = type metadata accessor for TaskPriority();
    uint64_t v44 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v58, 1, 1, v43);
    uint64_t v45 = (void *)swift_allocObject();
    v45[2] = 0;
    v45[3] = 0;
    memcpy(v45 + 4, v40, 0x110uLL);
    uint64_t v47 = (uint64_t)v59;
    uint64_t v46 = v60;
    v45[38] = v59;
    v45[39] = v33;
    v45[40] = v46;
    v45[41] = v42;
    uint64_t v48 = v62;
    v45[42] = v61;
    v45[43] = v48;
    v45[44] = v41;
    sub_1001F0C14(v40);
    sub_100037A38(v47, v33);
    swift_retain();
    id v49 = v42;
    swift_retain();
    swift_retain();
    sub_1008F5E44(v44, (uint64_t)&unk_1016533A8, (uint64_t)v45);

    swift_release();
    swift_release();
    sub_100037A24(v47, v33);
  }
  return sub_10098BC34((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckEndPoint);
}

id sub_1009750B0(uint64_t a1, _OWORD *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v68 = a3;
  uint64_t v65 = a2;
  uint64_t v56 = a1;
  uint64_t v5 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v66 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v63 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v59);
  uint64_t v60 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  uint64_t v58 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v57 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMNAccountType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AirPodsUnpairEndPoint();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v61 = (uint64_t *)((char *)&v54 - v21);
  uint64_t v22 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v54 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v26 = result;
    id v27 = [result aa_primaryAppleAccount];

    if (v27)
    {
      uint64_t v55 = a4;

      static os_log_type_t.default.getter();
      if (qword_101637308 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_101342130;
      sub_10001D074(v56, (uint64_t)v24, &qword_101638CF0);
      uint64_t v29 = String.init<A>(describing:)();
      uint64_t v31 = v30;
      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = sub_10000B4CC();
      *(void *)(v28 + 32) = v29;
      *(void *)(v28 + 40) = v31;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v32 = enum case for FMNAccountType.w2Accessory(_:);
      unint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
      v33(v16, enum case for FMNAccountType.w2Accessory(_:), v13);
      type metadata accessor for AccountURLComponents();
      swift_allocObject();
      uint64_t v34 = sub_1010E7A64((uint64_t)v16);
      uint64_t v35 = (uint64_t)v61;
      *uint64_t v61 = v34;
      v33((char *)(v35 + *(int *)(v17 + 20)), v32, v13);
      type metadata accessor for SearchPartyURLSessionFactory(0);
      swift_allocObject();
      uint64_t v36 = type metadata accessor for FMNMockingPreferences();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v57, 1, 1, v36);
      uint64_t v37 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
      type metadata accessor for ServerInteractionController(0);
      uint64_t v38 = swift_allocObject();
      sub_10098BBCC(v35, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
      uint64_t v39 = sub_1004A3FE0((uint64_t)v20, v37, v38);
      sub_10000584C();
      static DispatchQoS.unspecified.getter();
      uint64_t v69 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_10000588C((uint64_t *)&unk_1016376F0);
      sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v62 + 104))(v63, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v64);
      uint64_t v40 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v41 = type metadata accessor for TaskPriority();
      uint64_t v42 = (uint64_t)v66;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v66, 1, 1, v41);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = 0;
      *(void *)(v43 + 24) = 0;
      uint64_t v44 = v65;
      long long v45 = v65[3];
      *(_OWORD *)(v43 + 64) = v65[2];
      *(_OWORD *)(v43 + 80) = v45;
      *(_OWORD *)(v43 + 96) = v44[4];
      long long v46 = v44[1];
      *(_OWORD *)(v43 + 32) = *v44;
      *(_OWORD *)(v43 + 48) = v46;
      uint64_t v47 = v68;
      *(void *)(v43 + 112) = v67;
      *(void *)(v43 + 120) = v40;
      uint64_t v48 = v55;
      *(void *)(v43 + 128) = v47;
      *(void *)(v43 + 136) = v48;
      *(void *)(v43 + 144) = v39;
      sub_1004AF088((uint64_t)v44);
      swift_retain();
      id v49 = v40;
      swift_retain();
      swift_retain();
      sub_1008F5E44(v42, (uint64_t)&unk_101653320, v43);

      swift_release();
      swift_release();
      return (id)sub_10098BC34(v35, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
    }
    else
    {
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v50 = type metadata accessor for Logger();
      sub_100010324(v50, (uint64_t)qword_10170F068);
      id v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v51, v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v53 = 0;
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "iCloud not signed in: Skip pairing lock removal.", v53, 2u);
        swift_slowDealloc();
      }

      return (id)v68(0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Int sub_100975904()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 - 1);
  return Hasher._finalize()();
}

void sub_10097594C()
{
  Hasher._combine(_:)(*v0 - 1);
}

Swift::Int sub_10097597C()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 - 1);
  return Hasher._finalize()();
}

void *sub_1009759C0@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  if ((unint64_t)(*result + 1) < 3) {
    uint64_t v2 = *result + 1;
  }
  else {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1009759DC(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

uint64_t sub_1009759EC()
{
  uint64_t v1 = 0x63697373616C632ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x72656E45776F6C2ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E752ELL;
  }
}

uint64_t sub_100975A4C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100975AAC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100975AFC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100975B5C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100975BAC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100994F48();

  return RawRepresentable<>.codingKey.getter(a1, a2, v4);
}

uint64_t sub_100975C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_100994F48();

  return RawRepresentable<>.init<A>(codingKey:)(a1, a4, a2, a5, v10, a3);
}

uint64_t sub_100975C7C()
{
  uint64_t v1 = 0x6465726961702ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656B636F6C2ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E776F6E6B6E752ELL;
  }
}

uint64_t sub_100975CD8()
{
  uint64_t v1 = 0x6E776F6E6B6E752ELL;
  uint64_t v2 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  _StringGuts.grow(_:)(56);
  v5._countAndFlagsBits = 0x203A644974726170;
  v5._object = (void *)0xE800000000000000;
  String.append(_:)(v5);
  v24[15] = *v0;
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._object = (void *)0xED0000203A737574;
  v7._countAndFlagsBits = 0x617453636E797320;
  String.append(_:)(v7);
  uint64_t v8 = 0x6465726961702ELL;
  if (v0[1] != 1) {
    uint64_t v8 = 0x64656B636F6C2ELL;
  }
  if (v0[1]) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x6E776F6E6B6E752ELL;
  }
  if (v0[1]) {
    unint64_t v10 = 0xE700000000000000;
  }
  else {
    unint64_t v10 = 0xE800000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x7264644163616D20;
  v12._object = (void *)0xED0000203A737365;
  String.append(_:)(v12);
  uint64_t v13 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  sub_10001D074((uint64_t)&v0[*(int *)(v13 + 24)], (uint64_t)v4, (uint64_t *)&unk_1016477E0);
  uint64_t v14 = type metadata accessor for MACAddress();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v4, 1, v14) == 1)
  {
    sub_10001DAB4((uint64_t)v4, (uint64_t *)&unk_1016477E0);
    uint64_t v16 = (void *)0xE400000000000000;
    uint64_t v17 = 1701736302;
  }
  else
  {
    uint64_t v17 = MACAddress.description.getter();
    uint64_t v16 = v18;
    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v4, v14);
  }
  v19._countAndFlagsBits = v17;
  v19._object = v16;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0x676E697269617020;
  v20._object = (void *)0xEE00203A65707954;
  String.append(_:)(v20);
  if (v0[*(int *)(v13 + 28)])
  {
    if (v0[*(int *)(v13 + 28)] == 1)
    {
      uint64_t v21 = (void *)0xE800000000000000;
      uint64_t v1 = 0x63697373616C632ELL;
    }
    else
    {
      uint64_t v21 = (void *)0xEA00000000007967;
      uint64_t v1 = 0x72656E45776F6C2ELL;
    }
  }
  else
  {
    uint64_t v21 = (void *)0xE800000000000000;
  }
  v22._countAndFlagsBits = v1;
  v22._object = v21;
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t sub_100975FF0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101653340);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_10098BB24();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[14] = *(unsigned char *)(v3 + 1);
    v11[13] = 1;
    sub_10098BC94();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v9 = type metadata accessor for MultipartAccessoryPairingInfo(0);
    v11[12] = 2;
    type metadata accessor for MACAddress();
    sub_10098BA84(&qword_1016477B0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[11] = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    v11[10] = 3;
    sub_1004DEBC0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100976230@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_1016477E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101653328);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_10098BB24();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v20;
  char v27 = 0;
  uint64_t v15 = (uint64_t)v12;
  char *v12 = KeyedDecodingContainer.decode(_:forKey:)();
  char v25 = 1;
  sub_10098BB78();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v12[1] = v26;
  type metadata accessor for MACAddress();
  char v24 = 2;
  sub_10098BA84(&qword_10163E568, (void (*)(uint64_t))&type metadata accessor for MACAddress);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1005F4F18(v13, (uint64_t)&v12[*(int *)(v10 + 24)]);
  char v22 = 3;
  sub_1004DEB6C();
  uint64_t v16 = v21;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v16);
  *(unsigned char *)(v15 + *(int *)(v10 + 28)) = v23;
  sub_10098BBCC(v15, v19, type metadata accessor for MultipartAccessoryPairingInfo);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  return sub_10098BC34(v15, type metadata accessor for MultipartAccessoryPairingInfo);
}

uint64_t sub_1009765AC()
{
  uint64_t result = 0x644974726170;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x74617453636E7973;
      break;
    case 2:
      uint64_t result = 0x657264644163616DLL;
      break;
    case 3:
      uint64_t result = 0x54676E6972696170;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10097664C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10098BFD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100976674(uint64_t a1)
{
  unint64_t v2 = sub_10098BB24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009766B0(uint64_t a1)
{
  unint64_t v2 = sub_10098BB24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009766EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100976230(a1, a2);
}

uint64_t sub_100976704(void *a1)
{
  return sub_100975FF0(a1);
}

uint64_t sub_100976720@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unsigned __int8 a4@<W3>, unsigned char *a5@<X8>)
{
  int v8 = a4;
  *a5 = a1;
  a5[1] = a2;
  uint64_t v9 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  uint64_t result = sub_1005F4F18(a3, (uint64_t)&a5[*(int *)(v9 + 24)]);
  if (v8 == 3) {
    unsigned __int8 v11 = 0;
  }
  else {
    unsigned __int8 v11 = a4;
  }
  a5[*(int *)(v9 + 28)] = v11;
  return result;
}

uint64_t sub_100976790(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101653518);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100994FF0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v12 = *v3;
  char v11 = 0;
  sub_100037BB4();
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v2)
  {
    long long v12 = v3[1];
    char v11 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    long long v12 = v3[2];
    char v11 = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
    LOBYTE(v12) = 3;
    type metadata accessor for UUID();
    sub_10098BA84(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v12) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v12) = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100976A40(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_1016534D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100994DFC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v17 = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    char v16 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v15 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v14 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = *(unsigned char *)(v3 + 64);
    char v12 = 4;
    sub_100994E50();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 72);
    v10[15] = 5;
    sub_10000588C(&qword_1016534F0);
    sub_100994EA4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100976C7C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100976CCC()
{
  uint64_t result = 1684628325;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x644970696863;
      break;
    case 2:
      uint64_t result = 0x754E6C6169726573;
      break;
    case 3:
      uint64_t result = 0x6449616E6D66;
      break;
    case 4:
      uint64_t result = 0x49746375646F7270;
      break;
    case 5:
      uint64_t result = 0x6449726F646E6576;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100976D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10098C1B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100976DB8(uint64_t a1)
{
  unint64_t v2 = sub_100994FF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100976DF4(uint64_t a1)
{
  unint64_t v2 = sub_100994FF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100976E30(void *a1)
{
  return sub_100976790(a1);
}

unint64_t sub_100976E48()
{
  unint64_t result = 0x69634572656E776FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x69684372656E776FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 1684628597;
      break;
    case 4:
      unint64_t result = 0x6F4365766F6D6572;
      break;
    case 5:
      unint64_t result = 0x73656369766564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100976F24(uint64_t a1)
{
  unint64_t v2 = sub_100994DFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100976F60(uint64_t a1)
{
  unint64_t v2 = sub_100994DFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100976F9C(void *a1)
{
  return sub_100976A40(a1);
}

void sub_100976FB4()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 setDateFormat:v5];

  Locale.init(identifier:)();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  qword_10170E740 = (uint64_t)v4;
}

uint64_t sub_100977114()
{
  uint64_t result = Data.init(stringLiteral:)();
  qword_10170E748 = result;
  unk_10170E750 = v1;
  return result;
}

uint64_t sub_100977150()
{
  uint64_t result = Data.init(stringLiteral:)();
  qword_10170E758 = result;
  unk_10170E760 = v1;
  return result;
}

uint64_t sub_10097718C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 288) = v16;
  *(void *)(v8 + 192) = v15;
  *(void *)(v8 + 200) = v17;
  *(_OWORD *)(v8 + 160) = v13;
  *(_OWORD *)(v8 + 176) = v14;
  *(void *)(v8 + 144) = a7;
  *(void *)(v8 + 152) = a8;
  *(void *)(v8 + 128) = a5;
  *(void *)(v8 + 136) = a6;
  *(void *)(v8 + 120) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 208) = v9;
  *(void *)(v8 + 216) = *(void *)(v9 - 8);
  *(void *)(v8 + 224) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 232) = v10;
  *(void *)(v8 + 240) = *(void *)(v10 - 8);
  *(void *)(v8 + 248) = swift_task_alloc();
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1009772E0, 0, 0);
}

uint64_t sub_1009772E0()
{
  unint64_t v1 = v0[19];
  uint64_t v2 = v0[18];
  uint64_t v3 = (uint64_t *)v0[15];
  uint64_t v4 = *(void *)(v0[20] + 16);
  swift_retain();
  sub_10098EE00(v3);
  sub_1000361E0(v2, v1);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10165A2E0
                                                                                     + dword_10165A2E0);
  NSString v5 = (void *)swift_task_alloc();
  v0[32] = v5;
  *NSString v5 = v0;
  v5[1] = sub_1009773CC;
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v8 = v0[16];
  uint64_t v9 = v0[17];
  uint64_t v10 = v0[15];
  return v12(v10, v8, v9, v6, v7, v4);
}

uint64_t sub_1009773CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[33] = a1;
  v4[34] = a2;
  v4[35] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009774D0, 0, 0);
}

uint64_t sub_1009774D0()
{
  uint64_t v84 = v0;
  if (v0[33])
  {
    uint64_t v80 = v0[33];
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v2 = (uint64_t **)(v0 + 15);
    unint64_t v1 = (uint64_t *)v0[15];
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170F098);
    sub_10098EE00(v1);
    sub_10098EE00(v1);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = (uint64_t *)v0[15];
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v9 = Data.hexString.getter();
      v0[14] = sub_1008FA0F0(v9, v10, &v83);
      uint64_t v2 = (uint64_t **)(v0 + 15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10098EFB0(v7);
      sub_10098EFB0(v7);
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "nonce: %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(v7);
      sub_10098EFB0(v7);
    }

    char v24 = *v2;
    sub_10098EE00(*v2);
    sub_10098EE00(v24);
    char v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = *v2;
    if (v27)
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      uint64_t v30 = Data.hexString.getter();
      v0[13] = sub_1008FA0F0(v30, v31, &v83);
      uint64_t v2 = (uint64_t **)(v0 + 15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10098EFB0(v28);
      sub_10098EFB0(v28);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "serialNumber: %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(v28);
      sub_10098EFB0(v28);
    }

    uint64_t v32 = *v2;
    sub_10098EE00(*v2);
    sub_10098EE00(v32);
    unint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.debug.getter();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = *v2;
    if (v35)
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136315138;
      uint64_t v38 = Data.hexString.getter();
      v0[12] = sub_1008FA0F0(v38, v39, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v2 = (uint64_t **)(v0 + 15);
      swift_bridgeObjectRelease();
      sub_10098EFB0(v36);
      sub_10098EFB0(v36);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "ECID: %s", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(v36);
      sub_10098EFB0(v36);
    }

    uint64_t v40 = *v2;
    sub_10098EE00(*v2);
    sub_10098EE00(v40);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.debug.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *v2;
    if (v43)
    {
      long long v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)long long v45 = 136315138;
      uint64_t v46 = Data.hexString.getter();
      v0[11] = sub_1008FA0F0(v46, v47, &v83);
      uint64_t v2 = (uint64_t **)(v0 + 15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10098EFB0(v44);
      sub_10098EFB0(v44);
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "ChipId: %s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(v44);
      sub_10098EFB0(v44);
    }

    uint64_t v48 = *v2;
    sub_10098EE00(*v2);
    sub_10098EE00(v48);
    id v49 = Logger.logObject.getter();
    os_log_type_t v50 = static os_log_type_t.debug.getter();
    BOOL v51 = os_log_type_enabled(v49, v50);
    os_log_type_t v52 = *v2;
    if (v51)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      uint64_t v54 = Data.hexString.getter();
      v0[10] = sub_1008FA0F0(v54, v55, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v2 = (uint64_t **)(v0 + 15);
      swift_bridgeObjectRelease();
      sub_10098EFB0(v52);
      sub_10098EFB0(v52);
      _os_log_impl((void *)&_mh_execute_header, v49, v50, "SeedK1: %s", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(v52);
      sub_10098EFB0(v52);
    }

    uint64_t v56 = *v2;
    sub_10098EE00(*v2);
    sub_10098EE00(v56);
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.debug.getter();
    BOOL v59 = os_log_type_enabled(v57, v58);
    uint64_t v60 = *v2;
    if (v59)
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 136315138;
      uint64_t v62 = Data.hexString.getter();
      v0[9] = sub_1008FA0F0(v62, v63, &v83);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10098EFB0(v60);
      sub_10098EFB0(v60);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "H1 (hashed C2): %s", v61, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10098EFB0(*v2);
      sub_10098EFB0(v60);
    }

    uint64_t v65 = v0[34];
    unint64_t v64 = v0[35];
    uint64_t v66 = v0[33];
    char v79 = *((unsigned char *)v0 + 288);
    uint64_t v67 = (void *)v0[24];
    uint64_t v82 = v0[25];
    uint64_t v68 = v0[22];
    uint64_t v69 = v0[23];
    uint64_t v70 = (void *)v0[21];
    uint64_t v78 = v0[20];
    int v71 = (void *)v0[15];
    swift_bridgeObjectRetain();
    sub_1000361E0(v65, v64);
    sub_1004AC47C(v80, v65, v64, 0, v67);
    sub_1001D7860(v66, v65, v64);
    uint64_t v72 = (void *)swift_allocObject();
    v72[2] = v70;
    v72[3] = v68;
    v72[4] = v69;
    id v73 = v70;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v73;
    *(void *)(v74 + 24) = v68;
    *(void *)(v74 + 32) = v69;
    *(unsigned char *)(v74 + 40) = v79;
    *(void *)(v74 + 48) = v78;
    memcpy((void *)(v74 + 56), v71, 0x160uLL);
    *(void *)(v74 + 408) = v82;
    sub_10098EE00((uint64_t *)v71);
    id v75 = v73;
    swift_retain();
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v66, v65, v64);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100010324(v11, (uint64_t)qword_10170F098);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      long long v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Could not create pairing lock request", v14, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[30];
    uint64_t v15 = v0[31];
    uint64_t v17 = v0[28];
    uint64_t v18 = v0[26];
    uint64_t v19 = v0[27];
    uint64_t v20 = v0[22];
    uint64_t v21 = v0[23];
    uint64_t v81 = v0[29];

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v20;
    *(void *)(v22 + 24) = v21;
    v0[6] = sub_10098F3C8;
    v0[7] = v22;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DE6B0;
    char v23 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v81);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v76 = (uint64_t (*)(void))v0[1];
  return v76();
}

uint64_t sub_1009780E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t *a7)
{
  id v266 = a7;
  int v263 = a5;
  uint64_t v273 = a4;
  uint64_t v274 = a3;
  uint64_t v275 = a2;
  uint64_t v272 = (uint8_t *)type metadata accessor for AirPodsLEPairingLockCheckResponse();
  __chkstk_darwin(v272);
  uint64_t v264 = (uint64_t)&v256 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v277 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v278 = *(void *)(v277 - 8);
  __chkstk_darwin(v277);
  uint64_t v276 = (char *)&v256 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v280 = v10;
  uint64_t v281 = v11;
  __chkstk_darwin(v10);
  int64_t v279 = (char *)&v256 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v13 - 8);
  Class v261 = (char *)&v256 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = type metadata accessor for Date();
  uint64_t v262 = *(void *)(v265 - 8);
  uint64_t v15 = __chkstk_darwin(v265);
  uint64_t v258 = (char *)&v256 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v257 = (char *)&v256 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v256 = (char *)&v256 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v260 = (char *)&v256 - v22;
  __chkstk_darwin(v21);
  uint64_t v259 = (char *)&v256 - v23;
  uint64_t v24 = sub_10000588C(&qword_101646100);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  Class v269 = (char *)&v256 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  Class v268 = ((char *)&v256 - v27);
  uint64_t v28 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v28 - 8);
  uint64_t v271 = (char *)&v256 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v282 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v30 = *(void *)(v282 - 8);
  uint64_t v31 = __chkstk_darwin(v282);
  unint64_t v33 = (char *)&v256 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v256 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  unint64_t v39 = (char *)&v256 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v256 - v40;
  uint64_t v42 = sub_10000588C(&qword_101646108);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v267 = (uint8_t *)&v256 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v43);
  id v270 = (char *)&v256 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  id v49 = (char *)&v256 - v48;
  __chkstk_darwin(v47);
  BOOL v51 = (char *)&v256 - v50;
  uint64_t v284 = (uint8_t *)a1;
  FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  ServerStatusCode.init(rawValue:)();
  uint64_t v52 = type metadata accessor for ServerStatusCode();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  uint64_t v283 = v51;
  if (v54(v51, 1, v52) == 1) {
    goto LABEL_2;
  }
  sub_10001D074((uint64_t)v283, (uint64_t)v49, &qword_101646108);
  uint64_t v62 = *(uint8_t **)(v53 + 88);
  int v63 = ((uint64_t (*)(char *, uint64_t))v62)(v49, v52);
  if (v63 == enum case for ServerStatusCode.success(_:))
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    uint64_t v65 = sub_100010324(v64, (uint64_t)qword_10170F098);
    uint64_t v66 = v282;
    (*(void (**)(char *, uint8_t *, uint64_t))(v30 + 16))(v41, v284, v282);
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = (uint8_t *)swift_slowAlloc();
      aBlock = (uint8_t *)swift_slowAlloc();
      id v270 = (char *)v65;
      *(_DWORD *)uint64_t v69 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v285 = sub_1008FA0F0(v70, v71, (uint64_t *)&aBlock);
      uint64_t v65 = (uint64_t)v270;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v66);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Pairing success: %{public}s", v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v66);
    }

    uint64_t v87 = v272;
    uint64_t v88 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v90 = v89;
    static String.Encoding.utf8.getter();
    uint64_t v91 = String.init(data:encoding:)();
    unint64_t v93 = v92;
    sub_10001CFB8(v88, v90);
    if (v93)
    {
      swift_bridgeObjectRetain();
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        aBlock = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v96 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1008FA0F0(v91, v93, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "response data: %s", v96, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v104 = JSONDecoder.init()();
    uint64_t v105 = swift_allocBox();
    uint64_t v107 = v106;
    uint64_t v108 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v110 = v109;
    sub_10098BA84(&qword_1016533D8, (void (*)(uint64_t))type metadata accessor for AirPodsLEPairingLockCheckResponse);
    uint64_t v282 = v104;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10001CFB8(v108, v110);
    uint64_t v111 = (uint8_t *)v268;
    FMNServerInteractionController.FMNResponseFields.metadata.getter();
    uint64_t v112 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
    uint64_t v113 = *(void *)(v112 - 8);
    if ((*(unsigned int (**)(uint8_t *, uint64_t, uint64_t))(v113 + 48))(v111, 1, v112) == 1)
    {
      sub_10001DAB4((uint64_t)v111, &qword_101646100);
    }
    else
    {
      uint64_t v129 = FMNServerInteractionController.InternalServerMetadata.dateEpoch.getter();
      uint64_t v130 = v111;
      uint64_t v131 = (uint8_t *)v129;
      char v133 = v132;
      (*(void (**)(uint8_t *, uint64_t))(v113 + 8))(v130, v112);
      if ((v133 & 1) == 0)
      {
        uint64_t v134 = Logger.logObject.getter();
        os_log_type_t v135 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v136 = 134217984;
          aBlock = v131;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "Server epoch: %lld", v136, 0xCu);
          swift_slowDealloc();
        }

        goto LABEL_76;
      }
    }
    uint64_t v137 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
    if (*(void *)(v137 + 16) && (uint64_t v138 = sub_100723FF4(1702125892, 0xE400000000000000), (v139 & 1) != 0))
    {
      Class v269 = (char *)v107;
      uint64_t v140 = (uint64_t *)(*(void *)(v137 + 56) + 16 * v138);
      uint64_t v142 = *v140;
      unint64_t v141 = v140[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v143 = Logger.logObject.getter();
      os_log_type_t v144 = static os_log_type_t.default.getter();
      BOOL v145 = os_log_type_enabled(v143, v144);
      uint64_t v284 = (uint8_t *)v142;
      if (v145)
      {
        uint64_t v271 = (char *)v105;
        uint64_t v146 = (uint8_t *)swift_slowAlloc();
        aBlock = (uint8_t *)swift_slowAlloc();
        id v270 = (char *)v65;
        *(_DWORD *)uint64_t v146 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v285 = sub_1008FA0F0(v142, v141, (uint64_t *)&aBlock);
        uint64_t v105 = (uint64_t)v271;
        uint64_t v65 = (uint64_t)v270;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "Server date: %{public}s", v146, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v167 = v262;
      uint64_t v168 = (uint64_t)v261;
      if (qword_101636E80 != -1) {
        swift_once();
      }
      uint64_t v169 = (void *)qword_10170E740;
      NSString v170 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v171 = [v169 dateFromString:v170];

      if (v171)
      {
        uint64_t v172 = v260;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v173 = *(void (**)(uint64_t, char *, uint64_t))(v167 + 32);
        uint64_t v174 = v172;
        uint64_t v175 = v265;
        v173(v168, v174, v265);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56))(v168, 0, 1, v175);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v168, 1, v175) != 1)
        {
          uint64_t v176 = v168;
          uint64_t v177 = v259;
          v173((uint64_t)v259, (char *)v176, v175);
          uint64_t v178 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
          v178(v256, v177, v175);
          v178(v257, v177, v175);
          uint64_t v179 = v258;
          v178(v258, v177, v175);
          uint64_t v180 = (uint8_t *)Logger.logObject.getter();
          os_log_type_t v181 = static os_log_type_t.default.getter();
          int v182 = v181;
          if (os_log_type_enabled((os_log_t)v180, v181))
          {
            uint64_t v183 = swift_slowAlloc();
            uint64_t v284 = (uint8_t *)swift_slowAlloc();
            aBlock = v284;
            *(_DWORD *)uint64_t v183 = 136446722;
            sub_10098BA84((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
            Class v268 = v180;
            Swift::Int v184 = v256;
            uint64_t v185 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v285 = sub_1008FA0F0(v185, v186, (uint64_t *)&aBlock);
            id v270 = (char *)v65;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            LODWORD(v267) = v182;
            uint64_t v187 = *(void (**)(char *, uint64_t))(v167 + 8);
            v187(v184, v265);
            *(_WORD *)(v183 + 12) = 2048;
            uint64_t v188 = v257;
            uint64_t v189 = Date.epoch.getter();
            v187(v188, v265);
            uint64_t v285 = v189;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v183 + 22) = 2082;
            uint64_t v262 = v183 + 24;
            uint64_t v285 = Date.epoch.getter();
            sub_100061D24();
            uint64_t v190 = FixedWidthInteger.data.getter();
            unint64_t v192 = v191;
            uint64_t v193 = v105;
            uint64_t v194 = Data.hexString.getter();
            unint64_t v196 = v195;
            unint64_t v197 = v192;
            uint64_t v65 = (uint64_t)v270;
            sub_10001CFB8(v190, v197);
            uint64_t v198 = v194;
            uint64_t v105 = v193;
            uint64_t v285 = sub_1008FA0F0(v198, v196, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            uint64_t v87 = v272;
            swift_bridgeObjectRelease();
            v187(v258, v265);
            uint64_t v180 = (uint8_t *)v268;
            _os_log_impl((void *)&_mh_execute_header, v268, (os_log_type_t)v267, "pairingEpoch: %{public}s [%lld/%{public}s]", (uint8_t *)v183, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v175 = v265;
            swift_slowDealloc();
          }
          else
          {
            uint64_t v187 = *(void (**)(char *, uint64_t))(v167 + 8);
            v187(v257, v175);
            v187(v256, v175);
            v187(v179, v175);
          }

          uint64_t v205 = v259;
          uint64_t v131 = (uint8_t *)Date.epoch.getter();
          v187(v205, v175);
          uint64_t v107 = (uint64_t)v269;
LABEL_76:
          uint64_t v271 = (char *)v105;
          *(void *)(v107 + *((int *)v87 + 14)) = v131;
          uint64_t v206 = Logger.logObject.getter();
          os_log_type_t v207 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v206, v207))
          {
            uint64_t v208 = swift_slowAlloc();
            aBlock = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v208 = 141558275;
            uint64_t v285 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v208 + 12) = 2081;
            if (v263) {
              uint64_t v209 = "ATTEST_AUTH_NOTKN";
            }
            else {
              uint64_t v209 = "ATTEST_AUTH_TOKEN";
            }
            uint64_t v285 = sub_1008FA0F0(0xD000000000000011, (unint64_t)(v209 - 32) | 0x8000000000000000, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v206, v207, "authSuffix: %{private,mask.hash}s", (uint8_t *)v208, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v210 = v264;
          sub_10098BBCC(v107, v264, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckResponse);
          uint64_t v211 = (char *)v107;
          uint64_t v212 = v266;
          sub_10098EE00(v266);
          uint64_t v213 = sub_10098C43C(v212, v210);
          unint64_t v215 = v214;
          sub_10098BC34(v210, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckResponse);
          sub_10098EFB0(v212);
          uint64_t v216 = String.utf8Data.getter();
          unint64_t v218 = v217;
          swift_bridgeObjectRelease();
          aBlock = (uint8_t *)v213;
          uint64_t v288 = v215;
          sub_1000361E0(v213, v215);
          sub_1000361E0(v216, v218);
          sub_100A42CBC(v216, v218);
          sub_10001CFB8(v216, v218);
          sub_10001CFB8(v216, v218);
          sub_10001CFB8(v213, v215);
          uint64_t v220 = (uint64_t)aBlock;
          unint64_t v219 = v288;
          swift_retain_n();
          uint64_t v221 = Logger.logObject.getter();
          os_log_type_t v222 = static os_log_type_t.debug.getter();
          int v223 = v222;
          BOOL v224 = os_log_type_enabled(v221, v222);
          id v270 = (char *)v65;
          Class v269 = v211;
          if (v224)
          {
            LODWORD(v284) = v223;
            uint64_t v225 = (uint8_t *)swift_slowAlloc();
            uint64_t v272 = (uint8_t *)swift_slowAlloc();
            aBlock = v272;
            Class v268 = v225;
            *(_DWORD *)uint64_t v225 = 136315138;
            uint64_t v267 = v225 + 4;
            swift_beginAccess();
            uint64_t v226 = v220;
            uint64_t v228 = *((void *)v211 + 8);
            unint64_t v227 = *((void *)v211 + 9);
            sub_1000361E0(v228, v227);
            unint64_t v229 = v219;
            uint64_t v230 = Data.hexString.getter();
            unint64_t v232 = v231;
            uint64_t v233 = v228;
            uint64_t v220 = v226;
            sub_10001CFB8(v233, v227);
            uint64_t v234 = v230;
            unint64_t v219 = v229;
            uint64_t v285 = sub_1008FA0F0(v234, v232, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v221, (os_log_type_t)v284, "S3: %s", (uint8_t *)v268, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          sub_1000361E0(v220, v219);
          sub_1000361E0(v220, v219);
          uint64_t v235 = Logger.logObject.getter();
          os_log_type_t v236 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v235, v236))
          {
            uint64_t v237 = (uint8_t *)swift_slowAlloc();
            aBlock = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v237 = 136315138;
            uint64_t v238 = Data.hexString.getter();
            uint64_t v285 = sub_1008FA0F0(v238, v239, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10001CFB8(v220, v219);
            sub_10001CFB8(v220, v219);
            _os_log_impl((void *)&_mh_execute_header, v235, v236, "dataForSignatureVerification: %s", v237, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_10001CFB8(v220, v219);
            sub_10001CFB8(v220, v219);
          }

          uint64_t v240 = v266[34];
          unint64_t v241 = v266[35];
          uint64_t v242 = v240;
          unint64_t v243 = v241;
          if (v241 >> 60 == 15)
          {
            if (qword_101636A98 != -1) {
              swift_once();
            }
            uint64_t v242 = qword_10170DDE0;
            unint64_t v243 = *(void *)algn_10170DDE8;
            sub_1000361E0(qword_10170DDE0, *(unint64_t *)algn_10170DDE8);
          }
          Class v244 = v269;
          swift_beginAccess();
          uint64_t v245 = *((void *)v244 + 8);
          unint64_t v246 = *((void *)v244 + 9);
          sub_100037A38(v240, v241);
          sub_1000361E0(v245, v246);
          id v247 = (id)kSecKeyAlgorithmECDSASignatureMessageX962SHA256;
          char v248 = sub_100A8C768(v242, v243, v220, v219, v245, v246, v247);
          uint64_t v284 = (uint8_t *)v219;

          sub_10001CFB8(v245, v246);
          sub_10001CFB8(v242, v243);
          static os_log_type_t.default.getter();
          if (qword_101637308 != -1) {
            swift_once();
          }
          sub_10000588C((uint64_t *)&unk_10163AD00);
          uint64_t v249 = swift_allocObject();
          *(_OWORD *)(v249 + 16) = xmmword_101342130;
          *(void *)(v249 + 56) = &type metadata for Bool;
          *(void *)(v249 + 64) = &protocol witness table for Bool;
          *(unsigned char *)(v249 + 32) = v248 & 1;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          uint64_t v250 = (void *)swift_allocObject();
          uint64_t v251 = v273;
          v250[2] = v274;
          v250[3] = v251;
          v250[4] = v271;
          uint64_t v291 = sub_10098F6AC;
          uint64_t v292 = v250;
          aBlock = (uint8_t *)_NSConcreteStackBlock;
          uint64_t v288 = 1107296256;
          uint64_t v289 = sub_1004B5480;
          uint64_t v290 = &unk_1015DE9D0;
          uint64_t v252 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          uint64_t v253 = v279;
          static DispatchQoS.unspecified.getter();
          uint64_t v286 = _swiftEmptyArrayStorage;
          sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10000588C((uint64_t *)&unk_10163F350);
          sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
          uint64_t v254 = v276;
          uint64_t v255 = v277;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          swift_release();
          _Block_release(v252);
          sub_10001CFB8(v220, (unint64_t)v284);
          (*(void (**)(char *, uint64_t))(v278 + 8))(v254, v255);
          (*(void (**)(char *, uint64_t))(v281 + 8))(v253, v280);
          goto LABEL_73;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 + 56))(v168, 1, 1, v265);
      }
      sub_10001DAB4(v168, (uint64_t *)&unk_10163AC90);
      uint64_t v199 = Logger.logObject.getter();
      os_log_type_t v200 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v199, v200))
      {
        uint64_t v201 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v201 = 0;
        _os_log_impl((void *)&_mh_execute_header, v199, v200, "Unable to parse server Date!", v201, 2u);
        swift_slowDealloc();
      }

      uint64_t v202 = swift_allocObject();
      uint64_t v203 = v273;
      *(void *)(v202 + 16) = v274;
      *(void *)(v202 + 24) = v203;
      uint64_t v291 = sub_10098F66C;
      uint64_t v292 = (void *)v202;
      aBlock = (uint8_t *)_NSConcreteStackBlock;
      uint64_t v288 = 1107296256;
      uint64_t v289 = sub_1004B5480;
      uint64_t v290 = &unk_1015DE980;
      uint64_t v204 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v153 = v279;
      static DispatchQoS.unspecified.getter();
      uint64_t v285 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v154 = v276;
      uint64_t v155 = v277;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v204);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v147 = Logger.logObject.getter();
      os_log_type_t v148 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v147, v148))
      {
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v149 = 0;
        _os_log_impl((void *)&_mh_execute_header, v147, v148, "Server response is missing Date header!", v149, 2u);
        swift_slowDealloc();
      }

      uint64_t v150 = swift_allocObject();
      uint64_t v151 = v273;
      *(void *)(v150 + 16) = v274;
      *(void *)(v150 + 24) = v151;
      uint64_t v291 = sub_10098F644;
      uint64_t v292 = (void *)v150;
      aBlock = (uint8_t *)_NSConcreteStackBlock;
      uint64_t v288 = 1107296256;
      uint64_t v289 = sub_1004B5480;
      uint64_t v290 = &unk_1015DE930;
      uint64_t v152 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v153 = v279;
      static DispatchQoS.unspecified.getter();
      uint64_t v285 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v154 = v276;
      uint64_t v155 = v277;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      swift_release();
      _Block_release(v152);
    }
    (*(void (**)(char *, uint64_t))(v278 + 8))(v154, v155);
    (*(void (**)(char *, uint64_t))(v281 + 8))(v153, v280);
LABEL_73:
    swift_release();
    goto LABEL_31;
  }
  if (v63 == enum case for ServerStatusCode.forbidden(_:))
  {
    uint64_t v272 = v62;
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v79 = type metadata accessor for Logger();
    uint64_t v80 = sub_100010324(v79, (uint64_t)qword_10170F098);
    uint64_t v81 = v282;
    (*(void (**)(char *, uint8_t *, uint64_t))(v30 + 16))(v36, v284, v282);
    uint64_t v271 = (char *)v80;
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint64_t *)swift_slowAlloc();
      Class v268 = swift_slowAlloc();
      aBlock = (uint8_t *)v268;
      id v266 = v84;
      *(_DWORD *)uint64_t v84 = 136446210;
      uint64_t v265 = (uint64_t)v84 + 4;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v285 = sub_1008FA0F0(v85, v86, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v81);
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Pairing not allowed! %{public}s", (uint8_t *)v266, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v81);
    }

    uint64_t v115 = (uint64_t)v270;
    uint64_t v116 = (uint64_t)v269;
    FMNServerInteractionController.FMNResponseFields.metadata.getter();
    uint64_t v117 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
    uint64_t v118 = *(void *)(v117 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117) == 1)
    {
      sub_10001DAB4(v116, &qword_101646100);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v115, 1, 1, v52);
    }
    else
    {
      FMNServerInteractionController.InternalServerMetadata.errorCode.getter();
      (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v116, v117);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v115, 0, 1, v52);
      uint64_t v122 = (uint64_t)v267;
      sub_10001D074(v115, (uint64_t)v267, &qword_101646108);
      int v123 = ((uint64_t (*)(uint64_t, uint64_t))v272)(v122, v52);
      if (v123 == enum case for ServerStatusCode.preconditionFailed(_:))
      {
        uint64_t v124 = Logger.logObject.getter();
        os_log_type_t v125 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v126 = 0;
          _os_log_impl((void *)&_mh_execute_header, v124, v125, "Pairing has been completed by another device", v126, 2u);
          swift_slowDealloc();
        }

        uint64_t v127 = swift_allocObject();
        uint64_t v128 = v273;
        *(void *)(v127 + 16) = v274;
        *(void *)(v127 + 24) = v128;
        uint64_t v291 = sub_10098F5CC;
        uint64_t v292 = (void *)v127;
        aBlock = (uint8_t *)_NSConcreteStackBlock;
        uint64_t v288 = 1107296256;
        uint64_t v121 = &unk_1015DE840;
        goto LABEL_59;
      }
      if (v123 == enum case for ServerStatusCode.locked(_:))
      {
        uint64_t v158 = Logger.logObject.getter();
        os_log_type_t v159 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v158, v159))
        {
          uint64_t v160 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v160 = 0;
          _os_log_impl((void *)&_mh_execute_header, v158, v159, "Pairing is pending from another device", v160, 2u);
          swift_slowDealloc();
        }

        uint64_t v161 = swift_allocObject();
        uint64_t v162 = v273;
        *(void *)(v161 + 16) = v274;
        *(void *)(v161 + 24) = v162;
        uint64_t v291 = sub_10098F5A4;
        uint64_t v292 = (void *)v161;
        aBlock = (uint8_t *)_NSConcreteStackBlock;
        uint64_t v288 = 1107296256;
        uint64_t v121 = &unk_1015DE7F0;
        goto LABEL_59;
      }
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v122, v52);
    }
    uint64_t v119 = v273;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = v274;
    *(void *)(v120 + 24) = v119;
    uint64_t v291 = sub_10098F57C;
    uint64_t v292 = (void *)v120;
    aBlock = (uint8_t *)_NSConcreteStackBlock;
    uint64_t v288 = 1107296256;
    uint64_t v121 = &unk_1015DE7A0;
LABEL_59:
    uint64_t v289 = sub_1004B5480;
    uint64_t v290 = v121;
    uint64_t v163 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v164 = v279;
    static DispatchQoS.unspecified.getter();
    uint64_t v285 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v165 = v276;
    uint64_t v166 = v277;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v163);
    (*(void (**)(char *, uint64_t))(v278 + 8))(v165, v166);
    (*(void (**)(char *, uint64_t))(v281 + 8))(v164, v280);
    swift_release();
    sub_10001DAB4(v115, &qword_101646108);
    return sub_10001DAB4((uint64_t)v283, &qword_101646108);
  }
  if (v63 == enum case for ServerStatusCode.serverConflict(_:))
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v97 = type metadata accessor for Logger();
    sub_100010324(v97, (uint64_t)qword_10170F098);
    uint64_t v98 = v282;
    (*(void (**)(char *, uint8_t *, uint64_t))(v30 + 16))(v39, v284, v282);
    uint64_t v99 = Logger.logObject.getter();
    os_log_type_t v100 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      aBlock = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v285 = sub_1008FA0F0(v102, v103, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v98);
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "Linked to another Apple ID. %{public}s", v101, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v98);
    }

    uint64_t v156 = v273;
    uint64_t v157 = swift_allocObject();
    *(void *)(v157 + 16) = v274;
    *(void *)(v157 + 24) = v156;
    uint64_t v291 = sub_10098F5F4;
    uint64_t v292 = (void *)v157;
    aBlock = (uint8_t *)_NSConcreteStackBlock;
    uint64_t v288 = 1107296256;
    uint64_t v74 = &unk_1015DE890;
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v52);
LABEL_2:
  if (qword_101637320 != -1) {
    swift_once();
  }
  uint64_t v55 = type metadata accessor for Logger();
  sub_100010324(v55, (uint64_t)qword_10170F098);
  uint64_t v56 = v282;
  (*(void (**)(char *, uint8_t *, uint64_t))(v30 + 16))(v33, v284, v282);
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v57, v58))
  {
    BOOL v59 = (uint8_t *)swift_slowAlloc();
    aBlock = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)BOOL v59 = 136446210;
    sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v285 = sub_1008FA0F0(v60, v61, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v56);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Pairing lock failed: %{public}s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v56);
  }

  uint64_t v72 = v273;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v274;
  *(void *)(v73 + 24) = v72;
  uint64_t v291 = sub_100995528;
  uint64_t v292 = (void *)v73;
  aBlock = (uint8_t *)_NSConcreteStackBlock;
  uint64_t v288 = 1107296256;
  uint64_t v74 = &unk_1015DE750;
LABEL_13:
  uint64_t v289 = sub_1004B5480;
  uint64_t v290 = v74;
  id v75 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v76 = v279;
  static DispatchQoS.unspecified.getter();
  uint64_t v285 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v77 = v276;
  uint64_t v78 = v277;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v75);
  (*(void (**)(char *, uint64_t))(v278 + 8))(v77, v78);
  (*(void (**)(char *, uint64_t))(v281 + 8))(v76, v280);
LABEL_31:
  swift_release();
  return sub_10001DAB4((uint64_t)v283, &qword_101646108);
}

uint64_t sub_10097B048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(v8 + 280) = v15;
  *(void *)(v8 + 184) = v14;
  *(void *)(v8 + 192) = v16;
  *(_OWORD *)(v8 + 168) = v13;
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 128) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 200) = v9;
  *(void *)(v8 + 208) = *(void *)(v9 - 8);
  *(void *)(v8 + 216) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 224) = v10;
  *(void *)(v8 + 232) = *(void *)(v10 - 8);
  *(void *)(v8 + 240) = swift_task_alloc();
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_10097B19C, 0, 0);
}

uint64_t sub_10097B19C()
{
  unint64_t v1 = (uint64_t *)v0[16];
  uint64_t v2 = *(void *)(v0[19] + 16);
  swift_retain();
  sub_100990058(v1);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101666DD0 + dword_101666DD0);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[31] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10097B26C;
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v6 = v0[16];
  return v8(v6, v4, v5, v2);
}

uint64_t sub_10097B26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[32] = a1;
  v4[33] = a2;
  v4[34] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_10097B370, 0, 0);
}

uint64_t sub_10097B370()
{
  os_log_type_t v95 = v0;
  if (v0[32])
  {
    uint64_t v90 = v0[32];
    if (qword_101637320 != -1) {
      swift_once();
    }
    unint64_t v1 = v0 + 15;
    unint64_t v93 = v0;
    uint64_t v3 = (uint64_t *)v0[16];
    uint64_t v2 = (uint64_t **)(v0 + 16);
    uint64_t v4 = type metadata accessor for Logger();
    sub_100010324(v4, (uint64_t)qword_10170F098);
    sub_100990058(v3);
    sub_100990058(v3);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    BOOL v7 = os_log_type_enabled(v5, v6);
    uint64_t v8 = *v2;
    if (v7)
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      uint64_t v10 = Data.hexString.getter();
      *unint64_t v1 = sub_1008FA0F0(v10, v11, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v8);
      sub_10099021C(v8);
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "nonce: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(v8);
      sub_10099021C(v8);
    }

    uint64_t v25 = *v2;
    sub_100990058(*v2);
    sub_100990058(v25);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *v2;
    if (v28)
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136315138;
      uint64_t v31 = Data.hexString.getter();
      v93[14] = sub_1008FA0F0(v31, v32, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v29);
      sub_10099021C(v29);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "serialNumber: %s", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v33 = v2;
      swift_slowDealloc();
    }
    else
    {
      unint64_t v33 = v2;
      sub_10099021C(v29);
      sub_10099021C(v29);
    }

    uint64_t v34 = *v33;
    sub_100990058(*v33);
    sub_100990058(v34);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *v33;
    if (v37)
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v40 = Data.hexString.getter();
      v93[13] = sub_1008FA0F0(v40, v41, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v38);
      sub_10099021C(v38);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "AltSerialNumber: %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v33 = v2;
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(v38);
      sub_10099021C(v38);
    }

    uint64_t v42 = *v33;
    sub_100990058(*v33);
    sub_100990058(v42);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.debug.getter();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v46 = *v33;
    if (v45)
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315138;
      uint64_t v48 = Data.hexString.getter();
      v93[12] = sub_1008FA0F0(v48, v49, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v46);
      sub_10099021C(v46);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "CSR: %s", v47, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v33 = v2;
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(v46);
      sub_10099021C(v46);
    }

    uint64_t v50 = *v33;
    sub_100990058(*v33);
    sub_100990058(v50);
    BOOL v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.debug.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = *v33;
    if (v53)
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v56 = Data.hexString.getter();
      v93[11] = sub_1008FA0F0(v56, v57, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v54);
      sub_10099021C(v54);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Certs: %s", v55, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v33 = v2;
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(*v33);
      sub_10099021C(v54);
    }

    os_log_type_t v58 = *v33;
    sub_100990058(*v33);
    sub_100990058(v58);
    BOOL v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.debug.getter();
    BOOL v61 = os_log_type_enabled(v59, v60);
    uint64_t v62 = *v33;
    if (v61)
    {
      int v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)int v63 = 136315138;
      uint64_t v64 = Data.hexString.getter();
      v93[10] = sub_1008FA0F0(v64, v65, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v62);
      sub_10099021C(v62);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "SeedK1: %s", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v33 = v2;
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(v62);
      sub_10099021C(v62);
    }

    uint64_t v66 = *v33;
    sub_100990058(*v33);
    sub_100990058(v66);
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.debug.getter();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v70 = *v33;
    uint64_t v0 = v93;
    if (v69)
    {
      unint64_t v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)unint64_t v71 = 136315138;
      uint64_t v72 = Data.hexString.getter();
      v93[9] = sub_1008FA0F0(v72, v73, &v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10099021C(v70);
      sub_10099021C(v70);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "H1 (hashed C2): %s", v71, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10099021C(*v33);
      sub_10099021C(v70);
    }

    uint64_t v75 = v93[33];
    unint64_t v74 = v93[34];
    uint64_t v76 = v93[32];
    char v89 = *((unsigned char *)v93 + 280);
    uint64_t v77 = (void *)v93[23];
    uint64_t v91 = v93[24];
    uint64_t v78 = v93[21];
    uint64_t v79 = v93[22];
    uint64_t v80 = (void *)v93[20];
    uint64_t v88 = v93[19];
    uint64_t v81 = (void *)v93[16];
    swift_bridgeObjectRetain();
    sub_1000361E0(v75, v74);
    sub_1004AC778(v90, v75, v74, 0, v77);
    sub_1001D7860(v76, v75, v74);
    uint64_t v82 = (void *)swift_allocObject();
    v82[2] = v80;
    v82[3] = v78;
    v82[4] = v79;
    id v83 = v80;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v83;
    *(void *)(v84 + 24) = v78;
    *(void *)(v84 + 32) = v79;
    *(unsigned char *)(v84 + 40) = v89;
    *(void *)(v84 + 48) = v88;
    memcpy((void *)(v84 + 56), v81, 0x150uLL);
    *(void *)(v84 + 392) = v91;
    sub_100990058((uint64_t *)v81);
    id v85 = v83;
    swift_retain();
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v76, v75, v74);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170F098);
    long long v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      char v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not create pairing lock request", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = v0[29];
    uint64_t v16 = v0[30];
    uint64_t v18 = v0[27];
    uint64_t v19 = v0[25];
    uint64_t v20 = v0[26];
    uint64_t v21 = v0[21];
    uint64_t v22 = v0[22];
    uint64_t v92 = v0[28];

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v22;
    v0[6] = sub_1009901F4;
    v0[7] = v23;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DECC8;
    uint64_t v24 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v92);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v86 = (uint64_t (*)(void))v0[1];
  return v86();
}

uint64_t sub_10097C0D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v258 = a7;
  int v256 = a5;
  uint64_t v266 = a4;
  uint64_t v267 = a3;
  uint64_t v268 = a2;
  uint64_t v265 = (int *)type metadata accessor for AirPodsSWPairingLockCheckResponse();
  __chkstk_darwin(v265);
  uint64_t v257 = (uint64_t)&v249 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v270 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v271 = *(void *)(v270 - 8);
  __chkstk_darwin(v270);
  Class v269 = (char *)&v249 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v273 = v10;
  uint64_t v274 = v11;
  __chkstk_darwin(v10);
  uint64_t v272 = (char *)&v249 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v13 - 8);
  uint64_t v253 = (char *)&v249 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v259 = (uint8_t *)type metadata accessor for Date();
  uint64_t v255 = *((void *)v259 - 1);
  uint64_t v15 = __chkstk_darwin(v259);
  uint64_t v250 = (char *)&v249 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v254 = (char *)&v249 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v249 = (char *)&v249 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v252 = (char *)&v249 - v22;
  __chkstk_darwin(v21);
  uint64_t v251 = (char *)&v249 - v23;
  uint64_t v24 = sub_10000588C(&qword_101646100);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v262 = (char *)&v249 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  os_log_t v261 = (os_log_t)((char *)&v249 - v27);
  uint64_t v28 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v28 - 8);
  uint64_t v264 = (char *)&v249 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v275 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v30 = *(void *)(v275 - 8);
  uint64_t v31 = __chkstk_darwin(v275);
  unint64_t v33 = (char *)&v249 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  os_log_type_t v36 = (char *)&v249 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  unint64_t v39 = (char *)&v249 - v38;
  __chkstk_darwin(v37);
  unint64_t v41 = (char *)&v249 - v40;
  uint64_t v42 = sub_10000588C(&qword_101646108);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v260 = (uint64_t)&v249 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __chkstk_darwin(v43);
  int v263 = (char *)&v249 - v46;
  uint64_t v47 = __chkstk_darwin(v45);
  unint64_t v49 = (char *)&v249 - v48;
  __chkstk_darwin(v47);
  BOOL v51 = (char *)&v249 - v50;
  uint64_t v277 = a1;
  FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  ServerStatusCode.init(rawValue:)();
  uint64_t v52 = type metadata accessor for ServerStatusCode();
  uint64_t v53 = *(void *)(v52 - 8);
  uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48);
  uint64_t v276 = v51;
  if (v54(v51, 1, v52) == 1) {
    goto LABEL_2;
  }
  sub_10001D074((uint64_t)v276, (uint64_t)v49, &qword_101646108);
  uint64_t v62 = *(uint64_t (**)(char *, uint64_t))(v53 + 88);
  int v63 = v62(v49, v52);
  if (v63 == enum case for ServerStatusCode.success(_:))
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    uint64_t v65 = sub_100010324(v64, (uint64_t)qword_10170F098);
    uint64_t v66 = v275;
    (*(void (**)(char *, NSObject *, uint64_t))(v30 + 16))(v41, v277, v275);
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v67, v68))
    {
      BOOL v69 = (uint8_t *)swift_slowAlloc();
      os_log_t aBlock = (os_log_t)swift_slowAlloc();
      int v263 = (char *)v65;
      *(_DWORD *)BOOL v69 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v278 = sub_1008FA0F0(v70, v71, (uint64_t *)&aBlock);
      uint64_t v65 = (uint64_t)v263;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v66);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "Pairing success: %{public}s", v69, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v41, v66);
    }

    uint64_t v87 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v89 = v88;
    static String.Encoding.utf8.getter();
    uint64_t v90 = String.init(data:encoding:)();
    unint64_t v92 = v91;
    sub_10001CFB8(v87, v89);
    unint64_t v93 = v265;
    if (v92)
    {
      swift_bridgeObjectRetain();
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        os_log_t aBlock = (os_log_t)swift_slowAlloc();
        *(_DWORD *)uint64_t v96 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v278 = sub_1008FA0F0(v90, v92, (uint64_t *)&aBlock);
        unint64_t v93 = v265;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "response data: %s", v96, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v104 = JSONDecoder.init()();
    uint64_t v275 = swift_allocBox();
    uint64_t v106 = v105;
    uint64_t v107 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v109 = v108;
    sub_10098BA84(&qword_101653408, (void (*)(uint64_t))type metadata accessor for AirPodsSWPairingLockCheckResponse);
    uint64_t v264 = (char *)v104;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10001CFB8(v107, v109);
    os_log_t v110 = v261;
    FMNServerInteractionController.FMNResponseFields.metadata.getter();
    uint64_t v111 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
    uint64_t v112 = *(void *)(v111 - 8);
    if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111) == 1)
    {
      sub_10001DAB4((uint64_t)v110, &qword_101646100);
    }
    else
    {
      uint64_t v129 = FMNServerInteractionController.InternalServerMetadata.dateEpoch.getter();
      os_log_t v130 = v110;
      os_log_t v131 = (os_log_t)v129;
      char v133 = v132;
      (*(void (**)(os_log_t, uint64_t))(v112 + 8))(v130, v111);
      if ((v133 & 1) == 0)
      {
        uint64_t v134 = Logger.logObject.getter();
        os_log_type_t v135 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v134, v135))
        {
          uint64_t v136 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v136 = 134217984;
          os_log_t aBlock = v131;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "Server epoch: %lld", v136, 0xCu);
          swift_slowDealloc();
        }

        goto LABEL_76;
      }
    }
    uint64_t v137 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
    if (*(void *)(v137 + 16) && (uint64_t v138 = sub_100723FF4(1702125892, 0xE400000000000000), (v139 & 1) != 0))
    {
      uint64_t v262 = (char *)v106;
      uint64_t v140 = (uint64_t *)(*(void *)(v137 + 56) + 16 * v138);
      uint64_t v142 = *v140;
      unint64_t v141 = v140[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      uint64_t v143 = Logger.logObject.getter();
      os_log_type_t v144 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v143, v144))
      {
        BOOL v145 = (uint8_t *)swift_slowAlloc();
        os_log_t aBlock = (os_log_t)swift_slowAlloc();
        *(_DWORD *)BOOL v145 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v278 = sub_1008FA0F0(v142, v141, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v143, v144, "Server date: %{public}s", v145, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v166 = v255;
      uint64_t v167 = v254;
      uint64_t v168 = (uint64_t)v253;
      if (qword_101636E80 != -1) {
        swift_once();
      }
      uint64_t v169 = (void *)qword_10170E740;
      NSString v170 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v171 = [v169 dateFromString:v170];

      if (v171)
      {
        uint64_t v172 = v252;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v173 = *(void (**)(uint64_t, char *, uint8_t *))(v166 + 32);
        uint64_t v174 = v172;
        uint64_t v175 = v259;
        v173(v168, v174, v259);
        (*(void (**)(uint64_t, void, uint64_t, uint8_t *))(v166 + 56))(v168, 0, 1, v175);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint8_t *))(v166 + 48))(v168, 1, v175) != 1)
        {
          uint64_t v176 = v168;
          uint64_t v177 = v251;
          v173((uint64_t)v251, (char *)v176, v175);
          uint64_t v178 = *(void (**)(char *, char *, uint8_t *))(v166 + 16);
          uint64_t v179 = v249;
          v178(v249, v177, v175);
          v178(v167, v177, v175);
          uint64_t v180 = v250;
          v178(v250, v177, v175);
          os_log_type_t v181 = Logger.logObject.getter();
          os_log_type_t v182 = static os_log_type_t.default.getter();
          int v183 = v182;
          Swift::Int v184 = v167;
          if (os_log_type_enabled(v181, v182))
          {
            uint64_t v185 = swift_slowAlloc();
            uint64_t v277 = swift_slowAlloc();
            os_log_t aBlock = v277;
            *(_DWORD *)uint64_t v185 = 136446722;
            sub_10098BA84((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
            os_log_t v261 = v181;
            uint64_t v186 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v278 = sub_1008FA0F0(v186, v187, (uint64_t *)&aBlock);
            int v263 = (char *)v65;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v188 = *(void (**)(char *, uint8_t *))(v166 + 8);
            LODWORD(v260) = v183;
            v188(v179, v259);
            *(_WORD *)(v185 + 12) = 2048;
            uint64_t v189 = Date.epoch.getter();
            v188(v184, v259);
            uint64_t v278 = v189;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v185 + 22) = 2082;
            uint64_t v255 = v185 + 24;
            uint64_t v190 = v250;
            uint64_t v278 = Date.epoch.getter();
            sub_100061D24();
            uint64_t v191 = FixedWidthInteger.data.getter();
            unint64_t v193 = v192;
            uint64_t v194 = Data.hexString.getter();
            unint64_t v196 = v195;
            unint64_t v197 = v193;
            uint64_t v65 = (uint64_t)v263;
            sub_10001CFB8(v191, v197);
            uint64_t v278 = sub_1008FA0F0(v194, v196, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v188(v190, v259);
            os_log_type_t v181 = v261;
            _os_log_impl((void *)&_mh_execute_header, v261, (os_log_type_t)v260, "pairingEpoch: %{public}s [%lld/%{public}s]", (uint8_t *)v185, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v175 = v259;
            swift_slowDealloc();
          }
          else
          {
            uint64_t v188 = *(void (**)(char *, uint8_t *))(v166 + 8);
            v188(v184, v175);
            v188(v179, v175);
            v188(v180, v175);
          }

          unint64_t v93 = v265;
          uint64_t v204 = v251;
          os_log_t v131 = (os_log_t)Date.epoch.getter();
          v188(v204, v175);
          uint64_t v106 = (uint64_t)v262;
LABEL_76:
          *(void *)(v106 + v93[11]) = v131;
          uint64_t v205 = Logger.logObject.getter();
          os_log_type_t v206 = static os_log_type_t.default.getter();
          BOOL v207 = os_log_type_enabled(v205, v206);
          uint64_t v262 = (char *)v106;
          if (v207)
          {
            uint64_t v208 = swift_slowAlloc();
            os_log_t aBlock = (os_log_t)swift_slowAlloc();
            *(_DWORD *)uint64_t v208 = 141558275;
            uint64_t v278 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v208 + 12) = 2081;
            if (v256) {
              uint64_t v209 = "ATTEST_AUTH_NOTKN";
            }
            else {
              uint64_t v209 = "ATTEST_AUTH_TOKEN";
            }
            uint64_t v278 = sub_1008FA0F0(0xD000000000000011, (unint64_t)(v209 - 32) | 0x8000000000000000, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v205, v206, "authSuffix: %{private,mask.hash}s", (uint8_t *)v208, 0x16u);
            swift_arrayDestroy();
            uint64_t v106 = (uint64_t)v262;
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v210 = v257;
          sub_10098BBCC(v106, v257, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockCheckResponse);
          uint64_t v211 = v106;
          uint64_t v212 = v258;
          sub_100990058(v258);
          uint64_t v213 = sub_10098CBDC(v212, v210);
          unint64_t v215 = v214;
          sub_10098BC34(v210, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockCheckResponse);
          sub_10099021C(v212);
          uint64_t v216 = String.utf8Data.getter();
          unint64_t v218 = v217;
          swift_bridgeObjectRelease();
          os_log_t aBlock = (os_log_t)v213;
          uint64_t v281 = v215;
          sub_1000361E0(v213, v215);
          sub_1000361E0(v216, v218);
          sub_100A42CBC(v216, v218);
          sub_10001CFB8(v216, v218);
          sub_10001CFB8(v216, v218);
          sub_10001CFB8(v213, v215);
          unint64_t v219 = v281;
          uint64_t v265 = (int *)aBlock;
          swift_retain_n();
          uint64_t v220 = Logger.logObject.getter();
          os_log_type_t v221 = static os_log_type_t.debug.getter();
          BOOL v222 = os_log_type_enabled(v220, v221);
          uint64_t v277 = v219;
          if (v222)
          {
            uint64_t v223 = swift_slowAlloc();
            os_log_t aBlock = (os_log_t)swift_slowAlloc();
            int v263 = (char *)v65;
            *(_DWORD *)uint64_t v223 = 136315138;
            os_log_t v261 = (os_log_t)(v223 + 4);
            swift_beginAccess();
            uint64_t v225 = *(void *)(v211 + 48);
            unint64_t v224 = *(void *)(v211 + 56);
            sub_1000361E0(v225, v224);
            uint64_t v226 = Data.hexString.getter();
            unint64_t v228 = v227;
            sub_10001CFB8(v225, v224);
            unint64_t v219 = (unint64_t)v277;
            uint64_t v278 = sub_1008FA0F0(v226, v228, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v220, v221, "S3: %s", (uint8_t *)v223, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          unint64_t v229 = v265;
          sub_1000361E0((uint64_t)v265, v219);
          sub_1000361E0((uint64_t)v229, v219);
          uint64_t v230 = Logger.logObject.getter();
          os_log_type_t v231 = static os_log_type_t.debug.getter();
          if (os_log_type_enabled(v230, v231))
          {
            unint64_t v232 = (uint8_t *)swift_slowAlloc();
            os_log_t aBlock = (os_log_t)swift_slowAlloc();
            *(_DWORD *)unint64_t v232 = 136315138;
            uint64_t v233 = Data.hexString.getter();
            uint64_t v278 = sub_1008FA0F0(v233, v234, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            unint64_t v229 = v265;
            swift_bridgeObjectRelease();
            sub_10001CFB8((uint64_t)v229, v219);
            sub_10001CFB8((uint64_t)v229, v219);
            _os_log_impl((void *)&_mh_execute_header, v230, v231, "dataForSignatureVerification: %s", v232, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_10001CFB8((uint64_t)v229, v219);
            sub_10001CFB8((uint64_t)v229, v219);
          }

          uint64_t v235 = v262;
          if (qword_101636E90 != -1) {
            swift_once();
          }
          uint64_t v236 = qword_10170E758;
          uint64_t v237 = unk_10170E760;
          swift_beginAccess();
          uint64_t v238 = *((void *)v235 + 6);
          unint64_t v239 = *((void *)v235 + 7);
          sub_1000361E0(v238, v239);
          uint64_t v240 = (id)kSecKeyAlgorithmECDSASignatureMessageX962SHA256;
          char v241 = sub_100A8C768(v236, v237, (uint64_t)v229, (uint64_t)v277, v238, v239, v240);

          sub_10001CFB8(v238, v239);
          static os_log_type_t.default.getter();
          if (qword_101637308 != -1) {
            swift_once();
          }
          sub_10000588C((uint64_t *)&unk_10163AD00);
          uint64_t v242 = swift_allocObject();
          *(_OWORD *)(v242 + 16) = xmmword_101342130;
          *(void *)(v242 + 56) = &type metadata for Bool;
          *(void *)(v242 + 64) = &protocol witness table for Bool;
          *(unsigned char *)(v242 + 32) = v241 & 1;
          os_log(_:dso:log:_:_:)();
          swift_bridgeObjectRelease();
          unint64_t v243 = (void *)swift_allocObject();
          uint64_t v244 = v266;
          v243[2] = v267;
          v243[3] = v244;
          v243[4] = v275;
          uint64_t v284 = sub_1009906AC;
          uint64_t v285 = v243;
          os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
          uint64_t v281 = 1107296256;
          uint64_t v282 = sub_1004B5480;
          uint64_t v283 = &unk_1015DEFE8;
          uint64_t v245 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          unint64_t v246 = v272;
          static DispatchQoS.unspecified.getter();
          int64_t v279 = _swiftEmptyArrayStorage;
          sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10000588C((uint64_t *)&unk_10163F350);
          sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
          id v247 = v269;
          uint64_t v248 = v270;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          swift_release();
          _Block_release(v245);
          sub_10001CFB8((uint64_t)v229, (unint64_t)v277);
          (*(void (**)(char *, uint64_t))(v271 + 8))(v247, v248);
          (*(void (**)(char *, uint64_t))(v274 + 8))(v246, v273);
          goto LABEL_73;
        }
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint8_t *))(v166 + 56))(v168, 1, 1, v259);
      }
      sub_10001DAB4(v168, (uint64_t *)&unk_10163AC90);
      uint64_t v198 = Logger.logObject.getter();
      os_log_type_t v199 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v198, v199))
      {
        os_log_type_t v200 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v200 = 0;
        _os_log_impl((void *)&_mh_execute_header, v198, v199, "Unable to parse server Date!", v200, 2u);
        swift_slowDealloc();
      }

      uint64_t v201 = swift_allocObject();
      uint64_t v202 = v266;
      *(void *)(v201 + 16) = v267;
      *(void *)(v201 + 24) = v202;
      uint64_t v284 = sub_10099061C;
      uint64_t v285 = (void *)v201;
      os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
      uint64_t v281 = 1107296256;
      uint64_t v282 = sub_1004B5480;
      uint64_t v283 = &unk_1015DEF98;
      uint64_t v203 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v152 = v272;
      static DispatchQoS.unspecified.getter();
      uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v153 = v269;
      uint64_t v154 = v270;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v203);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v146 = Logger.logObject.getter();
      os_log_type_t v147 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v146, v147))
      {
        os_log_type_t v148 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v148 = 0;
        _os_log_impl((void *)&_mh_execute_header, v146, v147, "Server response is missing Date header!", v148, 2u);
        swift_slowDealloc();
      }

      uint64_t v149 = swift_allocObject();
      uint64_t v150 = v266;
      *(void *)(v149 + 16) = v267;
      *(void *)(v149 + 24) = v150;
      uint64_t v284 = sub_1009905F4;
      uint64_t v285 = (void *)v149;
      os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
      uint64_t v281 = 1107296256;
      uint64_t v282 = sub_1004B5480;
      uint64_t v283 = &unk_1015DEF48;
      uint64_t v151 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v152 = v272;
      static DispatchQoS.unspecified.getter();
      uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v153 = v269;
      uint64_t v154 = v270;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      swift_release();
      _Block_release(v151);
    }
    (*(void (**)(char *, uint64_t))(v271 + 8))(v153, v154);
    (*(void (**)(char *, uint64_t))(v274 + 8))(v152, v273);
LABEL_73:
    swift_release();
    goto LABEL_31;
  }
  if (v63 == enum case for ServerStatusCode.forbidden(_:))
  {
    uint64_t v265 = (int *)v62;
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v79 = type metadata accessor for Logger();
    uint64_t v80 = sub_100010324(v79, (uint64_t)qword_10170F098);
    uint64_t v81 = v275;
    (*(void (**)(char *, NSObject *, uint64_t))(v30 + 16))(v36, v277, v275);
    uint64_t v264 = (char *)v80;
    uint64_t v82 = Logger.logObject.getter();
    os_log_type_t v83 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      os_log_t v261 = (os_log_t)swift_slowAlloc();
      os_log_t aBlock = v261;
      uint64_t v259 = (uint8_t *)v84;
      *(_DWORD *)uint64_t v84 = 136446210;
      uint64_t v258 = (uint64_t *)(v84 + 4);
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v278 = sub_1008FA0F0(v85, v86, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v81);
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "Pairing not allowed! %{public}s", v259, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v81);
    }

    uint64_t v114 = (uint64_t)v262;
    FMNServerInteractionController.FMNResponseFields.metadata.getter();
    uint64_t v115 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
    uint64_t v116 = *(void *)(v115 - 8);
    int v117 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115);
    uint64_t v118 = (uint64_t)v263;
    if (v117 == 1)
    {
      sub_10001DAB4(v114, &qword_101646100);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56))(v118, 1, 1, v52);
    }
    else
    {
      FMNServerInteractionController.InternalServerMetadata.errorCode.getter();
      (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v114, v115);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v118, 0, 1, v52);
      uint64_t v122 = v260;
      sub_10001D074(v118, v260, &qword_101646108);
      int v123 = ((uint64_t (*)(uint64_t, uint64_t))v265)(v122, v52);
      if (v123 == enum case for ServerStatusCode.preconditionFailed(_:))
      {
        uint64_t v124 = Logger.logObject.getter();
        os_log_type_t v125 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v124, v125))
        {
          uint64_t v126 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v126 = 0;
          _os_log_impl((void *)&_mh_execute_header, v124, v125, "Pairing has been completed by another device", v126, 2u);
          swift_slowDealloc();
        }

        uint64_t v127 = swift_allocObject();
        uint64_t v128 = v266;
        *(void *)(v127 + 16) = v267;
        *(void *)(v127 + 24) = v128;
        uint64_t v284 = sub_10099057C;
        uint64_t v285 = (void *)v127;
        os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
        uint64_t v281 = 1107296256;
        uint64_t v121 = &unk_1015DEE58;
        goto LABEL_59;
      }
      if (v123 == enum case for ServerStatusCode.locked(_:))
      {
        uint64_t v157 = Logger.logObject.getter();
        os_log_type_t v158 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v157, v158))
        {
          os_log_type_t v159 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v159 = 0;
          _os_log_impl((void *)&_mh_execute_header, v157, v158, "Pairing is pending from another device", v159, 2u);
          swift_slowDealloc();
        }

        uint64_t v160 = swift_allocObject();
        uint64_t v161 = v266;
        *(void *)(v160 + 16) = v267;
        *(void *)(v160 + 24) = v161;
        uint64_t v284 = sub_100990554;
        uint64_t v285 = (void *)v160;
        os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
        uint64_t v281 = 1107296256;
        uint64_t v121 = &unk_1015DEE08;
        goto LABEL_59;
      }
      (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v122, v52);
    }
    uint64_t v119 = v266;
    uint64_t v120 = swift_allocObject();
    *(void *)(v120 + 16) = v267;
    *(void *)(v120 + 24) = v119;
    uint64_t v284 = sub_10099052C;
    uint64_t v285 = (void *)v120;
    os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
    uint64_t v281 = 1107296256;
    uint64_t v121 = &unk_1015DEDB8;
LABEL_59:
    uint64_t v282 = sub_1004B5480;
    uint64_t v283 = v121;
    uint64_t v162 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v163 = v272;
    static DispatchQoS.unspecified.getter();
    uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v164 = v269;
    uint64_t v165 = v270;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v162);
    (*(void (**)(char *, uint64_t))(v271 + 8))(v164, v165);
    (*(void (**)(char *, uint64_t))(v274 + 8))(v163, v273);
    swift_release();
    sub_10001DAB4(v118, &qword_101646108);
    return sub_10001DAB4((uint64_t)v276, &qword_101646108);
  }
  if (v63 == enum case for ServerStatusCode.serverConflict(_:))
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v97 = type metadata accessor for Logger();
    sub_100010324(v97, (uint64_t)qword_10170F098);
    uint64_t v98 = v275;
    (*(void (**)(char *, NSObject *, uint64_t))(v30 + 16))(v39, v277, v275);
    uint64_t v99 = Logger.logObject.getter();
    os_log_type_t v100 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = (uint8_t *)swift_slowAlloc();
      os_log_t aBlock = (os_log_t)swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v102 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v278 = sub_1008FA0F0(v102, v103, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v98);
      _os_log_impl((void *)&_mh_execute_header, v99, v100, "Linked to another Apple ID. %{public}s", v101, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v39, v98);
    }

    uint64_t v155 = v266;
    uint64_t v156 = swift_allocObject();
    *(void *)(v156 + 16) = v267;
    *(void *)(v156 + 24) = v155;
    uint64_t v284 = sub_1009905A4;
    uint64_t v285 = (void *)v156;
    os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
    uint64_t v281 = 1107296256;
    unint64_t v74 = &unk_1015DEEA8;
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v52);
LABEL_2:
  if (qword_101637320 != -1) {
    swift_once();
  }
  uint64_t v55 = type metadata accessor for Logger();
  sub_100010324(v55, (uint64_t)qword_10170F098);
  uint64_t v56 = v275;
  (*(void (**)(char *, NSObject *, uint64_t))(v30 + 16))(v33, v277, v275);
  unint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v57, v58))
  {
    BOOL v59 = (uint8_t *)swift_slowAlloc();
    os_log_t aBlock = (os_log_t)swift_slowAlloc();
    *(_DWORD *)BOOL v59 = 136446210;
    sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v278 = sub_1008FA0F0(v60, v61, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v56);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Pairing lock failed: %{public}s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v56);
  }

  uint64_t v72 = v266;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = v267;
  *(void *)(v73 + 24) = v72;
  uint64_t v284 = sub_100995530;
  uint64_t v285 = (void *)v73;
  os_log_t aBlock = (os_log_t)_NSConcreteStackBlock;
  uint64_t v281 = 1107296256;
  unint64_t v74 = &unk_1015DED68;
LABEL_13:
  uint64_t v282 = sub_1004B5480;
  uint64_t v283 = v74;
  uint64_t v75 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v76 = v272;
  static DispatchQoS.unspecified.getter();
  uint64_t v278 = (uint64_t)_swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v77 = v269;
  uint64_t v78 = v270;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v75);
  (*(void (**)(char *, uint64_t))(v271 + 8))(v77, v78);
  (*(void (**)(char *, uint64_t))(v274 + 8))(v76, v273);
LABEL_31:
  swift_release();
  return sub_10001DAB4((uint64_t)v276, &qword_101646108);
}

id sub_10097EF98(uint64_t *a1, void (*a2)(uint64_t), uint64_t a3)
{
  unint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v53 = a1;
  uint64_t v52 = *v3;
  uint64_t v55 = sub_10000588C(&qword_101653370);
  __chkstk_darwin(v55);
  uint64_t v56 = (void *)((char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v5 - 8);
  BOOL v51 = (char *)v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v48 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  unint64_t v49 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v46);
  uint64_t v47 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  v45[1] = (char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v11 - 8);
  BOOL v59 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FMNAccountType();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AirPodsPairingLockCheckEndPoint();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = (char *)v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v45 - v21;
  static os_log_type_t.default.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_101342130;
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 64) = sub_10000B4CC();
  *(void *)(v23 + 32) = 0xD000000000000034;
  *(void *)(v23 + 40) = 0x800000010140D520;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v24 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 104);
  v25(v16, enum case for FMNAccountType.w2Accessory(_:), v13);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)uint64_t v22 = sub_1010E7A64((uint64_t)v16);
  v25(&v22[*(int *)(v17 + 20)], v24, v13);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v26 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v59, 1, 1, v26);
  uint64_t v27 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v28 = swift_allocObject();
  sub_10098BBCC((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckEndPoint);
  uint64_t v29 = sub_1004A7518((uint64_t)v20, v27, v28);
  id result = [self defaultStore];
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = sub_1004C6DD4();

    if (v32 && (uint64_t v33 = sub_1004C6EF0(), v35 = v34, v32, v35))
    {
      sub_10000584C();
      static DispatchQoS.unspecified.getter();
      unint64_t v61 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_10000588C((uint64_t *)&unk_1016376F0);
      sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v48 + 104))(v49, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v50);
      os_log_type_t v36 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v37 = type metadata accessor for TaskPriority();
      uint64_t v38 = (uint64_t)v51;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v51, 1, 1, v37);
      unint64_t v39 = (void *)swift_allocObject();
      v39[2] = 0;
      v39[3] = 0;
      uint64_t v40 = v53;
      memcpy(v39 + 4, v53, 0x140uLL);
      v39[44] = v33;
      v39[45] = v35;
      v39[46] = v54;
      v39[47] = v36;
      uint64_t v41 = v58;
      v39[48] = v57;
      v39[49] = v41;
      uint64_t v42 = v52;
      v39[50] = v29;
      v39[51] = v42;
      sub_10084E77C(v40);
      swift_retain();
      id v43 = v36;
      swift_retain();
      swift_retain();
      sub_1008F5E44(v38, (uint64_t)&unk_101653380, (uint64_t)v39);

      swift_release();
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      type metadata accessor for SPPairingSessionError(0);
      uint64_t v60 = 27;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v44 = (uint64_t)v56;
      *uint64_t v56 = v61;
      swift_storeEnumTagMultiPayload();
      v57(v44);
      swift_release();
      sub_10001DAB4(v44, &qword_101653370);
    }
    return (id)sub_10098BC34((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckEndPoint);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10097F860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 128) = v14;
  *(void *)(v8 + 136) = v15;
  *(_OWORD *)(v8 + 112) = v13;
  *(void *)(v8 + 96) = a7;
  *(void *)(v8 + 104) = a8;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 72) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 144) = v9;
  *(void *)(v8 + 152) = *(void *)(v9 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 168) = v10;
  *(void *)(v8 + 176) = *(void *)(v10 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  return _swift_task_switch(sub_10097F998, 0, 0);
}

uint64_t sub_10097F998()
{
  unint64_t v1 = (uint64_t *)v0[9];
  uint64_t v2 = *(void *)(v0[12] + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10084E77C(v1);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10164F060 + dword_10164F060);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10097FA6C;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[9];
  return v8(v6, v4, v5, v2);
}

uint64_t sub_10097FA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[25] = a1;
  v4[26] = a2;
  v4[27] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_10097FB70, 0, 0);
}

uint64_t sub_10097FB70()
{
  if (v0[25])
  {
    uint64_t v36 = v0[25];
    static os_log_type_t.debug.getter();
    if (qword_101637308 != -1) {
      swift_once();
    }
    uint64_t v44 = v0[17];
    unint64_t v45 = v0[27];
    uint64_t v37 = v0[26];
    uint64_t v38 = (void *)v0[16];
    uint64_t v41 = v0[14];
    uint64_t v42 = v0[15];
    uint64_t v39 = v0[25];
    uint64_t v40 = (void *)v0[13];
    uint64_t v43 = v0[12];
    unint64_t v1 = (void *)v0[9];
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_101342130;
    uint64_t v3 = Data.hexString.getter();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    unint64_t v6 = sub_10000B4CC();
    *(void *)(v2 + 64) = v6;
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.debug.getter();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_101342130;
    uint64_t v8 = Data.hexString.getter();
    *(void *)(v7 + 56) = &type metadata for String;
    *(void *)(v7 + 64) = v6;
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v9;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.debug.getter();
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_101342130;
    uint64_t v11 = Data.hexString.getter();
    *(void *)(v10 + 56) = &type metadata for String;
    *(void *)(v10 + 64) = v6;
    *(void *)(v10 + 32) = v11;
    *(void *)(v10 + 40) = v12;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.debug.getter();
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_101342130;
    uint64_t v14 = Data.hexString.getter();
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = v6;
    *(void *)(v13 + 32) = v14;
    *(void *)(v13 + 40) = v15;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.debug.getter();
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_101342130;
    uint64_t v17 = Data.hexString.getter();
    *(void *)(v16 + 56) = &type metadata for String;
    *(void *)(v16 + 64) = v6;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    static os_log_type_t.debug.getter();
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_101342130;
    uint64_t v20 = Data.hexString.getter();
    *(void *)(v19 + 56) = &type metadata for String;
    *(void *)(v19 + 64) = v6;
    *(void *)(v19 + 32) = v20;
    *(void *)(v19 + 40) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1000361E0(v37, v45);
    sub_1004ACA74(v36, v37, v45, 0, v38);
    sub_1001D7860(v39, v37, v45);
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v40;
    v22[3] = v41;
    v22[4] = v42;
    id v23 = v40;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v43;
    memcpy(v24 + 3, v1, 0x140uLL);
    v24[43] = v23;
    v24[44] = v41;
    v24[45] = v42;
    v24[46] = v44;
    sub_10084E77C((uint64_t *)v1);
    id v25 = v23;
    swift_retain();
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v39, v37, v45);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_101637308 != -1) {
      swift_once();
    }
    uint64_t v26 = v0[23];
    uint64_t v27 = v0[20];
    uint64_t v46 = v0[22];
    uint64_t v47 = v0[21];
    uint64_t v28 = v0[18];
    uint64_t v29 = v0[19];
    uint64_t v30 = v0[14];
    uint64_t v31 = v0[15];
    os_log(_:dso:log:_:_:)();
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = v30;
    *(void *)(v32 + 24) = v31;
    v0[6] = sub_10098E32C;
    v0[7] = v32;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DE098;
    uint64_t v33 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[8] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v33);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v26, v47);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(void))v0[1];
  return v34();
}

uint64_t sub_100980264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101342130;
  aBlock[0] = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_10000B4CC();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v20;
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = v16;
  aBlock[4] = sub_10098E6E8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015DE390;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return swift_release();
}

uint64_t sub_1009805F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v244 = a6;
  uint64_t v248 = a5;
  uint64_t v249 = a4;
  uint64_t v238 = a3;
  uint64_t v251 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v245 = *(void *)(v251 - 8);
  __chkstk_darwin(v251);
  uint64_t v250 = (char *)&v226 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = type metadata accessor for DispatchQoS();
  uint64_t v243 = *(void *)(v247 - 8);
  __chkstk_darwin(v247);
  unint64_t v246 = (char *)&v226 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v242 = (uint64_t *)type metadata accessor for AirPodsPairingLockCheckResponse();
  __chkstk_darwin(v242);
  uint64_t v237 = (uint8_t *)&v226 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v10 - 8);
  uint64_t v230 = (char *)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v233 = type metadata accessor for Date();
  uint64_t v232 = *(void *)(v233 - 8);
  uint64_t v12 = __chkstk_darwin(v233);
  os_log_type_t v231 = (char *)&v226 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v227 = (char *)&v226 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v235 = (char *)&v226 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v229 = (char *)&v226 - v19;
  __chkstk_darwin(v18);
  unint64_t v228 = (char *)&v226 - v20;
  uint64_t v21 = sub_10000588C(&qword_101646100);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v240 = (char *)&v226 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v236 = (char *)&v226 - v24;
  uint64_t v25 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v25 - 8);
  char v241 = (char *)&v226 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v253 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v226 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v226 - v32;
  uint64_t v34 = __chkstk_darwin(v31);
  uint64_t v36 = (char *)&v226 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v226 - v37;
  uint64_t v39 = sub_10000588C(&qword_101646108);
  uint64_t v40 = __chkstk_darwin(v39 - 8);
  uint64_t v234 = (uint64_t)&v226 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __chkstk_darwin(v40);
  os_log_t v239 = (os_log_t)((char *)&v226 - v43);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v46 = (char *)&v226 - v45;
  __chkstk_darwin(v44);
  uint64_t v48 = (char *)&v226 - v47;
  uint64_t v254 = a1;
  FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  ServerStatusCode.init(rawValue:)();
  uint64_t v49 = type metadata accessor for ServerStatusCode();
  uint64_t v50 = *(void *)(v49 - 8);
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49);
  uint64_t v252 = v48;
  if (v51 == 1)
  {
LABEL_2:
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_100010324(v52, (uint64_t)qword_10170F068);
    uint64_t v53 = v253;
    (*(void (**)(char *, uint64_t, uint64_t))(v253 + 16))(v30, v254, v27);
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      os_log_t aBlock = (uint64_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v255 = (void *)sub_1008FA0F0(v57, v58, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v27);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Pairing lock failed: %{public}s", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v27);
    }

    unint64_t v71 = v246;
    uint64_t v70 = v247;
    uint64_t v72 = v244;
    uint64_t v73 = v245;
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v248;
    *(void *)(v74 + 24) = v72;
    uint64_t v260 = sub_100995520;
    os_log_t v261 = (void *)v74;
    os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
    uint64_t v257 = 1107296256;
    uint64_t v258 = sub_1004B5480;
    uint64_t v259 = &unk_1015DE138;
    uint64_t v75 = _Block_copy(&aBlock);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v255 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v76 = v250;
    uint64_t v77 = v251;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v75);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v76, v77);
    (*(void (**)(char *, uint64_t))(v243 + 8))(v71, v70);
LABEL_75:
    swift_release();
    return sub_10001DAB4((uint64_t)v252, &qword_101646108);
  }
  sub_10001D074((uint64_t)v48, (uint64_t)v46, &qword_101646108);
  BOOL v59 = *(uint64_t **)(v50 + 88);
  int v60 = ((uint64_t (*)(char *, uint64_t))v59)(v46, v49);
  if (v60 == enum case for ServerStatusCode.success(_:))
  {
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v61 = type metadata accessor for Logger();
    uint64_t v62 = sub_100010324(v61, (uint64_t)qword_10170F068);
    uint64_t v63 = v253;
    (*(void (**)(char *, uint64_t, uint64_t))(v253 + 16))(v38, v254, v27);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v240 = (char *)v62;
    if (v66)
    {
      uint64_t v67 = (uint8_t *)swift_slowAlloc();
      os_log_t aBlock = (uint64_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v67 = 136446210;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v255 = (void *)sub_1008FA0F0(v68, v69, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v27);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Pairing success: %{public}s", v67, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v27);
    }

    uint64_t v87 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v89 = v88;
    static String.Encoding.utf8.getter();
    uint64_t v90 = String.init(data:encoding:)();
    unint64_t v92 = v91;
    sub_10001CFB8(v87, v89);
    unint64_t v93 = v242;
    if (v92)
    {
      swift_bridgeObjectRetain();
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        os_log_t aBlock = (uint64_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v96 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v255 = (void *)sub_1008FA0F0(v90, v92, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "response data: %s", v96, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v105 = JSONDecoder.init()();
    uint64_t v106 = swift_allocBox();
    uint64_t v108 = v107;
    uint64_t v109 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v111 = v110;
    sub_10098BA84(&qword_101653388, (void (*)(uint64_t))type metadata accessor for AirPodsPairingLockCheckResponse);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v254 = v108;
    sub_10001CFB8(v109, v111);
    uint64_t v112 = (uint64_t)v236;
    FMNServerInteractionController.FMNResponseFields.metadata.getter();
    uint64_t v113 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
    uint64_t v114 = *(void *)(v113 - 8);
    int v115 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48))(v112, 1, v113);
    uint64_t v253 = v105;
    char v241 = (char *)v106;
    if (v115 == 1)
    {
      sub_10001DAB4(v112, &qword_101646100);
      uint64_t v116 = v235;
    }
    else
    {
      uint64_t v132 = FMNServerInteractionController.InternalServerMetadata.dateEpoch.getter();
      uint64_t v133 = v112;
      uint64_t v134 = (uint64_t *)v132;
      char v136 = v135;
      (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v133, v113);
      uint64_t v116 = v235;
      if ((v136 & 1) == 0)
      {
        uint64_t v137 = Logger.logObject.getter();
        os_log_type_t v138 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v137, v138))
        {
          char v139 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)char v139 = 134217984;
          os_log_t aBlock = v134;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v137, v138, "Server epoch: %lld", v139, 0xCu);
          swift_slowDealloc();
        }

        uint64_t v140 = v254;
        *(void *)(v254 + *((int *)v93 + 12)) = v134;
        goto LABEL_70;
      }
    }
    uint64_t v141 = FMNServerInteractionController.FMNResponseFields.responseHeaders.getter();
    if (*(void *)(v141 + 16) && (uint64_t v142 = sub_100723FF4(1702125892, 0xE400000000000000), (v143 & 1) != 0))
    {
      os_log_type_t v144 = (uint64_t *)(*(void *)(v141 + 56) + 16 * v142);
      uint64_t v146 = *v144;
      unint64_t v145 = v144[1];
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      os_log_type_t v147 = Logger.logObject.getter();
      os_log_type_t v148 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v147, v148))
      {
        uint64_t v149 = (uint8_t *)swift_slowAlloc();
        os_log_t aBlock = (uint64_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v149 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v255 = (void *)sub_1008FA0F0(v146, v145, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v147, v148, "Server date: %{public}s", v149, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v174 = v233;
      uint64_t v175 = v232;
      uint64_t v176 = v231;
      if (qword_101636E80 != -1) {
        swift_once();
      }
      uint64_t v177 = (void *)qword_10170E740;
      NSString v178 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v179 = [v177 dateFromString:v178];

      if (v179)
      {
        uint64_t v180 = v229;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        os_log_type_t v181 = *(void (**)(char *, char *, uint64_t))(v175 + 32);
        uint64_t v182 = (uint64_t)v230;
        v181(v230, v180, v174);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56))(v182, 0, 1, v174);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v182, 1, v174) != 1)
        {
          uint64_t v183 = v182;
          Swift::Int v184 = v228;
          v181(v228, (char *)v183, v174);
          *(void *)(v254 + *((int *)v242 + 12)) = Date.epoch.getter();
          uint64_t v185 = *(void (**)(char *, char *, uint64_t))(v175 + 16);
          v185(v116, v184, v174);
          uint64_t v186 = v227;
          v185(v227, v184, v174);
          v185(v176, v184, v174);
          unint64_t v187 = Logger.logObject.getter();
          os_log_type_t v188 = static os_log_type_t.default.getter();
          int v189 = v188;
          if (os_log_type_enabled(v187, v188))
          {
            uint64_t v190 = swift_slowAlloc();
            uint64_t v242 = (uint64_t *)swift_slowAlloc();
            os_log_t aBlock = v242;
            *(_DWORD *)uint64_t v190 = 136446722;
            os_log_t v239 = v187;
            sub_10098BA84((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
            LODWORD(v236) = v189;
            uint64_t v191 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v255 = (void *)sub_1008FA0F0(v191, v192, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            unint64_t v193 = *(void (**)(char *, uint64_t))(v175 + 8);
            v193(v116, v174);
            *(_WORD *)(v190 + 12) = 2048;
            uint64_t v194 = Date.epoch.getter();
            v193(v186, v174);
            uint64_t v255 = (void *)v194;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v190 + 22) = 2082;
            uint64_t v235 = (char *)(v190 + 24);
            uint64_t v255 = (void *)Date.epoch.getter();
            sub_100061D24();
            uint64_t v195 = FixedWidthInteger.data.getter();
            unint64_t v197 = v196;
            uint64_t v198 = Data.hexString.getter();
            unint64_t v200 = v199;
            sub_10001CFB8(v195, v197);
            uint64_t v255 = (void *)sub_1008FA0F0(v198, v200, (uint64_t *)&aBlock);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v193(v176, v174);
            os_log_t v201 = v239;
            _os_log_impl((void *)&_mh_execute_header, v239, (os_log_type_t)v236, "pairingEpoch: %{public}s [%lld/%{public}s]", (uint8_t *)v190, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            v193(v228, v174);
          }
          else
          {
            uint64_t v225 = *(void (**)(char *, uint64_t))(v175 + 8);
            v225(v186, v174);

            v225(v176, v174);
            v225(v116, v174);
            v225(v184, v174);
          }
          goto LABEL_69;
        }
      }
      else
      {
        uint64_t v182 = (uint64_t)v230;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56))(v230, 1, 1, v174);
      }
      sub_10001DAB4(v182, (uint64_t *)&unk_10163AC90);
      uint64_t v150 = Logger.logObject.getter();
      os_log_type_t v151 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v150, v151))
      {
        uint64_t v152 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v152 = 0;
        uint64_t v153 = "Unable to parse server Date!";
        goto LABEL_67;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v150 = Logger.logObject.getter();
      os_log_type_t v151 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v150, v151))
      {
        uint64_t v152 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v152 = 0;
        uint64_t v153 = "Server response is missing Date header!";
LABEL_67:
        _os_log_impl((void *)&_mh_execute_header, v150, v151, v153, v152, 2u);
        swift_slowDealloc();
      }
    }

LABEL_69:
    uint64_t v140 = v254;
LABEL_70:
    uint64_t v202 = v237;
    sub_10098BBCC(v140, (uint64_t)v237, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckResponse);
    uint64_t v203 = v238;
    sub_10084E77C(v238);
    uint64_t v204 = sub_10098D788(v203, (uint64_t)v202);
    unint64_t v206 = v205;
    sub_10098BC34((uint64_t)v202, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckResponse);
    sub_10084EAF0(v203);
    uint64_t v207 = v203[34];
    uint64_t v209 = v207;
    unint64_t v210 = v203[35];
    unint64_t v208 = v210;
    if (v210 >> 60 == 15)
    {
      if (qword_101636E88 != -1) {
        swift_once();
      }
      uint64_t v209 = qword_10170E748;
      unint64_t v210 = qword_10170E750;
      sub_1000361E0(qword_10170E748, qword_10170E750);
    }
    uint64_t v211 = *(void *)(v140 + 64);
    unint64_t v212 = *(void *)(v140 + 72);
    sub_100037A38(v207, v208);
    sub_1000361E0(v211, v212);
    uint64_t v213 = (id)kSecKeyAlgorithmECDSASignatureMessageX962SHA256;
    char v215 = sub_100A8C768(v209, v210, v204, v206, v211, v212, v213);

    sub_10001CFB8(v211, v212);
    sub_10001CFB8(v209, v210);
    uint64_t v216 = Logger.logObject.getter();
    uint64_t v217 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v216, (os_log_type_t)v217))
    {
      unint64_t v218 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v218 = 67109120;
      LODWORD(aBlock) = v215 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v216, (os_log_type_t)v217, "Signature S3 verified? %{BOOL}d", v218, 8u);
      swift_slowDealloc();
    }

    unint64_t v219 = (void *)swift_allocObject();
    uint64_t v220 = v244;
    v219[2] = v248;
    v219[3] = v220;
    v219[4] = v241;
    uint64_t v260 = sub_10098E5A0;
    os_log_t v261 = v219;
    os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
    uint64_t v257 = 1107296256;
    uint64_t v258 = sub_1004B5480;
    uint64_t v259 = &unk_1015DE318;
    os_log_type_t v221 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    BOOL v222 = v246;
    static DispatchQoS.unspecified.getter();
    uint64_t v255 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v223 = v250;
    uint64_t v224 = v251;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v221);
    sub_10001CFB8(v204, v206);
    swift_release();
    (*(void (**)(char *, uint64_t))(v245 + 8))(v223, v224);
    (*(void (**)(char *, uint64_t))(v243 + 8))(v222, v247);
    swift_release();
    goto LABEL_75;
  }
  if (v60 != enum case for ServerStatusCode.forbidden(_:))
  {
    if (v60 == enum case for ServerStatusCode.serverConflict(_:))
    {
      uint64_t v97 = v27;
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      sub_100010324(v98, (uint64_t)qword_10170F068);
      uint64_t v99 = v253;
      (*(void (**)(char *, uint64_t, uint64_t))(v253 + 16))(v36, v254, v97);
      os_log_type_t v100 = Logger.logObject.getter();
      os_log_type_t v101 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v100, v101))
      {
        uint64_t v102 = (uint8_t *)swift_slowAlloc();
        os_log_t aBlock = (uint64_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v102 = 136446210;
        sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v103 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v255 = (void *)sub_1008FA0F0(v103, v104, (uint64_t *)&aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v99 + 8))(v36, v97);
        _os_log_impl((void *)&_mh_execute_header, v100, v101, "Linked to another Apple ID. %{public}s", v102, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v99 + 8))(v36, v97);
      }

      uint64_t v155 = v243;
      uint64_t v154 = v244;
      uint64_t v157 = v246;
      uint64_t v156 = v247;
      uint64_t v158 = v245;
      uint64_t v159 = swift_allocObject();
      *(void *)(v159 + 16) = v248;
      *(void *)(v159 + 24) = v154;
      uint64_t v260 = sub_10098E538;
      os_log_t v261 = (void *)v159;
      os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
      uint64_t v257 = 1107296256;
      uint64_t v258 = sub_1004B5480;
      uint64_t v259 = &unk_1015DE278;
      uint64_t v160 = _Block_copy(&aBlock);
      swift_retain();
      static DispatchQoS.unspecified.getter();
      uint64_t v255 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v161 = v250;
      uint64_t v162 = v251;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v160);
      (*(void (**)(char *, uint64_t))(v158 + 8))(v161, v162);
      (*(void (**)(char *, uint64_t))(v155 + 8))(v157, v156);
      goto LABEL_75;
    }
    (*(void (**)(char *, uint64_t))(v50 + 8))(v46, v49);
    goto LABEL_2;
  }
  uint64_t v242 = v59;
  uint64_t v78 = v27;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  uint64_t v80 = sub_100010324(v79, (uint64_t)qword_10170F068);
  uint64_t v81 = v253;
  (*(void (**)(char *, uint64_t, uint64_t))(v253 + 16))(v33, v254, v78);
  char v241 = (char *)v80;
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v82, v83))
  {
    uint64_t v84 = (uint8_t *)swift_slowAlloc();
    uint64_t v238 = (uint64_t *)swift_slowAlloc();
    os_log_t aBlock = v238;
    uint64_t v237 = v84;
    *(_DWORD *)uint64_t v84 = 136446210;
    uint64_t v236 = (char *)(v84 + 4);
    sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v255 = (void *)sub_1008FA0F0(v85, v86, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v33, v78);
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "Pairing not allowed! %{public}s", v237, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v81 + 8))(v33, v78);
  }

  uint64_t v117 = v247;
  os_log_t v118 = v239;
  uint64_t v119 = (uint64_t)v240;
  FMNServerInteractionController.FMNResponseFields.metadata.getter();
  uint64_t v120 = type metadata accessor for FMNServerInteractionController.InternalServerMetadata();
  uint64_t v121 = *(void *)(v120 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120) == 1)
  {
    sub_10001DAB4(v119, &qword_101646100);
    (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v118, 1, 1, v49);
    uint64_t v122 = v243;
  }
  else
  {
    FMNServerInteractionController.InternalServerMetadata.errorCode.getter();
    (*(void (**)(uint64_t, uint64_t))(v121 + 8))(v119, v120);
    (*(void (**)(os_log_t, void, uint64_t, uint64_t))(v50 + 56))(v118, 0, 1, v49);
    uint64_t v123 = v234;
    sub_10001D074((uint64_t)v118, v234, &qword_101646108);
    int v124 = ((uint64_t (*)(uint64_t, uint64_t))v242)(v123, v49);
    if (v124 == enum case for ServerStatusCode.preconditionFailed(_:))
    {
      os_log_type_t v125 = Logger.logObject.getter();
      os_log_type_t v126 = static os_log_type_t.error.getter();
      BOOL v127 = os_log_type_enabled(v125, v126);
      uint64_t v122 = v243;
      if (v127)
      {
        uint64_t v128 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v128 = 0;
        _os_log_impl((void *)&_mh_execute_header, v125, v126, "Pairing has been completed by another device", v128, 2u);
        swift_slowDealloc();
      }

      uint64_t v129 = swift_allocObject();
      uint64_t v130 = v244;
      *(void *)(v129 + 16) = v248;
      *(void *)(v129 + 24) = v130;
      uint64_t v260 = sub_10098E510;
      os_log_t v261 = (void *)v129;
      os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
      uint64_t v257 = 1107296256;
      os_log_t v131 = &unk_1015DE228;
      goto LABEL_56;
    }
    uint64_t v122 = v243;
    if (v124 == enum case for ServerStatusCode.locked(_:))
    {
      uint64_t v163 = Logger.logObject.getter();
      os_log_type_t v164 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v163, v164))
      {
        uint64_t v165 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v165 = 0;
        _os_log_impl((void *)&_mh_execute_header, v163, v164, "Pairing is pending from another device", v165, 2u);
        swift_slowDealloc();
      }

      uint64_t v166 = swift_allocObject();
      uint64_t v167 = v244;
      *(void *)(v166 + 16) = v248;
      *(void *)(v166 + 24) = v167;
      uint64_t v260 = sub_10098E4E8;
      os_log_t v261 = (void *)v166;
      os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
      uint64_t v257 = 1107296256;
      os_log_t v131 = &unk_1015DE1D8;
      goto LABEL_56;
    }
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v123, v49);
  }
  uint64_t v168 = v244;
  uint64_t v169 = swift_allocObject();
  *(void *)(v169 + 16) = v248;
  *(void *)(v169 + 24) = v168;
  uint64_t v260 = sub_10098E488;
  os_log_t v261 = (void *)v169;
  os_log_t aBlock = (uint64_t *)_NSConcreteStackBlock;
  uint64_t v257 = 1107296256;
  os_log_t v131 = &unk_1015DE188;
LABEL_56:
  uint64_t v258 = sub_1004B5480;
  uint64_t v259 = v131;
  NSString v170 = _Block_copy(&aBlock);
  swift_retain();
  id v171 = v246;
  static DispatchQoS.unspecified.getter();
  uint64_t v255 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v172 = v250;
  uint64_t v173 = v251;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v170);
  (*(void (**)(char *, uint64_t))(v245 + 8))(v172, v173);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v171, v117);
  swift_release();
  sub_10001DAB4((uint64_t)v118, &qword_101646108);
  return sub_10001DAB4((uint64_t)v252, &qword_101646108);
}

uint64_t sub_100982D3C(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v10 = sub_10000588C(a4);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  a5(0);
  uint64_t v13 = swift_projectBox();
  swift_beginAccess();
  sub_10098BBCC(v13, (uint64_t)v12, a6);
  swift_storeEnumTagMultiPayload();
  a1(v12);
  return sub_10001DAB4((uint64_t)v12, a4);
}

uint64_t sub_100982E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a8;
  v8[18] = v13;
  v8[15] = a6;
  unsigned char v8[16] = a7;
  v8[13] = a4;
  v8[14] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[22] = v10;
  v8[23] = *(void *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_100982F6C, 0, 0);
}

uint64_t sub_100982F6C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = *(void *)(v0[14] + 16);
  swift_retain();
  sub_1004AF088(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101651F90 + dword_101651F90);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100983034;
  uint64_t v4 = v0[13];
  return v6(v4, v2);
}

uint64_t sub_100983034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = a3;
  v4[26] = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10098313C, 0, 0);
}

uint64_t sub_10098313C()
{
  uint64_t v1 = v0[26];
  if (v1)
  {
    uint64_t v2 = v0[10];
    unint64_t v3 = v0[11];
    uint64_t v5 = v0[17];
    uint64_t v4 = (void *)v0[18];
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = v0[16];
    swift_bridgeObjectRetain();
    sub_1000361E0(v2, v3);
    sub_1004ACD70(v1, v2, v3, 0, v4);
    sub_1001D7860(v1, v2, v3);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = v7;
    v8[4] = v5;
    id v9 = v6;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = v7;
    v10[4] = v5;
    id v11 = v9;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v1, v2, v3);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_101637308 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[24];
    uint64_t v13 = v0[21];
    uint64_t v22 = v0[23];
    uint64_t v23 = v0[22];
    uint64_t v14 = v0[19];
    uint64_t v15 = v0[20];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[17];
    os_log(_:dso:log:_:_:)();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v17;
    v0[6] = sub_10098BA4C;
    v0[7] = v18;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DDCD8;
    uint64_t v19 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[12] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1009834E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  uint64_t v21 = a4;
  uint64_t v25 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v24 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v22 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101342130;
  aBlock[0] = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_10000B4CC();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)swift_allocObject();
  uint64_t v16 = v21;
  _OWORD v15[2] = v20;
  v15[3] = v16;
  v15[4] = a1;
  aBlock[4] = sub_10027B0F4;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015DDE18;
  uint64_t v17 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v10, v23);
  return swift_release();
}

uint64_t sub_100983880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100010324(v13, (uint64_t)qword_10170F068);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    v36[1] = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136446210;
    sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v46 = (void *)sub_1008FA0F0(v18, v19, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Remove pairing lock response %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  uint64_t v20 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  static os_log_type_t.default.getter();
  if (v20 == 200)
  {
    if (qword_101637308 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v21 = swift_allocObject();
    uint64_t v22 = v38;
    *(void *)(v21 + 16) = v37;
    *(void *)(v21 + 24) = v22;
    int v51 = sub_1003C6214;
    uint64_t v52 = v21;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1004B5480;
    uint64_t v50 = &unk_1015DDDC8;
    uint64_t v23 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v24 = v39;
    static DispatchQoS.unspecified.getter();
    uint64_t v46 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v25 = v40;
    uint64_t v26 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    uint64_t v27 = v23;
  }
  else
  {
    if (qword_101637308 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_101342130;
    uint64_t aBlock = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
    uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v31 = v30;
    *(void *)(v28 + 56) = &type metadata for String;
    *(void *)(v28 + 64) = sub_10000B4CC();
    *(void *)(v28 + 32) = v29;
    *(void *)(v28 + 40) = v31;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v38;
    *(void *)(v32 + 16) = v37;
    *(void *)(v32 + 24) = v33;
    int v51 = sub_10098BAEC;
    uint64_t v52 = v32;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v48 = 1107296256;
    uint64_t v49 = sub_1004B5480;
    uint64_t v50 = &unk_1015DDD78;
    uint64_t v34 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v24 = v39;
    static DispatchQoS.unspecified.getter();
    uint64_t v46 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v25 = v40;
    uint64_t v26 = v45;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    uint64_t v27 = v34;
  }
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v25, v26);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v43);
  return swift_release();
}

void sub_100984014(void (*a1)())
{
  type metadata accessor for SPPairingSessionError(0);
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  a1();
}

uint64_t sub_1009840D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  uint64_t v4 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v50 = (char *)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  uint64_t v47 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v46);
  void v45[2] = (uint64_t (*)(void))((char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  v45[1] = (uint64_t (*)(void))((char *)v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for FMNAccountType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AirPodsPairingLockAckEndPoint();
  uint64_t v19 = v18 - 8;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v45 - v23;
  uint64_t v25 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
  v26(v17, enum case for FMNAccountType.w2Accessory(_:), v14);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)uint64_t v24 = sub_1010E7A64((uint64_t)v17);
  v26(&v24[*(int *)(v19 + 28)], v25, v14);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v27 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v13, 1, 1, v27);
  uint64_t v28 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v29 = swift_allocObject();
  v45[0] = (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckEndPoint;
  sub_10098BBCC((uint64_t)v24, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckEndPoint);
  uint64_t v30 = sub_1004A7930((uint64_t)v22, v28, v29);
  sub_10000584C();
  static DispatchQoS.unspecified.getter();
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v48 + 104))(v47, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v49);
  uint64_t v31 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v32 = type metadata accessor for TaskPriority();
  uint64_t v33 = (uint64_t)v50;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v50, 1, 1, v32);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  long long v35 = *(_OWORD *)(a1 + 176);
  *(_OWORD *)(v34 + 192) = *(_OWORD *)(a1 + 160);
  *(_OWORD *)(v34 + 208) = v35;
  *(_OWORD *)(v34 + 224) = *(_OWORD *)(a1 + 192);
  long long v36 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v34 + 128) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v34 + 144) = v36;
  long long v37 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v34 + 160) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v34 + 176) = v37;
  long long v38 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 64) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 80) = v38;
  long long v39 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v34 + 96) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v34 + 112) = v39;
  long long v40 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 48) = v40;
  uint64_t v41 = v52;
  *(void *)(v34 + 240) = v51;
  *(void *)(v34 + 248) = v31;
  uint64_t v42 = v53;
  *(void *)(v34 + 256) = v41;
  *(void *)(v34 + 264) = v42;
  *(void *)(v34 + 272) = v30;
  sub_10098BEB8((void *)a1);
  swift_retain();
  id v43 = v31;
  swift_retain();
  swift_retain();
  sub_1008F5E44(v33, (uint64_t)&unk_101653358, v34);

  swift_release();
  swift_release();
  return sub_10098BC34((uint64_t)v24, v45[0]);
}

uint64_t sub_1009846E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a8;
  v8[18] = v13;
  v8[15] = a6;
  unsigned char v8[16] = a7;
  v8[13] = a4;
  v8[14] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[22] = v10;
  v8[23] = *(void *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_10098480C, 0, 0);
}

uint64_t sub_10098480C()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = *(void *)(v0[14] + 16);
  swift_retain();
  sub_10098BEB8(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101661C98 + dword_101661C98);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_1009848D4;
  uint64_t v4 = v0[13];
  return v6(v4, v2);
}

uint64_t sub_1009848D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = a3;
  v4[26] = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009849DC, 0, 0);
}

uint64_t sub_1009849DC()
{
  uint64_t v1 = v0[26];
  if (v1)
  {
    uint64_t v2 = v0[10];
    unint64_t v3 = v0[11];
    uint64_t v5 = v0[17];
    uint64_t v4 = (void *)v0[18];
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = v0[16];
    swift_bridgeObjectRetain();
    sub_1000361E0(v2, v3);
    sub_1004AD06C(v1, v2, v3, 0, v4);
    sub_1001D7860(v1, v2, v3);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = v7;
    v8[4] = v5;
    id v9 = v6;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = v7;
    v10[4] = v5;
    id v11 = v9;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v1, v2, v3);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_101637308 != -1) {
      swift_once();
    }
    uint64_t v12 = v0[24];
    uint64_t v13 = v0[21];
    uint64_t v22 = v0[23];
    uint64_t v23 = v0[22];
    uint64_t v14 = v0[19];
    uint64_t v15 = v0[20];
    uint64_t v16 = v0[16];
    uint64_t v17 = v0[17];
    os_log(_:dso:log:_:_:)();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v17;
    v0[6] = sub_10098DF28;
    v0[7] = v18;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DDE90;
    uint64_t v19 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[12] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v19);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_100984D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v23 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101342130;
  aBlock[0] = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  *(void *)(v11 + 64) = sub_10000B4CC();
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v20;
  *(void *)(v15 + 16) = v19;
  *(void *)(v15 + 24) = v16;
  aBlock[4] = sub_10098E0D8;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015DE020;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v21);
  return swift_release();
}

uint64_t sub_100985118(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v58 = a4;
  uint64_t v59 = a2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v61 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v60 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for AirPodsPairingLockAckResponse();
  uint64_t v55 = *(void *)(v57 - 8);
  uint64_t v11 = *(void *)(v55 + 64);
  uint64_t v12 = __chkstk_darwin(v57);
  uint64_t v56 = (uint64_t)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v48 - v13;
  uint64_t v15 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = a1;
  if (FMNServerInteractionController.FMNResponseFields.statusCode.getter() == 200)
  {
    uint64_t v53 = v9;
    uint64_t v54 = v14;
    uint64_t v52 = a3;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    uint64_t v20 = sub_100010324(v19, (uint64_t)qword_10170F068);
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v16 + 16))(v18, v63, v15);
    uint64_t v51 = v20;
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = (void **)swift_slowAlloc();
      uint64_t v49 = v7;
      uint64_t aBlock = v24;
      uint64_t v50 = v6;
      *(_DWORD *)uint64_t v23 = 136446210;
      v48[1] = v23 + 4;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v64 = (void *)sub_1008FA0F0(v25, v26, (uint64_t *)&aBlock);
      uint64_t v6 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Ack pairing success: %{public}s", v23, 0xCu);
      swift_arrayDestroy();
      uint64_t v7 = v49;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v36 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v38 = v37;
    sub_10098BA84(&qword_101653360, (void (*)(uint64_t))type metadata accessor for AirPodsPairingLockAckResponse);
    uint64_t v39 = (uint64_t)v54;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10001CFB8(v36, v38);
    uint64_t v63 = type metadata accessor for AirPodsPairingLockAckResponse;
    uint64_t v40 = v56;
    sub_10098BBCC(v39, v56, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckResponse);
    unint64_t v41 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v58;
    *(void *)(v42 + 16) = v52;
    *(void *)(v42 + 24) = v43;
    sub_10098FD58(v40, v42 + v41, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckResponse);
    unint64_t v69 = sub_10098E0A4;
    uint64_t v70 = v42;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    uint64_t v67 = sub_1004B5480;
    uint64_t v68 = &unk_1015DDFD0;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v45 = v60;
    static DispatchQoS.unspecified.getter();
    uint64_t v64 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v46 = v61;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v46, v6);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v45, v53);
    sub_10098BC34(v39, (uint64_t (*)(void))v63);
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_101637308 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_101342130;
    sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v30 = v29;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = sub_10000B4CC();
    *(void *)(v27 + 32) = v28;
    *(void *)(v27 + 40) = v30;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = v58;
    *(void *)(v31 + 16) = a3;
    *(void *)(v31 + 24) = v32;
    unint64_t v69 = sub_10099551C;
    uint64_t v70 = v31;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v66 = 1107296256;
    uint64_t v67 = sub_1004B5480;
    uint64_t v68 = &unk_1015DDF30;
    uint64_t v33 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v34 = v60;
    static DispatchQoS.unspecified.getter();
    uint64_t v64 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    long long v35 = v61;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v35, v6);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v34, v9);
  }
  return swift_release();
}

uint64_t sub_100985D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 160) = v14;
  *(_OWORD *)(v8 + 144) = v13;
  *(void *)(v8 + 128) = a7;
  *(void *)(v8 + 136) = a8;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 120) = a6;
  *(void *)(v8 + 104) = a4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v8 + 168) = v9;
  *(void *)(v8 + 176) = *(void *)(v9 - 8);
  *(void *)(v8 + 184) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  *(void *)(v8 + 192) = v10;
  *(void *)(v8 + 200) = *(void *)(v10 - 8);
  *(void *)(v8 + 208) = swift_task_alloc();
  return _swift_task_switch(sub_100985EB4, 0, 0);
}

uint64_t sub_100985EB4()
{
  unint64_t v1 = v0[15];
  unint64_t v3 = (void *)v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = *(void *)(v0[16] + 16);
  swift_retain();
  sub_1001F0C14(v3);
  sub_1000361E0(v2, v1);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10163EE10 + dword_10163EE10);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[27] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100985F98;
  uint64_t v6 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v8 = v0[13];
  return v10(v8, v6, v7, v4);
}

uint64_t sub_100985F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = a3;
  v4[28] = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009860A0, 0, 0);
}

uint64_t sub_1009860A0()
{
  uint64_t v1 = v0[28];
  if (v1)
  {
    uint64_t v2 = v0[10];
    unint64_t v3 = v0[11];
    uint64_t v5 = v0[19];
    uint64_t v4 = (void *)v0[20];
    uint64_t v6 = (void *)v0[17];
    uint64_t v7 = v0[18];
    swift_bridgeObjectRetain();
    sub_1000361E0(v2, v3);
    sub_1004AD368(v1, v2, v3, 0, v4);
    sub_1001D7860(v1, v2, v3);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = v7;
    v8[4] = v5;
    id v9 = v6;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = v7;
    v10[4] = v5;
    id v11 = v9;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v1, v2, v3);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170F098);
    long long v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not create pairing ack request", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = v0[25];
    uint64_t v16 = v0[26];
    uint64_t v18 = v0[23];
    uint64_t v19 = v0[21];
    uint64_t v20 = v0[22];
    uint64_t v21 = v0[18];
    uint64_t v22 = v0[19];
    uint64_t v27 = v0[24];

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v22;
    v0[6] = sub_10098EA3C;
    v0[7] = v23;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DE4A8;
    uint64_t v24 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[12] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v27);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100986498(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v36 = a5;
  uint64_t v37 = a6;
  uint64_t v38 = a3;
  uint64_t v13 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v41 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v39 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637320 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100010324(v18, (uint64_t)qword_10170F098);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v32 = a8;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v31 = a7;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v33 = a4;
    uint64_t v42 = a1;
    aBlock[0] = v23;
    uint64_t v34 = v16;
    uint64_t v35 = a2;
    *(_DWORD *)uint64_t v22 = 136446210;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v42 = (void *)sub_1008FA0F0(v24, v25, aBlock);
    uint64_t v16 = v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a8 = v32;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, v36, v22, 0xCu);
    swift_arrayDestroy();
    a4 = v33;
    swift_slowDealloc();
    a7 = v31;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v38;
  *(void *)(v26 + 24) = a4;
  aBlock[4] = a7;
  aBlock[5] = v26;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004B5480;
  aBlock[3] = a8;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v28 = v39;
  static DispatchQoS.unspecified.getter();
  uint64_t v42 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v29 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v13);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v16);
  return swift_release();
}

uint64_t sub_100986904(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v68 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v69 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for AirPodsLEPairingLockAckResponse();
  uint64_t v59 = *(void *)(v62 - 8);
  uint64_t v10 = *(void *)(v59 + 64);
  uint64_t v11 = __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v55 - v12;
  uint64_t v14 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  os_log_type_t v20 = (char *)v55 - v19;
  uint64_t v70 = a1;
  if (FMNServerInteractionController.FMNResponseFields.statusCode.getter() == 200)
  {
    uint64_t v61 = v8;
    uint64_t v63 = v6;
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    uint64_t v22 = sub_100010324(v21, (uint64_t)qword_10170F098);
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v15 + 16))(v20, v70, v14);
    uint64_t v57 = v22;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v56 = v13;
      uint64_t v26 = (uint8_t *)v25;
      uint64_t v27 = (void **)swift_slowAlloc();
      uint64_t v58 = v5;
      uint64_t aBlock = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      v55[1] = v26 + 4;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = (void *)sub_1008FA0F0(v28, v29, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Ack pairing success: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v5 = v58;
      swift_slowDealloc();
      uint64_t v13 = v56;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v37 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v39 = v38;
    sub_10098BA84(&qword_1016533B0, (void (*)(uint64_t))type metadata accessor for AirPodsLEPairingLockAckResponse);
    uint64_t v40 = (uint64_t)v13;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v41 = v63;
    sub_10001CFB8(v37, v39);
    uint64_t v70 = type metadata accessor for AirPodsLEPairingLockAckResponse;
    uint64_t v47 = v60;
    sub_10098BBCC((uint64_t)v13, v60, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckResponse);
    unint64_t v48 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v65;
    *(void *)(v49 + 16) = v64;
    *(void *)(v49 + 24) = v50;
    sub_10098FD58(v47, v49 + v48, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckResponse);
    uint64_t v76 = sub_10098EC7C;
    uint64_t v77 = v49;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_1004B5480;
    uint64_t v75 = &unk_1015DE5E8;
    uint64_t v51 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v52 = v67;
    static DispatchQoS.unspecified.getter();
    unint64_t v71 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v53 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v51);
    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v53, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v61);
    sub_10098BC34(v40, (uint64_t (*)(void))v70);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170F098);
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v15 + 16))(v18, v70, v14);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void **)swift_slowAlloc();
      uint64_t v63 = v6;
      uint64_t aBlock = v34;
      uint64_t v58 = v5;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v61 = v8;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = (void *)sub_1008FA0F0(v35, v36, (uint64_t *)&aBlock);
      uint64_t v8 = v61;
      uint64_t v5 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Ack pairing failed. Response %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      uint64_t v6 = v63;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }

    uint64_t v42 = v65;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v64;
    *(void *)(v43 + 24) = v42;
    uint64_t v76 = sub_100995524;
    uint64_t v77 = v43;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_1004B5480;
    uint64_t v75 = &unk_1015DE548;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v45 = v67;
    static DispatchQoS.unspecified.getter();
    unint64_t v71 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v46 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v8);
  }
  return swift_release();
}

uint64_t sub_100987668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[17] = a8;
  v8[18] = v13;
  v8[15] = a6;
  unsigned char v8[16] = a7;
  v8[13] = a4;
  v8[14] = a5;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  v8[19] = v9;
  v8[20] = *(void *)(v9 - 8);
  v8[21] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for DispatchQoS();
  v8[22] = v10;
  v8[23] = *(void *)(v10 - 8);
  v8[24] = swift_task_alloc();
  return _swift_task_switch(sub_100987794, 0, 0);
}

uint64_t sub_100987794()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = *(void *)(v0[14] + 16);
  swift_retain();
  sub_10098F9F4(v1);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_101663E98 + dword_101663E98);
  unint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_10098785C;
  uint64_t v4 = v0[13];
  return v6(v4, v2);
}

uint64_t sub_10098785C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[8] = v3;
  v4[9] = a1;
  v4[10] = a2;
  v4[11] = a3;
  v4[26] = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100987964, 0, 0);
}

uint64_t sub_100987964()
{
  uint64_t v1 = v0[26];
  if (v1)
  {
    uint64_t v2 = v0[10];
    unint64_t v3 = v0[11];
    uint64_t v5 = v0[17];
    uint64_t v4 = (void *)v0[18];
    uint64_t v6 = (void *)v0[15];
    uint64_t v7 = v0[16];
    swift_bridgeObjectRetain();
    sub_1000361E0(v2, v3);
    sub_1004AD664(v1, v2, v3, 0, v4);
    sub_1001D7860(v1, v2, v3);
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v6;
    v8[3] = v7;
    v8[4] = v5;
    id v9 = v6;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = v7;
    v10[4] = v5;
    id v11 = v9;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    sub_1001D7860(v1, v2, v3);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170F098);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Could not create pairing ack request", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v17 = v0[23];
    uint64_t v16 = v0[24];
    uint64_t v18 = v0[21];
    uint64_t v19 = v0[19];
    uint64_t v20 = v0[20];
    uint64_t v21 = v0[16];
    uint64_t v22 = v0[17];
    uint64_t v27 = v0[22];

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = v21;
    *(void *)(v23 + 24) = v22;
    v0[6] = sub_10098FB30;
    v0[7] = v23;
    v0[2] = _NSConcreteStackBlock;
    v0[3] = 1107296256;
    v0[4] = sub_1004B5480;
    v0[5] = &unk_1015DEAC0;
    os_log_type_t v24 = _Block_copy(v0 + 2);
    swift_retain();
    static DispatchQoS.unspecified.getter();
    v0[12] = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v24);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v27);
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
  return v25();
}

uint64_t sub_100987D5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const char *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v35 = a5;
  uint64_t v36 = a6;
  uint64_t v37 = a3;
  uint64_t v12 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v40 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  unint64_t v38 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637320 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100010324(v17, (uint64_t)qword_10170F098);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v31 = a8;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = a7;
    uint64_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = a4;
    uint64_t v23 = (void *)v22;
    uint64_t v33 = v15;
    uint64_t v34 = a2;
    *(_DWORD *)uint64_t v21 = 138543362;
    swift_errorRetain();
    uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
    aBlock[0] = v24;
    uint64_t v15 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v24;
    a8 = v31;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, v35, v21, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    a4 = v32;
    swift_slowDealloc();
    a7 = v30;
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v37;
  *(void *)(v25 + 24) = a4;
  aBlock[4] = a7;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = a8;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v27 = v38;
  static DispatchQoS.unspecified.getter();
  uint64_t v41 = _swiftEmptyArrayStorage;
  sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v28 = v40;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v15);
  return swift_release();
}

uint64_t sub_1009881AC(uint64_t (*a1)(), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v68 = (char *)v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v69 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v67 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for AirPodsSWPairingLockAckResponse();
  uint64_t v59 = *(void *)(v62 - 8);
  uint64_t v10 = *(void *)(v59 + 64);
  uint64_t v11 = __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v55 - v12;
  uint64_t v14 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v55 - v19;
  uint64_t v70 = a1;
  if (FMNServerInteractionController.FMNResponseFields.statusCode.getter() == 200)
  {
    uint64_t v61 = v8;
    uint64_t v63 = v6;
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    uint64_t v22 = sub_100010324(v21, (uint64_t)qword_10170F098);
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v15 + 16))(v20, v70, v14);
    uint64_t v57 = v22;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v56 = v13;
      uint64_t v26 = (uint8_t *)v25;
      uint64_t v27 = (void **)swift_slowAlloc();
      uint64_t v58 = v5;
      uint64_t aBlock = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      v55[1] = v26 + 4;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = (void *)sub_1008FA0F0(v28, v29, (uint64_t *)&aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Ack pairing success: %{public}s", v26, 0xCu);
      swift_arrayDestroy();
      uint64_t v5 = v58;
      swift_slowDealloc();
      uint64_t v13 = v56;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
    }

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    uint64_t v37 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v39 = v38;
    sub_10098BA84(&qword_1016533F0, (void (*)(uint64_t))type metadata accessor for AirPodsSWPairingLockAckResponse);
    uint64_t v40 = (uint64_t)v13;
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    uint64_t v41 = v63;
    sub_10001CFB8(v37, v39);
    uint64_t v70 = type metadata accessor for AirPodsSWPairingLockAckResponse;
    uint64_t v47 = v60;
    sub_10098BBCC((uint64_t)v13, v60, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockAckResponse);
    unint64_t v48 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
    uint64_t v49 = swift_allocObject();
    uint64_t v50 = v65;
    *(void *)(v49 + 16) = v64;
    *(void *)(v49 + 24) = v50;
    sub_10098FD58(v47, v49 + v48, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockAckResponse);
    uint64_t v76 = sub_10098FDC0;
    uint64_t v77 = v49;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_1004B5480;
    uint64_t v75 = &unk_1015DEC00;
    uint64_t v51 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v52 = v67;
    static DispatchQoS.unspecified.getter();
    unint64_t v71 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v53 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v51);
    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v53, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v61);
    sub_10098BC34(v40, (uint64_t (*)(void))v70);
  }
  else
  {
    if (qword_101637320 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170F098);
    (*(void (**)(char *, uint64_t (*)(), uint64_t))(v15 + 16))(v18, v70, v14);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v34 = (void **)swift_slowAlloc();
      uint64_t v63 = v6;
      uint64_t aBlock = v34;
      uint64_t v58 = v5;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v61 = v8;
      sub_10098BA84((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = (void *)sub_1008FA0F0(v35, v36, (uint64_t *)&aBlock);
      uint64_t v8 = v61;
      uint64_t v5 = v58;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Ack pairing failed. Response %{public}s", v33, 0xCu);
      swift_arrayDestroy();
      uint64_t v6 = v63;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }

    uint64_t v42 = v65;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v64;
    *(void *)(v43 + 24) = v42;
    uint64_t v76 = sub_10099552C;
    uint64_t v77 = v43;
    uint64_t aBlock = _NSConcreteStackBlock;
    uint64_t v73 = 1107296256;
    uint64_t v74 = sub_1004B5480;
    uint64_t v75 = &unk_1015DEB60;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v45 = v67;
    static DispatchQoS.unspecified.getter();
    unint64_t v71 = _swiftEmptyArrayStorage;
    sub_10098BA84((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v46 = v68;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v44);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v46, v5);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v45, v8);
  }
  return swift_release();
}

uint64_t sub_100988EF0(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void))
{
  uint64_t v9 = sub_10000588C(a4);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10098BBCC(a3, (uint64_t)v11, a5);
  swift_storeEnumTagMultiPayload();
  a1(v11);
  return sub_10001DAB4((uint64_t)v11, a4);
}

uint64_t sub_100988FC4(void (*a1)(void *), uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7 = sub_10000588C(a3);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for SPPairingSessionError(0);
  v11[0] = a4;
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_10098BA84(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  *uint64_t v9 = v11[1];
  swift_storeEnumTagMultiPayload();
  a1(v9);
  return sub_10001DAB4((uint64_t)v9, a3);
}

uint64_t sub_100989104(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[14];
  uint64_t v7 = v1[15];
  uint64_t v8 = v1[16];
  uint64_t v9 = v1[17];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100033F68;
  return sub_100982E40(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, v9);
}

uint64_t sub_1009891F4(uint64_t *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  sub_10098EE00(a1);
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  uint64_t v3 = a1[17];
  unint64_t v4 = a1[18];
  unint64_t v48 = a1;
  sub_1000361E0(v3, v4);
  uint64_t v5 = Data.trimmed.getter();
  unint64_t v7 = v6;
  sub_10001CFB8(v3, v4);
  uint64_t v47 = v5;
  *(void *)&long long v56 = v5;
  *((void *)&v56 + 1) = v7;
  unint64_t v46 = v7;
  static String.Encoding.utf8.getter();
  sub_100135A44();
  uint64_t v8 = String.init<A>(bytes:encoding:)();
  if (!v9) {
    uint64_t v8 = Data.hexString.getter();
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  long long v56 = *(_OWORD *)(v48 + 15);
  sub_1000362FC();
  uint64_t v12 = DataProtocol.intValue.getter();
  long long v56 = *(_OWORD *)(v48 + 13);
  uint64_t v13 = DataProtocol.intValue.getter();
  uint64_t v14 = v48[40];
  unint64_t v15 = v48[41];
  *(void *)&long long v56 = 0;
  *((void *)&v56 + 1) = v12;
  uint64_t v16 = v14;
  uint64_t v18 = v48[42];
  unint64_t v17 = v48[43];
  *(void *)&long long v57 = v13;
  *((void *)&v57 + 1) = &off_1015A0550;
  *(void *)&long long v58 = v10;
  *((void *)&v58 + 1) = v11;
  long long v59 = xmmword_101370540;
  *(void *)&long long v60 = v14;
  *((void *)&v60 + 1) = v15;
  *(void *)&long long v61 = v18;
  *((void *)&v61 + 1) = v17;
  sub_1000361E0(v14, v15);
  sub_1000361E0(v18, v17);
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100010324(v19, (uint64_t)qword_10170F068);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v45 = v20;
    uint64_t v22 = v16;
    unint64_t v23 = v15;
    uint64_t v24 = v18;
    unint64_t v25 = v17;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000361E0(v22, v23);
    sub_1000361E0(v24, v17);
    uint64_t v27 = sub_1010BA094();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v23);
    sub_10001CFB8(v24, v25);
    uint64_t v49 = sub_1008FA0F0(v27, v29, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v17 = v25;
    uint64_t v18 = v24;
    unint64_t v15 = v23;
    uint64_t v16 = v22;
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v15);
    sub_10001CFB8(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v15);
    sub_10001CFB8(v18, v17);
    _os_log_impl((void *)&_mh_execute_header, v45, v21, "BAARKProperties %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v16, v15);
    sub_10001CFB8(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v16, v15);
    sub_10001CFB8(v18, v17);
  }
  long long v52 = v58;
  long long v53 = v59;
  long long v54 = v60;
  long long v55 = v61;
  long long v50 = v56;
  long long v51 = v57;
  sub_10098ED58();
  uint64_t v30 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v32 = v31;
  uint64_t v34 = v48[26];
  unint64_t v33 = v48[27];
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  unint64_t v44 = v32;
  uint64_t v35 = Logger.logObject.getter();
  uint64_t v43 = v35;
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v42))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)unint64_t v36 = 136315138;
    uint64_t v49 = v41;
    *(void *)&long long v50 = v34;
    *((void *)&v50 + 1) = v33;
    *(void *)&long long v51 = v30;
    *((void *)&v51 + 1) = v44;
    sub_1000361E0(v34, v33);
    sub_1000361E0(v30, v44);
    uint64_t v37 = String.init<A>(describing:)();
    *(void *)&long long v50 = sub_1008FA0F0(v37, v38, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    _os_log_impl((void *)&_mh_execute_header, v43, v42, "BAARequestPayload %s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
  }
  *(void *)&long long v50 = v34;
  *((void *)&v50 + 1) = v33;
  *(void *)&long long v51 = v30;
  *((void *)&v51 + 1) = v44;
  sub_10098EDAC();
  uint64_t v39 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  sub_10001CFB8(v47, v46);
  swift_release();
  sub_10001CFB8(v30, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v34, v33);
  sub_10001CFB8(v30, v44);
  sub_10098EFB0(v48);
  return v39;
}

uint64_t sub_100989D4C(void *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  sub_1001F0C14(a1);
  PropertyListEncoder.init()();
  dispatch thunk of PropertyListEncoder.outputFormat.setter();
  uint64_t v3 = a1[14];
  unint64_t v4 = a1[15];
  unint64_t v48 = a1;
  sub_1000361E0(v3, v4);
  uint64_t v5 = Data.trimmed.getter();
  unint64_t v7 = v6;
  sub_10001CFB8(v3, v4);
  uint64_t v47 = v5;
  *(void *)&long long v56 = v5;
  *((void *)&v56 + 1) = v7;
  unint64_t v46 = v7;
  static String.Encoding.utf8.getter();
  sub_100135A44();
  uint64_t v8 = String.init<A>(bytes:encoding:)();
  if (!v9) {
    uint64_t v8 = Data.hexString.getter();
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  long long v56 = *((_OWORD *)v48 + 6);
  sub_1000362FC();
  uint64_t v12 = DataProtocol.intValue.getter();
  long long v56 = *((_OWORD *)v48 + 5);
  uint64_t v13 = DataProtocol.intValue.getter();
  uint64_t v14 = v48[26];
  unint64_t v15 = v48[27];
  *(void *)&long long v56 = 0;
  *((void *)&v56 + 1) = v12;
  uint64_t v16 = v14;
  uint64_t v18 = v48[28];
  unint64_t v17 = v48[29];
  *(void *)&long long v57 = v13;
  *((void *)&v57 + 1) = &off_1015A05E8;
  *(void *)&long long v58 = v10;
  *((void *)&v58 + 1) = v11;
  long long v59 = xmmword_101370540;
  *(void *)&long long v60 = v14;
  *((void *)&v60 + 1) = v15;
  *(void *)&long long v61 = v18;
  *((void *)&v61 + 1) = v17;
  sub_1000361E0(v14, v15);
  sub_1000361E0(v18, v17);
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100010324(v19, (uint64_t)qword_10170F068);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v45 = v20;
    uint64_t v22 = v16;
    unint64_t v23 = v15;
    uint64_t v24 = v18;
    unint64_t v25 = v17;
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v50 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000361E0(v22, v23);
    sub_1000361E0(v24, v17);
    uint64_t v27 = sub_1010BA094();
    unint64_t v29 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v23);
    sub_10001CFB8(v24, v25);
    uint64_t v49 = sub_1008FA0F0(v27, v29, (uint64_t *)&v50);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v17 = v25;
    uint64_t v18 = v24;
    unint64_t v15 = v23;
    uint64_t v16 = v22;
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v15);
    sub_10001CFB8(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v22, v15);
    sub_10001CFB8(v18, v17);
    _os_log_impl((void *)&_mh_execute_header, v45, v21, "BAARKProperties %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v16, v15);
    sub_10001CFB8(v18, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v16, v15);
    sub_10001CFB8(v18, v17);
  }
  long long v52 = v58;
  long long v53 = v59;
  long long v54 = v60;
  long long v55 = v61;
  long long v50 = v56;
  long long v51 = v57;
  sub_10098ED58();
  uint64_t v30 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v32 = v31;
  uint64_t v34 = v48[18];
  unint64_t v33 = v48[19];
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  sub_1000361E0(v34, v33);
  sub_1000361E0(v30, v32);
  unint64_t v44 = v32;
  uint64_t v35 = Logger.logObject.getter();
  uint64_t v43 = v35;
  os_log_type_t v42 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v35, v42))
  {
    unint64_t v36 = (uint8_t *)swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    *(_DWORD *)unint64_t v36 = 136315138;
    uint64_t v49 = v41;
    *(void *)&long long v50 = v34;
    *((void *)&v50 + 1) = v33;
    *(void *)&long long v51 = v30;
    *((void *)&v51 + 1) = v44;
    sub_1000361E0(v34, v33);
    sub_1000361E0(v30, v44);
    uint64_t v37 = String.init<A>(describing:)();
    *(void *)&long long v50 = sub_1008FA0F0(v37, v38, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    _os_log_impl((void *)&_mh_execute_header, v43, v42, "BAARequestPayload %s", v36, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
    sub_10001CFB8(v34, v33);
    sub_10001CFB8(v30, v44);
  }
  *(void *)&long long v50 = v34;
  *((void *)&v50 + 1) = v33;
  *(void *)&long long v51 = v30;
  *((void *)&v51 + 1) = v44;
  sub_10098EDAC();
  uint64_t v39 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  sub_10001CFB8(v47, v46);
  swift_release();
  sub_10001CFB8(v30, v44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v34, v33);
  sub_10001CFB8(v30, v44);
  sub_1001F1080(v48);
  return v39;
}

uint64_t sub_10098A8A4(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v61 = a1;
  uint64_t v7 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v72 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v64);
  uint64_t v65 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v11 - 8);
  uint64_t v63 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v13 - 8);
  uint64_t v62 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FMNAccountType();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AirPodsUnpairEndPoint();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v66 = (uint64_t *)((char *)&v59 - v23);
  uint64_t v24 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a4;
  *(void *)(v27 + 24) = a5;
  uint64_t v73 = v27;
  unint64_t v28 = self;
  swift_retain();
  long long v60 = a5;
  id v29 = [v28 defaultStore];
  if (v29)
  {
    uint64_t v30 = v29;
    id v31 = [v29 aa_primaryAppleAccount];

    if (v31)
    {

      static os_log_type_t.default.getter();
      if (qword_101637308 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_101342130;
      sub_10001D074(v61, (uint64_t)v26, &qword_101638CF0);
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v35 = v34;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_10000B4CC();
      *(void *)(v32 + 32) = v33;
      *(void *)(v32 + 40) = v35;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = enum case for FMNAccountType.w2Accessory(_:);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 104);
      v37(v18, enum case for FMNAccountType.w2Accessory(_:), v15);
      type metadata accessor for AccountURLComponents();
      swift_allocObject();
      unint64_t v38 = sub_1010E7A64((uint64_t)v18);
      uint64_t v39 = (uint64_t)v66;
      *uint64_t v66 = v38;
      v37((char *)(v39 + *(int *)(v19 + 20)), v36, v15);
      type metadata accessor for SearchPartyURLSessionFactory(0);
      swift_allocObject();
      uint64_t v40 = type metadata accessor for FMNMockingPreferences();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v62, 1, 1, v40);
      uint64_t v41 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
      type metadata accessor for ServerInteractionController(0);
      uint64_t v42 = swift_allocObject();
      sub_10098BBCC(v39, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
      uint64_t v43 = sub_1004A3FE0((uint64_t)v22, v41, v42);
      sub_10000584C();
      static DispatchQoS.unspecified.getter();
      uint64_t v74 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_10000588C((uint64_t *)&unk_1016376F0);
      sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v67 + 104))(v68, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v69);
      unint64_t v44 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v45 = type metadata accessor for TaskPriority();
      uint64_t v46 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v72, 1, 1, v45);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = 0;
      *(void *)(v47 + 24) = 0;
      unint64_t v48 = v70;
      uint64_t v49 = v71;
      long long v50 = v70[3];
      *(_OWORD *)(v47 + 64) = v70[2];
      *(_OWORD *)(v47 + 80) = v50;
      *(_OWORD *)(v47 + 96) = v48[4];
      long long v51 = v48[1];
      *(_OWORD *)(v47 + 32) = *v48;
      *(_OWORD *)(v47 + 48) = v51;
      *(void *)(v47 + 112) = v49;
      *(void *)(v47 + 120) = v44;
      uint64_t v52 = v73;
      *(void *)(v47 + 128) = sub_10098E7A8;
      *(void *)(v47 + 136) = v52;
      *(void *)(v47 + 144) = v43;
      sub_1004AF088((uint64_t)v48);
      swift_retain();
      id v53 = v44;
      swift_retain();
      swift_retain();
      sub_1008F5E44(v46, (uint64_t)&unk_101653398, v47);

      swift_release();
      swift_release();
      sub_10098BC34(v39, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
    }
    else
    {
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v54 = type metadata accessor for Logger();
      sub_100010324(v54, (uint64_t)qword_10170F068);
      long long v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        long long v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "iCloud not signed in: Skip pairing lock removal.", v57, 2u);
        swift_slowDealloc();
      }

      swift_beginAccess();
      *(void *)(a4 + 16) = 0;
      swift_errorRelease();
      dispatch_group_leave(v60);
    }
    return swift_release();
  }
  else
  {

    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

void sub_10098B164(uint64_t a1, _OWORD *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v60 = a1;
  uint64_t v9 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v9 - 8);
  uint64_t v72 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v67 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v68 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v64);
  uint64_t v65 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  uint64_t v63 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v15 - 8);
  uint64_t v62 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for FMNAccountType();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for AirPodsUnpairEndPoint();
  uint64_t v21 = __chkstk_darwin(v59);
  uint64_t v61 = (uint64_t)&v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v66 = (NSObject **)((char *)&v58 - v23);
  uint64_t v24 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a4;
  v27[3] = a5;
  v27[4] = a6;
  unint64_t v28 = self;
  long long v58 = a4;
  swift_retain();
  swift_retain();
  id v29 = [v28 defaultStore];
  if (v29)
  {
    uint64_t v30 = v29;
    id v31 = [v29 aa_primaryAppleAccount];

    if (v31)
    {

      static os_log_type_t.default.getter();
      if (qword_101637308 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_101342130;
      sub_10001D074(v60, (uint64_t)v26, &qword_101638CF0);
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v35 = v34;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_10000B4CC();
      *(void *)(v32 + 32) = v33;
      *(void *)(v32 + 40) = v35;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      uint64_t v36 = enum case for FMNAccountType.w2Accessory(_:);
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 104);
      v37(v20, enum case for FMNAccountType.w2Accessory(_:), v17);
      type metadata accessor for AccountURLComponents();
      swift_allocObject();
      unint64_t v38 = sub_1010E7A64((uint64_t)v20);
      uint64_t v39 = (uint64_t)v66;
      *uint64_t v66 = v38;
      v37((char *)(v39 + *(int *)(v59 + 20)), v36, v17);
      type metadata accessor for SearchPartyURLSessionFactory(0);
      swift_allocObject();
      uint64_t v40 = type metadata accessor for FMNMockingPreferences();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v62, 1, 1, v40);
      uint64_t v41 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
      type metadata accessor for ServerInteractionController(0);
      uint64_t v42 = swift_allocObject();
      uint64_t v43 = v61;
      sub_10098BBCC(v39, v61, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
      uint64_t v44 = sub_1004A3FE0(v43, v41, v42);
      sub_10000584C();
      static DispatchQoS.unspecified.getter();
      uint64_t v73 = _swiftEmptyArrayStorage;
      sub_10098BA84((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
      sub_10000588C((uint64_t *)&unk_1016376F0);
      sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      (*(void (**)(char *, void, uint64_t))(v67 + 104))(v68, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v69);
      uint64_t v45 = (void *)OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
      uint64_t v46 = type metadata accessor for TaskPriority();
      uint64_t v47 = (uint64_t)v72;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v72, 1, 1, v46);
      uint64_t v48 = swift_allocObject();
      *(void *)(v48 + 16) = 0;
      *(void *)(v48 + 24) = 0;
      uint64_t v49 = v70;
      uint64_t v50 = v71;
      long long v51 = v70[3];
      *(_OWORD *)(v48 + 64) = v70[2];
      *(_OWORD *)(v48 + 80) = v51;
      *(_OWORD *)(v48 + 96) = v49[4];
      long long v52 = v49[1];
      *(_OWORD *)(v48 + 32) = *v49;
      *(_OWORD *)(v48 + 48) = v52;
      *(void *)(v48 + 112) = v50;
      *(void *)(v48 + 120) = v45;
      *(void *)(v48 + 128) = sub_10098E758;
      *(void *)(v48 + 136) = v27;
      *(void *)(v48 + 144) = v44;
      sub_1004AF088((uint64_t)v49);
      swift_retain();
      id v53 = v45;
      swift_retain();
      swift_retain();
      sub_1008F5E44(v47, (uint64_t)&unk_101653390, v48);

      swift_release();
      swift_release();
      sub_10098BC34(v39, (uint64_t (*)(void))type metadata accessor for AirPodsUnpairEndPoint);
    }
    else
    {
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v54 = type metadata accessor for Logger();
      sub_100010324(v54, (uint64_t)qword_10170F068);
      long long v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v55, v56))
      {
        long long v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)long long v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "iCloud not signed in: Skip pairing lock removal.", v57, 2u);
        swift_slowDealloc();
      }

      Transaction.capture()();
      swift_beginAccess();
      *(void *)(a6 + 16) = 0;
      swift_errorRelease();
      dispatch_group_leave(v58);
    }
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();

    __break(1u);
  }
}

void sub_10098BA4C()
{
  sub_100984014(*(void (**)())(v0 + 16));
}

uint64_t sub_10098BA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10098BA7C()
{
  return swift_release();
}

uint64_t sub_10098BA84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10098BAD0(uint64_t a1)
{
  return sub_1009834E8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098BAE0(uint64_t a1)
{
  return sub_100983880(a1, v1[2], v1[3], v1[4]);
}

void sub_10098BAEC()
{
  sub_100984014(*(void (**)())(v0 + 16));
}

uint64_t sub_10098BB0C()
{
  return sub_10099065C((void (*)(void))&_swift_errorRelease);
}

unint64_t sub_10098BB24()
{
  unint64_t result = qword_101653330;
  if (!qword_101653330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653330);
  }
  return result;
}

unint64_t sub_10098BB78()
{
  unint64_t result = qword_101653338;
  if (!qword_101653338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653338);
  }
  return result;
}

uint64_t sub_10098BBCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10098BC34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10098BC94()
{
  unint64_t result = qword_101653348;
  if (!qword_101653348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101653348);
  }
  return result;
}

uint64_t sub_10098BCE8()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10001CFB8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_10001CFB8(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_10001CFB8(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_10001CFB8(*(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  unint64_t v1 = *(void *)(v0 + 200);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 192), v1);
  }
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v0 + 232);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 224), v2);
  }
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 280, 7);
}

uint64_t sub_10098BDC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[30];
  uint64_t v7 = v1[31];
  uint64_t v8 = v1[32];
  uint64_t v9 = v1[33];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10001D2E4;
  return sub_1009846E0(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, v9);
}

void *sub_10098BEB8(void *a1)
{
  uint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v7 = a1[10];
  unint64_t v6 = a1[11];
  uint64_t v8 = a1[12];
  unint64_t v10 = a1[13];
  unint64_t v11 = a1[15];
  uint64_t v12 = a1[14];
  unint64_t v13 = a1[17];
  uint64_t v14 = a1[16];
  unint64_t v15 = a1[19];
  uint64_t v16 = a1[18];
  unint64_t v17 = a1[21];
  uint64_t v18 = a1[20];
  unint64_t v19 = a1[25];
  uint64_t v20 = a1[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v2, v3);
  sub_1000361E0(v4, v5);
  sub_1000361E0(v7, v6);
  sub_1000361E0(v8, v10);
  sub_1000361E0(v12, v11);
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_100037A38(v18, v17);
  swift_bridgeObjectRetain();
  sub_100037A38(v20, v19);
  return a1;
}

uint64_t sub_10098BFD8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x644974726170 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74617453636E7973 && a2 == 0xEA00000000007375 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657264644163616DLL && a2 == 0xEA00000000007373 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x54676E6972696170 && a2 == 0xEB00000000657079)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10098C1B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684628325 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644970696863 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449616E6D66 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49746375646F7270 && a2 == 0xE900000000000064 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6449726F646E6576 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_10098C43C(void *a1, uint64_t a2)
{
  v74[3] = &type metadata for AirPodsLEPairingCheckData;
  v74[4] = &off_1015DF7F8;
  uint64_t v4 = (void *)swift_allocObject();
  v74[0] = v4;
  memcpy(v4 + 2, a1, 0x160uLL);
  uint64_t v72 = type metadata accessor for AirPodsLEPairingLockCheckResponse();
  uint64_t v73 = &off_1015FF648;
  unint64_t v5 = sub_10001D958(v71);
  sub_10098BBCC(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckResponse);
  sub_10098EE00((uint64_t *)a1);
  static os_log_type_t.debug.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v66 = sub_10001CD44(v74, (uint64_t)&type metadata for AirPodsLEPairingCheckData);
  uint64_t v7 = v4[32];
  unint64_t v8 = v4[33];
  sub_1000361E0(v7, v8);
  uint64_t v9 = Data.hexString.getter();
  uint64_t v11 = v10;
  sub_10001CFB8(v7, v8);
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v67 = sub_10000B4CC();
  *(void *)(v6 + 64) = v67;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v68 = v4;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101342130;
  uint64_t v65 = sub_10001CD44(v71, v72);
  uint64_t v14 = v5[4];
  unint64_t v13 = v5[5];
  sub_1000361E0(v14, v13);
  uint64_t v15 = Data.hexString.getter();
  uint64_t v17 = v16;
  sub_10001CFB8(v14, v13);
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = v67;
  *(void *)(v12 + 32) = v15;
  *(void *)(v12 + 40) = v17;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_101342130;
  uint64_t v19 = *v5;
  unint64_t v20 = v5[1];
  sub_1000361E0(*v5, v20);
  uint64_t v21 = Data.hexString.getter();
  uint64_t v23 = v22;
  sub_10001CFB8(v19, v20);
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = v67;
  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = v23;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_101342130;
  uint64_t v25 = v5[2];
  unint64_t v26 = v5[3];
  sub_1000361E0(v25, v26);
  uint64_t v27 = Data.hexString.getter();
  uint64_t v29 = v28;
  sub_10001CFB8(v25, v26);
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = v67;
  *(void *)(v24 + 32) = v27;
  *(void *)(v24 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_101342130;
  uint64_t v31 = v4[26];
  unint64_t v32 = v4[27];
  sub_1000361E0(v68[26], v68[27]);
  uint64_t v33 = Data.hexString.getter();
  uint64_t v35 = v34;
  sub_10001CFB8(v31, v32);
  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = v67;
  *(void *)(v30 + 32) = v33;
  *(void *)(v30 + 40) = v35;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_101342130;
  uint64_t v37 = v4[2];
  unint64_t v38 = v4[3];
  sub_1000361E0(v68[2], v68[3]);
  uint64_t v39 = Data.hexString.getter();
  uint64_t v41 = v40;
  sub_10001CFB8(v37, v38);
  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = v67;
  *(void *)(v36 + 32) = v39;
  *(void *)(v36 + 40) = v41;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_101342130;
  uint64_t v43 = v5[6];
  unint64_t v44 = v5[7];
  sub_1000361E0(v43, v44);
  uint64_t v45 = Data.hexString.getter();
  uint64_t v47 = v46;
  sub_10001CFB8(v43, v44);
  *(void *)(v42 + 56) = &type metadata for String;
  *(void *)(v42 + 64) = v67;
  *(void *)(v42 + 32) = v45;
  *(void *)(v42 + 40) = v47;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v69 = v66[30];
  unint64_t v70 = v66[31];
  uint64_t v48 = v65[4];
  unint64_t v49 = v65[5];
  sub_1000361E0(v69, v70);
  sub_1000361E0(v48, v49);
  Data.append(_:)();
  sub_10001CFB8(v48, v49);
  uint64_t v50 = *v5;
  unint64_t v51 = v5[1];
  sub_1000361E0(*v5, v51);
  Data.append(_:)();
  sub_10001CFB8(v50, v51);
  uint64_t v52 = v5[2];
  unint64_t v53 = v5[3];
  sub_1000361E0(v52, v53);
  Data.append(_:)();
  sub_10001CFB8(v52, v53);
  uint64_t v54 = v4[26];
  unint64_t v55 = v4[27];
  sub_1000361E0(v68[26], v68[27]);
  Data.append(_:)();
  sub_10001CFB8(v54, v55);
  uint64_t v57 = v4[2];
  unint64_t v56 = v4[3];
  sub_1000361E0(v57, v56);
  Data.append(_:)();
  sub_10001CFB8(v57, v56);
  uint64_t v58 = v5[6];
  unint64_t v59 = v5[7];
  sub_1000361E0(v58, v59);
  Data.append(_:)();
  sub_10001CFB8(v58, v59);
  static os_log_type_t.debug.getter();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_101342130;
  sub_1000361E0(v69, v70);
  uint64_t v61 = Data.hexString.getter();
  uint64_t v63 = v62;
  sub_10001CFB8(v69, v70);
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = v67;
  *(void *)(v60 + 32) = v61;
  *(void *)(v60 + 40) = v63;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v74);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v71);
  return v69;
}

uint64_t sub_10098CBDC(void *a1, uint64_t a2)
{
  v93[3] = &type metadata for AirPodsSWPairingCheckData;
  v93[4] = &off_1015DF7D8;
  uint64_t v85 = (void *)swift_allocObject();
  v93[0] = v85;
  memcpy(v85 + 2, a1, 0x150uLL);
  uint64_t v91 = type metadata accessor for AirPodsSWPairingLockCheckResponse();
  unint64_t v92 = &off_1015FA2F8;
  uint64_t v4 = sub_10001D958(v90);
  sub_10098BBCC(a2, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockCheckResponse);
  sub_100990058((uint64_t *)a1);
  if (qword_101637320 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170F098);
  sub_10001D010((uint64_t)v93, (uint64_t)v88);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 136315138;
    uint64_t v9 = sub_10001CD44(v88, v89);
    uint64_t v10 = v9[34];
    unint64_t v11 = v9[35];
    sub_1000361E0(v10, v11);
    uint64_t v12 = Data.hexString.getter();
    unint64_t v14 = v13;
    sub_10001CFB8(v10, v11);
    sub_1008FA0F0(v12, v14, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "nonce: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  sub_10001D010((uint64_t)v90, (uint64_t)v88);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v18 = sub_10001CD44(v88, v89);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_1000361E0(*v18, v20);
    uint64_t v21 = Data.hexString.getter();
    unint64_t v23 = v22;
    sub_10001CFB8(v19, v20);
    sub_1008FA0F0(v21, v23, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "serialNumber: %s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  sub_10001D010((uint64_t)v90, (uint64_t)v88);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    unint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v26 = 136315138;
    uint64_t v27 = sub_10001CD44(v88, v89);
    uint64_t v28 = v27[2];
    unint64_t v29 = v27[3];
    sub_1000361E0(v28, v29);
    uint64_t v30 = Data.hexString.getter();
    unint64_t v32 = v31;
    sub_10001CFB8(v28, v29);
    sub_1008FA0F0(v30, v32, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "altSerialNumber: %s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  sub_10001D010((uint64_t)v93, (uint64_t)v88);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v36 = sub_10001CD44(v88, v89);
    uint64_t v37 = v36[24];
    unint64_t v38 = v36[25];
    sub_1000361E0(v37, v38);
    uint64_t v39 = Data.hexString.getter();
    unint64_t v41 = v40;
    sub_10001CFB8(v37, v38);
    sub_1008FA0F0(v39, v41, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "SeedK1: %s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  sub_10001D010((uint64_t)v93, (uint64_t)v88);
  uint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v42, v43))
  {
    unint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v44 = 136315138;
    uint64_t v45 = sub_10001CD44(v88, v89);
    uint64_t v46 = *v45;
    unint64_t v47 = v45[1];
    sub_1000361E0(*v45, v47);
    uint64_t v48 = Data.hexString.getter();
    unint64_t v50 = v49;
    sub_10001CFB8(v46, v47);
    sub_1008FA0F0(v48, v50, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "H1 (hashed C2): %s", v44, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  sub_10001D010((uint64_t)v90, (uint64_t)v88);
  unint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v51, v52))
  {
    unint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v53 = 136315138;
    uint64_t v54 = sub_10001CD44(v88, v89);
    uint64_t v55 = v54[4];
    unint64_t v56 = v54[5];
    sub_1000361E0(v55, v56);
    uint64_t v57 = Data.hexString.getter();
    unint64_t v59 = v58;
    sub_10001CFB8(v55, v56);
    sub_1008FA0F0(v57, v59, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "SeedS: %s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v88);
  }

  uint64_t v60 = v85;
  unint64_t v62 = v85[37];
  uint64_t v86 = v85[36];
  uint64_t v61 = v86;
  unint64_t v87 = v62;
  uint64_t v63 = sub_10001CD44(v90, v91);
  uint64_t v64 = *v63;
  unint64_t v65 = v63[1];
  sub_1000361E0(v61, v62);
  sub_1000361E0(v64, v65);
  Data.append(_:)();
  sub_10001CFB8(v64, v65);
  uint64_t v66 = sub_10001CD44(v90, v91);
  uint64_t v67 = v66[2];
  unint64_t v68 = v66[3];
  sub_1000361E0(v67, v68);
  Data.append(_:)();
  sub_10001CFB8(v67, v68);
  uint64_t v69 = v85[26];
  unint64_t v70 = v85[27];
  sub_1000361E0(v60[26], v60[27]);
  Data.append(_:)();
  sub_10001CFB8(v69, v70);
  uint64_t v71 = v85[2];
  unint64_t v72 = v85[3];
  sub_1000361E0(v60[2], v60[3]);
  Data.append(_:)();
  sub_10001CFB8(v71, v72);
  uint64_t v73 = sub_10001CD44(v90, v91);
  uint64_t v74 = v73[4];
  unint64_t v75 = v73[5];
  sub_1000361E0(v74, v75);
  Data.append(_:)();
  sub_10001CFB8(v74, v75);
  uint64_t v76 = v86;
  unint64_t v77 = v87;
  sub_1000361E0(v86, v87);
  sub_1000361E0(v76, v77);
  uint64_t v78 = Logger.logObject.getter();
  os_log_type_t v79 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v78, v79))
  {
    uint64_t v80 = (uint8_t *)swift_slowAlloc();
    v88[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v80 = 136315138;
    uint64_t v81 = Data.hexString.getter();
    sub_1008FA0F0(v81, v82, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v76, v77);
    sub_10001CFB8(v76, v77);
    _os_log_impl((void *)&_mh_execute_header, v78, v79, "dataForSignatureVerification: %s", v80, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001CFB8(v76, v77);
    sub_10001CFB8(v76, v77);
  }

  swift_beginAccess();
  uint64_t v83 = v86;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v93);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v90);
  return v83;
}

uint64_t sub_10098D788(void *a1, uint64_t a2)
{
  v74[3] = &type metadata for AirPodsPairingCheckData;
  v74[4] = &off_1015DF818;
  uint64_t v4 = (void *)swift_allocObject();
  v74[0] = v4;
  memcpy(v4 + 2, a1, 0x140uLL);
  uint64_t v72 = type metadata accessor for AirPodsPairingLockCheckResponse();
  uint64_t v73 = &off_1016013B8;
  uint64_t v5 = sub_10001D958(v71);
  sub_10098BBCC(a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckResponse);
  sub_10084E77C((uint64_t *)a1);
  static os_log_type_t.debug.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v66 = sub_10001CD44(v74, (uint64_t)&type metadata for AirPodsPairingCheckData);
  uint64_t v7 = v4[32];
  unint64_t v8 = v4[33];
  sub_1000361E0(v7, v8);
  uint64_t v9 = Data.hexString.getter();
  uint64_t v11 = v10;
  sub_10001CFB8(v7, v8);
  *(void *)(v6 + 56) = &type metadata for String;
  unint64_t v67 = sub_10000B4CC();
  *(void *)(v6 + 64) = v67;
  *(void *)(v6 + 32) = v9;
  *(void *)(v6 + 40) = v11;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  unint64_t v68 = v4;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101342130;
  unint64_t v65 = sub_10001CD44(v71, v72);
  uint64_t v14 = v5[4];
  unint64_t v13 = v5[5];
  sub_1000361E0(v14, v13);
  uint64_t v15 = Data.hexString.getter();
  uint64_t v17 = v16;
  sub_10001CFB8(v14, v13);
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = v67;
  *(void *)(v12 + 32) = v15;
  *(void *)(v12 + 40) = v17;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_101342130;
  uint64_t v19 = *v5;
  unint64_t v20 = v5[1];
  sub_1000361E0(*v5, v20);
  uint64_t v21 = Data.hexString.getter();
  uint64_t v23 = v22;
  sub_10001CFB8(v19, v20);
  *(void *)(v18 + 56) = &type metadata for String;
  *(void *)(v18 + 64) = v67;
  *(void *)(v18 + 32) = v21;
  *(void *)(v18 + 40) = v23;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_101342130;
  uint64_t v25 = v5[2];
  unint64_t v26 = v5[3];
  sub_1000361E0(v25, v26);
  uint64_t v27 = Data.hexString.getter();
  uint64_t v29 = v28;
  sub_10001CFB8(v25, v26);
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 64) = v67;
  *(void *)(v24 + 32) = v27;
  *(void *)(v24 + 40) = v29;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_101342130;
  uint64_t v31 = v4[26];
  unint64_t v32 = v4[27];
  sub_1000361E0(v68[26], v68[27]);
  uint64_t v33 = Data.hexString.getter();
  uint64_t v35 = v34;
  sub_10001CFB8(v31, v32);
  *(void *)(v30 + 56) = &type metadata for String;
  *(void *)(v30 + 64) = v67;
  *(void *)(v30 + 32) = v33;
  *(void *)(v30 + 40) = v35;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_101342130;
  uint64_t v37 = v4[2];
  unint64_t v38 = v4[3];
  sub_1000361E0(v68[2], v68[3]);
  uint64_t v39 = Data.hexString.getter();
  uint64_t v41 = v40;
  sub_10001CFB8(v37, v38);
  *(void *)(v36 + 56) = &type metadata for String;
  *(void *)(v36 + 64) = v67;
  *(void *)(v36 + 32) = v39;
  *(void *)(v36 + 40) = v41;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_log_type_t.debug.getter();
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_101342130;
  uint64_t v43 = v5[6];
  unint64_t v44 = v5[7];
  sub_1000361E0(v43, v44);
  uint64_t v45 = Data.hexString.getter();
  uint64_t v47 = v46;
  sub_10001CFB8(v43, v44);
  *(void *)(v42 + 56) = &type metadata for String;
  *(void *)(v42 + 64) = v67;
  *(void *)(v42 + 32) = v45;
  *(void *)(v42 + 40) = v47;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v69 = v66[30];
  unint64_t v70 = v66[31];
  uint64_t v48 = v65[4];
  unint64_t v49 = v65[5];
  sub_1000361E0(v69, v70);
  sub_1000361E0(v48, v49);
  Data.append(_:)();
  sub_10001CFB8(v48, v49);
  uint64_t v50 = *v5;
  unint64_t v51 = v5[1];
  sub_1000361E0(*v5, v51);
  Data.append(_:)();
  sub_10001CFB8(v50, v51);
  uint64_t v52 = v5[2];
  unint64_t v53 = v5[3];
  sub_1000361E0(v52, v53);
  Data.append(_:)();
  sub_10001CFB8(v52, v53);
  uint64_t v54 = v4[26];
  unint64_t v55 = v4[27];
  sub_1000361E0(v68[26], v68[27]);
  Data.append(_:)();
  sub_10001CFB8(v54, v55);
  uint64_t v57 = v4[2];
  unint64_t v56 = v4[3];
  sub_1000361E0(v57, v56);
  Data.append(_:)();
  sub_10001CFB8(v57, v56);
  uint64_t v58 = v5[6];
  unint64_t v59 = v5[7];
  sub_1000361E0(v58, v59);
  Data.append(_:)();
  sub_10001CFB8(v58, v59);
  static os_log_type_t.debug.getter();
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_101342130;
  sub_1000361E0(v69, v70);
  uint64_t v61 = Data.hexString.getter();
  uint64_t v63 = v62;
  sub_10001CFB8(v69, v70);
  *(void *)(v60 + 56) = &type metadata for String;
  *(void *)(v60 + 64) = v67;
  *(void *)(v60 + 32) = v61;
  *(void *)(v60 + 40) = v63;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v74);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v71);
  return v69;
}

uint64_t sub_10098DF28()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653368, 6);
}

uint64_t sub_10098DF54(uint64_t a1)
{
  return sub_100984D88(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098DF64(uint64_t (*a1)())
{
  return sub_100985118(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098DF70()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653368, 1);
}

uint64_t sub_10098DF98()
{
  unint64_t v1 = (int *)(type metadata accessor for AirPodsPairingLockAckResponse() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)v6, *(void *)(v6 + 8));
  sub_10001CFB8(*(void *)(v6 + 16), *(void *)(v6 + 24));
  sub_10001CFB8(*(void *)(v6 + 32), *(void *)(v6 + 40));
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_10098E0A4()
{
  return sub_10098ECB0((uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckResponse, &qword_101653368, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockAckResponse);
}

uint64_t sub_10098E0D8()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653368, 5);
}

uint64_t sub_10098E100()
{
  swift_unknownObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  unint64_t v1 = *(void *)(v0 + 72);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 64), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 136), *(void *)(v0 + 144));
  sub_10001CFB8(*(void *)(v0 + 152), *(void *)(v0 + 160));
  sub_10001CFB8(*(void *)(v0 + 168), *(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 224), *(void *)(v0 + 232));
  sub_10001CFB8(*(void *)(v0 + 240), *(void *)(v0 + 248));
  sub_10001CFB8(*(void *)(v0 + 256), *(void *)(v0 + 264));
  sub_10001CFB8(*(void *)(v0 + 272), *(void *)(v0 + 280));
  sub_10001CFB8(*(void *)(v0 + 288), *(void *)(v0 + 296));
  unint64_t v2 = *(void *)(v0 + 312);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 304), v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 344);
  if (v3 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 336), v3);
  }
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 416, 7);
}

uint64_t sub_10098E228(uint64_t a1)
{
  uint64_t v4 = v1[3];
  uint64_t v11 = v1[2];
  uint64_t v5 = v1[44];
  uint64_t v6 = v1[45];
  uint64_t v7 = v1[46];
  uint64_t v8 = v1[47];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100033F68;
  return sub_10097F860(a1, v11, v4, (uint64_t)(v1 + 4), v5, v6, v7, v8);
}

uint64_t sub_10098E32C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 6);
}

uint64_t sub_10098E358(uint64_t a1)
{
  return sub_100980264(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098E364()
{
  swift_release();
  sub_10001CFB8(*(void *)(v0 + 24), *(void *)(v0 + 32));
  sub_10001CFB8(*(void *)(v0 + 40), *(void *)(v0 + 48));
  unint64_t v1 = *(void *)(v0 + 64);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 56), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_10001CFB8(*(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 216), *(void *)(v0 + 224));
  sub_10001CFB8(*(void *)(v0 + 232), *(void *)(v0 + 240));
  sub_10001CFB8(*(void *)(v0 + 248), *(void *)(v0 + 256));
  sub_10001CFB8(*(void *)(v0 + 264), *(void *)(v0 + 272));
  sub_10001CFB8(*(void *)(v0 + 280), *(void *)(v0 + 288));
  unint64_t v2 = *(void *)(v0 + 304);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 296), v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 336);
  if (v3 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 328), v3);
  }

  swift_release();

  return _swift_deallocObject(v0, 376, 7);
}

uint64_t sub_10098E474(uint64_t a1)
{
  return sub_1009805F4(a1, v1[2], v1 + 3, v1[43], v1[44], v1[45]);
}

uint64_t sub_10098E488()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 1);
}

uint64_t sub_10098E4B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10098E4E8()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 21);
}

uint64_t sub_10098E510()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 22);
}

uint64_t sub_10098E538()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 18);
}

uint64_t sub_10098E560()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 24);
}

uint64_t sub_10098E588()
{
  return sub_10099065C((void (*)(void))&_swift_release);
}

uint64_t sub_10098E5A0()
{
  return sub_100982D3C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_101653370, (void (*)(void))type metadata accessor for AirPodsPairingLockCheckResponse, (uint64_t (*)(void))type metadata accessor for AirPodsPairingLockCheckResponse);
}

uint64_t sub_10098E5F0()
{
  sub_10001CFB8(v0[2], v0[3]);
  sub_10001CFB8(v0[4], v0[5]);
  unint64_t v1 = v0[7];
  if (v1 >> 60 != 15) {
    sub_10001CFB8(v0[6], v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[15], v0[16]);
  sub_10001CFB8(v0[17], v0[18]);
  sub_10001CFB8(v0[19], v0[20]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[26], v0[27]);
  sub_10001CFB8(v0[28], v0[29]);
  sub_10001CFB8(v0[30], v0[31]);
  sub_10001CFB8(v0[32], v0[33]);
  sub_10001CFB8(v0[34], v0[35]);
  unint64_t v2 = v0[37];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(v0[36], v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = v0[41];
  if (v3 >> 60 != 15) {
    sub_10001CFB8(v0[40], v3);
  }

  return _swift_deallocObject(v0, 336, 7);
}

uint64_t sub_10098E6E8()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101653370, 5);
}

uint64_t sub_10098E710()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10098E758(uint64_t a1)
{
  sub_100E0F464(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10098E768()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10098E7A8(uint64_t a1)
{
  return sub_10065A720(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10098E7B4()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 152, 7);
}

uint64_t sub_10098E834()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10001CFB8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_10001CFB8(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_10001CFB8(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_10001CFB8(*(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  sub_10001CFB8(*(void *)(v0 + 192), *(void *)(v0 + 200));
  sub_10001CFB8(*(void *)(v0 + 208), *(void *)(v0 + 216));
  unint64_t v1 = *(void *)(v0 + 232);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 224), v1);
  }
  sub_10001CFB8(*(void *)(v0 + 240), *(void *)(v0 + 248));
  sub_10001CFB8(*(void *)(v0 + 256), *(void *)(v0 + 264));
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v0 + 296);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 288), v2);
  }
  sub_10001CFB8(*(void *)(v0 + 304), *(void *)(v0 + 312));
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 360, 7);
}

uint64_t sub_10098E93C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[38];
  uint64_t v7 = v1[39];
  uint64_t v8 = v1[40];
  uint64_t v9 = v1[41];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100033F68;
  return sub_100985D7C(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, v9);
}

uint64_t sub_10098EA3C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C690, 6);
}

uint64_t sub_10098EA68(void *a1)
{
  return sub_100986498(a1, v1[2], v1[3], v1[4], "Ack pairing failed. %{public}s", (uint64_t)&unk_1015DE620, (uint64_t)sub_10098ED30, (uint64_t)&unk_1015DE638);
}

uint64_t sub_10098EAB8(uint64_t (*a1)())
{
  return sub_100986904(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098EAC4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C690, 1);
}

uint64_t sub_10098EAEC()
{
  uint64_t v1 = type metadata accessor for AirPodsLEPairingLockAckResponse();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = (uint64_t *)(v0 + v3);
  unint64_t v6 = *(void *)(v0 + v3 + 8);
  if (v6 >> 60 != 15) {
    sub_10001CFB8(*v5, v6);
  }
  unint64_t v7 = v5[3];
  if (v7 >> 60 != 15) {
    sub_10001CFB8(v5[2], v7);
  }
  unint64_t v8 = v5[5];
  if (v8 >> 60 != 15) {
    sub_10001CFB8(v5[4], v8);
  }
  uint64_t v9 = (char *)v5 + *(int *)(v1 + 28);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10)) {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10098EC7C()
{
  return sub_10098ECB0((uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckResponse, &qword_10163C690, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockAckResponse);
}

uint64_t sub_10098ECB0(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = *(void *)(a1(0) - 8);
  return sub_100988EF0(*(void (**)(char *))(v3 + 16), *(void *)(v3 + 24), v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a2, a3);
}

uint64_t sub_10098ED30()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C690, 5);
}

unint64_t sub_10098ED58()
{
  unint64_t result = qword_1016533B8;
  if (!qword_1016533B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016533B8);
  }
  return result;
}

unint64_t sub_10098EDAC()
{
  unint64_t result = qword_1016533C0;
  if (!qword_1016533C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016533C0);
  }
  return result;
}

uint64_t *sub_10098EE00(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  unint64_t v23 = a1[35];
  uint64_t v24 = a1[34];
  unint64_t v25 = a1[39];
  uint64_t v26 = a1[38];
  unint64_t v27 = a1[41];
  uint64_t v28 = a1[40];
  unint64_t v29 = a1[43];
  uint64_t v30 = a1[42];
  sub_1000361E0(*a1, a1[1]);
  sub_1000361E0(v2, v3);
  sub_100037A38(v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v6, v7);
  sub_1000361E0(v10, v9);
  sub_1000361E0(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  sub_1000361E0(v20, v19);
  sub_1000361E0(v22, v21);
  sub_100037A38(v24, v23);
  swift_bridgeObjectRetain();
  sub_100037A38(v26, v25);
  sub_1000361E0(v28, v27);
  sub_1000361E0(v30, v29);
  return a1;
}

uint64_t *sub_10098EFB0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  unint64_t v23 = a1[35];
  uint64_t v24 = a1[34];
  unint64_t v25 = a1[39];
  uint64_t v26 = a1[38];
  unint64_t v27 = a1[41];
  uint64_t v28 = a1[40];
  unint64_t v29 = a1[43];
  uint64_t v30 = a1[42];
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(v2, v3);
  sub_100037A24(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v6, v7);
  sub_10001CFB8(v10, v9);
  sub_10001CFB8(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v14, v13);
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v20, v19);
  sub_10001CFB8(v22, v21);
  sub_100037A24(v24, v23);
  swift_bridgeObjectRelease();
  sub_100037A24(v26, v25);
  sub_10001CFB8(v28, v27);
  sub_10001CFB8(v30, v29);
  return a1;
}

uint64_t sub_10098F160()
{
  swift_unknownObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  unint64_t v1 = *(void *)(v0 + 72);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 64), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 136), *(void *)(v0 + 144));
  sub_10001CFB8(*(void *)(v0 + 152), *(void *)(v0 + 160));
  sub_10001CFB8(*(void *)(v0 + 168), *(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 224), *(void *)(v0 + 232));
  sub_10001CFB8(*(void *)(v0 + 240), *(void *)(v0 + 248));
  sub_10001CFB8(*(void *)(v0 + 256), *(void *)(v0 + 264));
  sub_10001CFB8(*(void *)(v0 + 272), *(void *)(v0 + 280));
  sub_10001CFB8(*(void *)(v0 + 288), *(void *)(v0 + 296));
  unint64_t v2 = *(void *)(v0 + 312);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 304), v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 344);
  if (v3 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 336), v3);
  }
  sub_10001CFB8(*(void *)(v0 + 352), *(void *)(v0 + 360));
  sub_10001CFB8(*(void *)(v0 + 368), *(void *)(v0 + 376));
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 400), *(void *)(v0 + 408));
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 472, 7);
}

uint64_t sub_10098F2A0(uint64_t a1)
{
  uint64_t v12 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v4 = v1[48];
  uint64_t v5 = v1[49];
  uint64_t v6 = v1[50];
  uint64_t v7 = v1[51];
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unint64_t v8 = v2;
  v8[1] = sub_100033F68;
  return sub_10097718C(a1, v12, v10, (uint64_t)(v1 + 4), v4, v5, v6, v7);
}

uint64_t sub_10098F3C8()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 6);
}

uint64_t sub_10098F3F4(void *a1)
{
  return sub_100986498(a1, v1[2], v1[3], v1[4], "Error in verify pairing request. Error - %{public}s", (uint64_t)&unk_1015DEA30, (uint64_t)sub_10098F804, (uint64_t)&unk_1015DEA48);
}

uint64_t sub_10098F440()
{
  swift_release();
  swift_release();
  sub_10001CFB8(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_10001CFB8(*(void *)(v0 + 72), *(void *)(v0 + 80));
  unint64_t v1 = *(void *)(v0 + 96);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 88), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  sub_10001CFB8(*(void *)(v0 + 192), *(void *)(v0 + 200));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 248), *(void *)(v0 + 256));
  sub_10001CFB8(*(void *)(v0 + 264), *(void *)(v0 + 272));
  sub_10001CFB8(*(void *)(v0 + 280), *(void *)(v0 + 288));
  sub_10001CFB8(*(void *)(v0 + 296), *(void *)(v0 + 304));
  sub_10001CFB8(*(void *)(v0 + 312), *(void *)(v0 + 320));
  unint64_t v2 = *(void *)(v0 + 336);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 328), v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = *(void *)(v0 + 368);
  if (v3 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 360), v3);
  }
  sub_10001CFB8(*(void *)(v0 + 376), *(void *)(v0 + 384));
  sub_10001CFB8(*(void *)(v0 + 392), *(void *)(v0 + 400));

  return _swift_deallocObject(v0, 416, 7);
}

uint64_t sub_10098F560(unint64_t a1)
{
  return sub_1009780E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), (uint64_t *)(v1 + 56));
}

uint64_t sub_10098F57C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 1);
}

uint64_t sub_10098F5A4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 21);
}

uint64_t sub_10098F5CC()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 22);
}

uint64_t sub_10098F5F4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 18);
}

uint64_t sub_10098F61C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 24);
}

uint64_t sub_10098F644()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 23);
}

uint64_t sub_10098F66C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 25);
}

uint64_t sub_10098F694()
{
  return sub_10099065C((void (*)(void))&_swift_release);
}

uint64_t sub_10098F6AC()
{
  return sub_100982D3C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_10163C678, (void (*)(void))type metadata accessor for AirPodsLEPairingLockCheckResponse, (uint64_t (*)(void))type metadata accessor for AirPodsLEPairingLockCheckResponse);
}

uint64_t sub_10098F6FC()
{
  sub_10001CFB8(v0[2], v0[3]);
  sub_10001CFB8(v0[4], v0[5]);
  unint64_t v1 = v0[7];
  if (v1 >> 60 != 15) {
    sub_10001CFB8(v0[6], v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[15], v0[16]);
  sub_10001CFB8(v0[17], v0[18]);
  sub_10001CFB8(v0[19], v0[20]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[26], v0[27]);
  sub_10001CFB8(v0[28], v0[29]);
  sub_10001CFB8(v0[30], v0[31]);
  sub_10001CFB8(v0[32], v0[33]);
  sub_10001CFB8(v0[34], v0[35]);
  unint64_t v2 = v0[37];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(v0[36], v2);
  }
  swift_bridgeObjectRelease();
  unint64_t v3 = v0[41];
  if (v3 >> 60 != 15) {
    sub_10001CFB8(v0[40], v3);
  }
  sub_10001CFB8(v0[42], v0[43]);
  sub_10001CFB8(v0[44], v0[45]);

  return _swift_deallocObject(v0, 368, 7);
}

uint64_t sub_10098F804()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_10163C678, 5);
}

uint64_t sub_10098F82C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10001CFB8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_10001CFB8(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_10001CFB8(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_10001CFB8(*(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  sub_10001CFB8(*(void *)(v0 + 192), *(void *)(v0 + 200));
  sub_10001CFB8(*(void *)(v0 + 208), *(void *)(v0 + 216));
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 248);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 240), v1);
  }
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 296, 7);
}

uint64_t sub_10098F904(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[32];
  uint64_t v7 = v1[33];
  uint64_t v8 = v1[34];
  uint64_t v9 = v1[35];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100033F68;
  return sub_100987668(a1, v4, v5, (uint64_t)(v1 + 4), v6, v7, v8, v9);
}

void *sub_10098F9F4(void *a1)
{
  uint64_t v2 = a1[6];
  unint64_t v3 = a1[7];
  uint64_t v4 = a1[8];
  unint64_t v5 = a1[9];
  uint64_t v6 = a1[10];
  unint64_t v7 = a1[11];
  uint64_t v8 = a1[12];
  unint64_t v10 = a1[13];
  unint64_t v11 = a1[15];
  uint64_t v12 = a1[14];
  unint64_t v13 = a1[17];
  uint64_t v14 = a1[16];
  unint64_t v15 = a1[19];
  uint64_t v16 = a1[18];
  unint64_t v17 = a1[21];
  uint64_t v18 = a1[20];
  unint64_t v19 = a1[23];
  uint64_t v20 = a1[22];
  uint64_t v22 = a1[26];
  unint64_t v21 = a1[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v2, v3);
  sub_1000361E0(v4, v5);
  sub_1000361E0(v6, v7);
  sub_1000361E0(v8, v10);
  sub_1000361E0(v12, v11);
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  sub_1000361E0(v20, v19);
  swift_bridgeObjectRetain();
  sub_100037A38(v22, v21);
  return a1;
}

uint64_t sub_10098FB30()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639B48, 6);
}

uint64_t sub_10098FB5C(uint64_t a1)
{
  return sub_100987D5C(a1, v1[2], v1[3], v1[4], "Ack pairing failed. %{public}@", (uint64_t)&unk_1015DEC38, (uint64_t)sub_10098FDF4, (uint64_t)&unk_1015DEC50);
}

uint64_t sub_10098FBAC(uint64_t (*a1)())
{
  return sub_1009881AC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10098FBB8()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639B48, 1);
}

uint64_t sub_10098FBE0()
{
  uint64_t v1 = type metadata accessor for AirPodsSWPairingLockAckResponse();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  unint64_t v5 = (uint64_t *)(v0 + v3);
  unint64_t v6 = *(void *)(v0 + v3 + 8);
  if (v6 >> 60 != 15) {
    sub_10001CFB8(*v5, v6);
  }
  unint64_t v7 = v5[3];
  if (v7 >> 60 != 15) {
    sub_10001CFB8(v5[2], v7);
  }
  uint64_t v8 = (char *)v5 + *(int *)(v1 + 24);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_10098FD58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10098FDC0()
{
  return sub_10098ECB0((uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockAckResponse, &qword_101639B48, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockAckResponse);
}

uint64_t sub_10098FDF4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639B48, 5);
}

uint64_t sub_10098FE1C()
{
  swift_unknownObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  unint64_t v1 = *(void *)(v0 + 72);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 64), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 136), *(void *)(v0 + 144));
  sub_10001CFB8(*(void *)(v0 + 152), *(void *)(v0 + 160));
  sub_10001CFB8(*(void *)(v0 + 168), *(void *)(v0 + 176));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 224), *(void *)(v0 + 232));
  sub_10001CFB8(*(void *)(v0 + 240), *(void *)(v0 + 248));
  sub_10001CFB8(*(void *)(v0 + 256), *(void *)(v0 + 264));
  sub_10001CFB8(*(void *)(v0 + 272), *(void *)(v0 + 280));
  sub_10001CFB8(*(void *)(v0 + 288), *(void *)(v0 + 296));
  sub_10001CFB8(*(void *)(v0 + 304), *(void *)(v0 + 312));
  sub_10001CFB8(*(void *)(v0 + 320), *(void *)(v0 + 328));
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v0 + 360);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 352), v2);
  }
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 440, 7);
}

uint64_t sub_10098FF3C(uint64_t a1)
{
  uint64_t v12 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v4 = v1[46];
  uint64_t v5 = v1[47];
  uint64_t v6 = v1[48];
  uint64_t v7 = v1[49];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100033F68;
  return sub_10097B048(a1, v12, v10, (uint64_t)(v1 + 4), v4, v5, v6, v7);
}

uint64_t *sub_100990058(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  unint64_t v23 = a1[35];
  uint64_t v24 = a1[34];
  unint64_t v25 = a1[37];
  uint64_t v26 = a1[36];
  uint64_t v28 = a1[40];
  unint64_t v27 = a1[41];
  sub_1000361E0(*a1, a1[1]);
  sub_1000361E0(v2, v3);
  sub_100037A38(v4, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v6, v7);
  sub_1000361E0(v10, v9);
  sub_1000361E0(v12, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v13);
  sub_1000361E0(v16, v15);
  sub_1000361E0(v18, v17);
  sub_1000361E0(v20, v19);
  sub_1000361E0(v22, v21);
  sub_1000361E0(v24, v23);
  sub_1000361E0(v26, v25);
  swift_bridgeObjectRetain();
  sub_100037A38(v28, v27);
  return a1;
}

uint64_t sub_1009901F4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 6);
}

uint64_t *sub_10099021C(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  unint64_t v5 = a1[5];
  uint64_t v6 = a1[13];
  unint64_t v7 = a1[14];
  unint64_t v9 = a1[16];
  uint64_t v10 = a1[15];
  unint64_t v11 = a1[18];
  uint64_t v12 = a1[17];
  unint64_t v13 = a1[25];
  uint64_t v14 = a1[24];
  unint64_t v15 = a1[27];
  uint64_t v16 = a1[26];
  unint64_t v17 = a1[29];
  uint64_t v18 = a1[28];
  unint64_t v19 = a1[31];
  uint64_t v20 = a1[30];
  unint64_t v21 = a1[33];
  uint64_t v22 = a1[32];
  unint64_t v23 = a1[35];
  uint64_t v24 = a1[34];
  unint64_t v25 = a1[37];
  uint64_t v26 = a1[36];
  uint64_t v28 = a1[40];
  unint64_t v27 = a1[41];
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(v2, v3);
  sub_100037A24(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v6, v7);
  sub_10001CFB8(v10, v9);
  sub_10001CFB8(v12, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v14, v13);
  sub_10001CFB8(v16, v15);
  sub_10001CFB8(v18, v17);
  sub_10001CFB8(v20, v19);
  sub_10001CFB8(v22, v21);
  sub_10001CFB8(v24, v23);
  sub_10001CFB8(v26, v25);
  swift_bridgeObjectRelease();
  sub_100037A24(v28, v27);
  return a1;
}

uint64_t sub_1009903BC(uint64_t a1)
{
  return sub_100987D5C(a1, v1[2], v1[3], v1[4], "Error in verify pairing request. Error - %{public}@", (uint64_t)&unk_1015DF048, (uint64_t)sub_1009907EC, (uint64_t)&unk_1015DF060);
}

uint64_t sub_100990408()
{
  swift_release();
  swift_release();
  sub_10001CFB8(*(void *)(v0 + 56), *(void *)(v0 + 64));
  sub_10001CFB8(*(void *)(v0 + 72), *(void *)(v0 + 80));
  unint64_t v1 = *(void *)(v0 + 96);
  if (v1 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 88), v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  sub_10001CFB8(*(void *)(v0 + 192), *(void *)(v0 + 200));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + 248), *(void *)(v0 + 256));
  sub_10001CFB8(*(void *)(v0 + 264), *(void *)(v0 + 272));
  sub_10001CFB8(*(void *)(v0 + 280), *(void *)(v0 + 288));
  sub_10001CFB8(*(void *)(v0 + 296), *(void *)(v0 + 304));
  sub_10001CFB8(*(void *)(v0 + 312), *(void *)(v0 + 320));
  sub_10001CFB8(*(void *)(v0 + 328), *(void *)(v0 + 336));
  sub_10001CFB8(*(void *)(v0 + 344), *(void *)(v0 + 352));
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void *)(v0 + 384);
  if (v2 >> 60 != 15) {
    sub_10001CFB8(*(void *)(v0 + 376), v2);
  }

  return _swift_deallocObject(v0, 400, 7);
}

uint64_t sub_100990510(uint64_t a1)
{
  return sub_10097C0D0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), (uint64_t *)(v1 + 56));
}

uint64_t sub_10099052C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 1);
}

uint64_t sub_100990554()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 21);
}

uint64_t sub_10099057C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 22);
}

uint64_t sub_1009905A4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 18);
}

uint64_t sub_1009905CC()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 24);
}

uint64_t sub_1009905F4()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 23);
}

uint64_t sub_10099061C()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 25);
}

uint64_t sub_100990644()
{
  return sub_10099065C((void (*)(void))&_swift_release);
}

uint64_t sub_10099065C(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_1009906AC()
{
  return sub_100982D3C(*(void (**)(char *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), &qword_101639BB0, (void (*)(void))type metadata accessor for AirPodsSWPairingLockCheckResponse, (uint64_t (*)(void))type metadata accessor for AirPodsSWPairingLockCheckResponse);
}

uint64_t sub_1009906FC()
{
  sub_10001CFB8(v0[2], v0[3]);
  sub_10001CFB8(v0[4], v0[5]);
  unint64_t v1 = v0[7];
  if (v1 >> 60 != 15) {
    sub_10001CFB8(v0[6], v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[15], v0[16]);
  sub_10001CFB8(v0[17], v0[18]);
  sub_10001CFB8(v0[19], v0[20]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v0[26], v0[27]);
  sub_10001CFB8(v0[28], v0[29]);
  sub_10001CFB8(v0[30], v0[31]);
  sub_10001CFB8(v0[32], v0[33]);
  sub_10001CFB8(v0[34], v0[35]);
  sub_10001CFB8(v0[36], v0[37]);
  sub_10001CFB8(v0[38], v0[39]);
  swift_bridgeObjectRelease();
  unint64_t v2 = v0[43];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(v0[42], v2);
  }

  return _swift_deallocObject(v0, 352, 7);
}

uint64_t sub_1009907EC()
{
  return sub_100988FC4(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), &qword_101639BB0, 5);
}

uint64_t destroy for AirPodsSWPairingCheckData(uint64_t *a1)
{
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(a1[2], a1[3]);
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[4], v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[13], a1[14]);
  sub_10001CFB8(a1[15], a1[16]);
  sub_10001CFB8(a1[17], a1[18]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[24], a1[25]);
  sub_10001CFB8(a1[26], a1[27]);
  sub_10001CFB8(a1[28], a1[29]);
  sub_10001CFB8(a1[30], a1[31]);
  sub_10001CFB8(a1[32], a1[33]);
  sub_10001CFB8(a1[34], a1[35]);
  sub_10001CFB8(a1[36], a1[37]);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v4 = a1[41];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[40];
    return sub_10001CFB8(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for AirPodsSWPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_1000361E0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = (uint64_t *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 104);
  unint64_t v15 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v15);
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  uint64_t v16 = *(void *)(a2 + 120);
  unint64_t v17 = *(void *)(a2 + 128);
  sub_1000361E0(v16, v17);
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v17;
  uint64_t v18 = *(void *)(a2 + 136);
  unint64_t v19 = *(void *)(a2 + 144);
  sub_1000361E0(v18, v19);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v20 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v20;
  uint64_t v21 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  unint64_t v22 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 192) = v21;
  *(void *)(a1 + 200) = v22;
  uint64_t v23 = *(void *)(a2 + 208);
  unint64_t v24 = *(void *)(a2 + 216);
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 208) = v23;
  *(void *)(a1 + 216) = v24;
  uint64_t v25 = *(void *)(a2 + 224);
  unint64_t v26 = *(void *)(a2 + 232);
  sub_1000361E0(v25, v26);
  *(void *)(a1 + 224) = v25;
  *(void *)(a1 + 232) = v26;
  uint64_t v27 = *(void *)(a2 + 240);
  unint64_t v28 = *(void *)(a2 + 248);
  sub_1000361E0(v27, v28);
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v28;
  uint64_t v29 = *(void *)(a2 + 256);
  unint64_t v30 = *(void *)(a2 + 264);
  sub_1000361E0(v29, v30);
  *(void *)(a1 + 256) = v29;
  *(void *)(a1 + 264) = v30;
  uint64_t v31 = *(void *)(a2 + 272);
  unint64_t v32 = *(void *)(a2 + 280);
  sub_1000361E0(v31, v32);
  *(void *)(a1 + 272) = v31;
  *(void *)(a1 + 280) = v32;
  uint64_t v33 = *(void *)(a2 + 288);
  unint64_t v34 = *(void *)(a2 + 296);
  sub_1000361E0(v33, v34);
  *(void *)(a1 + 288) = v33;
  *(void *)(a1 + 296) = v34;
  uint64_t v35 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v35;
  uint64_t v36 = (_OWORD *)(a2 + 320);
  unint64_t v37 = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  if (v37 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 320) = *v36;
  }
  else
  {
    uint64_t v38 = *(void *)v36;
    sub_1000361E0(v38, v37);
    *(void *)(a1 + 320) = v38;
    *(void *)(a1 + 328) = v37;
  }
  return a1;
}

uint64_t assignWithCopy for AirPodsSWPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1000361E0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = (uint64_t *)(a2 + 32);
  unint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_1000361E0(*v12, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v15 = *v12;
  sub_1000361E0(*v12, *(void *)(a2 + 40));
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v13;
  sub_10001CFB8(v16, v17);
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 104);
  unint64_t v19 = *(void *)(a2 + 112);
  sub_1000361E0(v18, v19);
  uint64_t v20 = *(void *)(a1 + 104);
  unint64_t v21 = *(void *)(a1 + 112);
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v19;
  sub_10001CFB8(v20, v21);
  uint64_t v22 = *(void *)(a2 + 120);
  unint64_t v23 = *(void *)(a2 + 128);
  sub_1000361E0(v22, v23);
  uint64_t v24 = *(void *)(a1 + 120);
  unint64_t v25 = *(void *)(a1 + 128);
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v23;
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a2 + 136);
  unint64_t v27 = *(void *)(a2 + 144);
  sub_1000361E0(v26, v27);
  uint64_t v28 = *(void *)(a1 + 136);
  unint64_t v29 = *(void *)(a1 + 144);
  *(void *)(a1 + 136) = v26;
  *(void *)(a1 + 144) = v27;
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v30;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v31 = *(void *)(a2 + 192);
  unint64_t v32 = *(void *)(a2 + 200);
  sub_1000361E0(v31, v32);
  uint64_t v33 = *(void *)(a1 + 192);
  unint64_t v34 = *(void *)(a1 + 200);
  *(void *)(a1 + 192) = v31;
  *(void *)(a1 + 200) = v32;
  sub_10001CFB8(v33, v34);
  uint64_t v35 = *(void *)(a2 + 208);
  unint64_t v36 = *(void *)(a2 + 216);
  sub_1000361E0(v35, v36);
  uint64_t v37 = *(void *)(a1 + 208);
  unint64_t v38 = *(void *)(a1 + 216);
  *(void *)(a1 + 208) = v35;
  *(void *)(a1 + 216) = v36;
  sub_10001CFB8(v37, v38);
  uint64_t v39 = *(void *)(a2 + 224);
  unint64_t v40 = *(void *)(a2 + 232);
  sub_1000361E0(v39, v40);
  uint64_t v41 = *(void *)(a1 + 224);
  unint64_t v42 = *(void *)(a1 + 232);
  *(void *)(a1 + 224) = v39;
  *(void *)(a1 + 232) = v40;
  sub_10001CFB8(v41, v42);
  uint64_t v43 = *(void *)(a2 + 240);
  unint64_t v44 = *(void *)(a2 + 248);
  sub_1000361E0(v43, v44);
  uint64_t v45 = *(void *)(a1 + 240);
  unint64_t v46 = *(void *)(a1 + 248);
  *(void *)(a1 + 240) = v43;
  *(void *)(a1 + 248) = v44;
  sub_10001CFB8(v45, v46);
  uint64_t v47 = *(void *)(a2 + 256);
  unint64_t v48 = *(void *)(a2 + 264);
  sub_1000361E0(v47, v48);
  uint64_t v49 = *(void *)(a1 + 256);
  unint64_t v50 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v47;
  *(void *)(a1 + 264) = v48;
  sub_10001CFB8(v49, v50);
  uint64_t v51 = *(void *)(a2 + 272);
  unint64_t v52 = *(void *)(a2 + 280);
  sub_1000361E0(v51, v52);
  uint64_t v53 = *(void *)(a1 + 272);
  unint64_t v54 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v51;
  *(void *)(a1 + 280) = v52;
  sub_10001CFB8(v53, v54);
  uint64_t v55 = *(void *)(a2 + 288);
  unint64_t v56 = *(void *)(a2 + 296);
  sub_1000361E0(v55, v56);
  uint64_t v57 = *(void *)(a1 + 288);
  unint64_t v58 = *(void *)(a1 + 296);
  *(void *)(a1 + 288) = v55;
  *(void *)(a1 + 296) = v56;
  sub_10001CFB8(v57, v58);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v59 = (uint64_t *)(a2 + 320);
  unint64_t v60 = *(void *)(a2 + 328);
  if (*(void *)(a1 + 328) >> 60 != 15)
  {
    if (v60 >> 60 != 15)
    {
      uint64_t v62 = *v59;
      sub_1000361E0(*v59, v60);
      uint64_t v63 = *(void *)(a1 + 320);
      unint64_t v64 = *(void *)(a1 + 328);
      *(void *)(a1 + 320) = v62;
      *(void *)(a1 + 328) = v60;
      sub_10001CFB8(v63, v64);
      return a1;
    }
    sub_1001E132C(a1 + 320);
    goto LABEL_13;
  }
  if (v60 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 320) = *(_OWORD *)v59;
    return a1;
  }
  uint64_t v61 = *v59;
  sub_1000361E0(*v59, v60);
  *(void *)(a1 + 320) = v61;
  *(void *)(a1 + 328) = v60;
  return a1;
}

uint64_t assignWithTake for AirPodsSWPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10001CFB8(v6, v7);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  if (v9 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a2 + 40);
  if (v10 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v8;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v8;
  *(void *)(a1 + 40) = v10;
  sub_10001CFB8(v11, v9);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 104);
  unint64_t v16 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = *(void *)(a1 + 120);
  unint64_t v18 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = *(void *)(a1 + 136);
  unint64_t v20 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  sub_10001CFB8(v19, v20);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 200);
  uint64_t v22 = *(void *)(a1 + 192);
  unint64_t v23 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = *(void *)(a1 + 208);
  unint64_t v25 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a1 + 224);
  unint64_t v27 = *(void *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  sub_10001CFB8(v26, v27);
  uint64_t v28 = *(void *)(a1 + 240);
  unint64_t v29 = *(void *)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a1 + 256);
  unint64_t v31 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  sub_10001CFB8(v30, v31);
  uint64_t v32 = *(void *)(a1 + 272);
  unint64_t v33 = *(void *)(a1 + 280);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  sub_10001CFB8(v32, v33);
  uint64_t v34 = *(void *)(a1 + 288);
  unint64_t v35 = *(void *)(a1 + 296);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  sub_10001CFB8(v34, v35);
  uint64_t v36 = *(void *)(a2 + 312);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)(a2 + 320);
  unint64_t v38 = *(void *)(a1 + 328);
  if (v38 >> 60 != 15)
  {
    unint64_t v39 = *(void *)(a2 + 328);
    if (v39 >> 60 != 15)
    {
      uint64_t v40 = *(void *)(a1 + 320);
      *(void *)(a1 + 320) = *v37;
      *(void *)(a1 + 328) = v39;
      sub_10001CFB8(v40, v38);
      return a1;
    }
    sub_1001E132C(a1 + 320);
  }
  *(_OWORD *)(a1 + 320) = *(_OWORD *)v37;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsSWPairingCheckData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 336)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsSWPairingCheckData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 336) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 336) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsSWPairingCheckData()
{
  return &type metadata for AirPodsSWPairingCheckData;
}

uint64_t destroy for AirPodsSWPairingAckData(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[6], a1[7]);
  sub_10001CFB8(a1[8], a1[9]);
  sub_10001CFB8(a1[10], a1[11]);
  sub_10001CFB8(a1[12], a1[13]);
  sub_10001CFB8(a1[14], a1[15]);
  sub_10001CFB8(a1[16], a1[17]);
  sub_10001CFB8(a1[18], a1[19]);
  sub_10001CFB8(a1[20], a1[21]);
  sub_10001CFB8(a1[22], a1[23]);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v3 = a1[27];
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = a1[26];
    return sub_10001CFB8(v4, v3);
  }
  return result;
}

uint64_t initializeWithCopy for AirPodsSWPairingAckData(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v7, v8);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a2[8];
  unint64_t v10 = a2[9];
  sub_1000361E0(v9, v10);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = a2[10];
  unint64_t v12 = a2[11];
  sub_1000361E0(v11, v12);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = a2[12];
  unint64_t v14 = a2[13];
  sub_1000361E0(v13, v14);
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  uint64_t v15 = a2[14];
  unint64_t v16 = a2[15];
  sub_1000361E0(v15, v16);
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  uint64_t v17 = a2[16];
  unint64_t v18 = a2[17];
  sub_1000361E0(v17, v18);
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v18;
  uint64_t v19 = a2[18];
  unint64_t v20 = a2[19];
  sub_1000361E0(v19, v20);
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  uint64_t v21 = a2[20];
  unint64_t v22 = a2[21];
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v22;
  uint64_t v23 = a2[22];
  unint64_t v24 = a2[23];
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = v24;
  uint64_t v25 = a2[25];
  *(void *)(a1 + 192) = a2[24];
  *(void *)(a1 + 200) = v25;
  uint64_t v26 = a2 + 26;
  unint64_t v27 = a2[27];
  swift_bridgeObjectRetain();
  if (v27 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 208) = *v26;
  }
  else
  {
    uint64_t v28 = *(void *)v26;
    sub_1000361E0(v28, v27);
    *(void *)(a1 + 208) = v28;
    *(void *)(a1 + 216) = v27;
  }
  return a1;
}

void *assignWithCopy for AirPodsSWPairingAckData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  unint64_t v5 = a2[7];
  sub_1000361E0(v4, v5);
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  a1[6] = v4;
  a1[7] = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = a2[8];
  unint64_t v9 = a2[9];
  sub_1000361E0(v8, v9);
  uint64_t v10 = a1[8];
  unint64_t v11 = a1[9];
  a1[8] = v8;
  a1[9] = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = a2[10];
  unint64_t v13 = a2[11];
  sub_1000361E0(v12, v13);
  uint64_t v14 = a1[10];
  unint64_t v15 = a1[11];
  a1[10] = v12;
  a1[11] = v13;
  sub_10001CFB8(v14, v15);
  uint64_t v16 = a2[12];
  unint64_t v17 = a2[13];
  sub_1000361E0(v16, v17);
  uint64_t v18 = a1[12];
  unint64_t v19 = a1[13];
  a1[12] = v16;
  a1[13] = v17;
  sub_10001CFB8(v18, v19);
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  sub_1000361E0(v20, v21);
  uint64_t v22 = a1[14];
  unint64_t v23 = a1[15];
  a1[14] = v20;
  a1[15] = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = a2[16];
  unint64_t v25 = a2[17];
  sub_1000361E0(v24, v25);
  uint64_t v26 = a1[16];
  unint64_t v27 = a1[17];
  a1[16] = v24;
  a1[17] = v25;
  sub_10001CFB8(v26, v27);
  uint64_t v28 = a2[18];
  unint64_t v29 = a2[19];
  sub_1000361E0(v28, v29);
  uint64_t v30 = a1[18];
  unint64_t v31 = a1[19];
  a1[18] = v28;
  a1[19] = v29;
  sub_10001CFB8(v30, v31);
  uint64_t v32 = a2[20];
  unint64_t v33 = a2[21];
  sub_1000361E0(v32, v33);
  uint64_t v34 = a1[20];
  unint64_t v35 = a1[21];
  a1[20] = v32;
  a1[21] = v33;
  sub_10001CFB8(v34, v35);
  uint64_t v36 = a2[22];
  unint64_t v37 = a2[23];
  sub_1000361E0(v36, v37);
  uint64_t v38 = a1[22];
  unint64_t v39 = a1[23];
  a1[22] = v36;
  a1[23] = v37;
  sub_10001CFB8(v38, v39);
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a2 + 26;
  unint64_t v41 = a2[27];
  if (a1[27] >> 60 != 15)
  {
    if (v41 >> 60 != 15)
    {
      uint64_t v43 = *v40;
      sub_1000361E0(*v40, v41);
      uint64_t v44 = a1[26];
      unint64_t v45 = a1[27];
      a1[26] = v43;
      a1[27] = v41;
      sub_10001CFB8(v44, v45);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 26));
    goto LABEL_6;
  }
  if (v41 >> 60 == 15)
  {
LABEL_6:
    *((_OWORD *)a1 + 13) = *(_OWORD *)v40;
    return a1;
  }
  uint64_t v42 = *v40;
  sub_1000361E0(*v40, v41);
  a1[26] = v42;
  a1[27] = v41;
  return a1;
}

__n128 initializeWithTake for AirPodsSWPairingAckData(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  __n128 result = *(__n128 *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 176);
  long long v11 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v11;
  *(__n128 *)(a1 + 160) = result;
  *(_OWORD *)(a1 + 176) = v10;
  return result;
}

void *assignWithTake for AirPodsSWPairingAckData(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[6];
  unint64_t v8 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_10001CFB8(v7, v8);
  uint64_t v9 = a1[8];
  unint64_t v10 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_10001CFB8(v9, v10);
  uint64_t v11 = a1[10];
  unint64_t v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_10001CFB8(v11, v12);
  uint64_t v13 = a1[12];
  unint64_t v14 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_10001CFB8(v13, v14);
  uint64_t v15 = a1[14];
  unint64_t v16 = a1[15];
  *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = a1[16];
  unint64_t v18 = a1[17];
  *((_OWORD *)a1 + 8) = *(_OWORD *)(a2 + 128);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = a1[18];
  unint64_t v20 = a1[19];
  *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
  sub_10001CFB8(v19, v20);
  uint64_t v21 = a1[20];
  unint64_t v22 = a1[21];
  *((_OWORD *)a1 + 10) = *(_OWORD *)(a2 + 160);
  sub_10001CFB8(v21, v22);
  uint64_t v23 = a1[22];
  unint64_t v24 = a1[23];
  *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
  sub_10001CFB8(v23, v24);
  uint64_t v25 = *(void *)(a2 + 200);
  a1[24] = *(void *)(a2 + 192);
  a1[25] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)(a2 + 208);
  unint64_t v27 = a1[27];
  if (v27 >> 60 != 15)
  {
    unint64_t v28 = *(void *)(a2 + 216);
    if (v28 >> 60 != 15)
    {
      uint64_t v29 = a1[26];
      a1[26] = *v26;
      a1[27] = v28;
      sub_10001CFB8(v29, v27);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 26));
  }
  *((_OWORD *)a1 + 13) = *(_OWORD *)v26;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsSWPairingAckData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 224)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsSWPairingAckData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 216) = 0;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 224) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 224) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsSWPairingAckData()
{
  return &type metadata for AirPodsSWPairingAckData;
}

uint64_t destroy for AirPodsLEPairingAckData(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[6], a1[7]);
  sub_10001CFB8(a1[8], a1[9]);
  sub_10001CFB8(a1[10], a1[11]);
  sub_10001CFB8(a1[12], a1[13]);
  sub_10001CFB8(a1[14], a1[15]);
  sub_10001CFB8(a1[16], a1[17]);
  sub_10001CFB8(a1[18], a1[19]);
  sub_10001CFB8(a1[20], a1[21]);
  sub_10001CFB8(a1[22], a1[23]);
  unint64_t v2 = a1[25];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[24], v2);
  }
  sub_10001CFB8(a1[26], a1[27]);
  sub_10001CFB8(a1[28], a1[29]);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v4 = a1[33];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[32];
    return sub_10001CFB8(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for AirPodsLEPairingAckData(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v7, v8);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a2[8];
  unint64_t v10 = a2[9];
  sub_1000361E0(v9, v10);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = a2[10];
  unint64_t v12 = a2[11];
  sub_1000361E0(v11, v12);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = a2[12];
  unint64_t v14 = a2[13];
  sub_1000361E0(v13, v14);
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  uint64_t v15 = a2[14];
  unint64_t v16 = a2[15];
  sub_1000361E0(v15, v16);
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  uint64_t v17 = a2[16];
  unint64_t v18 = a2[17];
  sub_1000361E0(v17, v18);
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v18;
  uint64_t v19 = a2[18];
  unint64_t v20 = a2[19];
  sub_1000361E0(v19, v20);
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  uint64_t v21 = a2[20];
  unint64_t v22 = a2[21];
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v22;
  uint64_t v23 = a2[22];
  unint64_t v24 = a2[23];
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = v24;
  uint64_t v25 = a2 + 24;
  unint64_t v26 = a2[25];
  if (v26 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)v25;
  }
  else
  {
    uint64_t v27 = *v25;
    sub_1000361E0(*v25, a2[25]);
    *(void *)(a1 + 192) = v27;
    *(void *)(a1 + 200) = v26;
  }
  uint64_t v28 = a2[26];
  unint64_t v29 = a2[27];
  sub_1000361E0(v28, v29);
  *(void *)(a1 + 208) = v28;
  *(void *)(a1 + 216) = v29;
  uint64_t v30 = a2[28];
  unint64_t v31 = a2[29];
  sub_1000361E0(v30, v31);
  *(void *)(a1 + 224) = v30;
  *(void *)(a1 + 232) = v31;
  uint64_t v32 = a2[31];
  *(void *)(a1 + 240) = a2[30];
  *(void *)(a1 + 248) = v32;
  unint64_t v33 = a2 + 32;
  unint64_t v34 = a2[33];
  swift_bridgeObjectRetain();
  if (v34 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 256) = *v33;
  }
  else
  {
    uint64_t v35 = *(void *)v33;
    sub_1000361E0(v35, v34);
    *(void *)(a1 + 256) = v35;
    *(void *)(a1 + 264) = v34;
  }
  return a1;
}

void *assignWithCopy for AirPodsLEPairingAckData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  unint64_t v5 = a2[7];
  sub_1000361E0(v4, v5);
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  a1[6] = v4;
  a1[7] = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = a2[8];
  unint64_t v9 = a2[9];
  sub_1000361E0(v8, v9);
  uint64_t v10 = a1[8];
  unint64_t v11 = a1[9];
  a1[8] = v8;
  a1[9] = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = a2[10];
  unint64_t v13 = a2[11];
  sub_1000361E0(v12, v13);
  uint64_t v14 = a1[10];
  unint64_t v15 = a1[11];
  a1[10] = v12;
  a1[11] = v13;
  sub_10001CFB8(v14, v15);
  uint64_t v16 = a2[12];
  unint64_t v17 = a2[13];
  sub_1000361E0(v16, v17);
  uint64_t v18 = a1[12];
  unint64_t v19 = a1[13];
  a1[12] = v16;
  a1[13] = v17;
  sub_10001CFB8(v18, v19);
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  sub_1000361E0(v20, v21);
  uint64_t v22 = a1[14];
  unint64_t v23 = a1[15];
  a1[14] = v20;
  a1[15] = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = a2[16];
  unint64_t v25 = a2[17];
  sub_1000361E0(v24, v25);
  uint64_t v26 = a1[16];
  unint64_t v27 = a1[17];
  a1[16] = v24;
  a1[17] = v25;
  sub_10001CFB8(v26, v27);
  uint64_t v28 = a2[18];
  unint64_t v29 = a2[19];
  sub_1000361E0(v28, v29);
  uint64_t v30 = a1[18];
  unint64_t v31 = a1[19];
  a1[18] = v28;
  a1[19] = v29;
  sub_10001CFB8(v30, v31);
  uint64_t v32 = a2[20];
  unint64_t v33 = a2[21];
  sub_1000361E0(v32, v33);
  uint64_t v34 = a1[20];
  unint64_t v35 = a1[21];
  a1[20] = v32;
  a1[21] = v33;
  sub_10001CFB8(v34, v35);
  uint64_t v36 = a2[22];
  unint64_t v37 = a2[23];
  sub_1000361E0(v36, v37);
  uint64_t v38 = a1[22];
  unint64_t v39 = a1[23];
  a1[22] = v36;
  a1[23] = v37;
  sub_10001CFB8(v38, v39);
  uint64_t v40 = a2 + 24;
  unint64_t v41 = a2[25];
  if (a1[25] >> 60 == 15)
  {
    if (v41 >> 60 != 15)
    {
      uint64_t v42 = *v40;
      sub_1000361E0(*v40, a2[25]);
      a1[24] = v42;
      a1[25] = v41;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v41 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 24));
LABEL_6:
    *((_OWORD *)a1 + 12) = *(_OWORD *)v40;
    goto LABEL_8;
  }
  uint64_t v43 = *v40;
  sub_1000361E0(*v40, a2[25]);
  uint64_t v44 = a1[24];
  unint64_t v45 = a1[25];
  a1[24] = v43;
  a1[25] = v41;
  sub_10001CFB8(v44, v45);
LABEL_8:
  uint64_t v46 = a2[26];
  unint64_t v47 = a2[27];
  sub_1000361E0(v46, v47);
  uint64_t v48 = a1[26];
  unint64_t v49 = a1[27];
  a1[26] = v46;
  a1[27] = v47;
  sub_10001CFB8(v48, v49);
  uint64_t v50 = a2[28];
  unint64_t v51 = a2[29];
  sub_1000361E0(v50, v51);
  uint64_t v52 = a1[28];
  unint64_t v53 = a1[29];
  a1[28] = v50;
  a1[29] = v51;
  sub_10001CFB8(v52, v53);
  a1[30] = a2[30];
  a1[31] = a2[31];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v54 = a2 + 32;
  unint64_t v55 = a2[33];
  if (a1[33] >> 60 != 15)
  {
    if (v55 >> 60 != 15)
    {
      uint64_t v57 = *v54;
      sub_1000361E0(*v54, v55);
      uint64_t v58 = a1[32];
      unint64_t v59 = a1[33];
      a1[32] = v57;
      a1[33] = v55;
      sub_10001CFB8(v58, v59);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 32));
    goto LABEL_13;
  }
  if (v55 >> 60 == 15)
  {
LABEL_13:
    *((_OWORD *)a1 + 16) = *(_OWORD *)v54;
    return a1;
  }
  uint64_t v56 = *v54;
  sub_1000361E0(*v54, v55);
  a1[32] = v56;
  a1[33] = v55;
  return a1;
}

void *initializeWithTake for AirPodsLEPairingAckData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

void *assignWithTake for AirPodsLEPairingAckData(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[6];
  unint64_t v8 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_10001CFB8(v7, v8);
  uint64_t v9 = a1[8];
  unint64_t v10 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_10001CFB8(v9, v10);
  uint64_t v11 = a1[10];
  unint64_t v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_10001CFB8(v11, v12);
  uint64_t v13 = a1[12];
  unint64_t v14 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_10001CFB8(v13, v14);
  uint64_t v15 = a1[14];
  unint64_t v16 = a1[15];
  *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = a1[16];
  unint64_t v18 = a1[17];
  *((_OWORD *)a1 + 8) = *(_OWORD *)(a2 + 128);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = a1[18];
  unint64_t v20 = a1[19];
  *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
  sub_10001CFB8(v19, v20);
  uint64_t v21 = a1[20];
  unint64_t v22 = a1[21];
  *((_OWORD *)a1 + 10) = *(_OWORD *)(a2 + 160);
  sub_10001CFB8(v21, v22);
  uint64_t v23 = a1[22];
  unint64_t v24 = a1[23];
  *((_OWORD *)a1 + 11) = *(_OWORD *)(a2 + 176);
  sub_10001CFB8(v23, v24);
  unint64_t v25 = (_OWORD *)(a2 + 192);
  unint64_t v26 = a1[25];
  if (v26 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v27 = *(void *)(a2 + 200);
  if (v27 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 24));
LABEL_4:
    *((_OWORD *)a1 + 12) = *v25;
    goto LABEL_6;
  }
  uint64_t v28 = a1[24];
  a1[24] = *(void *)v25;
  a1[25] = v27;
  sub_10001CFB8(v28, v26);
LABEL_6:
  uint64_t v29 = a1[26];
  unint64_t v30 = a1[27];
  *((_OWORD *)a1 + 13) = *(_OWORD *)(a2 + 208);
  sub_10001CFB8(v29, v30);
  uint64_t v31 = a1[28];
  unint64_t v32 = a1[29];
  *((_OWORD *)a1 + 14) = *(_OWORD *)(a2 + 224);
  sub_10001CFB8(v31, v32);
  uint64_t v33 = *(void *)(a2 + 248);
  a1[30] = *(void *)(a2 + 240);
  a1[31] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)(a2 + 256);
  unint64_t v35 = a1[33];
  if (v35 >> 60 != 15)
  {
    unint64_t v36 = *(void *)(a2 + 264);
    if (v36 >> 60 != 15)
    {
      uint64_t v37 = a1[32];
      a1[32] = *v34;
      a1[33] = v36;
      sub_10001CFB8(v37, v35);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 32));
  }
  *((_OWORD *)a1 + 16) = *(_OWORD *)v34;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsLEPairingAckData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 272)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsLEPairingAckData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsLEPairingAckData()
{
  return &type metadata for AirPodsLEPairingAckData;
}

uint64_t destroy for AirPodsLEPairingCheckData(uint64_t *a1)
{
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(a1[2], a1[3]);
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[4], v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[13], a1[14]);
  sub_10001CFB8(a1[15], a1[16]);
  sub_10001CFB8(a1[17], a1[18]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[24], a1[25]);
  sub_10001CFB8(a1[26], a1[27]);
  sub_10001CFB8(a1[28], a1[29]);
  sub_10001CFB8(a1[30], a1[31]);
  sub_10001CFB8(a1[32], a1[33]);
  unint64_t v3 = a1[35];
  if (v3 >> 60 != 15) {
    sub_10001CFB8(a1[34], v3);
  }
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[39];
  if (v4 >> 60 != 15) {
    sub_10001CFB8(a1[38], v4);
  }
  sub_10001CFB8(a1[40], a1[41]);
  uint64_t v5 = a1[42];
  unint64_t v6 = a1[43];

  return sub_10001CFB8(v5, v6);
}

uint64_t initializeWithCopy for AirPodsLEPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_1000361E0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unint64_t v8 = (uint64_t *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 104);
  unint64_t v15 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v15);
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  uint64_t v16 = *(void *)(a2 + 120);
  unint64_t v17 = *(void *)(a2 + 128);
  sub_1000361E0(v16, v17);
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v17;
  uint64_t v18 = *(void *)(a2 + 136);
  unint64_t v19 = *(void *)(a2 + 144);
  sub_1000361E0(v18, v19);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v20 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v20;
  uint64_t v21 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  unint64_t v22 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 192) = v21;
  *(void *)(a1 + 200) = v22;
  uint64_t v23 = *(void *)(a2 + 208);
  unint64_t v24 = *(void *)(a2 + 216);
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 208) = v23;
  *(void *)(a1 + 216) = v24;
  uint64_t v25 = *(void *)(a2 + 224);
  unint64_t v26 = *(void *)(a2 + 232);
  sub_1000361E0(v25, v26);
  *(void *)(a1 + 224) = v25;
  *(void *)(a1 + 232) = v26;
  uint64_t v27 = *(void *)(a2 + 240);
  unint64_t v28 = *(void *)(a2 + 248);
  sub_1000361E0(v27, v28);
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v28;
  uint64_t v29 = *(void *)(a2 + 256);
  unint64_t v30 = *(void *)(a2 + 264);
  sub_1000361E0(v29, v30);
  *(void *)(a1 + 256) = v29;
  *(void *)(a1 + 264) = v30;
  uint64_t v31 = (uint64_t *)(a2 + 272);
  unint64_t v32 = *(void *)(a2 + 280);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v31;
  }
  else
  {
    uint64_t v33 = *v31;
    sub_1000361E0(*v31, *(void *)(a2 + 280));
    *(void *)(a1 + 272) = v33;
    *(void *)(a1 + 280) = v32;
  }
  uint64_t v34 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v34;
  unint64_t v35 = (_OWORD *)(a2 + 304);
  unint64_t v36 = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 304) = *v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_1000361E0(v37, v36);
    *(void *)(a1 + 304) = v37;
    *(void *)(a1 + 312) = v36;
  }
  uint64_t v38 = *(void *)(a2 + 320);
  unint64_t v39 = *(void *)(a2 + 328);
  sub_1000361E0(v38, v39);
  *(void *)(a1 + 320) = v38;
  *(void *)(a1 + 328) = v39;
  uint64_t v41 = *(void *)(a2 + 336);
  unint64_t v40 = *(void *)(a2 + 344);
  sub_1000361E0(v41, v40);
  *(void *)(a1 + 336) = v41;
  *(void *)(a1 + 344) = v40;
  return a1;
}

uint64_t assignWithCopy for AirPodsLEPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1000361E0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = (uint64_t *)(a2 + 32);
  unint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_1000361E0(*v12, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v15 = *v12;
  sub_1000361E0(*v12, *(void *)(a2 + 40));
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v13;
  sub_10001CFB8(v16, v17);
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 104);
  unint64_t v19 = *(void *)(a2 + 112);
  sub_1000361E0(v18, v19);
  uint64_t v20 = *(void *)(a1 + 104);
  unint64_t v21 = *(void *)(a1 + 112);
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v19;
  sub_10001CFB8(v20, v21);
  uint64_t v22 = *(void *)(a2 + 120);
  unint64_t v23 = *(void *)(a2 + 128);
  sub_1000361E0(v22, v23);
  uint64_t v24 = *(void *)(a1 + 120);
  unint64_t v25 = *(void *)(a1 + 128);
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v23;
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a2 + 136);
  unint64_t v27 = *(void *)(a2 + 144);
  sub_1000361E0(v26, v27);
  uint64_t v28 = *(void *)(a1 + 136);
  unint64_t v29 = *(void *)(a1 + 144);
  *(void *)(a1 + 136) = v26;
  *(void *)(a1 + 144) = v27;
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v30;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v31 = *(void *)(a2 + 192);
  unint64_t v32 = *(void *)(a2 + 200);
  sub_1000361E0(v31, v32);
  uint64_t v33 = *(void *)(a1 + 192);
  unint64_t v34 = *(void *)(a1 + 200);
  *(void *)(a1 + 192) = v31;
  *(void *)(a1 + 200) = v32;
  sub_10001CFB8(v33, v34);
  uint64_t v35 = *(void *)(a2 + 208);
  unint64_t v36 = *(void *)(a2 + 216);
  sub_1000361E0(v35, v36);
  uint64_t v37 = *(void *)(a1 + 208);
  unint64_t v38 = *(void *)(a1 + 216);
  *(void *)(a1 + 208) = v35;
  *(void *)(a1 + 216) = v36;
  sub_10001CFB8(v37, v38);
  uint64_t v39 = *(void *)(a2 + 224);
  unint64_t v40 = *(void *)(a2 + 232);
  sub_1000361E0(v39, v40);
  uint64_t v41 = *(void *)(a1 + 224);
  unint64_t v42 = *(void *)(a1 + 232);
  *(void *)(a1 + 224) = v39;
  *(void *)(a1 + 232) = v40;
  sub_10001CFB8(v41, v42);
  uint64_t v43 = *(void *)(a2 + 240);
  unint64_t v44 = *(void *)(a2 + 248);
  sub_1000361E0(v43, v44);
  uint64_t v45 = *(void *)(a1 + 240);
  unint64_t v46 = *(void *)(a1 + 248);
  *(void *)(a1 + 240) = v43;
  *(void *)(a1 + 248) = v44;
  sub_10001CFB8(v45, v46);
  uint64_t v47 = *(void *)(a2 + 256);
  unint64_t v48 = *(void *)(a2 + 264);
  sub_1000361E0(v47, v48);
  uint64_t v49 = *(void *)(a1 + 256);
  unint64_t v50 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v47;
  *(void *)(a1 + 264) = v48;
  sub_10001CFB8(v49, v50);
  unint64_t v51 = (uint64_t *)(a2 + 272);
  unint64_t v52 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280) >> 60 == 15)
  {
    if (v52 >> 60 != 15)
    {
      uint64_t v53 = *v51;
      sub_1000361E0(*v51, *(void *)(a2 + 280));
      *(void *)(a1 + 272) = v53;
      *(void *)(a1 + 280) = v52;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v52 >> 60 == 15)
  {
    sub_1001356D0(a1 + 272);
LABEL_13:
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v51;
    goto LABEL_15;
  }
  uint64_t v54 = *v51;
  sub_1000361E0(*v51, *(void *)(a2 + 280));
  uint64_t v55 = *(void *)(a1 + 272);
  unint64_t v56 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v54;
  *(void *)(a1 + 280) = v52;
  sub_10001CFB8(v55, v56);
LABEL_15:
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = (uint64_t *)(a2 + 304);
  unint64_t v58 = *(void *)(a2 + 312);
  if (*(void *)(a1 + 312) >> 60 != 15)
  {
    if (v58 >> 60 != 15)
    {
      uint64_t v60 = *v57;
      sub_1000361E0(*v57, *(void *)(a2 + 312));
      uint64_t v61 = *(void *)(a1 + 304);
      unint64_t v62 = *(void *)(a1 + 312);
      *(void *)(a1 + 304) = v60;
      *(void *)(a1 + 312) = v58;
      sub_10001CFB8(v61, v62);
      goto LABEL_22;
    }
    sub_1001E132C(a1 + 304);
    goto LABEL_20;
  }
  if (v58 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 304) = *(_OWORD *)v57;
    goto LABEL_22;
  }
  uint64_t v59 = *v57;
  sub_1000361E0(*v57, *(void *)(a2 + 312));
  *(void *)(a1 + 304) = v59;
  *(void *)(a1 + 312) = v58;
LABEL_22:
  uint64_t v63 = *(void *)(a2 + 320);
  unint64_t v64 = *(void *)(a2 + 328);
  sub_1000361E0(v63, v64);
  uint64_t v65 = *(void *)(a1 + 320);
  unint64_t v66 = *(void *)(a1 + 328);
  *(void *)(a1 + 320) = v63;
  *(void *)(a1 + 328) = v64;
  sub_10001CFB8(v65, v66);
  uint64_t v68 = *(void *)(a2 + 336);
  unint64_t v67 = *(void *)(a2 + 344);
  sub_1000361E0(v68, v67);
  uint64_t v69 = *(void *)(a1 + 336);
  unint64_t v70 = *(void *)(a1 + 344);
  *(void *)(a1 + 336) = v68;
  *(void *)(a1 + 344) = v67;
  sub_10001CFB8(v69, v70);
  return a1;
}

uint64_t assignWithTake for AirPodsLEPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10001CFB8(v6, v7);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  if (v9 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a2 + 40);
  if (v10 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v8;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v8;
  *(void *)(a1 + 40) = v10;
  sub_10001CFB8(v11, v9);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 104);
  unint64_t v16 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = *(void *)(a1 + 120);
  unint64_t v18 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = *(void *)(a1 + 136);
  unint64_t v20 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  sub_10001CFB8(v19, v20);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 200);
  uint64_t v22 = *(void *)(a1 + 192);
  unint64_t v23 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = *(void *)(a1 + 208);
  unint64_t v25 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a1 + 224);
  unint64_t v27 = *(void *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  sub_10001CFB8(v26, v27);
  uint64_t v28 = *(void *)(a1 + 240);
  unint64_t v29 = *(void *)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a1 + 256);
  unint64_t v31 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  sub_10001CFB8(v30, v31);
  unint64_t v32 = (_OWORD *)(a2 + 272);
  unint64_t v33 = *(void *)(a1 + 280);
  if (v33 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 272) = *v32;
    goto LABEL_11;
  }
  unint64_t v34 = *(void *)(a2 + 280);
  if (v34 >> 60 == 15)
  {
    sub_1001356D0(a1 + 272);
    goto LABEL_9;
  }
  uint64_t v35 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)v32;
  *(void *)(a1 + 280) = v34;
  sub_10001CFB8(v35, v33);
LABEL_11:
  uint64_t v36 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)(a2 + 304);
  unint64_t v38 = *(void *)(a1 + 312);
  if (v38 >> 60 != 15)
  {
    unint64_t v39 = *(void *)(a2 + 312);
    if (v39 >> 60 != 15)
    {
      uint64_t v40 = *(void *)(a1 + 304);
      *(void *)(a1 + 304) = *v37;
      *(void *)(a1 + 312) = v39;
      sub_10001CFB8(v40, v38);
      goto LABEL_16;
    }
    sub_1001E132C(a1 + 304);
  }
  *(_OWORD *)(a1 + 304) = *(_OWORD *)v37;
LABEL_16:
  uint64_t v41 = *(void *)(a1 + 320);
  unint64_t v42 = *(void *)(a1 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  sub_10001CFB8(v41, v42);
  uint64_t v43 = *(void *)(a1 + 336);
  unint64_t v44 = *(void *)(a1 + 344);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  sub_10001CFB8(v43, v44);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsLEPairingCheckData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 352)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsLEPairingCheckData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 344) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 352) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 352) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsLEPairingCheckData()
{
  return &type metadata for AirPodsLEPairingCheckData;
}

uint64_t destroy for AirPodsPairingAckData(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[6], a1[7]);
  sub_10001CFB8(a1[8], a1[9]);
  sub_10001CFB8(a1[10], a1[11]);
  sub_10001CFB8(a1[12], a1[13]);
  sub_10001CFB8(a1[14], a1[15]);
  sub_10001CFB8(a1[16], a1[17]);
  sub_10001CFB8(a1[18], a1[19]);
  unint64_t v2 = a1[21];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[20], v2);
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v4 = a1[25];
  if (v4 >> 60 != 15)
  {
    uint64_t v5 = a1[24];
    return sub_10001CFB8(v5, v4);
  }
  return result;
}

uint64_t initializeWithCopy for AirPodsPairingAckData(uint64_t a1, void *a2)
{
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = a2[6];
  unint64_t v8 = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v7, v8);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = a2[8];
  unint64_t v10 = a2[9];
  sub_1000361E0(v9, v10);
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  uint64_t v11 = a2[10];
  unint64_t v12 = a2[11];
  sub_1000361E0(v11, v12);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  uint64_t v13 = a2[12];
  unint64_t v14 = a2[13];
  sub_1000361E0(v13, v14);
  *(void *)(a1 + 96) = v13;
  *(void *)(a1 + 104) = v14;
  uint64_t v15 = a2[14];
  unint64_t v16 = a2[15];
  sub_1000361E0(v15, v16);
  *(void *)(a1 + 112) = v15;
  *(void *)(a1 + 120) = v16;
  uint64_t v17 = a2[16];
  unint64_t v18 = a2[17];
  sub_1000361E0(v17, v18);
  *(void *)(a1 + 128) = v17;
  *(void *)(a1 + 136) = v18;
  uint64_t v19 = a2[18];
  unint64_t v20 = a2[19];
  sub_1000361E0(v19, v20);
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  uint64_t v21 = a2 + 20;
  unint64_t v22 = a2[21];
  if (v22 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 160) = *(_OWORD *)v21;
  }
  else
  {
    uint64_t v23 = *v21;
    sub_1000361E0(*v21, a2[21]);
    *(void *)(a1 + 160) = v23;
    *(void *)(a1 + 168) = v22;
  }
  uint64_t v24 = a2[23];
  *(void *)(a1 + 176) = a2[22];
  *(void *)(a1 + 184) = v24;
  unint64_t v25 = a2 + 24;
  unint64_t v26 = a2[25];
  swift_bridgeObjectRetain();
  if (v26 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 192) = *v25;
  }
  else
  {
    uint64_t v27 = *(void *)v25;
    sub_1000361E0(v27, v26);
    *(void *)(a1 + 192) = v27;
    *(void *)(a1 + 200) = v26;
  }
  return a1;
}

void *assignWithCopy for AirPodsPairingAckData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[6];
  unint64_t v5 = a2[7];
  sub_1000361E0(v4, v5);
  uint64_t v6 = a1[6];
  unint64_t v7 = a1[7];
  a1[6] = v4;
  a1[7] = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = a2[8];
  unint64_t v9 = a2[9];
  sub_1000361E0(v8, v9);
  uint64_t v10 = a1[8];
  unint64_t v11 = a1[9];
  a1[8] = v8;
  a1[9] = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = a2[10];
  unint64_t v13 = a2[11];
  sub_1000361E0(v12, v13);
  uint64_t v14 = a1[10];
  unint64_t v15 = a1[11];
  a1[10] = v12;
  a1[11] = v13;
  sub_10001CFB8(v14, v15);
  uint64_t v16 = a2[12];
  unint64_t v17 = a2[13];
  sub_1000361E0(v16, v17);
  uint64_t v18 = a1[12];
  unint64_t v19 = a1[13];
  a1[12] = v16;
  a1[13] = v17;
  sub_10001CFB8(v18, v19);
  uint64_t v20 = a2[14];
  unint64_t v21 = a2[15];
  sub_1000361E0(v20, v21);
  uint64_t v22 = a1[14];
  unint64_t v23 = a1[15];
  a1[14] = v20;
  a1[15] = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = a2[16];
  unint64_t v25 = a2[17];
  sub_1000361E0(v24, v25);
  uint64_t v26 = a1[16];
  unint64_t v27 = a1[17];
  a1[16] = v24;
  a1[17] = v25;
  sub_10001CFB8(v26, v27);
  uint64_t v28 = a2[18];
  unint64_t v29 = a2[19];
  sub_1000361E0(v28, v29);
  uint64_t v30 = a1[18];
  unint64_t v31 = a1[19];
  a1[18] = v28;
  a1[19] = v29;
  sub_10001CFB8(v30, v31);
  unint64_t v32 = a2 + 20;
  unint64_t v33 = a2[21];
  if (a1[21] >> 60 == 15)
  {
    if (v33 >> 60 != 15)
    {
      uint64_t v34 = *v32;
      sub_1000361E0(*v32, a2[21]);
      a1[20] = v34;
      a1[21] = v33;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v33 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 20));
LABEL_6:
    *((_OWORD *)a1 + 10) = *(_OWORD *)v32;
    goto LABEL_8;
  }
  uint64_t v35 = *v32;
  sub_1000361E0(*v32, a2[21]);
  uint64_t v36 = a1[20];
  unint64_t v37 = a1[21];
  a1[20] = v35;
  a1[21] = v33;
  sub_10001CFB8(v36, v37);
LABEL_8:
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v38 = a2 + 24;
  unint64_t v39 = a2[25];
  if (a1[25] >> 60 != 15)
  {
    if (v39 >> 60 != 15)
    {
      uint64_t v41 = *v38;
      sub_1000361E0(*v38, v39);
      uint64_t v42 = a1[24];
      unint64_t v43 = a1[25];
      a1[24] = v41;
      a1[25] = v39;
      sub_10001CFB8(v42, v43);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 24));
    goto LABEL_13;
  }
  if (v39 >> 60 == 15)
  {
LABEL_13:
    *((_OWORD *)a1 + 12) = *(_OWORD *)v38;
    return a1;
  }
  uint64_t v40 = *v38;
  sub_1000361E0(*v38, v39);
  a1[24] = v40;
  a1[25] = v39;
  return a1;
}

void *assignWithTake for AirPodsPairingAckData(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  a1[4] = *(void *)(a2 + 32);
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a1[6];
  unint64_t v8 = a1[7];
  *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
  sub_10001CFB8(v7, v8);
  uint64_t v9 = a1[8];
  unint64_t v10 = a1[9];
  *((_OWORD *)a1 + 4) = *(_OWORD *)(a2 + 64);
  sub_10001CFB8(v9, v10);
  uint64_t v11 = a1[10];
  unint64_t v12 = a1[11];
  *((_OWORD *)a1 + 5) = *(_OWORD *)(a2 + 80);
  sub_10001CFB8(v11, v12);
  uint64_t v13 = a1[12];
  unint64_t v14 = a1[13];
  *((_OWORD *)a1 + 6) = *(_OWORD *)(a2 + 96);
  sub_10001CFB8(v13, v14);
  uint64_t v15 = a1[14];
  unint64_t v16 = a1[15];
  *((_OWORD *)a1 + 7) = *(_OWORD *)(a2 + 112);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = a1[16];
  unint64_t v18 = a1[17];
  *((_OWORD *)a1 + 8) = *(_OWORD *)(a2 + 128);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = a1[18];
  unint64_t v20 = a1[19];
  *((_OWORD *)a1 + 9) = *(_OWORD *)(a2 + 144);
  sub_10001CFB8(v19, v20);
  unint64_t v21 = (_OWORD *)(a2 + 160);
  unint64_t v22 = a1[21];
  if (v22 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v23 = *(void *)(a2 + 168);
  if (v23 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 20));
LABEL_4:
    *((_OWORD *)a1 + 10) = *v21;
    goto LABEL_6;
  }
  uint64_t v24 = a1[20];
  a1[20] = *(void *)v21;
  a1[21] = v23;
  sub_10001CFB8(v24, v22);
LABEL_6:
  uint64_t v25 = *(void *)(a2 + 184);
  a1[22] = *(void *)(a2 + 176);
  a1[23] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)(a2 + 192);
  unint64_t v27 = a1[25];
  if (v27 >> 60 != 15)
  {
    unint64_t v28 = *(void *)(a2 + 200);
    if (v28 >> 60 != 15)
    {
      uint64_t v29 = a1[24];
      a1[24] = *v26;
      a1[25] = v28;
      sub_10001CFB8(v29, v27);
      return a1;
    }
    sub_1001E132C((uint64_t)(a1 + 24));
  }
  *((_OWORD *)a1 + 12) = *(_OWORD *)v26;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsPairingAckData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 208)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsPairingAckData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 208) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsPairingAckData()
{
  return &type metadata for AirPodsPairingAckData;
}

uint64_t destroy for AirPodsPairingCheckData(uint64_t *a1)
{
  sub_10001CFB8(*a1, a1[1]);
  sub_10001CFB8(a1[2], a1[3]);
  unint64_t v2 = a1[5];
  if (v2 >> 60 != 15) {
    sub_10001CFB8(a1[4], v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[13], a1[14]);
  sub_10001CFB8(a1[15], a1[16]);
  sub_10001CFB8(a1[17], a1[18]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(a1[24], a1[25]);
  sub_10001CFB8(a1[26], a1[27]);
  sub_10001CFB8(a1[28], a1[29]);
  sub_10001CFB8(a1[30], a1[31]);
  sub_10001CFB8(a1[32], a1[33]);
  unint64_t v3 = a1[35];
  if (v3 >> 60 != 15) {
    sub_10001CFB8(a1[34], v3);
  }
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v5 = a1[39];
  if (v5 >> 60 != 15)
  {
    uint64_t v6 = a1[38];
    return sub_10001CFB8(v6, v5);
  }
  return result;
}

uint64_t initializeWithCopy for AirPodsPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  sub_1000361E0(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  unint64_t v8 = (uint64_t *)(a2 + 32);
  unint64_t v9 = *(void *)(a2 + 40);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, *(void *)(a2 + 40));
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v9;
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v12;
  uint64_t v13 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v13;
  uint64_t v14 = *(void *)(a2 + 104);
  unint64_t v15 = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v14, v15);
  *(void *)(a1 + 104) = v14;
  *(void *)(a1 + 112) = v15;
  uint64_t v16 = *(void *)(a2 + 120);
  unint64_t v17 = *(void *)(a2 + 128);
  sub_1000361E0(v16, v17);
  *(void *)(a1 + 120) = v16;
  *(void *)(a1 + 128) = v17;
  uint64_t v18 = *(void *)(a2 + 136);
  unint64_t v19 = *(void *)(a2 + 144);
  sub_1000361E0(v18, v19);
  *(void *)(a1 + 136) = v18;
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  uint64_t v20 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v20;
  uint64_t v21 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  unint64_t v22 = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v21, v22);
  *(void *)(a1 + 192) = v21;
  *(void *)(a1 + 200) = v22;
  uint64_t v23 = *(void *)(a2 + 208);
  unint64_t v24 = *(void *)(a2 + 216);
  sub_1000361E0(v23, v24);
  *(void *)(a1 + 208) = v23;
  *(void *)(a1 + 216) = v24;
  uint64_t v25 = *(void *)(a2 + 224);
  unint64_t v26 = *(void *)(a2 + 232);
  sub_1000361E0(v25, v26);
  *(void *)(a1 + 224) = v25;
  *(void *)(a1 + 232) = v26;
  uint64_t v27 = *(void *)(a2 + 240);
  unint64_t v28 = *(void *)(a2 + 248);
  sub_1000361E0(v27, v28);
  *(void *)(a1 + 240) = v27;
  *(void *)(a1 + 248) = v28;
  uint64_t v29 = *(void *)(a2 + 256);
  unint64_t v30 = *(void *)(a2 + 264);
  sub_1000361E0(v29, v30);
  *(void *)(a1 + 256) = v29;
  *(void *)(a1 + 264) = v30;
  unint64_t v31 = (uint64_t *)(a2 + 272);
  unint64_t v32 = *(void *)(a2 + 280);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v31;
  }
  else
  {
    uint64_t v33 = *v31;
    sub_1000361E0(*v31, *(void *)(a2 + 280));
    *(void *)(a1 + 272) = v33;
    *(void *)(a1 + 280) = v32;
  }
  uint64_t v34 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v34;
  uint64_t v35 = (_OWORD *)(a2 + 304);
  unint64_t v36 = *(void *)(a2 + 312);
  swift_bridgeObjectRetain();
  if (v36 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 304) = *v35;
  }
  else
  {
    uint64_t v37 = *(void *)v35;
    sub_1000361E0(v37, v36);
    *(void *)(a1 + 304) = v37;
    *(void *)(a1 + 312) = v36;
  }
  return a1;
}

uint64_t assignWithCopy for AirPodsPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1000361E0(v8, v9);
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  sub_10001CFB8(v10, v11);
  uint64_t v12 = (uint64_t *)(a2 + 32);
  unint64_t v13 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40) >> 60 == 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      sub_1000361E0(*v12, *(void *)(a2 + 40));
      *(void *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v13;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v12;
    goto LABEL_8;
  }
  uint64_t v15 = *v12;
  sub_1000361E0(*v12, *(void *)(a2 + 40));
  uint64_t v16 = *(void *)(a1 + 32);
  unint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v15;
  *(void *)(a1 + 40) = v13;
  sub_10001CFB8(v16, v17);
LABEL_8:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(a2 + 104);
  unint64_t v19 = *(void *)(a2 + 112);
  sub_1000361E0(v18, v19);
  uint64_t v20 = *(void *)(a1 + 104);
  unint64_t v21 = *(void *)(a1 + 112);
  *(void *)(a1 + 104) = v18;
  *(void *)(a1 + 112) = v19;
  sub_10001CFB8(v20, v21);
  uint64_t v22 = *(void *)(a2 + 120);
  unint64_t v23 = *(void *)(a2 + 128);
  sub_1000361E0(v22, v23);
  uint64_t v24 = *(void *)(a1 + 120);
  unint64_t v25 = *(void *)(a1 + 128);
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = v23;
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a2 + 136);
  unint64_t v27 = *(void *)(a2 + 144);
  sub_1000361E0(v26, v27);
  uint64_t v28 = *(void *)(a1 + 136);
  unint64_t v29 = *(void *)(a1 + 144);
  *(void *)(a1 + 136) = v26;
  *(void *)(a1 + 144) = v27;
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v30;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v31 = *(void *)(a2 + 192);
  unint64_t v32 = *(void *)(a2 + 200);
  sub_1000361E0(v31, v32);
  uint64_t v33 = *(void *)(a1 + 192);
  unint64_t v34 = *(void *)(a1 + 200);
  *(void *)(a1 + 192) = v31;
  *(void *)(a1 + 200) = v32;
  sub_10001CFB8(v33, v34);
  uint64_t v35 = *(void *)(a2 + 208);
  unint64_t v36 = *(void *)(a2 + 216);
  sub_1000361E0(v35, v36);
  uint64_t v37 = *(void *)(a1 + 208);
  unint64_t v38 = *(void *)(a1 + 216);
  *(void *)(a1 + 208) = v35;
  *(void *)(a1 + 216) = v36;
  sub_10001CFB8(v37, v38);
  uint64_t v39 = *(void *)(a2 + 224);
  unint64_t v40 = *(void *)(a2 + 232);
  sub_1000361E0(v39, v40);
  uint64_t v41 = *(void *)(a1 + 224);
  unint64_t v42 = *(void *)(a1 + 232);
  *(void *)(a1 + 224) = v39;
  *(void *)(a1 + 232) = v40;
  sub_10001CFB8(v41, v42);
  uint64_t v43 = *(void *)(a2 + 240);
  unint64_t v44 = *(void *)(a2 + 248);
  sub_1000361E0(v43, v44);
  uint64_t v45 = *(void *)(a1 + 240);
  unint64_t v46 = *(void *)(a1 + 248);
  *(void *)(a1 + 240) = v43;
  *(void *)(a1 + 248) = v44;
  sub_10001CFB8(v45, v46);
  uint64_t v47 = *(void *)(a2 + 256);
  unint64_t v48 = *(void *)(a2 + 264);
  sub_1000361E0(v47, v48);
  uint64_t v49 = *(void *)(a1 + 256);
  unint64_t v50 = *(void *)(a1 + 264);
  *(void *)(a1 + 256) = v47;
  *(void *)(a1 + 264) = v48;
  sub_10001CFB8(v49, v50);
  unint64_t v51 = (uint64_t *)(a2 + 272);
  unint64_t v52 = *(void *)(a2 + 280);
  if (*(void *)(a1 + 280) >> 60 == 15)
  {
    if (v52 >> 60 != 15)
    {
      uint64_t v53 = *v51;
      sub_1000361E0(*v51, *(void *)(a2 + 280));
      *(void *)(a1 + 272) = v53;
      *(void *)(a1 + 280) = v52;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v52 >> 60 == 15)
  {
    sub_1001356D0(a1 + 272);
LABEL_13:
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v51;
    goto LABEL_15;
  }
  uint64_t v54 = *v51;
  sub_1000361E0(*v51, *(void *)(a2 + 280));
  uint64_t v55 = *(void *)(a1 + 272);
  unint64_t v56 = *(void *)(a1 + 280);
  *(void *)(a1 + 272) = v54;
  *(void *)(a1 + 280) = v52;
  sub_10001CFB8(v55, v56);
LABEL_15:
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v57 = (uint64_t *)(a2 + 304);
  unint64_t v58 = *(void *)(a2 + 312);
  if (*(void *)(a1 + 312) >> 60 != 15)
  {
    if (v58 >> 60 != 15)
    {
      uint64_t v60 = *v57;
      sub_1000361E0(*v57, v58);
      uint64_t v61 = *(void *)(a1 + 304);
      unint64_t v62 = *(void *)(a1 + 312);
      *(void *)(a1 + 304) = v60;
      *(void *)(a1 + 312) = v58;
      sub_10001CFB8(v61, v62);
      return a1;
    }
    sub_1001E132C(a1 + 304);
    goto LABEL_20;
  }
  if (v58 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)(a1 + 304) = *(_OWORD *)v57;
    return a1;
  }
  uint64_t v59 = *v57;
  sub_1000361E0(*v57, v58);
  *(void *)(a1 + 304) = v59;
  *(void *)(a1 + 312) = v58;
  return a1;
}

void *initializeWithTake for AirPodsPairingCheckData(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x140uLL);
}

uint64_t assignWithTake for AirPodsPairingCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10001CFB8(v6, v7);
  uint64_t v8 = (_OWORD *)(a2 + 32);
  unint64_t v9 = *(void *)(a1 + 40);
  if (v9 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v10 = *(void *)(a2 + 40);
  if (v10 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v8;
    goto LABEL_6;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v8;
  *(void *)(a1 + 40) = v10;
  sub_10001CFB8(v11, v9);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a1 + 104);
  unint64_t v16 = *(void *)(a1 + 112);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  sub_10001CFB8(v15, v16);
  uint64_t v17 = *(void *)(a1 + 120);
  unint64_t v18 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  sub_10001CFB8(v17, v18);
  uint64_t v19 = *(void *)(a1 + 136);
  unint64_t v20 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  sub_10001CFB8(v19, v20);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 200);
  uint64_t v22 = *(void *)(a1 + 192);
  unint64_t v23 = *(void *)(a1 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = v21;
  sub_10001CFB8(v22, v23);
  uint64_t v24 = *(void *)(a1 + 208);
  unint64_t v25 = *(void *)(a1 + 216);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  sub_10001CFB8(v24, v25);
  uint64_t v26 = *(void *)(a1 + 224);
  unint64_t v27 = *(void *)(a1 + 232);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  sub_10001CFB8(v26, v27);
  uint64_t v28 = *(void *)(a1 + 240);
  unint64_t v29 = *(void *)(a1 + 248);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  sub_10001CFB8(v28, v29);
  uint64_t v30 = *(void *)(a1 + 256);
  unint64_t v31 = *(void *)(a1 + 264);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  sub_10001CFB8(v30, v31);
  unint64_t v32 = (_OWORD *)(a2 + 272);
  unint64_t v33 = *(void *)(a1 + 280);
  if (v33 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 272) = *v32;
    goto LABEL_11;
  }
  unint64_t v34 = *(void *)(a2 + 280);
  if (v34 >> 60 == 15)
  {
    sub_1001356D0(a1 + 272);
    goto LABEL_9;
  }
  uint64_t v35 = *(void *)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)v32;
  *(void *)(a1 + 280) = v34;
  sub_10001CFB8(v35, v33);
LABEL_11:
  uint64_t v36 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v36;
  swift_bridgeObjectRelease();
  uint64_t v37 = (void *)(a2 + 304);
  unint64_t v38 = *(void *)(a1 + 312);
  if (v38 >> 60 != 15)
  {
    unint64_t v39 = *(void *)(a2 + 312);
    if (v39 >> 60 != 15)
    {
      uint64_t v40 = *(void *)(a1 + 304);
      *(void *)(a1 + 304) = *v37;
      *(void *)(a1 + 312) = v39;
      sub_10001CFB8(v40, v38);
      return a1;
    }
    sub_1001E132C(a1 + 304);
  }
  *(_OWORD *)(a1 + 304) = *(_OWORD *)v37;
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsPairingCheckData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 320)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirPodsPairingCheckData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 312) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 320) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 320) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsPairingCheckData()
{
  return &type metadata for AirPodsPairingCheckData;
}

unsigned char *storeEnumTagSinglePayload for MultipartAccessoryPairingInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100993C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultipartAccessoryPairingInfo.CodingKeys()
{
  return &type metadata for MultipartAccessoryPairingInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for AirPodsUnpairData()
{
  return &type metadata for AirPodsUnpairData;
}

_OWORD *sub_100993CB4(_OWORD *a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)unsigned int v4 = *a2;
    unsigned int v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = a2[1];
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *a2;
      sub_1000361E0(*a2, a2[1]);
      *(void *)unsigned int v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    unint64_t v10 = a2 + 2;
    unint64_t v11 = a2[3];
    if (v11 >> 60 == 15)
    {
      v4[1] = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v12 = *v10;
      sub_1000361E0(*v10, a2[3]);
      *((void *)v4 + 2) = v12;
      *((void *)v4 + 3) = v11;
    }
    uint64_t v13 = a2[4];
    unint64_t v14 = a2[5];
    sub_1000361E0(v13, v14);
    *((void *)v4 + 4) = v13;
    *((void *)v4 + 5) = v14;
    uint64_t v15 = a3[7];
    unint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for UUID();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10000588C(&qword_101638CF0);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    unint64_t v23 = (void *)((char *)v4 + v21);
    uint64_t v24 = (uint64_t *)((char *)a2 + v21);
    uint64_t v25 = v24[1];
    *unint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = (void *)((char *)v4 + v22);
    unint64_t v27 = (uint64_t *)((char *)a2 + v22);
    uint64_t v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100993ECC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_10001CFB8(*a1, v4);
  }
  unint64_t v5 = a1[3];
  if (v5 >> 60 != 15) {
    sub_10001CFB8(a1[2], v5);
  }
  sub_10001CFB8(a1[4], a1[5]);
  unsigned int v6 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100993FE0(uint64_t a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_1000361E0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, a2[3]);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v9;
  }
  uint64_t v11 = a2[4];
  unint64_t v12 = a2[5];
  sub_1000361E0(v11, v12);
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  uint64_t v13 = a3[7];
  unint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_10000588C(&qword_101638CF0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)(a1 + v19);
  uint64_t v22 = (uint64_t *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)(a1 + v20);
  uint64_t v25 = (uint64_t *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1009941A8(uint64_t *a1, uint64_t *a2, int *a3)
{
  unint64_t v6 = a2[1];
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *a2;
      sub_1000361E0(*a2, a2[1]);
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *a2;
  sub_1000361E0(*a2, a2[1]);
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_10001CFB8(v9, v10);
LABEL_8:
  uint64_t v11 = a2 + 2;
  unint64_t v12 = a2[3];
  if ((unint64_t)a1[3] >> 60 == 15)
  {
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *v11;
      sub_1000361E0(*v11, a2[3]);
      a1[2] = v13;
      a1[3] = v12;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v12 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 2));
LABEL_13:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v11;
    goto LABEL_15;
  }
  uint64_t v14 = *v11;
  sub_1000361E0(*v11, a2[3]);
  uint64_t v15 = a1[2];
  unint64_t v16 = a1[3];
  a1[2] = v14;
  a1[3] = v12;
  sub_10001CFB8(v15, v16);
LABEL_15:
  uint64_t v17 = a2[4];
  unint64_t v18 = a2[5];
  sub_1000361E0(v17, v18);
  uint64_t v19 = a1[4];
  unint64_t v20 = a1[5];
  a1[4] = v17;
  a1[5] = v18;
  sub_10001CFB8(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for UUID();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 24))(v22, v23, v24);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_20;
  }
  if (v28)
  {
LABEL_20:
    uint64_t v29 = sub_10000588C(&qword_101638CF0);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_21:
  uint64_t v30 = a3[8];
  unint64_t v31 = (uint64_t *)((char *)a1 + v30);
  unint64_t v32 = (uint64_t *)((char *)a2 + v30);
  *unint64_t v31 = *v32;
  v31[1] = v32[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v33 = a3[9];
  unint64_t v34 = (uint64_t *)((char *)a1 + v33);
  uint64_t v35 = (uint64_t *)((char *)a2 + v33);
  *unint64_t v34 = *v35;
  v34[1] = v35[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_10099448C(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000588C(&qword_101638CF0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  return a1;
}

uint64_t sub_1009945CC(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_1001356D0(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_10001CFB8(v8, v6);
LABEL_6:
  uint64_t v9 = (_OWORD *)(a2 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_11;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1001356D0(a1 + 16);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v9;
  *(void *)(a1 + 24) = v11;
  sub_10001CFB8(v12, v10);
LABEL_11:
  uint64_t v13 = *(void *)(a1 + 32);
  unint64_t v14 = *(void *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  sub_10001CFB8(v13, v14);
  uint64_t v15 = a3[7];
  unint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  unint64_t v20 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v16, v17, v18);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_16;
  }
  if (v22)
  {
LABEL_16:
    uint64_t v23 = sub_10000588C(&qword_101638CF0);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v16, v17, v18);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_17:
  uint64_t v24 = a3[8];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *uint64_t v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[9];
  uint64_t v30 = (void *)(a1 + v29);
  unint64_t v31 = (uint64_t *)(a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100994824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100994838);
}

uint64_t sub_100994838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000588C(&qword_101638CF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t sub_100994910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100994924);
}

uint64_t sub_100994924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10000588C(&qword_101638CF0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for AirPodsUnpairData.DeviceUnpairData(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101653468);
}

void sub_100994A0C()
{
  sub_100994AD8(319, (unint64_t *)&qword_101655AB0, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100994AD8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for PairingTransportType()
{
  return &type metadata for PairingTransportType;
}

unsigned char *_s12searchpartyd20PairingTransportTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100994C0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MultipartAccessoryPairingInfo.CloudKitSyncStatus()
{
  return &type metadata for MultipartAccessoryPairingInfo.CloudKitSyncStatus;
}

unint64_t sub_100994C48()
{
  unint64_t result = qword_1016534B0;
  if (!qword_1016534B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534B0);
  }
  return result;
}

unint64_t sub_100994CA0()
{
  unint64_t result = qword_1016534B8;
  if (!qword_1016534B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534B8);
  }
  return result;
}

unint64_t sub_100994CF8()
{
  unint64_t result = qword_1016534C0;
  if (!qword_1016534C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534C0);
  }
  return result;
}

unint64_t sub_100994D50()
{
  unint64_t result = qword_1016534C8;
  if (!qword_1016534C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534C8);
  }
  return result;
}

unint64_t sub_100994DA8()
{
  unint64_t result = qword_1016534D0;
  if (!qword_1016534D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534D0);
  }
  return result;
}

unint64_t sub_100994DFC()
{
  unint64_t result = qword_1016534E0;
  if (!qword_1016534E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534E0);
  }
  return result;
}

unint64_t sub_100994E50()
{
  unint64_t result = qword_1016534E8;
  if (!qword_1016534E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534E8);
  }
  return result;
}

unint64_t sub_100994EA4()
{
  unint64_t result = qword_1016534F8;
  if (!qword_1016534F8)
  {
    sub_10000592C(&qword_1016534F0);
    sub_10098BA84(&qword_101653500, (void (*)(uint64_t))type metadata accessor for AirPodsUnpairData.DeviceUnpairData);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016534F8);
  }
  return result;
}

unint64_t sub_100994F48()
{
  unint64_t result = qword_101653508;
  if (!qword_101653508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653508);
  }
  return result;
}

unint64_t sub_100994F9C()
{
  unint64_t result = qword_101653510;
  if (!qword_101653510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653510);
  }
  return result;
}

unint64_t sub_100994FF0()
{
  unint64_t result = qword_101653520;
  if (!qword_101653520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653520);
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsUnpairData.DeviceUnpairData.CodingKeys()
{
  return &type metadata for AirPodsUnpairData.DeviceUnpairData.CodingKeys;
}

unsigned char *_s12searchpartyd17AirPodsUnpairDataV16DeviceUnpairDataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100995124);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsUnpairData.CodingKeys()
{
  return &type metadata for AirPodsUnpairData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AirPodsUnpairContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100995228);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsUnpairContext()
{
  return &type metadata for AirPodsUnpairContext;
}

unint64_t sub_100995264()
{
  unint64_t result = qword_101653528;
  if (!qword_101653528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653528);
  }
  return result;
}

unint64_t sub_1009952BC()
{
  unint64_t result = qword_101653530;
  if (!qword_101653530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653530);
  }
  return result;
}

unint64_t sub_100995314()
{
  unint64_t result = qword_101653538;
  if (!qword_101653538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653538);
  }
  return result;
}

unint64_t sub_10099536C()
{
  unint64_t result = qword_101653540;
  if (!qword_101653540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653540);
  }
  return result;
}

unint64_t sub_1009953C4()
{
  unint64_t result = qword_101653548;
  if (!qword_101653548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653548);
  }
  return result;
}

unint64_t sub_10099541C()
{
  unint64_t result = qword_101653550;
  if (!qword_101653550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653550);
  }
  return result;
}

unint64_t sub_100995474()
{
  unint64_t result = qword_101653558;
  if (!qword_101653558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653558);
  }
  return result;
}

unint64_t sub_1009954C8()
{
  unint64_t result = qword_101653560;
  if (!qword_101653560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653560);
  }
  return result;
}

uint64_t sub_100995764()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentConnectionObserver()
{
  return self;
}

uint64_t sub_1009957D0()
{
  uint64_t My = type metadata accessor for Feature.FindMy();
  v3[3] = My;
  v3[4] = sub_10001E264();
  unint64_t v1 = sub_10001D958(v3);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v1, enum case for Feature.FindMy.spPlaySoundAll(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v3);
  if (My)
  {
    static os_log_type_t.default.getter();
    if (qword_101636B08 == -1) {
      goto LABEL_13;
    }
    goto LABEL_15;
  }
  AnyCurrentValuePublisher.value.getter();
  if (LOBYTE(v3[0]) == 1 && (sub_100996110() & 1) != 0)
  {
    static os_log_type_t.default.getter();
    if (qword_101636B08 == -1) {
      goto LABEL_11;
    }
    goto LABEL_16;
  }
  AnyCurrentValuePublisher.value.getter();
  if (v3[0] != 1 || (sub_100996110() & 1) == 0)
  {
    static os_log_type_t.default.getter();
    if (qword_101636B08 == -1)
    {
LABEL_13:
      os_log(_:dso:log:_:_:)();
      LOBYTE(v3[0]) = 0;
      return CurrentValueSubject.send(_:)();
    }
LABEL_15:
    swift_once();
    goto LABEL_13;
  }
  static os_log_type_t.default.getter();
  if (qword_101636B08 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_11:
  os_log(_:dso:log:_:_:)();
  LOBYTE(v3[0]) = 1;
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_100995A6C()
{
  return sub_1009957D0();
}

uint64_t sub_100995C98()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1009957D0();
    return swift_release();
  }
  return result;
}

Swift::Int sub_100995CF0()
{
  return Hasher._finalize()();
}

uint64_t sub_100995D40()
{
  return String.hash(into:)();
}

Swift::Int sub_100995D54()
{
  return Hasher._finalize()();
}

uint64_t sub_100995DA0@<X0>(Swift::String *a1@<X0>, BOOL *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A51C0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3 != 0;
  return result;
}

void sub_100995DF4(void *a1@<X8>)
{
  *a1 = 0x656E6F687069;
  a1[1] = 0xE600000000000000;
}

void sub_100995E0C(void *a1@<X8>)
{
  *a1 = &off_1015A57A8;
}

uint64_t sub_100995E1C()
{
  swift_release();

  return swift_release();
}

uint64_t sub_100995E4C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistentConnectionObserveriOS()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for PersistentConnectionObserver.PersistentConnectionPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100995F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistentConnectionObserver.PersistentConnectionPolicy()
{
  return &type metadata for PersistentConnectionObserver.PersistentConnectionPolicy;
}

unint64_t sub_100995FD0()
{
  unint64_t result = qword_101653758;
  if (!qword_101653758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653758);
  }
  return result;
}

void *sub_100996024(uint64_t a1, uint64_t a2)
{
  v2[6] = a2;
  v2[4] = _swiftEmptyArrayStorage;
  v2[5] = a1;
  sub_10000588C(&qword_101653760);
  swift_allocObject();
  swift_retain();
  swift_retain();
  v2[2] = CurrentValueSubject.init(_:)();
  swift_retain();
  uint64_t v3 = CurrentValueSubject.eraseToAnyCurrentValuePublisher()();
  swift_release();
  v2[3] = v3;
  return v2;
}

uint64_t sub_1009960D0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100996108()
{
  return sub_100995C98();
}

id sub_100996110()
{
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    unint64_t v1 = result;
    id v2 = (id)MobileGestalt_copy_productType_obj();

    if (v2)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    String.lowercased()();
    swift_bridgeObjectRelease();
    sub_1009961EC();
    sub_1000336D4();
    static PartialMatchCase<>.first(containing:)();
    swift_bridgeObjectRelease();
    return (id)((v3 & 1) == 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1009961EC()
{
  unint64_t result = qword_101653768;
  if (!qword_101653768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653768);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PersistentConnectionObserveriOS.PersistentConnectionSupportedDeviceType(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009962DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistentConnectionObserveriOS.PersistentConnectionSupportedDeviceType()
{
  return &type metadata for PersistentConnectionObserveriOS.PersistentConnectionSupportedDeviceType;
}

uint64_t sub_100996314()
{
  return sub_100062734(&qword_101653770, &qword_101653778);
}

unint64_t sub_100996354()
{
  unint64_t result = qword_101653780;
  if (!qword_101653780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653780);
  }
  return result;
}

unint64_t sub_1009963AC()
{
  unint64_t result = qword_101653788;
  if (!qword_101653788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653788);
  }
  return result;
}

unint64_t sub_100996404()
{
  unint64_t result = qword_101653790;
  if (!qword_101653790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653790);
  }
  return result;
}

uint64_t sub_100996458()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E768);
  sub_100010324(v0, (uint64_t)qword_10170E768);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1009964DC()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1009964E8()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_1009964F4()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_100996500()
{
  return *(unsigned __int8 *)(v0 + 88);
}

NSString sub_100996508()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10170E780 = (uint64_t)result;
  return result;
}

uint64_t sub_100996540()
{
  uint64_t v1 = OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider____lazy_storage___darwinHelper;
  if (*(void *)(v0 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider____lazy_storage___darwinHelper))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider____lazy_storage___darwinHelper);
  }
  else
  {
    uint64_t v2 = sub_1009965A8();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1009965A8()
{
  if (qword_101636EA0 != -1) {
    swift_once();
  }
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10016CE80((uint64_t)sub_10099BF88, v3, v0, v2, isUniquelyReferenced_nonNull_native);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v5 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016CE80((uint64_t)sub_1009967DC, 0, 0xD00000000000002BLL, 0x800000010140DDF0, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;
  char v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016CE80((uint64_t)sub_1009967DC, 0, v6, v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DarwinNotificationHelper();
  swift_allocObject();
  return DarwinNotificationHelper.init(notificationHandlers:)();
}

uint64_t sub_100996784()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100997454();
    return swift_release();
  }
  return result;
}

uint64_t sub_1009967E0()
{
  if (qword_101636E98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100010324(v0, (uint64_t)qword_10170E768);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Language change notification received. Exiting at next opportunity.", v3, 2u);
    swift_slowDealloc();
  }

  return _xpc_transaction_exit_clean();
}

uint64_t sub_1009968C8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v43 = v1;
  uint64_t v44 = v2;
  __chkstk_darwin(v1);
  unint64_t v42 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  __chkstk_darwin(v7);
  unint64_t v31 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v0 + 16) = _swiftEmptyArrayStorage;
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  unsigned int v33 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v32 = *(void (**)(char *))(v9 + 104);
  v32(v11);
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  v30[1] = sub_10099BF90((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  uint64_t v36 = &protocol conformance descriptor for [A];
  sub_100062734((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v12 = v31;
  uint64_t v13 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v14 = v34;
  uint64_t v15 = v35;
  *(void *)(v35 + 24) = v13;
  ((void (*)(char *, void, uint64_t))v32)(v11, v33, v14);
  static DispatchQoS.unspecified.getter();
  uint64_t aBlock = (void **)_swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  unint64_t v16 = v12;
  *(void *)(v15 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  PressuredExitTransactionManager.init()();
  *(unsigned char *)(v15 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_rolesUpdateInProgress) = 0;
  *(unsigned char *)(v15 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_configurationUpdateInProgress) = 0;
  *(unsigned char *)(v15 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_macConfigUpdateInProgress) = 0;
  *(void *)(v15 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider____lazy_storage___darwinHelper) = 0;
  uint64_t v17 = v15;
  sub_100996540();
  swift_release();
  id v18 = [self defaultCenter];
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  unint64_t v50 = sub_10099BF88;
  uint64_t v51 = v19;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  unint64_t v48 = sub_100F468EC;
  uint64_t v49 = &unk_1015E0418;
  unint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  id v21 = [v18 addObserverForName:NSCurrentLocaleDidChangeNotification object:0 queue:0 usingBlock:v20];
  _Block_release(v20);
  swift_unknownObjectRelease();

  uint64_t v23 = v37;
  uint64_t v22 = v38;
  uint64_t v24 = v39;
  (*(void (**)(char *, void, uint64_t))(v38 + 104))(v37, enum case for DispatchQoS.QoSClass.default(_:), v39);
  uint64_t v25 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v24);
  unint64_t v50 = sub_10099BFD8;
  uint64_t v51 = v17;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v47 = 1107296256;
  unint64_t v48 = sub_1004B5480;
  uint64_t v49 = &unk_1015E0440;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v45 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v28 = v42;
  uint64_t v27 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v26);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v27);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v41);
  swift_release();
  return v17;
}

uint64_t sub_100997038()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v32 - v5;
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 stringForKey:v8];

  if (v9)
  {
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = 0;
  }
  static Locale.current.getter();
  uint64_t v13 = Locale.languageCode.getter();
  uint64_t v15 = v14;
  unint64_t v16 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t result = v16(v6, v0);
  if (v15)
  {
    if (v12)
    {
      if (v13 == v10 && v15 == v12)
      {
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v19) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else if (!v12)
  {
    return result;
  }
  if (qword_101636E98 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100010324(v20, (uint64_t)qword_10170E768);
  swift_bridgeObjectRetain();
  id v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v38 = v35;
    *(_DWORD *)uint64_t v24 = 136446466;
    v32[1] = v24 + 4;
    static Locale.current.getter();
    int v34 = v23;
    uint64_t v25 = Locale.languageCode.getter();
    uint64_t v33 = v10;
    uint64_t v27 = v26;
    v16(v4, v0);
    uint64_t v36 = v25;
    uint64_t v37 = v27;
    sub_10000588C(&qword_101644320);
    uint64_t v28 = String.init<A>(describing:)();
    uint64_t v36 = sub_1008FA0F0(v28, v29, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    uint64_t v36 = v33;
    uint64_t v37 = v12;
    swift_bridgeObjectRetain();
    uint64_t v30 = String.init<A>(describing:)();
    uint64_t v36 = sub_1008FA0F0(v30, v31, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, (os_log_type_t)v34, "Current locale (%{public}s) does not match last one we know (%{public}s). Updating configuration.", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return sub_100997454();
}

uint64_t sub_100997454()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SystemInfo.DeviceLockState();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  NSString v8 = &v20[-v7];
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = *(void **)(v1 + 24);
  void *v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.notOnQueue(_:), v9);
  id v14 = v13;
  char v15 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  static SystemInfo.lockState.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v6, enum case for SystemInfo.DeviceLockState.beforeFirstUnlock(_:), v2);
  sub_10099BF90((unint64_t *)&qword_1016429C8, (void (*)(uint64_t))&type metadata accessor for SystemInfo.DeviceLockState);
  char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v17 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v17(v6, v2);
  v17(v8, v2);
  if (v16)
  {
    static os_log_type_t.default.getter();
    if (qword_101637230 == -1) {
      return os_log(_:dso:log:_:_:)();
    }
    goto LABEL_10;
  }
  OS_dispatch_queue.sync<A>(execute:)();
  if (v20[15] == 1)
  {
    type metadata accessor for Transaction();
    static Transaction.named<A>(_:with:)();
    uint64_t v18 = sub_10099B4C0();
    *(void *)&v20[-32] = __chkstk_darwin(v18);
    *(void *)&v20[-24] = v1;
    *(void *)&v20[-16] = v14;
    static Transaction.named<A>(_:with:)();
    return swift_release();
  }
  static os_log_type_t.default.getter();
  if (qword_101637230 != -1) {
LABEL_10:
  }
    swift_once();
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_10099787C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  v7[3] = a3;
  v7[4] = a4;
  swift_retain();
  swift_retain();
  id v8 = a4;
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a3;
  v9[4] = v8;
  swift_retain();
  swift_retain();
  id v10 = v8;
  Future.addSuccess(block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_10099797C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v9 - 8);
  uint64_t v24 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Transaction.capture()();
  v22[1] = static os_log_type_t.error.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101347BA0;
  aBlock[0] = *a3;
  sub_10000588C(&qword_101653970);
  uint64_t v13 = String.init<A>(describing:)();
  uint64_t v15 = v14;
  *(void *)(v12 + 56) = &type metadata for String;
  unint64_t v16 = sub_10000B4CC();
  *(void *)(v12 + 64) = v16;
  *(void *)(v12 + 32) = v13;
  *(void *)(v12 + 40) = v15;
  aBlock[0] = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v17 = String.init<A>(describing:)();
  *(void *)(v12 + 96) = &type metadata for String;
  *(void *)(v12 + 104) = v16;
  *(void *)(v12 + 72) = v17;
  *(void *)(v12 + 80) = v18;
  sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
  char v19 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  aBlock[4] = sub_10099C034;
  aBlock[5] = a3;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E0300;
  uint64_t v20 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v27 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v24);
  return swift_release();
}

uint64_t sub_100997D44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v39 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Locale();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*a1;
  Transaction.capture()();
  static Locale.current.getter();
  uint64_t v14 = Locale.languageCode.getter();
  unint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (v16) {
    uint64_t v17 = v14;
  }
  else {
    uint64_t v17 = 0x6E776F6E6B6E75;
  }
  if (v16) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE700000000000000;
  }
  if (qword_101636E98 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100010324(v19, (uint64_t)qword_10170E768);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v36 = v7;
    aBlock[0] = v23;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v37 = v5;
    swift_bridgeObjectRetain();
    unint64_t v42 = (void *)sub_1008FA0F0(v17, v18, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 12) = 2080;
    unint64_t v42 = v13;
    swift_bridgeObjectRetain();
    uint64_t v24 = String.init<A>(describing:)();
    uint64_t v35 = v17;
    unint64_t v42 = (void *)sub_1008FA0F0(v24, v25, aBlock);
    uint64_t v5 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Received [%{public}s] roles from server %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    uint64_t v7 = v36;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = v38;
  sub_10099A9C4(v26, 2, v38);
  swift_bridgeObjectRelease();
  id v28 = [self standardUserDefaults];
  NSString v29 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v30 = String._bridgeToObjectiveC()();
  [v28 setObject:v29 forKey:v30];

  aBlock[4] = (uint64_t)sub_10099B878;
  aBlock[5] = v27;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004B5480;
  aBlock[3] = (uint64_t)&unk_1015E0238;
  unint64_t v31 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v32 = v39;
  static DispatchQoS.unspecified.getter();
  unint64_t v42 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v33 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v31);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v33, v4);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v32, v7);
  return swift_release();
}

uint64_t sub_100998368(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 24);
  sub_10099BA3C();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = a1;
  v5[3] = v4;
  v5[4] = a2;
  swift_retain();
  id v6 = v4;
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a1;
  v7[3] = a2;
  v7[4] = v6;
  swift_retain();
  id v8 = v6;
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10099847C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v28 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v26 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Transaction.capture()();
  if (qword_101636E98 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100010324(v11, (uint64_t)qword_10170E768);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v23 = a4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    NSString v29 = a1;
    aBlock[0] = v15;
    uint64_t v24 = v9;
    uint64_t v25 = v7;
    *(_DWORD *)uint64_t v14 = 136446210;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v16 = String.init<A>(describing:)();
    NSString v29 = (void *)sub_1008FA0F0(v16, v17, aBlock);
    uint64_t v9 = v24;
    uint64_t v7 = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a4 = v23;
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to update server config due to %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  aBlock[4] = (uint64_t)sub_10099C038;
  aBlock[5] = a4;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004B5480;
  aBlock[3] = (uint64_t)&unk_1015E03F0;
  unint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v19 = v26;
  static DispatchQoS.unspecified.getter();
  NSString v29 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v20 = v28;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v9);
  return swift_release();
}

uint64_t sub_1009988E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v36 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  int v34 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ConfigurationResponse();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v29 - v15;
  Transaction.capture()();
  if (qword_101636E98 != -1) {
    swift_once();
  }
  uint64_t v17 = type metadata accessor for Logger();
  sub_100010324(v17, (uint64_t)qword_10170E768);
  sub_10099BEB4(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
  unint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v33 = v7;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v30 = a3;
    os_log_type_t v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v31 = v8;
    aBlock[0] = v22;
    uint64_t v29 = a1;
    *(_DWORD *)os_log_type_t v21 = 136315138;
    uint64_t v32 = a4;
    sub_10099BEB4((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v38 = (void *)sub_1008FA0F0(v23, v24, aBlock);
    uint64_t v7 = v33;
    a1 = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10099BF1C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received server config %s", v21, 0xCu);
    swift_arrayDestroy();
    uint64_t v8 = v31;
    swift_slowDealloc();
    a3 = v30;
    swift_slowDealloc();
  }
  else
  {
    sub_10099BF1C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
  }

  sub_10099AD04(a1, 1, a3);
  aBlock[4] = (uint64_t)sub_10099BE60;
  aBlock[5] = a3;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1004B5480;
  aBlock[3] = (uint64_t)&unk_1015E0378;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v26 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v38 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v27 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v27, v7);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v26, v37);
  return swift_release();
}

uint64_t sub_100998E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  sub_10001D010(a1, (uint64_t)aBlock);
  swift_allocObject();
  swift_weakInit();
  sub_10000588C(&qword_101653968);
  Subscription.init(subscriber:unsubscribeBlock:)();
  uint64_t v8 = *(NSObject **)(v2 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10 + v9, (char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_10099B3BC;
  *(void *)(v11 + 24) = v10;
  aBlock[4] = sub_1003B7AE0;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A70B0;
  aBlock[3] = &unk_1015E01C0;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v8, v12);
  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100999090(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1009992B4(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100999114(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  uint64_t v8 = (unint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v9 = *(void *)(a1 + 16);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 16) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v9 = sub_100A71D74(0, *(void *)(v9 + 16) + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  unint64_t v12 = *(void *)(v9 + 16);
  unint64_t v11 = *(void *)(v9 + 24);
  if (v12 >= v11 >> 1)
  {
    unint64_t v9 = sub_100A71D74(v11 > 1, v12 + 1, 1, v9);
    *uint64_t v8 = v9;
  }
  *(void *)(v9 + 16) = v12 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v12, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1009992B4(uint64_t a1)
{
  uint64_t v3 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = *(NSObject **)(v1 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10099B234;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_100132424;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A70B0;
  aBlock[3] = &unk_1015E0120;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v6, v10);
  _Block_release(v10);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009994E4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v6[2] = a2;
  swift_bridgeObjectRetain();
  *(void *)(a1 + 16) = sub_1000A500C((uint64_t (*)(char *))sub_10099B274, (uint64_t)v6, v4);
  return swift_bridgeObjectRelease();
}

BOOL sub_100999570()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_100999604(uint64_t a1, uint64_t a2, int a3)
{
  int v60 = a3;
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v65 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void (***)(char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v63 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v12 = *(void *)(v67 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v67);
  unint64_t v62 = (char *)v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v64 = (char *)v40 - v15;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v17 = result;
    uint64_t v59 = v9;
    swift_beginAccess();
    uint64_t v18 = *(void *)(v17 + 16);
    swift_bridgeObjectRetain();
    uint64_t v19 = v18;
    swift_release();
    uint64_t v20 = *(void *)(v18 + 16);
    if (v20)
    {
      uint64_t v58 = sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
      uint64_t v21 = v12 + 16;
      uint64_t v57 = v22;
      uint64_t v23 = *(unsigned __int8 *)(v21 + 64);
      v40[1] = v19;
      unint64_t v24 = (char *)(v19 + ((v23 + 32) & ~v23));
      unint64_t v56 = (void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v55 = (void (**)(char *, uint64_t))(v10 + 8);
      uint64_t v54 = *(void *)(v21 + 56);
      unsigned int v52 = enum case for DispatchQoS.QoSClass.default(_:);
      uint64_t v51 = v23 | 7;
      uint64_t v53 = (v23 + 16) & ~v23;
      unint64_t v25 = (v13 + v53 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v49 = v25 + 40;
      unint64_t v50 = v25;
      unint64_t v48 = v25 + 41;
      uint64_t v47 = (void (**)(uint64_t, char *, uint64_t))(v21 + 16);
      unint64_t v46 = v70;
      uint64_t v45 = (void (**)(char *, uint64_t))(v65 + 8);
      ++v44;
      uint64_t v43 = (void (**)(char *, uint64_t))(v21 - 8);
      uint64_t v42 = v3;
      uint64_t v41 = v5;
      uint64_t v26 = v67;
      uint64_t v27 = v64;
      uint64_t v66 = v21;
      id v28 = v63;
      do
      {
        uint64_t v29 = v57;
        v57(v27, v24, v26);
        uint64_t v30 = v59;
        (*v56)(v28, v52, v59);
        uint64_t v65 = static OS_dispatch_queue.global(qos:)();
        (*v55)(v28, v30);
        uint64_t v31 = v62;
        v29(v62, v27, v67);
        sub_10001D010(v61, (uint64_t)&v71);
        uint64_t v32 = swift_allocObject();
        (*v47)(v32 + v53, v31, v67);
        sub_10001CEB0(&v71, v32 + v50);
        *(unsigned char *)(v32 + v49) = v60;
        v70[2] = sub_10099B944;
        v70[3] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v70[0] = sub_1004B5480;
        v70[1] = &unk_1015E02D8;
        uint64_t v33 = v6;
        int v34 = _Block_copy(aBlock);
        uint64_t v35 = v8;
        static DispatchQoS.unspecified.getter();
        uint64_t v68 = _swiftEmptyArrayStorage;
        sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10000588C((uint64_t *)&unk_10163F350);
        sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
        uint64_t v36 = v41;
        uint64_t v37 = v42;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v38 = (void *)v65;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        uint64_t v26 = v67;
        uint64_t v39 = v34;
        uint64_t v6 = v33;
        uint64_t v27 = v64;
        _Block_release(v39);

        (*v45)(v36, v37);
        uint64_t v8 = v35;
        (*v44)(v35, v6);
        (*v43)(v27, v26);
        swift_release();
        v24 += v54;
        --v20;
      }
      while (v20);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100999D64(uint64_t a1, void *a2, uint64_t a3)
{
  sub_10000588C((uint64_t *)&unk_101657850);
  Subscription.subscriber.getter();
  uint64_t v5 = *sub_10001CD44(v10, v10[3]);
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = sub_10001CD44(a2, v6);
  sub_1000BCF90((uint64_t)v8, a3, 1, 0, 0, v5, v6, v7);
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
}

uint64_t sub_100999E00(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v3 = type metadata accessor for ConfigurationResponse();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v10 - 8);
  uint64_t v38 = a1;
  uint64_t v11 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v13 = v12;
  static String.Encoding.utf8.getter();
  uint64_t v14 = String.init(data:encoding:)();
  unint64_t v16 = v15;
  sub_10001CFB8(v11, v13);
  p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
  if (v16)
  {
    if (qword_101636E98 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170E768);
    swift_bridgeObjectRetain();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v34 = v7;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v35 = v3;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v36 = v5;
      v40[0] = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v39 = sub_1008FA0F0(v14, v16, v40);
      uint64_t v7 = v34;
      p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "serverConfiguration raw data: %s", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v5 = v36;
      swift_slowDealloc();
      uint64_t v3 = v35;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  if (*((void *)p_ivar_base_size + 467) != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100010324(v24, (uint64_t)qword_10170E768);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v38, v6);
  unint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    uint64_t v35 = v3;
    uint64_t v36 = v5;
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_10099BF90((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v39 = sub_1008FA0F0(v28, v29, v40);
    uint64_t v5 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "serverConfiguration: %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v30 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v32 = v31;
  sub_10099BF90(qword_101653990, (void (*)(uint64_t))type metadata accessor for ConfigurationResponse);
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10001CFB8(v30, v32);
  Future.finish(result:)();
  swift_release();
  return sub_10099BF1C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
}

uint64_t sub_10099A4A4()
{
  static os_log_type_t.error.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_101342130;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v1 = String.init<A>(describing:)();
  uint64_t v3 = v2;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 64) = sub_10000B4CC();
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v3;
  sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
  uint64_t v4 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();

  return Future.finish(error:)();
}

uint64_t sub_10099A5B8()
{
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  JSONDecoder.init()();
  uint64_t v0 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v2 = v1;
  sub_10099B9E8();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10001CFB8(v0, v2);
  Future.finish(result:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10099A70C()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_transactionManager;
  uint64_t v2 = type metadata accessor for PressuredExitTransactionManager();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10099A7D4()
{
  return type metadata accessor for ServerConfigurationProvider();
}

uint64_t type metadata accessor for ServerConfigurationProvider()
{
  uint64_t result = qword_1016537E0;
  if (!qword_1016537E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10099A828()
{
  uint64_t result = type metadata accessor for PressuredExitTransactionManager();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t (*sub_10099A8F0())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_10099A948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100998E00(a1, a2);
}

uint64_t sub_10099A96C(uint64_t a1)
{
  uint64_t result = sub_10099BF90(&qword_101653958, (void (*)(uint64_t))type metadata accessor for ServerConfigurationProvider);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10099A9C4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[3] = &type metadata for RolesResponse;
  v22[4] = &off_1015D0CC8;
  v22[0] = a1;
  uint64_t v17 = *(void *)(a3 + 32);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  sub_10001D010((uint64_t)v22, (uint64_t)v21);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  sub_10001CEB0(v21, v14 + 24);
  *(unsigned char *)(v14 + 64) = a2;
  aBlock[4] = sub_10099B88C;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E0288;
  unint64_t v15 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v19 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  swift_release();
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
}

uint64_t sub_10099AD04(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  unint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23[3] = type metadata accessor for ConfigurationResponse();
  v23[4] = (uint64_t)&off_1015DFB40;
  uint64_t v13 = sub_10001D958(v23);
  sub_10099BEB4(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ConfigurationResponse);
  uint64_t v18 = *(void *)(a3 + 32);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  sub_10001D010((uint64_t)v23, (uint64_t)v22);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  sub_10001CEB0(v22, v15 + 24);
  *(unsigned char *)(v15 + 64) = a2;
  aBlock[4] = sub_10099BFE0;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E03C8;
  unint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  os_log_type_t v20 = _swiftEmptyArrayStorage;
  sub_10099BF90((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  swift_release();
  swift_release();
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v23);
}

void sub_10099B060(uint64_t a1)
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v2 = sub_1010AB5F0(v7);
  swift_bridgeObjectRelease();
  if (v2 != a1)
  {
    uint64_t v3 = CFNotificationCenterGetDarwinNotifyCenter();
    if (v3)
    {
      uint64_t v4 = v3;
      if (qword_101636EA0 != -1) {
        swift_once();
      }
      CFStringRef v5 = (const __CFString *)qword_10170E780;
      sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
      uint64_t v6 = (void *)static OS_os_log.default.getter();
      static os_log_type_t.default.getter();
      os_log(_:dso:log:type:_:)();

      CFNotificationCenterPostNotification(v4, v5, 0, 0, 1u);
    }
    else
    {
      static os_log_type_t.error.getter();
      sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
      uint64_t v4 = (__CFNotificationCenter *)static OS_os_log.default.getter();
      os_log(_:dso:log:_:_:)();
    }
  }
}

uint64_t sub_10099B234()
{
  return sub_10099B3D4(sub_1009994E4);
}

uint64_t sub_10099B24C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10099B25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10099B26C()
{
  return swift_release();
}

BOOL sub_10099B274()
{
  return sub_100999570();
}

uint64_t sub_10099B294()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10099B2CC(uint64_t a1)
{
  return sub_100999090(a1);
}

uint64_t sub_10099B2EC()
{
  uint64_t v1 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10099B3BC()
{
  return sub_10099B3D4(sub_100999114);
}

uint64_t sub_10099B3D4(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_10000588C((uint64_t *)&unk_101657850) - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_10099B450()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10099B460(unsigned char *a1@<X8>)
{
  uint64_t v2 = OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_rolesUpdateInProgress;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_rolesUpdateInProgress))
  {
    *a1 = 0;
  }
  else if (*(unsigned char *)(v1 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_configurationUpdateInProgress))
  {
    *a1 = 0;
  }
  else
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_configurationUpdateInProgress) = 1;
    *(unsigned char *)(v1 + v2) = 1;
    *a1 = 1;
  }
}

uint64_t sub_10099B4A4(uint64_t a1)
{
  return sub_100998368(a1, v1);
}

uint64_t sub_10099B4C0()
{
  uint64_t v0 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v0 - 8);
  uint64_t v27 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for FMNAccountType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoleCategoriesEndpoint();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v26 - v11;
  sub_10000588C(&qword_101653978);
  swift_allocObject();
  uint64_t v13 = Future.init()();
  uint64_t v14 = enum case for FMNAccountType.searchParty(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v15(v5, enum case for FMNAccountType.searchParty(_:), v2);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)unint64_t v12 = sub_1010E7A64((uint64_t)v5);
  v15(&v12[*(int *)(v7 + 28)], v14, v2);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v16 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v27, 1, 1, v16);
  uint64_t v17 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v18 = swift_allocObject();
  sub_10099BEB4((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for RoleCategoriesEndpoint);
  uint64_t v19 = (void *)sub_1004A7D48((uint64_t)v10, v17, v18);
  sub_10099BF1C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RoleCategoriesEndpoint);
  sub_10131DF48();
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  sub_1008ECB9C(v24, v20, v22, v19);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001CFB8(v21, v23);
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_10099B838(uint64_t a1)
{
  return sub_10099787C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10099B85C(uint64_t a1)
{
  return sub_10099797C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10099B86C(void *a1)
{
  return sub_100997D44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10099B878()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_rolesUpdateInProgress) = 0;
}

uint64_t sub_10099B88C()
{
  return sub_100999604(*(void *)(v0 + 16), v0 + 24, *(unsigned __int8 *)(v0 + 64));
}

uint64_t sub_10099B89C()
{
  uint64_t v1 = sub_10000588C((uint64_t *)&unk_101657850);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + v6);

  return _swift_deallocObject(v0, v6 + 41, v5);
}

uint64_t sub_10099B944()
{
  uint64_t v1 = *(void *)(sub_10000588C((uint64_t *)&unk_101657850) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 40);

  return sub_100999D64(v0 + v2, (void *)v3, v4);
}

uint64_t sub_10099B9D8()
{
  return sub_10099A4A4();
}

uint64_t sub_10099B9E0()
{
  return sub_10099A5B8();
}

unint64_t sub_10099B9E8()
{
  unint64_t result = qword_101653980;
  if (!qword_101653980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101653980);
  }
  return result;
}

uint64_t sub_10099BA3C()
{
  uint64_t v0 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v0 - 8);
  uint64_t v27 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for FMNAccountType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ConfigurationEndpoint();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v26 - v11;
  sub_10000588C(&qword_101653988);
  swift_allocObject();
  uint64_t v13 = Future.init()();
  uint64_t v14 = enum case for FMNAccountType.searchParty(_:);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v15(v5, enum case for FMNAccountType.searchParty(_:), v2);
  type metadata accessor for AccountURLComponents();
  swift_allocObject();
  *(void *)unint64_t v12 = sub_1010E7A64((uint64_t)v5);
  v15(&v12[*(int *)(v7 + 28)], v14, v2);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v16 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v27, 1, 1, v16);
  uint64_t v17 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v18 = swift_allocObject();
  sub_10099BEB4((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ConfigurationEndpoint);
  uint64_t v19 = (void *)sub_1004A8160((uint64_t)v10, v17, v18);
  sub_10099BF1C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ConfigurationEndpoint);
  sub_10131DF48();
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  sub_1008ECB9C(v24, v20, v22, v19);
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001CFB8(v21, v23);
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  swift_release();
  return v13;
}

uint64_t sub_10099BDB4()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10099BDFC(void *a1)
{
  return sub_10099847C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10099BE0C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10099BE54(uint64_t a1)
{
  return sub_1009988E8(a1, v1[2], v1[3], v1[4]);
}

void sub_10099BE60()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12searchpartyd27ServerConfigurationProvider_configurationUpdateInProgress) = 0;
}

uint64_t sub_10099BE74()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 24);

  return _swift_deallocObject(v0, 65, 7);
}

uint64_t sub_10099BEB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10099BF1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10099BF80(uint64_t a1)
{
  return sub_100999E00(a1, v1);
}

uint64_t sub_10099BF88()
{
  return sub_100996784();
}

uint64_t sub_10099BF90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10099BFD8()
{
  return sub_100997038();
}

uint64_t sub_10099C03C()
{
  return swift_initClassMetadata2();
}

void *sub_10099C09C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SafeLocation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    v11[1] = v1;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1009C70F0(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SafeLocation);
      sub_100A06758((uint64_t)v6);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v9 += v10;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

uint64_t sub_10099C240(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v100 = sub_10000588C((uint64_t *)&unk_101653C80);
  uint64_t v94 = *(void *)(v100 - 8);
  uint64_t v3 = __chkstk_darwin(v100);
  uint64_t v90 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v92 = (uint64_t)&v76 - v5;
  uint64_t v6 = sub_10000588C(&qword_1016496E0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v91 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v93 = (uint64_t)&v76 - v9;
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_101653C90);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_101645750);
  uint64_t v89 = *(void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v84 = (uint64_t)&v76 - v16;
  uint64_t v17 = type metadata accessor for URL();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v97 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v76 - v22;
  __chkstk_darwin(v21);
  unint64_t v25 = (char *)&v76 - v24;
  uint64_t v26 = sub_10000588C((uint64_t *)&unk_101653CA0);
  uint64_t v27 = __chkstk_darwin(v26 - 8);
  uint64_t v80 = (char *)&v76 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v83 = (uint64_t)&v76 - v29;
  unint64_t v82 = (char *)sub_101158C68((uint64_t)&off_10159F670);
  uint64_t v96 = *(void *)(v2 + 160);
  if (qword_1016370F0 != -1) {
    swift_once();
  }
  uint64_t v30 = sub_100010324(v17, (uint64_t)qword_10170ED28);
  uint64_t v101 = v18;
  uint64_t v31 = v17;
  uint64_t v33 = v18 + 16;
  unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v32(v25, v30, v31);
  uint64_t v34 = v25;
  os_log_type_t v95 = v25;
  uint64_t v35 = v31;
  v32(v23, (uint64_t)v34, v31);
  uint64_t v36 = *(int *)(v12 + 40);
  uint64_t v37 = v12;
  uint64_t v78 = v12;
  uint64_t v38 = &v15[v36];
  unint64_t v77 = &v15[v36];
  uint64_t v39 = type metadata accessor for DirectorySequence();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(void (**)(void))(v40 + 56);
  uint64_t v42 = v40 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v41)(v38, 1, 1, v39);
  v32(v15, (uint64_t)v23, v35);
  uint64_t v43 = *(int *)(v37 + 36);
  uint64_t v44 = v97;
  *(void *)&v15[v43] = v96;
  uint64_t v85 = v32;
  uint64_t v81 = v33;
  v32(v44, (uint64_t)v23, v35);
  swift_retain();
  uint64_t v45 = (uint64_t)v99;
  DirectorySequence.init(at:includingPropertiesForKeys:options:)();
  uint64_t v46 = v101 + 8;
  uint64_t v47 = *(void (**)(char *, uint64_t))(v101 + 8);
  os_log_type_t v79 = v23;
  v47(v23, v35);
  unint64_t v87 = v41;
  uint64_t v88 = v39;
  uint64_t v86 = v42;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v41)(v45, 0, 1, v39);
  sub_1005E353C(v45, (uint64_t)v77);
  uint64_t v48 = v84;
  sub_10001D608((uint64_t)v15, v84, &qword_101645750);
  unint64_t v49 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v89 + 7);
  uint64_t v50 = (uint64_t)v80;
  uint64_t v51 = v78;
  v49(v80, 1, 1, v78);
  sub_10001DAB4(v50, &qword_101645758);
  sub_10001D608(v48, v50, &qword_101645750);
  v49((char *)v50, 0, 1, v51);
  unsigned int v52 = v95;
  sub_10001D608(v50, v83, (uint64_t *)&unk_101653CA0);
  uint64_t v89 = v47;
  uint64_t v101 = v46;
  uint64_t v53 = ((uint64_t (*)(char *, uint64_t))v47)(v52, v35);
  __chkstk_darwin(v53);
  uint64_t v54 = v98;
  *(&v76 - 2) = (uint64_t)v82;
  *(&v76 - 1) = v54;
  sub_100658408(sub_10048321C, (uint64_t)(&v76 - 4));
  uint64_t v56 = v55;
  uint64_t v83 = 0;
  swift_bridgeObjectRelease();
  uint64_t v84 = *(void *)(v56 + 16);
  swift_bridgeObjectRelease();
  uint64_t v57 = v35;
  if (qword_101636A48 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_100010324(v35, (uint64_t)qword_10170DD78);
  uint64_t v59 = (void (*)(char *, char *, uint64_t))v85;
  v85(v52, v58, v35);
  int v60 = v79;
  v59(v79, v52, v35);
  uint64_t v61 = v100;
  uint64_t v62 = (uint64_t)v90;
  unint64_t v82 = &v90[*(int *)(v100 + 40)];
  uint64_t v63 = v87;
  uint64_t v64 = v88;
  v87();
  v59((char *)v62, v60, v57);
  uint64_t v65 = v97;
  *(void *)(v62 + *(int *)(v61 + 36)) = v96;
  v59(v65, v60, v57);
  swift_retain();
  uint64_t v66 = (uint64_t)v99;
  DirectorySequence.init(at:includingPropertiesForKeys:options:)();
  uint64_t v67 = (uint64_t (*)(char *, uint64_t))v89;
  v89(v60, v57);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v63)(v66, 0, 1, v64);
  sub_1005E353C(v66, (uint64_t)v82);
  uint64_t v68 = v92;
  sub_10001D608(v62, v92, (uint64_t *)&unk_101653C80);
  uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56);
  uint64_t v70 = (uint64_t)v91;
  uint64_t v71 = v100;
  v69(v91, 1, 1, v100);
  sub_10001DAB4(v70, &qword_101653CB0);
  sub_10001D608(v68, v70, (uint64_t *)&unk_101653C80);
  v69((char *)v70, 0, 1, v71);
  sub_10001D608(v70, v93, &qword_1016496E0);
  uint64_t v72 = v67(v95, v57);
  __chkstk_darwin(v72);
  *(&v76 - 2) = v98;
  sub_1006590AC((uint64_t (*)(uint64_t))sub_1005E35A4, (uint64_t)(&v76 - 4));
  uint64_t v74 = *(void *)(v73 + 16);
  swift_bridgeObjectRelease();
  uint64_t result = v84 + v74;
  if (__OFADD__(v84, v74)) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10099CB28()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170E790);
  sub_100010324(v0, (uint64_t)qword_10170E790);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10099CBAC(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100FD0F30(a1);
  if (v13)
  {
    uint64_t v34 = *(void *)(v2 + 64);
    sub_10001D608(a2 + 8, (uint64_t)v38, &qword_101644320);
    uint64_t v37 = *(void *)(a2 + 32);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v2;
    *(void *)(v14 + 24) = v13;
    long long v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v14 + 32) = *(_OWORD *)a2;
    *(_OWORD *)(v14 + 48) = v15;
    *(void *)(v14 + 64) = *(void *)(a2 + 32);
    aBlock[4] = sub_1009C5B54;
    aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1004B5480;
    aBlock[3] = &unk_1015E0708;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1009C5960((uint64_t)v38);
    sub_10048307C((uint64_t)&v37);
    static DispatchQoS.unspecified.getter();
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_1009C5B60((unint64_t *)&qword_10163B7E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    uint64_t v33 = v9;
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v33);
    swift_release();
  }
  else
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100010324(v17, (uint64_t)qword_10170E790);
    uint64_t v18 = *(void *)(a2 + 8);
    unint64_t v19 = *(void *)(a2 + 16);
    aBlock[0] = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    id v20 = a1;
    sub_10048307C((uint64_t)aBlock);
    id v21 = v20;
    swift_bridgeObjectRetain();
    sub_10048307C((uint64_t)aBlock);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v38[0] = v33;
      *(_DWORD *)uint64_t v24 = 136446466;
      id v25 = [v21 debugDescription:v33];
      uint64_t v34 = 0;
      id v26 = v25;
      uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v29 = v28;

      uint64_t v37 = sub_1008FA0F0(v27, v29, v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      if (v19) {
        uint64_t v30 = v18;
      }
      else {
        uint64_t v30 = 0x6E776F6E6B6E75;
      }
      if (v19) {
        unint64_t v31 = v19;
      }
      else {
        unint64_t v31 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1008FA0F0(v30, v31, v38);
      uint64_t v13 = v34;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10025C634((uint64_t)aBlock);
      swift_bridgeObjectRelease();
      sub_10025C634((uint64_t)aBlock);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to add connection %{public}s, bundle: %{public}s.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();

      sub_10025C634((uint64_t)aBlock);
      swift_bridgeObjectRelease();
      sub_10025C634((uint64_t)aBlock);
    }
  }
  return v13;
}

uint64_t sub_10099D13C(uint64_t a1, uint64_t a2, long long *a3)
{
  long long v17 = *a3;
  uint64_t v6 = (uint64_t)a3 + 8;
  uint64_t v7 = *((void *)a3 + 2);
  uint64_t v8 = *((void *)a3 + 4);
  char v9 = *((unsigned char *)a3 + 24) & 1;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  XPCSession.identifier.getter();
  swift_beginAccess();
  sub_10001D608(v6, (uint64_t)v25, &qword_101644320);
  uint64_t v24 = *((void *)a3 + 4);
  swift_retain();
  sub_1009C5960((uint64_t)v25);
  sub_10048307C((uint64_t)&v24);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v22 = v8;
  uint64_t v23 = v15;
  *(void *)(a1 + 56) = 0x8000000000000000;
  uint64_t v18 = a2;
  long long v19 = v17;
  uint64_t v20 = v7;
  char v21 = v9;
  sub_100170CE4(&v18, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 56) = v23;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_endAccess();
}

void sub_10099D2E0()
{
  uint64_t v1 = v0;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E790);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "All sessions went away.", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = *(void (**)(uint64_t))(v1 + 40);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    v6(v7);
    sub_1000A1534((uint64_t)v6);
  }
}

uint64_t sub_10099D400(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)(v2 + 64);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1009C7498;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E10B8;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v15[1] = _swiftEmptyArrayStorage;
  sub_1009C5B60((unint64_t *)&qword_10163B7E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return swift_release();
}

void sub_10099D6D0()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v18 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - v4;
  XPCSession.identifier.getter();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  sub_1009C5B60(&qword_10163BC60, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
  Dictionary.subscript.getter();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v0);
  if ((void)v20)
  {
    unint64_t v6 = *((void *)&v21 + 1);
    uint64_t v17 = v21;
    uint64_t v7 = *((void *)&v22 + 1);
    XPCSession.identifier.getter();
    long long v21 = 0u;
    long long v22 = 0u;
    long long v20 = 0u;
    swift_beginAccess();
    type metadata accessor for Dictionary();
    Dictionary.subscript.setter();
    swift_endAccess();
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100010324(v8, (uint64_t)qword_10170E790);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain_n();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = (void *)swift_slowAlloc();
      uint64_t v18 = (char *)swift_slowAlloc();
      *(void *)&long long v20 = v18;
      *(_DWORD *)uint64_t v11 = 138543618;
      uint64_t v16 = v7;
      uint64_t v13 = XPCSession.connection.getter();
      uint64_t v19 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v12 = v13;
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2082;
      if (v6) {
        uint64_t v14 = v17;
      }
      else {
        uint64_t v14 = 0x6E776F6E6B6E75;
      }
      if (v6) {
        unint64_t v15 = v6;
      }
      else {
        unint64_t v15 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1008FA0F0(v14, v15, (uint64_t *)&v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Session went away %{public}@- bundle: %{public}s", (uint8_t *)v11, 0x16u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
  }
}

uint64_t sub_10099DBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v19[0] = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  __chkstk_darwin(v8);
  os_log_type_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101653E20);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  v19[1] = *(void *)(a2 + 64);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v19[0];
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_1009C6958;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E0B68;
  uint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v23 = _swiftEmptyArrayStorage;
  sub_1009C5B60((unint64_t *)&qword_10163B7E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  return swift_release();
}

uint64_t sub_10099DF48(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 56);
  id v26 = _swiftEmptyArrayStorage;
  uint64_t v5 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v4 + 56) + 48 * i;
    uint64_t v17 = *(void *)(v16 + 24);
    char v18 = *(unsigned char *)(v16 + 32);
    uint64_t v19 = *(void *)(v16 + 40);
    uint64_t v21 = *(void *)v16;
    long long v22 = *(_OWORD *)(v16 + 8);
    uint64_t v23 = v17;
    char v24 = v18;
    uint64_t v25 = v19;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10099E1BC((uint64_t)&v26, &v21, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v10 >= v9) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_19:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v9) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v9) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v9) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v9) {
    goto LABEL_26;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  int64_t v15 = v10 + 5;
  if (v10 + 5 >= v9)
  {
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_10000588C((uint64_t *)&unk_101653E20);
    return CheckedContinuation.resume(returning:)();
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v10 = v15;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v9) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_28:
  __break(1u);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_10099E1BC(uint64_t result, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a2[1];
  if ((a3 & ~v3) == 0)
  {
    uint64_t v4 = (void **)result;
    uint64_t v5 = *a2;
    uint64_t v6 = a2[2];
    unint64_t v7 = a2[3];
    char v31 = *((unsigned char *)a2 + 32);
    uint64_t v8 = a2[5];
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100010324(v9, (uint64_t)qword_10170E790);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v10 = v8;
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    uint64_t v32 = v6;
    if (os_log_type_enabled(v11, type))
    {
      uint64_t v29 = v3;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446466;
      if (v7) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 0x6E776F6E6B6E75;
      }
      uint64_t v28 = v10;
      if (v7) {
        unint64_t v14 = v7;
      }
      else {
        unint64_t v14 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      sub_1008FA0F0(v13, v14, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      sub_1009C69EC();
      uint64_t v15 = FixedWidthInteger.data.getter();
      unint64_t v17 = v16;
      uint64_t v18 = Data.hexString.getter();
      uint64_t v19 = v4;
      unint64_t v21 = v20;
      sub_10001CFB8(v15, v17);
      sub_1008FA0F0(v18, v21, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v4 = v19;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, type, "Bundle: %{public}s is listening for updates to property mask: %{public}s.", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v3 = v29;
      swift_slowDealloc();

      uint64_t v22 = v5;
      uint64_t v23 = v28;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      uint64_t v22 = v5;
      uint64_t v23 = v10;
    }
    char v24 = *v4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100A71D88(0, v24[2] + 1, 1, v24);
      char v24 = (void *)result;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1)
    {
      uint64_t result = (uint64_t)sub_100A71D88((void *)(v25 > 1), v26 + 1, 1, v24);
      char v24 = (void *)result;
    }
    void v24[2] = v26 + 1;
    uint64_t v27 = &v24[6 * v26];
    v27[4] = v22;
    v27[5] = v3;
    v27[6] = v32;
    v27[7] = v7;
    *((unsigned char *)v27 + 64) = v31;
    v27[9] = v23;
    *uint64_t v4 = v24;
  }
  return result;
}

uint64_t sub_10099E550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[0] = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_101653E20);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(a2 + 64);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v15 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = v20[0];
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = v17;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v16 + v15, v14, v11);
  aBlock[4] = sub_1009C65B8;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E0AC8;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  static DispatchQoS.unspecified.getter();
  char v24 = _swiftEmptyArrayStorage;
  sub_1009C5B60((unint64_t *)&qword_10163B7E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v22);
  return swift_release();
}

uint64_t sub_10099E8F0(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1009C5FFC(_swiftEmptyArrayStorage, v4, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10000588C((uint64_t *)&unk_101653E20);
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_10099E998(void **a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  uint64_t v67 = a1;
  uint64_t v68 = v5;
  uint64_t v64 = a2[1];
  uint64_t v69 = a2[2];
  unint64_t v75 = a2[3];
  int v65 = *((unsigned __int8 *)a2 + 32);
  uint64_t v6 = a2[5];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v85 = (char *)v63 - v12;
  uint64_t v13 = sub_10000588C(&qword_101638CF0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v63 - v17;
  uint64_t v74 = *(void *)(v6 + 16);
  if (v74)
  {
    v63[1] = v3;
    unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v19 = v8 + 16;
    unint64_t v21 = (*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64);
    uint64_t v73 = v6 + v21;
    uint64_t v84 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
    uint64_t v22 = *(void *)(v19 + 56);
    uint64_t v81 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
    unint64_t v82 = v20;
    uint64_t v80 = (void (**)(char *, char *, uint64_t))(v19 + 16);
    uint64_t v66 = a3 + v21;
    uint64_t v78 = v22;
    os_log_type_t v79 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v71 = v6;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v23 = 0;
    uint64_t v72 = a3;
    uint64_t v70 = v18;
    while (1)
    {
      v82(v18, v73 + v78 * v23, v7);
      uint64_t v83 = *v84;
      v83(v18, 0, 1, v7);
      char v24 = *v81;
      if ((*v81)(v18, 1, v7) == 1) {
        break;
      }
      unint64_t v25 = *v80;
      uint64_t v76 = v23;
      unint64_t v77 = v25;
      v25(v85, v18, v7);
      uint64_t v26 = *(void *)(a3 + 16);
      swift_bridgeObjectRetain();
      if (v26)
      {
        uint64_t v27 = v66;
        while (1)
        {
          v82(v16, v27, v7);
          v83(v16, 0, 1, v7);
          if (v24(v16, 1, v7) == 1) {
            break;
          }
          v77(v11, v16, v7);
          sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v29 = *v79;
          (*v79)(v11, v7);
          if (v28)
          {
            swift_bridgeObjectRelease();
            v29(v85, v7);
            swift_bridgeObjectRelease();
            uint64_t v31 = v71;
            swift_bridgeObjectRelease();
            if (qword_101636EA8 != -1) {
              swift_once();
            }
            uint64_t v32 = type metadata accessor for Logger();
            sub_100010324(v32, (uint64_t)qword_10170E790);
            unint64_t v33 = v75;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            uint64_t v34 = v68;
            swift_retain_n();
            uint64_t v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.default.getter();
            BOOL v37 = os_log_type_enabled(v35, v36);
            uint64_t v38 = v67;
            if (v37)
            {
              uint64_t v39 = swift_slowAlloc();
              uint64_t v87 = swift_slowAlloc();
              *(_DWORD *)uint64_t v39 = 136446466;
              if (v75) {
                uint64_t v40 = v69;
              }
              else {
                uint64_t v40 = 0x6E776F6E6B6E75;
              }
              if (v75) {
                unint64_t v41 = v75;
              }
              else {
                unint64_t v41 = 0xE700000000000000;
              }
              swift_bridgeObjectRetain();
              uint64_t v86 = sub_1008FA0F0(v40, v41, &v87);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              swift_release_n();
              swift_bridgeObjectRelease();
              *(_WORD *)(v39 + 12) = 2048;
              swift_bridgeObjectRelease();
              uint64_t v86 = v74;
              uint64_t v38 = v67;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Bundle: %{public}s is listening for updates to %ld beacons.", (uint8_t *)v39, 0x16u);
              swift_arrayDestroy();
              unint64_t v33 = v75;
              uint64_t v31 = v71;
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
              swift_release_n();
              swift_bridgeObjectRelease_n();
            }
            uint64_t v50 = *v38;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_100A71D88(0, v50[2] + 1, 1, v50);
              uint64_t v50 = (void *)result;
            }
            unint64_t v52 = v50[2];
            unint64_t v51 = v50[3];
            if (v52 >= v51 >> 1)
            {
              uint64_t result = (uint64_t)sub_100A71D88((void *)(v51 > 1), v52 + 1, 1, v50);
              uint64_t v50 = (void *)result;
            }
            v50[2] = v52 + 1;
            uint64_t v53 = &v50[6 * v52];
            uint64_t v54 = v64;
            v53[4] = v34;
            v53[5] = v54;
            v53[6] = v69;
            v53[7] = v33;
            *((unsigned char *)v53 + 64) = v65;
            v53[9] = v31;
            *uint64_t v38 = v50;
            return result;
          }
          v27 += v78;
          if (!--v26) {
            goto LABEL_9;
          }
        }
      }
      else
      {
LABEL_9:
        v83(v16, 1, 1, v7);
      }
      uint64_t v23 = v76 + 1;
      a3 = v72;
      swift_bridgeObjectRelease();
      (*v79)(v85, v7);
      uint64_t v18 = v70;
      if (v23 == v74)
      {
        v83(v70, 1, 1, v7);
        break;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_100010324(v42, (uint64_t)qword_10170E790);
    unint64_t v43 = v75;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v71 = v6;
      uint64_t v85 = (char *)v47;
      uint64_t v87 = v47;
      *(_DWORD *)uint64_t v46 = 136446210;
      if (v43) {
        uint64_t v48 = v69;
      }
      else {
        uint64_t v48 = 0x6E776F6E6B6E75;
      }
      if (v43) {
        unint64_t v49 = v43;
      }
      else {
        unint64_t v49 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      uint64_t v86 = sub_1008FA0F0(v48, v49, &v87);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Bundle: %{public}s is listening for updates to any beacons.", v46, 0xCu);
      swift_arrayDestroy();
      uint64_t v6 = v71;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v55 = v67;
    uint64_t v56 = *v67;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100A71D88(0, v56[2] + 1, 1, v56);
      uint64_t v56 = (void *)result;
    }
    unint64_t v58 = v56[2];
    unint64_t v57 = v56[3];
    uint64_t v59 = v68;
    if (v58 >= v57 >> 1)
    {
      uint64_t result = (uint64_t)sub_100A71D88((void *)(v57 > 1), v58 + 1, 1, v56);
      uint64_t v56 = (void *)result;
    }
    v56[2] = v58 + 1;
    int v60 = &v56[6 * v58];
    uint64_t v61 = v64;
    v60[4] = v59;
    v60[5] = v61;
    unint64_t v62 = v75;
    v60[6] = v69;
    v60[7] = v62;
    *((unsigned char *)v60 + 64) = v65;
    v60[9] = v6;
    *uint64_t v55 = v56;
  }
  return result;
}

uint64_t sub_10099F3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v18 = *(void *)(v7 - 8);
  uint64_t v19 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_101653FB8);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v17[1] = *(void *)(a2 + 64);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v14 + v13, (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_1009C72A8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015E0FF0;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v21 = _swiftEmptyArrayStorage;
  sub_1009C5B60((unint64_t *)&qword_10163B7E0, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v19);
  return swift_release();
}

uint64_t sub_10099F744(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 56);
  int64_t v3 = *(void *)(v2 + 16);
  if (!v3)
  {
LABEL_24:
    uint64_t v24 = _swiftEmptyArrayStorage[2];
    if (v24)
    {
      if (v24 == 1)
      {
        uint64_t v25 = 0;
        uint64_t v26 = 0;
      }
      else
      {
        uint64_t v27 = 0;
        uint64_t v28 = 0;
        uint64_t v25 = v24 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v29 = &_swiftEmptyArrayStorage[9];
        uint64_t v30 = v24 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          uint64_t v31 = *(v29 - 5);
          uint64_t v32 = *v29;
          v29 += 10;
          v27 |= v31;
          v28 |= v32;
          v30 -= 2;
        }
        while (v30);
        uint64_t v26 = v28 | v27;
        if (v24 == v25) {
          goto LABEL_33;
        }
      }
      uint64_t v33 = v24 - v25;
      uint64_t v34 = &_swiftEmptyArrayStorage[5 * v25 + 4];
      do
      {
        uint64_t v35 = *v34;
        v34 += 5;
        v26 |= v35;
        --v33;
      }
      while (v33);
    }
LABEL_33:
    swift_bridgeObjectRelease();
    sub_10000588C(&qword_101653FB8);
    return CheckedContinuation.resume(returning:)();
  }
  swift_bridgeObjectRetain();
  sub_1000B83C8(0, v3, 0);
  uint64_t result = sub_100803228(v2);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = v2 + 64;
  char v9 = *(unsigned char *)(v2 + 32);
  int64_t v36 = v3;
  int v37 = v5;
  uint64_t v38 = v2 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << v9)
  {
    unint64_t v12 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_35;
    }
    if (*(_DWORD *)(v2 + 36) != v5) {
      goto LABEL_36;
    }
    uint64_t v39 = v7;
    uint64_t v13 = *(void *)(v2 + 56) + 48 * v6;
    uint64_t v14 = *(void *)(v13 + 24);
    uint64_t v41 = *(void *)(v13 + 16);
    uint64_t v42 = *(void *)(v13 + 8);
    char v40 = *(unsigned char *)(v13 + 32);
    uint64_t v15 = *(void *)(v13 + 40);
    unint64_t v16 = _swiftEmptyArrayStorage[2];
    unint64_t v17 = _swiftEmptyArrayStorage[3];
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    if (v16 >= v17 >> 1) {
      uint64_t result = sub_1000B83C8(v17 > 1, v16 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v16 + 1;
    uint64_t v18 = &_swiftEmptyArrayStorage[5 * v16];
    v18[4] = v42;
    v18[5] = v41;
    v18[6] = v14;
    *((unsigned char *)v18 + 56) = v40;
    v18[8] = v15;
    char v9 = *(unsigned char *)(v2 + 32);
    unint64_t v10 = 1 << v9;
    if (v6 >= 1 << v9) {
      goto LABEL_37;
    }
    uint64_t v8 = v2 + 64;
    uint64_t v19 = *(void *)(v38 + 8 * v12);
    if ((v19 & (1 << v6)) == 0) {
      goto LABEL_38;
    }
    int v5 = v37;
    if (*(_DWORD *)(v2 + 36) != v37) {
      goto LABEL_39;
    }
    unint64_t v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      unint64_t v10 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v36;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (v10 + 63) >> 6;
      int64_t v11 = v36;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v38 + 8 * v21);
        if (!v23)
        {
          unint64_t v21 = v12 + 2;
          if (v12 + 2 >= v22) {
            goto LABEL_4;
          }
          unint64_t v23 = *(void *)(v38 + 8 * v21);
          if (!v23)
          {
            while (v22 - 3 != v12)
            {
              unint64_t v23 = *(void *)(v2 + 88 + 8 * v12++);
              if (v23)
              {
                unint64_t v21 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        unint64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    uint64_t v7 = v39 + 1;
    uint64_t v6 = v10;
    if (v39 + 1 == v11)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10099FA74()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v1);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v0[5] = 0;
  v0[6] = 0;
  v0[7] = _swiftEmptyDictionarySingleton;
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v3);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v9[1] = _swiftEmptyArrayStorage;
  sub_1009C5B60((unint64_t *)&qword_101638CC0, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_100062734((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v0[8] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v7 = swift_release();
  return sub_100F36EDC(v7);
}

void sub_10099FD04()
{
  sub_1000A1534(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 64);
}

uint64_t sub_10099FD3C()
{
  uint64_t v0 = sub_10110D850();
  sub_1000A1534(*(void *)(v0 + 40));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_10099FD80()
{
  sub_10099FD3C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SimpleBeaconUpdateConnections()
{
  return sub_1000103A0();
}

uint64_t sub_10099FDC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  __chkstk_darwin(v2 - 8);
  swift_defaultActor_initialize();
  *(void *)(v0 + 112) = 0xD000000000000019;
  *(void *)(v0 + 120) = 0x8000000101371300;
  sub_10000588C(&qword_101653FF8);
  swift_allocObject();
  *(void *)(v0 + 128) = sub_10099FA74();
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  *(void *)(v0 + 152) = 0;
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  sub_1010AC168(v8);
  swift_bridgeObjectRelease();
  sub_10000588C(&qword_101654000);
  *(void *)(v0 + 160) = AsyncKeyedThrottle.__allocating_init(throttleInterval:)();
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  uint64_t v3 = WorkItemQueue.__allocating_init(name:identifier:)();
  *(void *)(v0 + 176) = 0;
  *(void *)(v0 + 184) = 0;
  *(void *)(v0 + 168) = v3;
  *(unsigned char *)(v0 + 192) = 1;
  *(void *)(v0 + 200) = _swiftEmptyDictionarySingleton;
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = *(void *)(v4 + 40);
  *(void *)(v4 + 40) = sub_1009C76D0;
  *(void *)(v4 + 48) = v5;
  sub_1000A1534(v6);
  return v1;
}

uint64_t sub_10099FFBC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    type metadata accessor for Transaction();
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_1009A0054(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_1009A0074, a1, 0);
}

uint64_t sub_1009A0074()
{
  sub_1009A7660();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009A00D4()
{
  return sub_1009A0114();
}

uint64_t sub_1009A00F4()
{
  return sub_1009A0114();
}

uint64_t sub_1009A0114()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10001DAB4((uint64_t)v4, &qword_10164DBB0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      if (v11 | v9)
      {
        v13[0] = 0;
        v13[1] = 0;
        v13[2] = v9;
        v13[3] = v11;
      }
    }
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1009A0330(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  type metadata accessor for UUID();
  v2[17] = swift_task_alloc();
  return _swift_task_switch(sub_1009A03C0, v1, 0);
}

uint64_t sub_1009A03C0()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1009A04FC;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009A04FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A0614, v2, 0);
}

uint64_t sub_1009A0614()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = v0[19];
  if (v2)
  {
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[15];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    type metadata accessor for WorkItemQueue.WorkItem();
    uint64_t v5 = (void *)swift_allocObject();
    void v5[2] = v3;
    v5[3] = v4;
    v5[4] = 0;
    v5[5] = v2;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    UUID.init()();
    WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
    dispatch thunk of WorkItemQueue.enqueue(_:)();
    swift_release();
    swift_release();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  }
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1009A0754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  void *v6 = v4;
  v6[1] = sub_10001D2E4;
  v6[4] = a4;
  return _swift_task_switch(sub_1009A884C, a4, 0);
}

uint64_t sub_1009A0800()
{
  *(void *)(v1 + 336) = v0;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v1 + 344) = swift_task_alloc();
  return _swift_task_switch(sub_1009A0894, v0, 0);
}

uint64_t sub_1009A0894()
{
  uint64_t v1 = *(void *)(v0 + 336);
  sub_1009A7660();
  *(void *)(v0 + 352) = *(void *)(v1 + 128);
  return _swift_task_switch(sub_1009A0904, 0, 0);
}

uint64_t sub_1009A0904()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v1;
  type metadata accessor for SPSimpleBeaconProperty(0);
  *uint64_t v1 = v0;
  v1[1] = sub_1009A09EC;
  uint64_t v3 = *(void *)(v0 + 352);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 312, 0, 0, 0x65706F72506C6C61, 0xEF29287365697472, sub_1009C6A40, v3, v2);
}

uint64_t sub_1009A09EC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A0AE8, 0, 0);
}

uint64_t sub_1009A0AE8()
{
  uint64_t v1 = v0[42];
  v0[46] = v0[39];
  return _swift_task_switch(sub_1009A0B0C, v1, 0);
}

uint64_t sub_1009A0B0C()
{
  if ((*(unsigned char *)(v0 + 368) & 0x20) != 0)
  {
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 176, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 200))
    {
      sub_10001CEB0((long long *)(v0 + 176), v0 + 96);
      sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
      uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_101639108 + dword_101639108);
      uint64_t v2 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v2;
      *uint64_t v2 = v0;
      uint64_t v3 = sub_1009A0D34;
      goto LABEL_10;
    }
LABEL_14:
    __break(1u);
    return result;
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 160))
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
  sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v2;
  *uint64_t v2 = v0;
  uint64_t v3 = sub_1009A1144;
LABEL_10:
  v2[1] = v3;
  return v4();
}

uint64_t sub_1009A0D34(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A0E4C, v2, 0);
}

uint64_t sub_1009A0E4C()
{
  uint64_t v1 = v0 + 96;
  uint64_t v2 = *(void *)(v0 + 384);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 336);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    *(void *)(v0 + 328) = *(void *)(v2
                                      + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_connectableDevicesChangedSubject);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_10000588C((uint64_t *)&unk_101653EB0);
    sub_100062734((unint64_t *)&unk_101656760, (uint64_t *)&unk_101653EB0);
    uint64_t v4 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    *(void *)(v3 + 136) = v4;
    swift_release();
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170E790);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Subscribed to connectableDeviceCount changes.", v8, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v11 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_1009A1144;
    return v11();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009A1144(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 400) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A125C, v2, 0);
}

uint64_t sub_1009A125C()
{
  uint64_t v1 = *(void *)(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 400);
    return _swift_task_switch(sub_1009A1304, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1009A1304()
{
  uint64_t v1 = *(void *)(v0 + 336);
  *(void *)(v0 + 408) = sub_100AB2C40();
  return _swift_task_switch(sub_1009A1378, v1, 0);
}

uint64_t sub_1009A1378()
{
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = *(void *)(v0 + 368);
  uint64_t v3 = *(void *)(v0 + 336);
  *(void *)(v0 + 320) = *(void *)(v0 + 408);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v1;
  v5[4] = v2;
  swift_retain();
  sub_10000588C((uint64_t *)&unk_101653E90);
  sub_100062734(&qword_10163BD20, (uint64_t *)&unk_101653E90);
  uint64_t v6 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v3 + 144) = v6;
  swift_release();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 16, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 40))
  {
    sub_10001CEB0((long long *)(v0 + 16), v0 + 216);
    sub_10001CD44((void *)(v0 + 216), *(void *)(v0 + 240));
    uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_101639150 + dword_101639150);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1009A1554;
    return v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009A1554(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 424) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A166C, v2, 0);
}

uint64_t sub_1009A166C()
{
  uint64_t v1 = (uint64_t)(v0 + 27);
  uint64_t v2 = v0[53];
  if (v2)
  {
    uint64_t v3 = v0[42];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (!*(void *)(v3 + 176))
    {
      uint64_t v4 = v0[50];
      uint64_t v6 = v0[42];
      uint64_t v5 = v0[43];
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      v8[4] = v2;
      v8[5] = v6;
      v8[6] = v4;
      swift_retain();
      swift_retain();
      uint64_t v9 = sub_100128234(v5, (uint64_t)&unk_101653EA8, (uint64_t)v8);
      sub_10001DAB4(v5, &qword_10164DBB0);
      *(void *)(v3 + 176) = v9;
    }
    swift_release();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  }
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  v0[54] = sub_100010324(v10, (uint64_t)qword_10170E790);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Subscribed to record changes.", v13, 2u);
    swift_slowDealloc();
  }

  uint64_t v14 = v0[50];
  return _swift_task_switch(sub_1009A187C, v14, 0);
}

uint64_t sub_1009A187C()
{
  uint64_t v1 = v0[42];
  v0[55] = *(void *)(*(void *)(v0[50] + 128) + OBJC_IVAR____TtC12searchpartyd11BeaconStore_recordDeletedPublisher);
  swift_retain();
  return _swift_task_switch(sub_1009A1904, v1, 0);
}

uint64_t sub_1009A1904()
{
  uint64_t v1 = v0[50];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[42];
  v0[38] = v0[55];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v1;
  v5[4] = v2;
  swift_retain();
  sub_10000588C((uint64_t *)&unk_10163BD30);
  sub_100062734(&qword_101656740, (uint64_t *)&unk_10163BD30);
  uint64_t v6 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v3 + 152) = v6;
  swift_release();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Subscribed to record deletions.", v9, 2u);
    swift_slowDealloc();
  }

  swift_release();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1009A1AD8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    type metadata accessor for Transaction();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v3;
    *(void *)(v4 + 24) = v1;
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1009A1B9C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  type metadata accessor for UUID();
  v2[4] = swift_task_alloc();
  return _swift_task_switch(sub_1009A1C2C, 0, 0);
}

uint64_t sub_1009A1C2C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1009A1D30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_1009A1D54, a1, 0);
}

uint64_t sub_1009A1D54()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 40) = *(void *)(v1 + 184);
  *(unsigned char *)(v0 + 80) = *(unsigned char *)(v1 + 192);
  return _swift_task_switch(sub_1009A1D84, 0, 0);
}

uint64_t sub_1009A1D84()
{
  if ((*(unsigned char *)(v0 + 80) & 1) != 0 || *(void *)(v0 + 40) != *(void *)(v0 + 32))
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170E790);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Updating sessions for connectableDeviceCount changes.", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 24);

    return _swift_task_switch(sub_1009A1EF0, v7, 0);
  }
  else
  {
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_1009A1EF0()
{
  sub_1009A7520(*(void *)(v0 + 32));
  return _swift_task_switch(sub_1009A1F58, 0, 0);
}

uint64_t sub_1009A1F58()
{
  uint64_t v1 = *(void *)(v0[3] + 128);
  uint64_t v2 = swift_task_alloc();
  v0[6] = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = 32;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[7] = v3;
  uint64_t v4 = sub_10000588C(&qword_101653DA8);
  *uint64_t v3 = v0;
  v3[1] = sub_1009A2064;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000001BLL, 0x800000010140DFD0, sub_1009C77D0, v2, v4);
}

uint64_t sub_1009A2064()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A217C, 0, 0);
}

uint64_t sub_1009A217C()
{
  uint64_t v1 = v0[2];
  v0[8] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1009A222C;
  uint64_t v3 = v0[3];
  v2[18] = v1;
  v2[19] = v3;
  return _swift_task_switch(sub_1009A9204, v3, 0);
}

uint64_t sub_1009A222C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1009A2340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v195 = a4;
  uint64_t v190 = a3;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163B7C0);
  __chkstk_darwin(v5 - 8);
  unint64_t v192 = (char *)&v167 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = type metadata accessor for MemberSharingCircle();
  uint64_t v181 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v177 = (uint64_t)&v167 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101638D10);
  __chkstk_darwin(v8 - 8);
  uint64_t v191 = (char *)&v167 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = type metadata accessor for OwnerSharingCircle();
  uint64_t v187 = *(void *)(v188 - 8);
  __chkstk_darwin(v188);
  uint64_t v182 = (uint64_t)&v167 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101660BB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v185 = (char *)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  uint64_t v168 = *(void *)(found - 8);
  __chkstk_darwin(found);
  uint64_t v170 = (uint64_t)&v167 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101653F20);
  __chkstk_darwin(v14 - 8);
  uint64_t v172 = (char *)&v167 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = type metadata accessor for SafeLocation();
  uint64_t v171 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v174 = (uint64_t)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000588C(&qword_10163BB70);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v167 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for LostModeRecord();
  uint64_t v175 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  uint64_t v176 = (uint64_t)&v167 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10000588C(&qword_10163B9E0);
  __chkstk_darwin(v21 - 8);
  unint64_t v23 = (char *)&v167 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = type metadata accessor for BeaconNamingRecord();
  uint64_t v180 = *(void *)(v184 - 8);
  uint64_t v24 = __chkstk_darwin(v184);
  uint64_t v26 = (char *)&v167 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v179 = (uint64_t)&v167 - v27;
  uint64_t v28 = sub_10000588C(&qword_10163BB80);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v167 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for KeyAlignmentRecord();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v167 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for UUID();
  uint64_t v194 = *(void *)(v193 - 8);
  __chkstk_darwin(v193);
  int64_t v36 = (char *)&v167 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v189 = result;
  if (!result) {
    return result;
  }
  sub_10001D010(a1, (uint64_t)&v199);
  uint64_t v38 = sub_10000588C(&qword_10163BCC8);
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  uint64_t v186 = v38;
  uint64_t v39 = a1;
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v198 = 0;
    memset(v197, 0, sizeof(v197));
    sub_10001DAB4((uint64_t)v197, (uint64_t *)&unk_10163BBE0);
    if ((v195 & 0x300) != 0)
    {
      sub_10001D010(a1, (uint64_t)&v202);
      char v54 = swift_dynamicCast();
      uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
      if (v54)
      {
        uint64_t v180 = a1;
        v55(v30, 0, 1, v31);
        sub_1009C715C((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
        if (qword_101636EA8 != -1) {
          swift_once();
        }
        uint64_t v56 = type metadata accessor for Logger();
        sub_100010324(v56, (uint64_t)qword_10170E790);
        unint64_t v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.default.getter();
        BOOL v59 = os_log_type_enabled(v57, v58);
        uint64_t v60 = v189;
        uint64_t v61 = v193;
        uint64_t v62 = (uint64_t)v191;
        if (v59)
        {
          uint64_t v63 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v63 = 0;
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "Updating sessions for KeySyncRecord changes.", v63, 2u);
          swift_slowDealloc();
        }

        sub_10000588C(&qword_10163BC50);
        uint64_t v64 = v194;
        unint64_t v65 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_101342130;
        (*(void (**)(unint64_t, char *, uint64_t))(v64 + 16))(v66 + v65, &v34[*(int *)(v31 + 24)], v61);
        uint64_t v67 = sub_100DF29F8(v66);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        type metadata accessor for Transaction();
        uint64_t v68 = (void *)swift_allocObject();
        v68[2] = v60;
        v68[3] = v67;
        uint64_t v69 = v190;
        v68[4] = 0;
        v68[5] = v69;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        static Transaction.asyncTask(name:block:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v70 = type metadata accessor for KeyAlignmentRecord;
        uint64_t v71 = (uint64_t)v34;
        uint64_t v72 = v61;
        goto LABEL_14;
      }
      v55(v30, 1, 1, v31);
      sub_10001DAB4((uint64_t)v30, &qword_10163BB80);
    }
    uint64_t v72 = v193;
    uint64_t v62 = (uint64_t)v191;
    uint64_t v82 = (uint64_t)v185;
    if ((v195 & 0x280) != 0)
    {
      sub_10001D010(a1, (uint64_t)&v202);
      uint64_t v83 = v184;
      char v84 = swift_dynamicCast();
      uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v180 + 56);
      if (v84)
      {
        uint64_t v180 = a1;
        v85(v23, 0, 1, v83);
        uint64_t v86 = v179;
        sub_1009C715C((uint64_t)v23, v179, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
        if (qword_101636EA8 != -1) {
          swift_once();
        }
        uint64_t v87 = type metadata accessor for Logger();
        sub_100010324(v87, (uint64_t)qword_10170E790);
        sub_1009C70F0(v86, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
        uint64_t v88 = Logger.logObject.getter();
        os_log_type_t v89 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v88, v89))
        {
          uint64_t v90 = swift_slowAlloc();
          uint64_t v202 = swift_slowAlloc();
          *(_DWORD *)uint64_t v90 = 141558275;
          uint64_t v199 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v90 + 12) = 2081;
          uint64_t v91 = v184;
          sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v199 = sub_1008FA0F0(v92, v93, &v202);
          uint64_t v62 = (uint64_t)v191;
          uint64_t v72 = v193;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1009C71C8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
          _os_log_impl((void *)&_mh_execute_header, v88, v89, "Updating sessions for Beacon Name changes. Beacon: %{private,mask.hash}s", (uint8_t *)v90, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v69 = v190;
          uint64_t v60 = v189;
        }
        else
        {
          sub_1009C71C8((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);

          uint64_t v69 = v190;
          uint64_t v60 = v189;
          uint64_t v91 = v184;
        }
        sub_10000588C(&qword_10163BC50);
        uint64_t v147 = v194;
        unint64_t v148 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
        uint64_t v149 = swift_allocObject();
        *(_OWORD *)(v149 + 16) = xmmword_101342130;
        uint64_t v150 = v179;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v147 + 16))(v149 + v148, v179 + *(int *)(v91 + 24), v72);
        os_log_type_t v151 = sub_100DF29F8(v149);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        type metadata accessor for Transaction();
        uint64_t v152 = (void *)swift_allocObject();
        v152[2] = v60;
        v152[3] = v151;
        v152[4] = 0;
        v152[5] = v69;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        static Transaction.asyncTask(name:block:)();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1009C71C8(v150, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
        uint64_t v81 = (uint64_t)v192;
        goto LABEL_20;
      }
      v85(v23, 1, 1, v83);
      sub_10001DAB4((uint64_t)v23, &qword_10163B9E0);
    }
    uint64_t v69 = v190;
    uint64_t v60 = v189;
    uint64_t v81 = (uint64_t)v192;
    if ((v195 & 0x200) == 0) {
      goto LABEL_37;
    }
    sub_10001D010(v39, (uint64_t)&v202);
    uint64_t v94 = v178;
    int v95 = swift_dynamicCast();
    uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56);
    if (v95)
    {
      uint64_t v97 = v72;
      uint64_t v180 = v39;
      v96(v19, 0, 1, v94);
      sub_1009C715C((uint64_t)v19, v176, (uint64_t (*)(void))type metadata accessor for LostModeRecord);
      if (qword_101636EA8 != -1) {
        swift_once();
      }
      uint64_t v98 = type metadata accessor for Logger();
      sub_100010324(v98, (uint64_t)qword_10170E790);
      uint64_t v99 = Logger.logObject.getter();
      os_log_type_t v100 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v99, v100))
      {
        uint64_t v101 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v101 = 0;
        _os_log_impl((void *)&_mh_execute_header, v99, v100, "Updating sessions for Lost Mode changes.", v101, 2u);
        swift_slowDealloc();
      }

      sub_10000588C(&qword_10163BC50);
      uint64_t v102 = v194;
      unint64_t v103 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
      uint64_t v104 = swift_allocObject();
      *(_OWORD *)(v104 + 16) = xmmword_101342130;
      uint64_t v105 = v176;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v102 + 16))(v104 + v103, v176 + *(int *)(v178 + 24), v97);
      uint64_t v106 = sub_100DF29F8(v104);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      type metadata accessor for Transaction();
      uint64_t v107 = (void *)swift_allocObject();
      v107[2] = v60;
      v107[3] = v106;
      v107[4] = 0;
      v107[5] = v69;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1009C71C8(v105, (uint64_t (*)(void))type metadata accessor for LostModeRecord);
      uint64_t v39 = v180;
      uint64_t v72 = v97;
      goto LABEL_36;
    }
    v96(v19, 1, 1, v94);
    sub_10001DAB4((uint64_t)v19, &qword_10163BB70);
    sub_10001D010(v39, (uint64_t)&v202);
    uint64_t v135 = (uint64_t)v172;
    uint64_t v136 = v173;
    int v137 = swift_dynamicCast();
    os_log_type_t v138 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v171 + 56);
    if (v137)
    {
      uint64_t v180 = v39;
      v138(v135, 0, 1, v136);
      sub_1009C715C(v135, v174, (uint64_t (*)(void))type metadata accessor for SafeLocation);
      if (qword_101636EA8 != -1) {
        swift_once();
      }
      uint64_t v139 = type metadata accessor for Logger();
      sub_100010324(v139, (uint64_t)qword_10170E790);
      uint64_t v140 = Logger.logObject.getter();
      os_log_type_t v141 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v140, v141))
      {
        uint64_t v142 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v142 = 0;
        _os_log_impl((void *)&_mh_execute_header, v140, v141, "Updating sessions for Safe Location changes.", v142, 2u);
        swift_slowDealloc();
      }

      uint64_t v143 = v174;
      uint64_t v144 = swift_bridgeObjectRetain();
      uint64_t v145 = sub_101158244(v144);
      swift_bridgeObjectRelease();
      type metadata accessor for Transaction();
      uint64_t v146 = (void *)swift_allocObject();
      v146[2] = v60;
      v146[3] = v145;
      v146[4] = 0;
      v146[5] = v69;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
      swift_bridgeObjectRelease();
      sub_1009C71C8(v143, (uint64_t (*)(void))type metadata accessor for SafeLocation);
      uint64_t v39 = v180;
      goto LABEL_37;
    }
    v138(v135, 1, 1, v136);
    sub_10001DAB4(v135, &qword_101653F20);
    sub_10001D010(v39, (uint64_t)&v202);
    uint64_t v153 = found;
    char v154 = swift_dynamicCast();
    uint64_t v155 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v168 + 56);
    if ((v154 & 1) == 0)
    {
      v155(v82, 1, 1, v153);
      sub_10001DAB4(v82, &qword_101660BB0);
      goto LABEL_37;
    }
    uint64_t v180 = v39;
    v155(v82, 0, 1, v153);
    sub_1009C715C(v82, v170, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v156 = type metadata accessor for Logger();
    sub_100010324(v156, (uint64_t)qword_10170E790);
    uint64_t v157 = Logger.logObject.getter();
    os_log_type_t v158 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v157, v158))
    {
      uint64_t v159 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v159 = 0;
      _os_log_impl((void *)&_mh_execute_header, v157, v158, "Updating sessions for NotifyWhenFound changes.", v159, 2u);
      swift_slowDealloc();
    }

    sub_10000588C(&qword_10163BC50);
    uint64_t v160 = v194;
    unint64_t v161 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
    uint64_t v162 = swift_allocObject();
    *(_OWORD *)(v162 + 16) = xmmword_101342130;
    uint64_t v163 = *(int *)(v153 + 24);
    uint64_t v164 = v170;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v160 + 16))(v162 + v161, v170 + v163, v72);
    uint64_t v165 = sub_100DF29F8(v162);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v166 = (void *)swift_allocObject();
    v166[2] = v60;
    v166[3] = v165;
    v166[4] = 0;
    v166[5] = v69;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v70 = type metadata accessor for NotifyWhenFoundRecord;
    uint64_t v71 = v164;
LABEL_14:
    sub_1009C71C8(v71, (uint64_t (*)(void))v70);
    uint64_t v39 = v180;
LABEL_36:
    uint64_t v81 = (uint64_t)v192;
    goto LABEL_37;
  }
  uint64_t v180 = a1;
  sub_10001CEB0(v197, (uint64_t)&v202);
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v40 = type metadata accessor for Logger();
  sub_100010324(v40, (uint64_t)qword_10170E790);
  sub_10001D010((uint64_t)&v202, (uint64_t)&v199);
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  BOOL v43 = os_log_type_enabled(v41, v42);
  uint64_t v44 = v193;
  if (v43)
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 141558275;
    uint64_t v196 = 1752392040;
    *(void *)&v197[0] = v46;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v45 + 12) = 2081;
    uint64_t v185 = (char *)(v45 + 14);
    uint64_t v48 = v200;
    uint64_t v47 = v201;
    sub_10001CD44(&v199, v200);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v47 + 8) + 8) + 32))(v48);
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v51 = v50;
    unint64_t v52 = v36;
    uint64_t v53 = v44;
    (*(void (**)(char *, uint64_t))(v194 + 8))(v52, v44);
    uint64_t v196 = sub_1008FA0F0(v49, v51, (uint64_t *)v197);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v199);
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "Updating sessions for BeaconRecord changes. Beacon: %{private,mask.hash}s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v53 = v193;
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v199);
  }

  uint64_t v60 = v189;
  char v73 = sub_1008BBD30(&v202);
  sub_10000588C(&qword_10163BC50);
  uint64_t v74 = swift_allocObject();
  *(_OWORD *)(v74 + 16) = xmmword_101342130;
  uint64_t v76 = v203;
  uint64_t v75 = v204;
  sub_10001CD44(&v202, v203);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v75 + 8) + 8) + 32))(v76);
  if (v73)
  {
    unint64_t v77 = sub_100DF29F8(v74);
    swift_setDeallocating();
    uint64_t v72 = v53;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v78 = (void *)swift_allocObject();
    v78[2] = v60;
    v78[3] = v77;
    uint64_t v69 = v190;
    v78[4] = 0;
    v78[5] = v69;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v79 = sub_101158244(v74);
    swift_setDeallocating();
    uint64_t v72 = v53;
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v80 = (void *)swift_allocObject();
    uint64_t v69 = v190;
    v80[2] = v79;
    v80[3] = v69;
    v80[4] = v60;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
  }
  static Transaction.asyncTask(name:block:)();
  uint64_t v81 = (uint64_t)v192;
  uint64_t v62 = (uint64_t)v191;
  swift_release();
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v202);
LABEL_20:
  uint64_t v39 = v180;
LABEL_37:
  if ((v195 & 0x220) == 0) {
    return swift_release();
  }
  sub_10001D010(v39, (uint64_t)&v202);
  uint64_t v108 = v188;
  char v109 = swift_dynamicCast();
  unint64_t v110 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v187 + 56);
  if (v109)
  {
    v110(v62, 0, 1, v108);
    uint64_t v111 = v182;
    sub_1009C715C(v62, v182, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v112 = type metadata accessor for Logger();
    sub_100010324(v112, (uint64_t)qword_10170E790);
    uint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      int v115 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v115 = 0;
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "Updating sessions for sharing changes [OwnerSharingCircle].", v115, 2u);
      swift_slowDealloc();
    }

    sub_10000588C(&qword_10163BC50);
    uint64_t v116 = v194;
    unint64_t v117 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
    uint64_t v118 = swift_allocObject();
    *(_OWORD *)(v118 + 16) = xmmword_101342130;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v116 + 16))(v118 + v117, v111 + *(int *)(v108 + 24), v72);
    uint64_t v119 = sub_100DF29F8(v118);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v120 = (void *)swift_allocObject();
    v120[2] = v60;
    v120[3] = v119;
    v120[4] = 0;
    v120[5] = v69;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v121 = type metadata accessor for OwnerSharingCircle;
    return sub_1009C71C8(v111, (uint64_t (*)(void))v121);
  }
  v110(v62, 1, 1, v108);
  sub_10001DAB4(v62, (uint64_t *)&unk_101638D10);
  sub_10001D010(v39, (uint64_t)&v202);
  uint64_t v122 = v183;
  char v123 = swift_dynamicCast();
  int v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v181 + 56);
  if (v123)
  {
    v124(v81, 0, 1, v122);
    uint64_t v125 = v81;
    uint64_t v111 = v177;
    sub_1009C715C(v125, v177, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v126 = type metadata accessor for Logger();
    sub_100010324(v126, (uint64_t)qword_10170E790);
    BOOL v127 = Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Updating sessions for sharing changes [MemberSharingCircle].", v129, 2u);
      swift_slowDealloc();
    }

    sub_10000588C(&qword_10163BC50);
    uint64_t v130 = v194;
    unint64_t v131 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_101342130;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v130 + 16))(v132 + v131, v111 + *(int *)(v122 + 24), v72);
    uint64_t v133 = sub_100DF29F8(v132);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v134 = (void *)swift_allocObject();
    v134[2] = v60;
    v134[3] = v133;
    v134[4] = 0;
    v134[5] = v69;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v121 = type metadata accessor for MemberSharingCircle;
    return sub_1009C71C8(v111, (uint64_t (*)(void))v121);
  }
  v124(v81, 1, 1, v122);
  swift_release();
  return sub_10001DAB4(v81, (uint64_t *)&unk_10163B7C0);
}

uint64_t sub_1009A4378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[15] = a5;
  v6[16] = a6;
  v6[14] = a4;
  sub_10000588C(&qword_101638CF0);
  v6[17] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v6[18] = v8;
  v6[19] = *(void *)(v8 - 8);
  v6[20] = swift_task_alloc();
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  v6[23] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v6[24] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for LocalFindableAccessoryRecord();
  v6[25] = v9;
  v6[26] = *(void *)(v9 - 8);
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CloudStorageStore.State(0);
  v6[29] = v10;
  v6[30] = *(void *)(v10 - 8);
  v6[31] = swift_task_alloc();
  v6[32] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10164E8B0);
  v6[33] = swift_task_alloc();
  uint64_t v11 = sub_10000588C(&qword_101656E20);
  v6[34] = v11;
  v6[35] = *(void *)(v11 - 8);
  v6[36] = swift_task_alloc();
  uint64_t v12 = sub_10000588C(&qword_10164E8C0);
  v6[37] = v12;
  v6[38] = *(void *)(v12 - 8);
  v6[39] = swift_task_alloc();
  uint64_t v13 = sub_10000588C(&qword_10164E8C8);
  v6[40] = v13;
  v6[41] = *(void *)(v13 - 8);
  v6[42] = swift_task_alloc();
  return _swift_task_switch(sub_1009A46F0, a4, 0);
}

uint64_t sub_1009A46F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 112) + 128);
  *(void *)(v0 + 344) = v1;
  return _swift_task_switch(sub_1009A4714, v1, 0);
}

uint64_t sub_1009A4714()
{
  uint64_t v2 = v0[35];
  uint64_t v1 = v0[36];
  uint64_t v3 = v0[34];
  swift_allocObject();
  swift_weakInit();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v3);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_release();
  return _swift_task_switch(sub_1009A481C, 0, 0);
}

uint64_t sub_1009A481C()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = v0[37];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[44] = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[45] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009A48FC;
  uint64_t v5 = v0[40];
  uint64_t v6 = v0[33];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1009A48FC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A49F8, 0, 0);
}

uint64_t sub_1009A49F8()
{
  uint64_t v86 = v0;
  uint64_t v1 = v0[33];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[30] + 48))(v1, 1, v0[29]) == 1)
  {
    (*(void (**)(void, void))(v0[41] + 8))(v0[42], v0[40]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
LABEL_5:
    return v2();
  }
  uint64_t v3 = v0[44];
  sub_1009C715C(v1, v0[32], type metadata accessor for CloudStorageStore.State);
  static Task<>.checkCancellation()();
  v0[46] = v3;
  if (v3)
  {
    uint64_t v4 = v0[41];
    uint64_t v5 = v0[42];
    uint64_t v6 = v0[40];
    sub_1009C71C8(v0[32], type metadata accessor for CloudStorageStore.State);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    goto LABEL_5;
  }
  sub_1009C70F0(v0[32], v0[31], type metadata accessor for CloudStorageStore.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v81 = *(void (**)(void, void, void))(v0[19] + 32);
      v81(v0[22], v0[31], v0[18]);
      if (qword_101636EA8 != -1) {
        swift_once();
      }
      unint64_t v9 = v0[21];
      uint64_t v10 = v0[22];
      uint64_t v11 = v0[18];
      uint64_t v12 = v0[19];
      uint64_t v13 = type metadata accessor for Logger();
      sub_100010324(v13, (uint64_t)qword_10170E790);
      uint64_t v83 = *(void (**)(unint64_t, uint64_t, uint64_t))(v12 + 16);
      v83(v9, v10, v11);
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      BOOL v16 = os_log_type_enabled(v14, v15);
      uint64_t v17 = v0[21];
      uint64_t v18 = v0[18];
      uint64_t v19 = v0[19];
      if (v16)
      {
        uint64_t v20 = swift_slowAlloc();
        v85[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v20 = 141558275;
        v0[12] = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v20 + 12) = 2081;
        sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[13] = sub_1008FA0F0(v21, v22, v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v82(v17, v18);
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Updating sessions for local findable record deleted %{private,mask.hash}s.", (uint8_t *)v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        v82(v0[21], v0[18]);
      }

      uint64_t v40 = v0[22];
      uint64_t v41 = v0[18];
      uint64_t v42 = v0[19];
      unint64_t v43 = v0[17];
      sub_10000588C(&qword_10163BC50);
      unint64_t v44 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v80 = *(void *)(v42 + 72);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_101342130;
      v83(v45 + v44, v40, v41);
      sub_1009C5B60(&qword_10163BC60, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v46 = Set.init(minimumCapacity:)();
      v83(v43, v45 + v44, v41);
      uint64_t v47 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56);
      v47(v43, 0, 1, v41);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v41) == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v48 = v82;
      }
      else
      {
        v81(v0[20], v0[17], v0[18]);
        swift_bridgeObjectRetain();
        uint64_t v51 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v52 = -1 << *(unsigned char *)(v46 + 32);
        unint64_t v53 = v51 & ~v52;
        if ((*(void *)(v46 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53))
        {
          uint64_t v54 = ~v52;
          while (1)
          {
            unint64_t v55 = v0[23];
            uint64_t v56 = v0[18];
            v83(v55, *(void *)(v46 + 48) + v53 * v80, v56);
            sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v57 = dispatch thunk of static Equatable.== infix(_:_:)();
            unint64_t v58 = v55;
            BOOL v59 = v82;
            v82(v58, v56);
            if (v57) {
              break;
            }
            unint64_t v53 = (v53 + 1) & v54;
            if (((*(void *)(v46 + 56 + ((v53 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
              goto LABEL_28;
            }
          }
          swift_bridgeObjectRelease();
        }
        else
        {
LABEL_28:
          uint64_t v60 = v0[23];
          uint64_t v61 = v0[20];
          uint64_t v62 = v0[18];
          swift_bridgeObjectRelease();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v83(v60, v61, v62);
          v85[0] = v46;
          sub_100DDDE60(v60, v53, isUniquelyReferenced_nonNull_native);
          uint64_t v46 = v85[0];
          swift_bridgeObjectRelease();
          BOOL v59 = v82;
        }
        unint64_t v71 = v0[17];
        uint64_t v70 = v0[18];
        v59(v0[20], v70);
        v47(v71, 1, 1, v70);
        swift_bridgeObjectRelease();
        uint64_t v48 = v59;
      }
      uint64_t v84 = v0[32];
      uint64_t v72 = v0[22];
      uint64_t v73 = v0[18];
      uint64_t v75 = v0[15];
      uint64_t v74 = v0[16];
      type metadata accessor for Transaction();
      uint64_t v76 = (void *)swift_allocObject();
      v76[2] = v46;
      v76[3] = v74;
      v76[4] = v75;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      static Transaction.asyncTask(name:block:)();
      swift_bridgeObjectRelease();
      swift_release();
      v48(v72, v73);
      uint64_t v39 = v84;
    }
    else
    {
      uint64_t v38 = v0[31];
      sub_1009C71C8(v0[32], type metadata accessor for CloudStorageStore.State);
      uint64_t v39 = v38;
    }
    sub_1009C71C8(v39, type metadata accessor for CloudStorageStore.State);
    goto LABEL_37;
  }
  uint64_t v23 = v0[26];
  sub_10001CEB0((long long *)v0[31], (uint64_t)(v0 + 2));
  sub_10001D010((uint64_t)(v0 + 2), (uint64_t)(v0 + 7));
  sub_10000588C(&qword_10164E8D0);
  char v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v23 + 56);
  if ((v24 & 1) == 0)
  {
    uint64_t v49 = v0[32];
    uint64_t v50 = v0[24];
    v25(v50, 1, 1, v0[25]);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    sub_1009C71C8(v49, type metadata accessor for CloudStorageStore.State);
    sub_10001DAB4(v50, (uint64_t *)&unk_10163B1D0);
LABEL_37:
    v0[44] = v0[46];
    unint64_t v77 = (void *)swift_task_alloc();
    v0[45] = v77;
    *unint64_t v77 = v0;
    v77[1] = sub_1009A48FC;
    uint64_t v78 = v0[40];
    uint64_t v79 = v0[33];
    return AsyncStream.Iterator.next(isolation:)(v79, 0, 0, v78);
  }
  uint64_t v26 = v0[28];
  uint64_t v27 = v0[24];
  v25(v27, 0, 1, v0[25]);
  sub_1009C715C(v27, v26, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v28 = v0[27];
  uint64_t v29 = v0[28];
  uint64_t v30 = type metadata accessor for Logger();
  sub_100010324(v30, (uint64_t)qword_10170E790);
  sub_1009C70F0(v29, v28, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  uint64_t v34 = v0[27];
  if (v33)
  {
    uint64_t v35 = swift_slowAlloc();
    v85[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 141558275;
    *(void *)(v35 + 4) = 1752392040;
    *(_WORD *)(v35 + 12) = 2081;
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v35 + 14) = sub_1008FA0F0(v36, v37, v85);
    swift_bridgeObjectRelease();
    sub_1009C71C8(v34, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Updating sessions for local findable record modified %{private,mask.hash}s.", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1009C71C8(v0[27], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }

  uint64_t v64 = v0[28];
  uint64_t v65 = v0[18];
  uint64_t v66 = v0[19];
  uint64_t v67 = v0[15];
  sub_10000588C(&qword_10163BC50);
  unint64_t v68 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = xmmword_101342130;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v66 + 16))(v69 + v68, v64, v65);
  v0[47] = sub_100DF29F8(v69);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return _swift_task_switch(sub_1009A5730, v67, 0);
}

uint64_t sub_1009A5730()
{
  uint64_t v1 = v0[47];
  uint64_t v3 = v0[15];
  uint64_t v2 = v0[16];
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = v3;
  v4[3] = v1;
  v4[4] = 0;
  v4[5] = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_1009A585C, 0, 0);
}

uint64_t sub_1009A585C()
{
  uint64_t v1 = v0[32];
  sub_1009C71C8(v0[28], (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  sub_1009C71C8(v1, type metadata accessor for CloudStorageStore.State);
  v0[44] = v0[46];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[45] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1009A48FC;
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[33];
  return AsyncStream.Iterator.next(isolation:)(v4, 0, 0, v3);
}

uint64_t sub_1009A5954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v177 = a4;
  uint64_t v178 = a3;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163B7C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v168 = (char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = type metadata accessor for MemberSharingCircle();
  uint64_t v167 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  uint64_t v165 = (uint64_t)&v149 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101638D10);
  __chkstk_darwin(v8 - 8);
  uint64_t v174 = (char *)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for OwnerSharingCircle();
  uint64_t v173 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  uint64_t v169 = (uint64_t)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101660BB0);
  __chkstk_darwin(v11 - 8);
  os_log_type_t v151 = (char *)&v149 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  uint64_t v150 = *(void *)(found - 8);
  __chkstk_darwin(found);
  uint64_t v149 = (uint64_t)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101653F20);
  __chkstk_darwin(v14 - 8);
  uint64_t v155 = (char *)&v149 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = type metadata accessor for SafeLocation();
  uint64_t v154 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v152 = (uint64_t)&v149 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000588C(&qword_10163BB70);
  __chkstk_darwin(v17 - 8);
  uint64_t v162 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for LostModeRecord();
  uint64_t v161 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v157 = (uint64_t)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10000588C(&qword_10163B9E0);
  __chkstk_darwin(v20 - 8);
  unint64_t v22 = (char *)&v149 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for BeaconNamingRecord();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v164 = (uint64_t)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10000588C((uint64_t *)&unk_101653D30);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v29 - 8);
  uint64_t v166 = (uint64_t)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for UUID();
  uint64_t v179 = *(void *)(v31 - 8);
  uint64_t v180 = v31;
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v160 = (char *)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v159 = (uint64_t)&v149 - v35;
  __chkstk_darwin(v34);
  os_log_type_t v158 = (char *)&v149 - v36;
  uint64_t v37 = sub_10000588C((uint64_t *)&unk_101653D50);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)&v149 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  unint64_t v43 = (char *)&v149 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  uint64_t v176 = result;
  if (!result) {
    return result;
  }
  uint64_t v171 = a1;
  sub_10001D010(a1, (uint64_t)v183);
  uint64_t v45 = sub_10000588C(&qword_10163BCC0);
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  uint64_t v172 = v45;
  if (swift_dynamicCast())
  {
    sub_10001CEB0(v181, (uint64_t)&v184);
    sub_10000588C(&qword_10163BC50);
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_101342130;
    uint64_t v48 = v185;
    uint64_t v47 = v186;
    sub_10001CD44(&v184, v185);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v47 + 8) + 8) + 32))(v48);
    uint64_t v49 = sub_101158244(v46);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(void *)&v181[0] = v49;
    sub_10001D010((uint64_t)&v184, (uint64_t)v183);
    char v50 = swift_dynamicCast();
    uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
    if ((v50 & 1) == 0)
    {
      v51(v39, 1, 1, v40);
      sub_10001DAB4((uint64_t)v39, (uint64_t *)&unk_101653D50);
      uint64_t v54 = v178;
      uint64_t v57 = v176;
      uint64_t v55 = v171;
      __int16 v56 = v177;
LABEL_25:
      uint64_t v94 = *(void *)&v181[0];
      type metadata accessor for Transaction();
      int v95 = (void *)swift_allocObject();
      v95[2] = v94;
      v95[3] = v54;
      v95[4] = v57;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v184);
      goto LABEL_40;
    }
    v51(v39, 0, 1, v40);
    sub_1009C715C((uint64_t)v39, (uint64_t)v43, type metadata accessor for SharedBeaconRecord);
    sub_10001D074((uint64_t)&v43[*(int *)(v40 + 80)], (uint64_t)v28, (uint64_t *)&unk_101653D30);
    uint64_t v52 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v28, 1, v52) == 1)
    {
      sub_10001DAB4((uint64_t)v28, (uint64_t *)&unk_101653D30);
      uint64_t v53 = v166;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v179 + 56))(v166, 1, 1, v180);
      uint64_t v54 = v178;
      uint64_t v55 = v171;
      __int16 v56 = v177;
    }
    else
    {
      uint64_t v53 = v166;
      sub_10001D074((uint64_t)&v28[*(int *)(v52 + 20)], v166, &qword_101638CF0);
      sub_1009C71C8((uint64_t)v28, type metadata accessor for SharedBeaconRecord.PropertyListContent);
      int v87 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v179 + 48))(v53, 1, v180);
      uint64_t v54 = v178;
      uint64_t v55 = v171;
      __int16 v56 = v177;
      if (v87 != 1)
      {
        uint64_t v88 = v179;
        uint64_t v89 = v180;
        uint64_t v90 = v158;
        (*(void (**)(char *, uint64_t, uint64_t))(v179 + 32))(v158, v53, v180);
        uint64_t v91 = v160;
        (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v160, v90, v89);
        uint64_t v92 = v159;
        sub_100DC8CB8(v159, v91);
        unint64_t v93 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
        v93(v92, v89);
        v93((uint64_t)v90, v89);
        sub_1009C71C8((uint64_t)v43, type metadata accessor for SharedBeaconRecord);
        goto LABEL_24;
      }
    }
    sub_1009C71C8((uint64_t)v43, type metadata accessor for SharedBeaconRecord);
    sub_10001DAB4(v53, &qword_101638CF0);
LABEL_24:
    uint64_t v57 = v176;
    goto LABEL_25;
  }
  uint64_t v182 = 0;
  memset(v181, 0, sizeof(v181));
  sub_10001DAB4((uint64_t)v181, (uint64_t *)&unk_10163BBE0);
  __int16 v56 = v177;
  uint64_t v54 = v178;
  uint64_t v57 = v176;
  uint64_t v55 = v171;
  if ((v177 & 0x280) != 0)
  {
    sub_10001D010(v171, (uint64_t)&v184);
    char v58 = swift_dynamicCast();
    BOOL v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    if (v58)
    {
      v59(v22, 0, 1, v23);
      uint64_t v60 = v164;
      sub_1009C715C((uint64_t)v22, v164, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
      if (qword_101636EA8 != -1) {
        swift_once();
      }
      uint64_t v61 = type metadata accessor for Logger();
      sub_100010324(v61, (uint64_t)qword_10170E790);
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v64 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Updating sessions for name record changes.", v64, 2u);
        swift_slowDealloc();
      }

      sub_10000588C(&qword_10163BC50);
      uint64_t v65 = v179;
      unint64_t v66 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
      uint64_t v67 = swift_allocObject();
      *(_OWORD *)(v67 + 16) = xmmword_101342130;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v65 + 16))(v67 + v66, v60 + *(int *)(v23 + 24), v180);
      unint64_t v68 = sub_100DF29F8(v67);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      type metadata accessor for Transaction();
      uint64_t v69 = (void *)swift_allocObject();
      v69[2] = v57;
      v69[3] = v68;
      v69[4] = 0;
      v69[5] = v54;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v70 = type metadata accessor for BeaconNamingRecord;
      uint64_t v71 = v60;
      goto LABEL_39;
    }
    v59(v22, 1, 1, v23);
    sub_10001DAB4((uint64_t)v22, &qword_10163B9E0);
    if ((v56 & 0x200) != 0)
    {
      sub_10001D010(v55, (uint64_t)&v184);
      uint64_t v72 = (uint64_t)v162;
      uint64_t v73 = v163;
      int v74 = swift_dynamicCast();
      uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v161 + 56);
      if (v74)
      {
        v75(v72, 0, 1, v73);
        uint64_t v76 = v157;
        sub_1009C715C(v72, v157, (uint64_t (*)(void))type metadata accessor for LostModeRecord);
        if (qword_101636EA8 != -1) {
          swift_once();
        }
        uint64_t v77 = type metadata accessor for Logger();
        sub_100010324(v77, (uint64_t)qword_10170E790);
        uint64_t v78 = Logger.logObject.getter();
        os_log_type_t v79 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v80 = 0;
          _os_log_impl((void *)&_mh_execute_header, v78, v79, "Updating sessions for Lost Mode changes.", v80, 2u);
          swift_slowDealloc();
        }

        sub_10000588C(&qword_10163BC50);
        uint64_t v81 = v179;
        unint64_t v82 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
        uint64_t v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_101342130;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v81 + 16))(v83 + v82, v76 + *(int *)(v73 + 24), v180);
        uint64_t v84 = sub_100DF29F8(v83);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        type metadata accessor for Transaction();
        uint64_t v85 = (void *)swift_allocObject();
        uint64_t v85[2] = v57;
        v85[3] = v84;
        v85[4] = 0;
        v85[5] = v54;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        static Transaction.asyncTask(name:block:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v86 = type metadata accessor for LostModeRecord;
      }
      else
      {
        v75(v72, 1, 1, v73);
        sub_10001DAB4(v72, &qword_10163BB70);
        sub_10001D010(v55, (uint64_t)&v184);
        uint64_t v96 = (uint64_t)v155;
        uint64_t v97 = v156;
        int v98 = swift_dynamicCast();
        uint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v154 + 56);
        if (v98)
        {
          v99(v96, 0, 1, v97);
          uint64_t v100 = v152;
          sub_1009C715C(v96, v152, (uint64_t (*)(void))type metadata accessor for SafeLocation);
          if (qword_101636EA8 != -1) {
            swift_once();
          }
          uint64_t v101 = type metadata accessor for Logger();
          sub_100010324(v101, (uint64_t)qword_10170E790);
          uint64_t v102 = Logger.logObject.getter();
          os_log_type_t v103 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v102, v103))
          {
            uint64_t v104 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v104 = 0;
            _os_log_impl((void *)&_mh_execute_header, v102, v103, "Updating sessions for Safe Location changes.", v104, 2u);
            swift_slowDealloc();
          }

          uint64_t v105 = swift_bridgeObjectRetain();
          uint64_t v106 = sub_101158244(v105);
          swift_bridgeObjectRelease();
          type metadata accessor for Transaction();
          uint64_t v107 = (void *)swift_allocObject();
          v107[2] = v57;
          v107[3] = v106;
          v107[4] = 0;
          v107[5] = v54;
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          static Transaction.asyncTask(name:block:)();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v70 = type metadata accessor for SafeLocation;
          uint64_t v71 = v100;
          goto LABEL_39;
        }
        v99(v96, 1, 1, v97);
        sub_10001DAB4(v96, &qword_101653F20);
        sub_10001D010(v55, (uint64_t)&v184);
        uint64_t v108 = (uint64_t)v151;
        uint64_t v109 = found;
        char v110 = swift_dynamicCast();
        uint64_t v111 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v150 + 56);
        if ((v110 & 1) == 0)
        {
          v111(v108, 1, 1, v109);
          sub_10001DAB4(v108, &qword_101660BB0);
          goto LABEL_40;
        }
        v111(v108, 0, 1, v109);
        uint64_t v76 = v149;
        sub_1009C715C(v108, v149, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
        if (qword_101636EA8 != -1) {
          swift_once();
        }
        uint64_t v112 = type metadata accessor for Logger();
        sub_100010324(v112, (uint64_t)qword_10170E790);
        uint64_t v113 = Logger.logObject.getter();
        os_log_type_t v114 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v113, v114))
        {
          int v115 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v115 = 0;
          _os_log_impl((void *)&_mh_execute_header, v113, v114, "Updating sessions for NotifyWhenFound deleted.", v115, 2u);
          swift_slowDealloc();
        }

        sub_10000588C(&qword_10163BC50);
        uint64_t v116 = v179;
        unint64_t v117 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
        uint64_t v118 = swift_allocObject();
        *(_OWORD *)(v118 + 16) = xmmword_101342130;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v116 + 16))(v118 + v117, v76 + *(int *)(v109 + 24), v180);
        uint64_t v119 = sub_100DF29F8(v118);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        type metadata accessor for Transaction();
        uint64_t v120 = (void *)swift_allocObject();
        v120[2] = v57;
        v120[3] = v119;
        v120[4] = 0;
        v120[5] = v54;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        static Transaction.asyncTask(name:block:)();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v86 = type metadata accessor for NotifyWhenFoundRecord;
      }
      uint64_t v70 = v86;
      uint64_t v71 = v76;
LABEL_39:
      sub_1009C71C8(v71, (uint64_t (*)(void))v70);
    }
  }
LABEL_40:
  if ((v56 & 0x220) == 0) {
    return swift_release();
  }
  sub_10001D010(v55, (uint64_t)&v184);
  uint64_t v121 = (uint64_t)v174;
  uint64_t v122 = v175;
  char v123 = swift_dynamicCast();
  int v124 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v173 + 56);
  if (v123)
  {
    v124(v121, 0, 1, v122);
    uint64_t v125 = v169;
    sub_1009C715C(v121, v169, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v126 = type metadata accessor for Logger();
    sub_100010324(v126, (uint64_t)qword_10170E790);
    BOOL v127 = Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v127, v128))
    {
      uint64_t v129 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v129 = 0;
      _os_log_impl((void *)&_mh_execute_header, v127, v128, "Updating sessions for sharing changes [OwnerSharingCircle].", v129, 2u);
      swift_slowDealloc();
    }

    sub_10000588C(&qword_10163BC50);
    uint64_t v130 = v179;
    unint64_t v131 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
    uint64_t v132 = swift_allocObject();
    *(_OWORD *)(v132 + 16) = xmmword_101342130;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v130 + 16))(v132 + v131, v125 + *(int *)(v122 + 24), v180);
    uint64_t v133 = sub_100DF29F8(v132);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    uint64_t v134 = (void *)swift_allocObject();
    v134[2] = v57;
    v134[3] = v133;
    v134[4] = 0;
    v134[5] = v54;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v135 = type metadata accessor for OwnerSharingCircle;
    return sub_1009C71C8(v125, (uint64_t (*)(void))v135);
  }
  v124(v121, 1, 1, v122);
  sub_10001DAB4(v121, (uint64_t *)&unk_101638D10);
  sub_10001D010(v55, (uint64_t)&v184);
  uint64_t v136 = (uint64_t)v168;
  uint64_t v137 = v170;
  char v138 = swift_dynamicCast();
  uint64_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 + 56);
  if (v138)
  {
    v139(v136, 0, 1, v137);
    uint64_t v125 = v165;
    sub_1009C715C(v136, v165, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v140 = type metadata accessor for Logger();
    sub_100010324(v140, (uint64_t)qword_10170E790);
    os_log_type_t v141 = Logger.logObject.getter();
    os_log_type_t v142 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v141, v142))
    {
      uint64_t v143 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v143 = 0;
      _os_log_impl((void *)&_mh_execute_header, v141, v142, "Updating sessions for sharing changes [MemberSharingCircle].", v143, 2u);
      swift_slowDealloc();
    }

    sub_10000588C(&qword_10163BC50);
    uint64_t v144 = v179;
    unint64_t v145 = (*(unsigned __int8 *)(v179 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v179 + 80);
    uint64_t v146 = swift_allocObject();
    *(_OWORD *)(v146 + 16) = xmmword_101342130;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v144 + 16))(v146 + v145, v125 + *(int *)(v137 + 24), v180);
    uint64_t v147 = sub_100DF29F8(v146);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    type metadata accessor for Transaction();
    unint64_t v148 = (void *)swift_allocObject();
    v148[2] = v57;
    v148[3] = v147;
    v148[4] = 0;
    v148[5] = v54;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v135 = type metadata accessor for MemberSharingCircle;
    return sub_1009C71C8(v125, (uint64_t (*)(void))v135);
  }
  v139(v136, 1, 1, v137);
  swift_release();
  return sub_10001DAB4(v136, (uint64_t *)&unk_10163B7C0);
}

void sub_1009A7520(uint64_t a1)
{
  *(void *)(v1 + 184) = a1;
  *(unsigned char *)(v1 + 192) = 0;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E790);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134217984;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Stored last connectable device count %ld.", v4, 0xCu);
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_1009A7660()
{
  uint64_t v1 = (void *)v0;
  if (*(void *)(v0 + 136))
  {
    *(void *)(v0 + 136) = 0;
    swift_release();
    *(void *)(v0 + 184) = 0;
    *(unsigned char *)(v0 + 192) = 1;
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100010324(v2, (uint64_t)qword_10170E790);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Unsubscribed from connectable devices change publisher.", v5, 2u);
      swift_slowDealloc();
    }
  }
  if (v1[18])
  {
    v1[18] = 0;
    swift_release();
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170E790);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unsubscribed from recordPublisherSubject publisher.", v9, 2u);
      swift_slowDealloc();
    }
  }
  if (v1[19])
  {
    v1[19] = 0;
    swift_release();
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100010324(v10, (uint64_t)qword_10170E790);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unsubscribed from beaconRecordDeletedSubject publisher.", v13, 2u);
      swift_slowDealloc();
    }
  }
  if (v1[22])
  {
    swift_retain();
    sub_10000588C(&qword_101638D40);
    Task.cancel()();
    swift_release();
    v1[22] = 0;
    swift_release();
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100010324(v14, (uint64_t)qword_10170E790);
    oslog = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v15, "Unsubscribed from localFindableRecordUpdateTask.", v16, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1009A7A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[34] = a2;
  v3[35] = a3;
  v3[33] = a1;
  return _swift_task_switch(sub_1009A7A34, 0, 0);
}

uint64_t sub_1009A7A34()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 264) + 128);
  uint64_t v2 = sub_10099CBAC(*(void **)(v0 + 272), *(void *)(v0 + 280));
  *(void *)(v0 + 288) = v2;
  if (v2)
  {
    os_log_type_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v3;
    uint64_t v4 = sub_10000588C(&qword_101653CC8);
    *os_log_type_t v3 = v0;
    v3[1] = sub_1009A7E18;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 216, 0, 0, 0x736553636E797361, 0xED0000736E6F6973, sub_1009C5920, v1, v4);
  }
  else
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v6 = *(void **)(v0 + 272);
    uint64_t v5 = *(void **)(v0 + 280);
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170E790);
    uint64_t v9 = v5[1];
    unint64_t v8 = v5[2];
    *(void *)(v0 + 248) = v5[4];
    swift_bridgeObjectRetain();
    id v10 = v6;
    sub_10048307C(v0 + 248);
    id v11 = v10;
    swift_bridgeObjectRetain();
    sub_10048307C(v0 + 248);
    os_log_type_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    os_log_type_t v15 = *(void **)(v0 + 272);
    if (v14)
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      id v17 = [v15 debugDescription];
      log = v12;
      uint64_t v18 = v9;
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      os_log_type_t type = v13;
      unint64_t v21 = v20;

      *(void *)(v0 + 232) = sub_1008FA0F0(v19, v21, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      *(_WORD *)(v16 + 12) = 2082;
      if (v8) {
        uint64_t v22 = v18;
      }
      else {
        uint64_t v22 = 0x6E776F6E6B6E75;
      }
      if (v8) {
        unint64_t v23 = v8;
      }
      else {
        unint64_t v23 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v0 + 224) = sub_1008FA0F0(v22, v23, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10025C634(v0 + 248);
      swift_bridgeObjectRelease();
      sub_10025C634(v0 + 248);
      _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to add connection %s, bundle: %{public}s.", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      sub_10025C634(v0 + 248);
      swift_bridgeObjectRelease();
      sub_10025C634(v0 + 248);
    }
    uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
}

uint64_t sub_1009A7E18()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A7F14, 0, 0);
}

uint64_t sub_1009A7F14()
{
  uint64_t v1 = *(void *)(v0 + 216);
  if ((v1 & 0xC000000000000001) != 0) {
    uint64_t v2 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v2 = *(void *)(v1 + 16);
  }
  swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 120))
    {
      sub_10001CEB0((long long *)(v0 + 96), v0 + 136);
      sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_101639108 + dword_101639108);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1009A80F4;
      return v6();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 328) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1009A8408;
    return sub_1009A0800();
  }
  return result;
}

uint64_t sub_1009A80F4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 312) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A81F4, 0, 0);
}

uint64_t sub_1009A81F4()
{
  uint64_t v1 = (uint64_t)(v0 + 17);
  if (v0[39])
  {
    uint64_t v2 = v0[33];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    CurrentValueSubject.value.getter();
    v0[40] = v0[32];
    return _swift_task_switch(sub_1009A8304, v2, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[41] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1009A8408;
    return sub_1009A0800();
  }
}

uint64_t sub_1009A8304()
{
  sub_1009A7520(*(void *)(v0 + 320));
  return _swift_task_switch(sub_1009A8370, 0, 0);
}

uint64_t sub_1009A8370()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1009A8408;
  return sub_1009A0800();
}

uint64_t sub_1009A8408()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A8504, 0, 0);
}

uint64_t sub_1009A8504()
{
  uint64_t v2 = (long long *)v0[35];
  uint64_t v1 = v0[36];
  if (*((unsigned char *)v2 + 24))
  {
    sub_10000588C((uint64_t *)&unk_101653CD0);
    uint64_t inited = swift_initStackObject();
    v0[42] = inited;
    *(_OWORD *)(inited + 16) = xmmword_101342130;
    *(void *)(inited + 32) = v1;
    sub_10001D608((uint64_t)v2 + 8, (uint64_t)(v0 + 25), &qword_101644320);
    v0[30] = *((void *)v2 + 4);
    long long v7 = *v2;
    long long v6 = v2[1];
    *(void *)(inited + 72) = *((void *)v2 + 4);
    *(_OWORD *)(inited + 40) = v7;
    *(_OWORD *)(inited + 56) = v6;
    swift_retain();
    sub_1009C5960((uint64_t)(v0 + 25));
    sub_10048307C((uint64_t)(v0 + 30));
    unint64_t v8 = (void *)swift_task_alloc();
    v0[43] = v8;
    *unint64_t v8 = v0;
    v8[1] = sub_1009A868C;
    uint64_t v9 = v0[33];
    v8[18] = inited;
    v8[19] = v9;
    return _swift_task_switch(sub_1009A9204, v9, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1009A868C()
{
  swift_task_dealloc();
  swift_setDeallocating();
  sub_10000588C((uint64_t *)&unk_101653CE0);
  swift_arrayDestroy();
  return _swift_task_switch(sub_1009A87C8, 0, 0);
}

uint64_t sub_1009A87C8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009A882C()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_1009A884C, v0, 0);
}

uint64_t sub_1009A884C()
{
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E790);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Pre-throttle updateAllBeacons.", v4, 2u);
    swift_slowDealloc();
  }

  v0[2] = 0xD000000000000010;
  v0[3] = 0x800000010140DFB0;
  unint64_t v8 = (char *)&async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:)
     + async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:);
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[5] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1009A8A18;
  uint64_t v6 = v0[4];
  return ((uint64_t (*)(void *, void *, uint64_t, uint64_t (*)(void), void))v8)(v0 + 2, &unk_101653E68, v6, SharingCircleWildAdvertisementKey.init(key:), 0);
}

uint64_t sub_1009A8A18()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  if (v0)
  {
    uint64_t v4 = *(void *)(v2 + 32);
    return _swift_task_switch(sub_1009A8B9C, v4, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
    return v5();
  }
}

uint64_t sub_1009A8B9C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1009A8BB4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for UUID();
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1009A8C44, 0, 0);
}

uint64_t sub_1009A8C44()
{
  type metadata accessor for WorkItemQueue.WorkItem();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(1);
}

uint64_t sub_1009A8D28(uint64_t a1)
{
  *(void *)(v1 + 24) = a1;
  return _swift_task_switch(sub_1009A8D48, 0, 0);
}

uint64_t sub_1009A8D48()
{
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E790);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Post-throttle updateAllBeacons.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[3];

  uint64_t v6 = *(void *)(v5 + 128);
  uint64_t v7 = swift_task_alloc();
  v0[4] = v7;
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = 512;
  unint64_t v8 = (void *)swift_task_alloc();
  v0[5] = v8;
  uint64_t v9 = sub_10000588C(&qword_101653DA8);
  *unint64_t v8 = v0;
  v8[1] = sub_1009A8F08;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000001BLL, 0x800000010140DFD0, sub_1009C6880, v7, v9);
}

uint64_t sub_1009A8F08()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A9020, 0, 0);
}

uint64_t sub_1009A9020()
{
  uint64_t v1 = v0[2];
  v0[6] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1009A90D0;
  uint64_t v3 = v0[3];
  v2[18] = v1;
  v2[19] = v3;
  return _swift_task_switch(sub_1009A9204, v3, 0);
}

uint64_t sub_1009A90D0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1009A91E4(uint64_t a1)
{
  *(void *)(v2 + 144) = a1;
  *(void *)(v2 + 152) = v1;
  return _swift_task_switch(sub_1009A9204, v1, 0);
}

uint64_t sub_1009A9204()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 144) + 16);
  *(void *)(v0 + 160) = v1;
  if (v1)
  {
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 80))
    {
      sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
      sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1009A9384;
      return v5();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_1009A9384(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009A949C, v2, 0);
}

uint64_t sub_1009A949C()
{
  uint64_t v1 = v0[22];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  if (v1)
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100010324(v2, (uint64_t)qword_10170E790);
    swift_bridgeObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = v0[20];
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      v0[17] = v5;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Updating all beacons for %ld session(s).", v6, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v13 = v0[22];
    return _swift_task_switch(sub_1009A9714, v13, 0);
  }
  else
  {
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170E790);
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to get BeaconStore.", v10, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1009A9714()
{
  *(void *)(v0 + 184) = *(void *)(*(void *)(v0 + 176) + 136);
  swift_retain();
  return _swift_task_switch(sub_1009A9788, 0, 0);
}

uint64_t sub_1009A9788()
{
  uint64_t v2 = v0[22];
  uint64_t v1 = v0[23];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  v3[2] = v1;
  v3[3] = sub_1001D4090;
  v3[4] = v2;
  os_log_type_t v4 = (void *)swift_task_alloc();
  v0[25] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  v0[26] = v5;
  *os_log_type_t v4 = v0;
  v4[1] = sub_1009A98A4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 15, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10080F36C, v3, v5);
}

uint64_t sub_1009A98A4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 152);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 216) = *(void *)(v1 + 120);
  return _swift_task_switch(sub_1009A9A14, v2, 0);
}

uint64_t sub_1009A9A14()
{
  uint64_t v1 = v0[22];
  v0[16] = v0[27];
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = sub_100062734((unint64_t *)&qword_10164E710, (uint64_t *)&unk_101653DD0);
  *uint64_t v2 = v0;
  v2[1] = sub_1009A9B18;
  uint64_t v5 = v0[26];
  return Sequence.asyncMap<A>(_:)(&unk_101653E50, v1, v5, v3, v4);
}

uint64_t sub_1009A9B18(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 152);
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1009A9C54, v2, 0);
}

uint64_t sub_1009A9C54()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = sub_101158244(v0[29]);
  v0[30] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009A9D1C;
  return sub_1009ABFC8(v3, v2, v1);
}

uint64_t sub_1009A9D1C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1009A9E48, v1, 0);
}

uint64_t sub_1009A9E48()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009A9EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  v3[12] = *(void *)(v5 + 64);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = sub_10000588C(&qword_101638CF0);
  v3[16] = swift_task_alloc();
  return _swift_task_switch(sub_1009A9FB8, 0, 0);
}

uint64_t sub_1009A9FB8()
{
  uint64_t v1 = *(void **)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  sub_10001CD44(v1, v3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
  return _swift_task_switch(sub_1009AA05C, v2, 0);
}

uint64_t sub_1009AA05C()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  v0[17] = *(void *)(v5 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[18] = v7;
  *(void *)(v7 + 16) = v5;
  unint64_t v8 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  v0[19] = v8;
  v0[20] = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v8(v7 + v6, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1009AA158, 0, 0);
}

uint64_t sub_1009AA158()
{
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[21] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C6730;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009AA25C;
  uint64_t v6 = v0[15];
  uint64_t v5 = v0[16];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C7788, v3, v6);
}

uint64_t sub_1009AA25C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 88);
  uint64_t v3 = *(void *)(*(void *)v0 + 80);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1009AA3F4, 0, 0);
}

uint64_t sub_1009AA3F4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  sub_10001D010(*(void *)(v0 + 64), v0 + 16);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 40);
    sub_10001CD44((void *)(v0 + 16), v6);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v6);
    sub_10001DAB4(v4, &qword_101638CF0);
  }
  else
  {
    (*(void (**)(void, void, void))(v0 + 152))(*(void *)(v0 + 56), *(void *)(v0 + 128), *(void *)(v0 + 80));
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1009AA52C(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  return _swift_task_switch(sub_1009AA5F0, v2, 0);
}

uint64_t sub_1009AA5F0()
{
  uint64_t v26 = v0;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E790);
  sub_10001D010(v1, (uint64_t)(v0 + 2));
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t type = v4;
    uint64_t v5 = v0[13];
    uint64_t v6 = v0[14];
    uint64_t v7 = v0[12];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[7] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v10 = v0[5];
    uint64_t v9 = v0[6];
    sub_10001CD44(v0 + 2, v10);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v10);
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v13 = v12;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v7);
    v0[8] = sub_1008FA0F0(v11, v13, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    _os_log_impl((void *)&_mh_execute_header, v3, type, "updateBeaconConnectedState. Beacon: %{private,mask.hash}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  }

  uint64_t v14 = v0[11];
  os_log_type_t v15 = (void *)v0[9];
  uint64_t v16 = v0[10];
  sub_10000588C(&qword_10163BC50);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_101342130;
  uint64_t v18 = v15[3];
  uint64_t v19 = v15[4];
  sub_10001CD44(v15, v18);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v19 + 8) + 8) + 32))(v18);
  unint64_t v20 = sub_100DF29F8(v17);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  type metadata accessor for WorkItemQueue.WorkItem();
  unint64_t v21 = (void *)swift_allocObject();
  long long v21[2] = v14;
  v21[3] = v20;
  v21[4] = 0;
  v21[5] = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1009AAA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  uint64_t v3[5] = a3;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[6] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[7] = v5;
  v3[8] = *(void *)(v5 + 64);
  v3[9] = swift_task_alloc();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = sub_10000588C(&qword_101638CF0);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  return _swift_task_switch(sub_1009AAB3C, 0, 0);
}

uint64_t sub_1009AAB3C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  *(void *)(v0 + 16) = v1;
  uint64_t v2 = *(void *)(v0 + 56);
  char v3 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(v0 + 224) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-(-1 << v3) < 64) {
    uint64_t v4 = ~(-1 << -(char)(-1 << v3));
  }
  unint64_t v6 = v4 & *(void *)(v1 + 56);
  swift_bridgeObjectRetain_n();
  if (v6)
  {
    uint64_t v7 = 0;
    unint64_t v8 = __clz(__rbit64(v6));
    uint64_t v9 = (v6 - 1) & v6;
    goto LABEL_5;
  }
  unint64_t v21 = 63 - v5;
  if ((unint64_t)(63 - v5) <= 0x7F) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v1 + 64);
  if (!v22)
  {
    if (v21 >= 0xC0)
    {
      unint64_t v22 = *(void *)(v1 + 72);
      if (v22)
      {
        uint64_t v7 = 2;
        goto LABEL_12;
      }
      if (v21 >= 0x100)
      {
        unint64_t v22 = *(void *)(v1 + 80);
        if (v22)
        {
          uint64_t v7 = 3;
          goto LABEL_12;
        }
        if (v21 >= 0x140)
        {
          unint64_t v22 = *(void *)(v1 + 88);
          if (v22)
          {
            uint64_t v7 = 4;
            goto LABEL_12;
          }
          uint64_t v23 = 0;
          uint64_t v24 = v21 >> 6;
          if (v24 <= 5) {
            uint64_t v24 = 5;
          }
          uint64_t v25 = v24 - 5;
          while (v25 != v23)
          {
            unint64_t v22 = *(void *)(v1 + 96 + 8 * v23++);
            if (v22)
            {
              uint64_t v7 = v23 + 4;
              goto LABEL_12;
            }
          }
        }
      }
    }
LABEL_28:
    (*(void (**)(void, uint64_t, uint64_t, void))(v2 + 56))(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 48));
    goto LABEL_29;
  }
  uint64_t v7 = 1;
LABEL_12:
  uint64_t v9 = (v22 - 1) & v22;
  unint64_t v8 = __clz(__rbit64(v22)) + (v7 << 6);
LABEL_5:
  *(void *)(v0 + 128) = v7;
  *(void *)(v0 + 136) = v9;
  uint64_t v10 = *(void *)(v0 + 120);
  uint64_t v11 = *(void *)(v0 + 48);
  unint64_t v12 = *(void *)(v1 + 48) + *(void *)(v2 + 72) * v8;
  unint64_t v13 = *(void (**)(uint64_t, unint64_t, uint64_t))(v2 + 16);
  *(void *)(v0 + 144) = v13;
  *(void *)(v0 + 152) = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v10, v12, v11);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, v11);
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 160) = v14;
  *(void *)(v0 + 168) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v14(v10, 1, v11) != 1)
  {
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 48);
    uint64_t v18 = *(void *)(v0 + 56);
    uint64_t v19 = *(void *)(v0 + 32);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32);
    *(void *)(v0 + 176) = v20;
    *(void *)(v0 + 184) = (v18 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v20(v16, v15, v17);
    return _swift_task_switch(sub_1009AAEE8, v19, 0);
  }
LABEL_29:
  swift_release();
  uint64_t v26 = *(void *)(v0 + 40);
  uint64_t v27 = *(void *)(v0 + 16);
  uint64_t v28 = *(void *)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v28;
  v29[3] = v26;
  v29[4] = v27;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_1009AAEE8()
{
  uint64_t v1 = (void (*)(unint64_t, uint64_t, uint64_t))v0[22];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[18];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[4];
  v0[24] = *(void *)(v7 + 136);
  v2(v4, v3, v6);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  v0[25] = v9;
  *(void *)(v9 + 16) = v7;
  v1(v9 + v8, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1009AAFD0, 0, 0);
}

uint64_t sub_1009AAFD0()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C6730;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[27] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009AB0D4;
  uint64_t v6 = v0[13];
  uint64_t v5 = v0[14];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C7788, v3, v6);
}

uint64_t sub_1009AB0D4()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009AB208, 0, 0);
}

uint64_t sub_1009AB208()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 48);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 160))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, uint64_t))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 88), v2);
    uint64_t v3 = (uint64_t (*)())sub_10001DAB4(v1, &qword_101638CF0);
    int64_t v6 = *(void *)(v0 + 128);
    unint64_t v7 = *(void *)(v0 + 136);
    if (v7)
    {
LABEL_3:
      uint64_t v8 = (v7 - 1) & v7;
      unint64_t v9 = __clz(__rbit64(v7)) | (v6 << 6);
      uint64_t v10 = *(void *)(v0 + 24);
LABEL_4:
      *(void *)(v0 + 128) = v6;
      *(void *)(v0 + 136) = v8;
      uint64_t v11 = *(void *)(v0 + 120);
      uint64_t v12 = *(void *)(v0 + 48);
      uint64_t v13 = *(void *)(v0 + 56);
      unint64_t v14 = *(void *)(v10 + 48) + *(void *)(v13 + 72) * v9;
      uint64_t v15 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
      *(void *)(v0 + 144) = v15;
      *(void *)(v0 + 152) = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v15(v11, v14, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
      uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
      *(void *)(v0 + 160) = v16;
      *(void *)(v0 + 168) = (v13 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (v16(v11, 1, v12) == 1) {
        goto LABEL_25;
      }
      uint64_t v27 = *(void *)(v0 + 120);
      uint64_t v28 = *(void *)(v0 + 88);
      uint64_t v29 = *(void *)(v0 + 48);
      uint64_t v30 = *(void *)(v0 + 56);
      uint64_t v31 = *(void *)(v0 + 32);
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
      *(void *)(v0 + 176) = v32;
      *(void *)(v0 + 184) = (v30 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v32(v28, v27, v29);
      uint64_t v3 = sub_1009AAEE8;
      uint64_t v4 = v31;
      uint64_t v5 = 0;
      return _swift_task_switch(v3, v4, v5);
    }
  }
  else
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 96);
    uint64_t v40 = *(void *)(v0 + 88);
    unint64_t v20 = *(char **)(v0 + 72);
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 56);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 176))(v19, v1, v2);
    v17(v20, v19, v2);
    sub_100DC8CB8(v18, v20);
    unint64_t v22 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v22(v18, v2);
    v22(v19, v2);
    uint64_t v3 = (uint64_t (*)())((uint64_t (*)(uint64_t, uint64_t))v22)(v40, v2);
    int64_t v6 = *(void *)(v0 + 128);
    unint64_t v7 = *(void *)(v0 + 136);
    if (v7) {
      goto LABEL_3;
    }
  }
  int64_t v23 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  int64_t v24 = (unint64_t)((1 << *(unsigned char *)(v0 + 224)) + 63) >> 6;
  uint64_t v10 = *(void *)(v0 + 24);
  if (v23 < v24)
  {
    uint64_t v25 = v10 + 56;
    unint64_t v26 = *(void *)(v10 + 56 + 8 * v23);
    ++v6;
    if (v26)
    {
LABEL_10:
      uint64_t v8 = (v26 - 1) & v26;
      unint64_t v9 = __clz(__rbit64(v26)) + (v6 << 6);
      goto LABEL_4;
    }
    int64_t v6 = v23 + 1;
    if (v23 + 1 < v24)
    {
      unint64_t v26 = *(void *)(v25 + 8 * v6);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v6 = v23 + 2;
      if (v23 + 2 < v24)
      {
        unint64_t v26 = *(void *)(v25 + 8 * v6);
        if (v26) {
          goto LABEL_10;
        }
        int64_t v33 = v23 + 3;
        if (v33 < v24)
        {
          unint64_t v26 = *(void *)(v25 + 8 * v33);
          if (v26)
          {
            int64_t v6 = v33;
            goto LABEL_10;
          }
          while (1)
          {
            int64_t v6 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              break;
            }
            if (v6 >= v24) {
              goto LABEL_24;
            }
            unint64_t v26 = *(void *)(v25 + 8 * v6);
            ++v33;
            if (v26) {
              goto LABEL_10;
            }
          }
LABEL_29:
          __break(1u);
          return _swift_task_switch(v3, v4, v5);
        }
      }
    }
  }
LABEL_24:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 48));
LABEL_25:
  swift_release();
  uint64_t v34 = *(void *)(v0 + 40);
  uint64_t v35 = *(void *)(v0 + 16);
  uint64_t v36 = *(void *)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v36;
  v37[3] = v34;
  v37[4] = v35;
  swift_bridgeObjectRetain();
  swift_retain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1009AB658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  return _swift_task_switch(sub_1009AB67C, 0, 0);
}

uint64_t sub_1009AB67C()
{
  uint64_t v16 = v0;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E790);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 141558275;
    v0[4] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2081;
    type metadata accessor for UUID();
    sub_1009C5B60(&qword_10163BC60, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    swift_bridgeObjectRetain();
    uint64_t v5 = Set.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[5] = sub_1008FA0F0(v5, v7, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Updating sessions for BeaconRecord removed. Beacons: %{private,mask.hash}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = *(void *)(v0[7] + 128);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1007100E0(v9);
  v0[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_task_alloc();
  v0[10] = v11;
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[11] = v12;
  uint64_t v13 = sub_10000588C(&qword_101653DA8);
  void *v12 = v0;
  v12[1] = sub_1009AB9BC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD00000000000001ELL, 0x800000010140DF90, sub_1009C77D4, v11, v13);
}

uint64_t sub_1009AB9BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009ABAD4, 0, 0);
}

uint64_t sub_1009ABAD4()
{
  uint64_t v21 = v0;
  swift_release();
  uint64_t v17 = v0[2];
  uint64_t v1 = *(void *)(v17 + 16);
  if (!v1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  uint64_t v2 = (void **)(v0 + 3);
  uint64_t v18 = v0[8];
  uint64_t v3 = v17 + 72;
  while (1)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    XPCSession.proxy.getter();
    uint64_t v5 = *v2;
    if (!*v2) {
      goto LABEL_4;
    }
    uint64_t v6 = *(void *)(v18 + 16);
    if (v6) {
      break;
    }
LABEL_3:
    type metadata accessor for UUID();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_release();
    [v5 receivedSimpleBeaconRemovals:isa];
    swift_unknownObjectRelease();

LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 += 48;
    if (!--v1) {
      goto LABEL_14;
    }
  }
  uint64_t v19 = *v2;
  sub_10000588C(&qword_10163BC50);
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t result = j__malloc_size(v10);
  if (v8)
  {
    if (result - v9 == 0x8000000000000000 && v8 == -1) {
      goto LABEL_19;
    }
    uint64_t v13 = v2;
    uint64_t v14 = v0[8];
    v10[2] = v6;
    v10[3] = 2 * ((uint64_t)(result - v9) / v8);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_100712BF8(&v20, (char *)v10 + v9, v6, v14);
    uint64_t result = sub_100132C20();
    if (v15 != v6) {
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
    uint64_t v2 = v13;
    uint64_t v5 = v19;
    goto LABEL_3;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1009ABD50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for UUID();
  v4[6] = swift_task_alloc();
  return _swift_task_switch(sub_1009ABDE8, a1, 0);
}

uint64_t sub_1009ABDE8()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v4 = v0[2];
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v5 = (void *)swift_allocObject();
  void v5[2] = v4;
  v5[3] = v3;
  v5[4] = v2;
  v5[5] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1009ABF14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100030F18;
  return sub_1009ABFC8(a2, a3, a4);
}

uint64_t sub_1009ABFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[87] = v3;
  v4[86] = a3;
  v4[85] = a2;
  v4[84] = a1;
  uint64_t v5 = type metadata accessor for Duration.UnitsFormatStyle.Unit();
  v4[88] = v5;
  v4[89] = *(void *)(v5 - 8);
  v4[90] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v4[91] = v6;
  v4[92] = *(void *)(v6 - 8);
  v4[93] = swift_task_alloc();
  v4[94] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v4[95] = swift_task_alloc();
  v4[96] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for MemberSharingCircle();
  v4[97] = v7;
  v4[98] = *(void *)(v7 - 8);
  v4[99] = swift_task_alloc();
  v4[100] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B7C0);
  v4[101] = swift_task_alloc();
  v4[102] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101653D50);
  v4[103] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SharedBeaconRecord(0);
  v4[104] = v8;
  v4[105] = *(void *)(v8 - 8);
  v4[106] = swift_task_alloc();
  v4[107] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ContinuousClock.Instant();
  v4[108] = v9;
  v4[109] = *(void *)(v9 - 8);
  v4[110] = swift_task_alloc();
  v4[111] = swift_task_alloc();
  v4[112] = swift_task_alloc();
  v4[113] = swift_task_alloc();
  v4[114] = swift_task_alloc();
  v4[115] = swift_task_alloc();
  v4[116] = swift_task_alloc();
  v4[117] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v4[118] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v4[119] = v11;
  v4[120] = *(void *)(v11 + 64);
  v4[121] = swift_task_alloc();
  v4[122] = swift_task_alloc();
  v4[123] = swift_task_alloc();
  v4[124] = swift_task_alloc();
  v4[125] = swift_task_alloc();
  v4[126] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for ContinuousClock();
  v4[127] = v12;
  v4[128] = *(void *)(v12 - 8);
  v4[129] = swift_task_alloc();
  return _swift_task_switch(sub_1009AC43C, v3, 0);
}

uint64_t sub_1009AC43C()
{
  uint64_t v1 = v0[85];
  if (v1)
  {
    v0[135] = v1;
    v0[73] = v0[84];
    swift_bridgeObjectRetain();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[136] = v2;
    uint64_t v3 = sub_10000588C((uint64_t *)&unk_101653DC0);
    uint64_t v4 = sub_100062734(&qword_101648010, (uint64_t *)&unk_101653DC0);
    *uint64_t v2 = v0;
    v2[1] = sub_1009AC960;
    uint64_t v5 = v0[118];
    uint64_t v6 = v0[86];
    return Sequence.asyncMap<A>(_:)(&unk_101653DB8, v6, v3, v5, v4);
  }
  else
  {
    v0[130] = *(void *)(v0[87] + 128);
    uint64_t v7 = swift_bridgeObjectRetain();
    v0[131] = sub_1007100E0(v7);
    swift_bridgeObjectRelease();
    return _swift_task_switch(sub_1009AC5B8, 0, 0);
  }
}

uint64_t sub_1009AC5B8()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 1056) = v1;
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 1040);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 1064) = v2;
  uint64_t v3 = sub_10000588C(&qword_101653DA8);
  *uint64_t v2 = v0;
  v2[1] = sub_1009AC6BC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 520, 0, 0, 0xD00000000000001ELL, 0x800000010140DF90, sub_1009C63B4, v1, v3);
}

uint64_t sub_1009AC6BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009AC7D4, 0, 0);
}

uint64_t sub_1009AC7D4()
{
  uint64_t v1 = v0[87];
  swift_release();
  v0[134] = v0[65];
  return _swift_task_switch(sub_1009AC848, v1, 0);
}

uint64_t sub_1009AC848()
{
  v0[135] = v0[134];
  v0[73] = v0[84];
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[136] = v1;
  uint64_t v2 = sub_10000588C((uint64_t *)&unk_101653DC0);
  uint64_t v3 = sub_100062734(&qword_101648010, (uint64_t *)&unk_101653DC0);
  *uint64_t v1 = v0;
  v1[1] = sub_1009AC960;
  uint64_t v4 = v0[118];
  uint64_t v5 = v0[86];
  return Sequence.asyncMap<A>(_:)(&unk_101653DB8, v5, v2, v4, v3);
}

uint64_t sub_1009AC960(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 696);
  *(void *)(v3 + 1096) = a1;
  *(void *)(v3 + 1104) = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009ACA7C, v4, 0);
}

uint64_t sub_1009ACA7C()
{
  uint64_t v10 = v0;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  v0[139] = sub_100010324(v0[91], (uint64_t)qword_10170E790);
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[83] = sub_1008FA0F0(v4, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "receivedSimpleBeaconUpdates - updating beacon identifiers: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v7 = v0[86];
  return _swift_task_switch(sub_1009ACC94, v7, 0);
}

uint64_t sub_1009ACC94()
{
  uint64_t v1 = v0[137];
  uint64_t v2 = v0[86];
  v0[140] = *(void *)(v2 + 136);
  uint64_t v3 = swift_allocObject();
  v0[141] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return _swift_task_switch(sub_1009ACD3C, 0, 0);
}

uint64_t sub_1009ACD3C()
{
  uint64_t v1 = v0[141];
  uint64_t v2 = v0[140];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[142] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C6484;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[143] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  *uint64_t v4 = v0;
  v4[1] = sub_1009ACE58;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1001D4098, v3, v5);
}

uint64_t sub_1009ACE58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 688);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 1152) = *(void *)(v1 + 576);
  return _swift_task_switch(sub_1009ACFC8, v2, 0);
}

uint64_t sub_1009ACFC8()
{
  uint64_t v1 = *(void *)(v0 + 696);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1009AD034, v1, 0);
}

uint64_t sub_1009AD034()
{
  unint64_t v26 = v0;
  ContinuousClock.init()();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[135];
    uint64_t v4 = v0[87];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    uint64_t v6 = *(void *)(v4 + 128);
    uint64_t v24 = 60;
    unint64_t v25 = 0xE100000000000000;
    v0[80] = v6;
    swift_retain();
    sub_10000588C((uint64_t *)&unk_10165F600);
    sub_100062734((unint64_t *)&unk_101653E10, (uint64_t *)&unk_10165F600);
    v7._countAndFlagsBits = CustomStringConvertible.typeDescription.getter();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 8250;
    v8._object = (void *)0xE200000000000000;
    String.append(_:)(v8);
    v9._countAndFlagsBits = CustomStringConvertible<>.addressDescription.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 62;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    swift_release();
    v0[81] = sub_1008FA0F0(v24, v25, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    uint64_t v11 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    v0[82] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: Sending updates to %ld sessions", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v12 = v0[135];
  uint64_t v13 = *(void *)(v12 + 16);
  v0[145] = v13;
  if (v13)
  {
    uint64_t v14 = v0[138];
    v0[147] = 0;
    v0[146] = v14;
    uint64_t v15 = *(void *)(v12 + 32);
    v0[148] = v15;
    swift_bridgeObjectRetain();
    swift_retain_n();
    uint64_t v16 = (void *)swift_task_alloc();
    v0[149] = v16;
    uint64_t v17 = sub_10001D4B0(0, (unint64_t *)&unk_10164FD00);
    void *v16 = v0;
    v16[1] = sub_1009AD590;
    return unsafeBlocking<A>(_:)(v0 + 71, sub_1009C648C, v15, v17);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = v0[129];
    uint64_t v19 = v0[128];
    uint64_t v20 = v0[127];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
}

uint64_t sub_1009AD590()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 696);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1009AD6BC, v1, 0);
}

uint64_t sub_1009AD6BC()
{
  uint64_t v171 = v0;
  uint64_t v1 = *(void *)(v0 + 1168);
  os_log_type_t v2 = *(void **)(v0 + 568);
  uint64_t v3 = NSXPCConnection.codeSigningIdentity.getter();
  if (v1)
  {
    swift_errorRelease();
    unint64_t v5 = 0xE90000000000003ELL;
    uint64_t v6 = 0x6E776F6E6B6E753CLL;
  }
  else
  {
    uint64_t v6 = v3;
    unint64_t v5 = v4;
  }
  swift_retain_n();
  swift_retain_n();
  id v7 = v2;
  swift_bridgeObjectRetain();
  Swift::String v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    os_log_type_t v166 = v9;
    uint64_t v153 = *(void *)(v0 + 1176);
    uint64_t v157 = *(void *)(v0 + 1008);
    uint64_t v158 = *(void *)(v0 + 944);
    uint64_t v159 = *(void *)(v0 + 952);
    uint64_t v10 = *(void *)(v0 + 696);
    uint64_t v154 = v6;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v163 = (void *)swift_slowAlloc();
    v170[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136316162;
    uint64_t v12 = *(void *)(v10 + 128);
    *(void *)(v0 + 472) = 60;
    *(void *)(v0 + 480) = 0xE100000000000000;
    *(void *)(v0 + 592) = v12;
    swift_retain();
    sub_10000588C((uint64_t *)&unk_10165F600);
    uint64_t v160 = v8;
    sub_100062734((unint64_t *)&unk_101653E10, (uint64_t *)&unk_10165F600);
    v13._countAndFlagsBits = CustomStringConvertible.typeDescription.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 8250;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    v15._countAndFlagsBits = CustomStringConvertible<>.addressDescription.getter();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 62;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    swift_release();
    *(void *)(v0 + 600) = sub_1008FA0F0(*(void *)(v0 + 472), *(void *)(v0 + 480), v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    *(void *)(v0 + 608) = v153;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 22) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 616) = sub_1008FA0F0(v154, v5, v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 32) = 2080;
    XPCSession.identifier.getter();
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v159 + 8))(v157, v158);
    *(void *)(v0 + 624) = sub_1008FA0F0(v17, v19, v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 42) = 2112;
    *(void *)(v0 + 632) = v7;
    id v20 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v163 = v7;

    _os_log_impl((void *)&_mh_execute_header, v160, v166, "%s: #%ld: %s [%s] %@", (uint8_t *)v11, 0x34u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();

    swift_release_n();
  }
  uint64_t v21 = *(void *)(v0 + 1176) + 1;
  if (v21 != *(void *)(v0 + 1160))
  {
    *(void *)(v0 + 1176) = v21;
    *(void *)(v0 + 1168) = 0;
    uint64_t v130 = *(void *)(*(void *)(v0 + 1080) + 48 * v21 + 32);
    *(void *)(v0 + 1184) = v130;
    swift_retain_n();
    unint64_t v131 = (void *)swift_task_alloc();
    *(void *)(v0 + 1192) = v131;
    uint64_t v30 = sub_10001D4B0(0, (unint64_t *)&unk_10164FD00);
    *unint64_t v131 = v0;
    v131[1] = sub_1009AD590;
    uint64_t v28 = sub_1009C648C;
    uint64_t v27 = v0 + 568;
    uint64_t v29 = v130;
    return unsafeBlocking<A>(_:)(v27, v28, v29, v30);
  }
  uint64_t v22 = (void *)(v0 + 56);
  uint64_t v162 = (uint64_t *)(v0 + 96);
  uint64_t v23 = v0 + 136;
  uint64_t v24 = (void *)(v0 + 176);
  unint64_t v25 = (void *)(v0 + 256);
  uint64_t v156 = (void *)(v0 + 336);
  uint64_t v26 = *(void *)(v0 + 1152);
  uint64_t v152 = (uint64_t *)(v0 + 544);
  uint64_t v161 = (void *)(v0 + 560);
  uint64_t v27 = swift_bridgeObjectRelease();
  unint64_t v31 = 0;
  *(void *)(v0 + 1200) = *(void *)(v26 + 16);
  *(_DWORD *)(v0 + 1320) = enum case for Feature.FindMy.itemSharing(_:);
  uint64_t v155 = (void *)(v0 + 296);
  while (1)
  {
    *(void *)(v0 + 1208) = v31;
    uint64_t v32 = *(void *)(v0 + 1080);
    if (v31 >= *(void *)(v32 + 16)) {
      goto LABEL_80;
    }
    uint64_t v33 = *(void *)(v0 + 1200);
    uint64_t v34 = (void *)(v32 + 48 * v31);
    *(void *)(v0 + 1216) = v34[4];
    *(void *)(v0 + 1224) = v34[5];
    *(void *)(v0 + 1232) = v34[6];
    *(void *)(v0 + 1240) = v34[7];
    *(void *)(v0 + 1248) = v34[9];
    *(void *)(v0 + 560) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    ContinuousClock.now.getter();
    if (v33) {
      break;
    }
LABEL_46:
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = swift_slowAlloc();
      *uint64_t v152 = swift_slowAlloc();
      *(_DWORD *)uint64_t v94 = 134218242;
      swift_beginAccess();
      if (*v161 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v95 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v95 = *(void *)((*v161 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v96 = *(void *)(v0 + 1240);
      uint64_t v97 = *(void *)(v0 + 1232);
      *(void *)(v94 + 4) = v95;
      *(_WORD *)(v94 + 12) = 2082;
      if (v96) {
        uint64_t v98 = v97;
      }
      else {
        uint64_t v98 = 0x6E776F6E6B6E75;
      }
      if (v96) {
        unint64_t v99 = v96;
      }
      else {
        unint64_t v99 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v94 + 14) = sub_1008FA0F0(v98, v99, v152);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "receivedSimpleBeaconUpdates - updating beacons (count) %ld to bundle: %{public}s.", (uint8_t *)v94, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_retain();
    XPCSession.proxy.getter();
    swift_release();
    uint64_t v100 = *(void **)(v0 + 552);
    if (v100)
    {
      swift_beginAccess();
      sub_10001D4B0(0, &qword_101653DE8);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v100 receivedSimpleBeaconUpdates:isa];

      swift_unknownObjectRelease();
    }
    uint64_t v102 = *(void *)(v0 + 1112);
    uint64_t v103 = *(void *)(v0 + 896);
    uint64_t v104 = *(void *)(v0 + 888);
    uint64_t v165 = *(void *)(v0 + 936);
    uint64_t v168 = *(void *)(v0 + 880);
    uint64_t v105 = *(void *)(v0 + 872);
    uint64_t v106 = *(void *)(v0 + 864);
    uint64_t v107 = *(void *)(v0 + 744);
    uint64_t v108 = *(void *)(v0 + 736);
    uint64_t v109 = *(void *)(v0 + 728);
    ContinuousClock.now.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16))(v107, v102, v109);
    char v110 = *(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 16);
    v110(v104, v165, v106);
    v110(v168, v103, v106);
    uint64_t v111 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v112 = os_log_type_enabled(v111, type);
    uint64_t v113 = *(void *)(v0 + 936);
    uint64_t v114 = *(void *)(v0 + 896);
    uint64_t v115 = *(void *)(v0 + 888);
    uint64_t v116 = *(void *)(v0 + 880);
    uint64_t v117 = *(void *)(v0 + 872);
    uint64_t v118 = *(void *)(v0 + 864);
    uint64_t v119 = *(void *)(v0 + 744);
    uint64_t v120 = *(void *)(v0 + 736);
    uint64_t v169 = *(void *)(v0 + 728);
    if (v112)
    {
      log = v111;
      uint64_t v121 = *(void *)(v0 + 720);
      uint64_t v150 = *(void *)(v0 + 936);
      uint64_t v122 = *(void *)(v0 + 712);
      uint64_t v145 = *(void *)(v0 + 704);
      uint64_t v149 = *(void *)(v0 + 896);
      uint64_t v123 = swift_slowAlloc();
      v170[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v123 = 136446210;
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1009C5B60(&qword_101653DE0, 255, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
      uint64_t v148 = v120;
      uint64_t v124 = v116;
      uint64_t v147 = v119;
      uint64_t v125 = static Duration.description<A>(_:_:units:)();
      unint64_t v127 = v126;
      (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v121, v145);
      *(void *)(v123 + 4) = sub_1008FA0F0(v125, v127, v170);
      swift_bridgeObjectRelease();
      os_log_type_t v128 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
      v128(v115, v118);
      v128(v124, v118);
      _os_log_impl((void *)&_mh_execute_header, log, type, "session processing time: %{public}s", (uint8_t *)v123, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v148 + 8))(v147, v169);
      v128(v149, v118);
      v128(v150, v118);
    }
    else
    {

      uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
      v129(v115, v118);
      v129(v116, v118);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v119, v169);
      v129(v114, v118);
      v129(v113, v118);
    }
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v22 = (void *)(v0 + 56);
    unint64_t v25 = (void *)(v0 + 256);
    uint64_t v24 = (void *)(v0 + 176);
    uint64_t v23 = v0 + 136;
    unint64_t v31 = *(void *)(v0 + 1208) + 1;
    if (v31 == *(void *)(v0 + 1160))
    {
      swift_bridgeObjectRelease();
      uint64_t v141 = *(void *)(v0 + 1032);
      uint64_t v142 = *(void *)(v0 + 1024);
      uint64_t v143 = *(void *)(v0 + 1016);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v144 = *(uint64_t (**)(void))(v0 + 8);
      return v144();
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = swift_beginAccess();
  *(void *)(v0 + 1256) = 0;
  uint64_t v35 = *(void *)(v0 + 1152);
  if (!*(void *)(v35 + 16))
  {
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    return unsafeBlocking<A>(_:)(v27, v28, v29, v30);
  }
  unint64_t v36 = 0;
  while (1)
  {
    sub_10001D010(v35 + 40 * v36 + 32, (uint64_t)v25);
    ContinuousClock.now.getter();
    uint64_t v37 = *(void *)(v0 + 280);
    uint64_t v38 = *(void *)(v0 + 288);
    sub_10001CD44(v25, v37);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 112))(v37, v38))
    {
      uint64_t v39 = *(void *)(v0 + 840);
      sub_10001D010((uint64_t)v25, v23);
      sub_10000588C((uint64_t *)&unk_10164DBF0);
      int v40 = swift_dynamicCast();
      uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v39 + 56);
      if (v40)
      {
        uint64_t v42 = *(unsigned int *)(v0 + 1320);
        uint64_t v43 = *(void *)(v0 + 856);
        uint64_t v44 = *(void *)(v0 + 824);
        v41(v44, 0, 1, *(void *)(v0 + 832));
        sub_1009C715C(v44, v43, type metadata accessor for SharedBeaconRecord);
        uint64_t My = type metadata accessor for Feature.FindMy();
        *(void *)(v0 + 120) = My;
        *(void *)(v0 + 128) = sub_1009C5B60((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
        uint64_t v46 = sub_10001D958(v162);
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(My - 8) + 104))(v46, v42, My);
        LOBYTE(My) = isFeatureEnabled(_:)();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v162);
        uint64_t v47 = *(void *)(v0 + 856);
        if ((My & 1) == 0) {
          goto LABEL_18;
        }
        int v48 = *(unsigned __int8 *)(v47 + *(int *)(*(void *)(v0 + 832) + 64));
        sub_1009C70F0(*(void *)(v0 + 856), *(void *)(v0 + 848), type metadata accessor for SharedBeaconRecord);
        uint64_t v47 = *(void *)(v0 + 856);
        uint64_t v49 = *(void *)(v0 + 848);
        if (v48 == 4)
        {
          sub_1009C71C8(v49, type metadata accessor for SharedBeaconRecord);
LABEL_18:
          sub_1009C71C8(v47, type metadata accessor for SharedBeaconRecord);
          goto LABEL_23;
        }
        int v81 = *(unsigned __int8 *)(v49 + *(int *)(*(void *)(v0 + 832) + 64));
        sub_1009C71C8(v49, type metadata accessor for SharedBeaconRecord);
        sub_1009C71C8(v47, type metadata accessor for SharedBeaconRecord);
        if (v81 == 1) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v50 = *(void *)(v0 + 824);
        v41(v50, 1, 1, *(void *)(v0 + 832));
        sub_10001DAB4(v50, (uint64_t *)&unk_101653D50);
      }
    }
    uint64_t v51 = *(void *)(v0 + 280);
    uint64_t v52 = *(void *)(v0 + 288);
    sub_10001CD44(v25, v51);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v52 + 160))(v51, v52)) {
      goto LABEL_23;
    }
    uint64_t v53 = *(void *)(v0 + 1224);
    uint64_t v54 = *(void *)(v0 + 280);
    uint64_t v55 = *(void *)(v0 + 288);
    sub_10001CD44(v25, v54);
    if ((v53 & 0x200) == 0)
    {
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v55 + 112))(v54, v55))
      {
        uint64_t v138 = *(void *)(v0 + 688);
        uint64_t v140 = *(void *)(v0 + 280);
        uint64_t v139 = *(void *)(v0 + 288);
        sub_10001CD44(v25, v140);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v139 + 8) + 8) + 32))(v140);
        return _swift_task_switch(sub_1009AEE20, v138, 0);
      }
      goto LABEL_23;
    }
    char v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 88))(v54, v55);
    sub_10001D010((uint64_t)v25, (uint64_t)v156);
    if (v58) {
      break;
    }
    uint64_t v60 = *(void *)(v0 + 360);
    uint64_t v61 = *(void *)(v0 + 368);
    sub_10001CD44(v156, v60);
    char v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v61 + 112))(v60, v61);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v156);
    uint64_t v59 = v0 + 296;
    sub_10001D010((uint64_t)v25, (uint64_t)v155);
    if (v62) {
      goto LABEL_30;
    }
    uint64_t v86 = *(void *)(v0 + 320);
    uint64_t v87 = *(void *)(v0 + 328);
    sub_10001CD44(v155, v86);
    char v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 96))(v86, v87);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v155);
    sub_10001D010((uint64_t)v25, (uint64_t)v24);
    if (v88) {
      goto LABEL_31;
    }
    uint64_t v89 = *(void *)(v0 + 200);
    uint64_t v90 = *(void *)(v0 + 208);
    sub_10001CD44(v24, v89);
    char v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v90 + 128))(v89, v90);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v24);
    if (v91) {
      goto LABEL_32;
    }
LABEL_23:
    (*(void (**)(void, void))(*(void *)(v0 + 872) + 8))(*(void *)(v0 + 928), *(void *)(v0 + 864));
LABEL_24:
    uint64_t v56 = *(void *)(v0 + 1200);
    uint64_t v57 = *(void *)(v0 + 1256) + 1;
    uint64_t v27 = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v25);
    if (v57 == v56)
    {
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    unint64_t v36 = *(void *)(v0 + 1256) + 1;
    *(void *)(v0 + 1256) = v36;
    uint64_t v35 = *(void *)(v0 + 1152);
    if (v36 >= *(void *)(v35 + 16)) {
      goto LABEL_79;
    }
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v156);
  uint64_t v59 = v0 + 296;
  sub_10001D010((uint64_t)v25, (uint64_t)v155);
LABEL_30:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v59);
  sub_10001D010((uint64_t)v25, (uint64_t)v24);
LABEL_31:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v24);
LABEL_32:
  uint64_t v63 = *(void *)(v0 + 1248);
  *(void *)(v0 + 1296) = *(void *)(v0 + 560);
  uint64_t v64 = *(void *)(v63 + 16);
  sub_10001D010((uint64_t)v25, (uint64_t)v22);
  if (v64)
  {
    uint64_t v65 = *(void *)(v0 + 1248);
    uint64_t v66 = *(void *)(v0 + 952);
    uint64_t v67 = *(void *)(v0 + 80);
    uint64_t v68 = *(void *)(v0 + 88);
    sub_10001CD44(v22, v67);
    uint64_t v69 = *(void *)(*(void *)(v68 + 8) + 8);
    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v69 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v70(v67, v69);
    uint64_t v71 = v65 + ((*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80));
    swift_bridgeObjectRetain();
    uint64_t v164 = *(void *)(v66 + 72);
    uint64_t v167 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16);
    while (1)
    {
      uint64_t v72 = *(void *)(v0 + 952);
      uint64_t v73 = *(void *)(v0 + 944);
      uint64_t v74 = *(void *)(v0 + 768);
      v167(v74, v71, v73);
      uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56);
      v75(v74, 0, 1, v73);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v74, 1, v73) == 1)
      {
        uint64_t v82 = *(void *)(v0 + 952);
        swift_bridgeObjectRelease();
        uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
        goto LABEL_41;
      }
      uint64_t v76 = *(void *)(v0 + 984);
      uint64_t v77 = *(void *)(v0 + 952);
      uint64_t v78 = *(void *)(v0 + 944);
      (*(void (**)(uint64_t, void, uint64_t))(v77 + 32))(v76, *(void *)(v0 + 768), v78);
      sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v79 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      v80(v76, v78);
      if (v79) {
        break;
      }
      v71 += v164;
      if (!--v64)
      {
        v75(*(void *)(v0 + 768), 1, 1, *(void *)(v0 + 944));
        swift_bridgeObjectRelease();
LABEL_41:
        unint64_t v25 = (void *)(v0 + 256);
        uint64_t v83 = *(void *)(v0 + 928);
        uint64_t v84 = *(void *)(v0 + 872);
        uint64_t v85 = *(void *)(v0 + 864);
        v80(*(void *)(v0 + 992), *(void *)(v0 + 944));
        swift_bridgeObjectRelease();
        uint64_t v22 = (void *)(v0 + 56);
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
        swift_bridgeObjectRelease();
        uint64_t v24 = (void *)(v0 + 176);
        uint64_t v23 = v0 + 136;
        goto LABEL_24;
      }
    }
    uint64_t v132 = *(void *)(v0 + 992);
    uint64_t v133 = *(void *)(v0 + 944);
    swift_bridgeObjectRelease();
    v80(v132, v133);
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)(v0 + 56);
    unint64_t v25 = (void *)(v0 + 256);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
  uint64_t v134 = (void *)swift_task_alloc();
  *(void *)(v0 + 1304) = v134;
  *uint64_t v134 = v0;
  v134[1] = sub_1009B0540;
  uint64_t v135 = *(void *)(v0 + 1224);
  uint64_t v136 = *(void *)(v0 + 688);
  return sub_1009B3098((uint64_t)v25, v136, v135);
}

uint64_t sub_1009AEE20()
{
  uint64_t v1 = v0[125];
  uint64_t v2 = v0[119];
  uint64_t v3 = v0[118];
  uint64_t v4 = v0[86];
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 16))(v1, v0[126], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  v0[158] = v6;
  *(void *)(v6 + 16) = v4;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v6 + v5, v1, v3);
  swift_retain();
  return _swift_task_switch(sub_1009AEF14, 0, 0);
}

uint64_t sub_1009AEF14()
{
  uint64_t v1 = v0[158];
  uint64_t v2 = v0[140];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[159] = v3;
  v3[2] = v2;
  v3[3] = sub_10088416C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[160] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DF0);
  *uint64_t v4 = v0;
  v4[1] = sub_1009AF030;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 61, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000730E0, v3, v5);
}

uint64_t sub_1009AF030()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 688);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 1288) = *(void *)(v1 + 488);
  return _swift_task_switch(sub_1009AF1A0, v2, 0);
}

uint64_t sub_1009AF1A0()
{
  uint64_t v1 = v0[87];
  (*(void (**)(void, void))(v0[119] + 8))(v0[126], v0[118]);
  return _swift_task_switch(sub_1009AF220, v1, 0);
}

uint64_t sub_1009AF220()
{
  uint64_t v153 = v0;
  uint64_t v135 = v0 + 7;
  uint64_t v136 = v0 + 12;
  uint64_t v137 = (uint64_t)(v0 + 17);
  uint64_t v138 = (uint64_t)(v0 + 32);
  uint64_t v132 = v0 + 22;
  uint64_t v133 = v0 + 37;
  uint64_t v134 = v0 + 42;
  uint64_t v1 = v0[161];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(unsigned __int8 *)(v0[98] + 80);
    sub_1009C70F0(v1 + ((v2 + 32) & ~v2), v0[102], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v144 = v0 + 68;
  uint64_t v146 = v0 + 70;
  uint64_t v4 = v0[102];
  uint64_t v5 = v0[101];
  uint64_t v6 = v0[98];
  uint64_t v7 = v0[97];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v3, 1, v7);
  swift_bridgeObjectRelease();
  sub_10001D608(v4, v5, (uint64_t *)&unk_10163B7C0);
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v5, 1, v7);
  uint64_t v9 = v0[101];
  os_log_type_t v151 = v0;
  if (v8 == 1)
  {
    sub_10001DAB4(v9, (uint64_t *)&unk_10163B7C0);
  }
  else
  {
    uint64_t v10 = v0[100];
    uint64_t v11 = v0[99];
    uint64_t v12 = v0[97];
    sub_1009C715C(v9, v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    LODWORD(v12) = *(unsigned __int8 *)(v10 + *(int *)(v12 + 40));
    sub_1009C715C(v10, v11, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v13 = v0[99];
    if (v12 != 1)
    {
      int v45 = *(unsigned __int8 *)(v13 + *(int *)(v0[97] + 40));
      sub_1009C71C8(v13, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      Swift::String v14 = v0 + 32;
      if (v45 != 4) {
        goto LABEL_67;
      }
      goto LABEL_9;
    }
    sub_1009C71C8(v13, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }
  Swift::String v14 = v0 + 32;
LABEL_9:
  uint64_t v15 = v0[156];
  v0[162] = v0[70];
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = (uint64_t)v14;
  uint64_t v18 = (uint64_t)v135;
  sub_10001D010(v17, (uint64_t)v135);
  if (!v16)
  {
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  uint64_t v19 = v0[156];
  uint64_t v20 = v0[119];
  uint64_t v21 = v0[10];
  uint64_t v22 = v0[11];
  sub_10001CD44(v135, v21);
  uint64_t v23 = *(void *)(*(void *)(v22 + 8) + 8);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v23 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v23);
  uint64_t v25 = v19 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
  uint64_t v147 = *(void *)(v20 + 72);
  uint64_t v149 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v26 = v0[119];
    uint64_t v27 = v0[118];
    uint64_t v28 = v0[96];
    v149(v28, v25, v27);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v29(v28, 0, 1, v27);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v28, 1, v27) == 1) {
      break;
    }
    uint64_t v30 = v0[123];
    uint64_t v31 = v0[119];
    uint64_t v32 = v0[118];
    (*(void (**)(uint64_t, void, uint64_t))(v31 + 32))(v30, v0[96], v32);
    sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v34(v30, v32);
    if (v33)
    {
      uint64_t v39 = v0[124];
      uint64_t v40 = v0[118];
      swift_bridgeObjectRelease();
      v34(v39, v40);
      swift_bridgeObjectRelease();
      uint64_t v18 = (uint64_t)v135;
LABEL_18:
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v18);
      uint64_t v41 = (void *)swift_task_alloc();
      v0[163] = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_1009B0540;
      uint64_t v42 = v0[153];
      uint64_t v43 = v0[86];
      return sub_1009B3098(v138, v43, v42);
    }
    v25 += v147;
    if (!--v16)
    {
      v29(v0[96], 1, 1, v0[118]);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  uint64_t v35 = v0[119];
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
LABEL_16:
  Swift::String v14 = (void *)v138;
  uint64_t v36 = v0[116];
  uint64_t v37 = v0[109];
  uint64_t v38 = v0[108];
  v34(v0[124], v0[118]);
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v135);
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v129 = v0[150];
    uint64_t v130 = v0[157] + 1;
    uint64_t v83 = (uint64_t (*)())_s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v14);
    if (v130 == v129) {
      break;
    }
    unint64_t v86 = v0[157] + 1;
LABEL_49:
    v0[157] = v86;
    uint64_t v94 = v0[144];
    if (v86 >= *(void *)(v94 + 16))
    {
      __break(1u);
      return _swift_task_switch(v83, v84, v85);
    }
    sub_10001D010(v94 + 40 * v86 + 32, (uint64_t)v14);
    ContinuousClock.now.getter();
    uint64_t v95 = v0[35];
    uint64_t v96 = v0[36];
    sub_10001CD44(v14, v95);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v96 + 112))(v95, v96) & 1) == 0) {
      goto LABEL_57;
    }
    uint64_t v97 = v0[105];
    sub_10001D010((uint64_t)v14, v137);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    int v98 = swift_dynamicCast();
    unint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v97 + 56);
    if (!v98)
    {
      uint64_t v108 = v0[103];
      v99(v108, 1, 1, v0[104]);
      sub_10001DAB4(v108, (uint64_t *)&unk_101653D50);
LABEL_57:
      uint64_t v109 = v0[35];
      uint64_t v110 = v0[36];
      sub_10001CD44(v14, v109);
      if (((*(uint64_t (**)(uint64_t, uint64_t))(v110 + 160))(v109, v110) & 1) == 0)
      {
        uint64_t v111 = v0[153];
        uint64_t v112 = v0[35];
        uint64_t v113 = v0[36];
        sub_10001CD44(v14, v112);
        if ((v111 & 0x200) != 0)
        {
          char v117 = (*(uint64_t (**)(uint64_t, uint64_t))(v113 + 88))(v112, v113);
          sub_10001D010((uint64_t)v14, (uint64_t)v134);
          if (v117)
          {
            _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v134);
            uint64_t v121 = (uint64_t)v133;
            sub_10001D010((uint64_t)v14, (uint64_t)v133);
LABEL_74:
            _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v121);
            uint64_t v125 = (uint64_t)v132;
            sub_10001D010((uint64_t)v14, (uint64_t)v132);
LABEL_75:
            _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v125);
            goto LABEL_9;
          }
          uint64_t v118 = v0[45];
          uint64_t v119 = v0[46];
          sub_10001CD44(v134, v118);
          char v120 = (*(uint64_t (**)(uint64_t, uint64_t))(v119 + 112))(v118, v119);
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v134);
          uint64_t v121 = (uint64_t)v133;
          sub_10001D010((uint64_t)v14, (uint64_t)v133);
          if (v120) {
            goto LABEL_74;
          }
          uint64_t v122 = v0[40];
          uint64_t v123 = v0[41];
          sub_10001CD44(v133, v122);
          char v124 = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 96))(v122, v123);
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v133);
          uint64_t v125 = (uint64_t)v132;
          sub_10001D010((uint64_t)v14, (uint64_t)v132);
          if (v124) {
            goto LABEL_75;
          }
          uint64_t v126 = v0[25];
          uint64_t v127 = v0[26];
          sub_10001CD44(v132, v126);
          char v128 = (*(uint64_t (**)(uint64_t, uint64_t))(v127 + 128))(v126, v127);
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v132);
          if (v128) {
            goto LABEL_9;
          }
        }
        else if ((*(uint64_t (**)(uint64_t, uint64_t))(v113 + 112))(v112, v113))
        {
          uint64_t v114 = v0[86];
          uint64_t v115 = v0[35];
          uint64_t v116 = v0[36];
          sub_10001CD44(v14, v115);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v116 + 8) + 8) + 32))(v115);
          uint64_t v83 = sub_1009AEE20;
          uint64_t v84 = v114;
          uint64_t v85 = 0;
          return _swift_task_switch(v83, v84, v85);
        }
      }
      goto LABEL_67;
    }
    uint64_t v100 = *((unsigned int *)v0 + 330);
    uint64_t v101 = v0[107];
    uint64_t v102 = v0[103];
    v99(v102, 0, 1, v0[104]);
    sub_1009C715C(v102, v101, type metadata accessor for SharedBeaconRecord);
    uint64_t My = type metadata accessor for Feature.FindMy();
    v0[15] = My;
    v0[16] = sub_1009C5B60((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
    uint64_t v104 = sub_10001D958(v136);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(My - 8) + 104))(v104, v100, My);
    LOBYTE(My) = isFeatureEnabled(_:)();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v136);
    uint64_t v105 = v0[107];
    if ((My & 1) == 0) {
      goto LABEL_55;
    }
    int v106 = *(unsigned __int8 *)(v105 + *(int *)(v0[104] + 64));
    sub_1009C70F0(v0[107], v0[106], type metadata accessor for SharedBeaconRecord);
    uint64_t v105 = v0[107];
    uint64_t v107 = v0[106];
    if (v106 == 4)
    {
      sub_1009C71C8(v107, type metadata accessor for SharedBeaconRecord);
LABEL_55:
      sub_1009C71C8(v105, type metadata accessor for SharedBeaconRecord);
      goto LABEL_67;
    }
    int v131 = *(unsigned __int8 *)(v107 + *(int *)(v0[104] + 64));
    sub_1009C71C8(v107, type metadata accessor for SharedBeaconRecord);
    sub_1009C71C8(v105, type metadata accessor for SharedBeaconRecord);
    if (v131 != 1) {
      goto LABEL_57;
    }
LABEL_67:
    (*(void (**)(void, void))(v0[109] + 8))(v0[116], v0[108]);
  }
  swift_bridgeObjectRelease();
  while (1)
  {
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = swift_slowAlloc();
      *uint64_t v144 = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 134218242;
      swift_beginAccess();
      if (*v146 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v49 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v49 = *(void *)((*v146 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v50 = v0[155];
      uint64_t v51 = v0[154];
      *(void *)(v48 + 4) = v49;
      *(_WORD *)(v48 + 12) = 2082;
      if (v50) {
        uint64_t v52 = v51;
      }
      else {
        uint64_t v52 = 0x6E776F6E6B6E75;
      }
      if (v50) {
        unint64_t v53 = v50;
      }
      else {
        unint64_t v53 = 0xE700000000000000;
      }
      swift_bridgeObjectRetain();
      *(void *)(v48 + 14) = sub_1008FA0F0(v52, v53, v144);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v47, "receivedSimpleBeaconUpdates - updating beacons (count) %ld to bundle: %{public}s.", (uint8_t *)v48, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_retain();
    XPCSession.proxy.getter();
    swift_release();
    uint64_t v54 = (void *)v0[69];
    if (v54)
    {
      swift_beginAccess();
      sub_10001D4B0(0, &qword_101653DE8);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v54 receivedSimpleBeaconUpdates:isa];

      swift_unknownObjectRelease();
    }
    uint64_t v56 = v0[139];
    uint64_t v57 = v0[117];
    uint64_t v58 = v0[112];
    uint64_t v59 = v0[111];
    uint64_t v150 = v0[110];
    uint64_t v60 = v0[109];
    uint64_t v61 = v0[108];
    uint64_t v62 = v0[93];
    uint64_t v63 = v151[92];
    uint64_t v64 = v151[91];
    ContinuousClock.now.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 16))(v62, v56, v64);
    uint64_t v0 = v151;
    uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16);
    v65(v59, v57, v61);
    v65(v150, v58, v61);
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v145 = static os_log_type_t.default.getter();
    BOOL v67 = os_log_type_enabled(v66, v145);
    uint64_t v68 = v151[117];
    uint64_t v69 = v151[112];
    uint64_t v70 = v151[111];
    Swift::String v14 = (void *)v151[110];
    uint64_t v71 = v151[109];
    uint64_t v72 = v151[108];
    uint64_t v73 = v151[93];
    uint64_t v74 = v151[92];
    uint64_t v148 = v151[91];
    if (v67)
    {
      uint64_t v143 = v151[117];
      uint64_t v75 = v151[90];
      uint64_t v76 = v151[89];
      uint64_t v140 = v151[88];
      uint64_t v142 = v151[112];
      uint64_t v77 = swift_slowAlloc();
      uint64_t v152 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136446210;
      static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
      sub_1009C5B60(&qword_101653DE0, 255, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
      uint64_t v141 = v73;
      uint64_t v78 = static Duration.description<A>(_:_:units:)();
      log = v66;
      unint64_t v80 = v79;
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v140);
      uint64_t v0 = v151;
      *(void *)(v77 + 4) = sub_1008FA0F0(v78, v80, &v152);
      swift_bridgeObjectRelease();
      int v81 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v81(v70, v72);
      v81((uint64_t)v14, v72);
      _os_log_impl((void *)&_mh_execute_header, log, v145, "session processing time: %{public}s", (uint8_t *)v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();

      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v141, v148);
      v81(v142, v72);
      v81(v143, v72);
    }
    else
    {

      uint64_t v82 = *(void (**)(uint64_t, uint64_t))(v71 + 8);
      v82(v70, v72);
      v82((uint64_t)v14, v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v148);
      v82(v69, v72);
      v82(v68, v72);
    }
    uint64_t v83 = (uint64_t (*)())swift_bridgeObjectRelease();
    unint64_t v86 = v0[151] + 1;
    if (v86 == v0[145]) {
      break;
    }
    v0[151] = v86;
    uint64_t v87 = v0[135];
    if (v86 >= *(void *)(v87 + 16))
    {
      __break(1u);
      goto LABEL_49;
    }
    uint64_t v88 = v0[150];
    uint64_t v89 = (void *)(v87 + 48 * v86);
    v0[152] = v89[4];
    v0[153] = v89[5];
    v0[154] = v89[6];
    v0[155] = v89[7];
    v0[156] = v89[9];
    v0[70] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    ContinuousClock.now.getter();
    if (v88)
    {
      swift_bridgeObjectRetain();
      uint64_t v83 = (uint64_t (*)())swift_beginAccess();
      unint64_t v86 = 0;
      Swift::String v14 = (void *)v138;
      goto LABEL_49;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v90 = v0[129];
  uint64_t v91 = v0[128];
  uint64_t v92 = v0[127];
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v90, v92);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v93 = (uint64_t (*)(void))v0[1];
  return v93();
}

uint64_t sub_1009B0540(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 696);
  *(void *)(*(void *)v1 + 1312) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B0658, v2, 0);
}

uint64_t sub_1009B0658()
{
  uint64_t v240 = v0;
  unint64_t v1 = v0[162];
  id v2 = [(id)v0[164] identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  if (v1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v3 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v4 = 0;
    uint64_t v225 = v3;
    unint64_t v228 = v1 & 0xC000000000000001;
    uint64_t v223 = v0[162] + 32;
    while (1)
    {
      id v5 = v228 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v223 + 8 * v4);
      uint64_t v6 = v5;
      if (__OFADD__(v4, 1)) {
        break;
      }
      uint64_t v232 = v4 + 1;
      uint64_t v7 = v0[126];
      uint64_t v8 = v0[119];
      uint64_t v9 = v0[118];
      uint64_t v10 = v0[95];
      id v11 = [v5 identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v1 = *(void *)(v8 + 32);
      ((void (*)(uint64_t, uint64_t, uint64_t))v1)(v10, v7, v9);

      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v12(v10, 0, 1, v9);
      int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9);
      BOOL v14 = v13 != 1;
      if (v13 == 1) {
        goto LABEL_16;
      }
      uint64_t v15 = v0[121];
      uint64_t v16 = v0[119];
      uint64_t v17 = v0[118];
      ((void (*)(uint64_t, void, uint64_t))v1)(v15, v0[95], v17);
      sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
      if (v18) {
        goto LABEL_16;
      }
      ++v4;
      if (v232 == v225) {
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[119] + 56);
LABEL_15:
  v12(v0[95], 1, 1, v0[118]);
  BOOL v14 = 0;
LABEL_16:
  uint64_t v199 = v0 + 22;
  unint64_t v197 = (void (*)(uint64_t, uint64_t))(v0 + 7);
  uint64_t v198 = v0 + 37;
  uint64_t v200 = v0 + 42;
  uint64_t v201 = v0 + 12;
  uint64_t v19 = v0[122];
  uint64_t v202 = (uint64_t)(v0 + 17);
  uint64_t v20 = v0[119];
  unint64_t v218 = v0 + 68;
  uint64_t v21 = v0[118];
  uint64_t v22 = v0 + 70;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
  v23(v19, v21);
  uint64_t v203 = (uint64_t)(v0 + 32);
  BOOL v222 = v0 + 70;
  uint64_t v238 = v0;
  if (v14)
  {
    sub_10001D010((uint64_t)(v0 + 32), (uint64_t)(v0 + 2));
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = v0[126];
      uint64_t v210 = v0[118];
      uint64_t v219 = v0[109];
      uint64_t v226 = v0[108];
      uint64_t v229 = v0[116];
      char v215 = (void *)v0[164];
      uint64_t v27 = swift_slowAlloc();
      v239[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 141558275;
      v0[66] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2081;
      uint64_t v233 = v23;
      uint64_t v29 = v0[5];
      uint64_t v28 = v0[6];
      sub_10001CD44(v0 + 2, v29);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v28 + 8) + 8) + 32))(v29);
      sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v32 = v31;
      v233(v26, v210);
      v0[67] = sub_1008FA0F0(v30, v32, v239);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Beacon to insert already exists: %{private,mask.hash}s.", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v22 = v0 + 70;
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v219 + 8))(v229, v226);
    }
    else
    {
      uint64_t v60 = v0[116];
      uint64_t v61 = v0[109];
      uint64_t v62 = v0[108];

      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v60, v62);
    }
    char v33 = v0 + 32;
  }
  else
  {
    uint64_t v234 = v23;
    uint64_t v34 = (void *)v0[164];
    swift_beginAccess();
    id v35 = v34;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v0[70] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[70] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
    ContinuousClock.now.getter();
    ContinuousClock.Instant.duration(to:)();
    uint64_t v36 = Duration.milliseconds.getter();
    uint64_t v37 = v0[116];
    uint64_t v38 = v0[115];
    if (v36 < 101)
    {
      uint64_t v63 = v0[109];
      uint64_t v64 = v0[108];

      swift_bridgeObjectRelease();
      uint64_t v65 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
      v65(v38, v64);
      v65(v37, v64);
      char v33 = v0 + 32;
    }
    else
    {
      uint64_t v39 = v0[114];
      uint64_t v40 = v0[113];
      uint64_t v41 = v0[109];
      uint64_t v42 = v0[108];
      (*(void (**)(void, void, void))(v0[92] + 16))(v0[94], v0[139], v0[91]);
      uint64_t v224 = v0 + 27;
      sub_10001D010(v203, (uint64_t)(v0 + 27));
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
      v43(v39, v37, v42);
      v43(v40, v38, v42);
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.error.getter();
      BOOL v46 = os_log_type_enabled(v44, v45);
      unint64_t v227 = (void *)v0[164];
      if (v46)
      {
        log = v44;
        uint64_t v47 = v0[126];
        uint64_t v48 = v0[118];
        uint64_t v220 = v0[116];
        uint64_t v216 = v0[115];
        uint64_t v193 = v0[114];
        uint64_t v194 = v0[113];
        uint64_t v204 = v0[109];
        os_log_type_t type = v45;
        uint64_t v192 = v0[108];
        uint64_t v209 = v0[92];
        uint64_t v211 = v0[91];
        uint64_t v213 = v0[94];
        uint64_t v49 = v0[90];
        uint64_t v195 = v0[89];
        uint64_t v196 = v0[88];
        uint64_t v50 = swift_slowAlloc();
        v239[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v50 = 141558531;
        v0[62] = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v50 + 12) = 2081;
        uint64_t v52 = v0[30];
        uint64_t v51 = v0[31];
        sub_10001CD44(v224, v52);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v51 + 8) + 8) + 32))(v52);
        sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v55 = v54;
        v234(v47, v48);
        v0[63] = sub_1008FA0F0(v53, v55, v239);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v224);
        *(_WORD *)(v50 + 22) = 2082;
        static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
        sub_1009C5B60(&qword_101653DE0, 255, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
        uint64_t v56 = static Duration.description<A>(_:_:units:)();
        unint64_t v58 = v57;
        (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v49, v196);
        v0[64] = sub_1008FA0F0(v56, v58, v239);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v204 + 8);
        v59(v193, v192);
        v59(v194, v192);
        _os_log_impl((void *)&_mh_execute_header, log, type, "Slow beacon processing time for %{private,mask.hash}s: %{public}s", (uint8_t *)v50, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v213, v211);
        v59(v216, v192);
        v59(v220, v192);
      }
      else
      {
        uint64_t v66 = v0[116];
        uint64_t v235 = v0[115];
        uint64_t v67 = v0[114];
        uint64_t v68 = v0[113];
        uint64_t v69 = v0[109];
        uint64_t v70 = v0[108];
        uint64_t v71 = v0[94];
        uint64_t v72 = v0[92];
        uint64_t v73 = v0[91];

        swift_bridgeObjectRelease();
        uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
        v74(v67, v70);
        v74(v68, v70);
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v224);

        (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        v74(v235, v70);
        v74(v66, v70);
      }
LABEL_89:
      char v33 = (void *)v203;
      uint64_t v22 = v222;
    }
  }
  while (1)
  {
    uint64_t v75 = v0[150];
    uint64_t v76 = v0[157] + 1;
    uint64_t v77 = (uint64_t (*)())_s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
    if (v76 == v75)
    {
      swift_bridgeObjectRelease();
      while (1)
      {
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        unint64_t v80 = Logger.logObject.getter();
        os_log_type_t v81 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v80, v81))
        {
          uint64_t v82 = swift_slowAlloc();
          *unint64_t v218 = swift_slowAlloc();
          *(_DWORD *)uint64_t v82 = 134218242;
          swift_beginAccess();
          if (*v22 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v83 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v83 = *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          unint64_t v84 = v0[155];
          uint64_t v85 = v0[154];
          *(void *)(v82 + 4) = v83;
          *(_WORD *)(v82 + 12) = 2082;
          if (v84) {
            uint64_t v86 = v85;
          }
          else {
            uint64_t v86 = 0x6E776F6E6B6E75;
          }
          if (v84) {
            unint64_t v87 = v84;
          }
          else {
            unint64_t v87 = 0xE700000000000000;
          }
          swift_bridgeObjectRetain();
          *(void *)(v82 + 14) = sub_1008FA0F0(v86, v87, v218);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v80, v81, "receivedSimpleBeaconUpdates - updating beacons (count) %ld to bundle: %{public}s.", (uint8_t *)v82, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        swift_retain();
        XPCSession.proxy.getter();
        swift_release();
        uint64_t v88 = (void *)v0[69];
        if (v88)
        {
          swift_beginAccess();
          sub_10001D4B0(0, &qword_101653DE8);
          swift_bridgeObjectRetain();
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v88 receivedSimpleBeaconUpdates:isa];

          swift_unknownObjectRelease();
        }
        uint64_t v90 = v0[139];
        uint64_t v91 = v0[117];
        uint64_t v92 = v0[112];
        uint64_t v93 = v0[111];
        uint64_t v236 = v0[110];
        uint64_t v94 = v0[109];
        uint64_t v95 = v0[108];
        uint64_t v96 = v0[93];
        uint64_t v97 = v238[92];
        uint64_t v98 = v238[91];
        ContinuousClock.now.getter();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v97 + 16))(v96, v90, v98);
        uint64_t v0 = v238;
        unint64_t v99 = *(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16);
        v99(v93, v91, v95);
        v99(v236, v92, v95);
        uint64_t v100 = Logger.logObject.getter();
        os_log_type_t v221 = static os_log_type_t.default.getter();
        BOOL v101 = os_log_type_enabled(v100, v221);
        uint64_t v102 = v238[117];
        uint64_t v103 = v238[112];
        uint64_t v104 = v238[111];
        uint64_t v105 = v238[110];
        uint64_t v106 = v238[109];
        uint64_t v107 = v238[108];
        uint64_t v108 = v238[93];
        uint64_t v109 = v238[92];
        uint64_t v230 = v238[91];
        if (v101)
        {
          uint64_t v217 = v238[112];
          uint64_t v110 = v238[90];
          uint64_t v111 = v238[89];
          os_log_t loga = (os_log_t)v238[88];
          uint64_t v214 = v238[117];
          uint64_t v112 = swift_slowAlloc();
          v239[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v112 = 136446210;
          static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
          sub_1009C5B60(&qword_101653DE0, 255, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
          uint64_t v212 = v108;
          uint64_t v113 = static Duration.description<A>(_:_:units:)();
          typea = v100;
          unint64_t v115 = v114;
          (*(void (**)(uint64_t, os_log_t))(v111 + 8))(v110, loga);
          uint64_t v0 = v238;
          *(void *)(v112 + 4) = sub_1008FA0F0(v113, v115, v239);
          swift_bridgeObjectRelease();
          uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
          v116(v104, v107);
          v116(v105, v107);
          _os_log_impl((void *)&_mh_execute_header, typea, v221, "session processing time: %{public}s", (uint8_t *)v112, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();

          char v117 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
          char v33 = (void *)(v109 + 8);
          v117(v212, v230);
          v116(v217, v107);
          v116(v214, v107);
          swift_bridgeObjectRelease();
          uint64_t v22 = v222;
        }
        else
        {

          uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
          v116(v104, v107);
          v116(v105, v107);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
          char v33 = (void *)(v109 + 8);
          v118(v108, v230);
          v116(v103, v107);
          v116(v102, v107);
          uint64_t v22 = v222;
          swift_bridgeObjectRelease();
        }
        unint64_t v119 = v0[151] + 1;
        if (v119 == v0[145]) {
          break;
        }
        v0[151] = v119;
        uint64_t v120 = v0[135];
        if (v119 >= *(void *)(v120 + 16))
        {
          __break(1u);
          goto LABEL_95;
        }
        uint64_t v121 = v0[150];
        uint64_t v122 = (void *)(v120 + 48 * v119);
        v0[152] = v122[4];
        v0[153] = v122[5];
        v0[154] = v122[6];
        v0[155] = v122[7];
        v0[156] = v122[9];
        v0[70] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        ContinuousClock.now.getter();
        if (v121)
        {
          swift_bridgeObjectRetain();
          uint64_t v77 = (uint64_t (*)())swift_beginAccess();
          unint64_t v123 = 0;
          char v33 = (void *)v203;
          goto LABEL_55;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v157 = v0[129];
      uint64_t v158 = v0[128];
      uint64_t v159 = v0[127];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v157, v159);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v160 = (uint64_t (*)(void))v0[1];
      return v160();
    }
    unint64_t v123 = v0[157] + 1;
LABEL_55:
    v0[157] = v123;
    uint64_t v124 = v0[144];
    if (v123 >= *(void *)(v124 + 16))
    {
      __break(1u);
      return _swift_task_switch(v77, v78, v79);
    }
    sub_10001D010(v124 + 40 * v123 + 32, (uint64_t)v33);
    ContinuousClock.now.getter();
    uint64_t v125 = v0[35];
    uint64_t v126 = v0[36];
    sub_10001CD44(v33, v125);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v126 + 112))(v125, v126) & 1) == 0) {
      break;
    }
    uint64_t v127 = v0[105];
    sub_10001D010((uint64_t)v33, v202);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    int v128 = swift_dynamicCast();
    uint64_t v129 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v127 + 56);
    if (!v128)
    {
      uint64_t v139 = v0[103];
      v129(v139, 1, 1, v0[104]);
      sub_10001DAB4(v139, (uint64_t *)&unk_101653D50);
      break;
    }
    uint64_t v130 = *((unsigned int *)v0 + 330);
    uint64_t v131 = v0[107];
    uint64_t v132 = v0[103];
    v129(v132, 0, 1, v0[104]);
    sub_1009C715C(v132, v131, type metadata accessor for SharedBeaconRecord);
    uint64_t My = type metadata accessor for Feature.FindMy();
    v0[15] = My;
    v0[16] = sub_1009C5B60((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
    uint64_t v134 = sub_10001D958(v201);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(My - 8) + 104))(v134, v130, My);
    LOBYTE(My) = isFeatureEnabled(_:)();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v201);
    uint64_t v135 = v0[107];
    if ((My & 1) == 0) {
      goto LABEL_29;
    }
    int v136 = *(unsigned __int8 *)(v135 + *(int *)(v0[104] + 64));
    sub_1009C70F0(v0[107], v0[106], type metadata accessor for SharedBeaconRecord);
    uint64_t v135 = v0[107];
    uint64_t v137 = v0[106];
    if (v136 == 4)
    {
      sub_1009C71C8(v137, type metadata accessor for SharedBeaconRecord);
LABEL_29:
      sub_1009C71C8(v135, type metadata accessor for SharedBeaconRecord);
      goto LABEL_30;
    }
    int v138 = *(unsigned __int8 *)(v137 + *(int *)(v0[104] + 64));
    sub_1009C71C8(v137, type metadata accessor for SharedBeaconRecord);
    sub_1009C71C8(v135, type metadata accessor for SharedBeaconRecord);
    if (v138 != 1) {
      break;
    }
LABEL_30:
    (*(void (**)(void, void))(v0[109] + 8))(v0[116], v0[108]);
  }
  uint64_t v140 = v0[35];
  uint64_t v141 = v0[36];
  sub_10001CD44(v33, v140);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v141 + 160))(v140, v141)) {
    goto LABEL_30;
  }
  uint64_t v142 = v0[153];
  uint64_t v143 = v0[35];
  uint64_t v144 = v0[36];
  sub_10001CD44(v33, v143);
  if ((v142 & 0x200) == 0)
  {
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v144 + 112))(v143, v144))
    {
      uint64_t v162 = v0[86];
      uint64_t v163 = v0[35];
      uint64_t v164 = v0[36];
      sub_10001CD44(v33, v163);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v164 + 8) + 8) + 32))(v163);
      uint64_t v77 = sub_1009AEE20;
      uint64_t v78 = v162;
      uint64_t v79 = 0;
      return _swift_task_switch(v77, v78, v79);
    }
    goto LABEL_30;
  }
  char v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v144 + 88))(v143, v144);
  sub_10001D010((uint64_t)v33, (uint64_t)v200);
  if ((v145 & 1) == 0)
  {
    uint64_t v146 = v0[45];
    uint64_t v147 = v0[46];
    sub_10001CD44(v200, v146);
    char v148 = (*(uint64_t (**)(uint64_t, uint64_t))(v147 + 112))(v146, v147);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v200);
    uint64_t v149 = (uint64_t)v198;
    sub_10001D010((uint64_t)v33, (uint64_t)v198);
    if (v148) {
      goto LABEL_79;
    }
    uint64_t v150 = v0[40];
    uint64_t v151 = v0[41];
    sub_10001CD44(v198, v150);
    char v152 = (*(uint64_t (**)(uint64_t, uint64_t))(v151 + 96))(v150, v151);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v198);
    uint64_t v153 = (uint64_t)v199;
    sub_10001D010((uint64_t)v33, (uint64_t)v199);
    if (v152) {
      goto LABEL_80;
    }
    uint64_t v154 = v0[25];
    uint64_t v155 = v0[26];
    sub_10001CD44(v199, v154);
    char v156 = (*(uint64_t (**)(uint64_t, uint64_t))(v155 + 128))(v154, v155);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v199);
    if (v156) {
      goto LABEL_81;
    }
    goto LABEL_30;
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v200);
  uint64_t v149 = (uint64_t)v198;
  sub_10001D010((uint64_t)v33, (uint64_t)v198);
LABEL_79:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v149);
  uint64_t v153 = (uint64_t)v199;
  sub_10001D010((uint64_t)v33, (uint64_t)v199);
LABEL_80:
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v153);
LABEL_81:
  uint64_t v165 = v0[156];
  v0[162] = v0[70];
  uint64_t v166 = *(void *)(v165 + 16);
  uint64_t v116 = v197;
  sub_10001D010((uint64_t)v33, (uint64_t)v197);
  if (v166)
  {
    uint64_t v167 = v0[156];
    uint64_t v168 = v0[119];
    uint64_t v169 = v0[10];
    uint64_t v170 = v0[11];
    sub_10001CD44(v197, v169);
    uint64_t v171 = *(void *)(*(void *)(v170 + 8) + 8);
    uint64_t v172 = *(void (**)(uint64_t, uint64_t))(v171 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v172(v169, v171);
    uint64_t v173 = v167 + ((*(unsigned __int8 *)(v168 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80));
    uint64_t v231 = *(void *)(v168 + 72);
    uint64_t v237 = *(void (**)(uint64_t, uint64_t, uint64_t))(v168 + 16);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v174 = v0[119];
      uint64_t v175 = v0[118];
      uint64_t v176 = v0[96];
      v237(v176, v173, v175);
      uint64_t v177 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56);
      v177(v176, 0, 1, v175);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v174 + 48))(v176, 1, v175) == 1)
      {
        uint64_t v183 = v0[119];
        swift_bridgeObjectRelease();
        uint64_t v182 = *(void (**)(uint64_t, uint64_t))(v183 + 8);
        goto LABEL_88;
      }
      uint64_t v178 = v0[123];
      uint64_t v179 = v0[119];
      uint64_t v180 = v0[118];
      (*(void (**)(uint64_t, void, uint64_t))(v179 + 32))(v178, v0[96], v180);
      sub_1009C5B60((unint64_t *)&qword_10163B8F0, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v181 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v182 = *(void (**)(uint64_t, uint64_t))(v179 + 8);
      v182(v178, v180);
      if (v181) {
        break;
      }
      v173 += v231;
      if (!--v166)
      {
        v177(v0[96], 1, 1, v0[118]);
        swift_bridgeObjectRelease();
LABEL_88:
        uint64_t v184 = v0[116];
        uint64_t v185 = v0[109];
        uint64_t v186 = v0[108];
        v182(v0[124], v0[118]);
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v197);
        (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v184, v186);
        swift_bridgeObjectRelease();
        goto LABEL_89;
      }
    }
    uint64_t v187 = v0[124];
    uint64_t v188 = v0[118];
    swift_bridgeObjectRelease();
    v182(v187, v188);
    swift_bridgeObjectRelease();
    char v33 = (void *)v203;
    uint64_t v116 = v197;
  }
  else
  {
LABEL_95:
    swift_bridgeObjectRetain();
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v116);
  uint64_t v189 = (void *)swift_task_alloc();
  v0[163] = v189;
  *uint64_t v189 = v0;
  v189[1] = sub_1009B0540;
  uint64_t v190 = v0[153];
  uint64_t v191 = v0[86];
  return sub_1009B3098((uint64_t)v33, v191, v190);
}

uint64_t sub_1009B22C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v3[5] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[6] = v6;
  v3[7] = *(void *)(v6 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  v3[10] = sub_10000588C(&qword_101638CF0);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1009B23DC, a3, 0);
}

uint64_t sub_1009B23DC()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[3];
  v0[12] = *(void *)(v4 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[13] = v6;
  v0[14] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  v0[15] = v8;
  *(void *)(v8 + 16) = v4;
  uint64_t v9 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v0[16] = v9;
  v0[17] = (v2 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v9(v8 + v7, v1, v3);
  swift_retain();
  return _swift_task_switch(sub_1009B24E8, 0, 0);
}

uint64_t sub_1009B24E8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[12];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C64BC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009B25F0;
  uint64_t v6 = v0[10];
  uint64_t v5 = v0[11];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C64D4, v3, v6);
}

uint64_t sub_1009B25F0()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B2724, 0, 0);
}

uint64_t sub_1009B2724()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  (*(void (**)(void, void, uint64_t))(v0 + 104))(*(void *)(v0 + 64), *(void *)(v0 + 24), v2);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 88);
  if (v4 == 1)
  {
    v5(*(void *)(v0 + 16), *(void *)(v0 + 64), *(void *)(v0 + 40));
    sub_10001DAB4(v6, &qword_101638CF0);
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 16);
    (*(void (**)(void, uint64_t))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 64), v7);
    v5(v8, v6, v7);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1009B2848(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_1009B2968, v2, 0);
}

uint64_t sub_1009B2968()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1009B2AA4;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009B2AA4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B2BBC, v2, 0);
}

uint64_t sub_1009B2BBC()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[25])
  {
    uint64_t v2 = (void *)v0[16];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    sub_10001CD44(v2, v3);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    sub_10001CD44(v2, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 184))(v5, v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[26] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1009B2E4C;
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[20];
    uint64_t v10 = v0[15];
    return sub_1011044F4(v10, v8, v9);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_1016368D8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170D7E8);
    int v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No ObservationStoreService available!", v15, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    void *v16 = 0xD000000000000017;
    v16[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_1009B2E4C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  uint64_t v2 = *(void *)(*(void *)v0 + 176);
  uint64_t v3 = *(void *)(*(void *)v0 + 168);
  uint64_t v4 = *(void *)(*(void *)v0 + 160);
  uint64_t v5 = *(void *)(*(void *)v0 + 152);
  uint64_t v6 = *(void *)(*(void *)v0 + 144);
  uint64_t v7 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1009B301C, v7, 0);
}

uint64_t sub_1009B301C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1009B3098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[125] = v3;
  v4[124] = a3;
  v4[123] = a2;
  v4[122] = a1;
  uint64_t v5 = type metadata accessor for BeaconProductInfoRecord();
  v4[126] = v5;
  v4[127] = *(void *)(v5 - 8);
  v4[128] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101653D30);
  v4[129] = swift_task_alloc();
  type metadata accessor for String.Encoding();
  v4[130] = swift_task_alloc();
  v4[131] = type metadata accessor for LocalFindableAccessoryRecord();
  v4[132] = swift_task_alloc();
  v4[133] = swift_task_alloc();
  v4[134] = sub_10000588C(&qword_10163BBA0);
  v4[135] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101653D40);
  v4[136] = swift_task_alloc();
  uint64_t v6 = sub_10000588C(&qword_10163F7B0);
  v4[137] = v6;
  v4[138] = *(void *)(v6 - 8);
  v4[139] = swift_task_alloc();
  v4[140] = sub_10000588C(&qword_10163BBB0);
  v4[141] = swift_task_alloc();
  v4[142] = swift_task_alloc();
  v4[143] = swift_task_alloc();
  v4[144] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for KeyDropLostItemDates(0);
  v4[145] = v7;
  v4[146] = *(void *)(v7 - 8);
  v4[147] = swift_task_alloc();
  sub_10000588C(&qword_10163B8A8);
  v4[148] = swift_task_alloc();
  v4[149] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101653D50);
  v4[150] = swift_task_alloc();
  v4[151] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SharedBeaconRecord(0);
  v4[152] = v8;
  v4[153] = *(void *)(v8 - 8);
  v4[154] = swift_task_alloc();
  v4[155] = swift_task_alloc();
  v4[156] = swift_task_alloc();
  v4[157] = swift_task_alloc();
  v4[158] = swift_task_alloc();
  v4[159] = swift_task_alloc();
  v4[160] = swift_task_alloc();
  v4[161] = swift_task_alloc();
  v4[162] = sub_10000588C(&qword_10163BB20);
  v4[163] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_1016477E0);
  v4[164] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v4[165] = swift_task_alloc();
  v4[166] = swift_task_alloc();
  v4[167] = swift_task_alloc();
  v4[168] = sub_10000588C(&qword_10163BB70);
  v4[169] = swift_task_alloc();
  v4[170] = swift_task_alloc();
  sub_10000588C(&qword_10163B9F0);
  v4[171] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OwnedBeaconRecord();
  v4[172] = v9;
  v4[173] = *(void *)(v9 - 8);
  v4[174] = swift_task_alloc();
  v4[175] = swift_task_alloc();
  v4[176] = swift_task_alloc();
  sub_10000588C(&qword_10164DBB0);
  v4[177] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v4[178] = v10;
  v4[179] = *(void *)(v10 - 8);
  v4[180] = swift_task_alloc();
  v4[181] = swift_task_alloc();
  v4[182] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v4[183] = swift_task_alloc();
  v4[184] = swift_task_alloc();
  v4[185] = swift_task_alloc();
  v4[186] = swift_task_alloc();
  v4[187] = swift_task_alloc();
  v4[188] = sub_10000588C(&qword_10163BB30);
  v4[189] = swift_task_alloc();
  v4[190] = swift_task_alloc();
  v4[191] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v4[192] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v4[193] = v12;
  v4[194] = *(void *)(v12 + 64);
  v4[195] = swift_task_alloc();
  v4[196] = swift_task_alloc();
  v4[197] = swift_task_alloc();
  v4[198] = swift_task_alloc();
  v4[199] = swift_task_alloc();
  v4[200] = swift_task_alloc();
  v4[201] = swift_task_alloc();
  v4[202] = swift_task_alloc();
  v4[203] = swift_task_alloc();
  v4[204] = swift_task_alloc();
  v4[205] = swift_task_alloc();
  v4[206] = sub_10000588C(&qword_10163B9E0);
  v4[207] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for BeaconNamingRecord();
  v4[208] = v13;
  v4[209] = *(void *)(v13 - 8);
  v4[210] = swift_task_alloc();
  return _swift_task_switch(sub_1009B3918, v3, 0);
}

uint64_t sub_1009B3918()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 384, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 408))
  {
    sub_10001CEB0((long long *)(v0 + 384), v0 + 304);
    sub_10001CD44((void *)(v0 + 304), *(void *)(v0 + 328));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639108 + dword_101639108);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1688) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1009B3A54;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1009B3A54(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 1696) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B3B6C, v2, 0);
}

uint64_t sub_1009B3B6C()
{
  uint64_t v1 = *(void *)(v0 + 992);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 304);
  if ((v1 & 0x280) != 0)
  {
    uint64_t v2 = *(void *)(v0 + 984);
    uint64_t v3 = *(void **)(v0 + 976);
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10001CD44(v3, v4);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v4);
    uint64_t v6 = sub_1009B40AC;
    goto LABEL_5;
  }
  *(unsigned char *)(v0 + 2690) = 0;
  *(_WORD *)(v0 + 2688) = 0;
  *(_OWORD *)(v0 + 2016) = 0u;
  *(_OWORD *)(v0 + 2032) = 0u;
  *(_OWORD *)(v0 + 2048) = 0u;
  *(_OWORD *)(v0 + 2064) = 0u;
  if ((*(_WORD *)(v0 + 992) & 0x203) != 0)
  {
    uint64_t v2 = *(void *)(v0 + 984);
    uint64_t v7 = *(void **)(v0 + 976);
    uint64_t v8 = v7[3];
    uint64_t v9 = v7[4];
    sub_10001CD44(v7, v8);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v9 + 8) + 8) + 32))(v8);
    uint64_t v6 = sub_1009BA64C;
    goto LABEL_5;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v10 = *(void *)(v0 + 992);
  if ((v10 & 2) != 0
    && (uint64_t v11 = *(void *)(v0 + 1152),
        uint64_t v12 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v11, 1, v12)))
  {
    uint64_t v13 = *(void *)(v11 + *(int *)(v12 + 32));
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *(void *)(v0 + 2168) = v14;
  *(void *)(v0 + 2160) = v13;
  if ((v10 & 0x204) != 0)
  {
    uint64_t v15 = *(void **)(v0 + 976);
    uint64_t v16 = v15[3];
    uint64_t v17 = v15[4];
    sub_10001CD44(v15, v16);
    uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
    BOOL v19 = (v10 & 0x208) == 0;
    uint64_t v10 = *(void *)(v0 + 992);
    if (v19)
    {
      uint64_t v20 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
    if ((v10 & 8) == 0) {
      goto LABEL_18;
    }
  }
  *(void *)(v0 + 2176) = v18;
  uint64_t v21 = *(void **)(v0 + 976);
  uint64_t v22 = v21[3];
  uint64_t v23 = v21[4];
  sub_10001CD44(v21, v22);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
  *(void *)(v0 + 2184) = v24;
  if ((v10 & 0x200) != 0)
  {
    id v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 2192) = v35;
    *id v35 = v0;
    v35[1] = sub_1009BB590;
    return sub_100E62338();
  }
  uint64_t v20 = v24;
  uint64_t v10 = *(void *)(v0 + 992);
LABEL_18:
  unint64_t v25 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v10 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v18;
    *(void *)(v0 + 2272) = v20;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v25;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v30 = *(void **)(v0 + 976);
    uint64_t v31 = v30[3];
    uint64_t v32 = v30[4];
    sub_10001CD44(v30, v31);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v32 + 8) + 8) + 32))(v31);
    char v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v33;
    *char v33 = v0;
    v33[1] = sub_1009BC100;
    uint64_t v34 = *(void *)(v0 + 1640);
    return sub_100E624E4(v34);
  }
  else
  {
    uint64_t v26 = *(void *)(v0 + 992);
    if ((v26 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v18;
      *(void *)(v0 + 2384) = v20;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v25;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v2 = *(void *)(v0 + 984);
      if ((v26 & 0x240) != 0)
      {
        uint64_t v27 = *(void **)(v0 + 976);
        uint64_t v28 = v27[3];
        uint64_t v29 = v27[4];
        sub_10001CD44(v27, v28);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v29 + 8) + 8) + 32))(v28);
        uint64_t v6 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v2;
        uint64_t v39 = *(void **)(v0 + 976);
        uint64_t v40 = v39[3];
        uint64_t v41 = v39[4];
        sub_10001CD44(v39, v40);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v41 + 8) + 8) + 32))(v40);
        uint64_t v6 = sub_1009BCDA4;
      }
LABEL_5:
      return _swift_task_switch(v6, v2, 0);
    }
    *(void *)(v0 + 2336) = v18;
    *(void *)(v0 + 2328) = v20;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v25;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_1009BC4B4;
    uint64_t v37 = *(void *)(v0 + 1088);
    uint64_t v38 = *(void *)(v0 + 976);
    return sub_1009B2848(v37, v38);
  }
}

uint64_t sub_1009B40AC()
{
  uint64_t v1 = *(void *)(v0 + 1640);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 984);
  *(void *)(v0 + 1704) = *(void *)(v5 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 1712) = v6;
  *(void *)(v0 + 1720) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v4);
  int v7 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 2664) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 1728) = v9;
  *(void *)(v9 + 16) = v5;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 1736) = v10;
  *(void *)(v0 + 1744) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1009B41D0, 0, 0);
}

uint64_t sub_1009B41D0()
{
  uint64_t v1 = v0[216];
  uint64_t v2 = v0[213];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[219] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5FBC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[220] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009B42DC;
  uint64_t v5 = v0[207];
  uint64_t v6 = v0[206];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100090CE8, v3, v6);
}

uint64_t sub_1009B42DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 1640);
  uint64_t v3 = *(void *)(*v0 + 1544);
  uint64_t v4 = *(void *)(*v0 + 1536);
  uint64_t v5 = *(void *)(*v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 1768) = v6;
  *(void *)(v1 + 1776) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v2, v4);
  return _swift_task_switch(sub_1009B44A0, v5, 0);
}

uint64_t sub_1009B44A0()
{
  uint64_t v1 = *(void *)(v0 + 1664);
  uint64_t v2 = *(void *)(v0 + 1656);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1672) + 48))(v2, 1, v1) == 1)
  {
    sub_10001DAB4(v2, &qword_10163B9E0);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 1784) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1009B4CAC;
    return sub_100E57788();
  }
  uint64_t v5 = *(void *)(v0 + 1680);
  uint64_t v6 = *(void **)(v0 + 976);
  sub_1009C715C(v2, v5, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  sub_10001CD44(v6, v7);
  uint64_t v9 = *(void *)(v5 + *(int *)(v1 + 28));
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 200))(v9, v7, v8);
  uint64_t v11 = (void *)v10;
  uint64_t v12 = *(void *)(v0 + 1680);
  uint64_t v13 = *(void *)(v0 + 1664);
  if (v9 == SPBeaconRoleIdOther && *(void *)(v12 + *(int *)(v13 + 36) + 8) && v10)
  {
    swift_bridgeObjectRetain();
    id v14 = [v11 role];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v15 = objc_allocWithZone((Class)SPBeaconRole);
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v17 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v18 = [v15 initWithRoleId:v9 role:v16 roleEmoji:v17];

    uint64_t v12 = *(void *)(v0 + 1680);
    uint64_t v13 = *(void *)(v0 + 1664);
    uint64_t v11 = v18;
  }
  BOOL v19 = (uint64_t *)(v12 + *(int *)(v13 + 32));
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  swift_bridgeObjectRetain();
  sub_1009C71C8(v12, (uint64_t (*)(void))type metadata accessor for BeaconNamingRecord);
  *(void *)(v0 + 1840) = v20;
  *(void *)(v0 + 1832) = v21;
  *(void *)(v0 + 1824) = v11;
  *(void *)(v0 + 1816) = 0;
  uint64_t v22 = *(void *)(v0 + 992);
  if ((v22 & 0x200) != 0)
  {
    uint64_t v28 = *(void *)(v0 + 1528);
    uint64_t v29 = *(void **)(v0 + 976);
    uint64_t v30 = *(int *)(*(void *)(v0 + 1504) + 48);
    *(_DWORD *)(v0 + 2668) = v30;
    uint64_t v31 = v28 + v30;
    uint64_t v32 = v29[3];
    uint64_t v33 = v29[4];
    sub_10001CD44(v29, v32);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v33 + 8) + 8) + 32))(v32);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 1848) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1009B5E44;
    uint64_t v35 = *(void *)(v0 + 1640);
    return sub_100E61454(v31, v35, 1);
  }
  *(void *)(v0 + 2072) = v20;
  *(void *)(v0 + 2064) = v21;
  *(void *)(v0 + 2056) = v11;
  *(unsigned char *)(v0 + 2690) = 0;
  *(_WORD *)(v0 + 2688) = 0;
  *(_OWORD *)(v0 + 2016) = 0u;
  *(_OWORD *)(v0 + 2032) = 0u;
  *(void *)(v0 + 2048) = 0;
  if ((v22 & 0x203) != 0)
  {
    uint64_t v23 = *(void *)(v0 + 984);
    uint64_t v24 = *(void **)(v0 + 976);
    uint64_t v25 = v24[3];
    uint64_t v26 = v24[4];
    sub_10001CD44(v24, v25);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v25);
    uint64_t v27 = sub_1009BA64C;
LABEL_12:
    return _swift_task_switch(v27, v23, 0);
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v36 = *(void *)(v0 + 992);
  if ((v36 & 2) != 0
    && (uint64_t v37 = *(void *)(v0 + 1152),
        uint64_t v38 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v37, 1, v38)))
  {
    uint64_t v39 = *(void *)(v37 + *(int *)(v38 + 32));
    uint64_t v40 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  *(void *)(v0 + 2168) = v40;
  *(void *)(v0 + 2160) = v39;
  if ((v36 & 0x204) != 0)
  {
    uint64_t v41 = *(void **)(v0 + 976);
    uint64_t v42 = v41[3];
    uint64_t v43 = v41[4];
    sub_10001CD44(v41, v42);
    uint64_t v44 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 48))(v42, v43);
    BOOL v45 = (v36 & 0x208) == 0;
    uint64_t v36 = *(void *)(v0 + 992);
    if (!v45) {
      goto LABEL_26;
    }
    uint64_t v46 = 0;
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v46 = 0;
    if ((v36 & 8) != 0)
    {
LABEL_26:
      *(void *)(v0 + 2176) = v44;
      uint64_t v47 = *(void **)(v0 + 976);
      uint64_t v48 = v47[3];
      uint64_t v49 = v47[4];
      sub_10001CD44(v47, v48);
      uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 56))(v48, v49);
      *(void *)(v0 + 2184) = v50;
      if ((v36 & 0x200) != 0)
      {
        uint64_t v61 = (void *)swift_task_alloc();
        *(void *)(v0 + 2192) = v61;
        *uint64_t v61 = v0;
        v61[1] = sub_1009BB590;
        return sub_100E62338();
      }
      uint64_t v46 = v50;
      uint64_t v36 = *(void *)(v0 + 992);
    }
  }
  unint64_t v51 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v36 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v44;
    *(void *)(v0 + 2272) = v46;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v51;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v56 = *(void **)(v0 + 976);
    uint64_t v57 = v56[3];
    uint64_t v58 = v56[4];
    sub_10001CD44(v56, v57);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v58 + 8) + 8) + 32))(v57);
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_1009BC100;
    uint64_t v60 = *(void *)(v0 + 1640);
    return sub_100E624E4(v60);
  }
  else
  {
    uint64_t v52 = *(void *)(v0 + 992);
    if ((v52 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v44;
      *(void *)(v0 + 2384) = v46;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v51;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v23 = *(void *)(v0 + 984);
      if ((v52 & 0x240) != 0)
      {
        uint64_t v53 = *(void **)(v0 + 976);
        uint64_t v54 = v53[3];
        uint64_t v55 = v53[4];
        sub_10001CD44(v53, v54);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v55 + 8) + 8) + 32))(v54);
        uint64_t v27 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v23;
        uint64_t v65 = *(void **)(v0 + 976);
        uint64_t v66 = v65[3];
        uint64_t v67 = v65[4];
        sub_10001CD44(v65, v66);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v67 + 8) + 8) + 32))(v66);
        uint64_t v27 = sub_1009BCDA4;
      }
      goto LABEL_12;
    }
    *(void *)(v0 + 2336) = v44;
    *(void *)(v0 + 2328) = v46;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v51;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v62;
    *uint64_t v62 = v0;
    v62[1] = sub_1009BC4B4;
    uint64_t v63 = *(void *)(v0 + 1088);
    uint64_t v64 = *(void *)(v0 + 976);
    return sub_1009B2848(v63, v64);
  }
}

uint64_t sub_1009B4CAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 1792) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B4DC4, v2, 0);
}

uint64_t sub_1009B4DC4()
{
  uint64_t v1 = *(void **)(v0 + 976);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10001CD44(v1, v2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 8) + 8) + 32))(v2);
  uid_t v4 = getuid();
  sub_100DC5FC0(v4);
  return _swift_task_switch(sub_1009B4E78, 0, 0);
}

uint64_t sub_1009B4E78()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[225] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1009B4F2C;
  uint64_t v2 = v0[203];
  uint64_t v3 = v0[202];
  return sub_10064B6F4((uint64_t)(v0 + 29), v2, v3);
}

uint64_t sub_1009B4F2C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1808) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1009B57D4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[221];
    uint64_t v6 = v2[203];
    uint64_t v7 = v2[202];
    uint64_t v8 = v2[192];
    uint64_t v9 = v2[125];
    swift_release();
    v5(v7, v8);
    v5(v6, v8);
    uint64_t v3 = sub_1009B5090;
    uint64_t v4 = v9;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1009B5090()
{
  sub_10001D608(v0 + 232, v0 + 16, &qword_10163A110);
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 976);
    uint64_t v3 = *(void *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 32);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = v2[3];
    uint64_t v7 = v2[4];
    sub_10001CD44(v2, v6);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 200))(v4, v6, v7);
    uint64_t v9 = (void *)v8;
    BOOL v10 = v4 != SPBeaconRoleIdOther || v5 == 0;
    if (!v10 && v8 != 0)
    {
      swift_bridgeObjectRetain();
      id v12 = [v9 role];
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      id v13 = objc_allocWithZone((Class)SPBeaconRole);
      NSString v14 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v16 = [v13 initWithRoleId:v4 role:v14 roleEmoji:v15];

      uint64_t v9 = v16;
    }
    swift_bridgeObjectRetain();
    sub_100090C20((uint64_t *)(v0 + 232));
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v3 = 0;
  }
  uint64_t v17 = *(void *)(v0 + 1808);
  *(void *)(v0 + 1840) = v1;
  *(void *)(v0 + 1832) = v3;
  *(void *)(v0 + 1824) = v9;
  *(void *)(v0 + 1816) = v17;
  uint64_t v18 = *(void *)(v0 + 992);
  if ((v18 & 0x200) != 0)
  {
    uint64_t v24 = *(void *)(v0 + 1528);
    uint64_t v25 = *(void **)(v0 + 976);
    uint64_t v26 = *(int *)(*(void *)(v0 + 1504) + 48);
    *(_DWORD *)(v0 + 2668) = v26;
    uint64_t v27 = v24 + v26;
    uint64_t v28 = v25[3];
    uint64_t v29 = v25[4];
    sub_10001CD44(v25, v28);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v29 + 8) + 8) + 32))(v28);
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 1848) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_1009B5E44;
    uint64_t v31 = *(void *)(v0 + 1640);
    return sub_100E61454(v27, v31, 1);
  }
  *(void *)(v0 + 2072) = v1;
  *(void *)(v0 + 2064) = v3;
  *(void *)(v0 + 2056) = v9;
  *(unsigned char *)(v0 + 2690) = 0;
  *(_WORD *)(v0 + 2688) = 0;
  *(_OWORD *)(v0 + 2024) = 0u;
  *(_OWORD *)(v0 + 2040) = 0u;
  *(void *)(v0 + 2016) = v17;
  if ((v18 & 0x203) != 0)
  {
    uint64_t v19 = *(void *)(v0 + 984);
    uint64_t v20 = *(void **)(v0 + 976);
    uint64_t v21 = v20[3];
    uint64_t v22 = v20[4];
    sub_10001CD44(v20, v21);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v22 + 8) + 8) + 32))(v21);
    uint64_t v23 = sub_1009BA64C;
    goto LABEL_15;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v32 = *(void *)(v0 + 992);
  if ((v32 & 2) != 0
    && (uint64_t v33 = *(void *)(v0 + 1152),
        uint64_t v34 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v33, 1, v34)))
  {
    uint64_t v35 = *(void *)(v33 + *(int *)(v34 + 32));
    uint64_t v36 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v36 = 0;
  }
  *(void *)(v0 + 2168) = v36;
  *(void *)(v0 + 2160) = v35;
  if ((v32 & 0x204) != 0)
  {
    uint64_t v37 = *(void **)(v0 + 976);
    uint64_t v38 = v37[3];
    uint64_t v39 = v37[4];
    sub_10001CD44(v37, v38);
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 48))(v38, v39);
    BOOL v10 = (v32 & 0x208) == 0;
    uint64_t v32 = *(void *)(v0 + 992);
    if (!v10) {
      goto LABEL_29;
    }
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    if ((v32 & 8) != 0)
    {
LABEL_29:
      *(void *)(v0 + 2176) = v40;
      uint64_t v42 = *(void **)(v0 + 976);
      uint64_t v43 = v42[3];
      uint64_t v44 = v42[4];
      sub_10001CD44(v42, v43);
      uint64_t v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 56))(v43, v44);
      *(void *)(v0 + 2184) = v45;
      if ((v32 & 0x200) != 0)
      {
        uint64_t v56 = (void *)swift_task_alloc();
        *(void *)(v0 + 2192) = v56;
        *uint64_t v56 = v0;
        v56[1] = sub_1009BB590;
        return sub_100E62338();
      }
      uint64_t v41 = v45;
      uint64_t v32 = *(void *)(v0 + 992);
    }
  }
  unint64_t v46 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v32 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v40;
    *(void *)(v0 + 2272) = v41;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v46;
    *(unsigned char *)(v0 + 2691) = 0;
    unint64_t v51 = *(void **)(v0 + 976);
    uint64_t v52 = v51[3];
    uint64_t v53 = v51[4];
    sub_10001CD44(v51, v52);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v53 + 8) + 8) + 32))(v52);
    uint64_t v54 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v54;
    *uint64_t v54 = v0;
    v54[1] = sub_1009BC100;
    uint64_t v55 = *(void *)(v0 + 1640);
    return sub_100E624E4(v55);
  }
  else
  {
    uint64_t v47 = *(void *)(v0 + 992);
    if ((v47 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v40;
      *(void *)(v0 + 2384) = v41;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v46;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v19 = *(void *)(v0 + 984);
      if ((v47 & 0x240) != 0)
      {
        uint64_t v48 = *(void **)(v0 + 976);
        uint64_t v49 = v48[3];
        uint64_t v50 = v48[4];
        sub_10001CD44(v48, v49);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v50 + 8) + 8) + 32))(v49);
        uint64_t v23 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v19;
        uint64_t v60 = *(void **)(v0 + 976);
        uint64_t v61 = v60[3];
        uint64_t v62 = v60[4];
        sub_10001CD44(v60, v61);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v62 + 8) + 8) + 32))(v61);
        uint64_t v23 = sub_1009BCDA4;
      }
LABEL_15:
      return _swift_task_switch(v23, v19, 0);
    }
    *(void *)(v0 + 2336) = v40;
    *(void *)(v0 + 2328) = v41;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v46;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v57;
    *uint64_t v57 = v0;
    v57[1] = sub_1009BC4B4;
    uint64_t v58 = *(void *)(v0 + 1088);
    uint64_t v59 = *(void *)(v0 + 976);
    return sub_1009B2848(v58, v59);
  }
}

uint64_t sub_1009B57D4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[221];
  uint64_t v2 = v0[203];
  uint64_t v3 = v0[202];
  uint64_t v4 = v0[192];
  uint64_t v5 = v0[125];
  swift_release();
  swift_errorRelease();
  v1(v3, v4);
  v1(v2, v4);
  return _swift_task_switch(sub_1009B5890, v5, 0);
}

uint64_t sub_1009B5890()
{
  *(_OWORD *)(v0 + 1816) = 0u;
  *(_OWORD *)(v0 + 1832) = 0u;
  uint64_t v1 = *(void *)(v0 + 992);
  if ((v1 & 0x200) != 0)
  {
    uint64_t v7 = *(void *)(v0 + 1528);
    uint64_t v8 = *(void **)(v0 + 976);
    uint64_t v9 = *(int *)(*(void *)(v0 + 1504) + 48);
    *(_DWORD *)(v0 + 2668) = v9;
    uint64_t v10 = v7 + v9;
    uint64_t v11 = v8[3];
    uint64_t v12 = v8[4];
    sub_10001CD44(v8, v11);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v12 + 8) + 8) + 32))(v11);
    id v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 1848) = v13;
    *id v13 = v0;
    v13[1] = sub_1009B5E44;
    uint64_t v14 = *(void *)(v0 + 1640);
    return sub_100E61454(v10, v14, 1);
  }
  *(unsigned char *)(v0 + 2690) = 0;
  *(_WORD *)(v0 + 2688) = 0;
  *(_OWORD *)(v0 + 2016) = 0uLL;
  *(_OWORD *)(v0 + 2032) = 0uLL;
  *(_OWORD *)(v0 + 2048) = 0uLL;
  *(_OWORD *)(v0 + 2064) = 0uLL;
  if ((v1 & 0x203) != 0)
  {
    uint64_t v2 = *(void *)(v0 + 984);
    uint64_t v3 = *(void **)(v0 + 976);
    uint64_t v4 = v3[3];
    uint64_t v5 = v3[4];
    sub_10001CD44(v3, v4);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v5 + 8) + 8) + 32))(v4);
    uint64_t v6 = sub_1009BA64C;
    goto LABEL_4;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v15 = *(void *)(v0 + 992);
  if ((v15 & 2) != 0
    && (uint64_t v16 = *(void *)(v0 + 1152),
        uint64_t v17 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v16, 1, v17)))
  {
    uint64_t v18 = *(void *)(v16 + *(int *)(v17 + 32));
    uint64_t v19 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  *(void *)(v0 + 2168) = v19;
  *(void *)(v0 + 2160) = v18;
  if ((v15 & 0x204) != 0)
  {
    uint64_t v20 = *(void **)(v0 + 976);
    uint64_t v21 = v20[3];
    uint64_t v22 = v20[4];
    sub_10001CD44(v20, v21);
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 48))(v21, v22);
    BOOL v24 = (v15 & 0x208) == 0;
    uint64_t v15 = *(void *)(v0 + 992);
    if (!v24) {
      goto LABEL_18;
    }
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0;
    if ((v15 & 8) != 0)
    {
LABEL_18:
      *(void *)(v0 + 2176) = v23;
      uint64_t v26 = *(void **)(v0 + 976);
      uint64_t v27 = v26[3];
      uint64_t v28 = v26[4];
      sub_10001CD44(v26, v27);
      uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 56))(v27, v28);
      *(void *)(v0 + 2184) = v29;
      if ((v15 & 0x200) != 0)
      {
        uint64_t v40 = (void *)swift_task_alloc();
        *(void *)(v0 + 2192) = v40;
        void *v40 = v0;
        v40[1] = sub_1009BB590;
        return sub_100E62338();
      }
      uint64_t v25 = v29;
      uint64_t v15 = *(void *)(v0 + 992);
    }
  }
  unint64_t v30 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v15 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v23;
    *(void *)(v0 + 2272) = v25;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v30;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v35 = *(void **)(v0 + 976);
    uint64_t v36 = v35[3];
    uint64_t v37 = v35[4];
    sub_10001CD44(v35, v36);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v37 + 8) + 8) + 32))(v36);
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_1009BC100;
    uint64_t v39 = *(void *)(v0 + 1640);
    return sub_100E624E4(v39);
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 992);
    if ((v31 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v23;
      *(void *)(v0 + 2384) = v25;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v30;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v2 = *(void *)(v0 + 984);
      if ((v31 & 0x240) != 0)
      {
        uint64_t v32 = *(void **)(v0 + 976);
        uint64_t v33 = v32[3];
        uint64_t v34 = v32[4];
        sub_10001CD44(v32, v33);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v34 + 8) + 8) + 32))(v33);
        uint64_t v6 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v2;
        uint64_t v44 = *(void **)(v0 + 976);
        uint64_t v45 = v44[3];
        uint64_t v46 = v44[4];
        sub_10001CD44(v44, v45);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v46 + 8) + 8) + 32))(v45);
        uint64_t v6 = sub_1009BCDA4;
      }
LABEL_4:
      return _swift_task_switch(v6, v2, 0);
    }
    *(void *)(v0 + 2336) = v23;
    *(void *)(v0 + 2328) = v25;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v30;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_1009BC4B4;
    uint64_t v42 = *(void *)(v0 + 1088);
    uint64_t v43 = *(void *)(v0 + 976);
    return sub_1009B2848(v42, v43);
  }
}

uint64_t sub_1009B5E44(char a1)
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1768);
  uint64_t v3 = *(void *)(*(void *)v1 + 1640);
  uint64_t v4 = *(void *)(*(void *)v1 + 1536);
  uint64_t v5 = *(void *)(*(void *)v1 + 1000);
  *(unsigned char *)(*(void *)v1 + 2685) = a1;
  swift_task_dealloc();
  v2(v3, v4);
  return _swift_task_switch(sub_1009B5FC8, v5, 0);
}

uint64_t sub_1009B5FC8()
{
  char v1 = *(unsigned char *)(v0 + 2685);
  uint64_t v2 = *(unsigned char **)(v0 + 1528);
  uint64_t v3 = *(unsigned char **)(v0 + 1520);
  uint64_t v4 = *(unsigned char **)(v0 + 1512);
  uint64_t v5 = *(void *)(v0 + 1504);
  uint64_t v6 = *(void *)(v0 + 1496);
  uint64_t v7 = *(void *)(v0 + 1432);
  uint64_t v8 = *(void *)(v0 + 1424);
  uint64_t v9 = (uint64_t)&v2[*(int *)(v0 + 2668)];
  *uint64_t v2 = v1;
  uint64_t v10 = (uint64_t)&v3[*(int *)(v5 + 48)];
  *uint64_t v3 = v1;
  sub_10001D074(v9, v10, (uint64_t *)&unk_10163AC90);
  sub_10001DAB4(v10, (uint64_t *)&unk_10163AC90);
  uint64_t v11 = (uint64_t)&v4[*(int *)(v5 + 48)];
  *uint64_t v4 = v1;
  sub_10001D074(v9, v11, (uint64_t *)&unk_10163AC90);
  sub_10001D608(v11, v6, (uint64_t *)&unk_10163AC90);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  *(void *)(v0 + 1856) = v12;
  *(void *)(v0 + 1864) = (v7 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  int v13 = v12(v6, 1, v8);
  uint64_t v14 = *(void *)(v0 + 1496);
  if (v13 == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 1496), (uint64_t *)&unk_10163AC90);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 1456);
    uint64_t v16 = *(void *)(v0 + 1432);
    uint64_t v17 = *(void *)(v0 + 1424);
    static Date.trustedNow.getter(v15);
    Date.timeIntervalSince(_:)();
    double v19 = v18;
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v20(v15, v17);
    v20(v14, v17);
    if (v19 > 0.0)
    {
      uint64_t v69 = (long long *)(v0 + 344);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 1768);
      uint64_t v22 = *(void *)(v0 + 1608);
      uint64_t v23 = *(void *)(v0 + 1536);
      uint64_t v24 = *(void *)(v0 + 1000);
      uint64_t v25 = *(void **)(v0 + 976);
      uint64_t v27 = v25[3];
      uint64_t v26 = v25[4];
      sub_10001CD44(v25, v27);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v27);
      uint64_t v28 = (uint64_t *)(v24 + 200);
      swift_beginAccess();
      uint64_t v29 = *(void *)(v24 + 200);
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_1000F7950(v22, v29);
      swift_bridgeObjectRelease();
      v21(v22, v23);
      if (v30)
      {
        sub_10000588C(&qword_101638D40);
        Task.cancel()();
        swift_release();
      }
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1768);
      uint64_t v31 = *(void *)(v0 + 1640);
      uint64_t v67 = *(void *)(v0 + 1536);
      uint64_t v32 = *(void *)(v0 + 1416);
      uint64_t v33 = *(void *)(v0 + 984);
      uint64_t v34 = *(void **)(v0 + 976);
      uint64_t v36 = v34[3];
      uint64_t v35 = v34[4];
      sub_10001CD44(v34, v36);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v35 + 8) + 8) + 32))(v36);
      uint64_t v37 = type metadata accessor for TaskPriority();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 1, 1, v37);
      uint64_t v38 = swift_allocObject();
      swift_weakInit();
      sub_10001D010((uint64_t)v34, (uint64_t)v69);
      uint64_t v39 = swift_allocObject();
      *(void *)(v39 + 16) = 0;
      *(void *)(v39 + 24) = 0;
      *(double *)(v39 + 32) = v19;
      *(void *)(v39 + 40) = v38;
      sub_10001CEB0(v69, v39 + 48);
      *(void *)(v39 + 88) = v33;
      swift_retain();
      uint64_t v40 = sub_100885EBC(v32, (uint64_t)&unk_101653DA0, v39);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v70 = *v28;
      *uint64_t v28 = 0x8000000000000000;
      sub_1001706FC(v40, v31, isUniquelyReferenced_nonNull_native);
      *uint64_t v28 = v70;
      swift_bridgeObjectRelease();
      v68(v31, v67);
      swift_endAccess();
    }
  }
  uint64_t v42 = *(void *)(v0 + 1384);
  uint64_t v43 = *(void *)(v0 + 976);
  sub_10001DAB4(*(void *)(v0 + 1528), &qword_10163BB30);
  sub_10001D010(v43, v0 + 464);
  sub_10000588C((uint64_t *)&unk_10164DBF0);
  int v44 = swift_dynamicCast();
  uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v42 + 56);
  uint64_t v46 = *(void **)(v0 + 976);
  if (v44)
  {
    uint64_t v47 = *(void *)(v0 + 1408);
    uint64_t v48 = *(void *)(v0 + 1368);
    uint64_t v49 = *(void *)(v0 + 984);
    v45(v48, 0, 1, *(void *)(v0 + 1376));
    sub_1009C715C(v48, v47, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v50 = v46[3];
    uint64_t v51 = v46[4];
    sub_10001CD44(v46, v50);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v51 + 8) + 8) + 32))(v50);
    uint64_t v52 = sub_1009B6694;
    uint64_t v53 = v49;
LABEL_14:
    return _swift_task_switch(v52, v53, 0);
  }
  uint64_t v54 = *(void *)(v0 + 1368);
  uint64_t v55 = *(void *)(v0 + 1224);
  v45(v54, 1, 1, *(void *)(v0 + 1376));
  sub_10001DAB4(v54, &qword_10163B9F0);
  sub_10001D010((uint64_t)v46, v0 + 424);
  int v56 = swift_dynamicCast();
  uint64_t v57 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v58 = *(void *)(v0 + 1216);
  uint64_t v59 = *(void *)(v0 + 1208);
  if (!v56)
  {
    uint64_t v63 = *(void *)(v0 + 984);
    uint64_t v64 = *(void **)(v0 + 976);
    v57(*(void *)(v0 + 1208), 1, 1, v58);
    sub_10001DAB4(v59, (uint64_t *)&unk_101653D50);
    uint64_t v66 = v64[3];
    uint64_t v65 = v64[4];
    sub_10001CD44(v64, v66);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v65 + 8) + 8) + 32))(v66);
    uint64_t v52 = sub_1009B9BB0;
    uint64_t v53 = v63;
    goto LABEL_14;
  }
  uint64_t v60 = *(void *)(v0 + 1288);
  v57(*(void *)(v0 + 1208), 0, 1, v58);
  sub_1009C715C(v59, v60, type metadata accessor for SharedBeaconRecord);
  uint64_t v61 = (void *)swift_task_alloc();
  *(void *)(v0 + 1960) = v61;
  *uint64_t v61 = v0;
  v61[1] = sub_1009B7D0C;
  return sub_100E57788();
}

uint64_t sub_1009B6694()
{
  char v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1736);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1536);
  uint64_t v4 = *(void *)(v0 + 984);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 2664) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2664);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1712))(v2, *(void *)(v0 + 1640), v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 1872) = v6;
  *(void *)(v6 + 16) = v4;
  v1(v6 + v5, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1009B6788, 0, 0);
}

uint64_t sub_1009B6788()
{
  uint64_t v1 = v0[234];
  uint64_t v2 = v0[213];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[235] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5FD8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[236] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009B6894;
  uint64_t v5 = v0[170];
  uint64_t v6 = v0[168];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C7784, v3, v6);
}

uint64_t sub_1009B6894()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 1768);
  uint64_t v2 = *(void *)(*(void *)v0 + 1640);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1(v2, v3);
  return _swift_task_switch(sub_1009B6A50, v4, 0);
}

void sub_1009B6A50()
{
  uint64_t v1 = *(uint64_t **)(v0 + 1360);
  uint64_t v2 = (int *)type metadata accessor for LostModeRecord();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(*((void *)v2 - 1) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4((uint64_t)v1, &qword_10163BB70);
    id v3 = 0;
    uint64_t v4 = *(void *)(v0 + 1816);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 1816);
    uint64_t v6 = *(void *)(v0 + 1488);
    uint64_t v7 = (uint64_t *)((char *)v1 + v2[9]);
    uint64_t v8 = v7[1];
    uint64_t v76 = *v7;
    uint64_t v9 = v2[8];
    uint64_t v10 = (uint64_t *)((char *)v1 + v2[7]);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v14 = *(uint64_t *)((char *)v1 + v9);
    uint64_t v13 = *(uint64_t *)((char *)v1 + v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100B23648(v1, v6);
    if (v5)
    {
      return;
    }
    uint64_t v16 = *(void *)(v0 + 1488);
    uint64_t v17 = *(void *)(v0 + 1432);
    uint64_t v18 = *(void *)(v0 + 1424);
    uint64_t v74 = *(void *)(v0 + 1360);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v18);
    id v19 = objc_allocWithZone((Class)SPLostModeInfo);
    id v3 = sub_100B23CB8(v76, v8, v12, v11, v14, v13, v16);
    sub_1009C71C8(v74, (uint64_t (*)(void))type metadata accessor for LostModeRecord);
    uint64_t v4 = 0;
  }
  uint64_t v75 = v4;
  id v77 = v3;
  *(void *)(v0 + 1904) = v3;
  *(void *)(v0 + 1896) = v4;
  if (qword_1016370B8 != -1) {
    swift_once();
  }
  uint64_t v20 = *(void *)(v0 + 1544);
  uint64_t v21 = *(void *)(v0 + 1536);
  uint64_t v22 = *(void *)(v0 + 1408);
  uint64_t v23 = *(int **)(v0 + 1376);
  uint64_t v24 = *(void *)(v0 + 1336);
  uint64_t v25 = (void *)qword_10170ECD8;
  *(void *)(v0 + 1912) = qword_10170ECD8;
  char v26 = *(unsigned char *)(v22 + v23[20]);
  *(unsigned char *)(v0 + 2686) = v26;
  uint64_t v27 = *(void *)(v22 + v23[16]);
  uint64_t v28 = *(void *)(v22 + v23[17]);
  id v73 = v25;
  BOOL v29 = sub_100DF1520(v27, v28);
  *(unsigned char *)(v0 + 2687) = v29;
  sub_10001D074(v22 + v23[7], v24, &qword_101638CF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v24, 1, v21) == 1)
  {
    uint64_t v30 = *(void *)(v0 + 1336);
    sub_1009C71C8(*(void *)(v0 + 1408), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_10001DAB4(v30, &qword_101638CF0);
  }
  else
  {
    (*(void (**)(void, void, void))(v0 + 1736))(*(void *)(v0 + 1600), *(void *)(v0 + 1336), *(void *)(v0 + 1536));
    *(void *)(v0 + 1920) = sub_100D1BE58();
    *(void *)(v0 + 1928) = v31;
    if (v31 >> 60 != 15)
    {
      uint64_t v40 = *(void *)(v0 + 984);
      uint64_t v39 = sub_1009B728C;
      goto LABEL_25;
    }
    uint64_t v32 = *(void *)(v0 + 1408);
    (*(void (**)(void, void))(v0 + 1768))(*(void *)(v0 + 1600), *(void *)(v0 + 1536));
    sub_1009C71C8(v32, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }
  char v33 = *(unsigned char *)(v0 + 2685);
  *(void *)(v0 + 2072) = *(void *)(v0 + 1840);
  *(_OWORD *)(v0 + 2056) = *(_OWORD *)(v0 + 1824);
  *(unsigned char *)(v0 + 2690) = v33;
  *(void *)(v0 + 2048) = v77;
  *(void *)(v0 + 2040) = v73;
  *(unsigned char *)(v0 + 2689) = v26;
  *(unsigned char *)(v0 + 2688) = v29;
  *(_OWORD *)(v0 + 2024) = 0u;
  *(void *)(v0 + 2016) = v75;
  if ((*(_WORD *)(v0 + 992) & 0x203) != 0)
  {
    uint64_t v34 = *(void *)(v0 + 984);
    uint64_t v35 = *(void **)(v0 + 976);
    uint64_t v36 = v35[3];
    uint64_t v37 = v35[4];
    sub_10001CD44(v35, v36);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v37 + 8) + 8) + 32))(v36);
    uint64_t v38 = sub_1009BA64C;
LABEL_16:
    uint64_t v39 = v38;
    uint64_t v40 = v34;
LABEL_25:
    _swift_task_switch(v39, v40, 0);
    return;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v41 = *(void *)(v0 + 992);
  if ((v41 & 2) != 0
    && (uint64_t v42 = *(void *)(v0 + 1152),
        uint64_t v43 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v42, 1, v43)))
  {
    uint64_t v44 = *(void *)(v42 + *(int *)(v43 + 32));
    uint64_t v45 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = 0;
    uint64_t v45 = 0;
  }
  *(void *)(v0 + 2168) = v45;
  *(void *)(v0 + 2160) = v44;
  if ((v41 & 0x204) != 0)
  {
    uint64_t v46 = *(void **)(v0 + 976);
    uint64_t v47 = v46[3];
    uint64_t v48 = v46[4];
    sub_10001CD44(v46, v47);
    uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 48))(v47, v48);
    BOOL v50 = (v41 & 0x208) == 0;
    uint64_t v41 = *(void *)(v0 + 992);
    if (!v50) {
      goto LABEL_29;
    }
    uint64_t v51 = 0;
  }
  else
  {
    uint64_t v49 = 0;
    uint64_t v51 = 0;
    if ((v41 & 8) != 0)
    {
LABEL_29:
      *(void *)(v0 + 2176) = v49;
      uint64_t v52 = *(void **)(v0 + 976);
      uint64_t v53 = v52[3];
      uint64_t v54 = v52[4];
      sub_10001CD44(v52, v53);
      uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 56))(v53, v54);
      *(void *)(v0 + 2184) = v55;
      if ((v41 & 0x200) != 0)
      {
        uint64_t v66 = (void *)swift_task_alloc();
        *(void *)(v0 + 2192) = v66;
        *uint64_t v66 = v0;
        v66[1] = sub_1009BB590;
        sub_100E62338();
        return;
      }
      uint64_t v51 = v55;
      uint64_t v41 = *(void *)(v0 + 992);
    }
  }
  unint64_t v56 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v41 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v49;
    *(void *)(v0 + 2272) = v51;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v56;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v61 = *(void **)(v0 + 976);
    uint64_t v62 = v61[3];
    uint64_t v63 = v61[4];
    sub_10001CD44(v61, v62);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v62);
    uint64_t v64 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v64;
    *uint64_t v64 = v0;
    v64[1] = sub_1009BC100;
    uint64_t v65 = *(void *)(v0 + 1640);
    sub_100E624E4(v65);
  }
  else
  {
    uint64_t v57 = *(void *)(v0 + 992);
    if ((v57 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v49;
      *(void *)(v0 + 2384) = v51;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v56;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v34 = *(void *)(v0 + 984);
      if ((v57 & 0x240) != 0)
      {
        uint64_t v58 = *(void **)(v0 + 976);
        uint64_t v59 = v58[3];
        uint64_t v60 = v58[4];
        sub_10001CD44(v58, v59);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v59);
        uint64_t v38 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v34;
        uint64_t v70 = *(void **)(v0 + 976);
        uint64_t v71 = v70[3];
        uint64_t v72 = v70[4];
        sub_10001CD44(v70, v71);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v72 + 8) + 8) + 32))(v71);
        uint64_t v38 = sub_1009BCDA4;
      }
      goto LABEL_16;
    }
    *(void *)(v0 + 2336) = v49;
    *(void *)(v0 + 2328) = v51;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v56;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v67 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v67;
    *uint64_t v67 = v0;
    v67[1] = sub_1009BC4B4;
    uint64_t v68 = *(void *)(v0 + 1088);
    uint64_t v69 = *(void *)(v0 + 976);
    sub_1009B2848(v68, v69);
  }
}

uint64_t sub_1009B728C()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1736);
  uint64_t v2 = *(void *)(v0 + 1640);
  uint64_t v3 = *(void *)(v0 + 1536);
  uint64_t v4 = *(void *)(v0 + 984);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 2664) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2664);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1712))(v2, *(void *)(v0 + 1600), v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 1936) = v6;
  *(void *)(v6 + 16) = v4;
  v1(v6 + v5, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1009B7380, 0, 0);
}

uint64_t sub_1009B7380()
{
  uint64_t v1 = v0[242];
  uint64_t v2 = v0[213];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[243] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C6238;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[244] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009B748C;
  uint64_t v5 = v0[163];
  uint64_t v6 = v0[162];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100061684, v3, v6);
}

uint64_t sub_1009B748C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B75DC, v1, 0);
}

uint64_t sub_1009B75DC()
{
  uint64_t v1 = *(void *)(v0 + 1304);
  uint64_t v2 = type metadata accessor for OwnedBeaconGroup(0);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  unint64_t v4 = *(void *)(v0 + 1928);
  uint64_t v5 = *(void *)(v0 + 1920);
  if (v3 == 1)
  {
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1768);
    uint64_t v7 = *(void *)(v0 + 1600);
    uint64_t v8 = *(void *)(v0 + 1536);
    uint64_t v9 = *(void *)(v0 + 1408);
    sub_100037A24(v5, v4);
    v6(v7, v8);
    sub_1009C71C8(v9, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v10 = &qword_10163BB20;
LABEL_5:
    sub_10001DAB4(v1, v10);
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    goto LABEL_7;
  }
  uint64_t v11 = *(void *)(v0 + 1312);
  sub_1004D1A54(v5, v4, v11);
  sub_1009C71C8(v1, type metadata accessor for OwnedBeaconGroup);
  uint64_t v12 = type metadata accessor for MACAddress();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  uint64_t v15 = *(void *)(v0 + 1920);
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1768);
  uint64_t v16 = *(void *)(v0 + 1600);
  uint64_t v17 = *(void *)(v0 + 1536);
  uint64_t v18 = *(void *)(v0 + 1408);
  uint64_t v1 = *(void *)(v0 + 1312);
  if (v14 == 1)
  {
    sub_100037A24(v15, *(void *)(v0 + 1928));
    v68(v16, v17);
    sub_1009C71C8(v18, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v10 = (uint64_t *)&unk_1016477E0;
    goto LABEL_5;
  }
  unint64_t v66 = *(void *)(v0 + 1928);
  uint64_t v67 = *(void *)(v0 + 1408);
  uint64_t v19 = MACAddress.bluetoothAddress.getter();
  uint64_t v20 = v21;
  sub_100037A24(v15, v66);
  v68(v16, v17);
  sub_1009C71C8(v67, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v12);
LABEL_7:
  char v22 = *(unsigned char *)(v0 + 2685);
  uint64_t v23 = *(void *)(v0 + 1904);
  uint64_t v24 = *(void *)(v0 + 1912);
  char v25 = *(unsigned char *)(v0 + 2686);
  char v26 = *(unsigned char *)(v0 + 2687);
  uint64_t v27 = *(void *)(v0 + 1896);
  *(void *)(v0 + 2072) = *(void *)(v0 + 1840);
  *(_OWORD *)(v0 + 2056) = *(_OWORD *)(v0 + 1824);
  *(unsigned char *)(v0 + 2690) = v22;
  *(void *)(v0 + 2048) = v23;
  *(void *)(v0 + 2040) = v24;
  *(unsigned char *)(v0 + 2689) = v25;
  *(unsigned char *)(v0 + 2688) = v26;
  *(void *)(v0 + 2032) = v20;
  *(void *)(v0 + 2024) = v19;
  *(void *)(v0 + 2016) = v27;
  if ((*(_WORD *)(v0 + 992) & 0x203) != 0)
  {
    uint64_t v28 = *(void *)(v0 + 984);
    BOOL v29 = *(void **)(v0 + 976);
    uint64_t v30 = v29[3];
    uint64_t v31 = v29[4];
    sub_10001CD44(v29, v30);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v31 + 8) + 8) + 32))(v30);
    uint64_t v32 = sub_1009BA64C;
    goto LABEL_9;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v33 = *(void *)(v0 + 992);
  if ((v33 & 2) != 0
    && (uint64_t v34 = *(void *)(v0 + 1152),
        uint64_t v35 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v34, 1, v35)))
  {
    uint64_t v36 = *(void *)(v34 + *(int *)(v35 + 32));
    uint64_t v37 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v37 = 0;
  }
  *(void *)(v0 + 2168) = v37;
  *(void *)(v0 + 2160) = v36;
  if ((v33 & 0x204) != 0)
  {
    uint64_t v38 = *(void **)(v0 + 976);
    uint64_t v39 = v38[3];
    uint64_t v40 = v38[4];
    sub_10001CD44(v38, v39);
    uint64_t v41 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 48))(v39, v40);
    BOOL v42 = (v33 & 0x208) == 0;
    uint64_t v33 = *(void *)(v0 + 992);
    if (v42)
    {
      uint64_t v43 = 0;
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v41 = 0;
    uint64_t v43 = 0;
    if ((v33 & 8) == 0) {
      goto LABEL_22;
    }
  }
  *(void *)(v0 + 2176) = v41;
  uint64_t v44 = *(void **)(v0 + 976);
  uint64_t v45 = v44[3];
  uint64_t v46 = v44[4];
  sub_10001CD44(v44, v45);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 56))(v45, v46);
  *(void *)(v0 + 2184) = v47;
  if ((v33 & 0x200) != 0)
  {
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 2192) = v58;
    *uint64_t v58 = v0;
    v58[1] = sub_1009BB590;
    return sub_100E62338();
  }
  uint64_t v43 = v47;
  uint64_t v33 = *(void *)(v0 + 992);
LABEL_22:
  unint64_t v48 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v33 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v41;
    *(void *)(v0 + 2272) = v43;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v48;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v53 = *(void **)(v0 + 976);
    uint64_t v54 = v53[3];
    uint64_t v55 = v53[4];
    sub_10001CD44(v53, v54);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v55 + 8) + 8) + 32))(v54);
    unint64_t v56 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v56;
    *unint64_t v56 = v0;
    v56[1] = sub_1009BC100;
    uint64_t v57 = *(void *)(v0 + 1640);
    return sub_100E624E4(v57);
  }
  else
  {
    uint64_t v49 = *(void *)(v0 + 992);
    if ((v49 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v41;
      *(void *)(v0 + 2384) = v43;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v48;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v28 = *(void *)(v0 + 984);
      if ((v49 & 0x240) != 0)
      {
        BOOL v50 = *(void **)(v0 + 976);
        uint64_t v51 = v50[3];
        uint64_t v52 = v50[4];
        sub_10001CD44(v50, v51);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v52 + 8) + 8) + 32))(v51);
        uint64_t v32 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v28;
        uint64_t v62 = *(void **)(v0 + 976);
        uint64_t v63 = v62[3];
        uint64_t v64 = v62[4];
        sub_10001CD44(v62, v63);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v64 + 8) + 8) + 32))(v63);
        uint64_t v32 = sub_1009BCDA4;
      }
LABEL_9:
      return _swift_task_switch(v32, v28, 0);
    }
    *(void *)(v0 + 2336) = v41;
    *(void *)(v0 + 2328) = v43;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v48;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_1009BC4B4;
    uint64_t v60 = *(void *)(v0 + 1088);
    uint64_t v61 = *(void *)(v0 + 976);
    return sub_1009B2848(v60, v61);
  }
}

uint64_t sub_1009B7D0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 1968) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009B7E24, v2, 0);
}

uint64_t sub_1009B7E24()
{
  *(_DWORD *)(v0 + 2672) = *(_DWORD *)(*(void *)(v0 + 1216) + 20);
  uid_t v1 = getuid();
  sub_100DC5FC0(v1);
  return _swift_task_switch(sub_1009B7EA0, 0, 0);
}

uint64_t sub_1009B7EA0()
{
  uint64_t v1 = *(int *)(v0 + 2672);
  uint64_t v2 = *(void *)(v0 + 1288);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1976) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1009B7F60;
  uint64_t v4 = *(void *)(v0 + 1192);
  return sub_10064DC78(v4, v2 + v1);
}

uint64_t sub_1009B7F60()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1984) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1009B8DD4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[221];
    uint64_t v6 = v2[199];
    uint64_t v7 = v2[192];
    uint64_t v8 = v2[125];
    v5(v6, v7);
    swift_release();
    uint64_t v3 = sub_1009B80A0;
    uint64_t v4 = v8;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1009B80A0()
{
  uint64_t v106 = v0;
  uint64_t v1 = *(void *)(v0 + 1984);
  uint64_t v2 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void *)(v0 + 1168);
  uint64_t v4 = *(void *)(v0 + 1160);
  sub_10001D074(*(void *)(v0 + 1192), v2, &qword_10163B8A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 1184);
    uint64_t v6 = &qword_10163B8A8;
LABEL_5:
    sub_10001DAB4(v5, v6);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 1288);
    uint64_t v15 = *(void *)(v0 + 1272);
    uint64_t v16 = type metadata accessor for Logger();
    sub_100010324(v16, (uint64_t)qword_10170D788);
    sub_1009C70F0(v14, v15, type metadata accessor for SharedBeaconRecord);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = *(void *)(v0 + 1272);
      uint64_t v20 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 141558275;
      *(void *)(v0 + 936) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2081;
      sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 944) = sub_1008FA0F0(v21, v22, &v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1009C71C8(v19, type metadata accessor for SharedBeaconRecord);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Lost mode is not enabled for shared beacon %{private,mask.hash}s.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1009C71C8(*(void *)(v0 + 1272), type metadata accessor for SharedBeaconRecord);
    }

    id v23 = 0;
    goto LABEL_20;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
  uint64_t v8 = *(void *)(v0 + 1480);
  uint64_t v9 = *(void *)(v0 + 1424);
  uint64_t v10 = *(void *)(v0 + 1176);
  uint64_t v11 = *(void *)(v0 + 1160);
  sub_1009C715C(*(void *)(v0 + 1184), v10, type metadata accessor for KeyDropLostItemDates);
  sub_10001D074(v10 + *(int *)(v11 + 20), v8, (uint64_t *)&unk_10163AC90);
  int v12 = v7(v8, 1, v9);
  uint64_t v13 = *(void *)(v0 + 1480);
  if (v12 == 1)
  {
    sub_1009C71C8(*(void *)(v0 + 1176), type metadata accessor for KeyDropLostItemDates);
    uint64_t v6 = (uint64_t *)&unk_10163AC90;
    uint64_t v5 = v13;
    goto LABEL_5;
  }
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 1432) + 32))(*(void *)(v0 + 1448), v13, *(void *)(v0 + 1424));
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 1448);
  uint64_t v25 = *(void *)(v0 + 1440);
  uint64_t v26 = *(void *)(v0 + 1432);
  uint64_t v27 = *(void *)(v0 + 1424);
  uint64_t v28 = *(void *)(v0 + 1288);
  uint64_t v29 = *(void *)(v0 + 1280);
  uint64_t v30 = type metadata accessor for Logger();
  sub_100010324(v30, (uint64_t)qword_10170D788);
  sub_1009C70F0(v28, v29, type metadata accessor for SharedBeaconRecord);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  v31(v25, v24, v27);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v102 = *(void *)(v0 + 1440);
    uint64_t v104 = v31;
    uint64_t v103 = *(void *)(v0 + 1432);
    uint64_t v34 = *(void *)(v0 + 1424);
    uint64_t v35 = *(void *)(v0 + 1280);
    uint64_t v36 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 141558531;
    *(void *)(v0 + 952) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2081;
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 960) = sub_1008FA0F0(v37, v38, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1009C71C8(v35, type metadata accessor for SharedBeaconRecord);
    *(_WORD *)(v36 + 22) = 2080;
    sub_1009C5B60((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 968) = sub_1008FA0F0(v39, v40, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v41(v102, v34);
    uint64_t v31 = v104;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Lost mode is enabled for shared beacon %{private,mask.hash}s\nwith timestamp of %s.", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 1440);
    uint64_t v43 = *(void *)(v0 + 1432);
    uint64_t v44 = *(void *)(v0 + 1424);
    sub_1009C71C8(*(void *)(v0 + 1280), type metadata accessor for SharedBeaconRecord);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v41(v42, v44);
  }

  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
  uint64_t v46 = *(void *)(v0 + 1472);
  uint64_t v47 = *(void *)(v0 + 1432);
  uint64_t v48 = *(void *)(v0 + 1424);
  v31(v46, *(void *)(v0 + 1448), v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v48);
  if (v45(v46, 1, v48) == 1)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 1472);
    uint64_t v51 = *(void *)(v0 + 1424);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    v41(v50, v51);
  }
  uint64_t v52 = *(void *)(v0 + 1448);
  uint64_t v53 = *(void *)(v0 + 1424);
  uint64_t v54 = *(void *)(v0 + 1176);
  id v23 = [objc_allocWithZone((Class)SPLostModeInfo) initWithMessage:0 email:0 phoneNumber:0 timestamp:isa];

  v41(v52, v53);
  sub_1009C71C8(v54, type metadata accessor for KeyDropLostItemDates);
LABEL_20:
  uint64_t v55 = *(void *)(v0 + 1288);
  unint64_t v56 = *(int **)(v0 + 1216);
  uint64_t v57 = *(void *)(v0 + 1192);
  uint64_t v58 = v55 + v56[7];
  uint64_t v59 = *(void *)(v58 + 8);
  uint64_t v60 = *(void **)(v58 + 16);
  char v61 = *(unsigned char *)v58;
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_100ECF4F0(v61, v59, v60);
  swift_bridgeObjectRelease();
  LOBYTE(v60) = sub_100DF1520(*(void *)(v55 + v56[11]), *(void *)(v55 + v56[12]));
  sub_10001DAB4(v57, &qword_10163B8A8);
  sub_1009C71C8(v55, type metadata accessor for SharedBeaconRecord);
  char v63 = *(unsigned char *)(v0 + 2685);
  *(void *)(v0 + 2072) = *(void *)(v0 + 1840);
  *(_OWORD *)(v0 + 2056) = *(_OWORD *)(v0 + 1824);
  *(unsigned char *)(v0 + 2690) = v63;
  *(void *)(v0 + 2048) = v23;
  *(void *)(v0 + 2040) = v62;
  *(unsigned char *)(v0 + 2689) = 0;
  *(unsigned char *)(v0 + 2688) = v60 & 1;
  *(_OWORD *)(v0 + 2024) = 0u;
  *(void *)(v0 + 2016) = v1;
  if ((*(_WORD *)(v0 + 992) & 0x203) != 0)
  {
    uint64_t v64 = *(void *)(v0 + 984);
    uint64_t v65 = *(void **)(v0 + 976);
    uint64_t v66 = v65[3];
    uint64_t v67 = v65[4];
    sub_10001CD44(v65, v66);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v67 + 8) + 8) + 32))(v66);
    uint64_t v68 = sub_1009BA64C;
    goto LABEL_22;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v69 = *(void *)(v0 + 992);
  if ((v69 & 2) != 0
    && (uint64_t v70 = *(void *)(v0 + 1152),
        uint64_t v71 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v70, 1, v71)))
  {
    uint64_t v72 = *(void *)(v70 + *(int *)(v71 + 32));
    uint64_t v73 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  *(void *)(v0 + 2168) = v73;
  *(void *)(v0 + 2160) = v72;
  if ((v69 & 0x204) != 0)
  {
    uint64_t v74 = *(void **)(v0 + 976);
    uint64_t v75 = v74[3];
    uint64_t v76 = v74[4];
    sub_10001CD44(v74, v75);
    uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 48))(v75, v76);
    BOOL v78 = (v69 & 0x208) == 0;
    uint64_t v69 = *(void *)(v0 + 992);
    if (v78)
    {
      uint64_t v79 = 0;
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v77 = 0;
    uint64_t v79 = 0;
    if ((v69 & 8) == 0) {
      goto LABEL_35;
    }
  }
  *(void *)(v0 + 2176) = v77;
  unint64_t v80 = *(void **)(v0 + 976);
  uint64_t v81 = v80[3];
  uint64_t v82 = v80[4];
  sub_10001CD44(v80, v81);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 56))(v81, v82);
  *(void *)(v0 + 2184) = v83;
  if ((v69 & 0x200) != 0)
  {
    uint64_t v94 = (void *)swift_task_alloc();
    *(void *)(v0 + 2192) = v94;
    *uint64_t v94 = v0;
    v94[1] = sub_1009BB590;
    return sub_100E62338();
  }
  uint64_t v79 = v83;
  uint64_t v69 = *(void *)(v0 + 992);
LABEL_35:
  unint64_t v84 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v69 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v77;
    *(void *)(v0 + 2272) = v79;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v84;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v89 = *(void **)(v0 + 976);
    uint64_t v90 = v89[3];
    uint64_t v91 = v89[4];
    sub_10001CD44(v89, v90);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v91 + 8) + 8) + 32))(v90);
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v92;
    *uint64_t v92 = v0;
    v92[1] = sub_1009BC100;
    uint64_t v93 = *(void *)(v0 + 1640);
    return sub_100E624E4(v93);
  }
  else
  {
    uint64_t v85 = *(void *)(v0 + 992);
    if ((v85 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v77;
      *(void *)(v0 + 2384) = v79;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v84;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v64 = *(void *)(v0 + 984);
      if ((v85 & 0x240) != 0)
      {
        uint64_t v86 = *(void **)(v0 + 976);
        uint64_t v87 = v86[3];
        uint64_t v88 = v86[4];
        sub_10001CD44(v86, v87);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v88 + 8) + 8) + 32))(v87);
        uint64_t v68 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v64;
        uint64_t v98 = *(void **)(v0 + 976);
        uint64_t v99 = v98[3];
        uint64_t v100 = v98[4];
        sub_10001CD44(v98, v99);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v100 + 8) + 8) + 32))(v99);
        uint64_t v68 = sub_1009BCDA4;
      }
LABEL_22:
      return _swift_task_switch(v68, v64, 0);
    }
    *(void *)(v0 + 2336) = v77;
    *(void *)(v0 + 2328) = v79;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v84;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v95 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v95;
    *uint64_t v95 = v0;
    v95[1] = sub_1009BC4B4;
    uint64_t v96 = *(void *)(v0 + 1088);
    uint64_t v97 = *(void *)(v0 + 976);
    return sub_1009B2848(v96, v97);
  }
}

uint64_t sub_1009B8DD4()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[221];
  uint64_t v2 = v0[199];
  uint64_t v3 = v0[192];
  uint64_t v4 = v0[125];
  swift_release();
  swift_errorRelease();
  v1(v2, v3);
  return _swift_task_switch(sub_1009B8E78, v4, 0);
}

uint64_t sub_1009B8E78()
{
  uint64_t v106 = v0;
  uint64_t v1 = v0 + 2056;
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1168) + 56))(*(void *)(v0 + 1192), 1, 1, *(void *)(v0 + 1160));
  uint64_t v2 = *(void *)(v0 + 1184);
  uint64_t v3 = *(void *)(v0 + 1168);
  uint64_t v4 = *(void *)(v0 + 1160);
  sub_10001D074(*(void *)(v0 + 1192), v2, &qword_10163B8A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v2, 1, v4) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 1184);
    uint64_t v6 = &qword_10163B8A8;
LABEL_5:
    sub_10001DAB4(v5, v6);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 1288);
    uint64_t v15 = *(void *)(v0 + 1272);
    uint64_t v16 = type metadata accessor for Logger();
    sub_100010324(v16, (uint64_t)qword_10170D788);
    sub_1009C70F0(v14, v15, type metadata accessor for SharedBeaconRecord);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = *(void *)(v0 + 1272);
      uint64_t v20 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 141558275;
      *(void *)(v0 + 936) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 12) = 2081;
      sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 944) = sub_1008FA0F0(v21, v22, &v105);
      uint64_t v1 = v0 + 2056;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1009C71C8(v19, type metadata accessor for SharedBeaconRecord);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Lost mode is not enabled for shared beacon %{private,mask.hash}s.", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1009C71C8(*(void *)(v0 + 1272), type metadata accessor for SharedBeaconRecord);
    }

    id v23 = 0;
    goto LABEL_20;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
  uint64_t v8 = *(void *)(v0 + 1480);
  uint64_t v9 = *(void *)(v0 + 1424);
  uint64_t v10 = *(void *)(v0 + 1176);
  uint64_t v11 = *(void *)(v0 + 1160);
  sub_1009C715C(*(void *)(v0 + 1184), v10, type metadata accessor for KeyDropLostItemDates);
  sub_10001D074(v10 + *(int *)(v11 + 20), v8, (uint64_t *)&unk_10163AC90);
  int v12 = v7(v8, 1, v9);
  uint64_t v13 = *(void *)(v0 + 1480);
  if (v12 == 1)
  {
    sub_1009C71C8(*(void *)(v0 + 1176), type metadata accessor for KeyDropLostItemDates);
    uint64_t v6 = (uint64_t *)&unk_10163AC90;
    uint64_t v5 = v13;
    goto LABEL_5;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 1432) + 32))(*(void *)(v0 + 1448), *(void *)(v0 + 1480), *(void *)(v0 + 1424));
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 1448);
  uint64_t v25 = *(void *)(v0 + 1440);
  uint64_t v26 = *(void *)(v0 + 1432);
  uint64_t v27 = *(void *)(v0 + 1424);
  uint64_t v28 = *(void *)(v0 + 1288);
  uint64_t v29 = *(void *)(v0 + 1280);
  uint64_t v30 = type metadata accessor for Logger();
  sub_100010324(v30, (uint64_t)qword_10170D788);
  sub_1009C70F0(v28, v29, type metadata accessor for SharedBeaconRecord);
  uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
  v31(v25, v24, v27);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v104 = v31;
    uint64_t v102 = *(void *)(v0 + 1440);
    uint64_t v103 = *(void *)(v0 + 1432);
    uint64_t v34 = *(void *)(v0 + 1424);
    uint64_t v35 = *(void *)(v0 + 1280);
    uint64_t v36 = swift_slowAlloc();
    uint64_t v105 = swift_slowAlloc();
    *(_DWORD *)uint64_t v36 = 141558531;
    *(void *)(v0 + 952) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v36 + 12) = 2081;
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 960) = sub_1008FA0F0(v37, v38, &v105);
    uint64_t v1 = v0 + 2056;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1009C71C8(v35, type metadata accessor for SharedBeaconRecord);
    *(_WORD *)(v36 + 22) = 2080;
    sub_1009C5B60((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 968) = sub_1008FA0F0(v39, v40, &v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
    v41(v102, v34);
    uint64_t v31 = v104;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Lost mode is enabled for shared beacon %{private,mask.hash}s\nwith timestamp of %s.", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v42 = *(void *)(v0 + 1440);
    uint64_t v43 = *(void *)(v0 + 1432);
    uint64_t v44 = *(void *)(v0 + 1424);
    sub_1009C71C8(*(void *)(v0 + 1280), type metadata accessor for SharedBeaconRecord);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    v41(v42, v44);
  }

  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1856);
  uint64_t v46 = *(void *)(v0 + 1472);
  uint64_t v47 = *(void *)(v0 + 1432);
  uint64_t v48 = *(void *)(v0 + 1424);
  v31(v46, *(void *)(v0 + 1448), v48);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v46, 0, 1, v48);
  if (v45(v46, 1, v48) == 1)
  {
    Class isa = 0;
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 1472);
    uint64_t v51 = *(void *)(v0 + 1424);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    v41(v50, v51);
  }
  uint64_t v52 = *(void *)(v0 + 1448);
  uint64_t v53 = *(void *)(v0 + 1424);
  uint64_t v54 = *(void *)(v0 + 1176);
  id v23 = [objc_allocWithZone((Class)SPLostModeInfo) initWithMessage:0 email:0 phoneNumber:0 timestamp:isa];

  v41(v52, v53);
  sub_1009C71C8(v54, type metadata accessor for KeyDropLostItemDates);
LABEL_20:
  uint64_t v55 = *(void *)(v0 + 1288);
  unint64_t v56 = *(int **)(v0 + 1216);
  uint64_t v57 = *(void *)(v0 + 1192);
  uint64_t v58 = v55 + v56[7];
  uint64_t v59 = *(void *)(v58 + 8);
  uint64_t v60 = *(void **)(v58 + 16);
  char v61 = *(unsigned char *)v58;
  swift_bridgeObjectRetain();
  uint64_t v62 = sub_100ECF4F0(v61, v59, v60);
  swift_bridgeObjectRelease();
  LOBYTE(v60) = sub_100DF1520(*(void *)(v55 + v56[11]), *(void *)(v55 + v56[12]));
  sub_10001DAB4(v57, &qword_10163B8A8);
  sub_1009C71C8(v55, type metadata accessor for SharedBeaconRecord);
  char v63 = *(unsigned char *)(v1 + 629);
  *(void *)(v0 + 2072) = *(void *)(v0 + 1840);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)(v0 + 1824);
  *(unsigned char *)(v1 + 634) = v63;
  *(void *)(v0 + 2048) = v23;
  *(void *)(v0 + 2040) = v62;
  *(unsigned char *)(v1 + 633) = 0;
  *(unsigned char *)(v1 + 632) = v60 & 1;
  *(void *)(v0 + 2016) = 0;
  *(void *)(v0 + 2032) = 0;
  *(void *)(v0 + 2024) = 0;
  if ((*(_WORD *)(v0 + 992) & 0x203) != 0)
  {
    uint64_t v64 = *(void *)(v0 + 984);
    uint64_t v65 = *(void **)(v0 + 976);
    uint64_t v66 = v65[3];
    uint64_t v67 = v65[4];
    sub_10001CD44(v65, v66);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v67 + 8) + 8) + 32))(v66);
    uint64_t v68 = sub_1009BA64C;
    goto LABEL_22;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v69 = *(void *)(v0 + 992);
  if ((v69 & 2) != 0
    && (uint64_t v70 = *(void *)(v0 + 1152),
        uint64_t v71 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v70, 1, v71)))
  {
    uint64_t v72 = *(void *)(v70 + *(int *)(v71 + 32));
    uint64_t v73 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v72 = 0;
    uint64_t v73 = 0;
  }
  *(void *)(v0 + 2168) = v73;
  *(void *)(v0 + 2160) = v72;
  if ((v69 & 0x204) != 0)
  {
    uint64_t v74 = *(void **)(v0 + 976);
    uint64_t v75 = v74[3];
    uint64_t v76 = v74[4];
    sub_10001CD44(v74, v75);
    uint64_t v77 = (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 48))(v75, v76);
    BOOL v78 = (v69 & 0x208) == 0;
    uint64_t v69 = *(void *)(v0 + 992);
    if (v78)
    {
      uint64_t v79 = 0;
      goto LABEL_35;
    }
  }
  else
  {
    uint64_t v77 = 0;
    uint64_t v79 = 0;
    if ((v69 & 8) == 0) {
      goto LABEL_35;
    }
  }
  *(void *)(v0 + 2176) = v77;
  unint64_t v80 = *(void **)(v0 + 976);
  uint64_t v81 = v80[3];
  uint64_t v82 = v80[4];
  sub_10001CD44(v80, v81);
  uint64_t v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 56))(v81, v82);
  *(void *)(v0 + 2184) = v83;
  if ((v69 & 0x200) != 0)
  {
    uint64_t v94 = (void *)swift_task_alloc();
    *(void *)(v0 + 2192) = v94;
    *uint64_t v94 = v0;
    v94[1] = sub_1009BB590;
    return sub_100E62338();
  }
  uint64_t v79 = v83;
  uint64_t v69 = *(void *)(v0 + 992);
LABEL_35:
  unint64_t v84 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v69 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v77;
    *(void *)(v0 + 2272) = v79;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v84;
    *(unsigned char *)(v1 + 635) = 0;
    uint64_t v89 = *(void **)(v0 + 976);
    uint64_t v90 = v89[3];
    uint64_t v91 = v89[4];
    sub_10001CD44(v89, v90);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v91 + 8) + 8) + 32))(v90);
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v92;
    *uint64_t v92 = v0;
    v92[1] = sub_1009BC100;
    uint64_t v93 = *(void *)(v0 + 1640);
    return sub_100E624E4(v93);
  }
  else
  {
    uint64_t v85 = *(void *)(v0 + 992);
    if ((v85 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v77;
      *(void *)(v0 + 2384) = v79;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v84;
      *(unsigned char *)(v1 + 637) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v64 = *(void *)(v0 + 984);
      if ((v85 & 0x240) != 0)
      {
        uint64_t v86 = *(void **)(v0 + 976);
        uint64_t v87 = v86[3];
        uint64_t v88 = v86[4];
        sub_10001CD44(v86, v87);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v88 + 8) + 8) + 32))(v87);
        uint64_t v68 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v64;
        uint64_t v98 = *(void **)(v0 + 976);
        uint64_t v99 = v98[3];
        uint64_t v100 = v98[4];
        sub_10001CD44(v98, v99);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v100 + 8) + 8) + 32))(v99);
        uint64_t v68 = sub_1009BCDA4;
      }
LABEL_22:
      return _swift_task_switch(v68, v64, 0);
    }
    *(void *)(v0 + 2336) = v77;
    *(void *)(v0 + 2328) = v79;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v84;
    *(unsigned char *)(v1 + 636) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v95 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v95;
    *uint64_t v95 = v0;
    v95[1] = sub_1009BC4B4;
    uint64_t v96 = *(void *)(v0 + 1088);
    uint64_t v97 = *(void *)(v0 + 976);
    return sub_1009B2848(v96, v97);
  }
}

uint64_t sub_1009B9BB0()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 1736);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1536);
  uint64_t v4 = *(void *)(v0 + 984);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 2664) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2664);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1712))(v2, *(void *)(v0 + 1640), v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 1992) = v6;
  *(void *)(v6 + 16) = v4;
  v1(v6 + v5, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1009B9CA4, 0, 0);
}

uint64_t sub_1009B9CA4()
{
  uint64_t v1 = v0[249];
  uint64_t v2 = v0[213];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[250] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5FD8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[251] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009B9DB0;
  uint64_t v5 = v0[169];
  uint64_t v6 = v0[168];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C5FF0, v3, v6);
}

uint64_t sub_1009B9DB0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 1768);
  uint64_t v2 = *(void *)(*(void *)v0 + 1640);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1(v2, v3);
  return _swift_task_switch(sub_1009B9F6C, v4, 0);
}

void sub_1009B9F6C()
{
  uint64_t v1 = *(uint64_t **)(v0 + 1352);
  uint64_t v2 = (int *)type metadata accessor for LostModeRecord();
  if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(*((void *)v2 - 1) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4((uint64_t)v1, &qword_10163BB70);
    id v3 = 0;
    uint64_t v4 = *(void *)(v0 + 1816);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 1816);
    uint64_t v6 = *(void *)(v0 + 1464);
    uint64_t v7 = (uint64_t *)((char *)v1 + v2[9]);
    uint64_t v8 = v7[1];
    uint64_t v62 = *v7;
    uint64_t v9 = v2[8];
    uint64_t v10 = (uint64_t *)((char *)v1 + v2[7]);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    uint64_t v14 = *(uint64_t *)((char *)v1 + v9);
    uint64_t v13 = *(uint64_t *)((char *)v1 + v9 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100B23648(v1, v6);
    if (v5)
    {
      return;
    }
    uint64_t v16 = *(void *)(v0 + 1464);
    uint64_t v17 = *(void *)(v0 + 1432);
    uint64_t v18 = *(void *)(v0 + 1424);
    uint64_t v61 = *(void *)(v0 + 1352);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v16, 0, 1, v18);
    id v19 = objc_allocWithZone((Class)SPLostModeInfo);
    id v3 = sub_100B23CB8(v62, v8, v12, v11, v14, v13, v16);
    sub_1009C71C8(v61, (uint64_t (*)(void))type metadata accessor for LostModeRecord);
    uint64_t v4 = 0;
  }
  if (qword_1016370B8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_10170ECD8;
  char v21 = *(unsigned char *)(v0 + 2685);
  *(void *)(v0 + 2072) = *(void *)(v0 + 1840);
  *(_OWORD *)(v0 + 2056) = *(_OWORD *)(v0 + 1824);
  *(unsigned char *)(v0 + 2690) = v21;
  *(void *)(v0 + 2048) = v3;
  *(void *)(v0 + 2040) = v20;
  *(_WORD *)(v0 + 2688) = 0;
  *(_OWORD *)(v0 + 2024) = 0u;
  uint64_t v22 = *(void *)(v0 + 992) & 0x203;
  *(void *)(v0 + 2016) = v4;
  id v23 = v20;
  if (v22)
  {
    uint64_t v24 = *(void *)(v0 + 984);
    uint64_t v25 = *(void **)(v0 + 976);
    uint64_t v26 = v25[3];
    uint64_t v27 = v25[4];
    sub_10001CD44(v25, v26);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v27 + 8) + 8) + 32))(v26);
    uint64_t v28 = sub_1009BA64C;
    goto LABEL_12;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1016) + 56))(*(void *)(v0 + 1152), 1, 1, *(void *)(v0 + 1008));
  *(_OWORD *)(v0 + 2144) = 0u;
  uint64_t v29 = *(void *)(v0 + 992);
  if ((v29 & 2) != 0
    && (uint64_t v30 = *(void *)(v0 + 1152),
        uint64_t v31 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v30, 1, v31)))
  {
    uint64_t v32 = *(void *)(v30 + *(int *)(v31 + 32));
    uint64_t v33 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  *(void *)(v0 + 2168) = v33;
  *(void *)(v0 + 2160) = v32;
  if ((v29 & 0x204) != 0)
  {
    uint64_t v34 = *(void **)(v0 + 976);
    uint64_t v35 = v34[3];
    uint64_t v36 = v34[4];
    sub_10001CD44(v34, v35);
    uint64_t v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 48))(v35, v36);
    BOOL v38 = (v29 & 0x208) == 0;
    uint64_t v29 = *(void *)(v0 + 992);
    if (!v38) {
      goto LABEL_23;
    }
    uint64_t v39 = 0;
  }
  else
  {
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    if ((v29 & 8) != 0)
    {
LABEL_23:
      *(void *)(v0 + 2176) = v37;
      unint64_t v40 = *(void **)(v0 + 976);
      uint64_t v41 = v40[3];
      uint64_t v42 = v40[4];
      sub_10001CD44(v40, v41);
      uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 56))(v41, v42);
      *(void *)(v0 + 2184) = v43;
      if ((v29 & 0x200) != 0)
      {
        uint64_t v54 = (void *)swift_task_alloc();
        *(void *)(v0 + 2192) = v54;
        *uint64_t v54 = v0;
        v54[1] = sub_1009BB590;
        sub_100E62338();
        return;
      }
      uint64_t v39 = v43;
      uint64_t v29 = *(void *)(v0 + 992);
    }
  }
  unint64_t v44 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
  if ((v29 & 0x20) != 0)
  {
    *(void *)(v0 + 2280) = v37;
    *(void *)(v0 + 2272) = v39;
    *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2256) = v44;
    *(unsigned char *)(v0 + 2691) = 0;
    uint64_t v49 = *(void **)(v0 + 976);
    uint64_t v50 = v49[3];
    uint64_t v51 = v49[4];
    sub_10001CD44(v49, v50);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v51 + 8) + 8) + 32))(v50);
    uint64_t v52 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v52;
    *uint64_t v52 = v0;
    v52[1] = sub_1009BC100;
    uint64_t v53 = *(void *)(v0 + 1640);
    sub_100E624E4(v53);
  }
  else
  {
    uint64_t v45 = *(void *)(v0 + 992);
    if ((v45 & 0x100) == 0)
    {
      *(void *)(v0 + 2392) = v37;
      *(void *)(v0 + 2384) = v39;
      *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2368) = v44;
      *(unsigned char *)(v0 + 2693) = 0;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v24 = *(void *)(v0 + 984);
      if ((v45 & 0x240) != 0)
      {
        uint64_t v46 = *(void **)(v0 + 976);
        uint64_t v47 = v46[3];
        uint64_t v48 = v46[4];
        sub_10001CD44(v46, v47);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v48 + 8) + 8) + 32))(v47);
        uint64_t v28 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v24;
        uint64_t v58 = *(void **)(v0 + 976);
        uint64_t v59 = v58[3];
        uint64_t v60 = v58[4];
        sub_10001CD44(v58, v59);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 32))(v59);
        uint64_t v28 = sub_1009BCDA4;
      }
LABEL_12:
      _swift_task_switch(v28, v24, 0);
      return;
    }
    *(void *)(v0 + 2336) = v37;
    *(void *)(v0 + 2328) = v39;
    *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
    *(void *)(v0 + 2312) = v44;
    *(unsigned char *)(v0 + 2692) = 0;
    *(void *)(v0 + 2304) = 0;
    uint64_t v55 = (void *)swift_task_alloc();
    *(void *)(v0 + 2344) = v55;
    *uint64_t v55 = v0;
    v55[1] = sub_1009BC4B4;
    uint64_t v56 = *(void *)(v0 + 1088);
    uint64_t v57 = *(void *)(v0 + 976);
    sub_1009B2848(v56, v57);
  }
}

uint64_t sub_1009BA64C()
{
  uint64_t v1 = v0[205];
  uint64_t v2 = v0[204];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[192];
  uint64_t v5 = v0[123];
  v0[260] = *(void *)(v5 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[261] = v7;
  *(void *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1009BA748, 0, 0);
}

uint64_t sub_1009BA748()
{
  uint64_t v1 = v0[261];
  uint64_t v2 = v0[260];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[262] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5DF4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[263] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009BA854;
  uint64_t v5 = v0[143];
  uint64_t v6 = v0[140];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C7780, v3, v6);
}

uint64_t sub_1009BA854()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1640);
  uint64_t v2 = *(void *)(*(void *)v0 + 1544);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1009BAA00, v4, 0);
}

uint64_t sub_1009BAA00()
{
  uint64_t v1 = *(void *)(v0 + 1152);
  uint64_t v2 = *(void *)(v0 + 1136);
  uint64_t v3 = *(void *)(v0 + 1016);
  uint64_t v4 = *(void *)(v0 + 1008);
  sub_10001D608(*(void *)(v0 + 1144), v1, &qword_10163BBB0);
  sub_10001D074(v1, v2, &qword_10163BBB0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(void *)(v0 + 2112) = v5;
  *(void *)(v0 + 2120) = (v3 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  LODWORD(v1) = v5(v2, 1, v4);
  sub_10001DAB4(v2, &qword_10163BBB0);
  if (v1 == 1)
  {
    uint64_t v6 = *(void *)(v0 + 1696);
    sub_10001D010(*(void *)(v0 + 976), v0 + 624);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 2128) = v7;
    *(void *)(v7 + 16) = v6;
    sub_10001CEB0((long long *)(v0 + 624), v7 + 24);
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 2136) = v8;
    uint64_t v9 = sub_10000588C((uint64_t *)&unk_101638DC0);
    *uint64_t v8 = v0;
    v8[1] = sub_1009BAFE8;
    return unsafeBlocking<A>(_:)(v0 + 2683, sub_1009C5FAC, v7, v9);
  }
  uint64_t v10 = *(void *)(v0 + 992);
  if ((v10 & 1) != 0
    && (uint64_t v11 = *(void *)(v0 + 1152),
        uint64_t v12 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2112))(v11, 1, v12)))
  {
    uint64_t v13 = *(void *)(v11 + *(int *)(v12 + 36));
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  *(void *)(v0 + 2152) = v14;
  *(void *)(v0 + 2144) = v13;
  if ((v10 & 2) != 0
    && (uint64_t v15 = *(void *)(v0 + 1152),
        uint64_t v16 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v15, 1, v16)))
  {
    uint64_t v17 = *(void *)(v15 + *(int *)(v16 + 32));
    uint64_t v18 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v17 = 0;
    uint64_t v18 = 0;
  }
  *(void *)(v0 + 2168) = v18;
  *(void *)(v0 + 2160) = v17;
  if ((v10 & 0x204) != 0)
  {
    id v19 = *(void **)(v0 + 976);
    uint64_t v20 = v19[3];
    uint64_t v21 = v19[4];
    sub_10001CD44(v19, v20);
    uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 48))(v20, v21);
    BOOL v23 = (v10 & 0x208) == 0;
    uint64_t v10 = *(void *)(v0 + 992);
    if (v23)
    {
      uint64_t v24 = 0;
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v24 = 0;
    if ((v10 & 8) == 0) {
      goto LABEL_18;
    }
  }
  *(void *)(v0 + 2176) = v22;
  uint64_t v25 = *(void **)(v0 + 976);
  uint64_t v26 = v25[3];
  uint64_t v27 = v25[4];
  sub_10001CD44(v25, v26);
  uint64_t v28 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v26, v27);
  *(void *)(v0 + 2184) = v28;
  if ((v10 & 0x200) == 0)
  {
    uint64_t v24 = v28;
    uint64_t v10 = *(void *)(v0 + 992);
LABEL_18:
    unint64_t v29 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
    if ((v10 & 0x20) != 0)
    {
      *(void *)(v0 + 2280) = v22;
      *(void *)(v0 + 2272) = v24;
      *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2256) = v29;
      *(unsigned char *)(v0 + 2691) = 0;
      uint64_t v36 = *(void **)(v0 + 976);
      uint64_t v37 = v36[3];
      uint64_t v38 = v36[4];
      sub_10001CD44(v36, v37);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v38 + 8) + 8) + 32))(v37);
      uint64_t v39 = (void *)swift_task_alloc();
      *(void *)(v0 + 2288) = v39;
      *uint64_t v39 = v0;
      v39[1] = sub_1009BC100;
      uint64_t v40 = *(void *)(v0 + 1640);
      return sub_100E624E4(v40);
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 992);
      if ((v30 & 0x100) != 0)
      {
        *(void *)(v0 + 2336) = v22;
        *(void *)(v0 + 2328) = v24;
        *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
        *(void *)(v0 + 2312) = v29;
        *(unsigned char *)(v0 + 2692) = 0;
        *(void *)(v0 + 2304) = 0;
        uint64_t v42 = (void *)swift_task_alloc();
        *(void *)(v0 + 2344) = v42;
        *uint64_t v42 = v0;
        v42[1] = sub_1009BC4B4;
        uint64_t v43 = *(void *)(v0 + 1088);
        uint64_t v44 = *(void *)(v0 + 976);
        return sub_1009B2848(v43, v44);
      }
      else
      {
        *(void *)(v0 + 2392) = v22;
        *(void *)(v0 + 2384) = v24;
        *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
        *(void *)(v0 + 2368) = v29;
        *(unsigned char *)(v0 + 2693) = 0;
        *(_OWORD *)(v0 + 2352) = 0u;
        uint64_t v31 = *(void *)(v0 + 984);
        if ((v30 & 0x240) != 0)
        {
          uint64_t v32 = *(void **)(v0 + 976);
          uint64_t v33 = v32[3];
          uint64_t v34 = v32[4];
          sub_10001CD44(v32, v33);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v34 + 8) + 8) + 32))(v33);
          uint64_t v35 = sub_1009BC8A0;
        }
        else
        {
          *(void *)(v0 + 2440) = 0;
          *(void *)(v0 + 2432) = v31;
          uint64_t v45 = *(void **)(v0 + 976);
          uint64_t v46 = v45[3];
          uint64_t v47 = v45[4];
          sub_10001CD44(v45, v46);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v47 + 8) + 8) + 32))(v46);
          uint64_t v35 = sub_1009BCDA4;
        }
        return _swift_task_switch(v35, v31, 0);
      }
    }
  }
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 2192) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_1009BB590;
  return sub_100E62338();
}

uint64_t sub_1009BAFE8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1009BB114, v1, 0);
}

uint64_t sub_1009BB114()
{
  uint64_t v1 = *(void *)(v0 + 992);
  if ((v1 & 1) != 0
    && (uint64_t v2 = *(void *)(v0 + 1152),
        uint64_t v3 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2112))(v2, 1, v3)))
  {
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 36));
    uint64_t v5 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  *(void *)(v0 + 2152) = v5;
  *(void *)(v0 + 2144) = v4;
  if ((v1 & 2) != 0
    && (uint64_t v6 = *(void *)(v0 + 1152),
        uint64_t v7 = *(void *)(v0 + 1008),
        !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1016) + 48))(v6, 1, v7)))
  {
    uint64_t v8 = *(void *)(v6 + *(int *)(v7 + 32));
    uint64_t v9 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  *(void *)(v0 + 2168) = v9;
  *(void *)(v0 + 2160) = v8;
  if ((v1 & 0x204) != 0)
  {
    uint64_t v10 = *(void **)(v0 + 976);
    uint64_t v11 = v10[3];
    uint64_t v12 = v10[4];
    sub_10001CD44(v10, v11);
    uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
    BOOL v14 = (v1 & 0x208) == 0;
    uint64_t v1 = *(void *)(v0 + 992);
    if (v14)
    {
      uint64_t v15 = 0;
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0;
    if ((v1 & 8) == 0) {
      goto LABEL_14;
    }
  }
  *(void *)(v0 + 2176) = v13;
  uint64_t v16 = *(void **)(v0 + 976);
  uint64_t v17 = v16[3];
  uint64_t v18 = v16[4];
  sub_10001CD44(v16, v17);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 56))(v17, v18);
  *(void *)(v0 + 2184) = v19;
  if ((v1 & 0x200) == 0)
  {
    uint64_t v15 = v19;
    uint64_t v1 = *(void *)(v0 + 992);
LABEL_14:
    unint64_t v20 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
    if ((v1 & 0x20) != 0)
    {
      *(void *)(v0 + 2280) = v13;
      *(void *)(v0 + 2272) = v15;
      *(void *)(v0 + 2264) = &_swiftEmptySetSingleton;
      *(void *)(v0 + 2256) = v20;
      *(unsigned char *)(v0 + 2691) = 0;
      uint64_t v27 = *(void **)(v0 + 976);
      uint64_t v28 = v27[3];
      uint64_t v29 = v27[4];
      sub_10001CD44(v27, v28);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v29 + 8) + 8) + 32))(v28);
      uint64_t v30 = (void *)swift_task_alloc();
      *(void *)(v0 + 2288) = v30;
      *uint64_t v30 = v0;
      v30[1] = sub_1009BC100;
      uint64_t v31 = *(void *)(v0 + 1640);
      return sub_100E624E4(v31);
    }
    else
    {
      uint64_t v21 = *(void *)(v0 + 992);
      if ((v21 & 0x100) != 0)
      {
        *(void *)(v0 + 2336) = v13;
        *(void *)(v0 + 2328) = v15;
        *(void *)(v0 + 2320) = &_swiftEmptySetSingleton;
        *(void *)(v0 + 2312) = v20;
        *(unsigned char *)(v0 + 2692) = 0;
        *(void *)(v0 + 2304) = 0;
        uint64_t v34 = (void *)swift_task_alloc();
        *(void *)(v0 + 2344) = v34;
        *uint64_t v34 = v0;
        v34[1] = sub_1009BC4B4;
        uint64_t v35 = *(void *)(v0 + 1088);
        uint64_t v36 = *(void *)(v0 + 976);
        return sub_1009B2848(v35, v36);
      }
      else
      {
        *(void *)(v0 + 2392) = v13;
        *(void *)(v0 + 2384) = v15;
        *(void *)(v0 + 2376) = &_swiftEmptySetSingleton;
        *(void *)(v0 + 2368) = v20;
        *(unsigned char *)(v0 + 2693) = 0;
        *(_OWORD *)(v0 + 2352) = 0u;
        uint64_t v22 = *(void *)(v0 + 984);
        if ((v21 & 0x240) != 0)
        {
          BOOL v23 = *(void **)(v0 + 976);
          uint64_t v24 = v23[3];
          uint64_t v25 = v23[4];
          sub_10001CD44(v23, v24);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v25 + 8) + 8) + 32))(v24);
          uint64_t v26 = sub_1009BC8A0;
        }
        else
        {
          *(void *)(v0 + 2440) = 0;
          *(void *)(v0 + 2432) = v22;
          uint64_t v37 = *(void **)(v0 + 976);
          uint64_t v38 = v37[3];
          uint64_t v39 = v37[4];
          sub_10001CD44(v37, v38);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v39 + 8) + 8) + 32))(v38);
          uint64_t v26 = sub_1009BCDA4;
        }
        return _swift_task_switch(v26, v22, 0);
      }
    }
  }
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 2192) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1009BB590;
  return sub_100E62338();
}

uint64_t sub_1009BB590(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 2200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009BB6A8, v2, 0);
}

uint64_t sub_1009BB6A8()
{
  uint64_t v1 = *(void *)(v0 + 2200);
  uint64_t v2 = *(void *)(v0 + 1696);
  uint64_t v3 = *(void *)(v0 + 976);
  uint64_t v4 = (void *)swift_task_alloc();
  v4[2] = v3;
  uint64_t v5 = sub_1000A4684((uint64_t (*)(char *))sub_1009C5ED4, v4, v1);
  swift_task_dealloc();
  uint64_t v6 = sub_10099C09C(v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_101158F5C((unint64_t)v6);
  *(void *)(v0 + 2208) = v7;
  swift_bridgeObjectRelease();
  if (v2)
  {
    uint64_t v8 = *(void *)(v0 + 1696);
    sub_10001D010(*(void *)(v0 + 976), v0 + 744);
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 2216) = v9;
    *(void *)(v9 + 16) = v8;
    sub_10001CEB0((long long *)(v0 + 744), v9 + 24);
    swift_retain_n();
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 2224) = v10;
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_101653D88);
    *uint64_t v10 = v0;
    v10[1] = sub_1009BBAD4;
    return unsafeBlocking<A>(_:)(v0 + 928, sub_1009C5EF8, v9, v11);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 992);
    unint64_t v13 = sub_10092E7D8((uint64_t)_swiftEmptyArrayStorage);
    if ((v12 & 0x20) != 0)
    {
      uint64_t v22 = *(void *)(v0 + 2184);
      *(void *)(v0 + 2280) = *(void *)(v0 + 2176);
      *(void *)(v0 + 2272) = v22;
      *(void *)(v0 + 2264) = v7;
      *(void *)(v0 + 2256) = v13;
      *(unsigned char *)(v0 + 2691) = 0;
      BOOL v23 = *(void **)(v0 + 976);
      uint64_t v24 = v23[3];
      uint64_t v25 = v23[4];
      sub_10001CD44(v23, v24);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v25 + 8) + 8) + 32))(v24);
      uint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 2288) = v26;
      *uint64_t v26 = v0;
      v26[1] = sub_1009BC100;
      uint64_t v27 = *(void *)(v0 + 1640);
      return sub_100E624E4(v27);
    }
    else
    {
      uint64_t v14 = *(void *)(v0 + 992);
      uint64_t v15 = *(void *)(v0 + 2184);
      uint64_t v16 = *(void *)(v0 + 2176);
      if ((v14 & 0x100) != 0)
      {
        *(void *)(v0 + 2336) = v16;
        *(void *)(v0 + 2328) = v15;
        *(void *)(v0 + 2320) = v7;
        *(void *)(v0 + 2312) = v13;
        *(unsigned char *)(v0 + 2692) = 0;
        *(void *)(v0 + 2304) = 0;
        uint64_t v28 = (void *)swift_task_alloc();
        *(void *)(v0 + 2344) = v28;
        *uint64_t v28 = v0;
        v28[1] = sub_1009BC4B4;
        uint64_t v29 = *(void *)(v0 + 1088);
        uint64_t v30 = *(void *)(v0 + 976);
        return sub_1009B2848(v29, v30);
      }
      else
      {
        *(void *)(v0 + 2392) = v16;
        *(void *)(v0 + 2384) = v15;
        *(void *)(v0 + 2376) = v7;
        *(void *)(v0 + 2368) = v13;
        *(unsigned char *)(v0 + 2693) = 0;
        *(_OWORD *)(v0 + 2352) = 0u;
        uint64_t v17 = *(void *)(v0 + 984);
        if ((v14 & 0x240) != 0)
        {
          uint64_t v18 = *(void **)(v0 + 976);
          uint64_t v19 = v18[3];
          uint64_t v20 = v18[4];
          sub_10001CD44(v18, v19);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v20 + 8) + 8) + 32))(v19);
          uint64_t v21 = sub_1009BC8A0;
        }
        else
        {
          *(void *)(v0 + 2440) = 0;
          *(void *)(v0 + 2432) = v17;
          uint64_t v31 = *(void **)(v0 + 976);
          uint64_t v32 = v31[3];
          uint64_t v33 = v31[4];
          sub_10001CD44(v31, v32);
          (*(void (**)(uint64_t))(*(void *)(*(void *)(v33 + 8) + 8) + 32))(v32);
          uint64_t v21 = sub_1009BCDA4;
        }
        return _swift_task_switch(v21, v17, 0);
      }
    }
  }
}

uint64_t sub_1009BBAD4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1009BBC00, v1, 0);
}

uint64_t sub_1009BBC00()
{
  uint64_t v1 = *(void *)(v0 + 1696);
  uint64_t v2 = *(void *)(v0 + 976);
  *(void *)(v0 + 2232) = *(void *)(v0 + 928);
  sub_10001D010(v2, v0 + 664);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 2240) = v3;
  *(void *)(v3 + 16) = v1;
  sub_10001CEB0((long long *)(v0 + 664), v3 + 24);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2248) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009BBD18;
  return unsafeBlocking<A>(_:)(v0 + 2682, sub_1009C5F50, v3, &type metadata for Bool);
}

uint64_t sub_1009BBD18()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1009BBE44, v1, 0);
}

uint64_t sub_1009BBE44()
{
  uint64_t v1 = *(void *)(v0 + 992);
  swift_release();
  char v2 = *(unsigned char *)(v0 + 2682);
  if ((v1 & 0x20) != 0)
  {
    uint64_t v13 = *(void *)(v0 + 2232);
    uint64_t v14 = *(void *)(v0 + 2208);
    uint64_t v15 = *(void *)(v0 + 2184);
    *(void *)(v0 + 2280) = *(void *)(v0 + 2176);
    *(void *)(v0 + 2272) = v15;
    *(void *)(v0 + 2264) = v14;
    *(void *)(v0 + 2256) = v13;
    *(unsigned char *)(v0 + 2691) = v2;
    uint64_t v16 = *(void **)(v0 + 976);
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    sub_10001CD44(v16, v17);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v17);
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 2288) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1009BC100;
    uint64_t v20 = *(void *)(v0 + 1640);
    return sub_100E624E4(v20);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 992);
    uint64_t v4 = *(void *)(v0 + 2232);
    uint64_t v5 = *(void *)(v0 + 2208);
    uint64_t v6 = *(void *)(v0 + 2184);
    uint64_t v7 = *(void *)(v0 + 2176);
    if ((v3 & 0x100) != 0)
    {
      *(void *)(v0 + 2336) = v7;
      *(void *)(v0 + 2328) = v6;
      *(void *)(v0 + 2320) = v5;
      *(void *)(v0 + 2312) = v4;
      *(unsigned char *)(v0 + 2692) = v2;
      *(void *)(v0 + 2304) = 0;
      uint64_t v22 = (void *)swift_task_alloc();
      *(void *)(v0 + 2344) = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_1009BC4B4;
      uint64_t v23 = *(void *)(v0 + 1088);
      uint64_t v24 = *(void *)(v0 + 976);
      return sub_1009B2848(v23, v24);
    }
    else
    {
      *(void *)(v0 + 2392) = v7;
      *(void *)(v0 + 2384) = v6;
      *(void *)(v0 + 2376) = v5;
      *(void *)(v0 + 2368) = v4;
      *(unsigned char *)(v0 + 2693) = v2;
      *(_OWORD *)(v0 + 2352) = 0u;
      uint64_t v8 = *(void *)(v0 + 984);
      if ((v3 & 0x240) != 0)
      {
        uint64_t v9 = *(void **)(v0 + 976);
        uint64_t v10 = v9[3];
        uint64_t v11 = v9[4];
        sub_10001CD44(v9, v10);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v11 + 8) + 8) + 32))(v10);
        uint64_t v12 = sub_1009BC8A0;
      }
      else
      {
        *(void *)(v0 + 2440) = 0;
        *(void *)(v0 + 2432) = v8;
        uint64_t v25 = *(void **)(v0 + 976);
        uint64_t v26 = v25[3];
        uint64_t v27 = v25[4];
        sub_10001CD44(v25, v26);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v27 + 8) + 8) + 32))(v26);
        uint64_t v12 = sub_1009BCDA4;
      }
      return _swift_task_switch(v12, v8, 0);
    }
  }
}

uint64_t sub_1009BC100(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1640);
  uint64_t v3 = *(void *)(*(void *)v1 + 1544);
  uint64_t v4 = *(void *)(*(void *)v1 + 1536);
  uint64_t v5 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 2296) = a1;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1009BC274, v5, 0);
}

uint64_t sub_1009BC274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(v3 + 1000);
  if (*(unsigned char *)(v4 + 192))
  {
    uint64_t v5 = *(void *)(v3 + 2296);
    if (!*(void *)(v3 + 1696)) {
      goto LABEL_7;
    }
    swift_retain();
    CurrentValueSubject.value.getter();
    a1 = swift_release();
    uint64_t v4 = *(void *)(v3 + 904);
    BOOL v6 = __OFADD__(v4, v5);
    v5 += v4;
    if (!v6) {
      goto LABEL_7;
    }
    __break(1u);
  }
  uint64_t v7 = *(void *)(v3 + 2296);
  uint64_t v8 = *(void *)(v4 + 184);
  uint64_t v5 = v8 + v7;
  if (__OFADD__(v8, v7))
  {
    __break(1u);
    return _swift_task_switch(a1, a2, a3);
  }
LABEL_7:
  uint64_t v9 = *(void *)(v3 + 992);
  uint64_t v10 = *(void *)(v3 + 2280);
  uint64_t v11 = *(void *)(v3 + 2272);
  uint64_t v12 = *(void *)(v3 + 2264);
  uint64_t v13 = *(void *)(v3 + 2256);
  char v14 = *(unsigned char *)(v3 + 2691);
  if ((v9 & 0x100) == 0)
  {
    *(void *)(v3 + 2392) = v10;
    *(void *)(v3 + 2384) = v11;
    *(void *)(v3 + 2376) = v12;
    *(void *)(v3 + 2368) = v13;
    *(unsigned char *)(v3 + 2693) = v14;
    *(void *)(v3 + 2360) = v5;
    *(void *)(v3 + 2352) = 0;
    uint64_t v15 = *(void *)(v3 + 984);
    if ((v9 & 0x240) != 0)
    {
      uint64_t v16 = *(void **)(v3 + 976);
      uint64_t v17 = v16[3];
      uint64_t v18 = v16[4];
      sub_10001CD44(v16, v17);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v17);
      uint64_t v19 = sub_1009BC8A0;
    }
    else
    {
      *(void *)(v3 + 2440) = 0;
      *(void *)(v3 + 2432) = v15;
      uint64_t v24 = *(void **)(v3 + 976);
      uint64_t v25 = v24[3];
      uint64_t v26 = v24[4];
      sub_10001CD44(v24, v25);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v25);
      uint64_t v19 = sub_1009BCDA4;
    }
    a1 = (uint64_t)v19;
    a2 = v15;
    a3 = 0;
    return _swift_task_switch(a1, a2, a3);
  }
  *(void *)(v3 + 2336) = v10;
  *(void *)(v3 + 2328) = v11;
  *(void *)(v3 + 2320) = v12;
  *(void *)(v3 + 2312) = v13;
  *(unsigned char *)(v3 + 2692) = v14;
  *(void *)(v3 + 2304) = v5;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v3 + 2344) = v20;
  *uint64_t v20 = v3;
  v20[1] = sub_1009BC4B4;
  uint64_t v21 = *(void *)(v3 + 1088);
  uint64_t v22 = *(void *)(v3 + 976);
  return sub_1009B2848(v21, v22);
}

uint64_t sub_1009BC4B4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1000);
  if (v0)
  {
    swift_errorRelease();
    uint64_t v4 = sub_1009C3DD0;
  }
  else
  {
    uint64_t v4 = sub_1009BC5EC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1009BC5EC()
{
  uint64_t v1 = *(void *)(v0 + 1112);
  uint64_t v2 = *(void *)(v0 + 1088);
  (*(void (**)(uint64_t, void, uint64_t, void))(*(void *)(v0 + 1104) + 56))(v2, 0, 1, *(void *)(v0 + 1096));
  sub_10001D608(v2, v1, &qword_10163F7B0);
  id v3 = [objc_allocWithZone((Class)SPKeySyncRecord) init];
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 1640);
    uint64_t v5 = *(void *)(v0 + 1544);
    uint64_t v28 = *(void *)(v0 + 1536);
    uint64_t v29 = *(void **)(v0 + 1112);
    uint64_t v6 = *(void **)(v0 + 976);
    uint64_t v7 = v6[3];
    uint64_t v8 = v6[4];
    sub_10001CD44(v6, v7);
    uint64_t v9 = *(void *)(*(void *)(v8 + 8) + 8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 32);
    id v30 = v3;
    id v11 = v3;
    v10(v7, v9);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v28);
    [v11 setIdentifier:isa];

    [v11 setLastIndexObserved:*v29];
    id v13 = v11;
    id v3 = v30;
    id v14 = v13;
    Class v15 = Date._bridgeToObjectiveC()().super.isa;
    [v14 setLastIndexObservationDate:v15];
  }
  sub_10001DAB4(*(void *)(v0 + 1112), &qword_10163F7B0);
  char v16 = *(unsigned char *)(v0 + 2692);
  uint64_t v17 = *(void *)(v0 + 2304);
  long long v18 = *(_OWORD *)(v0 + 2312);
  *(_OWORD *)(v0 + 2384) = *(_OWORD *)(v0 + 2328);
  *(_OWORD *)(v0 + 2368) = v18;
  *(unsigned char *)(v0 + 2693) = v16;
  *(void *)(v0 + 2360) = v17;
  *(void *)(v0 + 2352) = v3;
  uint64_t v19 = *(void *)(v0 + 984);
  if ((*(_WORD *)(v0 + 992) & 0x240) != 0)
  {
    uint64_t v20 = *(void **)(v0 + 976);
    uint64_t v21 = v20[3];
    uint64_t v22 = v20[4];
    sub_10001CD44(v20, v21);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v22 + 8) + 8) + 32))(v21);
    uint64_t v23 = sub_1009BC8A0;
  }
  else
  {
    *(void *)(v0 + 2440) = 0;
    *(void *)(v0 + 2432) = v19;
    uint64_t v24 = *(void **)(v0 + 976);
    uint64_t v25 = v24[3];
    uint64_t v26 = v24[4];
    sub_10001CD44(v24, v25);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v25);
    uint64_t v23 = sub_1009BCDA4;
  }
  return _swift_task_switch(v23, v19, 0);
}

uint64_t sub_1009BC8A0()
{
  uint64_t v1 = v0[205];
  uint64_t v2 = v0[204];
  uint64_t v3 = v0[193];
  uint64_t v4 = v0[192];
  uint64_t v5 = v0[123];
  v0[300] = *(void *)(v5 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[301] = v7;
  *(void *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1009BC99C, 0, 0);
}

uint64_t sub_1009BC99C()
{
  uint64_t v1 = v0[301];
  uint64_t v2 = v0[300];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[302] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5EB0;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[303] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009BCAA8;
  uint64_t v5 = v0[135];
  uint64_t v6 = v0[134];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C5EC8, v3, v6);
}

uint64_t sub_1009BCAA8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1640);
  uint64_t v2 = *(void *)(*(void *)v0 + 1544);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1009BCC54, v4, 0);
}

uint64_t sub_1009BCC54()
{
  uint64_t v1 = v0[135];
  uint64_t v2 = type metadata accessor for BeaconStatus(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, &qword_10163BBA0);
    uint64_t v3 = 0;
  }
  else
  {
    unsigned __int8 v4 = *(unsigned char *)(v1 + *(int *)(v2 + 20));
    sub_1009C71C8(v1, type metadata accessor for BeaconStatus);
    uint64_t v3 = qword_1013713C8[(char)sub_1000D0308(v4)];
  }
  uint64_t v5 = v0[123];
  v0[305] = v3;
  v0[304] = v5;
  uint64_t v6 = (void *)v0[122];
  uint64_t v7 = v6[3];
  uint64_t v8 = v6[4];
  sub_10001CD44(v6, v7);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v7);
  return _swift_task_switch(sub_1009BCDA4, v5, 0);
}

uint64_t sub_1009BCDA4()
{
  uint64_t v1 = *(void *)(v0 + 1640);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1544);
  uint64_t v4 = *(void *)(v0 + 1536);
  uint64_t v5 = *(void *)(v0 + 984);
  *(void *)(v0 + 2448) = *(void *)(v5 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 2456) = v6;
  *(void *)(v0 + 2464) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v4);
  int v7 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 2676) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 2472) = v9;
  *(void *)(v9 + 16) = v5;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 2480) = v10;
  *(void *)(v0 + 2488) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1009BCEC8, 0, 0);
}

uint64_t sub_1009BCEC8()
{
  uint64_t v1 = v0[309];
  uint64_t v2 = v0[306];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[312] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5DF4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[313] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009BCFD4;
  uint64_t v5 = v0[141];
  uint64_t v6 = v0[140];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C5E0C, v3, v6);
}

uint64_t sub_1009BCFD4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 1640);
  uint64_t v3 = *(void *)(*v0 + 1544);
  uint64_t v4 = *(void *)(*v0 + 1536);
  uint64_t v5 = *(void *)(*v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 2512) = v6;
  *(void *)(v1 + 2520) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v2, v4);
  return _swift_task_switch(sub_1009BD198, v5, 0);
}

uint64_t sub_1009BD198()
{
  uint64_t v144 = v0;
  uint64_t v1 = *(void *)(v0 + 1128);
  uint64_t v2 = *(void *)(v0 + 1016);
  uint64_t v3 = *(void *)(v0 + 1008);
  uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  *(void *)(v0 + 2528) = v4;
  *(void *)(v0 + 2536) = (v2 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v4(v1, 1, v3) == 1)
  {
    sub_10001DAB4(v1, &qword_10163BBB0);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v1 + *(int *)(v3 + 60));
    sub_1009C71C8(v1, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  *(void *)(v0 + 2544) = v5;
  uint64_t v6 = (uint64_t (*)())(id)MobileGestalt_get_current_device();
  if (!v6)
  {
    __break(1u);
    return _swift_task_switch(v6, v7, v8);
  }
  uint64_t v9 = v6;
  id v10 = (id)MobileGestalt_copy_productType_obj();

  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  uint64_t v11 = *(void *)(v0 + 976);
  Swift::String v12 = String.lowercased()();
  swift_bridgeObjectRelease();
  *(Swift::String *)(v0 + 872) = v12;
  sub_1005506B0();
  sub_1000336D4();
  static PartialMatchCase<>.first(containing:)();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 2694) = *(unsigned char *)(v0 + 2684);
  sub_10001D010(v11, v0 + 504);
  *(void *)(v0 + 2552) = sub_10000588C((uint64_t *)&unk_10164DBF0);
  if (swift_dynamicCast())
  {
    id v13 = *(void **)(v0 + 976);
    sub_1009C715C(*(void *)(v0 + 1400), *(void *)(v0 + 1392), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(_WORD *)(v0 + 2680) = sub_100D1C588();
    uint64_t v15 = v13[3];
    uint64_t v14 = v13[4];
    sub_10001CD44(v13, v15);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v14 + 8) + 8) + 32))(v15);
    uint64_t v7 = *(void *)(v0 + 2432);
    char v16 = sub_1009BE8AC;
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    uint64_t v17 = *(void **)(v0 + 976);
    sub_1009C715C(*(void *)(v0 + 1064), *(void *)(v0 + 1056), (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v18 = v17[3];
    uint64_t v19 = v17[4];
    sub_10001CD44(v17, v18);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v19 + 8) + 8) + 32))(v18);
    uint64_t v7 = *(void *)(v0 + 2432);
    char v16 = sub_1009C0A58;
LABEL_11:
    uint64_t v6 = v16;
    uint64_t v8 = 0;
    return _swift_task_switch(v6, v7, v8);
  }
  if (swift_dynamicCast())
  {
    uint64_t v20 = *(void *)(v0 + 1256);
    uint64_t v21 = *(void *)(v0 + 1216);
    sub_1009C715C(*(void *)(v0 + 1264), v20, type metadata accessor for SharedBeaconRecord);
    uint64_t v22 = sub_1002AAF08(*(void *)(v20 + *(int *)(v21 + 44)), *(void *)(v20 + *(int *)(v21 + 48)));
    if (v23 >> 60 == 15)
    {
      if (qword_101636EA8 != -1) {
        swift_once();
      }
      uint64_t v24 = *(void *)(v0 + 976);
      uint64_t v25 = type metadata accessor for Logger();
      sub_100010324(v25, (uint64_t)qword_10170E790);
      sub_10001D010(v24, v0 + 704);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v141 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
        uint64_t v28 = *(void *)(v0 + 1640);
        uint64_t v29 = *(void *)(v0 + 1536);
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v143 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 141558275;
        *(void *)(v0 + 920) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v30 + 12) = 2081;
        uint64_t v31 = *(void *)(v0 + 728);
        uint64_t v32 = *(void *)(v0 + 736);
        sub_10001CD44((void *)(v0 + 704), v31);
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v32 + 8) + 8) + 32))(v31);
        sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v35 = v34;
        v141(v28, v29);
        *(void *)(v0 + 888) = sub_1008FA0F0(v33, v35, (uint64_t *)&v143);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 704);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Could not compute productUUID from shared beacon %{private,mask.hash}s.", (uint8_t *)v30, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 704);
      }

      UUID.init(uuid:)();
    }
    else
    {
      uint64_t v49 = v22;
      unint64_t v50 = v23;
      if (qword_101636960 != -1) {
        swift_once();
      }
      long long v143 = xmmword_1016408F8;
      sub_1000361E0(xmmword_1016408F8, *((unint64_t *)&xmmword_1016408F8 + 1));
      Data.append(_:)();
      long long v51 = v143;
      *(_OWORD *)(v0 + 856) = v143;
      sub_1000362FC();
      DataProtocol.stableUUID.getter();
      sub_10001CFB8(v51, *((unint64_t *)&v51 + 1));
      sub_100037A24(v49, v50);
    }
    uint64_t v68 = (void *)swift_task_alloc();
    *(void *)(v0 + 2632) = v68;
    *uint64_t v68 = v0;
    v68[1] = sub_1009C1C98;
    return sub_100E57788();
  }
  uint64_t v36 = v0 + 584;
  if (qword_101636EA8 != -1) {
    swift_once();
  }
  uint64_t v37 = *(void *)(v0 + 976);
  uint64_t v38 = type metadata accessor for Logger();
  sub_100010324(v38, (uint64_t)qword_10170E790);
  sub_10001D010(v37, v0 + 544);
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v142 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v41 = *(void *)(v0 + 1640);
    uint64_t v42 = *(void *)(v0 + 1536);
    uint64_t v43 = swift_slowAlloc();
    *(void *)&long long v143 = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 141558275;
    *(void *)(v0 + 912) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v43 + 12) = 2081;
    uint64_t v44 = *(void *)(v0 + 568);
    uint64_t v45 = *(void *)(v0 + 576);
    sub_10001CD44((void *)(v0 + 544), v44);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v45 + 8) + 8) + 32))(v44);
    sub_1009C5B60((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v48 = v47;
    v142(v41, v42);
    *(void *)(v0 + 896) = sub_1008FA0F0(v46, v48, (uint64_t *)&v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 544);
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Beacon record type is not handled for beacon %{private,mask.hash}s.", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v36 = v0 + 584;
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 544);
  }

  uint64_t v52 = *(void **)(v0 + 976);
  UUID.init(uuid:)();
  uint64_t v53 = v52[3];
  uint64_t v54 = v52[4];
  sub_10001CD44(v52, v53);
  (*(void (**)(uint64_t, uint64_t))(v54 + 24))(v53, v54);
  uint64_t v55 = *(void *)(v0 + 1224);
  uint64_t v56 = *(void *)(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 504);
  sub_10001D010(v56, v36);
  char v57 = swift_dynamicCast();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 56);
  if (v57)
  {
    uint64_t v59 = *(void *)(v0 + 1248);
    uint64_t v60 = *(void *)(v0 + 1240);
    uint64_t v61 = *(void *)(v0 + 1216);
    uint64_t v62 = *(void *)(v0 + 1200);
    v58(v62, 0, 1, v61);
    sub_1009C715C(v62, v59, type metadata accessor for SharedBeaconRecord);
    uint64_t v63 = *(void *)(v59 + *(int *)(v61 + 44));
    sub_1009C70F0(v59, v60, type metadata accessor for SharedBeaconRecord);
    uint64_t v64 = *(void *)(v0 + 1240);
    if (v63 != -1)
    {
      sub_1009C71C8(v64, type metadata accessor for SharedBeaconRecord);
LABEL_39:
      sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
      goto LABEL_40;
    }
    uint64_t v70 = *(void *)(v64 + *(int *)(*(void *)(v0 + 1216) + 48));
    sub_1009C71C8(v64, type metadata accessor for SharedBeaconRecord);
    if (v70 != -1) {
      goto LABEL_39;
    }
    uint64_t v119 = *(void *)(v0 + 1248);
    uint64_t v120 = *(void *)(v0 + 1216);
    int v121 = *(unsigned __int8 *)(v119 + *(int *)(v120 + 64));
    sub_1009C70F0(v119, *(void *)(v0 + 1232), type metadata accessor for SharedBeaconRecord);
    uint64_t v122 = *(void *)(v0 + 1232);
    if (v121 == 4)
    {
      sub_1009C71C8(v122, type metadata accessor for SharedBeaconRecord);
    }
    else
    {
      int v123 = *(unsigned __int8 *)(v122 + *(int *)(v120 + 64));
      sub_1009C71C8(v122, type metadata accessor for SharedBeaconRecord);
      if (v123 != 1) {
        goto LABEL_39;
      }
    }
    uint64_t v124 = *(void *)(v0 + 1032);
    sub_10001D074(*(void *)(v0 + 1248) + *(int *)(*(void *)(v0 + 1216) + 80), v124, (uint64_t *)&unk_101653D30);
    uint64_t v125 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 48))(v124, 1, v125) == 1)
    {
      uint64_t v126 = *(void *)(v0 + 1544);
      uint64_t v127 = *(void *)(v0 + 1536);
      uint64_t v128 = *(void *)(v0 + 1328);
      sub_10001DAB4(*(void *)(v0 + 1032), (uint64_t *)&unk_101653D30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 56))(v128, 1, 1, v127);
    }
    else
    {
      uint64_t v129 = *(void *)(v0 + 1032);
      sub_10001D074(v129 + *(int *)(v125 + 20), *(void *)(v0 + 1328), &qword_101638CF0);
      sub_1009C71C8(v129, type metadata accessor for SharedBeaconRecord.PropertyListContent);
    }
    uint64_t v130 = *(void *)(v0 + 1544);
    uint64_t v131 = *(void *)(v0 + 1536);
    uint64_t v132 = *(void *)(v0 + 1328);
    sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v130 + 48))(v132, 1, v131) != 1)
    {
      (*(void (**)(void, void, void))(v0 + 2480))(*(void *)(v0 + 1560), *(void *)(v0 + 1328), *(void *)(v0 + 1536));
      goto LABEL_41;
    }
    uint64_t v67 = *(void *)(v0 + 1328);
    uint64_t v66 = &qword_101638CF0;
  }
  else
  {
    uint64_t v65 = *(void *)(v0 + 1200);
    v58(v65, 1, 1, *(void *)(v0 + 1216));
    uint64_t v66 = (uint64_t *)&unk_101653D50;
    uint64_t v67 = v65;
  }
  sub_10001DAB4(v67, v66);
LABEL_40:
  uint64_t v71 = *(void **)(v0 + 976);
  uint64_t v72 = v71[3];
  uint64_t v73 = v71[4];
  sub_10001CD44(v71, v72);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v73 + 8) + 8) + 32))(v72);
LABEL_41:
  uint64_t v74 = *(void *)(v0 + 1544);
  uint64_t v75 = *(void *)(v0 + 1536);
  uint64_t v76 = *(void *)(v0 + 1320);
  uint64_t v77 = *(void **)(v0 + 976);
  id v78 = [objc_allocWithZone((Class)SPInternalSimpleBeacon) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v78 setIdentifier:isa];

  uint64_t v80 = v77[3];
  uint64_t v81 = v77[4];
  sub_10001CD44(v77, v80);
  uint64_t v82 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v81 + 176))(v80, v81);
  [v78 setType:v82];

  uint64_t v83 = v77[3];
  uint64_t v84 = v77[4];
  sub_10001CD44(v77, v83);
  (*(void (**)(uint64_t, uint64_t))(v84 + 192))(v83, v84);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v76, 1, v75) == 1)
  {
    Class v85 = 0;
  }
  else
  {
    uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v87 = *(void *)(v0 + 1536);
    uint64_t v88 = *(void *)(v0 + 1320);
    Class v85 = UUID._bridgeToObjectiveC()().super.isa;
    v86(v88, v87);
  }
  double v89 = *(double *)(v0 + 2544);
  uint64_t v90 = *(void *)(v0 + 2392);
  uint64_t v91 = *(void *)(v0 + 2384);
  uint64_t v92 = *(void *)(v0 + 2168);
  BOOL v93 = *(unsigned __int8 *)(v0 + 2694) != 5;
  [v78 setGroupIdentifier:v85];

  [v78 setPartIdentifier:255];
  [v78 setConnectionAllowed:v93];
  [v78 setTxPower:v89];
  Class v94 = UUID._bridgeToObjectiveC()().super.isa;
  [v78 setProductUUID:v94];

  [v78 setVendorId:v90];
  [v78 setProductId:v91];
  if (v92)
  {
    NSString v95 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v95 = 0;
  }
  uint64_t v96 = *(void *)(v0 + 2152);
  [v78 setModelName:v95];

  if (v96)
  {
    NSString v97 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v97 = 0;
  }
  [v78 setManufacturerName:v97];

  uint64_t v98 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2528);
  uint64_t v99 = *(void *)(v0 + 2040);
  uint64_t v100 = *(void *)(v0 + 1152);
  uint64_t v101 = *(void *)(v0 + 1008);
  [v78 setSerialNumber:0];
  [v78 setOwner:v99];
  id v102 = 0;
  if (!v98(v100, 1, v101))
  {
    uint64_t v103 = *(void *)(v0 + 1024);
    sub_1009C70F0(*(void *)(v0 + 1152), v103, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v102 = sub_100853D90();
    sub_1009C71C8(v103, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  uint64_t v104 = *(unsigned __int8 *)(v0 + 2689);
  uint64_t v105 = *(unsigned __int8 *)(v0 + 2688);
  uint64_t v106 = *(void *)(v0 + 2032);
  [v78 setAccessoryProductInfo:v102];

  [v78 setIsZeus:v104];
  [v78 setIsAppleAudioAccessory:v105];
  if (v106)
  {
    NSString v107 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v107 = 0;
  }
  uint64_t v108 = *(void *)(v0 + 2072);
  [v78 setDiscoveryId:v107];

  NSString v109 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v78 setSystemVersion:v109];

  if (v108)
  {
    NSString v110 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v110 = 0;
  }
  uint64_t v140 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  uint64_t v111 = *(void *)(v0 + 2440);
  unsigned int v135 = *(unsigned __int8 *)(v0 + 2693);
  uint64_t v112 = *(void *)(v0 + 2360);
  uint64_t v113 = *(void **)(v0 + 2352);
  unint64_t v114 = *(void **)(v0 + 2056);
  unsigned int v133 = *(unsigned __int8 *)(v0 + 2690);
  unint64_t v115 = *(void **)(v0 + 2048);
  int v138 = *(void **)(v0 + 2040);
  uint64_t v139 = *(void *)(v0 + 1584);
  uint64_t v136 = *(void *)(v0 + 1536);
  uint64_t v137 = *(void *)(v0 + 1560);
  uint64_t v134 = *(void *)(v0 + 1152);
  [v78 setName:v110];

  [v78 setBatteryLevel:v111];
  [v78 setConnectableDeviceCount:v112];
  [v78 setKeySyncRecord:v113];
  [v78 setLostModeInfo:v115];
  [v78 setRole:v114];
  sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
  sub_1009C5E18();
  Class v116 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v78 setSafeLocations:v116];

  [v78 setConnected:v133];
  [v78 setCanBeLeashedByHost:v135];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_1009C5B60(&qword_1016387E0, 255, type metadata accessor for SPBeaconTaskName);
  Class v117 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v78 setTaskInformation:v117];

  swift_release();
  v140(v137, v136);
  v140(v139, v136);

  sub_10001DAB4(v134, &qword_10163BBB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v118 = *(uint64_t (**)(id))(v0 + 8);
  return v118(v78);
}

uint64_t sub_1009BE8AC()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 2480);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1536);
  uint64_t v4 = *(void *)(v0 + 984);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 2676) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2676);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 2456))(v2, *(void *)(v0 + 1640), v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 2560) = v6;
  *(void *)(v6 + 16) = v4;
  v1(v6 + v5, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1009BE9A0, 0, 0);
}

uint64_t sub_1009BE9A0()
{
  uint64_t v1 = v0[320];
  uint64_t v2 = v0[306];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[321] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5E84;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[322] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009BEAAC;
  uint64_t v5 = v0[198];
  uint64_t v6 = v0[192];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C777C, v3, v6);
}

uint64_t sub_1009BEAAC()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 2512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1640);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1(v2, v3);
  return _swift_task_switch(sub_1009BEC68, v4, 0);
}

uint64_t sub_1009BEC68()
{
  if ((*(_WORD *)(v0 + 992) & 0x210) != 0)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 2584) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1009BFAF8;
    uint64_t v2 = *(void *)(v0 + 1392);
    return sub_100E62920(v2);
  }
  uint64_t v4 = *(void *)(v0 + 1392);
  swift_bridgeObjectRetain();
  sub_1009C71C8(v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  __int16 v89 = *(_WORD *)(v0 + 2680);
  uint64_t v5 = *(void *)(v0 + 1224);
  uint64_t v6 = *(void *)(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 504);
  sub_10001D010(v6, v0 + 584);
  char v7 = swift_dynamicCast();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  if (v7)
  {
    uint64_t v9 = *(void *)(v0 + 1248);
    uint64_t v10 = *(void *)(v0 + 1240);
    uint64_t v11 = *(void *)(v0 + 1216);
    uint64_t v12 = *(void *)(v0 + 1200);
    v8(v12, 0, 1, v11);
    sub_1009C715C(v12, v9, type metadata accessor for SharedBeaconRecord);
    uint64_t v13 = *(void *)(v9 + *(int *)(v11 + 44));
    sub_1009C70F0(v9, v10, type metadata accessor for SharedBeaconRecord);
    uint64_t v14 = *(void *)(v0 + 1240);
    if (v13 != -1)
    {
      sub_1009C71C8(v14, type metadata accessor for SharedBeaconRecord);
LABEL_11:
      sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
      goto LABEL_12;
    }
    uint64_t v18 = *(void *)(v14 + *(int *)(*(void *)(v0 + 1216) + 48));
    sub_1009C71C8(v14, type metadata accessor for SharedBeaconRecord);
    if (v18 != -1) {
      goto LABEL_11;
    }
    uint64_t v67 = *(void *)(v0 + 1248);
    uint64_t v68 = *(void *)(v0 + 1216);
    int v69 = *(unsigned __int8 *)(v67 + *(int *)(v68 + 64));
    sub_1009C70F0(v67, *(void *)(v0 + 1232), type metadata accessor for SharedBeaconRecord);
    uint64_t v70 = *(void *)(v0 + 1232);
    if (v69 == 4)
    {
      sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
    }
    else
    {
      int v71 = *(unsigned __int8 *)(v70 + *(int *)(v68 + 64));
      sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
      if (v71 != 1) {
        goto LABEL_11;
      }
    }
    uint64_t v72 = *(void *)(v0 + 1032);
    sub_10001D074(*(void *)(v0 + 1248) + *(int *)(*(void *)(v0 + 1216) + 80), v72, (uint64_t *)&unk_101653D30);
    uint64_t v73 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 48))(v72, 1, v73) == 1)
    {
      uint64_t v74 = *(void *)(v0 + 1544);
      uint64_t v75 = *(void *)(v0 + 1536);
      uint64_t v76 = *(void *)(v0 + 1328);
      sub_10001DAB4(*(void *)(v0 + 1032), (uint64_t *)&unk_101653D30);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, 1, 1, v75);
    }
    else
    {
      uint64_t v77 = *(void *)(v0 + 1032);
      sub_10001D074(v77 + *(int *)(v73 + 20), *(void *)(v0 + 1328), &qword_101638CF0);
      sub_1009C71C8(v77, type metadata accessor for SharedBeaconRecord.PropertyListContent);
    }
    uint64_t v78 = *(void *)(v0 + 1544);
    uint64_t v79 = *(void *)(v0 + 1536);
    uint64_t v80 = *(void *)(v0 + 1328);
    sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v80, 1, v79) != 1)
    {
      (*(void (**)(void, void, void))(v0 + 2480))(*(void *)(v0 + 1560), *(void *)(v0 + 1328), *(void *)(v0 + 1536));
      goto LABEL_13;
    }
    uint64_t v17 = *(void *)(v0 + 1328);
    char v16 = &qword_101638CF0;
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 1200);
    v8(v15, 1, 1, *(void *)(v0 + 1216));
    char v16 = (uint64_t *)&unk_101653D50;
    uint64_t v17 = v15;
  }
  sub_10001DAB4(v17, v16);
LABEL_12:
  uint64_t v19 = *(void **)(v0 + 976);
  uint64_t v20 = v19[3];
  uint64_t v21 = v19[4];
  sub_10001CD44(v19, v20);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v21 + 8) + 8) + 32))(v20);
LABEL_13:
  uint64_t v22 = *(void *)(v0 + 1544);
  uint64_t v23 = *(void *)(v0 + 1536);
  uint64_t v24 = *(void *)(v0 + 1320);
  uint64_t v25 = *(void **)(v0 + 976);
  id v26 = [objc_allocWithZone((Class)SPInternalSimpleBeacon) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v26 setIdentifier:isa];

  uint64_t v28 = v25[3];
  uint64_t v29 = v25[4];
  sub_10001CD44(v25, v28);
  uint64_t v30 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 176))(v28, v29);
  [v26 setType:v30];

  uint64_t v31 = v25[3];
  uint64_t v32 = v25[4];
  sub_10001CD44(v25, v31);
  (*(void (**)(uint64_t, uint64_t))(v32 + 192))(v31, v32);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v23) == 1)
  {
    Class v33 = 0;
  }
  else
  {
    unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v35 = *(void *)(v0 + 1536);
    uint64_t v36 = *(void *)(v0 + 1320);
    Class v33 = UUID._bridgeToObjectiveC()().super.isa;
    v34(v36, v35);
  }
  double v37 = *(double *)(v0 + 2544);
  uint64_t v38 = *(void *)(v0 + 2392);
  uint64_t v39 = *(void *)(v0 + 2384);
  uint64_t v40 = *(void *)(v0 + 2168);
  BOOL v41 = *(unsigned __int8 *)(v0 + 2694) != 5;
  [v26 setGroupIdentifier:v33];

  if ((v89 & 0x100) != 0) {
    uint64_t v42 = 255;
  }
  else {
    uint64_t v42 = v89;
  }
  [v26 setPartIdentifier:v42];
  [v26 setConnectionAllowed:v41];
  [v26 setTxPower:v37];
  Class v43 = UUID._bridgeToObjectiveC()().super.isa;
  [v26 setProductUUID:v43];

  [v26 setVendorId:v38];
  [v26 setProductId:v39];
  if (v40)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v44 = 0;
  }
  uint64_t v45 = *(void *)(v0 + 2152);
  [v26 setModelName:v44];

  if (v45)
  {
    NSString v46 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v46 = 0;
  }
  [v26 setManufacturerName:v46];

  unint64_t v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2528);
  uint64_t v48 = *(void *)(v0 + 2040);
  uint64_t v49 = *(void *)(v0 + 1152);
  uint64_t v50 = *(void *)(v0 + 1008);
  [v26 setSerialNumber:0];
  [v26 setOwner:v48];
  id v51 = 0;
  if (!v47(v49, 1, v50))
  {
    uint64_t v52 = *(void *)(v0 + 1024);
    sub_1009C70F0(*(void *)(v0 + 1152), v52, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v51 = sub_100853D90();
    sub_1009C71C8(v52, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  uint64_t v53 = *(unsigned __int8 *)(v0 + 2689);
  uint64_t v54 = *(unsigned __int8 *)(v0 + 2688);
  uint64_t v55 = *(void *)(v0 + 2032);
  [v26 setAccessoryProductInfo:v51];

  [v26 setIsZeus:v53];
  [v26 setIsAppleAudioAccessory:v54];
  if (v55)
  {
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v56 = 0;
  }
  NSString v57 = *(NSString *)(v0 + 2072);
  [v26 setDiscoveryId:v56];

  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 setSystemVersion:v58];

  if (v57)
  {
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  uint64_t v59 = *(void *)(v0 + 2440);
  unsigned int v83 = *(unsigned __int8 *)(v0 + 2693);
  uint64_t v60 = *(void *)(v0 + 2360);
  uint64_t v61 = *(void **)(v0 + 2352);
  uint64_t v62 = *(void **)(v0 + 2056);
  unsigned int v81 = *(unsigned __int8 *)(v0 + 2690);
  uint64_t v63 = *(void **)(v0 + 2048);
  uint64_t v86 = *(void **)(v0 + 2040);
  uint64_t v87 = *(void *)(v0 + 1584);
  uint64_t v84 = *(void *)(v0 + 1536);
  uint64_t v85 = *(void *)(v0 + 1560);
  uint64_t v82 = *(void *)(v0 + 1152);
  [v26 setName:v57];

  [v26 setBatteryLevel:v59];
  [v26 setConnectableDeviceCount:v60];
  [v26 setKeySyncRecord:v61];
  [v26 setLostModeInfo:v63];
  [v26 setRole:v62];
  sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
  sub_1009C5E18();
  Class v64 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setSafeLocations:v64];

  [v26 setConnected:v81];
  [v26 setCanBeLeashedByHost:v83];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_1009C5B60(&qword_1016387E0, 255, type metadata accessor for SPBeaconTaskName);
  Class v65 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v26 setTaskInformation:v65];

  swift_release();
  v88(v85, v84);
  v88(v87, v84);

  sub_10001DAB4(v82, &qword_10163BBB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v66 = *(uint64_t (**)(id))(v0 + 8);
  return v66(v26);
}

uint64_t sub_1009BFAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 1000);
  *(void *)(v3 + 2592) = a1;
  *(void *)(v3 + 2600) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009BFC14, v4, 0);
}

uint64_t sub_1009BFC14()
{
  uint64_t v88 = *(void *)(v0 + 2600);
  uint64_t v1 = *(void *)(v0 + 1392);
  swift_bridgeObjectRetain();
  sub_1009C71C8(v1, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  __int16 v89 = *(_WORD *)(v0 + 2680);
  uint64_t v2 = *(void *)(v0 + 1224);
  uint64_t v3 = *(void *)(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 504);
  sub_10001D010(v3, v0 + 584);
  char v4 = swift_dynamicCast();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  if ((v4 & 1) == 0)
  {
    uint64_t v12 = *(void *)(v0 + 1200);
    v5(v12, 1, 1, *(void *)(v0 + 1216));
    uint64_t v13 = (uint64_t *)&unk_101653D50;
    uint64_t v14 = v12;
LABEL_5:
    sub_10001DAB4(v14, v13);
LABEL_8:
    char v16 = *(void **)(v0 + 976);
    uint64_t v17 = v16[3];
    uint64_t v18 = v16[4];
    sub_10001CD44(v16, v17);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v17);
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v0 + 1248);
  uint64_t v7 = *(void *)(v0 + 1240);
  uint64_t v8 = *(void *)(v0 + 1216);
  uint64_t v9 = *(void *)(v0 + 1200);
  v5(v9, 0, 1, v8);
  sub_1009C715C(v9, v6, type metadata accessor for SharedBeaconRecord);
  uint64_t v10 = *(void *)(v6 + *(int *)(v8 + 44));
  sub_1009C70F0(v6, v7, type metadata accessor for SharedBeaconRecord);
  uint64_t v11 = *(void *)(v0 + 1240);
  if (v10 != -1)
  {
    sub_1009C71C8(v11, type metadata accessor for SharedBeaconRecord);
LABEL_7:
    sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
    goto LABEL_8;
  }
  uint64_t v15 = *(void *)(v11 + *(int *)(*(void *)(v0 + 1216) + 48));
  sub_1009C71C8(v11, type metadata accessor for SharedBeaconRecord);
  if (v15 != -1) {
    goto LABEL_7;
  }
  uint64_t v66 = *(void *)(v0 + 1248);
  uint64_t v67 = *(void *)(v0 + 1216);
  int v68 = *(unsigned __int8 *)(v66 + *(int *)(v67 + 64));
  sub_1009C70F0(v66, *(void *)(v0 + 1232), type metadata accessor for SharedBeaconRecord);
  uint64_t v69 = *(void *)(v0 + 1232);
  if (v68 == 4)
  {
    sub_1009C71C8(v69, type metadata accessor for SharedBeaconRecord);
  }
  else
  {
    int v70 = *(unsigned __int8 *)(v69 + *(int *)(v67 + 64));
    sub_1009C71C8(v69, type metadata accessor for SharedBeaconRecord);
    if (v70 != 1) {
      goto LABEL_7;
    }
  }
  uint64_t v71 = *(void *)(v0 + 1032);
  sub_10001D074(*(void *)(v0 + 1248) + *(int *)(*(void *)(v0 + 1216) + 80), v71, (uint64_t *)&unk_101653D30);
  uint64_t v72 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 1, v72) == 1)
  {
    uint64_t v73 = *(void *)(v0 + 1544);
    uint64_t v74 = *(void *)(v0 + 1536);
    uint64_t v75 = *(void *)(v0 + 1328);
    sub_10001DAB4(*(void *)(v0 + 1032), (uint64_t *)&unk_101653D30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 56))(v75, 1, 1, v74);
  }
  else
  {
    uint64_t v76 = *(void *)(v0 + 1032);
    sub_10001D074(v76 + *(int *)(v72 + 20), *(void *)(v0 + 1328), &qword_101638CF0);
    sub_1009C71C8(v76, type metadata accessor for SharedBeaconRecord.PropertyListContent);
  }
  uint64_t v77 = *(void *)(v0 + 1544);
  uint64_t v78 = *(void *)(v0 + 1536);
  uint64_t v79 = *(void *)(v0 + 1328);
  sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48))(v79, 1, v78) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 1328);
    uint64_t v13 = &qword_101638CF0;
    goto LABEL_5;
  }
  (*(void (**)(void, void, void))(v0 + 2480))(*(void *)(v0 + 1560), *(void *)(v0 + 1328), *(void *)(v0 + 1536));
LABEL_9:
  uint64_t v19 = *(void *)(v0 + 1544);
  uint64_t v20 = *(void *)(v0 + 1536);
  uint64_t v21 = *(void *)(v0 + 1320);
  uint64_t v22 = *(void **)(v0 + 976);
  id v23 = [objc_allocWithZone((Class)SPInternalSimpleBeacon) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v23 setIdentifier:isa];

  uint64_t v25 = v22[3];
  uint64_t v26 = v22[4];
  sub_10001CD44(v22, v25);
  os_log_type_t v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 176))(v25, v26);
  [v23 setType:v27];

  uint64_t v28 = v22[3];
  uint64_t v29 = v22[4];
  sub_10001CD44(v22, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 192))(v28, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v21, 1, v20) == 1)
  {
    Class v30 = 0;
  }
  else
  {
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v32 = *(void *)(v0 + 1536);
    uint64_t v33 = *(void *)(v0 + 1320);
    Class v30 = UUID._bridgeToObjectiveC()().super.isa;
    v31(v33, v32);
  }
  double v34 = *(double *)(v0 + 2544);
  uint64_t v35 = *(void *)(v0 + 2392);
  uint64_t v36 = *(void *)(v0 + 2384);
  uint64_t v37 = *(void *)(v0 + 2168);
  BOOL v38 = *(unsigned __int8 *)(v0 + 2694) != 5;
  [v23 setGroupIdentifier:v30];

  if ((v89 & 0x100) != 0) {
    uint64_t v39 = 255;
  }
  else {
    uint64_t v39 = v89;
  }
  [v23 setPartIdentifier:v39];
  [v23 setConnectionAllowed:v38];
  [v23 setTxPower:v34];
  Class v40 = UUID._bridgeToObjectiveC()().super.isa;
  [v23 setProductUUID:v40];

  [v23 setVendorId:v35];
  [v23 setProductId:v36];
  if (v37)
  {
    NSString v41 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v41 = 0;
  }
  uint64_t v42 = *(void *)(v0 + 2152);
  [v23 setModelName:v41];

  if (v42)
  {
    NSString v43 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v43 = 0;
  }
  [v23 setManufacturerName:v43];

  if (v88)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v44 = 0;
  }
  uint64_t v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2528);
  uint64_t v46 = *(void *)(v0 + 2040);
  uint64_t v47 = *(void *)(v0 + 1152);
  uint64_t v48 = *(void *)(v0 + 1008);
  [v23 setSerialNumber:v44];

  [v23 setOwner:v46];
  if (v45(v47, 1, v48))
  {
    id v49 = 0;
  }
  else
  {
    uint64_t v50 = *(void *)(v0 + 1024);
    sub_1009C70F0(*(void *)(v0 + 1152), v50, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v49 = sub_100853D90();
    sub_1009C71C8(v50, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  uint64_t v51 = *(unsigned __int8 *)(v0 + 2689);
  uint64_t v52 = *(unsigned __int8 *)(v0 + 2688);
  uint64_t v53 = *(void *)(v0 + 2032);
  [v23 setAccessoryProductInfo:v49];

  [v23 setIsZeus:v51];
  [v23 setIsAppleAudioAccessory:v52];
  if (v53)
  {
    NSString v54 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v54 = 0;
  }
  NSString v55 = *(NSString *)(v0 + 2072);
  [v23 setDiscoveryId:v54];

  NSString v56 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v23 setSystemVersion:v56];

  if (v55)
  {
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  uint64_t v57 = *(void *)(v0 + 2440);
  unsigned int v82 = *(unsigned __int8 *)(v0 + 2693);
  uint64_t v58 = *(void *)(v0 + 2360);
  uint64_t v59 = *(void **)(v0 + 2352);
  uint64_t v60 = *(void **)(v0 + 2056);
  unsigned int v80 = *(unsigned __int8 *)(v0 + 2690);
  uint64_t v61 = *(void **)(v0 + 2048);
  uint64_t v85 = *(void **)(v0 + 2040);
  uint64_t v86 = *(void *)(v0 + 1584);
  uint64_t v83 = *(void *)(v0 + 1536);
  uint64_t v84 = *(void *)(v0 + 1560);
  uint64_t v81 = *(void *)(v0 + 1152);
  [v23 setName:v55];

  [v23 setBatteryLevel:v57];
  [v23 setConnectableDeviceCount:v58];
  [v23 setKeySyncRecord:v59];
  [v23 setLostModeInfo:v61];
  [v23 setRole:v60];
  sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
  sub_1009C5E18();
  Class v62 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 setSafeLocations:v62];

  [v23 setConnected:v80];
  [v23 setCanBeLeashedByHost:v82];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_1009C5B60(&qword_1016387E0, 255, type metadata accessor for SPBeaconTaskName);
  Class v63 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 setTaskInformation:v63];

  swift_release();
  v87(v84, v83);
  v87(v86, v83);

  sub_10001DAB4(v81, &qword_10163BBB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v64 = *(uint64_t (**)(id))(v0 + 8);
  return v64(v23);
}

uint64_t sub_1009C0A58()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 2480);
  uint64_t v2 = *(void *)(v0 + 1632);
  uint64_t v3 = *(void *)(v0 + 1536);
  uint64_t v4 = *(void *)(v0 + 984);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 2676) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2676);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 2456))(v2, *(void *)(v0 + 1640), v3);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 2608) = v6;
  *(void *)(v6 + 16) = v4;
  v1(v6 + v5, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1009C0B4C, 0, 0);
}

uint64_t sub_1009C0B4C()
{
  uint64_t v1 = v0[326];
  uint64_t v2 = v0[306];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[327] = v3;
  v3[2] = v2;
  v3[3] = sub_1009C5E84;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[328] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1009C0C58;
  uint64_t v5 = v0[198];
  uint64_t v6 = v0[192];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1009C5E9C, v3, v6);
}

uint64_t sub_1009C0C58()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 2512);
  uint64_t v2 = *(void *)(*(void *)v0 + 1640);
  uint64_t v3 = *(void *)(*(void *)v0 + 1536);
  uint64_t v4 = *(void *)(*(void *)v0 + 1000);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1(v2, v3);
  return _swift_task_switch(sub_1009C0E14, v4, 0);
}

uint64_t sub_1009C0E14()
{
  if ((*(_WORD *)(v0 + 992) & 0x210) != 0)
  {
    static String.Encoding.utf8.getter();
    String.init(data:encoding:)();
    if (!v1) {
      Data.hexString.getter();
    }
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v3 = *(void *)(v0 + 1056);
  swift_bridgeObjectRetain();
  sub_1009C71C8(v3, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  uint64_t v4 = *(void *)(v0 + 1224);
  uint64_t v5 = *(void *)(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 504);
  sub_10001D010(v5, v0 + 584);
  char v6 = swift_dynamicCast();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  if ((v6 & 1) == 0)
  {
    uint64_t v14 = *(void *)(v0 + 1200);
    v7(v14, 1, 1, *(void *)(v0 + 1216));
    uint64_t v15 = (uint64_t *)&unk_101653D50;
    uint64_t v16 = v14;
LABEL_10:
    sub_10001DAB4(v16, v15);
LABEL_13:
    uint64_t v18 = *(void **)(v0 + 976);
    uint64_t v19 = v18[3];
    uint64_t v20 = v18[4];
    sub_10001CD44(v18, v19);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v20 + 8) + 8) + 32))(v19);
    goto LABEL_14;
  }
  uint64_t v8 = *(void *)(v0 + 1248);
  uint64_t v9 = *(void *)(v0 + 1240);
  uint64_t v10 = *(void *)(v0 + 1216);
  uint64_t v11 = *(void *)(v0 + 1200);
  v7(v11, 0, 1, v10);
  sub_1009C715C(v11, v8, type metadata accessor for SharedBeaconRecord);
  uint64_t v12 = *(void *)(v8 + *(int *)(v10 + 44));
  sub_1009C70F0(v8, v9, type metadata accessor for SharedBeaconRecord);
  uint64_t v13 = *(void *)(v0 + 1240);
  if (v12 != -1)
  {
    sub_1009C71C8(v13, type metadata accessor for SharedBeaconRecord);
LABEL_12:
    sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)(v13 + *(int *)(*(void *)(v0 + 1216) + 48));
  sub_1009C71C8(v13, type metadata accessor for SharedBeaconRecord);
  if (v17 != -1) {
    goto LABEL_12;
  }
  uint64_t v67 = *(void *)(v0 + 1248);
  uint64_t v68 = *(void *)(v0 + 1216);
  int v69 = *(unsigned __int8 *)(v67 + *(int *)(v68 + 64));
  sub_1009C70F0(v67, *(void *)(v0 + 1232), type metadata accessor for SharedBeaconRecord);
  uint64_t v70 = *(void *)(v0 + 1232);
  if (v69 == 4)
  {
    sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
  }
  else
  {
    int v71 = *(unsigned __int8 *)(v70 + *(int *)(v68 + 64));
    sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
    if (v71 != 1) {
      goto LABEL_12;
    }
  }
  uint64_t v72 = *(void *)(v0 + 1032);
  sub_10001D074(*(void *)(v0 + 1248) + *(int *)(*(void *)(v0 + 1216) + 80), v72, (uint64_t *)&unk_101653D30);
  uint64_t v73 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 48))(v72, 1, v73) == 1)
  {
    uint64_t v74 = *(void *)(v0 + 1544);
    uint64_t v75 = *(void *)(v0 + 1536);
    uint64_t v76 = *(void *)(v0 + 1328);
    sub_10001DAB4(*(void *)(v0 + 1032), (uint64_t *)&unk_101653D30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, 1, 1, v75);
  }
  else
  {
    uint64_t v77 = *(void *)(v0 + 1032);
    sub_10001D074(v77 + *(int *)(v73 + 20), *(void *)(v0 + 1328), &qword_101638CF0);
    sub_1009C71C8(v77, type metadata accessor for SharedBeaconRecord.PropertyListContent);
  }
  uint64_t v78 = *(void *)(v0 + 1544);
  uint64_t v79 = *(void *)(v0 + 1536);
  uint64_t v80 = *(void *)(v0 + 1328);
  sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v80, 1, v79) == 1)
  {
    uint64_t v16 = *(void *)(v0 + 1328);
    uint64_t v15 = &qword_101638CF0;
    goto LABEL_10;
  }
  (*(void (**)(void, void, void))(v0 + 2480))(*(void *)(v0 + 1560), *(void *)(v0 + 1328), *(void *)(v0 + 1536));
LABEL_14:
  uint64_t v21 = *(void *)(v0 + 1544);
  uint64_t v22 = *(void *)(v0 + 1536);
  uint64_t v23 = *(void *)(v0 + 1320);
  uint64_t v24 = *(void **)(v0 + 976);
  id v25 = [objc_allocWithZone((Class)SPInternalSimpleBeacon) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v25 setIdentifier:isa];

  uint64_t v27 = v24[3];
  uint64_t v28 = v24[4];
  sub_10001CD44(v24, v27);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 176))(v27, v28);
  [v25 setType:v29];

  uint64_t v30 = v24[3];
  uint64_t v31 = v24[4];
  sub_10001CD44(v24, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 192))(v30, v31);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) == 1)
  {
    Class v32 = 0;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v34 = *(void *)(v0 + 1536);
    uint64_t v35 = *(void *)(v0 + 1320);
    Class v32 = UUID._bridgeToObjectiveC()().super.isa;
    v33(v35, v34);
  }
  double v36 = *(double *)(v0 + 2544);
  uint64_t v37 = *(void *)(v0 + 2392);
  uint64_t v38 = *(void *)(v0 + 2384);
  uint64_t v39 = *(void *)(v0 + 2168);
  BOOL v40 = *(unsigned __int8 *)(v0 + 2694) != 5;
  [v25 setGroupIdentifier:v32];

  [v25 setPartIdentifier:255];
  [v25 setConnectionAllowed:v40];
  [v25 setTxPower:v36];
  Class v41 = UUID._bridgeToObjectiveC()().super.isa;
  [v25 setProductUUID:v41];

  [v25 setVendorId:v37];
  [v25 setProductId:v38];
  if (v39)
  {
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v42 = 0;
  }
  uint64_t v43 = *(void *)(v0 + 2152);
  [v25 setModelName:v42];

  if (v43)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v44 = 0;
  }
  [v25 setManufacturerName:v44];

  if (v2)
  {
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v45 = 0;
  }
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2528);
  uint64_t v47 = *(void *)(v0 + 2040);
  uint64_t v48 = *(void *)(v0 + 1152);
  uint64_t v49 = *(void *)(v0 + 1008);
  [v25 setSerialNumber:v45];

  [v25 setOwner:v47];
  if (v46(v48, 1, v49))
  {
    id v50 = 0;
  }
  else
  {
    uint64_t v51 = *(void *)(v0 + 1024);
    sub_1009C70F0(*(void *)(v0 + 1152), v51, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v50 = sub_100853D90();
    sub_1009C71C8(v51, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  uint64_t v52 = *(unsigned __int8 *)(v0 + 2689);
  uint64_t v53 = *(unsigned __int8 *)(v0 + 2688);
  uint64_t v54 = *(void *)(v0 + 2032);
  [v25 setAccessoryProductInfo:v50];

  [v25 setIsZeus:v52];
  [v25 setIsAppleAudioAccessory:v53];
  if (v54)
  {
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v55 = 0;
  }
  NSString v56 = *(NSString *)(v0 + 2072);
  [v25 setDiscoveryId:v55];

  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setSystemVersion:v57];

  if (v56)
  {
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  uint64_t v58 = *(void *)(v0 + 2440);
  unsigned int v83 = *(unsigned __int8 *)(v0 + 2693);
  uint64_t v59 = *(void *)(v0 + 2360);
  uint64_t v60 = *(void **)(v0 + 2352);
  uint64_t v61 = *(void **)(v0 + 2056);
  unsigned int v81 = *(unsigned __int8 *)(v0 + 2690);
  Class v62 = *(void **)(v0 + 2048);
  uint64_t v86 = *(void **)(v0 + 2040);
  uint64_t v87 = *(void *)(v0 + 1584);
  uint64_t v84 = *(void *)(v0 + 1536);
  uint64_t v85 = *(void *)(v0 + 1560);
  uint64_t v82 = *(void *)(v0 + 1152);
  [v25 setName:v56];

  [v25 setBatteryLevel:v58];
  [v25 setConnectableDeviceCount:v59];
  [v25 setKeySyncRecord:v60];
  [v25 setLostModeInfo:v62];
  [v25 setRole:v61];
  sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
  sub_1009C5E18();
  Class v63 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setSafeLocations:v63];

  [v25 setConnected:v81];
  [v25 setCanBeLeashedByHost:v83];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_1009C5B60(&qword_1016387E0, 255, type metadata accessor for SPBeaconTaskName);
  Class v64 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setTaskInformation:v64];

  swift_release();
  v88(v85, v84);
  v88(v87, v84);

  sub_10001DAB4(v82, &qword_10163BBB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v65 = *(uint64_t (**)(id))(v0 + 8);
  return v65(v25);
}

uint64_t sub_1009C1C98(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1000);
  *(void *)(*(void *)v1 + 2640) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1009C1DB0, v2, 0);
}

uint64_t sub_1009C1DB0()
{
  uint64_t v1 = *(void **)(v0 + 976);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_10001CD44(v1, v2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 8) + 8) + 32))(v2);
  uid_t v4 = getuid();
  sub_100DC5FC0(v4);
  return _swift_task_switch(sub_1009C1E64, 0, 0);
}

uint64_t sub_1009C1E64()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[331] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1009C1F18;
  uint64_t v2 = v0[197];
  uint64_t v3 = v0[196];
  return sub_10064B6F4((uint64_t)(v0 + 20), v2, v3);
}

uint64_t sub_1009C1F18()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2656) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1009C2F1C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = (void (*)(uint64_t, uint64_t))v2[314];
    uint64_t v6 = v2[197];
    uint64_t v7 = v2[196];
    uint64_t v8 = v2[192];
    uint64_t v9 = v2[125];
    swift_release();
    v5(v7, v8);
    v5(v6, v8);
    uint64_t v3 = sub_1009C207C;
    uint64_t v4 = v9;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_1009C207C()
{
  sub_10001D608(v0 + 160, v0 + 88, &qword_10163A110);
  uint64_t v1 = *(void *)(v0 + 1256);
  if (*(void *)(v0 + 96))
  {
    uint64_t v2 = *(void *)(v0 + 992);
    uint64_t v3 = *(void *)(v0 + 152);
    sub_1009C71C8(v1, type metadata accessor for SharedBeaconRecord);
    if ((v2 & 0x210) != 0) {
      swift_bridgeObjectRetain();
    }
    else {
      uint64_t v3 = 0;
    }
    swift_bridgeObjectRetain();
    sub_100090C20((uint64_t *)(v0 + 160));
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1009C71C8(v1, type metadata accessor for SharedBeaconRecord);
    uint64_t v3 = 0;
  }
  uint64_t v4 = *(void *)(v0 + 1224);
  uint64_t v5 = *(void *)(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 504);
  sub_10001D010(v5, v0 + 584);
  char v6 = swift_dynamicCast();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  if ((v6 & 1) == 0)
  {
    uint64_t v14 = *(void *)(v0 + 1200);
    v7(v14, 1, 1, *(void *)(v0 + 1216));
    uint64_t v15 = (uint64_t *)&unk_101653D50;
    uint64_t v16 = v14;
LABEL_11:
    sub_10001DAB4(v16, v15);
LABEL_14:
    uint64_t v18 = *(void **)(v0 + 976);
    uint64_t v19 = v18[3];
    uint64_t v20 = v18[4];
    sub_10001CD44(v18, v19);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v20 + 8) + 8) + 32))(v19);
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)(v0 + 1248);
  uint64_t v9 = *(void *)(v0 + 1240);
  uint64_t v10 = *(void *)(v0 + 1216);
  uint64_t v11 = *(void *)(v0 + 1200);
  v7(v11, 0, 1, v10);
  sub_1009C715C(v11, v8, type metadata accessor for SharedBeaconRecord);
  uint64_t v12 = *(void *)(v8 + *(int *)(v10 + 44));
  sub_1009C70F0(v8, v9, type metadata accessor for SharedBeaconRecord);
  uint64_t v13 = *(void *)(v0 + 1240);
  if (v12 != -1)
  {
    sub_1009C71C8(v13, type metadata accessor for SharedBeaconRecord);
LABEL_13:
    sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
    goto LABEL_14;
  }
  uint64_t v17 = *(void *)(v13 + *(int *)(*(void *)(v0 + 1216) + 48));
  sub_1009C71C8(v13, type metadata accessor for SharedBeaconRecord);
  if (v17 != -1) {
    goto LABEL_13;
  }
  uint64_t v67 = *(void *)(v0 + 1248);
  uint64_t v68 = *(void *)(v0 + 1216);
  int v69 = *(unsigned __int8 *)(v67 + *(int *)(v68 + 64));
  sub_1009C70F0(v67, *(void *)(v0 + 1232), type metadata accessor for SharedBeaconRecord);
  uint64_t v70 = *(void *)(v0 + 1232);
  if (v69 == 4)
  {
    sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
  }
  else
  {
    int v71 = *(unsigned __int8 *)(v70 + *(int *)(v68 + 64));
    sub_1009C71C8(v70, type metadata accessor for SharedBeaconRecord);
    if (v71 != 1) {
      goto LABEL_13;
    }
  }
  uint64_t v72 = *(void *)(v0 + 1032);
  sub_10001D074(*(void *)(v0 + 1248) + *(int *)(*(void *)(v0 + 1216) + 80), v72, (uint64_t *)&unk_101653D30);
  uint64_t v73 = type metadata accessor for SharedBeaconRecord.PropertyListContent(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 48))(v72, 1, v73) == 1)
  {
    uint64_t v74 = *(void *)(v0 + 1544);
    uint64_t v75 = *(void *)(v0 + 1536);
    uint64_t v76 = *(void *)(v0 + 1328);
    sub_10001DAB4(*(void *)(v0 + 1032), (uint64_t *)&unk_101653D30);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v74 + 56))(v76, 1, 1, v75);
  }
  else
  {
    uint64_t v77 = *(void *)(v0 + 1032);
    sub_10001D074(v77 + *(int *)(v73 + 20), *(void *)(v0 + 1328), &qword_101638CF0);
    sub_1009C71C8(v77, type metadata accessor for SharedBeaconRecord.PropertyListContent);
  }
  uint64_t v78 = *(void *)(v0 + 1544);
  uint64_t v79 = *(void *)(v0 + 1536);
  uint64_t v80 = *(void *)(v0 + 1328);
  sub_1009C71C8(*(void *)(v0 + 1248), type metadata accessor for SharedBeaconRecord);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v80, 1, v79) == 1)
  {
    uint64_t v16 = *(void *)(v0 + 1328);
    uint64_t v15 = &qword_101638CF0;
    goto LABEL_11;
  }
  (*(void (**)(void, void, void))(v0 + 2480))(*(void *)(v0 + 1560), *(void *)(v0 + 1328), *(void *)(v0 + 1536));
LABEL_15:
  uint64_t v21 = *(void *)(v0 + 1544);
  uint64_t v22 = *(void *)(v0 + 1536);
  uint64_t v23 = *(void *)(v0 + 1320);
  uint64_t v24 = *(void **)(v0 + 976);
  id v25 = [objc_allocWithZone((Class)SPInternalSimpleBeacon) init];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v25 setIdentifier:isa];

  uint64_t v27 = v24[3];
  uint64_t v28 = v24[4];
  sub_10001CD44(v24, v27);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 176))(v27, v28);
  [v25 setType:v29];

  uint64_t v30 = v24[3];
  uint64_t v31 = v24[4];
  sub_10001CD44(v24, v30);
  (*(void (**)(uint64_t, uint64_t))(v31 + 192))(v30, v31);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v23, 1, v22) == 1)
  {
    Class v32 = 0;
  }
  else
  {
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
    uint64_t v34 = *(void *)(v0 + 1536);
    uint64_t v35 = *(void *)(v0 + 1320);
    Class v32 = UUID._bridgeToObjectiveC()().super.isa;
    v33(v35, v34);
  }
  double v36 = *(double *)(v0 + 2544);
  uint64_t v37 = *(void *)(v0 + 2392);
  uint64_t v38 = *(void *)(v0 + 2384);
  uint64_t v39 = *(void *)(v0 + 2168);
  BOOL v40 = *(unsigned __int8 *)(v0 + 2694) != 5;
  [v25 setGroupIdentifier:v32];

  [v25 setPartIdentifier:255];
  [v25 setConnectionAllowed:v40];
  [v25 setTxPower:v36];
  Class v41 = UUID._bridgeToObjectiveC()().super.isa;
  [v25 setProductUUID:v41];

  [v25 setVendorId:v37];
  [v25 setProductId:v38];
  if (v39)
  {
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v42 = 0;
  }
  uint64_t v43 = *(void *)(v0 + 2152);
  [v25 setModelName:v42];

  if (v43)
  {
    NSString v44 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v44 = 0;
  }
  [v25 setManufacturerName:v44];

  if (v3)
  {
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v45 = 0;
  }
  uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2528);
  uint64_t v47 = *(void *)(v0 + 2040);
  uint64_t v48 = *(void *)(v0 + 1152);
  uint64_t v49 = *(void *)(v0 + 1008);
  [v25 setSerialNumber:v45];

  [v25 setOwner:v47];
  if (v46(v48, 1, v49))
  {
    id v50 = 0;
  }
  else
  {
    uint64_t v51 = *(void *)(v0 + 1024);
    sub_1009C70F0(*(void *)(v0 + 1152), v51, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
    id v50 = sub_100853D90();
    sub_1009C71C8(v51, (uint64_t (*)(void))type metadata accessor for BeaconProductInfoRecord);
  }
  uint64_t v52 = *(unsigned __int8 *)(v0 + 2689);
  uint64_t v53 = *(unsigned __int8 *)(v0 + 2688);
  uint64_t v54 = *(void *)(v0 + 2032);
  [v25 setAccessoryProductInfo:v50];

  [v25 setIsZeus:v52];
  [v25 setIsAppleAudioAccessory:v53];
  if (v54)
  {
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v55 = 0;
  }
  NSString v56 = *(NSString *)(v0 + 2072);
  [v25 setDiscoveryId:v55];

  NSString v57 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v25 setSystemVersion:v57];

  if (v56)
  {
    NSString v56 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  uint64_t v88 = *(void (**)(uint64_t, uint64_t))(v0 + 2512);
  uint64_t v58 = *(void *)(v0 + 2440);
  unsigned int v83 = *(unsigned __int8 *)(v0 + 2693);
  uint64_t v59 = *(void *)(v0 + 2360);
  uint64_t v60 = *(void **)(v0 + 2352);
  uint64_t v61 = *(void **)(v0 + 2056);
  unsigned int v81 = *(unsigned __int8 *)(v0 + 2690);
  Class v62 = *(void **)(v0 + 2048);
  uint64_t v86 = *(void **)(v0 + 2040);
  uint64_t v87 = *(void *)(v0 + 1584);
  uint64_t v84 = *(void *)(v0 + 1536);
  uint64_t v85 = *(void *)(v0 + 1560);
  uint64_t v82 = *(void *)(v0 + 1152);
  [v25 setName:v56];

  [v25 setBatteryLevel:v58];
  [v25 setConnectableDeviceCount:v59];
  [v25 setKeySyncRecord:v60];
  [v25 setLostModeInfo:v62];
  [v25 setRole:v61];
  sub_10001D4B0(0, (unint64_t *)&unk_101653D70);
  sub_1009C5E18();
  Class v63 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setSafeLocations:v63];

  [v25 setConnected:v81];
  [v25 setCanBeLeashedByHost:v83];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_1009C5B60(&qword_1016387E0, 255, type metadata accessor for SPBeaconTaskName);
  Class v64 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setTaskInformation:v64];

  swift_release();
  v88(v85, v84);
  v88(v87, v84);

  sub_10001DAB4(v82, &qword_10163BBB0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v65 = *(uint64_t (**)(id))(v0 + 8);
  return v65(v25);
}