Swift::Int sub_1002C1C58()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v1 = type metadata accessor for Date();
  v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v5 - 8);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*v0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  v8 = type metadata accessor for ShareInstruction();
  sub_100D1CDD8();
  Hasher._combine(_:)(v0[*(int *)(v8 + 28)]);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_1002C26A4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  sub_10001E2BC((uint64_t)&v0[*(int *)(v8 + 36)], (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    sub_1002C26A4((unint64_t *)&unk_10163ADF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return Hasher._finalize()();
}

Swift::Int sub_1002C1F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v8 - 8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*v2);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100D1CDD8();
  Hasher._combine(_:)(v2[*(int *)(a2 + 28)]);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_1002C26A4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  sub_10001E2BC((uint64_t)&v2[*(int *)(a2 + 36)], (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    Hasher._combine(_:)(1u);
    sub_1002C26A4((unint64_t *)&unk_10163ADF0, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return Hasher._finalize()();
}

uint64_t sub_1002C21F8()
{
  return sub_1002C26A4((unint64_t *)&unk_101640D50, (void (*)(uint64_t))type metadata accessor for ShareInstruction);
}

BOOL sub_1002C2240(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_10165C700);
  __chkstk_darwin(v8);
  v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  v19 = (char *)&v33 - v18;
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v34 = v5;
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)
    || (char v20 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v20 & 1) != 0))
  {
    v22 = (int *)type metadata accessor for ShareInstruction();
    if ((sub_100D20CEC((uint64_t)&a1[v22[6]], (uint64_t)&a2[v22[6]]) & 1) == 0) {
      return 0;
    }
    uint64_t v23 = v22[7];
    v24 = &a1[v23];
    int v25 = a1[v23];
    v26 = &a2[v23];
    if (v25 != *v26) {
      return 0;
    }
    if (*((void *)v24 + 1) == *((void *)v26 + 1) && *((void *)v24 + 2) == *((void *)v26 + 2)
      || (v27 = _stringCompareWithSmolCheck(_:_:expecting:)(), BOOL result = 0, (v27 & 1) != 0))
    {
      if (static UUID.== infix(_:_:)())
      {
        sub_10001E2BC((uint64_t)&a1[v22[9]], (uint64_t)v19);
        sub_10001E2BC((uint64_t)&a2[v22[9]], (uint64_t)v17);
        uint64_t v28 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_10001E2BC((uint64_t)v19, (uint64_t)v10);
        sub_10001E2BC((uint64_t)v17, v28);
        uint64_t v29 = v34;
        v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
        if (v30((uint64_t)v10, 1, v4) == 1)
        {
          sub_10001DAB4((uint64_t)v17, (uint64_t *)&unk_10163AC90);
          sub_10001DAB4((uint64_t)v19, (uint64_t *)&unk_10163AC90);
          if (v30(v28, 1, v4) == 1)
          {
            sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_10163AC90);
            return 1;
          }
        }
        else
        {
          sub_10001E2BC((uint64_t)v10, (uint64_t)v14);
          if (v30(v28, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v7, v28, v4);
            sub_1002C26A4(&qword_10163AFA0, (void (*)(uint64_t))&type metadata accessor for Date);
            char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
            v32 = *(void (**)(char *, uint64_t))(v29 + 8);
            v32(v7, v4);
            sub_10001DAB4((uint64_t)v17, (uint64_t *)&unk_10163AC90);
            sub_10001DAB4((uint64_t)v19, (uint64_t *)&unk_10163AC90);
            v32(v14, v4);
            sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_10163AC90);
            return (v31 & 1) != 0;
          }
          sub_10001DAB4((uint64_t)v17, (uint64_t *)&unk_10163AC90);
          sub_10001DAB4((uint64_t)v19, (uint64_t *)&unk_10163AC90);
          (*(void (**)(char *, uint64_t))(v29 + 8))(v14, v4);
        }
        sub_10001DAB4((uint64_t)v10, (uint64_t *)&unk_10165C700);
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002C26A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1002C26EC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1000361E0(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a3[5];
    v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13((char *)a1 + a3[6], (char *)a2 + a3[6], v12);
    v13((char *)a1 + a3[7], (char *)a2 + a3[7], v12);
    v13((char *)a1 + a3[8], (char *)a2 + a3[8], v12);
    uint64_t v14 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1002C284C(uint64_t a1, int *a2)
{
  sub_10001CFB8(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v6(a1 + a2[7], v5);
  v6(a1 + a2[8], v5);

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1002C2930(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000361E0(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], (char *)a2 + a3[6], v11);
  v12((char *)a1 + a3[7], (char *)a2 + a3[7], v11);
  v12((char *)a1 + a3[8], (char *)a2 + a3[8], v11);
  uint64_t v13 = a3[10];
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1002C2A40(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1000361E0(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_10001CFB8(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14((char *)a1 + a3[6], (char *)a2 + a3[6], v13);
  v14((char *)a1 + a3[7], (char *)a2 + a3[7], v13);
  v14((char *)a1 + a3[8], (char *)a2 + a3[8], v13);
  *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

char *sub_1002C2B68(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  unint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  uint64_t v11 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  a1[v11] = a2[v11];
  return a1;
}

uint64_t *sub_1002C2C68(uint64_t *a1, char *a2, int *a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  v12((char *)a1 + a3[6], &a2[a3[6]], v11);
  v12((char *)a1 + a3[7], &a2[a3[7]], v11);
  v12((char *)a1 + a3[8], &a2[a3[8]], v11);
  *(uint64_t *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[10]) = a2[a3[10]];
  return a1;
}

uint64_t sub_1002C2D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C2D94);
}

uint64_t sub_1002C2D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1002C2E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C2E6C);
}

uint64_t sub_1002C2E6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MemberSharingCircle()
{
  uint64_t result = qword_101640DB8;
  if (!qword_101640DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002C2F78()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1002C302C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  v85 = a2;
  uint64_t v3 = sub_10000588C(&qword_101638CF0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  v88 = (char *)v80 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v80 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)v80 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v80 - v12;
  uint64_t v90 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v90 - 8);
  uint64_t v15 = __chkstk_darwin(v90);
  v87 = (char *)v80 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  v19 = (char *)v80 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  v22 = (char *)v80 - v21;
  __chkstk_darwin(v20);
  v89 = (char *)v80 - v23;
  if (CKRecord.recordType.getter() == 0xD000000000000013 && v24 == 0x8000000101353BE0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v25 & 1) == 0)
    {
      sub_1002C5180();
      swift_allocError();
      unsigned char *v39 = 0;
      goto LABEL_13;
    }
  }
  v83 = v19;
  v84 = v22;
  id v26 = [a1 recordID];
  id v27 = [v26 recordName];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v29 = v90;
  if (v28(v13, 1, v90) != 1)
  {
    uint64_t v82 = v14;
    char v31 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v80[1] = v14 + 32;
    v81 = v31;
    v31(v89, v13, v29);
    v32 = a1;
    uint64_t v33 = (char *)[a1 encryptedValues];
    NSString v34 = String._bridgeToObjectiveC()();
    id v35 = [v33 objectForKeyedSubscript:v34];

    if (!v35) {
      goto LABEL_11;
    }
    unint64_t v93 = (unint64_t)v35;
    uint64_t v36 = sub_10000588C((uint64_t *)&unk_10163AE50);
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_11;
    }
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v37 = v90;
    if (v28(v11, 1, v90) == 1)
    {
      sub_100270E18((uint64_t)v11);
LABEL_11:
      sub_1002C5180();
      swift_allocError();
      unsigned char *v38 = 2;
      swift_willThrow();
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v82 + 8))(v89, v90);
      return;
    }
    v80[0] = v36;
    v81(v84, v11, v37);
    NSString v40 = String._bridgeToObjectiveC()();
    id v41 = [v33 objectForKeyedSubscript:v40];

    if (!v41) {
      goto LABEL_19;
    }
    unint64_t v93 = (unint64_t)v41;
    if ((swift_dynamicCast() & 1) == 0) {
      goto LABEL_19;
    }
    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v42 = v90;
    if (v28(v8, 1, v90) == 1)
    {
      sub_100270E18((uint64_t)v8);
LABEL_19:
      sub_1002C5180();
      swift_allocError();
      unsigned char *v43 = 3;
      swift_willThrow();
      swift_unknownObjectRelease();

      v44 = *(void (**)(char *, uint64_t))(v82 + 8);
      v45 = v84;
      uint64_t v46 = v90;
LABEL_20:
      v44(v45, v46);
      v44(v89, v46);
      return;
    }
    v81(v83, v8, v42);
    NSString v47 = String._bridgeToObjectiveC()();
    id v48 = [v33 objectForKeyedSubscript:v47];

    if (v48)
    {
      unint64_t v93 = (unint64_t)v48;
      if (swift_dynamicCast())
      {
        uint64_t v49 = (uint64_t)v88;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        uint64_t v50 = v90;
        if (v28((char *)v49, 1, v90) != 1)
        {
          v53 = v87;
          v81(v87, (char *)v49, v50);
          NSString v54 = String._bridgeToObjectiveC()();
          v88 = v33;
          id v55 = [v33 objectForKeyedSubscript:v54];

          uint64_t v57 = v82;
          v56 = v83;
          v58 = v32;
          if (v55 && (unint64_t v93 = (unint64_t)v55, (swift_dynamicCast() & 1) != 0))
          {
            uint64_t v60 = v91;
            unint64_t v59 = v92;
            type metadata accessor for PropertyListDecoder();
            swift_allocObject();
            PropertyListDecoder.init()();
            sub_10000588C(&qword_101640E20);
            sub_1002C4F18();
            uint64_t v61 = v86;
            dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
            if (v61)
            {
              swift_release();
              sub_10001CFB8(v60, v59);
              swift_unknownObjectRelease();

              v44 = *(void (**)(char *, uint64_t))(v57 + 8);
              v62 = v53;
            }
            else
            {
              uint64_t v86 = v60;
              unint64_t v64 = v59;
              swift_release();
              uint64_t v65 = v91;
              NSString v66 = String._bridgeToObjectiveC()();
              id v67 = [v88 objectForKeyedSubscript:v66];

              if (v67)
              {
                uint64_t v91 = (uint64_t)v67;
                if (swift_dynamicCast())
                {
                  LODWORD(v80[0]) = _s12searchpartyd20MessagingDestinationV0C4TypeO8rawValueAESgSi_tcfC_0(v93);
                  if (LOBYTE(v80[0]) != 6)
                  {
                    id v71 = [objc_allocWithZone((Class)NSKeyedArchiver) initRequiringSecureCoding:1];
                    [v32 encodeSystemFieldsWithCoder:v71];
                    [v71 finishEncoding];
                    id v72 = [v71 encodedData];
                    uint64_t v73 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v82 = v74;

                    sub_10001CFB8(v86, v64);
                    swift_unknownObjectRelease();
                    v75 = v85;
                    uint64_t v76 = v82;
                    uint64_t *v85 = v73;
                    v75[1] = v76;
                    v77 = (int *)type metadata accessor for MemberSharingCircle();
                    uint64_t v78 = v90;
                    v79 = v81;
                    v81((char *)v75 + v77[5], v89, v90);
                    v79((char *)v75 + v77[6], v84, v78);
                    v79((char *)v75 + v77[7], v83, v78);
                    v79((char *)v75 + v77[8], v87, v78);
                    *(uint64_t *)((char *)v75 + v77[9]) = v65;
                    *((unsigned char *)v75 + v77[10]) = v80[0];
                    return;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v57 = v82;
                  v58 = v32;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  uint64_t v57 = v82;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
              uint64_t v68 = v86;
              sub_1002C5180();
              swift_allocError();
              unsigned char *v69 = 6;
              swift_willThrow();
              sub_10001CFB8(v68, v59);
              swift_unknownObjectRelease();

              v44 = *(void (**)(char *, uint64_t))(v57 + 8);
              v62 = v87;
            }
            uint64_t v46 = v90;
            v44(v62, v90);
            v52 = v83;
          }
          else
          {
            sub_1002C5180();
            swift_allocError();
            unsigned char *v63 = 5;
            swift_willThrow();
            swift_unknownObjectRelease();

            v44 = *(void (**)(char *, uint64_t))(v57 + 8);
            uint64_t v46 = v90;
            v44(v53, v90);
            v52 = v56;
          }
          goto LABEL_26;
        }
        sub_100270E18(v49);
      }
    }
    sub_1002C5180();
    swift_allocError();
    unsigned char *v51 = 4;
    swift_willThrow();
    swift_unknownObjectRelease();

    v52 = v83;
    v44 = *(void (**)(char *, uint64_t))(v82 + 8);
    uint64_t v46 = v90;
LABEL_26:
    v44(v52, v46);
    v45 = v84;
    goto LABEL_20;
  }
  sub_100270E18((uint64_t)v13);
  sub_1002C5180();
  swift_allocError();
  unsigned char *v30 = 1;
LABEL_13:
  swift_willThrow();
}

unint64_t sub_1002C3B40(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x696669746E656469;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0x72656E776FLL;
      break;
    case 5:
      unint64_t result = 0x737265626D656DLL;
      break;
    case 6:
      unint64_t result = 0x6E61747065636361;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002C3C2C()
{
  return sub_1002C3B40(*v0);
}

uint64_t sub_1002C3C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002C5608(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C3C5C(uint64_t a1)
{
  unint64_t v2 = sub_1002C4E7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C3C98(uint64_t a1)
{
  unint64_t v2 = sub_1002C4E7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002C3CD8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001E384(v2, qword_10170DD78);
  sub_100010324(v0, (uint64_t)qword_10170DD78);
  type metadata accessor for BeaconStore(0);
  sub_100A9DB34((uint64_t)v4);
  URL.appendingPathComponent(_:isDirectory:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
}

uint64_t sub_1002C3E04(id *a1)
{
  id v1 = *a1;
  [*a1 encryptedValues];
  static os_log_type_t.debug.getter();
  if (qword_101637268 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_101342130;
  id v3 = v1;
  id v4 = [v3 description:1, 2];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  *(void *)(v2 + 56) = &type metadata for String;
  *(void *)(v2 + 64) = sub_10000B4CC();
  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 40) = v7;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  type metadata accessor for MemberSharingCircle();
  swift_bridgeObjectRetain();
  sub_10000588C(&qword_101640E20);
  sub_1002C4D3C();
  uint64_t v8 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v10 = v9;
  swift_getObjectType();
  swift_release();
  swift_bridgeObjectRelease();
  UUID.uuidString.getter();
  CKRecordKeyValueSetting.subscript.setter();
  UUID.uuidString.getter();
  CKRecordKeyValueSetting.subscript.setter();
  UUID.uuidString.getter();
  CKRecordKeyValueSetting.subscript.setter();
  sub_1000361E0(v8, v10);
  CKRecordKeyValueSetting.subscript.setter();
  CKRecordKeyValueSetting.subscript.setter();
  swift_unknownObjectRelease();
  return sub_10001CFB8(v8, v10);
}

uint64_t sub_1002C4220(void *a1)
{
  id v3 = v1;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101640E78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1002C4E7C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v11 = *v3;
  char v12 = 0;
  sub_100037BB4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for MemberSharingCircle();
    LOBYTE(v11) = 1;
    type metadata accessor for UUID();
    sub_1002C4ED0(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 2;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 3;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = 4;
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    *(void *)&long long v11 = *(void *)((char *)v3 + *(int *)(v9 + 36));
    char v12 = 5;
    sub_10000588C(&qword_101640E20);
    sub_1002C4D3C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    LOBYTE(v11) = *((unsigned char *)v3 + *(int *)(v9 + 40));
    char v12 = 6;
    sub_1002C512C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002C4530@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  uint64_t v37 = v4;
  uint64_t v5 = __chkstk_darwin(v3);
  id v35 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)&v31 - v11;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = sub_10000588C(&qword_101640E50);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for MemberSharingCircle();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  id v41 = a1;
  sub_10001CD44(a1, v21);
  sub_1002C4E7C();
  NSString v40 = v17;
  v22 = v42;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v41);
  }
  v32 = v9;
  uint64_t v33 = v20;
  uint64_t v42 = (int *)v18;
  char v45 = 0;
  sub_100037AA0();
  uint64_t v23 = v39;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v24 = v33;
  *uint64_t v33 = v43;
  LOBYTE(v43) = 1;
  sub_1002C4ED0((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v25 = v36;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  id v26 = (char *)v24 + v42[5];
  char v31 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  v31(v26, v14, v25);
  LOBYTE(v43) = 2;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v31((char *)v33 + v42[6], v12, v25);
  LOBYTE(v43) = 3;
  id v27 = v32;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  int v44 = 1;
  v31((char *)v33 + v42[7], v27, v25);
  LOBYTE(v43) = 4;
  uint64_t v28 = v35;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v29 = (uint64_t)v33;
  v31((char *)v33 + v42[8], v28, v25);
  sub_10000588C(&qword_101640E20);
  char v45 = 5;
  sub_1002C4F18();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)(v29 + v42[9]) = v43;
  char v45 = 6;
  sub_1002C5018();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v23);
  *(unsigned char *)(v29 + v42[10]) = v43;
  sub_1002C506C(v29, v34);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v41);
  return sub_1002C50D0(v29);
}

uint64_t sub_1002C4C30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002C4530(a1, a2);
}

uint64_t sub_1002C4C48(void *a1)
{
  return sub_1002C4220(a1);
}

uint64_t sub_1002C4C60(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1002C4ED0(&qword_101640E08, (void (*)(uint64_t))type metadata accessor for MemberSharingCircle);
  uint64_t result = sub_1002C4ED0(&qword_101640E10, (void (*)(uint64_t))type metadata accessor for MemberSharingCircle);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1002C4CE4(uint64_t a1)
{
  uint64_t result = sub_1002C4ED0(&qword_101640E18, (void (*)(uint64_t))type metadata accessor for MemberSharingCircle);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1002C4D3C()
{
  unint64_t result = qword_101640E28;
  if (!qword_101640E28)
  {
    sub_10000592C(&qword_101640E20);
    sub_1002C4ED0(&qword_10163B040, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1002C4DE8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E28);
  }
  return result;
}

unint64_t sub_1002C4DE8()
{
  unint64_t result = qword_101640E38;
  if (!qword_101640E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E38);
  }
  return result;
}

unint64_t sub_1002C4E3C()
{
  unint64_t result = qword_101640E40;
  if (!qword_101640E40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_101640E40);
  }
  return result;
}

unint64_t sub_1002C4E7C()
{
  unint64_t result = qword_101640E58;
  if (!qword_101640E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E58);
  }
  return result;
}

uint64_t sub_1002C4ED0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002C4F18()
{
  unint64_t result = qword_101640E60;
  if (!qword_101640E60)
  {
    sub_10000592C(&qword_101640E20);
    sub_1002C4ED0((unint64_t *)&qword_10163B010, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_1002C4FC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E60);
  }
  return result;
}

unint64_t sub_1002C4FC4()
{
  unint64_t result = qword_101640E68;
  if (!qword_101640E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E68);
  }
  return result;
}

unint64_t sub_1002C5018()
{
  unint64_t result = qword_101640E70;
  if (!qword_101640E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E70);
  }
  return result;
}

uint64_t sub_1002C506C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MemberSharingCircle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C50D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MemberSharingCircle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002C512C()
{
  unint64_t result = qword_10165F3F0;
  if (!qword_10165F3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165F3F0);
  }
  return result;
}

unint64_t sub_1002C5180()
{
  unint64_t result = qword_101640E88;
  if (!qword_101640E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E88);
  }
  return result;
}

BOOL sub_1002C51D4(uint64_t a1, uint64_t a2)
{
  if (_s12searchpartyd24KeyRepresentableInternalV23__derived_struct_equalsySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8)) & 1) != 0&& (uint64_t v4 = type metadata accessor for MemberSharingCircle(), (static UUID.== infix(_:_:)())&& (static UUID.== infix(_:_:)() & 1) != 0&& (static UUID.== infix(_:_:)() & 1) != 0&& (static UUID.== infix(_:_:)() & 1) != 0&& (sub_100DF62C0(*(void *)(a1 + *(int *)(v4 + 36)), *(void *)(a2 + *(int *)(v4 + 36))))
  {
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 40)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 40));
  }
  else
  {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for MemberSharingCircle.ConversionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C536CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MemberSharingCircle.ConversionError()
{
  return &type metadata for MemberSharingCircle.ConversionError;
}

unsigned char *storeEnumTagSinglePayload for MemberSharingCircle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C5470);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MemberSharingCircle.CodingKeys()
{
  return &type metadata for MemberSharingCircle.CodingKeys;
}

unint64_t sub_1002C54AC()
{
  unint64_t result = qword_101640E98;
  if (!qword_101640E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640E98);
  }
  return result;
}

unint64_t sub_1002C5504()
{
  unint64_t result = qword_101640EA0;
  if (!qword_101640EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640EA0);
  }
  return result;
}

unint64_t sub_1002C555C()
{
  unint64_t result = qword_101640EA8;
  if (!qword_101640EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640EA8);
  }
  return result;
}

unint64_t sub_1002C55B4()
{
  unint64_t result = qword_101640EB0;
  if (!qword_101640EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101640EB0);
  }
  return result;
}

uint64_t sub_1002C5608(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001013EEA50
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001013EE1B0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001013F7E70 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x72656E776FLL && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x737265626D656DLL && a2 == 0xE700000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E61747065636361 && a2 == 0xEF65746174536563)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1002C5900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002C5914);
}

uint64_t sub_1002C5914(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for FMNAccountType();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1002C59C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002C59D8);
}

void *sub_1002C59D8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  char v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMNAccountType();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SubmitEndpoint()
{
  uint64_t result = qword_101640F18;
  if (!qword_101640F18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002C5ACC()
{
  sub_10000588C(&qword_101639580);
  OS_dispatch_queue.sync<A>(execute:)();
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  URLComponents.path.setter();
  uint64_t v0 = (uint64_t (*)(uint64_t *, void))URLComponents.path.modify();
  v1._countAndFlagsBits = 0x74696D6275732FLL;
  v1._object = (void *)0xE700000000000000;
  String.append(_:)(v1);
  return v0(&v3, 0);
}

uint64_t sub_1002C5BCC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170DD90);
  sub_100010324(v0, (uint64_t)qword_10170DD90);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002C5C50(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = type metadata accessor for XPCActivity.Criteria.Options();
  v1[11] = v2;
  v1[12] = *(void *)(v2 - 8);
  v1[13] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for XPCActivity.Priority();
  v1[14] = v3;
  v1[15] = *(void *)(v3 - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_1002C5D6C, 0, 0);
}

uint64_t sub_1002C5D6C()
{
  (*(void (**)(void, void, void))(v0[15] + 104))(v0[16], enum case for XPCActivity.Priority.utility(_:), v0[14]);
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10170E390;
  v0[17] = qword_10170E390;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  void *v2 = v0;
  v2[1] = sub_1002C5E9C;
  return unsafeBlocking<A>(_:)(v0 + 6, sub_10001D704, v1, &type metadata for Configuration);
}

uint64_t sub_1002C5E9C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002C5FB4, 0, 0);
}

uint64_t sub_1002C5FB4()
{
  uint64_t v1 = sub_1010AB898(*(void *)(v0 + 48));
  uint64_t v2 = swift_bridgeObjectRelease();
  uint64_t v6 = (unsigned __int128)(v1 * (__int128)60) >> 64;
  *(void *)(v0 + 16) = 60 * v1;
  *(unsigned char *)(v0 + 24) = v6 != (60 * v1) >> 63;
  if (v6 == (60 * v1) >> 63)
  {
    uint64_t v7 = qword_10170E390;
    *(void *)(v0 + 152) = qword_10170E390;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1002C60D0;
    uint64_t v5 = &type metadata for Configuration;
    uint64_t v3 = sub_10001D704;
    uint64_t v2 = v0 + 56;
    uint64_t v4 = v7;
  }
  else
  {
    __break(1u);
  }
  return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
}

uint64_t sub_1002C60D0()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002C61E8, 0, 0);
}

uint64_t sub_1002C61E8()
{
  uint64_t v1 = sub_1010AB8C0(*(void *)(v0 + 56));
  uint64_t v2 = swift_bridgeObjectRelease();
  uint64_t v6 = (unsigned __int128)(v1 * (__int128)60) >> 64;
  *(void *)(v0 + 32) = 60 * v1;
  *(unsigned char *)(v0 + 40) = v6 != (60 * v1) >> 63;
  if (v6 == (60 * v1) >> 63)
  {
    uint64_t v7 = qword_10170E390;
    *(void *)(v0 + 168) = qword_10170E390;
    swift_retain();
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1002C6304;
    uint64_t v5 = &type metadata for Configuration;
    uint64_t v3 = sub_10001D704;
    uint64_t v2 = v0 + 64;
    uint64_t v4 = v7;
  }
  else
  {
    __break(1u);
  }
  return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
}

uint64_t sub_1002C6304()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002C641C, 0, 0);
}

uint64_t sub_1002C641C()
{
  uint64_t v1 = sub_1010AB898(v0[8]);
  uint64_t result = swift_bridgeObjectRelease();
  if ((unsigned __int128)(v1 * (__int128)60) >> 64 == (60 * v1) >> 63)
  {
    sub_10000588C(&qword_101641288);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_10134CDE0;
    static XPCActivity.Criteria.Options.wakeDevice.getter();
    static XPCActivity.Criteria.Options.powerNap.getter();
    static XPCActivity.Criteria.Options.allowBattery.getter();
    static XPCActivity.Criteria.Options.requiresNetwork.getter();
    static XPCActivity.Criteria.Options.requiresClassC.getter();
    v0[9] = v3;
    sub_1002F6E70(&qword_1016394C0, 255, (void (*)(uint64_t))&type metadata accessor for XPCActivity.Criteria.Options);
    sub_10000588C(&qword_101641290);
    sub_1002F6D2C();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    XPCActivity.Criteria.init(priority:repeating:delay:gracePeriod:interval:options:)();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C660C()
{
  *(void *)(v1 + 120) = v0;
  return _swift_task_switch(sub_1002C662C, v0, 0);
}

uint64_t sub_1002C662C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    void *v2 = v0;
    v2[1] = sub_1002C6768;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002C6768(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C6880, v2, 0);
}

uint64_t sub_1002C6880()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 136);
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170DD90);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No BeaconStoreActor available!", v8, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F23D0;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1002C6A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1002C6ABC;
  return sub_1002D51D8();
}

uint64_t sub_1002C6ABC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_1002C6C44;
  }
  else {
    uint64_t v3 = sub_1002C6BE4;
  }
  return _swift_task_switch(v3, v2, 0);
}

uint64_t sub_1002C6BE4()
{
  sub_1002D6644();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C6C44()
{
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170DD90);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to checkin xpc activity: %{public}@.", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002C6E48(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = sub_10000588C(&qword_10163BB20);
  v3[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OwnedBeaconGroup(0);
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[23] = v6;
  v3[24] = *(void *)(v6 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v3[27] = v7;
  void *v7 = v3;
  v7[1] = sub_1002C6FFC;
  v7[15] = v2;
  return _swift_task_switch(sub_1002C662C, v2, 0);
}

uint64_t sub_1002C6FFC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 128);
    uint64_t v6 = sub_1002C81E4;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v6 = sub_1002C7130;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002C7130()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 120);
  *(void *)(v0 + 240) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 248) = v6;
  *(void *)(v0 + 256) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  int v7 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 392) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 264) = v9;
  *(void *)(v9 + 16) = v1;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 272) = v10;
  *(void *)(v0 + 280) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1002C7248, 0, 0);
}

uint64_t sub_1002C7248()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5A00;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163BBE0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002C7364;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7344, v3, v5);
}

uint64_t sub_1002C7364()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C74D0, v1, 0);
}

uint64_t sub_1002C74D0()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (v0[10])
  {
    sub_10001CEB0(v1, (uint64_t)(v0 + 2));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[38] = v2;
    void *v2 = v0;
    v2[1] = sub_1002C7610;
    uint64_t v3 = v0[14];
    return sub_1002CC524(v3, (uint64_t)(v0 + 2));
  }
  else
  {
    sub_10001DAB4((uint64_t)v1, (uint64_t *)&unk_10163BBE0);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[40] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1002C77D0;
    uint64_t v6 = v0[16];
    v5[15] = v6;
    return _swift_task_switch(sub_1002C662C, v6, 0);
  }
}

uint64_t sub_1002C7610()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_1002C8270;
  }
  else {
    uint64_t v4 = sub_1002C773C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002C773C()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C77D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 128);
    uint64_t v6 = sub_1002C8304;
  }
  else
  {
    *(void *)(v4 + 336) = a1;
    uint64_t v6 = sub_1002C7904;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002C7904()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 272);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 120);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 392) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392);
  *(void *)(v0 + 344) = *(void *)(v1 + 136);
  v3(v4, v6, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 352) = v8;
  *(void *)(v8 + 16) = v1;
  v2(v8 + v7, v4, v5);
  swift_retain();
  return _swift_task_switch(sub_1002C79F8, 0, 0);
}

uint64_t sub_1002C79F8()
{
  uint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[45] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6748;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002C7AFC;
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100065510, v3, v6);
}

uint64_t sub_1002C7AFC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C7C68, v1, 0);
}

uint64_t sub_1002C7C68()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[20] + 48))(v1, 1, v0[19]) == 1)
  {
    sub_10001DAB4(v1, &qword_10163BB20);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[15];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170DD90);
    v2(v3, v5, v4);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[25];
    uint64_t v11 = v0[22];
    uint64_t v12 = v0[23];
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      v0[12] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[13] = sub_1008FA0F0(v14, v15, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Beacon/group does not exist for given UUID %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[25], v0[22]);
    }

    sub_1002F67B4();
    swift_allocError();
    *uint64_t v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    sub_1002F6EC4(v1, v0[21], type metadata accessor for OwnedBeaconGroup);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[47] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1002C8010;
    uint64_t v17 = v0[21];
    uint64_t v18 = v0[14];
    return sub_1002C8438(v18, v17);
  }
}

uint64_t sub_1002C8010()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_1002C8390;
  }
  else {
    uint64_t v4 = sub_1002C813C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002C813C()
{
  sub_1002F6F2C(*(void *)(v0 + 168), type metadata accessor for OwnedBeaconGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C81E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C8270()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C8304()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C8390()
{
  sub_1002F6F2C(*(void *)(v0 + 168), type metadata accessor for OwnedBeaconGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C8438(uint64_t a1, uint64_t a2)
{
  v3[38] = a2;
  v3[39] = v2;
  v3[37] = a1;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_101657CD0);
  v3[40] = v4;
  v3[41] = *(void *)(v4 - 8);
  v3[42] = swift_task_alloc();
  type metadata accessor for NotifyWhenFoundRecord();
  v3[43] = swift_task_alloc();
  v3[44] = sub_10000588C(&qword_10163B9F0);
  v3[45] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OwnedBeaconRecord();
  v3[46] = v5;
  v3[47] = *(void *)(v5 - 8);
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = sub_10000588C(&qword_10163BB30);
  v3[52] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[53] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[54] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[55] = v7;
  v3[56] = *(void *)(v7 + 64);
  v3[57] = swift_task_alloc();
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  return _swift_task_switch(sub_1002C86F8, v2, 0);
}

uint64_t sub_1002C86F8()
{
  uint64_t v81 = v0;
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 304);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for OwnedBeaconGroup(0) + 24);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 520) = v6;
  *(void *)(v0 + 528) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 504);
  uint64_t v8 = *(void *)(v0 + 512);
  uint64_t v9 = *(void *)(v0 + 496);
  uint64_t v10 = *(void *)(v0 + 432);
  uint64_t v11 = *(void *)(v0 + 296);
  uint64_t v12 = type metadata accessor for Logger();
  *(void *)(v0 + 536) = sub_100010324(v12, (uint64_t)qword_10170DD90);
  v6(v7, v8, v10);
  v6(v9, v11, v10);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = *(void *)(v0 + 496);
  uint64_t v16 = *(void *)(v0 + 504);
  uint64_t v19 = *(void *)(v0 + 432);
  uint64_t v18 = *(void *)(v0 + 440);
  if (v15)
  {
    uint64_t v77 = *(void *)(v0 + 496);
    uint64_t v20 = swift_slowAlloc();
    v80[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 141558531;
    *(void *)(v0 + 272) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2081;
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 280) = sub_1008FA0F0(v21, v22, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(void, void))(v18 + 8);
    uint64_t v23 = v18 + 8;
    uint64_t v24 = v25;
    v25(v16, v19);
    *(_WORD *)(v20 + 22) = 2082;
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 288) = sub_1008FA0F0(v26, v27, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v25(v77, v19);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "enableNotifyWhenFound for group %{private,mask.hash}s, commandId %{public}s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void))(v18 + 8);
    uint64_t v23 = v18 + 8;
    uint64_t v24 = v28;
    v28(*(void *)(v0 + 504), *(void *)(v0 + 432));
    v28(v17, v19);
  }

  *(void *)(v0 + 552) = v24;
  *(void *)(v0 + 544) = v23;
  uint64_t v29 = sub_1004D1434();
  *(void *)(v0 + 560) = v29;
  char v30 = *(unsigned char *)(v29 + 32);
  *(unsigned char *)(v0 + 872) = v30;
  uint64_t v31 = -1;
  uint64_t v32 = -1 << v30;
  uint64_t v33 = *(void *)(v29 + 56);
  if (-v32 < 64) {
    uint64_t v31 = ~(-1 << -(char)v32);
  }
  *(void *)(v0 + 568) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 584) = v24;
  *(void *)(v0 + 576) = v24;
  unint64_t v34 = v31 & v33;
  if (v34)
  {
    uint64_t v35 = 0;
    unint64_t v36 = __clz(__rbit64(v34));
    uint64_t v37 = (v34 - 1) & v34;
    goto LABEL_10;
  }
  unint64_t v48 = 63 - v32;
  if (v48 <= 0x7F) {
    goto LABEL_36;
  }
  unint64_t v49 = *(void *)(v29 + 64);
  if (!v49)
  {
    if (v48 >= 0xC0)
    {
      unint64_t v49 = *(void *)(v29 + 72);
      if (v49)
      {
        uint64_t v35 = 2;
        goto LABEL_20;
      }
      if (v48 >= 0x100)
      {
        unint64_t v49 = *(void *)(v29 + 80);
        if (v49)
        {
          uint64_t v35 = 3;
          goto LABEL_20;
        }
        if (v48 >= 0x140)
        {
          unint64_t v49 = *(void *)(v29 + 88);
          if (v49)
          {
            uint64_t v35 = 4;
            goto LABEL_20;
          }
          uint64_t v50 = 0;
          uint64_t v51 = v48 >> 6;
          if (v51 <= 5) {
            uint64_t v51 = 5;
          }
          uint64_t v52 = v51 - 5;
          while (v52 != v50)
          {
            unint64_t v49 = *(void *)(v29 + 96 + 8 * v50++);
            if (v49)
            {
              uint64_t v35 = v50 + 4;
              goto LABEL_20;
            }
          }
        }
      }
    }
LABEL_36:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 440) + 56))(*(void *)(v0 + 424), 1, 1, *(void *)(v0 + 432));
    goto LABEL_37;
  }
  uint64_t v35 = 1;
LABEL_20:
  uint64_t v37 = (v49 - 1) & v49;
  unint64_t v36 = __clz(__rbit64(v49)) + (v35 << 6);
LABEL_10:
  *(void *)(v0 + 600) = v37;
  *(void *)(v0 + 592) = v35;
  uint64_t v38 = *(void *)(v0 + 432);
  uint64_t v39 = *(void *)(v0 + 440);
  uint64_t v40 = *(void *)(v0 + 424);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 520))(v40, *(void *)(v29 + 48) + *(void *)(v39 + 72) * v36, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38) != 1)
  {
    uint64_t v41 = *(void *)(v0 + 488);
    uint64_t v42 = *(void *)(v0 + 432);
    uint64_t v43 = *(void *)(v0 + 440);
    uint64_t v44 = *(void *)(v0 + 424);
    char v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    *(void *)(v0 + 608) = v45;
    *(void *)(v0 + 616) = (v43 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v45(v41, v44, v42);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 160))
    {
      sub_10001CEB0((long long *)(v0 + 136), v0 + 176);
      sub_10001CD44((void *)(v0 + 176), *(void *)(v0 + 200));
      uint64_t v78 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      NSString v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 624) = v47;
      *NSString v47 = v0;
      v47[1] = sub_1002C913C;
      return v78();
    }
    else
    {
      __break(1u);
    }
    return result;
  }
LABEL_37:
  swift_release();
  uint64_t v53 = *(void *)(v0 + 568);
  uint64_t v54 = *(void *)(v53 + 16);
  *(void *)(v0 + 720) = v54;
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 368);
    uint64_t v55 = *(void *)(v0 + 376);
    int v57 = *(_DWORD *)(v55 + 80);
    *(_DWORD *)(v0 + 868) = v57;
    *(void *)(v0 + 728) = *(void *)(v55 + 72);
    *(void *)(v0 + 744) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 736) = 0;
    uint64_t v58 = *(void *)(v0 + 384);
    sub_1002F6E08(v53 + ((v57 + 32) & ~(unint64_t)v57), v58, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    UUID.init()();
    uint64_t v59 = v58 + *(int *)(v56 + 20);
    uint64_t v60 = (void *)swift_task_alloc();
    *(void *)(v0 + 752) = v60;
    *uint64_t v60 = v0;
    v60[1] = sub_1002CB084;
    uint64_t v61 = *(void *)(v0 + 472);
    uint64_t v62 = *(void *)(v0 + 344);
    return sub_1002CD864(v62, v61, v59);
  }
  else
  {
    v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
    uint64_t v64 = *(void *)(v0 + 512);
    uint64_t v65 = *(void *)(v0 + 456);
    uint64_t v66 = *(void *)(v0 + 432);
    swift_bridgeObjectRelease();
    v63(v65, v64, v66);
    id v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    BOOL v69 = os_log_type_enabled(v67, v68);
    uint64_t v70 = *(void *)(v0 + 456);
    uint64_t v71 = *(void *)(v0 + 432);
    if (v69)
    {
      v79 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
      uint64_t v72 = swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 141558275;
      *(void *)(v0 + 248) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v72 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 240) = sub_1008FA0F0(v73, v74, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v79(v70, v71);
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "No eligible member beacon to enable notify when found for group %{private,mask.hash}s", (uint8_t *)v72, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 456), *(void *)(v0 + 432));
    }

    sub_1002F67B4();
    swift_allocError();
    unsigned char *v75 = 0;
    swift_willThrow();
    (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v76 = *(uint64_t (**)(void))(v0 + 8);
    return v76();
  }
}

uint64_t sub_1002C913C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 312);
  *(void *)(*(void *)v1 + 632) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002C9254, v2, 0);
}

uint64_t sub_1002C9254()
{
  uint64_t v1 = (uint64_t)(v0 + 22);
  if (v0[79])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = v0[79];
    return _swift_task_switch(sub_1002C94F0, v2, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No BeaconStoreActor available!", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[69];
    uint64_t v7 = v0[61];
    uint64_t v8 = v0[54];

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    v6(v7, v8);
    swift_release();
    ((void (*)(void, void))v0[69])(v0[64], v0[54]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1002C94F0()
{
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 608);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v7 = *(void *)(v0 + 440);
  uint64_t v6 = *(void *)(v0 + 448);
  uint64_t v8 = *(void *)(v0 + 432);
  *(void *)(v0 + 640) = *(void *)(v1 + 136);
  v3(v5, v4, v8);
  int v9 = *(_DWORD *)(v7 + 80);
  *(_DWORD *)(v0 + 864) = v9;
  unint64_t v10 = (v9 + 24) & ~(unint64_t)v9;
  uint64_t v11 = v10 + v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v0 + 648) = v12;
  *(void *)(v12 + 16) = v1;
  v2(v12 + v10, v5, v8);
  *(unsigned char *)(v12 + v11) = 1;
  swift_retain();
  return _swift_task_switch(sub_1002C95F8, 0, 0);
}

uint64_t sub_1002C95F8()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[80];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[82] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F708C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[83] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002C9700;
  uint64_t v6 = v0[51];
  uint64_t v5 = v0[52];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7124, v3, v6);
}

uint64_t sub_1002C9700()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 632);
  return _swift_task_switch(sub_1002C9850, v2, 0);
}

uint64_t sub_1002C9850()
{
  uint64_t v2 = *(void *)(v0 + 408);
  uint64_t v1 = *(unsigned char **)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 312);
  *(unsigned char *)(v0 + 873) = *v1;
  sub_10001DAB4((uint64_t)&v1[*(int *)(v2 + 48)], (uint64_t *)&unk_10163AC90);
  swift_release();
  return _swift_task_switch(sub_1002C98E0, v3, 0);
}

uint64_t sub_1002C98E0()
{
  uint64_t v50 = v0;
  if (*(unsigned char *)(v0 + 873))
  {
    uint64_t result = (*(uint64_t (**)(void, void))(v0 + 552))(*(void *)(v0 + 488), *(void *)(v0 + 432));
    uint64_t v2 = *(void *)(v0 + 552);
    unint64_t v3 = *(void *)(v0 + 600);
    int64_t v4 = *(void *)(v0 + 592);
    *(void *)(v0 + 584) = v2;
    *(void *)(v0 + 576) = v2;
    if (v3)
    {
      uint64_t v5 = (v3 - 1) & v3;
      unint64_t v6 = __clz(__rbit64(v3)) | (v4 << 6);
      uint64_t v7 = *(void *)(v0 + 560);
      goto LABEL_4;
    }
    int64_t v18 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v19 = (unint64_t)((1 << *(unsigned char *)(v0 + 872)) + 63) >> 6;
      uint64_t v7 = *(void *)(v0 + 560);
      if (v18 >= v19) {
        goto LABEL_29;
      }
      uint64_t v20 = v7 + 56;
      unint64_t v21 = *(void *)(v7 + 56 + 8 * v18);
      ++v4;
      if (v21)
      {
LABEL_18:
        uint64_t v5 = (v21 - 1) & v21;
        unint64_t v6 = __clz(__rbit64(v21)) + (v4 << 6);
LABEL_4:
        *(void *)(v0 + 600) = v5;
        *(void *)(v0 + 592) = v4;
        uint64_t v8 = *(void *)(v0 + 432);
        uint64_t v9 = *(void *)(v0 + 440);
        uint64_t v10 = *(void *)(v0 + 424);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 520))(v10, *(void *)(v7 + 48) + *(void *)(v9 + 72) * v6, v8);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
        {
LABEL_30:
          swift_release();
          uint64_t v23 = *(void *)(v0 + 568);
          uint64_t v24 = *(void *)(v23 + 16);
          *(void *)(v0 + 720) = v24;
          if (v24)
          {
            uint64_t v26 = *(void *)(v0 + 368);
            uint64_t v25 = *(void *)(v0 + 376);
            int v27 = *(_DWORD *)(v25 + 80);
            *(_DWORD *)(v0 + 868) = v27;
            *(void *)(v0 + 728) = *(void *)(v25 + 72);
            *(void *)(v0 + 744) = _swiftEmptyArrayStorage;
            *(void *)(v0 + 736) = 0;
            uint64_t v28 = *(void *)(v0 + 384);
            sub_1002F6E08(v23 + ((v27 + 32) & ~(unint64_t)v27), v28, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            UUID.init()();
            uint64_t v29 = v28 + *(int *)(v26 + 20);
            char v30 = (void *)swift_task_alloc();
            *(void *)(v0 + 752) = v30;
            void *v30 = v0;
            v30[1] = sub_1002CB084;
            uint64_t v31 = *(void *)(v0 + 472);
            uint64_t v32 = *(void *)(v0 + 344);
            return sub_1002CD864(v32, v31, v29);
          }
          else
          {
            uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
            uint64_t v34 = *(void *)(v0 + 512);
            uint64_t v35 = *(void *)(v0 + 456);
            uint64_t v36 = *(void *)(v0 + 432);
            swift_bridgeObjectRelease();
            v33(v35, v34, v36);
            uint64_t v37 = Logger.logObject.getter();
            os_log_type_t v38 = static os_log_type_t.error.getter();
            BOOL v39 = os_log_type_enabled(v37, v38);
            uint64_t v40 = *(void *)(v0 + 456);
            uint64_t v41 = *(void *)(v0 + 432);
            if (v39)
            {
              unint64_t v48 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
              uint64_t v42 = swift_slowAlloc();
              uint64_t v49 = swift_slowAlloc();
              *(_DWORD *)uint64_t v42 = 141558275;
              *(void *)(v0 + 248) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v42 + 12) = 2081;
              sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 240) = sub_1008FA0F0(v43, v44, &v49);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              v48(v40, v41);
              _os_log_impl((void *)&_mh_execute_header, v37, v38, "No eligible member beacon to enable notify when found for group %{private,mask.hash}s", (uint8_t *)v42, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 456), *(void *)(v0 + 432));
            }

            sub_1002F67B4();
            swift_allocError();
            unsigned char *v45 = 0;
            swift_willThrow();
            (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
            return v46();
          }
        }
        uint64_t v13 = *(void *)(v0 + 488);
        uint64_t v14 = *(void *)(v0 + 432);
        uint64_t v15 = *(void *)(v0 + 440);
        uint64_t v16 = *(void *)(v0 + 424);
        uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
        *(void *)(v0 + 608) = v17;
        *(void *)(v0 + 616) = (v15 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        v17(v13, v16, v14);
        if (qword_1016375E8 != -1) {
          swift_once();
        }
        swift_beginAccess();
        uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
        if (*(void *)(v0 + 160))
        {
          sub_10001CEB0((long long *)(v0 + 136), v0 + 176);
          sub_10001CD44((void *)(v0 + 176), *(void *)(v0 + 200));
          NSString v47 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
          uint64_t v11 = (void *)swift_task_alloc();
          *(void *)(v0 + 624) = v11;
          *uint64_t v11 = v0;
          uint64_t v12 = (uint64_t (*)(uint64_t))sub_1002C913C;
          goto LABEL_12;
        }
LABEL_43:
        __break(1u);
        return result;
      }
      int64_t v4 = v18 + 1;
      if (v18 + 1 >= v19) {
        goto LABEL_29;
      }
      unint64_t v21 = *(void *)(v20 + 8 * v4);
      if (v21) {
        goto LABEL_18;
      }
      int64_t v4 = v18 + 2;
      if (v18 + 2 >= v19) {
        goto LABEL_29;
      }
      unint64_t v21 = *(void *)(v20 + 8 * v4);
      if (v21) {
        goto LABEL_18;
      }
      int64_t v22 = v18 + 3;
      if (v22 >= v19)
      {
LABEL_29:
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 440) + 56))(*(void *)(v0 + 424), 1, 1, *(void *)(v0 + 432));
        goto LABEL_30;
      }
      unint64_t v21 = *(void *)(v20 + 8 * v22);
      if (v21)
      {
        int64_t v4 = v22;
        goto LABEL_18;
      }
      while (1)
      {
        int64_t v4 = v22 + 1;
        if (__OFADD__(v22, 1)) {
          break;
        }
        if (v4 >= v19) {
          goto LABEL_29;
        }
        unint64_t v21 = *(void *)(v20 + 8 * v4);
        ++v22;
        if (v21) {
          goto LABEL_18;
        }
      }
    }
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 80)) {
    goto LABEL_42;
  }
  sub_10001CEB0((long long *)(v0 + 56), v0 + 96);
  sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
  NSString v47 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 672) = v11;
  *uint64_t v11 = v0;
  uint64_t v12 = sub_1002CA0B8;
LABEL_12:
  v11[1] = v12;
  return v47();
}

uint64_t sub_1002CA0B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 312);
  *(void *)(*(void *)v1 + 680) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CA1D0, v2, 0);
}

uint64_t sub_1002CA1D0()
{
  uint64_t v1 = (uint64_t)(v0 + 12);
  if (v0[85])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = v0[85];
    return _swift_task_switch(sub_1002CA46C, v2, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    unint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No BeaconStoreActor available!", v5, 2u);
      swift_slowDealloc();
    }
    unint64_t v6 = (void (*)(uint64_t, uint64_t))v0[72];
    uint64_t v7 = v0[61];
    uint64_t v8 = v0[54];

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    v6(v7, v8);
    swift_release();
    ((void (*)(void, void))v0[72])(v0[64], v0[54]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1002CA46C()
{
  uint64_t v1 = *(void *)(v0 + 680);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 608);
  unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
  uint64_t v5 = *(void *)(v0 + 480);
  uint64_t v4 = *(void *)(v0 + 488);
  uint64_t v6 = *(void *)(v0 + 432);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 864) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 864);
  *(void *)(v0 + 688) = *(void *)(v1 + 136);
  v3(v5, v4, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 696) = v8;
  *(void *)(v8 + 16) = v1;
  v2(v8 + v7, v5, v6);
  swift_retain();
  return _swift_task_switch(sub_1002CA564, 0, 0);
}

uint64_t sub_1002CA564()
{
  uint64_t v1 = v0[87];
  uint64_t v2 = v0[86];
  unint64_t v3 = (void *)swift_task_alloc();
  v0[88] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6998;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[89] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CA66C;
  uint64_t v6 = v0[44];
  uint64_t v5 = v0[45];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7340, v3, v6);
}

uint64_t sub_1002CA66C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CA7D8, v1, 0);
}

uint64_t sub_1002CA7D8()
{
  uint64_t v64 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 376) + 48))(v1, 1, *(void *)(v0 + 368)) == 1)
  {
    (*(void (**)(void, void))(v0 + 576))(*(void *)(v0 + 488), *(void *)(v0 + 432));
    uint64_t result = sub_10001DAB4(v1, &qword_10163B9F0);
    unint64_t v4 = *(void *)(v0 + 600);
    int64_t v5 = *(void *)(v0 + 592);
    uint64_t v2 = (const double *)(v0 + 576);
    float64x2_t v6 = vld1q_dup_f64(v2);
    *(float64x2_t *)(v0 + 576) = v6;
    if (v4)
    {
LABEL_3:
      uint64_t v7 = (v4 - 1) & v4;
      unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
      uint64_t v9 = *(void *)(v0 + 560);
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 392);
    uint64_t v13 = *(void *)(v0 + 400);
    sub_1002F6EC4(v1, v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_1002F6E08(v13, v14, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v16 = *(void *)(v0 + 568);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v16 = sub_100A6F6C4(0, *(void *)(v16 + 16) + 1, 1, *(void *)(v0 + 568));
    }
    unint64_t v18 = *(void *)(v16 + 16);
    unint64_t v17 = *(void *)(v16 + 24);
    if (v18 >= v17 >> 1) {
      unint64_t v16 = sub_100A6F6C4(v17 > 1, v18 + 1, 1, v16);
    }
    int64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 584);
    uint64_t v20 = *(void *)(v0 + 488);
    uint64_t v21 = *(void *)(v0 + 432);
    uint64_t v22 = *(void *)(v0 + 392);
    uint64_t v23 = *(void *)(v0 + 400);
    uint64_t v24 = *(void *)(v0 + 376);
    *(void *)(v16 + 16) = v18 + 1;
    sub_1002F6EC4(v22, v16+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v18, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_1002F6F2C(v23, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t result = v19(v20, v21);
    unint64_t v4 = *(void *)(v0 + 600);
    int64_t v5 = *(void *)(v0 + 592);
    long long v25 = *(_OWORD *)(v0 + 576);
    *(void *)(v0 + 568) = v16;
    *(_OWORD *)(v0 + 576) = v25;
    if (v4) {
      goto LABEL_3;
    }
  }
  int64_t v26 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  int64_t v27 = (unint64_t)((1 << *(unsigned char *)(v0 + 872)) + 63) >> 6;
  uint64_t v9 = *(void *)(v0 + 560);
  if (v26 >= v27)
  {
LABEL_31:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 440) + 56))(*(void *)(v0 + 424), 1, 1, *(void *)(v0 + 432));
    goto LABEL_32;
  }
  uint64_t v28 = v9 + 56;
  unint64_t v29 = *(void *)(v9 + 56 + 8 * v26);
  ++v5;
  if (!v29)
  {
    int64_t v5 = v26 + 1;
    if (v26 + 1 < v27)
    {
      unint64_t v29 = *(void *)(v28 + 8 * v5);
      if (v29) {
        goto LABEL_14;
      }
      int64_t v5 = v26 + 2;
      if (v26 + 2 < v27)
      {
        unint64_t v29 = *(void *)(v28 + 8 * v5);
        if (v29) {
          goto LABEL_14;
        }
        int64_t v36 = v26 + 3;
        if (v36 < v27)
        {
          unint64_t v29 = *(void *)(v28 + 8 * v36);
          if (v29)
          {
            int64_t v5 = v36;
            goto LABEL_14;
          }
          while (1)
          {
            int64_t v5 = v36 + 1;
            if (__OFADD__(v36, 1)) {
              break;
            }
            if (v5 >= v27) {
              goto LABEL_31;
            }
            unint64_t v29 = *(void *)(v28 + 8 * v5);
            ++v36;
            if (v29) {
              goto LABEL_14;
            }
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
      }
    }
    goto LABEL_31;
  }
LABEL_14:
  uint64_t v7 = (v29 - 1) & v29;
  unint64_t v8 = __clz(__rbit64(v29)) + (v5 << 6);
LABEL_4:
  *(void *)(v0 + 600) = v7;
  *(void *)(v0 + 592) = v5;
  uint64_t v10 = *(void *)(v0 + 432);
  uint64_t v11 = *(void *)(v0 + 440);
  uint64_t v12 = *(void *)(v0 + 424);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 520))(v12, *(void *)(v9 + 48) + *(void *)(v11 + 72) * v8, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1)
  {
LABEL_32:
    swift_release();
    uint64_t v37 = *(void *)(v0 + 568);
    uint64_t v38 = *(void *)(v37 + 16);
    *(void *)(v0 + 720) = v38;
    if (v38)
    {
      uint64_t v40 = *(void *)(v0 + 368);
      uint64_t v39 = *(void *)(v0 + 376);
      int v41 = *(_DWORD *)(v39 + 80);
      *(_DWORD *)(v0 + 868) = v41;
      *(void *)(v0 + 728) = *(void *)(v39 + 72);
      *(void *)(v0 + 744) = _swiftEmptyArrayStorage;
      *(void *)(v0 + 736) = 0;
      uint64_t v42 = *(void *)(v0 + 384);
      sub_1002F6E08(v37 + ((v41 + 32) & ~(unint64_t)v41), v42, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      UUID.init()();
      uint64_t v43 = v42 + *(int *)(v40 + 20);
      unint64_t v44 = (void *)swift_task_alloc();
      *(void *)(v0 + 752) = v44;
      *unint64_t v44 = v0;
      v44[1] = sub_1002CB084;
      uint64_t v45 = *(void *)(v0 + 472);
      uint64_t v46 = *(void *)(v0 + 344);
      return sub_1002CD864(v46, v45, v43);
    }
    else
    {
      NSString v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 520);
      uint64_t v48 = *(void *)(v0 + 512);
      uint64_t v49 = *(void *)(v0 + 456);
      uint64_t v50 = *(void *)(v0 + 432);
      swift_bridgeObjectRelease();
      v47(v49, v48, v50);
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.error.getter();
      BOOL v53 = os_log_type_enabled(v51, v52);
      uint64_t v54 = *(void *)(v0 + 456);
      uint64_t v55 = *(void *)(v0 + 432);
      if (v53)
      {
        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
        uint64_t v56 = swift_slowAlloc();
        uint64_t v63 = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 141558275;
        *(void *)(v0 + 248) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v56 + 12) = 2081;
        sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 240) = sub_1008FA0F0(v57, v58, &v63);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v62(v54, v55);
        _os_log_impl((void *)&_mh_execute_header, v51, v52, "No eligible member beacon to enable notify when found for group %{private,mask.hash}s", (uint8_t *)v56, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 456), *(void *)(v0 + 432));
      }

      sub_1002F67B4();
      swift_allocError();
      *uint64_t v59 = 0;
      swift_willThrow();
      (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v60 = *(uint64_t (**)(void))(v0 + 8);
      return v60();
    }
  }
  uint64_t v30 = *(void *)(v0 + 488);
  uint64_t v31 = *(void *)(v0 + 432);
  uint64_t v32 = *(void *)(v0 + 440);
  uint64_t v33 = *(void *)(v0 + 424);
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  *(void *)(v0 + 608) = v34;
  *(void *)(v0 + 616) = (v32 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v34(v30, v33, v31);
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 160))
  {
LABEL_44:
    __break(1u);
    return result;
  }
  sub_10001CEB0((long long *)(v0 + 136), v0 + 176);
  sub_10001CD44((void *)(v0 + 176), *(void *)(v0 + 200));
  uint64_t v61 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
  uint64_t v35 = (void *)swift_task_alloc();
  *(void *)(v0 + 624) = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_1002C913C;
  return v61();
}

uint64_t sub_1002CB084()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 760) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v2[69];
  uint64_t v4 = v2[59];
  uint64_t v5 = v2[54];
  if (v0)
  {
    uint64_t v6 = v2[39];
    v2[107] = v2[68] & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v3(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_1002CBEAC;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v9 = v2[39];
    v2[96] = v2[68] & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v3(v4, v5);
    uint64_t v7 = sub_1002CB218;
    uint64_t v8 = v9;
  }
  return _swift_task_switch(v7, v8, 0);
}

uint64_t sub_1002CB218()
{
  uint64_t v1 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 320);
  *(void *)(v0 + 40) = *(void *)(v0 + 368);
  *(void *)(v0 + 48) = sub_1002F6E70(&qword_101638DD0, 255, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
  uint64_t v5 = sub_10001D958((uint64_t *)(v0 + 16));
  sub_1002F6E08(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v6 = v3 + *(int *)(v4 + 48);
  sub_10001CEB0((long long *)(v0 + 16), v3);
  sub_1002F6E08(v2, v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v0 + 744);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    uint64_t v8 = sub_100A70280(0, *(void *)(v8 + 16) + 1, 1, *(void *)(v0 + 744));
  }
  unint64_t v10 = *(void *)(v8 + 16);
  unint64_t v9 = *(void *)(v8 + 24);
  if (v10 >= v9 >> 1) {
    uint64_t v8 = sub_100A70280(v9 > 1, v10 + 1, 1, v8);
  }
  *(void *)(v0 + 776) = v8;
  uint64_t v11 = *(void *)(v0 + 720);
  uint64_t v12 = *(void *)(v0 + 384);
  uint64_t v13 = *(void *)(v0 + 336);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 328);
  uint64_t v16 = *(void *)(v0 + 736) + 1;
  *(void *)(v8 + 16) = v10 + 1;
  sub_10001D608(v13, v8+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v10, (uint64_t *)&unk_101657CD0);
  sub_1002F6F2C(v14, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  sub_1002F6F2C(v12, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  if (v16 == v11)
  {
    swift_bridgeObjectRelease();
    unint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 784) = v17;
    void *v17 = v0;
    v17[1] = sub_1002CB54C;
    return sub_1002E6E44(v8);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 736) + 1;
    *(void *)(v0 + 744) = v8;
    *(void *)(v0 + 736) = v19;
    uint64_t v20 = *(void *)(v0 + 384);
    uint64_t v21 = *(void *)(v0 + 368);
    sub_1002F6E08(*(void *)(v0 + 568)+ ((*(unsigned __int8 *)(v0 + 868) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 868))+ *(void *)(v0 + 728) * v19, v20, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    UUID.init()();
    uint64_t v22 = v20 + *(int *)(v21 + 20);
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 752) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1002CB084;
    uint64_t v24 = *(void *)(v0 + 472);
    uint64_t v25 = *(void *)(v0 + 344);
    return sub_1002CD864(v25, v24, v22);
  }
}

uint64_t sub_1002CB54C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 792) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 312);
    uint64_t v4 = sub_1002CC01C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 312);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1002CB674;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002CB674()
{
  uint64_t v13 = v0;
  (*(void (**)(void, void, void))(v0 + 520))(*(void *)(v0 + 464), *(void *)(v0 + 512), *(void *)(v0 + 432));
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 552);
    uint64_t v3 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 432);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 256) = sub_1008FA0F0(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v11(v3, v4);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Enabled notify when found for group %s.", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 464), *(void *)(v0 + 432));
  }

  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 800) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002CB8C8;
  uint64_t v9 = *(void *)(v0 + 312);
  v8[15] = v9;
  return _swift_task_switch(sub_1002C662C, v9, 0);
}

uint64_t sub_1002CB8C8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 808) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 312);
    uint64_t v6 = sub_1002CC2A4;
  }
  else
  {
    *(void *)(v4 + 816) = a1;
    uint64_t v6 = sub_1002CB9FC;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CB9FC()
{
  uint64_t v1 = v0[102];
  v0[103] = *(void *)(v1 + 136);
  uint64_t v2 = swift_allocObject();
  v0[104] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 17;
  swift_retain();
  return _swift_task_switch(sub_1002CBA98, 0, 0);
}

uint64_t sub_1002CBA98()
{
  uint64_t v1 = v0[104];
  uint64_t v2 = v0[103];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[105] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F7370;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[106] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CBBA4;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002CBBA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 816);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CBCF4, v1, 0);
}

uint64_t sub_1002CBCF4()
{
  uint64_t v1 = *(void *)(v0 + 312);
  swift_release();
  return _swift_task_switch(sub_1002CBD60, v1, 0);
}

uint64_t sub_1002CBD60()
{
  (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CBEAC()
{
  sub_1002F6F2C(*(void *)(v0 + 384), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CC01C()
{
  swift_bridgeObjectRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 264) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing notifyWhenFound keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002CC2A4()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 264) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing notifyWhenFound keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  (*(void (**)(void, void))(v0 + 552))(*(void *)(v0 + 512), *(void *)(v0 + 432));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002CC524(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  type metadata accessor for NotifyWhenFoundRecord();
  v3[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  return _swift_task_switch(sub_1002CC630, v2, 0);
}

uint64_t sub_1002CC630()
{
  uint64_t v37 = v0;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[12];
  uint64_t v6 = type metadata accessor for Logger();
  v0[20] = sub_100010324(v6, (uint64_t)qword_10170DD90);
  sub_10001D010(v5, (uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  unint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[19];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[15];
    uint64_t v33 = v0[16];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558531;
    v0[8] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    log = v7;
    uint64_t v15 = v0[5];
    uint64_t v14 = v0[6];
    sub_10001CD44(v0 + 2, v15);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v14 + 8) + 8) + 32))(v15);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v32 = v10;
    unint64_t v18 = v17;
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v19(v11, v12);
    v0[9] = sub_1008FA0F0(v16, v18, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    *(_WORD *)(v13 + 22) = 2082;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[10] = sub_1008FA0F0(v20, v21, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19(v32, v12);
    _os_log_impl((void *)&_mh_execute_header, log, type, "enableNotifyWhenFound for %{private,mask.hash}s, commandId %{public}s", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v22 = v0[15];
    uint64_t v23 = v0[16];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v19(v10, v22);
  }
  v0[21] = v19;
  uint64_t v24 = (void *)v0[12];
  uint64_t v25 = v24[3];
  uint64_t v26 = v24[4];
  sub_10001CD44(v24, v25);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v26 + 8) + 8) + 32))(v25);
  int64_t v27 = (void *)swift_task_alloc();
  v0[22] = v27;
  *int64_t v27 = v0;
  v27[1] = sub_1002CCA40;
  uint64_t v28 = v0[17];
  uint64_t v29 = v0[14];
  uint64_t v30 = v0[11];
  return sub_1002CD864(v29, v30, v28);
}

uint64_t sub_1002CCA40()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v2[21];
  uint64_t v4 = v2[17];
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[13];
  v3(v4, v5);
  if (v0) {
    unint64_t v7 = sub_1002CD3E8;
  }
  else {
    unint64_t v7 = sub_1002CCBD0;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_1002CCBD0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  sub_10000588C(&qword_1016412A8);
  uint64_t v3 = (int *)(sub_10000588C((uint64_t *)&unk_101657CD0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[24] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  uint64_t v6 = v5 + v4 + v3[14];
  sub_10001D010(v2, v5 + v4);
  sub_1002F6E08(v1, v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[25] = v7;
  void *v7 = v0;
  v7[1] = sub_1002CCD40;
  return sub_1002E6E44(v5);
}

uint64_t sub_1002CCD40()
{
  uint64_t v2 = (void *)*v1;
  v2[26] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[13];
    unint64_t v4 = sub_1002CD474;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)swift_task_alloc();
    v2[27] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_1002CCEA8;
    uint64_t v3 = v2[13];
    v5[15] = v3;
    unint64_t v4 = sub_1002C662C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002CCEA8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 104);
    uint64_t v6 = sub_1002CD670;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v6 = sub_1002CCFDC;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CCFDC()
{
  uint64_t v1 = v0[29];
  v0[30] = *(void *)(v1 + 136);
  uint64_t v2 = swift_allocObject();
  v0[31] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 17;
  swift_retain();
  return _swift_task_switch(sub_1002CD078, 0, 0);
}

uint64_t sub_1002CD078()
{
  uint64_t v2 = v0[30];
  uint64_t v1 = v0[31];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[32] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F7370;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CD180;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002CD180()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 232);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CD2D0, v1, 0);
}

uint64_t sub_1002CD2D0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  return _swift_task_switch(sub_1002CD33C, v1, 0);
}

uint64_t sub_1002CD33C()
{
  sub_1002F6F2C(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CD3E8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CD474()
{
  swift_bridgeObjectRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing notifyWhenFound keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[14];

  swift_willThrow();
  sub_1002F6F2C(v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002CD670()
{
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error publishing notifyWhenFound keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[14];

  swift_willThrow();
  sub_1002F6F2C(v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002CD864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  sub_10000588C(&qword_101639E88);
  v4[9] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v4[10] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[11] = v6;
  v4[12] = *(void *)(v6 + 64);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  v4[15] = sub_10000588C(&qword_101660BB0);
  v4[16] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v4[17] = found;
  v4[18] = *(void *)(found - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v4[23] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1002CDA70;
  v8[15] = v3;
  return _swift_task_switch(sub_1002C662C, v3, 0);
}

uint64_t sub_1002CDA70(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 64);
    uint64_t v6 = sub_1002CED44;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    uint64_t v6 = sub_1002CDBA4;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CDBA4()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[7];
  v0[26] = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[27] = v6;
  v0[28] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  v0[29] = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1002CDCA8, 0, 0);
}

uint64_t sub_1002CDCA8()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[26];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5948;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[31] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CDDB0;
  uint64_t v6 = v0[15];
  uint64_t v5 = v0[16];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F733C, v3, v6);
}

uint64_t sub_1002CDDB0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CDF1C, v1, 0);
}

uint64_t sub_1002CDF1C()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[16];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[18] + 48))(v1, 1, v0[17]) == 1)
  {
    sub_10001DAB4(v1, &qword_101660BB0);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[27];
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[7];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170DD90);
    v2(v3, v5, v4);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[13];
    uint64_t v11 = v0[10];
    uint64_t v12 = v0[11];
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      v0[2] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_1008FA0F0(v14, v15, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Creating new NWF record for %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[13], v0[10]);
    }

    int64_t v27 = (void (*)(char *, uint64_t, uint64_t))v0[27];
    uint64_t v28 = (char *)v0[19];
    uint64_t v29 = v0[17];
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[7];
    v27(&v28[*(int *)(v29 + 20)], v0[6], v30);
    v27(&v28[*(int *)(v29 + 24)], v31, v30);
    *(_OWORD *)uint64_t v28 = xmmword_101348180;
    uint64_t v32 = (void *)swift_task_alloc();
    v0[32] = v32;
    void *v32 = v0;
    v32[1] = sub_1002CE50C;
    uint64_t v33 = v0[8];
    v32[15] = v33;
    return _swift_task_switch(sub_1002C662C, v33, 0);
  }
  else
  {
    sub_1002F6EC4(v1, v0[22], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v17 = v0[21];
    uint64_t v16 = v0[22];
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170DD90);
    sub_1002F6E08(v16, v17, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v22 = v0[21];
    if (v21)
    {
      uint64_t v23 = v0[20];
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      sub_1002F6E08(v22, v23, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
      uint64_t v25 = String.init<A>(describing:)();
      v0[4] = sub_1008FA0F0(v25, v26, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v22, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Found existing NWF record %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002F6F2C(v0[21], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    }

    sub_1002F6EC4(v0[22], v0[5], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = (uint64_t (*)(void))v0[1];
    return v34();
  }
}

uint64_t sub_1002CE50C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 264) = a1;
  *(void *)(v4 + 272) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 64);
  if (v1) {
    uint64_t v6 = sub_1002CEE08;
  }
  else {
    uint64_t v6 = sub_1002CE640;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CE640()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[9];
  *(void *)(swift_task_alloc() + 16) = v2;
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_1002F6F90, v3);
  uint64_t v4 = v0[33];
  if (v1)
  {
    uint64_t v5 = v0[19];
    swift_release();
    swift_task_dealloc();
    sub_1002F6F2C(v5, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_1002CE7D0, v4, 0);
  }
}

uint64_t sub_1002CE7D0()
{
  *(void *)(v0 + 280) = *(void *)(*(void *)(v0 + 264) + 128);
  return _swift_task_switch(sub_1002CE7F8, 0, 0);
}

uint64_t sub_1002CE7F8()
{
  uint64_t v1 = v0[35];
  uint64_t v2 = v0[9];
  uint64_t v3 = swift_task_alloc();
  v0[36] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CE8F0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_1000757B8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002CE8F0()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002CEB7C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1002CEA0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002CEA0C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_10001DAB4(*(void *)(v0 + 72), &qword_101639E88);
  swift_release();
  return _swift_task_switch(sub_1002CEA88, v1, 0);
}

uint64_t sub_1002CEA88()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[5];
  sub_1002D6644();
  sub_1002F6EC4(v1, v2, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002CEB7C()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CEBE8, v1, 0);
}

uint64_t sub_1002CEBE8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_10001DAB4(*(void *)(v0 + 72), &qword_101639E88);
  swift_release();
  return _swift_task_switch(sub_1002CEC64, v1, 0);
}

uint64_t sub_1002CEC64()
{
  sub_1002F6F2C(*(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CED44()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CEE08()
{
  sub_1002F6F2C(*(void *)(v0 + 152), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002CEEE8(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = sub_10000588C(&qword_10163BB20);
  v3[18] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OwnedBeaconGroup(0);
  v3[19] = v4;
  v3[20] = *(void *)(v4 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[22] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[23] = v6;
  v3[24] = *(void *)(v6 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  unint64_t v7 = (void *)swift_task_alloc();
  v3[27] = v7;
  void *v7 = v3;
  v7[1] = sub_1002CF09C;
  v7[15] = v2;
  return _swift_task_switch(sub_1002C662C, v2, 0);
}

uint64_t sub_1002CF09C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 128);
    uint64_t v6 = sub_1002F734C;
  }
  else
  {
    *(void *)(v4 + 232) = a1;
    uint64_t v6 = sub_1002CF1D0;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CF1D0()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 120);
  *(void *)(v0 + 240) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 248) = v6;
  *(void *)(v0 + 256) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  int v7 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 392) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 264) = v9;
  *(void *)(v9 + 16) = v1;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 272) = v10;
  *(void *)(v0 + 280) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1002CF2E8, 0, 0);
}

uint64_t sub_1002CF2E8()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[30];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5A00;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[37] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163BBE0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002CF404;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7344, v3, v5);
}

uint64_t sub_1002CF404()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CF570, v1, 0);
}

uint64_t sub_1002CF570()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (v0[10])
  {
    sub_10001CEB0(v1, (uint64_t)(v0 + 2));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[38] = v2;
    void *v2 = v0;
    v2[1] = sub_1002CF6B0;
    uint64_t v3 = v0[14];
    return sub_1002D3094(v3, (uint64_t)(v0 + 2));
  }
  else
  {
    sub_10001DAB4((uint64_t)v1, (uint64_t *)&unk_10163BBE0);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[40] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1002CF7DC;
    uint64_t v6 = v0[16];
    v5[15] = v6;
    return _swift_task_switch(sub_1002C662C, v6, 0);
  }
}

uint64_t sub_1002CF6B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_1002F7364;
  }
  else {
    uint64_t v4 = sub_1002F7368;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002CF7DC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 328) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 128);
    uint64_t v6 = sub_1002F7374;
  }
  else
  {
    *(void *)(v4 + 336) = a1;
    uint64_t v6 = sub_1002CF910;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002CF910()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 272);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 120);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 392) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392);
  *(void *)(v0 + 344) = *(void *)(v1 + 136);
  v3(v4, v6, v5);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 352) = v8;
  *(void *)(v8 + 16) = v1;
  v2(v8 + v7, v4, v5);
  swift_retain();
  return _swift_task_switch(sub_1002CFA04, 0, 0);
}

uint64_t sub_1002CFA04()
{
  uint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[45] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6748;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[46] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002CFB08;
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100065510, v3, v6);
}

uint64_t sub_1002CFB08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002CFC74, v1, 0);
}

uint64_t sub_1002CFC74()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[18];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[20] + 48))(v1, 1, v0[19]) == 1)
  {
    sub_10001DAB4(v1, &qword_10163BB20);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[31];
    uint64_t v3 = v0[25];
    uint64_t v4 = v0[22];
    uint64_t v5 = v0[15];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170DD90);
    v2(v3, v5, v4);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[25];
    uint64_t v11 = v0[22];
    uint64_t v12 = v0[23];
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      v0[12] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[13] = sub_1008FA0F0(v14, v15, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Beacon/group does not exist for given UUID %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[25], v0[22]);
    }

    sub_1002F67B4();
    swift_allocError();
    *os_log_type_t v20 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v21 = (uint64_t (*)(void))v0[1];
    return v21();
  }
  else
  {
    sub_1002F6EC4(v1, v0[21], type metadata accessor for OwnedBeaconGroup);
    uint64_t v16 = (void *)swift_task_alloc();
    v0[47] = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_1002D001C;
    uint64_t v17 = v0[21];
    uint64_t v18 = v0[14];
    return sub_1002D0148(v18, v17);
  }
}

uint64_t sub_1002D001C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_1002F736C;
  }
  else {
    uint64_t v4 = sub_1002F7338;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002D0148(uint64_t a1, uint64_t a2)
{
  v3[31] = a2;
  v3[32] = v2;
  v3[30] = a1;
  v3[33] = sub_10000588C(&qword_10163B9F0);
  v3[34] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OwnedBeaconRecord();
  v3[35] = v4;
  v3[36] = *(void *)(v4 - 8);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[41] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[42] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[43] = v6;
  v3[44] = *(void *)(v6 + 64);
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  v3[49] = swift_task_alloc();
  v3[50] = swift_task_alloc();
  v3[51] = swift_task_alloc();
  return _swift_task_switch(sub_1002D0348, v2, 0);
}

uint64_t sub_1002D0348()
{
  uint64_t v81 = v0;
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 336);
  uint64_t v3 = *(void *)(v0 + 344);
  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = v4 + *(int *)(type metadata accessor for OwnedBeaconGroup(0) + 24);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 416) = v6;
  *(void *)(v0 + 424) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v0 + 400);
  uint64_t v8 = *(void *)(v0 + 408);
  uint64_t v10 = *(void *)(v0 + 392);
  uint64_t v11 = *(void *)(v0 + 336);
  uint64_t v12 = type metadata accessor for Logger();
  *(void *)(v0 + 432) = sub_100010324(v12, (uint64_t)qword_10170DD90);
  v6(v9, v8, v11);
  v6(v10, v7, v11);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v17 = *(void *)(v0 + 392);
  uint64_t v16 = *(void *)(v0 + 400);
  uint64_t v19 = *(void *)(v0 + 336);
  uint64_t v18 = *(void *)(v0 + 344);
  if (v15)
  {
    uint64_t v77 = *(void *)(v0 + 392);
    uint64_t v20 = swift_slowAlloc();
    v80[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 141558531;
    *(void *)(v0 + 216) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2081;
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    os_log_type_t type = v14;
    *(void *)(v0 + 224) = sub_1008FA0F0(v21, v22, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void (**)(void, void))(v18 + 8);
    uint64_t v23 = v18 + 8;
    uint64_t v24 = v25;
    v25(v16, v19);
    *(_WORD *)(v20 + 22) = 2082;
    uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 232) = sub_1008FA0F0(v26, v27, v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v25(v77, v19);
    _os_log_impl((void *)&_mh_execute_header, v13, type, "disableNotifyWhenFound for %{private,mask.hash}s, commandId %{public}s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v28 = *(void (**)(void, void))(v18 + 8);
    uint64_t v23 = v18 + 8;
    uint64_t v24 = v28;
    v28(*(void *)(v0 + 400), *(void *)(v0 + 336));
    v28(v17, v19);
  }
  *(void *)(v0 + 440) = v23;
  *(void *)(v0 + 448) = v24;
  uint64_t v29 = sub_1004D1434();
  *(void *)(v0 + 456) = v29;
  char v30 = *(unsigned char *)(v29 + 32);
  *(unsigned char *)(v0 + 676) = v30;
  uint64_t v31 = -1;
  uint64_t v32 = -1 << v30;
  uint64_t v33 = *(void *)(v29 + 56);
  if (-v32 < 64) {
    uint64_t v31 = ~(-1 << -(char)v32);
  }
  *(void *)(v0 + 464) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 472) = v24;
  unint64_t v34 = v31 & v33;
  if (v34)
  {
    uint64_t v35 = 0;
    unint64_t v36 = __clz(__rbit64(v34));
    uint64_t v37 = (v34 - 1) & v34;
    goto LABEL_10;
  }
  unint64_t v48 = 63 - v32;
  if (v48 <= 0x7F) {
    goto LABEL_36;
  }
  unint64_t v49 = *(void *)(v29 + 64);
  if (!v49)
  {
    if (v48 >= 0xC0)
    {
      unint64_t v49 = *(void *)(v29 + 72);
      if (v49)
      {
        uint64_t v35 = 2;
        goto LABEL_20;
      }
      if (v48 >= 0x100)
      {
        unint64_t v49 = *(void *)(v29 + 80);
        if (v49)
        {
          uint64_t v35 = 3;
          goto LABEL_20;
        }
        if (v48 >= 0x140)
        {
          unint64_t v49 = *(void *)(v29 + 88);
          if (v49)
          {
            uint64_t v35 = 4;
            goto LABEL_20;
          }
          uint64_t v50 = 0;
          uint64_t v51 = v48 >> 6;
          if (v51 <= 5) {
            uint64_t v51 = 5;
          }
          uint64_t v52 = v51 - 5;
          while (v52 != v50)
          {
            unint64_t v49 = *(void *)(v29 + 96 + 8 * v50++);
            if (v49)
            {
              uint64_t v35 = v50 + 4;
              goto LABEL_20;
            }
          }
        }
      }
    }
LABEL_36:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 344) + 56))(*(void *)(v0 + 328), 1, 1, *(void *)(v0 + 336));
    goto LABEL_37;
  }
  uint64_t v35 = 1;
LABEL_20:
  uint64_t v37 = (v49 - 1) & v49;
  unint64_t v36 = __clz(__rbit64(v49)) + (v35 << 6);
LABEL_10:
  *(void *)(v0 + 480) = v35;
  *(void *)(v0 + 488) = v37;
  uint64_t v38 = *(void *)(v0 + 336);
  uint64_t v39 = *(void *)(v0 + 344);
  uint64_t v40 = *(void *)(v0 + 328);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 416))(v40, *(void *)(v29 + 48) + *(void *)(v39 + 72) * v36, v38);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v40, 1, v38) != 1)
  {
    uint64_t v41 = *(void *)(v0 + 384);
    uint64_t v42 = *(void *)(v0 + 336);
    uint64_t v43 = *(void *)(v0 + 344);
    uint64_t v44 = *(void *)(v0 + 328);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 32);
    *(void *)(v0 + 496) = v45;
    *(void *)(v0 + 504) = (v43 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v45(v41, v44, v42);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 80))
    {
      sub_10001CEB0((long long *)(v0 + 56), v0 + 96);
      sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
      log = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      NSString v47 = (void *)swift_task_alloc();
      *(void *)(v0 + 512) = v47;
      *NSString v47 = v0;
      v47[1] = sub_1002D0D8C;
      return log();
    }
    else
    {
      __break(1u);
    }
    return result;
  }
LABEL_37:
  swift_release();
  uint64_t v53 = *(void *)(v0 + 464);
  uint64_t v54 = *(void *)(v53 + 16);
  *(void *)(v0 + 560) = v54;
  if (v54)
  {
    uint64_t v56 = *(void *)(v0 + 280);
    uint64_t v55 = *(void *)(v0 + 288);
    int v57 = *(_DWORD *)(v55 + 80);
    *(_DWORD *)(v0 + 672) = v57;
    *(void *)(v0 + 568) = *(void *)(v55 + 72);
    *(_OWORD *)(v0 + 576) = 0u;
    uint64_t v58 = *(void *)(v0 + 304);
    sub_1002F6E08(v53 + ((v57 + 32) & ~(unint64_t)v57), v58, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(void *)(v0 + 40) = v56;
    *(void *)(v0 + 48) = sub_1002F6E70(&qword_101638DD0, 255, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
    uint64_t v59 = sub_10001D958((uint64_t *)(v0 + 16));
    sub_1002F6E08(v58, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v60 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v60;
    *uint64_t v60 = v0;
    v60[1] = sub_1002D1D10;
    uint64_t v61 = *(void *)(v0 + 240);
    return sub_1002D3094(v61, v0 + 16);
  }
  else
  {
    uint64_t v62 = *(void *)(v0 + 408);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v64 = *(void *)(v0 + 360);
    uint64_t v65 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();
    v63(v64, v62, v65);
    uint64_t v66 = Logger.logObject.getter();
    os_log_type_t v67 = static os_log_type_t.error.getter();
    BOOL v68 = os_log_type_enabled(v66, v67);
    uint64_t v69 = *(void *)(v0 + 360);
    uint64_t v70 = *(void *)(v0 + 336);
    if (v68)
    {
      os_log_t loga = *(os_log_t *)(v0 + 448);
      uint64_t v71 = swift_slowAlloc();
      v80[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v71 = 141558275;
      *(void *)(v0 + 176) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v71 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 184) = sub_1008FA0F0(v72, v73, v80);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      ((void (*)(uint64_t, uint64_t))loga)(v69, v70);
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "No eligible member beacon to disable notify when found for group %{private,mask.hash}s", (uint8_t *)v71, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 360), *(void *)(v0 + 336));
    }

    sub_1002F67B4();
    swift_allocError();
    *unint64_t v74 = 0;
    swift_willThrow();
    (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 408), *(void *)(v0 + 336));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v75 = *(uint64_t (**)(void))(v0 + 8);
    return v75();
  }
}

uint64_t sub_1002D0D8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 256);
  *(void *)(*(void *)v1 + 520) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D0EA4, v2, 0);
}

uint64_t sub_1002D0EA4()
{
  uint64_t v1 = (uint64_t)(v0 + 12);
  if (v0[65])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = v0[65];
    return _swift_task_switch(sub_1002D1114, v2, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No BeaconStoreActor available!", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[56];
    uint64_t v7 = v0[48];
    uint64_t v8 = v0[42];

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    v6(v7, v8);
    swift_release();
    ((void (*)(void, void))v0[56])(v0[51], v0[42]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1002D1114()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = (void (*)(unint64_t, uint64_t, uint64_t))v0[62];
  uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[52];
  uint64_t v5 = v0[47];
  uint64_t v4 = v0[48];
  uint64_t v6 = v0[43];
  uint64_t v7 = v0[42];
  v0[66] = *(void *)(v1 + 136);
  v3(v5, v4, v7);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  v0[67] = v9;
  *(void *)(v9 + 16) = v1;
  v2(v9 + v8, v5, v7);
  swift_retain();
  return _swift_task_switch(sub_1002D11FC, 0, 0);
}

uint64_t sub_1002D11FC()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[66];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[68] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6998;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[69] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D1304;
  uint64_t v6 = v0[33];
  uint64_t v5 = v0[34];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7340, v3, v6);
}

uint64_t sub_1002D1304()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 256);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D1470, v1, 0);
}

uint64_t sub_1002D1470()
{
  uint64_t v61 = v0;
  uint64_t v1 = *(void *)(v0 + 272);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 288) + 48))(v1, 1, *(void *)(v0 + 280)) == 1)
  {
    (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 384), *(void *)(v0 + 336));
    uint64_t result = sub_10001DAB4(v1, &qword_10163B9F0);
    int64_t v3 = *(void *)(v0 + 480);
    unint64_t v4 = *(void *)(v0 + 488);
    *(void *)(v0 + 472) = *(void *)(v0 + 448);
    if (v4)
    {
LABEL_3:
      uint64_t v5 = (v4 - 1) & v4;
      unint64_t v6 = __clz(__rbit64(v4)) | (v3 << 6);
      uint64_t v7 = *(void *)(v0 + 456);
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 312);
    uint64_t v11 = *(void *)(v0 + 320);
    sub_1002F6EC4(v1, v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_1002F6E08(v11, v12, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = *(void *)(v0 + 464);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v14 = sub_100A6F6C4(0, *(void *)(v14 + 16) + 1, 1, *(void *)(v0 + 464));
    }
    unint64_t v16 = *(void *)(v14 + 16);
    unint64_t v15 = *(void *)(v14 + 24);
    if (v16 >= v15 >> 1) {
      unint64_t v14 = sub_100A6F6C4(v15 > 1, v16 + 1, 1, v14);
    }
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v18 = *(void *)(v0 + 384);
    uint64_t v19 = *(void *)(v0 + 336);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v21 = *(void *)(v0 + 320);
    uint64_t v22 = *(void *)(v0 + 288);
    *(void *)(v14 + 16) = v16 + 1;
    sub_1002F6EC4(v20, v14+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_1002F6F2C(v21, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t result = v17(v18, v19);
    int64_t v3 = *(void *)(v0 + 480);
    unint64_t v4 = *(void *)(v0 + 488);
    uint64_t v23 = *(void *)(v0 + 472);
    *(void *)(v0 + 464) = v14;
    *(void *)(v0 + 472) = v23;
    if (v4) {
      goto LABEL_3;
    }
  }
  int64_t v24 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  int64_t v25 = (unint64_t)((1 << *(unsigned char *)(v0 + 676)) + 63) >> 6;
  uint64_t v7 = *(void *)(v0 + 456);
  if (v24 >= v25)
  {
LABEL_31:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 344) + 56))(*(void *)(v0 + 328), 1, 1, *(void *)(v0 + 336));
    goto LABEL_32;
  }
  uint64_t v26 = v7 + 56;
  unint64_t v27 = *(void *)(v7 + 56 + 8 * v24);
  ++v3;
  if (!v27)
  {
    int64_t v3 = v24 + 1;
    if (v24 + 1 < v25)
    {
      unint64_t v27 = *(void *)(v26 + 8 * v3);
      if (v27) {
        goto LABEL_14;
      }
      int64_t v3 = v24 + 2;
      if (v24 + 2 < v25)
      {
        unint64_t v27 = *(void *)(v26 + 8 * v3);
        if (v27) {
          goto LABEL_14;
        }
        int64_t v34 = v24 + 3;
        if (v34 < v25)
        {
          unint64_t v27 = *(void *)(v26 + 8 * v34);
          if (v27)
          {
            int64_t v3 = v34;
            goto LABEL_14;
          }
          while (1)
          {
            int64_t v3 = v34 + 1;
            if (__OFADD__(v34, 1)) {
              break;
            }
            if (v3 >= v25) {
              goto LABEL_31;
            }
            unint64_t v27 = *(void *)(v26 + 8 * v3);
            ++v34;
            if (v27) {
              goto LABEL_14;
            }
          }
LABEL_43:
          __break(1u);
          goto LABEL_44;
        }
      }
    }
    goto LABEL_31;
  }
LABEL_14:
  uint64_t v5 = (v27 - 1) & v27;
  unint64_t v6 = __clz(__rbit64(v27)) + (v3 << 6);
LABEL_4:
  *(void *)(v0 + 480) = v3;
  *(void *)(v0 + 488) = v5;
  uint64_t v8 = *(void *)(v0 + 336);
  uint64_t v9 = *(void *)(v0 + 344);
  uint64_t v10 = *(void *)(v0 + 328);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 416))(v10, *(void *)(v7 + 48) + *(void *)(v9 + 72) * v6, v8);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v10, 0, 1, v8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) == 1)
  {
LABEL_32:
    swift_release();
    uint64_t v35 = *(void *)(v0 + 464);
    uint64_t v36 = *(void *)(v35 + 16);
    *(void *)(v0 + 560) = v36;
    if (v36)
    {
      uint64_t v38 = *(void *)(v0 + 280);
      uint64_t v37 = *(void *)(v0 + 288);
      int v39 = *(_DWORD *)(v37 + 80);
      *(_DWORD *)(v0 + 672) = v39;
      *(void *)(v0 + 568) = *(void *)(v37 + 72);
      *(_OWORD *)(v0 + 576) = 0u;
      uint64_t v40 = *(void *)(v0 + 304);
      sub_1002F6E08(v35 + ((v39 + 32) & ~(unint64_t)v39), v40, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      *(void *)(v0 + 40) = v38;
      *(void *)(v0 + 48) = sub_1002F6E70(&qword_101638DD0, 255, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
      uint64_t v41 = sub_10001D958((uint64_t *)(v0 + 16));
      sub_1002F6E08(v40, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v42 = (void *)swift_task_alloc();
      *(void *)(v0 + 592) = v42;
      *uint64_t v42 = v0;
      v42[1] = sub_1002D1D10;
      uint64_t v43 = *(void *)(v0 + 240);
      return sub_1002D3094(v43, v0 + 16);
    }
    else
    {
      uint64_t v44 = *(void *)(v0 + 408);
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
      uint64_t v46 = *(void *)(v0 + 360);
      uint64_t v47 = *(void *)(v0 + 336);
      swift_bridgeObjectRelease();
      v45(v46, v44, v47);
      unint64_t v48 = Logger.logObject.getter();
      os_log_type_t v49 = static os_log_type_t.error.getter();
      BOOL v50 = os_log_type_enabled(v48, v49);
      uint64_t v51 = *(void *)(v0 + 360);
      uint64_t v52 = *(void *)(v0 + 336);
      if (v50)
      {
        uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
        uint64_t v53 = swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 141558275;
        *(void *)(v0 + 176) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v53 + 12) = 2081;
        sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 184) = sub_1008FA0F0(v54, v55, &v60);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v59(v51, v52);
        _os_log_impl((void *)&_mh_execute_header, v48, v49, "No eligible member beacon to disable notify when found for group %{private,mask.hash}s", (uint8_t *)v53, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 360), *(void *)(v0 + 336));
      }

      sub_1002F67B4();
      swift_allocError();
      unsigned char *v56 = 0;
      swift_willThrow();
      (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 408), *(void *)(v0 + 336));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      int v57 = *(uint64_t (**)(void))(v0 + 8);
      return v57();
    }
  }
  uint64_t v28 = *(void *)(v0 + 384);
  uint64_t v29 = *(void *)(v0 + 336);
  uint64_t v30 = *(void *)(v0 + 344);
  uint64_t v31 = *(void *)(v0 + 328);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
  *(void *)(v0 + 496) = v32;
  *(void *)(v0 + 504) = (v30 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v32(v28, v31, v29);
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 80))
  {
LABEL_44:
    __break(1u);
    return result;
  }
  sub_10001CEB0((long long *)(v0 + 56), v0 + 96);
  sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
  uint64_t v58 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 512) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1002D0D8C;
  return v58();
}

uint64_t sub_1002D1D10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 600) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 256);
    unint64_t v4 = sub_1002D28A8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 256);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 16);
    unint64_t v4 = sub_1002D1E38;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002D1E38()
{
  uint64_t v24 = v0;
  sub_1002F6F2C(*(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  *(void *)(v0 + 608) = *(void *)(v0 + 576);
  uint64_t v1 = *(void *)(v0 + 584) + 1;
  if (v1 == *(void *)(v0 + 560))
  {
    uint64_t v2 = *(void *)(v0 + 408);
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v4 = *(void *)(v0 + 368);
    uint64_t v5 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();
    v3(v4, v2, v5);
    unint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 368);
    uint64_t v10 = *(void *)(v0 + 336);
    if (v8)
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
      uint64_t v11 = swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 141558275;
      *(void *)(v0 + 208) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v11 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 200) = sub_1008FA0F0(v12, v13, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v22(v9, v10);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Disabled notify when found for group %{private,mask.hash}s.", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 368), *(void *)(v0 + 336));
    }

    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_1002D221C;
    uint64_t v21 = *(void *)(v0 + 256);
    v20[15] = v21;
    return _swift_task_switch(sub_1002C662C, v21, 0);
  }
  else
  {
    *(void *)(v0 + 584) = v1;
    uint64_t v14 = *(void *)(v0 + 304);
    uint64_t v15 = *(void *)(v0 + 280);
    sub_1002F6E08(*(void *)(v0 + 464)+ ((*(unsigned __int8 *)(v0 + 672) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 672))+ *(void *)(v0 + 568) * v1, v14, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(void *)(v0 + 40) = v15;
    *(void *)(v0 + 48) = sub_1002F6E70(&qword_101638DD0, 255, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
    unint64_t v16 = sub_10001D958((uint64_t *)(v0 + 16));
    sub_1002F6E08(v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v17;
    void *v17 = v0;
    v17[1] = sub_1002D1D10;
    uint64_t v18 = *(void *)(v0 + 240);
    return sub_1002D3094(v18, v0 + 16);
  }
}

uint64_t sub_1002D221C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 624) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 256);
    unint64_t v6 = sub_1002D2F58;
  }
  else
  {
    *(void *)(v4 + 632) = a1;
    unint64_t v6 = sub_1002D2350;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002D2350()
{
  uint64_t v1 = v0[79];
  v0[80] = *(void *)(v1 + 136);
  uint64_t v2 = swift_allocObject();
  v0[81] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 17;
  swift_retain();
  return _swift_task_switch(sub_1002D23EC, 0, 0);
}

uint64_t sub_1002D23EC()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[80];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[82] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F7370;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[83] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D24F8;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002D24F8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 632);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D2648, v1, 0);
}

uint64_t sub_1002D2648()
{
  uint64_t v1 = *(void *)(v0 + 256);
  swift_release();
  return _swift_task_switch(sub_1002D26B4, v1, 0);
}

uint64_t sub_1002D26B4()
{
  if (*(void *)(v0 + 608)) {
    swift_willThrow();
  }
  (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 408), *(void *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D28A8()
{
  uint64_t v40 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 304);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  sub_1002F6E08(v2, v3, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v37 = *(void *)(v0 + 304);
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v36 = (void *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558531;
    *(void *)(v0 + 192) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 160) = sub_1008FA0F0(v8, v9, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v6, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(_WORD *)(v7 + 22) = 2114;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 168) = v10;
    uint64_t v1 = (uint64_t *)(v0 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v36 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Could not disable notify when found for %{private,mask.hash}s, error: %{public}@", (uint8_t *)v7, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v11 = v37;
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 296);
    uint64_t v12 = *(void *)(v0 + 304);

    swift_errorRelease();
    swift_errorRelease();
    sub_1002F6F2C(v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_errorRelease();
    uint64_t v11 = v12;
  }
  sub_1002F6F2C(v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v14 = *(void *)(v0 + 600);
  *(void *)(v0 + 608) = v14;
  uint64_t v15 = *(void *)(v0 + 584) + 1;
  if (v15 == *(void *)(v0 + 560))
  {
    uint64_t v16 = *(void *)(v0 + 408);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 416);
    uint64_t v18 = *(void *)(v0 + 368);
    uint64_t v19 = *(void *)(v0 + 336);
    swift_bridgeObjectRelease();
    v17(v18, v16, v19);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v23 = *(void *)(v0 + 368);
    uint64_t v24 = *(void *)(v0 + 336);
    if (v22)
    {
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 448);
      uint64_t v25 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 141558275;
      *(void *)(v0 + 208) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 200) = sub_1008FA0F0(v26, v27, &v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v38(v23, v24);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Disabled notify when found for group %{private,mask.hash}s.", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 368), *(void *)(v0 + 336));
    }

    int64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 616) = v34;
    *int64_t v34 = v0;
    v34[1] = sub_1002D221C;
    uint64_t v35 = *(void *)(v0 + 256);
    v34[15] = v35;
    return _swift_task_switch(sub_1002C662C, v35, 0);
  }
  else
  {
    *(void *)(v0 + 584) = v15;
    *(void *)(v0 + 576) = v14;
    uint64_t v28 = *(void *)(v0 + 304);
    uint64_t v29 = *(void *)(v0 + 280);
    sub_1002F6E08(*(void *)(v0 + 464)+ ((*(unsigned __int8 *)(v0 + 672) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 672))+ *(void *)(v0 + 568) * v15, v28, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(void *)(v0 + 40) = v29;
    *(void *)(v0 + 48) = sub_1002F6E70(&qword_101638DD0, 255, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
    uint64_t v30 = sub_10001D958(v1);
    sub_1002F6E08(v28, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 592) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_1002D1D10;
    uint64_t v32 = *(void *)(v0 + 240);
    return sub_1002D3094(v32, (uint64_t)v1);
  }
}

uint64_t sub_1002D2F58()
{
  swift_errorRelease();
  (*(void (**)(void, void))(v0 + 448))(*(void *)(v0 + 408), *(void *)(v0 + 336));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D3094(uint64_t a1, uint64_t a2)
{
  v3[17] = a2;
  v3[18] = v2;
  v3[16] = a1;
  sub_10000588C(&qword_101639E88);
  v3[19] = swift_task_alloc();
  v3[20] = sub_10000588C(&qword_101660BB0);
  v3[21] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v3[22] = found;
  v3[23] = *(void *)(found - 8);
  v3[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[25] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[26] = v6;
  v3[27] = *(void *)(v6 + 64);
  v3[28] = swift_task_alloc();
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  return _swift_task_switch(sub_1002D323C, v2, 0);
}

uint64_t sub_1002D323C()
{
  uint64_t v33 = v0;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[17];
  uint64_t v6 = type metadata accessor for Logger();
  v0[31] = sub_100010324(v6, (uint64_t)qword_10170DD90);
  sub_10001D010(v5, (uint64_t)(v0 + 2));
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[32] = v7;
  v0[33] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v1, v3);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = v0[30];
  if (v10)
  {
    uint64_t v12 = v0[29];
    uint64_t v14 = v0[25];
    uint64_t v13 = v0[26];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    log = v8;
    os_log_type_t type = v9;
    uint64_t v17 = v0[5];
    uint64_t v16 = v0[6];
    sub_10001CD44(v0 + 2, v17);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v16 + 8) + 8) + 32))(v17);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v29 = v11;
    unint64_t v20 = v19;
    os_log_type_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v21(v12, v14);
    v0[14] = sub_1008FA0F0(v18, v20, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    *(_WORD *)(v15 + 12) = 2080;
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[15] = sub_1008FA0F0(v22, v23, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v21(v29, v14);
    _os_log_impl((void *)&_mh_execute_header, log, type, "disableNotifyWhenFound for %s, commandId %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v24 = v0[25];
    uint64_t v25 = v0[26];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    os_log_type_t v21 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v21(v11, v24);
  }
  v0[34] = v21;
  uint64_t v26 = (void *)swift_task_alloc();
  v0[35] = v26;
  void *v26 = v0;
  v26[1] = sub_1002D35EC;
  uint64_t v27 = v0[18];
  v26[15] = v27;
  return _swift_task_switch(sub_1002C662C, v27, 0);
}

uint64_t sub_1002D35EC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[36] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[18];
  if (v1)
  {
    uint64_t v6 = sub_1002D4ED4;
  }
  else
  {
    v4[37] = a1;
    uint64_t v6 = sub_1002D3728;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002D3728()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void **)(v0 + 136);
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  sub_10001CD44(v2, v3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
  return _swift_task_switch(sub_1002D37D0, v1, 0);
}

uint64_t sub_1002D37D0()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[32];
  uint64_t v4 = v0[28];
  uint64_t v3 = v0[29];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[25];
  v0[38] = *(void *)(v1 + 136);
  v2(v4, v3, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  v0[39] = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v8 + v7, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1002D38B8, 0, 0);
}

uint64_t sub_1002D38B8()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[40] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5948;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[41] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D39BC;
  uint64_t v6 = v0[20];
  uint64_t v5 = v0[21];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F733C, v3, v6);
}

uint64_t sub_1002D39BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v0 + 272);
  uint64_t v3 = *(void *)(*v0 + 232);
  uint64_t v4 = *(void *)(*v0 + 208);
  uint64_t v5 = *(void *)(*v0 + 200);
  uint64_t v6 = *(void *)(*v0 + 144);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 336) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v2(v3, v5);
  return _swift_task_switch(sub_1002D3BB4, v6, 0);
}

uint64_t sub_1002D3BB4()
{
  unint64_t v20 = v0;
  uint64_t v1 = v0[21];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[23] + 48))(v1, 1, v0[22]) == 1)
  {
    uint64_t v2 = v0[17];
    sub_10001DAB4(v1, &qword_101660BB0);
    sub_10001D010(v2, (uint64_t)(v0 + 7));
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[34];
      uint64_t v5 = v0[29];
      uint64_t v6 = v0[25];
      uint64_t v7 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 141558275;
      v0[12] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v7 + 12) = 2081;
      uint64_t v9 = v0[10];
      uint64_t v8 = v0[11];
      sub_10001CD44(v0 + 7, v9);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v9);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v12 = v11;
      v18(v5, v6);
      v0[13] = sub_1008FA0F0(v10, v12, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 7));
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No notify when found record for beacon %{private,mask.hash}s.", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 7));
    }

    sub_1002F67B4();
    swift_allocError();
    *uint64_t v15 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = (uint64_t (*)(void))v0[1];
    return v16();
  }
  else
  {
    sub_1002F6EC4(v1, v0[24], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[43] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1002D3F70;
    uint64_t v14 = v0[18];
    v13[15] = v14;
    return _swift_task_switch(sub_1002C662C, v14, 0);
  }
}

uint64_t sub_1002D3F70(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 352) = a1;
  *(void *)(v4 + 360) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 144);
  if (v1) {
    uint64_t v6 = sub_1002D4F80;
  }
  else {
    uint64_t v6 = sub_1002D40A4;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002D40A4()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[19];
  *(void *)(swift_task_alloc() + 16) = v2;
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_1002F6DA4, v3);
  uint64_t v4 = v0[44];
  if (v1)
  {
    uint64_t v5 = v0[24];
    swift_release();
    swift_task_dealloc();
    sub_1002F6F2C(v5, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    swift_task_dealloc();
    return _swift_task_switch(sub_1002D4218, v4, 0);
  }
}

uint64_t sub_1002D4218()
{
  *(void *)(v0 + 368) = *(void *)(*(void *)(v0 + 352) + 128);
  return _swift_task_switch(sub_1002D4240, 0, 0);
}

uint64_t sub_1002D4240()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = v0[19];
  uint64_t v3 = swift_task_alloc();
  v0[47] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[48] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D4338;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_1000757B8, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002D4338()
{
  *(void *)(*(void *)v1 + 392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002D4714;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1002D4454;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002D4454()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_10001DAB4(*(void *)(v0 + 152), &qword_101639E88);
  swift_release();
  return _swift_task_switch(sub_1002D44D0, v1, 0);
}

uint64_t sub_1002D44D0()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  sub_10000588C((uint64_t *)&unk_101657A60);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  v0[50] = v4;
  *(_OWORD *)(v4 + 16) = xmmword_101342130;
  sub_1002F6E08(v2, v4 + v3, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[51] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002D45CC;
  return sub_1002E8974(v4);
}

uint64_t sub_1002D45CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v4 = sub_1002D5048;
  }
  else {
    uint64_t v4 = sub_1002D48C4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002D4714()
{
  uint64_t v1 = *(void *)(v0 + 352);
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D4780, v1, 0);
}

uint64_t sub_1002D4780()
{
  uint64_t v1 = *(void *)(v0 + 144);
  sub_10001DAB4(*(void *)(v0 + 152), &qword_101639E88);
  swift_release();
  return _swift_task_switch(sub_1002D47FC, v1, 0);
}

uint64_t sub_1002D47FC()
{
  sub_1002F6F2C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D48C4()
{
  sub_1002D6644();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 424) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002D4974;
  uint64_t v2 = *(void *)(v0 + 144);
  v1[15] = v2;
  return _swift_task_switch(sub_1002C662C, v2, 0);
}

uint64_t sub_1002D4974(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 432) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 144);
    uint64_t v6 = sub_1002D5110;
  }
  else
  {
    *(void *)(v4 + 440) = a1;
    uint64_t v6 = sub_1002D4AA8;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002D4AA8()
{
  uint64_t v1 = v0[55];
  v0[56] = *(void *)(v1 + 136);
  uint64_t v2 = swift_allocObject();
  v0[57] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 17;
  swift_retain();
  return _swift_task_switch(sub_1002D4B44, 0, 0);
}

uint64_t sub_1002D4B44()
{
  uint64_t v2 = v0[56];
  uint64_t v1 = v0[57];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[58] = v3;
  v3[2] = v2;
  v3[3] = sub_10012E28C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[59] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D4C4C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D74C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002D4C4C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 440);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D4D9C, v1, 0);
}

uint64_t sub_1002D4D9C()
{
  uint64_t v1 = *(void *)(v0 + 144);
  swift_release();
  return _swift_task_switch(sub_1002D4E08, v1, 0);
}

uint64_t sub_1002D4E08()
{
  sub_1002F6F2C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D4ED4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D4F80()
{
  sub_1002F6F2C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D5048()
{
  sub_1002F6F2C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D5110()
{
  sub_1002F6F2C(*(void *)(v0 + 192), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D51D8()
{
  v1[2] = v0;
  v1[3] = *v0;
  type metadata accessor for DispatchQoS();
  v1[4] = swift_task_alloc();
  return _swift_task_switch(sub_1002D5290, v0, 0);
}

uint64_t sub_1002D5290()
{
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170DD90);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Registering new xpc activity for Notify WhenFound.", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002D53F4;
  uint64_t v6 = *(void *)(v0 + 16);
  v5[15] = v6;
  return _swift_task_switch(sub_1002C662C, v6, 0);
}

uint64_t sub_1002D53F4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 16);
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_1002D5548, v8, 0);
  }
}

uint64_t sub_1002D5548()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[3];
  type metadata accessor for XPCActivity();
  static DispatchQoS.default.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002D56A0;
  uint64_t v6 = v0[4];
  return XPCActivity.__allocating_init(name:qos:criteriaBlock:handler:)(0xD000000000000026, 0x80000001013F80E0, v6, &unk_101641258, v3, &unk_101641268, v4);
}

uint64_t sub_1002D56A0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 64) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D57B8, v2, 0);
}

uint64_t sub_1002D57B8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[2];
  swift_release();
  *(void *)(v2 + 136) = v1;
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002D5844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  sub_10000588C(&qword_101641270);
  v4[5] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for XPCActivity.Criteria();
  v4[6] = v6;
  v4[7] = *(void *)(v6 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[9] = v7;
  void *v7 = v4;
  v7[1] = sub_1002D596C;
  return sub_1002F5A04(a3);
}

uint64_t sub_1002D596C(char a1)
{
  *(unsigned char *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D5A6C, 0, 0);
}

uint64_t sub_1002D5A6C()
{
  if (*(unsigned char *)(v0 + 88) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 40);
    sub_10001D074(*(void *)(v0 + 24), v3, &qword_101641270);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
    {
      sub_10001DAB4(*(void *)(v0 + 40), &qword_101641270);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 80) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1002D5C20;
      uint64_t v5 = *(void *)(v0 + 16);
      return sub_1002C5C50(v5);
    }
    uint64_t v8 = *(void *)(v0 + 64);
    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = *(void *)(v0 + 16);
    unint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 56) + 32);
    v11(v8, *(void *)(v0 + 40), v9);
    v11(v10, v8, v9);
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = 1;
  }
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 16), v7, 1, *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1002D5C20()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D5D1C, 0, 0);
}

uint64_t sub_1002D5D1C()
{
  (*(void (**)(void, void, uint64_t, void))(v0[7] + 56))(v0[2], 0, 1, v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002D5DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = type metadata accessor for XPCActivity.State();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_1002D5E7C, 0, 0);
}

uint64_t sub_1002D5E7C()
{
  uint64_t v32 = v0;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170DD90);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v1, v4, v2);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[9];
  uint64_t v12 = v0[10];
  if (v9)
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446210;
    sub_1002F6E70(&qword_1016394A0, 255, (void (*)(uint64_t))&type metadata accessor for XPCActivity.State);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_1008FA0F0(v14, v15, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v10, v11);
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Notify when found activity state: %{public}s.", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v16(v0[12], v0[9]);
  }

  uint64_t v18 = v0[10];
  uint64_t v17 = v0[11];
  uint64_t v19 = v0[9];
  v6(v17, v0[7], v19);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 88))(v17, v19);
  if (v20 != enum case for XPCActivity.State.checkIn(_:) && v20 != enum case for XPCActivity.State.wait(_:))
  {
    if (v20 == enum case for XPCActivity.State.run(_:))
    {
      swift_beginAccess();
      uint64_t Strong = swift_weakLoadStrong();
      v0[13] = Strong;
      if (Strong)
      {
        uint64_t v25 = (void *)swift_task_alloc();
        v0[14] = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_1002D644C;
        return sub_1002D6BFC();
      }
      type metadata accessor for XPCActivity();
      sub_1002F6E70(&qword_101639498, 255, (void (*)(uint64_t))&type metadata accessor for XPCActivity);
      uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v28 = v30;
      uint64_t v29 = sub_1002D65DC;
      goto LABEL_26;
    }
    if (v20 == enum case for XPCActivity.State.defer(_:))
    {
      type metadata accessor for XPCActivity();
      sub_1002F6E70(&qword_101639498, 255, (void (*)(uint64_t))&type metadata accessor for XPCActivity);
      uint64_t v26 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v28 = v27;
      uint64_t v29 = sub_1002D637C;
LABEL_26:
      return _swift_task_switch(v29, v26, v28);
    }
    if (v20 != enum case for XPCActivity.State.continue(_:)
      && v20 != enum case for XPCActivity.State.done(_:)
      && v20 != enum case for XPCActivity.State.invalidated(_:))
    {
      v16(v0[11], v0[9]);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1002D637C()
{
  dispatch thunk of XPCActivity.defer()();
  return _swift_task_switch(sub_1002D63E4, 0, 0);
}

uint64_t sub_1002D63E4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002D644C()
{
  swift_task_dealloc();
  swift_release();
  type metadata accessor for XPCActivity();
  sub_1002F6E70(&qword_101639498, 255, (void (*)(uint64_t))&type metadata accessor for XPCActivity);
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002D65DC, v1, v0);
}

uint64_t sub_1002D65DC()
{
  dispatch thunk of XPCActivity.done()();
  return _swift_task_switch(sub_1002F7360, 0, 0);
}

uint64_t sub_1002D6644()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10001DAB4((uint64_t)v4, &qword_10164DBB0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_101641240;
  *(void *)(v12 + 24) = v7;
  sub_10000588C(&qword_101641228);
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1002D6890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return _swift_task_switch(sub_1002D68B0, a4, 0);
}

uint64_t sub_1002D68B0()
{
  *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 24) + 136);
  swift_retain();
  return _swift_task_switch(sub_1002D6924, 0, 0);
}

uint64_t sub_1002D6924()
{
  if (v0[4])
  {
    uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of XPCActivity.updateCriteria()
                                         + async function pointer to dispatch thunk of XPCActivity.updateCriteria());
    uint64_t v1 = (void *)swift_task_alloc();
    v0[5] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1002D6A48;
    uint64_t v2 = v0[2];
    return v7(v2);
  }
  else
  {
    uint64_t v4 = v0[2];
    uint64_t v5 = type metadata accessor for XPCActivity.State();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1002D6A48()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002D6B60, 0, 0);
}

uint64_t sub_1002D6B60()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for XPCActivity.State();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1002D6BFC()
{
  v1[22] = v0;
  uint64_t v2 = sub_10000588C((uint64_t *)&unk_101657CD0);
  v1[23] = v2;
  v1[24] = *(void *)(v2 - 8);
  v1[25] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[26] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[27] = v4;
  v1[28] = *(void *)(v4 + 64);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = sub_10000588C(&qword_101660BB0);
  v1[32] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v1[33] = found;
  v1[34] = *(void *)(found - 8);
  v1[35] = swift_task_alloc();
  return _swift_task_switch(sub_1002D6DC4, v0, 0);
}

uint64_t sub_1002D6DC4()
{
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[36] = sub_100010324(v1, (uint64_t)qword_10170DD90);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "schedulerFired", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  v0[37] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002D6F2C;
  uint64_t v6 = v0[22];
  v5[15] = v6;
  return _swift_task_switch(sub_1002C662C, v6, 0);
}

uint64_t sub_1002D6F2C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 304) = a1;
    return _swift_task_switch(sub_1002D70AC, a1, 0);
  }
}

uint64_t sub_1002D70AC()
{
  *(void *)(v0 + 312) = *(void *)(*(void *)(v0 + 304) + 136);
  swift_retain();
  return _swift_task_switch(sub_1002D7120, 0, 0);
}

uint64_t sub_1002D7120()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[40] = v3;
  v3[2] = v1;
  v3[3] = sub_1001D4090;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[41] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002D7238;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 20, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1001D4098, v3, v5);
}

uint64_t sub_1002D7238()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 304);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 336) = *(void *)(v1 + 160);
  return _swift_task_switch(sub_1002D7394, v2, 0);
}

uint64_t sub_1002D7394()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  return _swift_task_switch(sub_1002D7400, v1, 0);
}

uint64_t sub_1002D7400()
{
  uint64_t v1 = *(void *)(v0 + 336);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 344) = v2;
  if (v2)
  {
    *(void *)(v0 + 352) = 0;
    *(void *)(v0 + 360) = _swiftEmptyArrayStorage;
    sub_10001D010(v1 + 32, v0 + 16);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 120))
    {
      sub_10001CEB0((long long *)(v0 + 96), v0 + 56);
      sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
      uint64_t v10 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_1002D76E4;
      return v10();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 416) = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_1002D8450;
      return sub_1002E6E44((uint64_t)_swiftEmptyArrayStorage);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl((void *)&_mh_execute_header, v6, v7, "No notify records to publish", v8, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
      return v9();
    }
  }
  return result;
}

uint64_t sub_1002D76E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 176);
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002D77FC, v2, 0);
}

uint64_t sub_1002D77FC()
{
  if (*(void *)(v0 + 376))
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v0 + 48);
    sub_10001CD44((void *)(v0 + 16), v1);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 8) + 8) + 32))(v1);
    uint64_t v3 = *(void *)(v0 + 376);
    uint64_t v4 = (uint64_t)sub_1002D7C3C;
    uint64_t v5 = 0;
    return _swift_task_switch(v4, v3, v5);
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "No BeaconStoreActor available!", v8, 2u);
    swift_slowDealloc();
  }
  uint64_t v9 = *(void *)(v0 + 264);
  uint64_t v10 = *(void *)(v0 + 272);
  uint64_t v11 = *(void *)(v0 + 256);

  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, 1, 1, v9);
  sub_10001DAB4(*(void *)(v0 + 256), &qword_101660BB0);
  uint64_t v12 = *(void *)(v0 + 360);
  uint64_t v13 = *(void *)(v0 + 344);
  uint64_t v14 = *(void *)(v0 + 352) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v14 == v13)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 416) = v12;
    if (*(void *)(v12 + 16))
    {
      unint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v15;
      *unint64_t v15 = v0;
      v15[1] = sub_1002D8450;
      return sub_1002E6E44(v12);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "No notify records to publish", v21, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 352) + 1;
    *(void *)(v0 + 352) = v17;
    *(void *)(v0 + 360) = v12;
    sub_10001D010(*(void *)(v0 + 336) + 40 * v17 + 32, v0 + 16);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v4 = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
    if (!*(void *)(v0 + 120))
    {
      __break(1u);
      return _swift_task_switch(v4, v3, v5);
    }
    sub_10001CEB0((long long *)(v0 + 96), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    unint64_t v23 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1002D76E4;
    return v23();
  }
}

uint64_t sub_1002D7C3C()
{
  uint64_t v1 = v0[47];
  uint64_t v3 = v0[29];
  uint64_t v2 = v0[30];
  uint64_t v4 = v0[27];
  uint64_t v5 = v0[26];
  v0[48] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[49] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v3, v5);
  swift_retain();
  return _swift_task_switch(sub_1002D7D30, 0, 0);
}

uint64_t sub_1002D7D30()
{
  uint64_t v2 = v0[48];
  uint64_t v1 = v0[49];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[50] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5948;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[51] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002D7E34;
  uint64_t v6 = v0[31];
  uint64_t v5 = v0[32];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F733C, v3, v6);
}

uint64_t sub_1002D7E34()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  uint64_t v2 = *(void *)(*(void *)v0 + 216);
  uint64_t v3 = *(void *)(*(void *)v0 + 208);
  uint64_t v4 = *(void *)(*(void *)v0 + 176);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002D8004, v4, 0);
}

uint64_t sub_1002D8004()
{
  uint64_t v1 = *(void *)(v0 + 256);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 272) + 48))(v1, 1, *(void *)(v0 + 264)) == 1)
  {
    sub_10001DAB4(v1, &qword_101660BB0);
    uint64_t v2 = *(void *)(v0 + 360);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 280);
    uint64_t v4 = *(void *)(v0 + 200);
    uint64_t v5 = *(void *)(v0 + 184);
    sub_1002F6EC4(v1, v3, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v6 = v4 + *(int *)(v5 + 48);
    sub_10001D010(v0 + 16, v4);
    sub_1002F6E08(v3, v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void *)(v0 + 360);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v2 = sub_100A70280(0, *(void *)(v2 + 16) + 1, 1, *(void *)(v0 + 360));
    }
    unint64_t v9 = *(void *)(v2 + 16);
    unint64_t v8 = *(void *)(v2 + 24);
    if (v9 >= v8 >> 1) {
      uint64_t v2 = sub_100A70280(v8 > 1, v9 + 1, 1, v2);
    }
    uint64_t v10 = *(void *)(v0 + 280);
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 200);
    *(void *)(v2 + 16) = v9 + 1;
    sub_10001D608(v11, v2+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v9, (uint64_t *)&unk_101657CD0);
    sub_1002F6F2C(v10, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  }
  uint64_t v13 = *(void *)(v0 + 344);
  uint64_t v14 = *(void *)(v0 + 352) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v14 == v13)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 416) = v2;
    if (*(void *)(v2 + 16))
    {
      unint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v15;
      *unint64_t v15 = v0;
      v15[1] = sub_1002D8450;
      return sub_1002E6E44(v2);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v21 = 0;
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "No notify records to publish", v21, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v0 + 352) + 1;
    *(void *)(v0 + 352) = v17;
    *(void *)(v0 + 360) = v2;
    sub_10001D010(*(void *)(v0 + 336) + 40 * v17 + 32, v0 + 16);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 120))
    {
      sub_10001CEB0((long long *)(v0 + 96), v0 + 56);
      sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
      unint64_t v23 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 368) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1002D76E4;
      return v23();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002D8450()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 176);
    uint64_t v4 = sub_1002D867C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 176);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1002D8578;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002D8578()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Successfully published", v3, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002D867C()
{
  swift_bridgeObjectRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 168) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to publish keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002D886C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 192) = a4;
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(void *)(v5 + 24) = a1;
  *(void *)(v5 + 32) = a2;
  uint64_t v6 = type metadata accessor for TimeBasedKey();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DateInterval();
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 - 8);
  *(void *)(v5 + 96) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v5 + 112) = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_1002D8A08;
  v8[15] = v4;
  return _swift_task_switch(sub_1002C662C, v4, 0);
}

uint64_t sub_1002D8A08(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    return _swift_task_switch(sub_1002D8B68, a1, 0);
  }
}

uint64_t sub_1002D8B68()
{
  *(void *)(v0 + 128) = *(void *)(*(void *)(v0 + 120) + 136);
  swift_retain();
  return _swift_task_switch(sub_1002D8BDC, 0, 0);
}

uint64_t sub_1002D8BDC()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[18] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002D8CF0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DAA8, v3, v5);
}

uint64_t sub_1002D8CF0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 152) = *(void *)(v1 + 16);
  return _swift_task_switch(sub_1002D8E4C, v2, 0);
}

uint64_t sub_1002D8E4C()
{
  swift_release();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, char, char, char))((char *)&dword_10164B7F0 + dword_10164B7F0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002D8F0C;
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  char v4 = *(unsigned char *)(v0 + 192);
  return v6(v3, v2, v4, 1, 0);
}

uint64_t sub_1002D8F0C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = *v4;
  *(void *)(v6 + 168) = a1;
  *(void *)(v6 + 176) = a2;
  *(void *)(v6 + 184) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v7 = *(void *)(v6 + 48);
    uint64_t v8 = sub_1002D96D0;
  }
  else
  {
    uint64_t v9 = *(void *)(v6 + 48);
    swift_release();
    *(unsigned char *)(v6 + 193) = a3;
    uint64_t v8 = sub_1002D9050;
    uint64_t v7 = v9;
  }
  return _swift_task_switch(v8, v7, 0);
}

uint64_t sub_1002D9050()
{
  uint64_t v43 = v0;
  switch(*(unsigned char *)(v0 + 193))
  {
    case 1:
      uint64_t v1 = *(void *)(v0 + 168);
      goto LABEL_8;
    case 2:
      sub_1002F6A08(*(void *)(v0 + 168), *(void *)(v0 + 176), 2u);
      goto LABEL_16;
    case 3:
LABEL_16:
      if (qword_101636A50 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100010324(v24, (uint64_t)qword_10170DD90);
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        swift_slowDealloc();
      }

      goto LABEL_23;
    default:
      uint64_t v1 = *(void *)(v0 + 168);
      uint64_t v2 = qword_101636A50;
      swift_bridgeObjectRetain();
      if (v2 != -1) {
        swift_once();
      }
      uint64_t v3 = type metadata accessor for Logger();
      sub_100010324(v3, (uint64_t)qword_10170DD90);
      char v4 = Logger.logObject.getter();
      os_log_type_t v5 = static os_log_type_t.default.getter();
      BOOL v6 = os_log_type_enabled(v4, v5);
      uint64_t v8 = *(void *)(v0 + 168);
      uint64_t v7 = *(void *)(v0 + 176);
      if (v6)
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        swift_slowDealloc();
      }

      sub_1002F6A08(v8, v7, 0);
LABEL_8:
      uint64_t v10 = *(void *)(v0 + 104);
      if (!*(void *)(v1 + 16))
      {
        uint64_t v28 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
LABEL_22:
        uint64_t v29 = *(void *)(v0 + 104);
        swift_bridgeObjectRelease();
        sub_10001DAB4(v29, (uint64_t *)&unk_10163AC90);
LABEL_23:
        sub_1002F67B4();
        swift_allocError();
        unsigned char *v30 = 0;
        swift_willThrow();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
        return v31();
      }
      uint64_t v12 = *(void *)(v0 + 88);
      uint64_t v11 = *(void *)(v0 + 96);
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v14 = *(unsigned __int8 *)(*(void *)(v0 + 64) + 80);
      uint64_t v15 = (v14 + 32) & ~v14;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v11, v1 + v15 + *(int *)(*(void *)(v0 + 56) + 20), v13);
      DateInterval.start.getter();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      uint64_t v16 = type metadata accessor for Date();
      uint64_t v17 = *(void *)(v16 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v10, 0, 1, v16);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v10, 1, v16) == 1) {
        goto LABEL_22;
      }
      (*(void (**)(void, void, uint64_t))(v17 + 32))(*(void *)(v0 + 24), *(void *)(v0 + 104), v16);
      int64_t v18 = *(void *)(v1 + 16);
      if (v18)
      {
        uint64_t v19 = *(void *)(v0 + 64);
        sub_1000B765C(0, v18, 0);
        uint64_t v20 = *(void *)(v19 + 72);
        uint64_t v21 = *(void *)(v0 + 184);
        uint64_t v22 = *(void *)(v0 + 72);
        sub_1002F6E08(v1 + v15, v22, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
        sub_1002D9758(v22, v42);
        sub_1002F6F2C(v22, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
        if (v21)
        {
          return swift_release();
        }
        long long v40 = *(_OWORD *)v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B765C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v33 = _swiftEmptyArrayStorage[2];
        unint64_t v32 = _swiftEmptyArrayStorage[3];
        if (v33 >= v32 >> 1) {
          sub_1000B765C(v32 > 1, v33 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v33 + 1;
        *(_OWORD *)&_swiftEmptyArrayStorage[2 * v33 + 4] = v40;
        int64_t v34 = v18 - 1;
        if (v18 != 1)
        {
          uint64_t v36 = v1 + v20 + v15;
          do
          {
            uint64_t v37 = *(void *)(v0 + 72);
            sub_1002F6E08(v36, v37, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
            sub_1002D9758(v37, v42);
            sub_1002F6F2C(v37, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
            long long v41 = *(_OWORD *)v42;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_1000B765C(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v39 = _swiftEmptyArrayStorage[2];
            unint64_t v38 = _swiftEmptyArrayStorage[3];
            if (v39 >= v38 >> 1) {
              sub_1000B765C(v38 > 1, v39 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v39 + 1;
            *(_OWORD *)&_swiftEmptyArrayStorage[2 * v39 + 4] = v41;
            v36 += v20;
            --v34;
          }
          while (v34);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v35 = *(uint64_t (**)(void *))(v0 + 8);
      return v35(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1002D96D0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002D9758(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  int64_t v34 = a2;
  uint64_t v3 = type metadata accessor for TimeBasedKey();
  __chkstk_darwin(v3);
  os_log_type_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for HashAlgorithm();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v33 = v3;
  uint64_t v10 = (long long *)(a1 + *(int *)(v3 + 24));
  long long v11 = v10[1];
  long long v37 = *v10;
  long long v38 = v11;
  long long v39 = v10[2];
  uint64_t v12 = sub_100A8C640();
  unint64_t v14 = v13;
  (*(void (**)(unsigned char *, void, uint64_t))(v7 + 104))(v9, enum case for HashAlgorithm.sha256(_:), v6);
  uint64_t v15 = Data.hash(algorithm:)();
  unint64_t v17 = v16;
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10001CFB8(v12, v14);
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100010324(v18, (uint64_t)qword_10170DD90);
  sub_1002F6E08(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
  sub_1000361E0(v15, v17);
  sub_1000361E0(v15, v17);
  sub_1000361E0(v15, v17);
  sub_1000361E0(v15, v17);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  int v21 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v40 = v32;
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v35 = v15;
    unint64_t v36 = v17;
    sub_1001D780C();
    int v31 = v21;
    uint64_t v23 = RawRepresentable<>.hexString.getter();
    uint64_t v35 = sub_1008FA0F0(v23, v24, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v15, v17);
    sub_10001CFB8(v15, v17);
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v35 = v15;
    unint64_t v36 = v17;
    uint64_t v25 = RawRepresentable<>.base64EncodedString(options:)();
    uint64_t v35 = sub_1008FA0F0(v25, v26, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v15, v17);
    sub_10001CFB8(v15, v17);
    *(_WORD *)(v22 + 22) = 2080;
    type metadata accessor for DateInterval();
    sub_1002F6E70(&qword_10163FF58, 255, (void (*)(uint64_t))&type metadata accessor for DateInterval);
    uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v35 = sub_1008FA0F0(v27, v28, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v31, "Key hashed: %s, base64: %s, dateInterval: %s.", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001CFB8(v15, v17);
    sub_10001CFB8(v15, v17);
    sub_10001CFB8(v15, v17);
    sub_10001CFB8(v15, v17);
    sub_1002F6F2C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
  }

  uint64_t v29 = v34;
  *int64_t v34 = v15;
  v29[1] = v17;
}

uint64_t sub_1002D9C30(uint64_t a1)
{
  v2[109] = v1;
  v2[108] = a1;
  sub_10000588C(&qword_101638CF0);
  v2[110] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NotifyMeRequest.Subscription();
  v2[111] = v3;
  v2[112] = *(void *)(v3 - 8);
  v2[113] = swift_task_alloc();
  v2[114] = swift_task_alloc();
  v2[115] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for HashAlgorithm();
  v2[116] = v4;
  v2[117] = *(void *)(v4 - 8);
  v2[118] = swift_task_alloc();
  sub_10000588C(&qword_10163F758);
  v2[119] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OwnedBeaconRecord();
  v2[120] = v5;
  v2[121] = *(void *)(v5 - 8);
  v2[122] = swift_task_alloc();
  v2[123] = sub_10000588C(&qword_10163B9F0);
  v2[124] = swift_task_alloc();
  v2[125] = swift_task_alloc();
  v2[126] = sub_10000588C(&qword_101641238);
  v2[127] = swift_task_alloc();
  v2[128] = swift_task_alloc();
  v2[129] = swift_task_alloc();
  v2[130] = swift_task_alloc();
  v2[131] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DateInterval();
  v2[132] = v6;
  v2[133] = *(void *)(v6 - 8);
  v2[134] = swift_task_alloc();
  v2[135] = swift_task_alloc();
  v2[136] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v2[137] = swift_task_alloc();
  v2[138] = swift_task_alloc();
  v2[139] = swift_task_alloc();
  v2[140] = sub_10000588C(&qword_10163F7B0);
  v2[141] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v2[142] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v2[143] = v8;
  v2[144] = *(void *)(v8 + 64);
  v2[145] = swift_task_alloc();
  v2[146] = swift_task_alloc();
  v2[147] = type metadata accessor for NotifyWhenFoundRecord();
  v2[148] = swift_task_alloc();
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101657CD0);
  v2[149] = v9;
  v2[150] = *(void *)(v9 - 8);
  v2[151] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v2[152] = v10;
  v2[153] = *(void *)(v10 - 8);
  v2[154] = swift_task_alloc();
  v2[155] = swift_task_alloc();
  v2[156] = swift_task_alloc();
  v2[157] = swift_task_alloc();
  v2[158] = swift_task_alloc();
  v2[159] = swift_task_alloc();
  v2[160] = swift_task_alloc();
  v2[161] = swift_task_alloc();
  v2[162] = swift_task_alloc();
  v2[163] = swift_task_alloc();
  v2[164] = swift_task_alloc();
  return _swift_task_switch(sub_1002DA1DC, v1, 0);
}

uint64_t sub_1002DA1DC()
{
  uint64_t v26 = v0;
  uint64_t v1 = *(void *)(v0 + 864);
  static Date.trustedNow.getter(*(void *)(v0 + 1312));
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 1320) = v2;
  if (v2)
  {
    uint64_t v3 = *(long long **)(v0 + 1208);
    uint64_t v4 = *(void *)(v0 + 1200);
    uint64_t v5 = *(void *)(v0 + 864);
    uint64_t v6 = *(int *)(*(void *)(v0 + 1192) + 48);
    *(_DWORD *)(v0 + 1728) = v6;
    int v7 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 1732) = v7;
    *(void *)(v0 + 1328) = *(void *)(v4 + 72);
    *(_DWORD *)(v0 + 1736) = enum case for Feature.FindMy.networkScalingImprovements(_:);
    *(_DWORD *)(v0 + 1740) = enum case for HashAlgorithm.sha256(_:);
    *(void *)(v0 + 1352) = _swiftEmptyArrayStorage;
    *(_OWORD *)(v0 + 1336) = 0u;
    uint64_t v8 = *(void *)(v0 + 1184);
    uint64_t v9 = v5 + ((v7 + 32) & ~(unint64_t)v7);
    uint64_t v10 = (uint64_t)v3 + v6;
    swift_bridgeObjectRetain();
    sub_10001D074(v9, (uint64_t)v3, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v3, v0 + 16);
    sub_1002F6EC4(v10, v8, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v11;
    *(void *)(v0 + 1368) = sub_100010324(v11, (uint64_t)qword_10170DD90);
    sub_10001D010(v0 + 16, v0 + 56);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = *(void *)(v0 + 1168);
      uint64_t v15 = *(void *)(v0 + 1144);
      uint64_t v24 = *(void *)(v0 + 1136);
      uint64_t v16 = swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v16 + 12) = 2081;
      uint64_t v18 = *(void *)(v0 + 80);
      uint64_t v17 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v18);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v17 + 8) + 8) + 32))(v18);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v21 = v20;
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v24);
      *(void *)(v0 + 856) = sub_1008FA0F0(v19, v21, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 1224) + 8))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v22 = *(uint64_t (**)(void *))(v0 + 8);
    return v22(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1002DA840()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1384) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1002DA930;
  uint64_t v2 = *(void *)(v0 + 1376);
  return unsafeBlocking<A>(_:)(v0 + 824, sub_10001D704, v2, &type metadata for Configuration);
}

uint64_t sub_1002DA930()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002DAA74, 0, 0);
}

uint64_t sub_1002DAA74()
{
  uint64_t v1 = v0[109];
  v0[174] = v0[103];
  return _swift_task_switch(sub_1002DAB08, v1, 0);
}

uint64_t sub_1002DAB08()
{
  uint64_t v2 = sub_1010AB8D4(v1[174]);
  if ((unsigned __int128)(v2 * (__int128)60) >> 64 == (60 * v2) >> 63)
  {
    uint64_t v0 = (long long *)v1[174];
    v1[175] = 60 * v2;
    uint64_t v3 = sub_1010AB8AC((uint64_t)v0);
    swift_bridgeObjectRelease();
    if ((unsigned __int128)(v3 * (__int128)60) >> 64 == (60 * v3) >> 63)
    {
      uint64_t v0 = (long long *)(v1 + 27);
      v1[176] = 60 * v3;
      if (qword_1016375E8 == -1) {
        goto LABEL_4;
      }
      goto LABEL_10;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
LABEL_10:
  swift_once();
LABEL_4:
  swift_beginAccess();
  sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v0, (uint64_t *)&unk_101638D30);
  if (!v1[30]) {
    __break(1u);
  }
  sub_10001CEB0(v0, (uint64_t)(v1 + 17));
  sub_10001CD44(v1 + 17, v1[20]);
  uint64_t v4 = dword_101639138;
  uint64_t v5 = (void *)swift_task_alloc();
  v1[177] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1002DACC8;
  return ((uint64_t (__cdecl *)())((char *)&dword_101639138 + v4))();
}

uint64_t sub_1002DACC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 872);
  *(void *)(*(void *)v1 + 1424) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002DAE0C, v2, 0);
}

uint64_t sub_1002DAE0C()
{
  if (v0[178])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    uint64_t v2 = v0[5];
    uint64_t v1 = v0[6];
    sub_10001CD44(v0 + 2, v2);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 8) + 8) + 32))(v2);
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    sub_10001CD44(v0 + 2, v3);
    (*(void (**)(uint64_t, uint64_t))(v4 + 184))(v3, v4);
    uint64_t v5 = v0[5];
    uint64_t v6 = v0[6];
    sub_10001CD44(v0 + 2, v5);
    char v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 112))(v5, v6);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[179] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1002DB2D8;
    uint64_t v9 = v0[163];
    uint64_t v10 = v0[146];
    uint64_t v11 = v0[141];
    return sub_101103F50(v11, v10, v9, v7 & 1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    os_log_type_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No ObservationStoreService available!", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[164];
    uint64_t v17 = v0[153];
    uint64_t v18 = v0[152];
    uint64_t v19 = v0[148];

    sub_1002F6F2C(v19, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v20 = (uint64_t (*)(void *))v0[1];
    return v20(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1002DB2D8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 1304);
  uint64_t v3 = *(void *)(*(void *)v0 + 1224);
  uint64_t v4 = *(void *)(*(void *)v0 + 1216);
  uint64_t v5 = *(void *)(*(void *)v0 + 1168);
  uint64_t v6 = *(void *)(*(void *)v0 + 1144);
  uint64_t v7 = *(void *)(*(void *)v0 + 1136);
  uint64_t v8 = *(void *)(*(void *)v0 + 872);
  swift_task_dealloc();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v1[180] = v9;
  v1[181] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v2, v4);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v1[182] = v10;
  v1[183] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v5, v7);
  return _swift_task_switch(sub_1002DB4FC, v8, 0);
}

uint64_t sub_1002DB4FC()
{
  uint64_t v103 = v0;
  uint64_t v101 = v0 + 16;
  uint64_t v80 = *(void *)(v0 + 1336);
  uint64_t v81 = *(void *)(v0 + 1312);
  uint64_t v93 = *(void *)(v0 + 1304);
  uint64_t v1 = *(void *)(v0 + 1296);
  uint64_t v2 = *(char **)(v0 + 1288);
  uint64_t v86 = *(void *)(v0 + 1280);
  uint64_t v89 = *(void *)(v0 + 1272);
  uint64_t v96 = *(void *)(v0 + 1264);
  uint64_t v98 = *(void *)(v0 + 1256);
  uint64_t v3 = *(void *)(v0 + 1224);
  uint64_t v4 = *(void *)(v0 + 1216);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 1112);
  uint64_t v6 = *(void *)(v0 + 1104);
  double v7 = (double)*(uint64_t *)(v0 + 1400);
  uint64_t v8 = *(void *)(v0 + 1128) + *(int *)(*(void *)(v0 + 1120) + 36);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 1472) = v9;
  *(void *)(v0 + 1480) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v1, v8, v4);
  uint64_t v10 = *(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v3 + 56);
  *(void *)(v0 + 1488) = v10;
  *(void *)(v0 + 1496) = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v10(v5, 1, 1, v4);
  v9(v6, v1, v4);
  v10((void (*)(char *, uint64_t, uint64_t))v6, 0, 1, v4);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v11 = *(void *)(v0 + 680);
  *(void *)(v0 + 280) = &type metadata for Configuration;
  *(void *)(v0 + 288) = &off_1015B4B40;
  *(void *)(v0 + 256) = v11;
  sub_1008B2BE0((void *)(v0 + 16), v81, v5, v6, 0, (void *)(v0 + 256), v2);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 256);
  uint64_t v12 = v6;
  os_log_type_t v13 = (void *)(v0 + 16);
  sub_10001DAB4(v12, (uint64_t *)&unk_10163AC90);
  sub_10001DAB4((uint64_t)v5, (uint64_t *)&unk_10163AC90);
  sub_1002F6E70((unint64_t *)&qword_1016605E0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  if (dispatch thunk of static Comparable.>= infix(_:_:)()) {
    uint64_t v14 = v81;
  }
  else {
    uint64_t v14 = (uint64_t)v2;
  }
  v9(v86, v14, v4);
  Date.timeIntervalSince(_:)();
  double v16 = v15;
  uint64_t v17 = *(void *)(v0 + 40);
  uint64_t v18 = *(void *)(v0 + 48);
  sub_10001CD44(v13, v17);
  char v82 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 112))(v17, v18);
  uint64_t v19 = *(void *)(v0 + 40);
  uint64_t v20 = *(void *)(v0 + 48);
  sub_10001CD44(v13, v19);
  char v83 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 112))(v19, v20);
  Date.addingTimeInterval(_:)();
  v9(v93, (uint64_t)v2, v4);
  v9(v96, v89, v4);
  DateInterval.init(start:end:)();
  Date.addingTimeInterval(_:)();
  v9(v93, (uint64_t)v2, v4);
  v9(v96, v98, v4);
  DateInterval.init(start:end:)();
  if ((v82 & 1) == 0 || v16 <= v7)
  {
    uint64_t v28 = *(int *)(*(void *)(v0 + 1008) + 48);
    *(_DWORD *)(v0 + 1748) = v28;
    uint64_t v29 = (void *)swift_task_alloc();
    *(void *)(v0 + 1528) = v29;
    *uint64_t v29 = v0;
    if (v83)
    {
      uint64_t v30 = *(void *)(v0 + 1024);
      int v31 = sub_1002DD624;
    }
    else
    {
      uint64_t v30 = *(void *)(v0 + 1032);
      int v31 = sub_1002DCD14;
    }
    v29[1] = v31;
    uint64_t v24 = *(void *)(v0 + 1088);
    uint64_t v25 = v30 + v28;
    uint64_t v26 = v0 + 16;
    char v27 = 0;
    goto LABEL_12;
  }
  if (v83)
  {
    uint64_t v21 = *(void *)(v0 + 1048);
    uint64_t v22 = *(int *)(*(void *)(v0 + 1008) + 48);
    *(_DWORD *)(v0 + 1744) = v22;
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 1504) = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1002DC400;
    uint64_t v24 = *(void *)(v0 + 1080);
    uint64_t v25 = v21 + v22;
    uint64_t v26 = v0 + 16;
    char v27 = 1;
LABEL_12:
    return sub_1002D886C(v25, v26, v24, v27);
  }
  v99 = (void *)(v0 + 336);
  sub_10001D010(v101, v0 + 336);
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  v100 = v33;
  if (os_log_type_enabled(v33, v34))
  {
    unint64_t v73 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v94 = *(void *)(v0 + 1296);
    uint64_t v87 = *(void *)(v0 + 1280);
    uint64_t v90 = *(void *)(v0 + 1288);
    uint64_t v84 = *(void *)(v0 + 1272);
    uint64_t v79 = *(void *)(v0 + 1256);
    uint64_t v35 = *(void *)(v0 + 1216);
    uint64_t v97 = *(void *)(v0 + 1184);
    uint64_t v36 = *(void *)(v0 + 1168);
    uint64_t v72 = *(void *)(v0 + 1136);
    uint64_t v92 = *(void *)(v0 + 1128);
    uint64_t v78 = *(void *)(v0 + 1088);
    uint64_t v74 = *(void *)(v0 + 1064);
    uint64_t v75 = *(void *)(v0 + 1056);
    uint64_t v76 = *(void *)(v0 + 1080);
    uint64_t v37 = swift_slowAlloc();
    v102[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 141558275;
    *(void *)(v0 + 656) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2081;
    uint64_t v39 = *(void *)(v0 + 360);
    uint64_t v38 = *(void *)(v0 + 368);
    sub_10001CD44(v99, v39);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v38 + 8) + 8) + 32))(v39);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v42 = v41;
    v73(v36, v72);
    *(void *)(v0 + 648) = sub_1008FA0F0(v40, v42, v102);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v99);
    _os_log_impl((void *)&_mh_execute_header, v100, v34, "Not subscribing beacon: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
    v43(v76, v75);
    v77(v79, v35);
    v43(v78, v75);
    v77(v84, v35);
    v77(v87, v35);
    v77(v90, v35);
    v77(v94, v35);
  }
  else
  {
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v95 = *(void *)(v0 + 1296);
    uint64_t v88 = *(void *)(v0 + 1280);
    uint64_t v91 = *(void *)(v0 + 1288);
    uint64_t v85 = *(void *)(v0 + 1272);
    uint64_t v45 = *(void *)(v0 + 1256);
    uint64_t v46 = *(void *)(v0 + 1216);
    uint64_t v97 = *(void *)(v0 + 1184);
    uint64_t v92 = *(void *)(v0 + 1128);
    uint64_t v47 = *(void *)(v0 + 1088);
    uint64_t v48 = *(void *)(v0 + 1080);
    uint64_t v49 = *(void *)(v0 + 1064);
    uint64_t v50 = *(void *)(v0 + 1056);

    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v99);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
    v51(v48, v50);
    v44(v45, v46);
    v51(v47, v50);
    v44(v85, v46);
    v44(v88, v46);
    v44(v91, v46);
    v44(v95, v46);
  }
  sub_10001DAB4(v92, &qword_10163F7B0);
  sub_1002F6F2C(v97, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v52 = *(void *)(v0 + 1352);
  uint64_t v53 = *(void *)(v0 + 1320);
  uint64_t v54 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v101);
  if (v54 == v53)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v55 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v55(v52);
  }
  else
  {
    uint64_t v56 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v52;
    *(void *)(v0 + 1344) = v56;
    *(void *)(v0 + 1336) = v80;
    int v57 = *(long long **)(v0 + 1208);
    uint64_t v58 = *(void *)(v0 + 1184);
    uint64_t v59 = (uint64_t)v57 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v56, (uint64_t)v57, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v57, v101);
    sub_1002F6EC4(v59, v58, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v60;
    *(void *)(v0 + 1368) = sub_100010324(v60, (uint64_t)qword_10170DD90);
    sub_10001D010(v101, v0 + 56);
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = *(void *)(v0 + 1168);
      uint64_t v64 = *(void *)(v0 + 1144);
      uint64_t v65 = *(void *)(v0 + 1136);
      uint64_t v66 = swift_slowAlloc();
      v102[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v66 + 12) = 2081;
      uint64_t v68 = *(void *)(v0 + 80);
      uint64_t v67 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v68);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v67 + 8) + 8) + 32))(v68);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = v70;
      (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
      *(void *)(v0 + 856) = sub_1008FA0F0(v69, v71, v102);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002DC400(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 1512) = a1;
  *(void *)(v4 + 1520) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 872);
  if (v1) {
    uint64_t v6 = sub_1002E1090;
  }
  else {
    uint64_t v6 = sub_1002DC564;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DC564()
{
  uint64_t v68 = v0;
  uint64_t v1 = *(void *)(v0 + 1512);
  uint64_t v2 = *(void (**)(char *, char *, uint64_t))(v0 + 1472);
  os_log_type_t type = *(void (**)(char *, uint64_t))(v0 + 1440);
  uint64_t v57 = *(void *)(v0 + 1248);
  uint64_t v3 = *(void *)(v0 + 1224);
  uint64_t v4 = *(void *)(v0 + 1216);
  uint64_t v5 = *(void **)(v0 + 1048);
  uint64_t v6 = *(void **)(v0 + 1040);
  uint64_t v7 = *(void *)(v0 + 1008);
  uint64_t v8 = (char *)v5 + *(int *)(v0 + 1744);
  *uint64_t v5 = v1;
  uint64_t v9 = (char *)v6 + *(int *)(v7 + 48);
  v2(v9, v8, v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v57, v9, v4);
  uint64_t v10 = (char *)v6 + *(int *)(v7 + 48);
  *uint64_t v6 = v1;
  v2(v10, v8, v4);
  swift_bridgeObjectRetain();
  type(v10, v4);
  uint64_t v11 = (void *)(v0 + 536);
  sub_10001D010(v0 + 16, v0 + 536);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v14 = *(void *)(v0 + 1168);
    uint64_t v15 = *(void *)(v0 + 1136);
    uint64_t v64 = *(void *)(v0 + 1048);
    uint64_t v16 = swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558275;
    *(void *)(v0 + 784) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v17 = *(void *)(v0 + 560);
    uint64_t v18 = *(void *)(v0 + 568);
    sub_10001CD44(v11, v17);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v17);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v21 = v20;
    v58(v14, v15);
    *(void *)(v0 + 792) = sub_1008FA0F0(v19, v21, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v11);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Subscribing secondary keys for beacon: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = v64;
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 1048);

    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v11);
    uint64_t v22 = v23;
  }
  sub_10001DAB4(v22, &qword_101641238);
  uint64_t v24 = *(void *)(v0 + 1512);
  *(void *)(v0 + 1592) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 1584) = v24;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
  uint64_t v53 = *(void *)(v0 + 1240);
  uint64_t v55 = *(void *)(v0 + 1296);
  uint64_t v56 = *(void *)(v0 + 1232);
  uint64_t v26 = *(void *)(v0 + 1216);
  uint64_t v27 = *(void *)(v0 + 1168);
  uint64_t v52 = *(void *)(v0 + 1136);
  unint64_t v28 = *(void *)(v0 + 1096);
  uint64_t v65 = *(void *)(v0 + 1080);
  *(void *)typea = *(void *)(v0 + 1072);
  os_log_t log = *(os_log_t *)(v0 + 1248);
  uint64_t v29 = *(void *)(v0 + 1064);
  uint64_t v59 = *(void *)(v0 + 1056);
  type metadata accessor for NotifyWhenFoundManager();
  uint64_t v31 = *(void *)(v0 + 40);
  uint64_t v30 = *(void *)(v0 + 48);
  sub_10001CD44((void *)(v0 + 16), v31);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v30 + 8) + 8) + 32))(v31);
  sub_1002E6984(v27, v28);
  v54(v27, v52);
  v25(v53, v55, v26);
  v25(v56, (uint64_t)log, v26);
  (*(void (**)(os_log_type_t *, uint64_t, uint64_t))(v29 + 16))(*(os_log_type_t **)typea, v65, v59);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  BOOL v34 = os_log_type_enabled(v32, v33);
  uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v36 = *(void *)(v0 + 1240);
  uint64_t v66 = *(void *)(v0 + 1232);
  uint64_t v37 = *(void *)(v0 + 1216);
  uint64_t v38 = *(void *)(v0 + 1072);
  uint64_t v39 = *(void *)(v0 + 1064);
  uint64_t v40 = *(void *)(v0 + 1056);
  if (v34)
  {
    uint64_t v60 = *(void *)(v0 + 1056);
    uint64_t v41 = swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315650;
    sub_1002F6E70((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 760) = sub_1008FA0F0(v42, v43, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35(v36, v37);
    *(_WORD *)(v41 + 12) = 2080;
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 768) = sub_1008FA0F0(v44, v45, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v35(v66, v37);
    *(_WORD *)(v41 + 22) = 2080;
    sub_1002F6E70(&qword_10163FF58, 255, (void (*)(uint64_t))&type metadata accessor for DateInterval);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 776) = sub_1008FA0F0(v46, v47, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v48(v38, v60);
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "lastGoodKeyDate: %s, startDate: %s, secondaryDateInterval: %s", (uint8_t *)v41, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v35(v36, *(void *)(v0 + 1216));
    v35(v66, v37);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v48(v38, v40);
  }

  *(void *)(v0 + 1600) = v48;
  uint64_t v49 = (void *)swift_task_alloc();
  *(void *)(v0 + 1608) = v49;
  *uint64_t v49 = v0;
  v49[1] = sub_1002DE1C0;
  uint64_t v50 = *(void *)(v0 + 872);
  v49[15] = v50;
  return _swift_task_switch(sub_1002C662C, v50, 0);
}

uint64_t sub_1002DCD14(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 1536) = a1;
  *(void *)(v4 + 1544) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 872);
  if (v1) {
    uint64_t v6 = sub_1002E1BB0;
  }
  else {
    uint64_t v6 = sub_1002DCE78;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DCE78()
{
  uint64_t v67 = v0;
  uint64_t v1 = *(void *)(v0 + 1536);
  uint64_t v2 = *(void (**)(char *, char *, uint64_t))(v0 + 1472);
  os_log_type_t type = *(void (**)(char *, uint64_t))(v0 + 1440);
  uint64_t v56 = *(void *)(v0 + 1248);
  uint64_t v3 = *(void *)(v0 + 1224);
  uint64_t v4 = *(void *)(v0 + 1216);
  uint64_t v5 = *(void **)(v0 + 1040);
  uint64_t v6 = *(void **)(v0 + 1032);
  uint64_t v7 = *(void *)(v0 + 1008);
  uint64_t v8 = (char *)v6 + *(int *)(v0 + 1748);
  *uint64_t v6 = v1;
  uint64_t v9 = (char *)v5 + *(int *)(v7 + 48);
  v2(v9, v8, v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v56, v9, v4);
  uint64_t v10 = (char *)v5 + *(int *)(v7 + 48);
  *uint64_t v5 = v1;
  v2(v10, v8, v4);
  swift_bridgeObjectRetain();
  type(v10, v4);
  uint64_t v11 = (void *)(v0 + 176);
  sub_10001D010(v0 + 16, v0 + 176);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v14 = *(void *)(v0 + 1168);
    uint64_t v15 = *(void *)(v0 + 1136);
    uint64_t v63 = *(void *)(v0 + 1032);
    uint64_t v16 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558275;
    *(void *)(v0 + 808) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v18 = *(void *)(v0 + 200);
    uint64_t v17 = *(void *)(v0 + 208);
    sub_10001CD44(v11, v18);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v17 + 8) + 8) + 32))(v18);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v21 = v20;
    v57(v14, v15);
    *(void *)(v0 + 816) = sub_1008FA0F0(v19, v21, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v11);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Subscribing primary keys for beacon: %{private,mask.hash}s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = v63;
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 1032);

    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v11);
    uint64_t v22 = v23;
  }
  sub_10001DAB4(v22, &qword_101641238);
  *(void *)(v0 + 1592) = *(void *)(v0 + 1536);
  *(void *)(v0 + 1584) = _swiftEmptyArrayStorage;
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
  uint64_t v52 = *(void *)(v0 + 1240);
  uint64_t v54 = *(void *)(v0 + 1296);
  uint64_t v55 = *(void *)(v0 + 1232);
  uint64_t v25 = *(void *)(v0 + 1216);
  uint64_t v26 = *(void *)(v0 + 1168);
  uint64_t v51 = *(void *)(v0 + 1136);
  unint64_t v27 = *(void *)(v0 + 1096);
  uint64_t v64 = *(void *)(v0 + 1080);
  *(void *)typea = *(void *)(v0 + 1072);
  os_log_t log = *(os_log_t *)(v0 + 1248);
  uint64_t v28 = *(void *)(v0 + 1064);
  uint64_t v58 = *(void *)(v0 + 1056);
  type metadata accessor for NotifyWhenFoundManager();
  uint64_t v30 = *(void *)(v0 + 40);
  uint64_t v29 = *(void *)(v0 + 48);
  sub_10001CD44((void *)(v0 + 16), v30);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v29 + 8) + 8) + 32))(v30);
  sub_1002E6984(v26, v27);
  v53(v26, v51);
  v24(v52, v54, v25);
  v24(v55, (uint64_t)log, v25);
  (*(void (**)(os_log_type_t *, uint64_t, uint64_t))(v28 + 16))(*(os_log_type_t **)typea, v64, v58);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.default.getter();
  BOOL v33 = os_log_type_enabled(v31, v32);
  BOOL v34 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v35 = *(void *)(v0 + 1240);
  uint64_t v65 = *(void *)(v0 + 1232);
  uint64_t v36 = *(void *)(v0 + 1216);
  uint64_t v37 = *(void *)(v0 + 1072);
  uint64_t v38 = *(void *)(v0 + 1064);
  uint64_t v39 = *(void *)(v0 + 1056);
  if (v33)
  {
    uint64_t v59 = *(void *)(v0 + 1056);
    uint64_t v40 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315650;
    sub_1002F6E70((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v41 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 760) = sub_1008FA0F0(v41, v42, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v34(v35, v36);
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 768) = sub_1008FA0F0(v43, v44, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v34(v65, v36);
    *(_WORD *)(v40 + 22) = 2080;
    sub_1002F6E70(&qword_10163FF58, 255, (void (*)(uint64_t))&type metadata accessor for DateInterval);
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 776) = sub_1008FA0F0(v45, v46, v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v47(v37, v59);
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "lastGoodKeyDate: %s, startDate: %s, secondaryDateInterval: %s", (uint8_t *)v40, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v34(v35, *(void *)(v0 + 1216));
    v34(v65, v36);
    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v47(v37, v39);
  }

  *(void *)(v0 + 1600) = v47;
  uint64_t v48 = (void *)swift_task_alloc();
  *(void *)(v0 + 1608) = v48;
  *uint64_t v48 = v0;
  v48[1] = sub_1002DE1C0;
  uint64_t v49 = *(void *)(v0 + 872);
  v48[15] = v49;
  return _swift_task_switch(sub_1002C662C, v49, 0);
}

uint64_t sub_1002DD624(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 1552) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 872);
    return _swift_task_switch(sub_1002E26D0, v5, 0);
  }
  else
  {
    uint64_t v6 = *(void *)(v4 + 1016);
    uint64_t v7 = *(void *)(v4 + 1008);
    **(void **)(v4 + 1024) = a1;
    uint64_t v8 = *(int *)(v7 + 48);
    *(_DWORD *)(v4 + 1752) = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v4 + 1560) = v9;
    *uint64_t v9 = v4;
    v9[1] = sub_1002DD81C;
    uint64_t v10 = *(void *)(v4 + 1080);
    return sub_1002D886C(v6 + v8, v4 + 16, v10, 1);
  }
}

uint64_t sub_1002DD81C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[196] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[109];
  if (v1)
  {
    uint64_t v6 = sub_1002E31F0;
  }
  else
  {
    v4[197] = a1;
    uint64_t v6 = sub_1002DD984;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DD984()
{
  uint64_t v74 = v0;
  uint64_t v1 = *(void (**)(char *, char *, uint64_t))(v0 + 1472);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v0 + 1440);
  uint64_t v70 = *(void *)(v0 + 1248);
  uint64_t v2 = *(void *)(v0 + 1224);
  uint64_t v3 = *(void *)(v0 + 1216);
  uint64_t v4 = *(uint64_t **)(v0 + 1040);
  uint64_t v5 = *(uint64_t **)(v0 + 1024);
  uint64_t v57 = *(uint64_t **)(v0 + 1016);
  uint64_t v6 = *(void *)(v0 + 1008);
  os_log_type_t v62 = (char *)v57 + *(int *)(v0 + 1752);
  uint64_t v7 = (char *)v5 + *(int *)(v0 + 1748);
  *uint64_t v57 = *(void *)(v0 + 1576);
  uint64_t v8 = (char *)v4 + *(int *)(v6 + 48);
  uint64_t v9 = *v5;
  v1(v8, v7, v3);
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v70, v8, v3);
  uint64_t v10 = (char *)v4 + *(int *)(v6 + 48);
  *uint64_t v4 = v9;
  v1(v10, v7, v3);
  uint64_t v71 = v9;
  swift_bridgeObjectRetain();
  v60(v10, v3);
  uint64_t v11 = (char *)v4 + *(int *)(v6 + 48);
  uint64_t v12 = *v57;
  *uint64_t v4 = *v57;
  v1(v11, v62, v3);
  swift_bridgeObjectRetain();
  v60(v11, v3);
  os_log_type_t v13 = (void *)(v0 + 96);
  sub_10001D010(v0 + 16, v0 + 96);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v16 = *(void *)(v0 + 1168);
    uint64_t v17 = *(void *)(v0 + 1136);
    uint64_t type = *(void *)(v0 + 1016);
    os_log_t log = *(os_log_t *)(v0 + 1024);
    uint64_t v18 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 141558275;
    *(void *)(v0 + 832) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2081;
    uint64_t v20 = *(void *)(v0 + 120);
    uint64_t v19 = *(void *)(v0 + 128);
    sub_10001CD44(v13, v20);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v19 + 8) + 8) + 32))(v20);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v23 = v22;
    v58(v16, v17);
    *(void *)(v0 + 840) = sub_1008FA0F0(v21, v23, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Subscribing primary and secondary keys for beacon: %{private,mask.hash}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001DAB4(type, &qword_101641238);
    uint64_t v24 = (uint64_t)log;
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 1024);
    uint64_t v26 = *(void *)(v0 + 1016);

    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
    sub_10001DAB4(v26, &qword_101641238);
    uint64_t v24 = v25;
  }
  sub_10001DAB4(v24, &qword_101641238);
  *(void *)(v0 + 1592) = v71;
  *(void *)(v0 + 1584) = v12;
  unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1472);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
  uint64_t v55 = *(void *)(v0 + 1240);
  uint64_t v59 = *(void *)(v0 + 1296);
  uint64_t v61 = *(void *)(v0 + 1232);
  uint64_t v28 = *(void *)(v0 + 1216);
  uint64_t v29 = *(void *)(v0 + 1168);
  uint64_t v54 = *(void *)(v0 + 1136);
  unint64_t v30 = *(void *)(v0 + 1096);
  uint64_t v69 = *(void *)(v0 + 1080);
  *(void *)typea = *(void *)(v0 + 1072);
  os_log_t loga = *(os_log_t *)(v0 + 1248);
  uint64_t v31 = *(void *)(v0 + 1064);
  uint64_t v63 = *(void *)(v0 + 1056);
  type metadata accessor for NotifyWhenFoundManager();
  uint64_t v33 = *(void *)(v0 + 40);
  uint64_t v32 = *(void *)(v0 + 48);
  sub_10001CD44((void *)(v0 + 16), v33);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v32 + 8) + 8) + 32))(v33);
  sub_1002E6984(v29, v30);
  v56(v29, v54);
  v27(v55, v59, v28);
  v27(v61, (uint64_t)loga, v28);
  (*(void (**)(os_log_type_t *, uint64_t, uint64_t))(v31 + 16))(*(os_log_type_t **)typea, v69, v63);
  BOOL v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v38 = *(void *)(v0 + 1240);
  uint64_t v72 = *(void *)(v0 + 1232);
  uint64_t v39 = *(void *)(v0 + 1216);
  uint64_t v40 = *(void *)(v0 + 1072);
  uint64_t v41 = *(void *)(v0 + 1064);
  uint64_t v42 = *(void *)(v0 + 1056);
  if (v36)
  {
    uint64_t v64 = *(void *)(v0 + 1056);
    uint64_t v43 = swift_slowAlloc();
    v73[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315650;
    sub_1002F6E70((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 760) = sub_1008FA0F0(v44, v45, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v37(v38, v39);
    *(_WORD *)(v43 + 12) = 2080;
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 768) = sub_1008FA0F0(v46, v47, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v37(v72, v39);
    *(_WORD *)(v43 + 22) = 2080;
    sub_1002F6E70(&qword_10163FF58, 255, (void (*)(uint64_t))&type metadata accessor for DateInterval);
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 776) = sub_1008FA0F0(v48, v49, v73);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v50(v40, v64);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "lastGoodKeyDate: %s, startDate: %s, secondaryDateInterval: %s", (uint8_t *)v43, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v37(v38, *(void *)(v0 + 1216));
    v37(v72, v39);
    uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
    v50(v40, v42);
  }

  *(void *)(v0 + 1600) = v50;
  uint64_t v51 = (void *)swift_task_alloc();
  *(void *)(v0 + 1608) = v51;
  void *v51 = v0;
  v51[1] = sub_1002DE1C0;
  uint64_t v52 = *(void *)(v0 + 872);
  v51[15] = v52;
  return _swift_task_switch(sub_1002C662C, v52, 0);
}

uint64_t sub_1002DE1C0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[202] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[109];
  if (v1)
  {
    swift_errorRelease();
    uint64_t v6 = sub_1002E3CF4;
  }
  else
  {
    v4[203] = a1;
    uint64_t v6 = sub_1002DE334;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002DE334()
{
  uint64_t v1 = v0[203];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  sub_10001CD44(v0 + 2, v2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 8) + 8) + 32))(v2);
  return _swift_task_switch(sub_1002DE410, v1, 0);
}

uint64_t sub_1002DE410()
{
  uint64_t v1 = v0[203];
  uint64_t v2 = v0[146];
  uint64_t v3 = v0[145];
  uint64_t v4 = v0[143];
  uint64_t v5 = v0[142];
  v0[204] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[205] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v3, v5);
  swift_retain();
  return _swift_task_switch(sub_1002DE540, 0, 0);
}

uint64_t sub_1002DE540()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[205];
  uint64_t v3 = v1[204];
  uint64_t v4 = (void *)swift_task_alloc();
  v1[206] = v4;
  v4[2] = v3;
  v4[3] = sub_1002F6998;
  v4[4] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v1[207] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1002DE678;
  uint64_t v6 = v1[125];
  uint64_t v7 = v1[123];
  return withCheckedContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7340, v4, v7);
}

uint64_t sub_1002DE678()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 1456);
  uint64_t v2 = *(void *)(*(void *)v0 + 1168);
  uint64_t v3 = *(void *)(*(void *)v0 + 1136);
  uint64_t v4 = *(void *)(*(void *)v0 + 872);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  v1(v2, v3);
  return _swift_task_switch(sub_1002DE884, v4, 0);
}

uint64_t sub_1002DE884()
{
  uint64_t v108 = v0;
  uint64_t v1 = (void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 1000);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 968) + 48))(v2, 1, *(void *)(v0 + 960)) == 1)
  {
    sub_10001DAB4(v2, &qword_10163B9F0);
LABEL_4:
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_6;
  }
  uint64_t v3 = sub_100D1B318();
  unint64_t v5 = v4;
  sub_1002F6F2C(v2, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  if (v5 >> 60 == 15) {
    goto LABEL_4;
  }
  *(void *)(v0 + 600) = v3;
  *(void *)(v0 + 608) = v5;
  sub_1001A95DC();
  uint64_t v6 = RawRepresentable<>.hexString.getter();
  uint64_t v7 = v8;
  sub_100037A24(v3, v5);
LABEL_6:
  uint64_t v9 = *(void *)(v0 + 1616);
  *(void *)(v0 + 1672) = v7;
  *(void *)(v0 + 1664) = v6;
  uint64_t v10 = *(unsigned int *)(v0 + 1736);
  uint64_t My = type metadata accessor for Feature.FindMy();
  *(void *)(v0 + 520) = My;
  *(void *)(v0 + 528) = sub_1002F6E70((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v12 = sub_10001D958((uint64_t *)(v0 + 496));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(My - 8) + 104))(v12, v10, My);
  LOBYTE(v10) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 496);
  if (v10)
  {
    uint64_t v13 = *(void *)(v0 + 968);
    sub_10001D010(v0 + 16, v0 + 416);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    int v14 = swift_dynamicCast();
    os_log_type_t v15 = *(void (**)(void, uint64_t, uint64_t, void))(v13 + 56);
    uint64_t v16 = *(void *)(v0 + 992);
    if (v14)
    {
      uint64_t v17 = *(void *)(v0 + 976);
      v15(*(void *)(v0 + 992), 0, 1, *(void *)(v0 + 960));
      sub_1002F6EC4(v16, v17, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 1680) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1002DF8AC;
      uint64_t v19 = *(void *)(v0 + 872);
      v18[15] = v19;
      uint64_t v20 = sub_1002C662C;
LABEL_34:
      return _swift_task_switch(v20, v19, 0);
    }
    v15(*(void *)(v0 + 992), 1, 1, *(void *)(v0 + 960));
    sub_10001DAB4(v16, &qword_10163B9F0);
    if (qword_101637660 != -1) {
      swift_once();
    }
    sub_100010324(*(void *)(v0 + 1360), (uint64_t)qword_10170F838);
    sub_10001D010(v0 + 16, v0 + 376);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      v100 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
      uint64_t v23 = *(void *)(v0 + 1168);
      uint64_t v24 = *(void *)(v0 + 1136);
      uint64_t v84 = v9;
      uint64_t v25 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 141558275;
      *(void *)(v0 + 664) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 12) = 2081;
      uint64_t v26 = *(void *)(v0 + 400);
      uint64_t v27 = *(void *)(v0 + 408);
      sub_10001CD44((void *)(v0 + 376), v26);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v27 + 8) + 8) + 32))(v26);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v30 = v29;
      v100(v23, v24);
      *(void *)(v0 + 672) = sub_1008FA0F0(v28, v30, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 376);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Not an OwnedBeaconRecord not including the owned device keys %{private,mask.hash}s.", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      uint64_t v1 = (void *)(v0 + 16);
      swift_slowDealloc();
      uint64_t v9 = v84;
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 376);
    }
  }
  uint64_t v85 = v9;
  v106 = v1;
  uint64_t v96 = *(void *)(v0 + 1592);
  uint64_t v98 = *(void *)(v0 + 1664);
  uint64_t v101 = *(void *)(v0 + 1584);
  uint64_t v103 = *(void *)(v0 + 1672);
  uint64_t v31 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1488);
  uint64_t v32 = *(void *)(v0 + 1216);
  uint64_t v33 = *(void *)(v0 + 1184);
  uint64_t v34 = *(void *)(v0 + 1176);
  uint64_t v35 = *(void *)(v0 + 1144);
  uint64_t v36 = *(void *)(v0 + 1112);
  uint64_t v90 = *(void *)(v0 + 1136);
  uint64_t v92 = *(void *)(v0 + 1096);
  uint64_t v37 = *(void *)(v0 + 920);
  uint64_t v94 = *(void *)(v0 + 912);
  uint64_t v38 = *(int **)(v0 + 888);
  uint64_t v39 = *(void *)(v0 + 880);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1472))(v36, *(void *)(v0 + 1248), v32);
  v31(v36, 0, 1, v32);
  uint64_t v40 = v33 + *(int *)(v34 + 20);
  uint64_t v42 = *(void *)(v0 + 40);
  uint64_t v41 = *(void *)(v0 + 48);
  sub_10001CD44(v106, v42);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v41 + 8) + 8) + 32))(v42);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v39, 0, 1, v90);
  sub_10001D074(v92, v37 + v38[9], (uint64_t *)&unk_10163AC90);
  sub_10001D608(v36, v37, (uint64_t *)&unk_10163AC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v37 + v38[5], v40, v90);
  *(unsigned char *)(v37 + v38[6]) = 1;
  sub_10001D608(v39, v37 + v38[7], &qword_101638CF0);
  *(void *)(v37 + v38[8]) = v96;
  uint64_t v43 = (void *)(v37 + v38[10]);
  void *v43 = v98;
  v43[1] = v103;
  *(void *)(v37 + v38[11]) = v101;
  *(void *)(v37 + v38[12]) = _swiftEmptyArrayStorage;
  sub_1002F6E08(v37, v94, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  uint64_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.default.getter();
  BOOL v46 = os_log_type_enabled(v44, v45);
  uint64_t v47 = *(void *)(v0 + 912);
  if (v46)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315138;
    uint64_t v49 = sub_1003B7BF0();
    *(void *)(v0 + 720) = sub_1008FA0F0(v49, v50, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v47, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "publishKeys subscription: %s.", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002F6F2C(*(void *)(v0 + 912), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  }

  sub_1002F6E08(*(void *)(v0 + 920), *(void *)(v0 + 904), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v52 = *(void *)(v0 + 1352);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v52 = sub_100A7024C(0, *(void *)(v52 + 16) + 1, 1, v52);
  }
  unint64_t v54 = *(void *)(v52 + 16);
  unint64_t v53 = *(void *)(v52 + 24);
  unint64_t v55 = v54 + 1;
  if (v54 >= v53 >> 1)
  {
    uint64_t v83 = sub_100A7024C(v53 > 1, v54 + 1, 1, v52);
    unint64_t v55 = v54 + 1;
    unint64_t v52 = v83;
  }
  unint64_t v86 = v52;
  uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v0 + 1600);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v104 = *(void *)(v0 + 1296);
  uint64_t v97 = *(void *)(v0 + 1280);
  uint64_t v99 = *(void *)(v0 + 1288);
  uint64_t v95 = *(void *)(v0 + 1272);
  uint64_t v91 = *(void *)(v0 + 1256);
  uint64_t v88 = *(void *)(v0 + 1248);
  uint64_t v57 = *(void *)(v0 + 1216);
  uint64_t v105 = *(void *)(v0 + 1184);
  uint64_t v102 = *(void *)(v0 + 1128);
  uint64_t v58 = *(void *)(v0 + 1096);
  uint64_t v89 = *(void *)(v0 + 1088);
  uint64_t v87 = *(void *)(v0 + 1080);
  uint64_t v59 = *(void *)(v0 + 1056);
  uint64_t v60 = *(void *)(v0 + 920);
  uint64_t v61 = *(void *)(v0 + 904);
  uint64_t v62 = *(void *)(v0 + 896);
  *(void *)(v52 + 16) = v55;
  sub_1002F6EC4(v61, v52+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v54, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  swift_release();
  sub_1002F6F2C(v60, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_10001DAB4(v58, (uint64_t *)&unk_10163AC90);
  v56(v88, v57);
  v93(v87, v59);
  v56(v91, v57);
  v93(v89, v59);
  v56(v95, v57);
  v56(v97, v57);
  v56(v99, v57);
  v56(v104, v57);
  sub_10001DAB4(v102, &qword_10163F7B0);
  sub_1002F6F2C(v105, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v63 = *(void *)(v0 + 1320);
  uint64_t v64 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v106);
  if (v64 != v63)
  {
    uint64_t v67 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v86;
    *(void *)(v0 + 1344) = v67;
    *(void *)(v0 + 1336) = v85;
    uint64_t v68 = *(long long **)(v0 + 1208);
    uint64_t v69 = *(void *)(v0 + 1184);
    uint64_t v70 = (uint64_t)v68 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v67, (uint64_t)v68, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v68, (uint64_t)v106);
    sub_1002F6EC4(v70, v69, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v71 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v71;
    *(void *)(v0 + 1368) = sub_100010324(v71, (uint64_t)qword_10170DD90);
    sub_10001D010((uint64_t)v106, v0 + 56);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = *(void *)(v0 + 1168);
      uint64_t v75 = *(void *)(v0 + 1144);
      uint64_t v76 = *(void *)(v0 + 1136);
      uint64_t v77 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v77 + 12) = 2081;
      uint64_t v79 = *(void *)(v0 + 80);
      uint64_t v78 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v79);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v78 + 8) + 8) + 32))(v79);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v82 = v81;
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      *(void *)(v0 + 856) = sub_1008FA0F0(v80, v82, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    uint64_t v20 = sub_1002DA840;
    uint64_t v19 = 0;
    goto LABEL_34;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v65(v86);
}

uint64_t sub_1002DF8AC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  unint64_t v4 = (void *)*v2;
  v3[211] = a1;
  v3[212] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = v3[109];
    return _swift_task_switch(sub_1002E4C54, v5, 0);
  }
  else
  {
    uint64_t v6 = v3[122];
    uint64_t v7 = *(int *)(v3[120] + 20);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[213] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_1002DFA94;
    return sub_100E635D4(v6 + v7);
  }
}

uint64_t sub_1002DFA94(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[214] = a1;
  v3[215] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[109];
    uint64_t v5 = sub_1002E5AE8;
  }
  else
  {
    uint64_t v6 = v3[109];
    swift_release();
    uint64_t v5 = sub_1002DFC0C;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_1002DFC0C()
{
  uint64_t v154 = v0;
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    uint64_t v126 = *(void *)(v0 + 1720);
    v149 = _swiftEmptyArrayStorage;
LABEL_47:
    unint64_t v54 = (unint64_t *)(v0 + 16);
    uint64_t v55 = *(void *)(v0 + 976);
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v55, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v144 = *(void *)(v0 + 1672);
    uint64_t v138 = *(void *)(v0 + 1664);
    uint64_t v135 = *(void *)(v0 + 1592);
    uint64_t v141 = *(void *)(v0 + 1584);
    uint64_t v56 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1488);
    uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1472);
    uint64_t v58 = *(void *)(v0 + 1248);
    uint64_t v59 = *(void *)(v0 + 1216);
    uint64_t v60 = *(void *)(v0 + 1184);
    uint64_t v61 = *(void *)(v0 + 1176);
    uint64_t v62 = *(void *)(v0 + 1144);
    uint64_t v63 = *(void *)(v0 + 1112);
    uint64_t v129 = *(void *)(v0 + 1136);
    uint64_t v131 = *(void *)(v0 + 1096);
    uint64_t v64 = *(void *)(v0 + 920);
    uint64_t v133 = *(void *)(v0 + 912);
    uint64_t v65 = *(int **)(v151 + 888);
    uint64_t v66 = *(void *)(v151 + 880);
    v57(v63, v58, v59);
    v56(v63, 0, 1, v59);
    uint64_t v67 = v60 + *(int *)(v61 + 20);
    uint64_t v68 = *(void *)(v151 + 40);
    uint64_t v69 = *(void *)(v151 + 48);
    v152 = v54;
    sub_10001CD44(v54, v68);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v69 + 8) + 8) + 32))(v68);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v66, 0, 1, v129);
    sub_10001D074(v131, v64 + v65[9], (uint64_t *)&unk_10163AC90);
    sub_10001D608(v63, v64, (uint64_t *)&unk_10163AC90);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 16))(v64 + v65[5], v67, v129);
    *(unsigned char *)(v64 + v65[6]) = 1;
    sub_10001D608(v66, v64 + v65[7], &qword_101638CF0);
    *(void *)(v64 + v65[8]) = v135;
    uint64_t v70 = (void *)(v64 + v65[10]);
    void *v70 = v138;
    v70[1] = v144;
    *(void *)(v64 + v65[11]) = v141;
    uint64_t v71 = v65[12];
    uint64_t v0 = v151;
    *(void *)(v64 + v71) = v149;
    sub_1002F6E08(v64, v133, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v75 = *(void *)(v151 + 912);
    if (v74)
    {
      uint64_t v76 = (uint8_t *)swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 136315138;
      uint64_t v0 = v151;
      uint64_t v77 = sub_1003B7BF0();
      *(void *)(v151 + 720) = sub_1008FA0F0(v77, v78, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v75, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "publishKeys subscription: %s.", v76, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002F6F2C(*(void *)(v151 + 912), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    }

    sub_1002F6E08(*(void *)(v0 + 920), *(void *)(v0 + 904), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = *(void *)(v0 + 1352);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_83;
    }
    goto LABEL_51;
  }
  v137 = (uint64_t *)(v0 + 712);
  v140 = (void *)(v0 + 632);
  uint64_t v3 = (size_t *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 1720);
  v152 = (unint64_t *)(v1 + 56);
  uint64_t v5 = _swiftEmptyArrayStorage;
  v146 = (size_t *)(v0 + 736);
  while (1)
  {
    uint64_t v6 = *(v152 - 3);
    unint64_t v7 = *(v152 - 2);
    uint64_t v8 = *(v152 - 1);
    unint64_t v9 = *v152;
    sub_1000361E0(v6, v7);
    sub_1000361E0(v8, v9);
    sub_10001CFB8(v8, v9);
    sub_1000361E0(v6, v7);
    sub_100A948F8(v6, v7);
    if (v4)
    {
      uint64_t v43 = v4;
LABEL_69:
      unint64_t v113 = v7;
      static os_log_type_t.error.getter();
      if (qword_101636F48 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v114 = swift_allocObject();
      *(_OWORD *)(v114 + 16) = xmmword_101342130;
      uint64_t *v137 = v43;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v115 = String.init<A>(describing:)();
      uint64_t v117 = v116;
      *(void *)(v114 + 56) = &type metadata for String;
      *(void *)(v114 + 64) = sub_10000B4CC();
      *(void *)(v114 + 32) = v115;
      *(void *)(v114 + 40) = v117;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_100130148();
      uint64_t v118 = swift_allocError();
      unsigned char *v119 = 0;
      swift_willThrow();
      swift_errorRelease();
      unint64_t v120 = v113;
      goto LABEL_76;
    }
    v148 = v5;
    *uint64_t v3 = 57;
    type metadata accessor for __DataStorage();
    swift_allocObject();
    uint64_t v10 = __DataStorage.init(length:)();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      if (__DataStorage._bytes.getter() && __OFSUB__(0, __DataStorage._offset.getter())) {
        goto LABEL_79;
      }
      swift_allocObject();
      uint64_t v12 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v10 = v12;
    }
    if (!__DataStorage._bytes.getter()) {
      goto LABEL_86;
    }
    if (__OFSUB__(0, __DataStorage._offset.getter())) {
      break;
    }
    __DataStorage._length.getter();
    int v13 = CCECCryptorExportKey();
    if (v13)
    {
      int v44 = v13;
      static os_log_type_t.error.getter();
      if (qword_101636F48 != -1) {
        swift_once();
      }
      uint64_t v45 = *(void *)(v0 + 952);
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_101342130;
      *(void *)(v46 + 56) = &type metadata for Int32;
      *(void *)(v46 + 64) = &protocol witness table for Int32;
      *(_DWORD *)(v46 + 32) = v44;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      CryptoError.init(rawValue:)();
      uint64_t v47 = type metadata accessor for CryptoError();
      sub_1002F6E70((unint64_t *)&qword_1016605B0, 255, (void (*)(uint64_t))&type metadata accessor for CryptoError);
      uint64_t v43 = swift_allocError();
      uint64_t v49 = v48;
      uint64_t v50 = *(void *)(v47 - 8);
      int v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v45, 1, v47);
      uint64_t v52 = *(void *)(v0 + 952);
      if (v51 == 1)
      {
        (*(void (**)(uint64_t, void, uint64_t))(v50 + 104))(v49, enum case for CryptoError.unspecifiedError(_:), v47);
        sub_10001DAB4(v52, &qword_10163F758);
      }
      else
      {
        (*(void (**)(uint64_t, void, uint64_t))(v50 + 32))(v49, *(void *)(v0 + 952), v47);
      }
      swift_willThrow();
      swift_release();
      goto LABEL_69;
    }
    if ((*v3 & 0x8000000000000000) != 0) {
      goto LABEL_78;
    }
    if (*v3 >= 0x39) {
      size_t v14 = 57;
    }
    else {
      size_t v14 = *v3;
    }
    if (!v14)
    {
      swift_release();
      CCECCryptorRelease();
      sub_10001CFB8(v6, v7);
      uint64_t v15 = 0;
      uint64_t v53 = 0;
      unint64_t v16 = 0xC000000000000000;
LABEL_75:
      sub_10013019C();
      uint64_t v118 = swift_allocError();
      *(void *)uint64_t v123 = 28;
      *(void *)(v123 + 8) = v53;
      *(unsigned char *)(v123 + 16) = 0;
      swift_willThrow();
      unint64_t v120 = v16;
      uint64_t v6 = v15;
      uint64_t v0 = v151;
LABEL_76:
      sub_10001CFB8(v6, v120);
      _StringGuts.grow(_:)(35);
      *(void *)(v0 + 616) = 0;
      *(void *)(v0 + 624) = 0xE000000000000000;
      v124._object = (void *)0x80000001013F3B70;
      v124._countAndFlagsBits = 0xD000000000000021;
      String.append(_:)(v124);
      *(void *)(v0 + 728) = v118;
      sub_10000588C(&qword_101638D40);
      _print_unlocked<A, B>(_:_:)();
      return _assertionFailure(_:_:file:line:flags:)();
    }
    if (v14 <= 0xE)
    {
      unint64_t v143 = v7;
      *(void *)((char *)v140 + 6) = 0;
      void *v140 = 0;
      *(unsigned char *)(v0 + 646) = v14;
      swift_retain();
      uint64_t v17 = __DataStorage._bytes.getter();
      if (v17)
      {
        uint64_t v18 = __DataStorage._offset.getter();
        uint64_t v19 = -v18;
        if (__OFSUB__(0, v18)) {
          goto LABEL_82;
        }
        __DataStorage._length.getter();
        memcpy(v140, (const void *)(v17 + v19), v14);
        uint64_t v20 = *(unsigned __int8 *)(v0 + 644);
        uint64_t v17 = *(unsigned __int8 *)(v0 + 645);
        size_t v14 = *(unsigned __int8 *)(v0 + 646);
      }
      else
      {
        size_t v14 = v14;
        __DataStorage._length.getter();
        uint64_t v20 = 0;
      }
      uint64_t v15 = *(void *)(v0 + 632);
      uint64_t v21 = *(unsigned int *)(v151 + 640);
      swift_release_n();
      uint64_t v22 = v21 | (v20 << 32);
      uint64_t v0 = v151;
      unint64_t v16 = v22 | (v17 << 40) | (v14 << 48);
      unint64_t v7 = v143;
    }
    else
    {
      uint64_t v15 = v14 << 32;
      unint64_t v16 = v10 | 0x4000000000000000;
    }
    v152 += 4;
    CCECCryptorRelease();
    sub_10001CFB8(v6, v7);
    unint64_t v23 = v16 >> 62;
    switch(v16 >> 62)
    {
      case 1uLL:
        LODWORD(v24) = HIDWORD(v15) - v15;
        if (__OFSUB__(HIDWORD(v15), v15)) {
          goto LABEL_80;
        }
        uint64_t v24 = (int)v24;
LABEL_28:
        if (v24 != 28)
        {
          if (!v23)
          {
            uint64_t v53 = BYTE6(v16);
            goto LABEL_75;
          }
          if (v23 == 1)
          {
            if (!__OFSUB__(HIDWORD(v15), v15))
            {
              uint64_t v53 = HIDWORD(v15) - (int)v15;
              goto LABEL_75;
            }
            __break(1u);
          }
          else
          {
            uint64_t v122 = *(void *)(v15 + 16);
            uint64_t v121 = *(void *)(v15 + 24);
            uint64_t v53 = v121 - v122;
            if (!__OFSUB__(v121, v122)) {
              goto LABEL_75;
            }
          }
          __break(1u);
LABEL_86:
          __break(1u);
        }
        uint64_t v28 = v2;
        uint64_t v29 = v6;
        unint64_t v30 = v7;
        uint64_t v31 = *(unsigned int *)(v0 + 1740);
        uint64_t v32 = *(void *)(v0 + 944);
        uint64_t v33 = v0;
        uint64_t v34 = *(void *)(v0 + 936);
        uint64_t v35 = *(void *)(v33 + 928);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 104))(v32, v31, v35);
        uint64_t v36 = Data.hash(algorithm:)();
        uint64_t v38 = v37;
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v35);
        sub_10001CFB8(v15, v16);
        uint64_t v5 = v148;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_100A6EA38(0, v148[2] + 1, 1, v148);
        }
        unint64_t v40 = v5[2];
        unint64_t v39 = v5[3];
        uint64_t v0 = v151;
        if (v40 >= v39 >> 1) {
          uint64_t v5 = sub_100A6EA38((void *)(v39 > 1), v40 + 1, 1, v5);
        }
        v5[2] = v40 + 1;
        uint64_t v41 = &v5[2 * v40];
        v41[4] = v36;
        v41[5] = v38;
        sub_10001CFB8(v29, v30);
        uint64_t v4 = 0;
        uint64_t v2 = v28 - 1;
        BOOL v42 = v28 == 1;
        uint64_t v3 = v146;
        if (v42)
        {
          uint64_t v126 = 0;
          v149 = v5;
          goto LABEL_47;
        }
        break;
      case 2uLL:
        uint64_t v26 = *(void *)(v15 + 16);
        uint64_t v25 = *(void *)(v15 + 24);
        BOOL v27 = __OFSUB__(v25, v26);
        uint64_t v24 = v25 - v26;
        if (!v27) {
          goto LABEL_28;
        }
        goto LABEL_81;
      case 3uLL:
        uint64_t v53 = 0;
        goto LABEL_75;
      default:
        uint64_t v24 = BYTE6(v16);
        goto LABEL_28;
    }
  }
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  unint64_t v11 = sub_100A7024C(0, *(void *)(v11 + 16) + 1, 1, v11);
LABEL_51:
  unint64_t v81 = *(void *)(v11 + 16);
  unint64_t v80 = *(void *)(v11 + 24);
  unint64_t v82 = v81 + 1;
  if (v81 >= v80 >> 1)
  {
    uint64_t v125 = sub_100A7024C(v80 > 1, v81 + 1, 1, v11);
    unint64_t v82 = v81 + 1;
    unint64_t v11 = v125;
  }
  v134 = *(void (**)(uint64_t, uint64_t))(v0 + 1600);
  uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v147 = *(void *)(v0 + 1296);
  uint64_t v139 = *(void *)(v0 + 1280);
  uint64_t v142 = *(void *)(v0 + 1288);
  uint64_t v136 = *(void *)(v0 + 1272);
  uint64_t v132 = *(void *)(v0 + 1256);
  uint64_t v128 = *(void *)(v0 + 1248);
  uint64_t v84 = *(void *)(v0 + 1216);
  uint64_t v150 = *(void *)(v0 + 1184);
  uint64_t v145 = *(void *)(v0 + 1128);
  uint64_t v85 = *(void *)(v0 + 1096);
  uint64_t v130 = *(void *)(v0 + 1088);
  uint64_t v127 = *(void *)(v0 + 1080);
  uint64_t v86 = *(void *)(v0 + 1056);
  uint64_t v87 = *(void *)(v0 + 920);
  uint64_t v88 = *(void *)(v0 + 904);
  uint64_t v89 = *(void *)(v0 + 896);
  *(void *)(v11 + 16) = v82;
  uint64_t v90 = v11
      + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))
      + *(void *)(v89 + 72) * v81;
  unint64_t v91 = v11;
  sub_1002F6EC4(v88, v90, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  swift_release();
  sub_1002F6F2C(v87, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_10001DAB4(v85, (uint64_t *)&unk_10163AC90);
  v83(v128, v84);
  v134(v127, v86);
  v83(v132, v84);
  v134(v130, v86);
  v83(v136, v84);
  v83(v139, v84);
  v83(v142, v84);
  v83(v147, v84);
  sub_10001DAB4(v145, &qword_10163F7B0);
  sub_1002F6F2C(v150, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v92 = *(void *)(v0 + 1320);
  uint64_t v93 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v152);
  if (v93 == v92)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v94 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v94(v91);
  }
  else
  {
    uint64_t v96 = (void *)(v0 + 56);
    uint64_t v97 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v91;
    *(void *)(v0 + 1344) = v97;
    *(void *)(v0 + 1336) = v126;
    uint64_t v98 = *(long long **)(v0 + 1208);
    uint64_t v99 = *(void *)(v0 + 1184);
    uint64_t v100 = (uint64_t)v98 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v97, (uint64_t)v98, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v98, (uint64_t)v152);
    sub_1002F6EC4(v100, v99, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v101 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v101;
    *(void *)(v0 + 1368) = sub_100010324(v101, (uint64_t)qword_10170DD90);
    sub_10001D010((uint64_t)v152, v0 + 56);
    uint64_t v102 = Logger.logObject.getter();
    os_log_type_t v103 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v102, v103))
    {
      uint64_t v104 = *(void *)(v0 + 1168);
      uint64_t v105 = *(void *)(v151 + 1144);
      uint64_t v106 = *(void *)(v151 + 1136);
      uint64_t v107 = swift_slowAlloc();
      v153[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v107 = 141558275;
      *(void *)(v151 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v107 + 12) = 2081;
      uint64_t v108 = *(void *)(v151 + 80);
      uint64_t v109 = *(void *)(v151 + 88);
      sub_10001CD44(v96, v108);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v109 + 8) + 8) + 32))(v108);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v112 = v111;
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v104, v106);
      uint64_t v0 = v151;
      *(void *)(v151 + 856) = sub_1008FA0F0(v110, v112, v153);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v96);
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v107, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E1090()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v65 = (void *)(v0 + 456);
  sub_10001D010(v0 + 16, v0 + 456);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v66 = v2;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v62 = *(void *)(v0 + 1296);
    uint64_t v56 = *(void *)(v0 + 1280);
    uint64_t v58 = *(void *)(v0 + 1288);
    uint64_t v54 = *(void *)(v0 + 1272);
    uint64_t v50 = *(void *)(v0 + 1216);
    uint64_t v51 = *(void *)(v0 + 1256);
    uint64_t v64 = *(void *)(v0 + 1184);
    uint64_t v4 = *(void *)(v0 + 1168);
    uint64_t v5 = *(void *)(v0 + 1136);
    uint64_t v60 = *(void *)(v0 + 1128);
    uint64_t v49 = *(void *)(v0 + 1088);
    uint64_t v47 = *(void *)(v0 + 1064);
    uint64_t v48 = *(void *)(v0 + 1080);
    uint64_t v46 = *(void *)(v0 + 1056);
    uint64_t v6 = swift_slowAlloc();
    int v44 = (void *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    *(void *)(v0 + 744) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    uint64_t v7 = *(void *)(v0 + 480);
    uint64_t v8 = *(void *)(v0 + 488);
    sub_10001CD44(v65, v7);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v7);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v11 = v10;
    v43(v4, v5);
    *(void *)(v0 + 752) = sub_1008FA0F0(v9, v11, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    *(_WORD *)(v6 + 22) = 2114;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 800) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v44 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v3, "Could not obtain keys for %{private,mask.hash}s - %{public}@", (uint8_t *)v6, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_errorRelease();
    int v13 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v13(v48, v46);
    v45(v51, v50);
    v13(v49, v46);
    v45(v54, v50);
    v45(v56, v50);
    v45(v58, v50);
    v45(v62, v50);
    sub_10001DAB4(v60, &qword_10163F7B0);
    uint64_t v14 = v64;
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v61 = *(void *)(v0 + 1296);
    uint64_t v57 = *(void *)(v0 + 1288);
    uint64_t v53 = *(void *)(v0 + 1272);
    uint64_t v55 = *(void *)(v0 + 1280);
    uint64_t v16 = *(void *)(v0 + 1256);
    uint64_t v17 = *(void *)(v0 + 1216);
    uint64_t v63 = *(void *)(v0 + 1184);
    uint64_t v59 = *(void *)(v0 + 1128);
    uint64_t v52 = *(void *)(v0 + 1088);
    uint64_t v18 = *(void *)(v0 + 1080);
    uint64_t v19 = *(void *)(v0 + 1064);
    uint64_t v20 = *(void *)(v0 + 1056);

    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    swift_errorRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v21(v18, v20);
    v15(v16, v17);
    v21(v52, v20);
    v15(v53, v17);
    v15(v55, v17);
    v15(v57, v17);
    v15(v61, v17);
    uint64_t v1 = v0 + 16;
    sub_10001DAB4(v59, &qword_10163F7B0);
    uint64_t v14 = v63;
  }
  sub_1002F6F2C(v14, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v22 = *(void *)(v0 + 1352);
  uint64_t v23 = *(void *)(v0 + 1320);
  uint64_t v24 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  if (v24 == v23)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v25(v22);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v22;
    *(void *)(v0 + 1344) = v27;
    *(void *)(v0 + 1336) = 0;
    uint64_t v28 = *(long long **)(v0 + 1208);
    uint64_t v29 = *(void *)(v0 + 1184);
    uint64_t v30 = (uint64_t)v28 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v27, (uint64_t)v28, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v28, v1);
    sub_1002F6EC4(v30, v29, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v31;
    *(void *)(v0 + 1368) = sub_100010324(v31, (uint64_t)qword_10170DD90);
    sub_10001D010(v1, v0 + 56);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 1168);
      uint64_t v35 = *(void *)(v0 + 1144);
      uint64_t v36 = *(void *)(v0 + 1136);
      uint64_t v37 = swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v39 = *(void *)(v0 + 80);
      uint64_t v38 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v39);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v38 + 8) + 8) + 32))(v39);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      *(void *)(v0 + 856) = sub_1008FA0F0(v40, v42, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E1BB0()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v65 = (void *)(v0 + 456);
  sub_10001D010(v0 + 16, v0 + 456);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v66 = v2;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v62 = *(void *)(v0 + 1296);
    uint64_t v56 = *(void *)(v0 + 1280);
    uint64_t v58 = *(void *)(v0 + 1288);
    uint64_t v54 = *(void *)(v0 + 1272);
    uint64_t v50 = *(void *)(v0 + 1216);
    uint64_t v51 = *(void *)(v0 + 1256);
    uint64_t v64 = *(void *)(v0 + 1184);
    uint64_t v4 = *(void *)(v0 + 1168);
    uint64_t v5 = *(void *)(v0 + 1136);
    uint64_t v60 = *(void *)(v0 + 1128);
    uint64_t v49 = *(void *)(v0 + 1088);
    uint64_t v47 = *(void *)(v0 + 1064);
    uint64_t v48 = *(void *)(v0 + 1080);
    uint64_t v46 = *(void *)(v0 + 1056);
    uint64_t v6 = swift_slowAlloc();
    int v44 = (void *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    *(void *)(v0 + 744) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    uint64_t v7 = *(void *)(v0 + 480);
    uint64_t v8 = *(void *)(v0 + 488);
    sub_10001CD44(v65, v7);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v7);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v11 = v10;
    v43(v4, v5);
    *(void *)(v0 + 752) = sub_1008FA0F0(v9, v11, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    *(_WORD *)(v6 + 22) = 2114;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 800) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v44 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v3, "Could not obtain keys for %{private,mask.hash}s - %{public}@", (uint8_t *)v6, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_errorRelease();
    int v13 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v13(v48, v46);
    v45(v51, v50);
    v13(v49, v46);
    v45(v54, v50);
    v45(v56, v50);
    v45(v58, v50);
    v45(v62, v50);
    sub_10001DAB4(v60, &qword_10163F7B0);
    uint64_t v14 = v64;
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v61 = *(void *)(v0 + 1296);
    uint64_t v57 = *(void *)(v0 + 1288);
    uint64_t v53 = *(void *)(v0 + 1272);
    uint64_t v55 = *(void *)(v0 + 1280);
    uint64_t v16 = *(void *)(v0 + 1256);
    uint64_t v17 = *(void *)(v0 + 1216);
    uint64_t v63 = *(void *)(v0 + 1184);
    uint64_t v59 = *(void *)(v0 + 1128);
    uint64_t v52 = *(void *)(v0 + 1088);
    uint64_t v18 = *(void *)(v0 + 1080);
    uint64_t v19 = *(void *)(v0 + 1064);
    uint64_t v20 = *(void *)(v0 + 1056);

    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    swift_errorRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v21(v18, v20);
    v15(v16, v17);
    v21(v52, v20);
    v15(v53, v17);
    v15(v55, v17);
    v15(v57, v17);
    v15(v61, v17);
    uint64_t v1 = v0 + 16;
    sub_10001DAB4(v59, &qword_10163F7B0);
    uint64_t v14 = v63;
  }
  sub_1002F6F2C(v14, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v22 = *(void *)(v0 + 1352);
  uint64_t v23 = *(void *)(v0 + 1320);
  uint64_t v24 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  if (v24 == v23)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v25(v22);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v22;
    *(void *)(v0 + 1344) = v27;
    *(void *)(v0 + 1336) = 0;
    uint64_t v28 = *(long long **)(v0 + 1208);
    uint64_t v29 = *(void *)(v0 + 1184);
    uint64_t v30 = (uint64_t)v28 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v27, (uint64_t)v28, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v28, v1);
    sub_1002F6EC4(v30, v29, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v31;
    *(void *)(v0 + 1368) = sub_100010324(v31, (uint64_t)qword_10170DD90);
    sub_10001D010(v1, v0 + 56);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 1168);
      uint64_t v35 = *(void *)(v0 + 1144);
      uint64_t v36 = *(void *)(v0 + 1136);
      uint64_t v37 = swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v39 = *(void *)(v0 + 80);
      uint64_t v38 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v39);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v38 + 8) + 8) + 32))(v39);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      *(void *)(v0 + 856) = sub_1008FA0F0(v40, v42, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E26D0()
{
  uint64_t v68 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v65 = (void *)(v0 + 456);
  sub_10001D010(v0 + 16, v0 + 456);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  uint64_t v66 = v2;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v62 = *(void *)(v0 + 1296);
    uint64_t v56 = *(void *)(v0 + 1280);
    uint64_t v58 = *(void *)(v0 + 1288);
    uint64_t v54 = *(void *)(v0 + 1272);
    uint64_t v50 = *(void *)(v0 + 1216);
    uint64_t v51 = *(void *)(v0 + 1256);
    uint64_t v64 = *(void *)(v0 + 1184);
    uint64_t v4 = *(void *)(v0 + 1168);
    uint64_t v5 = *(void *)(v0 + 1136);
    uint64_t v60 = *(void *)(v0 + 1128);
    uint64_t v49 = *(void *)(v0 + 1088);
    uint64_t v47 = *(void *)(v0 + 1064);
    uint64_t v48 = *(void *)(v0 + 1080);
    uint64_t v46 = *(void *)(v0 + 1056);
    uint64_t v6 = swift_slowAlloc();
    int v44 = (void *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    *(void *)(v0 + 744) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    uint64_t v7 = *(void *)(v0 + 480);
    uint64_t v8 = *(void *)(v0 + 488);
    sub_10001CD44(v65, v7);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v8 + 8) + 8) + 32))(v7);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v11 = v10;
    v43(v4, v5);
    *(void *)(v0 + 752) = sub_1008FA0F0(v9, v11, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    *(_WORD *)(v6 + 22) = 2114;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 800) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v44 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v66, v3, "Could not obtain keys for %{private,mask.hash}s - %{public}@", (uint8_t *)v6, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_errorRelease();
    int v13 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v13(v48, v46);
    v45(v51, v50);
    v13(v49, v46);
    v45(v54, v50);
    v45(v56, v50);
    v45(v58, v50);
    v45(v62, v50);
    sub_10001DAB4(v60, &qword_10163F7B0);
    uint64_t v14 = v64;
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v61 = *(void *)(v0 + 1296);
    uint64_t v57 = *(void *)(v0 + 1288);
    uint64_t v53 = *(void *)(v0 + 1272);
    uint64_t v55 = *(void *)(v0 + 1280);
    uint64_t v16 = *(void *)(v0 + 1256);
    uint64_t v17 = *(void *)(v0 + 1216);
    uint64_t v63 = *(void *)(v0 + 1184);
    uint64_t v59 = *(void *)(v0 + 1128);
    uint64_t v52 = *(void *)(v0 + 1088);
    uint64_t v18 = *(void *)(v0 + 1080);
    uint64_t v19 = *(void *)(v0 + 1064);
    uint64_t v20 = *(void *)(v0 + 1056);

    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v65);
    swift_errorRelease();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v21(v18, v20);
    v15(v16, v17);
    v21(v52, v20);
    v15(v53, v17);
    v15(v55, v17);
    v15(v57, v17);
    v15(v61, v17);
    uint64_t v1 = v0 + 16;
    sub_10001DAB4(v59, &qword_10163F7B0);
    uint64_t v14 = v63;
  }
  sub_1002F6F2C(v14, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v22 = *(void *)(v0 + 1352);
  uint64_t v23 = *(void *)(v0 + 1320);
  uint64_t v24 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  if (v24 == v23)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v25(v22);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v22;
    *(void *)(v0 + 1344) = v27;
    *(void *)(v0 + 1336) = 0;
    uint64_t v28 = *(long long **)(v0 + 1208);
    uint64_t v29 = *(void *)(v0 + 1184);
    uint64_t v30 = (uint64_t)v28 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v27, (uint64_t)v28, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v28, v1);
    sub_1002F6EC4(v30, v29, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v31 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v31;
    *(void *)(v0 + 1368) = sub_100010324(v31, (uint64_t)qword_10170DD90);
    sub_10001D010(v1, v0 + 56);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = *(void *)(v0 + 1168);
      uint64_t v35 = *(void *)(v0 + 1144);
      uint64_t v36 = *(void *)(v0 + 1136);
      uint64_t v37 = swift_slowAlloc();
      v67[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v39 = *(void *)(v0 + 80);
      uint64_t v38 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v39);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v38 + 8) + 8) + 32))(v39);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v42 = v41;
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
      *(void *)(v0 + 856) = sub_1008FA0F0(v40, v42, v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v37, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E31F0()
{
  uint64_t v65 = v0;
  sub_10001DAB4(*(void *)(v0 + 1024), &qword_101641238);
  uint64_t v63 = v0 + 16;
  uint64_t v61 = (void *)(v0 + 456);
  sub_10001D010(v0 + 16, v0 + 456);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  uint64_t v62 = v1;
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v58 = *(void *)(v0 + 1296);
    uint64_t v55 = *(void *)(v0 + 1288);
    uint64_t v51 = *(void *)(v0 + 1272);
    uint64_t v53 = *(void *)(v0 + 1280);
    uint64_t v48 = *(void *)(v0 + 1216);
    uint64_t v49 = *(void *)(v0 + 1256);
    uint64_t v60 = *(void *)(v0 + 1184);
    uint64_t v3 = *(void *)(v0 + 1168);
    uint64_t v4 = *(void *)(v0 + 1136);
    uint64_t v57 = *(void *)(v0 + 1128);
    uint64_t v47 = *(void *)(v0 + 1088);
    uint64_t v46 = *(void *)(v0 + 1080);
    uint64_t v43 = *(void *)(v0 + 1056);
    uint64_t v44 = *(void *)(v0 + 1064);
    uint64_t v5 = swift_slowAlloc();
    unint64_t v42 = (void *)swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141558531;
    *(void *)(v0 + 744) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2081;
    uint64_t v6 = *(void *)(v0 + 480);
    uint64_t v7 = *(void *)(v0 + 488);
    sub_10001CD44(v61, v6);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 8) + 8) + 32))(v6);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v10 = v9;
    v41(v3, v4);
    *(void *)(v0 + 752) = sub_1008FA0F0(v8, v10, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v61);
    *(_WORD *)(v5 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 800) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v42 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v62, v2, "Could not obtain keys for %{private,mask.hash}s - %{public}@", (uint8_t *)v5, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_errorRelease();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v12(v46, v43);
    v45(v49, v48);
    v12(v47, v43);
    v45(v51, v48);
    v45(v53, v48);
    v45(v55, v48);
    v45(v58, v48);
  }
  else
  {
    int v13 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
    uint64_t v59 = *(void *)(v0 + 1296);
    uint64_t v56 = *(void *)(v0 + 1288);
    uint64_t v52 = *(void *)(v0 + 1272);
    uint64_t v54 = *(void *)(v0 + 1280);
    uint64_t v14 = *(void *)(v0 + 1256);
    uint64_t v15 = *(void *)(v0 + 1216);
    uint64_t v60 = *(void *)(v0 + 1184);
    uint64_t v57 = *(void *)(v0 + 1128);
    uint64_t v50 = *(void *)(v0 + 1088);
    uint64_t v16 = *(void *)(v0 + 1080);
    uint64_t v17 = *(void *)(v0 + 1064);
    uint64_t v18 = *(void *)(v0 + 1056);

    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v61);
    swift_errorRelease();
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v19(v16, v18);
    v13(v14, v15);
    v19(v50, v18);
    v13(v52, v15);
    v13(v54, v15);
    v13(v56, v15);
    v13(v59, v15);
  }
  sub_10001DAB4(v57, &qword_10163F7B0);
  sub_1002F6F2C(v60, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v20 = *(void *)(v0 + 1352);
  uint64_t v21 = *(void *)(v0 + 1320);
  uint64_t v22 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v63);
  if (v22 == v21)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v23(v20);
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v20;
    *(void *)(v0 + 1344) = v25;
    *(void *)(v0 + 1336) = 0;
    uint64_t v26 = *(long long **)(v0 + 1208);
    uint64_t v27 = *(void *)(v0 + 1184);
    uint64_t v28 = (uint64_t)v26 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v25, (uint64_t)v26, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v26, v63);
    sub_1002F6EC4(v28, v27, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v29;
    *(void *)(v0 + 1368) = sub_100010324(v29, (uint64_t)qword_10170DD90);
    sub_10001D010(v63, v0 + 56);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = *(void *)(v0 + 1168);
      uint64_t v33 = *(void *)(v0 + 1144);
      uint64_t v34 = *(void *)(v0 + 1136);
      uint64_t v35 = swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2081;
      uint64_t v37 = *(void *)(v0 + 80);
      uint64_t v36 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v37);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v36 + 8) + 8) + 32))(v37);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v40 = v39;
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      *(void *)(v0 + 856) = sub_1008FA0F0(v38, v40, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E3CF4()
{
  uint64_t v98 = v0;
  uint64_t v1 = (void *)(v0 + 16);
  *(_OWORD *)(v0 + 1664) = 0u;
  uint64_t v2 = *(unsigned int *)(v0 + 1736);
  uint64_t My = type metadata accessor for Feature.FindMy();
  *(void *)(v0 + 520) = My;
  *(void *)(v0 + 528) = sub_1002F6E70((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v4 = sub_10001D958((uint64_t *)(v0 + 496));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(My - 8) + 104))(v4, v2, My);
  LOBYTE(v2) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 496);
  if (v2)
  {
    uint64_t v5 = *(void *)(v0 + 968);
    sub_10001D010(v0 + 16, v0 + 416);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    int v6 = swift_dynamicCast();
    uint64_t v7 = *(void (**)(void, uint64_t, uint64_t, void))(v5 + 56);
    uint64_t v8 = *(void *)(v0 + 992);
    if (v6)
    {
      uint64_t v9 = *(void *)(v0 + 976);
      v7(*(void *)(v0 + 992), 0, 1, *(void *)(v0 + 960));
      sub_1002F6EC4(v8, v9, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      unint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 1680) = v10;
      void *v10 = v0;
      v10[1] = sub_1002DF8AC;
      uint64_t v11 = *(void *)(v0 + 872);
      v10[15] = v11;
      uint64_t v12 = sub_1002C662C;
LABEL_29:
      return _swift_task_switch(v12, v11, 0);
    }
    v7(*(void *)(v0 + 992), 1, 1, *(void *)(v0 + 960));
    sub_10001DAB4(v8, &qword_10163B9F0);
    if (qword_101637660 != -1) {
      swift_once();
    }
    sub_100010324(*(void *)(v0 + 1360), (uint64_t)qword_10170F838);
    sub_10001D010(v0 + 16, v0 + 376);
    int v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v90 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
      uint64_t v15 = *(void *)(v0 + 1168);
      uint64_t v16 = *(void *)(v0 + 1136);
      uint64_t v17 = swift_slowAlloc();
      v97[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 141558275;
      *(void *)(v0 + 664) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 12) = 2081;
      uint64_t v18 = *(void *)(v0 + 400);
      uint64_t v19 = *(void *)(v0 + 408);
      sub_10001CD44((void *)(v0 + 376), v18);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v19 + 8) + 8) + 32))(v18);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v22 = v21;
      v90(v15, v16);
      *(void *)(v0 + 672) = sub_1008FA0F0(v20, v22, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 376);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Not an OwnedBeaconRecord not including the owned device keys %{private,mask.hash}s.", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      uint64_t v1 = (void *)(v0 + 16);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 376);
    }
  }
  uint64_t v96 = v1;
  uint64_t v86 = *(void *)(v0 + 1592);
  uint64_t v88 = *(void *)(v0 + 1664);
  uint64_t v91 = *(void *)(v0 + 1584);
  uint64_t v93 = *(void *)(v0 + 1672);
  uint64_t v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1488);
  uint64_t v24 = *(void *)(v0 + 1216);
  uint64_t v25 = *(void *)(v0 + 1184);
  uint64_t v26 = *(void *)(v0 + 1176);
  uint64_t v27 = *(void *)(v0 + 1144);
  uint64_t v28 = *(void *)(v0 + 1112);
  uint64_t v80 = *(void *)(v0 + 1136);
  uint64_t v82 = *(void *)(v0 + 1096);
  uint64_t v29 = *(void *)(v0 + 920);
  uint64_t v84 = *(void *)(v0 + 912);
  uint64_t v30 = *(int **)(v0 + 888);
  uint64_t v31 = *(void *)(v0 + 880);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1472))(v28, *(void *)(v0 + 1248), v24);
  v23(v28, 0, 1, v24);
  uint64_t v32 = v25 + *(int *)(v26 + 20);
  uint64_t v34 = *(void *)(v0 + 40);
  uint64_t v33 = *(void *)(v0 + 48);
  sub_10001CD44(v96, v34);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v33 + 8) + 8) + 32))(v34);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v80);
  sub_10001D074(v82, v29 + v30[9], (uint64_t *)&unk_10163AC90);
  sub_10001D608(v28, v29, (uint64_t *)&unk_10163AC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(v29 + v30[5], v32, v80);
  *(unsigned char *)(v29 + v30[6]) = 1;
  sub_10001D608(v31, v29 + v30[7], &qword_101638CF0);
  *(void *)(v29 + v30[8]) = v86;
  uint64_t v35 = (void *)(v29 + v30[10]);
  *uint64_t v35 = v88;
  v35[1] = v93;
  *(void *)(v29 + v30[11]) = v91;
  *(void *)(v29 + v30[12]) = _swiftEmptyArrayStorage;
  sub_1002F6E08(v29, v84, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.default.getter();
  BOOL v38 = os_log_type_enabled(v36, v37);
  uint64_t v39 = *(void *)(v0 + 912);
  if (v38)
  {
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    v97[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v40 = 136315138;
    uint64_t v41 = sub_1003B7BF0();
    *(void *)(v0 + 720) = sub_1008FA0F0(v41, v42, v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v39, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "publishKeys subscription: %s.", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002F6F2C(*(void *)(v0 + 912), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  }

  sub_1002F6E08(*(void *)(v0 + 920), *(void *)(v0 + 904), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v44 = *(void *)(v0 + 1352);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v44 = sub_100A7024C(0, *(void *)(v44 + 16) + 1, 1, v44);
  }
  unint64_t v46 = *(void *)(v44 + 16);
  unint64_t v45 = *(void *)(v44 + 24);
  unint64_t v47 = v46 + 1;
  if (v46 >= v45 >> 1)
  {
    uint64_t v75 = sub_100A7024C(v45 > 1, v46 + 1, 1, v44);
    unint64_t v47 = v46 + 1;
    unint64_t v44 = v75;
  }
  unint64_t v76 = v44;
  uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v0 + 1600);
  uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v94 = *(void *)(v0 + 1296);
  uint64_t v87 = *(void *)(v0 + 1280);
  uint64_t v89 = *(void *)(v0 + 1288);
  uint64_t v85 = *(void *)(v0 + 1272);
  uint64_t v81 = *(void *)(v0 + 1256);
  uint64_t v78 = *(void *)(v0 + 1248);
  uint64_t v49 = *(void *)(v0 + 1216);
  uint64_t v95 = *(void *)(v0 + 1184);
  uint64_t v92 = *(void *)(v0 + 1128);
  uint64_t v50 = *(void *)(v0 + 1096);
  uint64_t v79 = *(void *)(v0 + 1088);
  uint64_t v77 = *(void *)(v0 + 1080);
  uint64_t v51 = *(void *)(v0 + 1056);
  uint64_t v52 = *(void *)(v0 + 920);
  uint64_t v53 = *(void *)(v0 + 904);
  uint64_t v54 = *(void *)(v0 + 896);
  *(void *)(v44 + 16) = v47;
  sub_1002F6EC4(v53, v44+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v46, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  swift_release();
  sub_1002F6F2C(v52, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_10001DAB4(v50, (uint64_t *)&unk_10163AC90);
  v48(v78, v49);
  v83(v77, v51);
  v48(v81, v49);
  v83(v79, v51);
  v48(v85, v49);
  v48(v87, v49);
  v48(v89, v49);
  v48(v94, v49);
  sub_10001DAB4(v92, &qword_10163F7B0);
  sub_1002F6F2C(v95, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v55 = *(void *)(v0 + 1320);
  uint64_t v56 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v96);
  if (v56 != v55)
  {
    uint64_t v59 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v76;
    *(void *)(v0 + 1344) = v59;
    *(void *)(v0 + 1336) = 0;
    uint64_t v60 = *(long long **)(v0 + 1208);
    uint64_t v61 = *(void *)(v0 + 1184);
    uint64_t v62 = (uint64_t)v60 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v59, (uint64_t)v60, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v60, (uint64_t)v96);
    sub_1002F6EC4(v62, v61, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v63 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v63;
    *(void *)(v0 + 1368) = sub_100010324(v63, (uint64_t)qword_10170DD90);
    sub_10001D010((uint64_t)v96, v0 + 56);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = *(void *)(v0 + 1168);
      uint64_t v67 = *(void *)(v0 + 1144);
      uint64_t v68 = *(void *)(v0 + 1136);
      uint64_t v69 = swift_slowAlloc();
      v97[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v69 + 12) = 2081;
      uint64_t v71 = *(void *)(v0 + 80);
      uint64_t v70 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v71);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v70 + 8) + 8) + 32))(v71);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v74 = v73;
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
      *(void *)(v0 + 856) = sub_1008FA0F0(v72, v74, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    uint64_t v12 = sub_1002DA840;
    uint64_t v11 = 0;
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v57 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v57(v76);
}

uint64_t sub_1002E4C54()
{
  uint64_t v92 = v0;
  if (qword_101637660 != -1) {
    swift_once();
  }
  sub_100010324(*(void *)(v0 + 1360), (uint64_t)qword_10170F838);
  uint64_t v90 = (void *)(v0 + 16);
  sub_10001D010(v0 + 16, v0 + 296);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v3 = *(void *)(v0 + 1168);
    uint64_t v4 = *(void *)(v0 + 1136);
    uint64_t v88 = *(void *)(v0 + 976);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v81 = (void *)swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141558531;
    *(void *)(v0 + 688) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2081;
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v6 = *(void *)(v0 + 328);
    sub_10001CD44((void *)(v0 + 296), v7);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v6 + 8) + 8) + 32))(v7);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v10 = v9;
    v74(v3, v4);
    *(void *)(v0 + 696) = sub_1008FA0F0(v8, v10, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 296);
    *(_WORD *)(v5 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 704) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v81 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to get ownedDevice keys for %{private,mask.hash}s error: %{public}@.", (uint8_t *)v5, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v12 = v88;
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 976);

    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 296);
    swift_errorRelease();
    uint64_t v12 = v13;
  }
  sub_1002F6F2C(v12, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v79 = *(void *)(v0 + 1592);
  uint64_t v82 = *(void *)(v0 + 1664);
  uint64_t v84 = *(void *)(v0 + 1584);
  uint64_t v86 = *(void *)(v0 + 1672);
  os_log_type_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1488);
  uint64_t v15 = *(void *)(v0 + 1216);
  uint64_t v16 = *(void *)(v0 + 1184);
  uint64_t v17 = *(void *)(v0 + 1176);
  uint64_t v18 = *(void *)(v0 + 1144);
  uint64_t v19 = *(void *)(v0 + 1112);
  uint64_t v72 = *(void *)(v0 + 1136);
  uint64_t v75 = *(void *)(v0 + 1096);
  uint64_t v20 = *(void *)(v0 + 920);
  uint64_t v77 = *(void *)(v0 + 912);
  unint64_t v21 = *(int **)(v0 + 888);
  uint64_t v22 = *(void *)(v0 + 880);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1472))(v19, *(void *)(v0 + 1248), v15);
  v14(v19, 0, 1, v15);
  uint64_t v23 = v16 + *(int *)(v17 + 20);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  sub_10001CD44(v90, v24);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v25 + 8) + 8) + 32))(v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v72);
  sub_10001D074(v75, v20 + v21[9], (uint64_t *)&unk_10163AC90);
  sub_10001D608(v19, v20, (uint64_t *)&unk_10163AC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v21[5], v23, v72);
  *(unsigned char *)(v20 + v21[6]) = 1;
  sub_10001D608(v22, v20 + v21[7], &qword_101638CF0);
  *(void *)(v20 + v21[8]) = v79;
  uint64_t v26 = (void *)(v20 + v21[10]);
  void *v26 = v82;
  v26[1] = v86;
  *(void *)(v20 + v21[11]) = v84;
  *(void *)(v20 + v21[12]) = _swiftEmptyArrayStorage;
  sub_1002F6E08(v20, v77, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 912);
  if (v29)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v32 = sub_1003B7BF0();
    *(void *)(v0 + 720) = sub_1008FA0F0(v32, v33, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v30, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "publishKeys subscription: %s.", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002F6F2C(*(void *)(v0 + 912), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  }

  sub_1002F6E08(*(void *)(v0 + 920), *(void *)(v0 + 904), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v35 = *(void *)(v0 + 1352);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v35 = sub_100A7024C(0, *(void *)(v35 + 16) + 1, 1, v35);
  }
  unint64_t v37 = *(void *)(v35 + 16);
  unint64_t v36 = *(void *)(v35 + 24);
  unint64_t v38 = v37 + 1;
  if (v37 >= v36 >> 1)
  {
    uint64_t v68 = sub_100A7024C(v36 > 1, v37 + 1, 1, v35);
    unint64_t v38 = v37 + 1;
    unint64_t v35 = v68;
  }
  unint64_t v76 = *(void (**)(uint64_t, uint64_t))(v0 + 1600);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v87 = *(void *)(v0 + 1296);
  uint64_t v80 = *(void *)(v0 + 1280);
  uint64_t v83 = *(void *)(v0 + 1288);
  uint64_t v78 = *(void *)(v0 + 1272);
  uint64_t v73 = *(void *)(v0 + 1256);
  uint64_t v70 = *(void *)(v0 + 1248);
  uint64_t v40 = *(void *)(v0 + 1216);
  uint64_t v89 = *(void *)(v0 + 1184);
  uint64_t v85 = *(void *)(v0 + 1128);
  uint64_t v41 = *(void *)(v0 + 1096);
  uint64_t v71 = *(void *)(v0 + 1088);
  uint64_t v69 = *(void *)(v0 + 1080);
  uint64_t v42 = *(void *)(v0 + 1056);
  uint64_t v43 = *(void *)(v0 + 920);
  uint64_t v44 = *(void *)(v0 + 904);
  uint64_t v45 = *(void *)(v0 + 896);
  *(void *)(v35 + 16) = v38;
  uint64_t v46 = v35
      + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
      + *(void *)(v45 + 72) * v37;
  unint64_t v47 = v35;
  sub_1002F6EC4(v44, v46, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  swift_release();
  sub_1002F6F2C(v43, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_10001DAB4(v41, (uint64_t *)&unk_10163AC90);
  v39(v70, v40);
  v76(v69, v42);
  v39(v73, v40);
  v76(v71, v42);
  v39(v78, v40);
  v39(v80, v40);
  v39(v83, v40);
  v39(v87, v40);
  sub_10001DAB4(v85, &qword_10163F7B0);
  sub_1002F6F2C(v89, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v48 = *(void *)(v0 + 1320);
  uint64_t v49 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v90);
  if (v49 == v48)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v50(v47);
  }
  else
  {
    uint64_t v52 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v47;
    *(void *)(v0 + 1344) = v52;
    *(void *)(v0 + 1336) = 0;
    uint64_t v53 = *(long long **)(v0 + 1208);
    uint64_t v54 = *(void *)(v0 + 1184);
    uint64_t v55 = (uint64_t)v53 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v52, (uint64_t)v53, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v53, (uint64_t)v90);
    sub_1002F6EC4(v55, v54, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v56;
    *(void *)(v0 + 1368) = sub_100010324(v56, (uint64_t)qword_10170DD90);
    sub_10001D010((uint64_t)v90, v0 + 56);
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = *(void *)(v0 + 1168);
      uint64_t v60 = *(void *)(v0 + 1144);
      uint64_t v61 = *(void *)(v0 + 1136);
      uint64_t v62 = swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v62 + 12) = 2081;
      uint64_t v64 = *(void *)(v0 + 80);
      uint64_t v63 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v64);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v64);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v67 = v66;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
      *(void *)(v0 + 856) = sub_1008FA0F0(v65, v67, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E5AE8()
{
  uint64_t v92 = v0;
  swift_release();
  if (qword_101637660 != -1) {
    swift_once();
  }
  sub_100010324(*(void *)(v0 + 1360), (uint64_t)qword_10170F838);
  uint64_t v90 = (void *)(v0 + 16);
  sub_10001D010(v0 + 16, v0 + 296);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 1456);
    uint64_t v3 = *(void *)(v0 + 1168);
    uint64_t v4 = *(void *)(v0 + 1136);
    uint64_t v88 = *(void *)(v0 + 976);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v81 = (void *)swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 141558531;
    *(void *)(v0 + 688) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2081;
    uint64_t v7 = *(void *)(v0 + 320);
    uint64_t v6 = *(void *)(v0 + 328);
    sub_10001CD44((void *)(v0 + 296), v7);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v6 + 8) + 8) + 32))(v7);
    sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v10 = v9;
    v74(v3, v4);
    *(void *)(v0 + 696) = sub_1008FA0F0(v8, v10, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 296);
    *(_WORD *)(v5 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 704) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v81 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Unable to get ownedDevice keys for %{private,mask.hash}s error: %{public}@.", (uint8_t *)v5, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v12 = v88;
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 976);

    swift_errorRelease();
    swift_errorRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 296);
    swift_errorRelease();
    uint64_t v12 = v13;
  }
  sub_1002F6F2C(v12, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v79 = *(void *)(v0 + 1592);
  uint64_t v82 = *(void *)(v0 + 1664);
  uint64_t v84 = *(void *)(v0 + 1584);
  uint64_t v86 = *(void *)(v0 + 1672);
  os_log_type_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1488);
  uint64_t v15 = *(void *)(v0 + 1216);
  uint64_t v16 = *(void *)(v0 + 1184);
  uint64_t v17 = *(void *)(v0 + 1176);
  uint64_t v18 = *(void *)(v0 + 1144);
  uint64_t v19 = *(void *)(v0 + 1112);
  uint64_t v72 = *(void *)(v0 + 1136);
  uint64_t v75 = *(void *)(v0 + 1096);
  uint64_t v20 = *(void *)(v0 + 920);
  uint64_t v77 = *(void *)(v0 + 912);
  unint64_t v21 = *(int **)(v0 + 888);
  uint64_t v22 = *(void *)(v0 + 880);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1472))(v19, *(void *)(v0 + 1248), v15);
  v14(v19, 0, 1, v15);
  uint64_t v23 = v16 + *(int *)(v17 + 20);
  uint64_t v24 = *(void *)(v0 + 40);
  uint64_t v25 = *(void *)(v0 + 48);
  sub_10001CD44(v90, v24);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v25 + 8) + 8) + 32))(v24);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v72);
  sub_10001D074(v75, v20 + v21[9], (uint64_t *)&unk_10163AC90);
  sub_10001D608(v19, v20, (uint64_t *)&unk_10163AC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v20 + v21[5], v23, v72);
  *(unsigned char *)(v20 + v21[6]) = 1;
  sub_10001D608(v22, v20 + v21[7], &qword_101638CF0);
  *(void *)(v20 + v21[8]) = v79;
  uint64_t v26 = (void *)(v20 + v21[10]);
  void *v26 = v82;
  v26[1] = v86;
  *(void *)(v20 + v21[11]) = v84;
  *(void *)(v20 + v21[12]) = _swiftEmptyArrayStorage;
  sub_1002F6E08(v20, v77, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = *(void *)(v0 + 912);
  if (v29)
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    v91[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136315138;
    uint64_t v32 = sub_1003B7BF0();
    *(void *)(v0 + 720) = sub_1008FA0F0(v32, v33, v91);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v30, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "publishKeys subscription: %s.", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1002F6F2C(*(void *)(v0 + 912), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  }

  sub_1002F6E08(*(void *)(v0 + 920), *(void *)(v0 + 904), (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v35 = *(void *)(v0 + 1352);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v35 = sub_100A7024C(0, *(void *)(v35 + 16) + 1, 1, v35);
  }
  unint64_t v37 = *(void *)(v35 + 16);
  unint64_t v36 = *(void *)(v35 + 24);
  unint64_t v38 = v37 + 1;
  if (v37 >= v36 >> 1)
  {
    uint64_t v68 = sub_100A7024C(v36 > 1, v37 + 1, 1, v35);
    unint64_t v38 = v37 + 1;
    unint64_t v35 = v68;
  }
  unint64_t v76 = *(void (**)(uint64_t, uint64_t))(v0 + 1600);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v0 + 1440);
  uint64_t v87 = *(void *)(v0 + 1296);
  uint64_t v80 = *(void *)(v0 + 1280);
  uint64_t v83 = *(void *)(v0 + 1288);
  uint64_t v78 = *(void *)(v0 + 1272);
  uint64_t v73 = *(void *)(v0 + 1256);
  uint64_t v70 = *(void *)(v0 + 1248);
  uint64_t v40 = *(void *)(v0 + 1216);
  uint64_t v89 = *(void *)(v0 + 1184);
  uint64_t v85 = *(void *)(v0 + 1128);
  uint64_t v41 = *(void *)(v0 + 1096);
  uint64_t v71 = *(void *)(v0 + 1088);
  uint64_t v69 = *(void *)(v0 + 1080);
  uint64_t v42 = *(void *)(v0 + 1056);
  uint64_t v43 = *(void *)(v0 + 920);
  uint64_t v44 = *(void *)(v0 + 904);
  uint64_t v45 = *(void *)(v0 + 896);
  *(void *)(v35 + 16) = v38;
  uint64_t v46 = v35
      + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80))
      + *(void *)(v45 + 72) * v37;
  unint64_t v47 = v35;
  sub_1002F6EC4(v44, v46, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  swift_release();
  sub_1002F6F2C(v43, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_10001DAB4(v41, (uint64_t *)&unk_10163AC90);
  v39(v70, v40);
  v76(v69, v42);
  v39(v73, v40);
  v76(v71, v42);
  v39(v78, v40);
  v39(v80, v40);
  v39(v83, v40);
  v39(v87, v40);
  sub_10001DAB4(v85, &qword_10163F7B0);
  sub_1002F6F2C(v89, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v48 = *(void *)(v0 + 1320);
  uint64_t v49 = *(void *)(v0 + 1344) + 1;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v90);
  if (v49 == v48)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v0 + 1440))(*(void *)(v0 + 1312), *(void *)(v0 + 1216));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v50(v47);
  }
  else
  {
    uint64_t v52 = *(void *)(v0 + 1344) + 1;
    *(void *)(v0 + 1352) = v47;
    *(void *)(v0 + 1344) = v52;
    *(void *)(v0 + 1336) = 0;
    uint64_t v53 = *(long long **)(v0 + 1208);
    uint64_t v54 = *(void *)(v0 + 1184);
    uint64_t v55 = (uint64_t)v53 + *(int *)(v0 + 1728);
    sub_10001D074(*(void *)(v0 + 864)+ ((*(unsigned __int8 *)(v0 + 1732) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1732))+ *(void *)(v0 + 1328) * v52, (uint64_t)v53, (uint64_t *)&unk_101657CD0);
    sub_10001CEB0(v53, (uint64_t)v90);
    sub_1002F6EC4(v55, v54, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v56 = type metadata accessor for Logger();
    *(void *)(v0 + 1360) = v56;
    *(void *)(v0 + 1368) = sub_100010324(v56, (uint64_t)qword_10170DD90);
    sub_10001D010((uint64_t)v90, v0 + 56);
    uint64_t v57 = Logger.logObject.getter();
    os_log_type_t v58 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = *(void *)(v0 + 1168);
      uint64_t v60 = *(void *)(v0 + 1144);
      uint64_t v61 = *(void *)(v0 + 1136);
      uint64_t v62 = swift_slowAlloc();
      v91[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 141558275;
      *(void *)(v0 + 848) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v62 + 12) = 2081;
      uint64_t v64 = *(void *)(v0 + 80);
      uint64_t v63 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v64);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v64);
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v67 = v66;
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v59, v61);
      *(void *)(v0 + 856) = sub_1008FA0F0(v65, v67, v91);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "publishKeys for beacon: %{private,mask.hash}s", (uint8_t *)v62, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    }

    if (qword_101636CD8 != -1) {
      swift_once();
    }
    *(void *)(v0 + 1376) = qword_10170E390;
    return _swift_task_switch(sub_1002DA840, 0, 0);
  }
}

uint64_t sub_1002E6984@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v33 = type metadata accessor for BeaconObservation();
  uint64_t v4 = *(void *)(v33 - 8);
  uint64_t v5 = __chkstk_darwin(v33);
  uint64_t v34 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636CB8 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    sub_10000588C(&qword_101655540);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v13 = v35;
    if (!v35[2] || (unint64_t v14 = sub_1007240CC(a1), (v15 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
      a1 = v33;
      goto LABEL_18;
    }
    uint64_t v16 = *(void *)(v13[7] + 8 * v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1007100C0(v16);
    swift_bridgeObjectRelease();
    size_t v18 = sub_100B752E8((uint64_t)v17);
    swift_release();
    uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
    unint64_t v35 = _swiftEmptyArrayStorage;
    uint64_t v20 = *(void *)(v18 + 16);
    a1 = v33;
    if (!v20) {
      break;
    }
    uint64_t v30 = v12;
    uint64_t v31 = v11;
    unint64_t v32 = a2;
    unint64_t v21 = 0;
    while (v21 < *(void *)(v18 + 16))
    {
      uint64_t v11 = (char *)((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v22 = *(void *)(v4 + 72);
      sub_1002F6E08((uint64_t)&v11[v18 + v22 * v21], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      if (v8[*(int *)(a1 + 24)])
      {
        sub_1002F6F2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      }
      else
      {
        sub_1002F6EC4((uint64_t)v8, v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B77F0(0, *(void *)(v19 + 16) + 1, 1);
        }
        uint64_t v19 = (uint64_t)v35;
        a2 = v35[2];
        unint64_t v23 = v35[3];
        if (a2 >= v23 >> 1)
        {
          sub_1000B77F0(v23 > 1, a2 + 1, 1);
          uint64_t v19 = (uint64_t)v35;
        }
        *(void *)(v19 + 16) = a2 + 1;
        sub_1002F6EC4(v34, (uint64_t)&v11[v19 + a2 * v22], (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        a1 = v33;
      }
      if (v20 == ++v21)
      {
        uint64_t v19 = (uint64_t)v35;
        uint64_t v11 = v31;
        a2 = v32;
        uint64_t v12 = v30;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
LABEL_17:
  swift_release();
LABEL_18:
  sub_100E4D5E0(v19, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v11, 1, a1) == 1)
  {
    sub_10001DAB4((uint64_t)v11, (uint64_t *)&unk_101655530);
    uint64_t v24 = type metadata accessor for Date();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 1, 1, v24);
  }
  else
  {
    uint64_t v26 = &v11[*(int *)(a1 + 20)];
    uint64_t v27 = type metadata accessor for Date();
    uint64_t v28 = *(void *)(v27 - 8);
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 16))(a2, v26, v27);
    sub_1002F6F2C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    return (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(v28 + 56))(a2, 0, 1, v27);
  }
}

uint64_t sub_1002E6E44(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  sub_10000588C((uint64_t *)&unk_101649E20);
  v2[14] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FMNAccountType();
  v2[15] = v3;
  v2[16] = *(void *)(v3 - 8);
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for NotifyMeEndpoint();
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  return _swift_task_switch(sub_1002E6FF8, v1, 0);
}

uint64_t sub_1002E6FF8()
{
  uint64_t v12 = v0;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[27] = sub_100010324(v1, (uint64_t)qword_10170DD90);
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    sub_10000588C((uint64_t *)&unk_101657CD0);
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v0[11] = sub_1008FA0F0(v5, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "publishKeys for beacons: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002E725C;
  uint64_t v9 = v0[12];
  return sub_1002D9C30(v9);
}

uint64_t sub_1002E725C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002E7374, v2, 0);
}

uint64_t sub_1002E7374()
{
  uint64_t v1 = *(void *)(v0[13] + 128);
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016429F8 + dword_1016429F8);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[30] = v2;
  void *v2 = v0;
  v2[1] = sub_1002E7438;
  uint64_t v3 = v0[29];
  return v5(v3, v1);
}

uint64_t sub_1002E7438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 104);
  v4[31] = a1;
  v4[32] = a2;
  v4[33] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002E7554, v5, 0);
}

uint64_t sub_1002E7554()
{
  uint64_t v1 = v0[31];
  if (v1)
  {
    uint64_t v3 = v0[32];
    unint64_t v2 = v0[33];
    uint64_t v22 = v0[19];
    uint64_t v4 = v0[17];
    uint64_t v19 = v0[18];
    uint64_t v20 = (void *)v0[20];
    uint64_t v5 = v0[15];
    uint64_t v21 = v0[14];
    uint64_t v6 = enum case for FMNAccountType.searchParty(_:);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[16] + 104);
    v7(v4, enum case for FMNAccountType.searchParty(_:), v5);
    type metadata accessor for AccountURLComponents();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1000361E0(v3, v2);
    *uint64_t v20 = sub_1010E7A64(v4);
    v7((uint64_t)v20 + *(int *)(v19 + 20), v6, v5);
    type metadata accessor for SearchPartyURLSessionFactory(0);
    swift_allocObject();
    uint64_t v8 = type metadata accessor for FMNMockingPreferences();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v21, 1, 1, v8);
    uint64_t v9 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
    type metadata accessor for ServerInteractionController(0);
    uint64_t v10 = swift_allocObject();
    sub_1002F6E08((uint64_t)v20, v22, (uint64_t (*)(void))type metadata accessor for NotifyMeEndpoint);
    v0[34] = sub_1004A2B68(v22, v9, v10);
    sub_1002F6F2C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NotifyMeEndpoint);
    v0[5] = &type metadata for NotifyMeRequest;
    v0[6] = sub_1002F69B0();
    v0[2] = v1;
    v0[3] = v3;
    v0[4] = v2;
    swift_bridgeObjectRetain();
    sub_1000361E0(v3, v2);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[35] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1002E7904;
    uint64_t v12 = v0[26];
    return sub_100487CFC(v12, (uint64_t)(v0 + 2));
  }
  else
  {
    unint64_t v14 = Logger.logObject.getter();
    uint64_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v15, "Could not create notify me request", v16, 2u);
      swift_slowDealloc();
    }

    sub_1002F67B4();
    swift_allocError();
    unsigned char *v17 = 4;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    size_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1002E7904()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    swift_release();
    uint64_t v4 = sub_1002E8508;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = v2 + 16;
    uint64_t v7 = *(void *)(v2 + 104);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v6);
    uint64_t v4 = sub_1002E7A44;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1002E7A44()
{
  uint64_t v53 = v0;
  uint64_t v1 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  if (v1 == 500 || v1 == 404)
  {
    (*(void (**)(void, void, void))(v0[22] + 16))(v0[24], v0[26], v0[21]);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = v0[24];
    uint64_t v17 = v0[21];
    uint64_t v16 = v0[22];
    if (v14)
    {
      size_t v18 = (uint8_t *)swift_slowAlloc();
      v52[0] = swift_slowAlloc();
      *(_DWORD *)size_t v18 = 136446210;
      sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[9] = sub_1008FA0F0(v19, v20, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v21(v15, v17);
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Publish failed: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v21(v15, v17);
    }

    uint64_t v32 = v0[26];
    uint64_t v33 = v0[21];
    sub_1002F67B4();
    swift_allocError();
    *uint64_t v34 = 0;
    swift_willThrow();
    v21(v32, v33);
  }
  else
  {
    if (v1 == 200)
    {
      (*(void (**)(void, void, void))(v0[22] + 16))(v0[25], v0[26], v0[21]);
      uint64_t v2 = Logger.logObject.getter();
      os_log_type_t v3 = static os_log_type_t.default.getter();
      BOOL v4 = os_log_type_enabled(v2, v3);
      uint64_t v5 = v0[25];
      uint64_t v7 = v0[21];
      uint64_t v6 = v0[22];
      if (v4)
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        v52[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136315138;
        sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[10] = sub_1008FA0F0(v9, v10, v52);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v11(v5, v7);
        _os_log_impl((void *)&_mh_execute_header, v2, v3, "Publish success: %s", v8, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
        v11(v0[25], v0[21]);
      }

      v0[37] = v11;
      uint64_t v35 = FMNServerInteractionController.FMNResponseFields.data.getter();
      uint64_t v37 = v36;
      v0[38] = v35;
      v0[39] = v36;
      unint64_t v38 = (void *)swift_task_alloc();
      v0[40] = v38;
      void *v38 = v0;
      v38[1] = sub_1002E8284;
      return sub_1002ECDD4(v35, v37);
    }
    (*(void (**)(void, void, void))(v0[22] + 16))(v0[23], v0[26], v0[21]);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v26 = v0[22];
    uint64_t v25 = v0[23];
    uint64_t v27 = v0[21];
    if (v24)
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      v52[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136446210;
      sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[8] = sub_1008FA0F0(v29, v30, v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(v25, v27);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Publish failed: %{public}s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
      v31(v25, v27);
    }

    uint64_t v40 = v0[26];
    uint64_t v41 = v0[21];
    sub_1002F67B4();
    swift_allocError();
    *uint64_t v42 = 2;
    swift_willThrow();
    v31(v40, v41);
  }
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 138543362;
    swift_errorRetain();
    uint64_t v47 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v47;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v46 = v47;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "Server error publishing keys: %{public}@", v45, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v49 = v0[32];
  unint64_t v48 = v0[33];
  uint64_t v50 = v0[31];

  swift_willThrow();
  sub_1001D7860(v50, v49, v48);
  sub_1001D7860(v50, v49, v48);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v51 = (uint64_t (*)(void))v0[1];
  return v51();
}

uint64_t sub_1002E8284()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  unint64_t v3 = v2[39];
  uint64_t v4 = v2[38];
  uint64_t v5 = v2[13];
  sub_10001CFB8(v4, v3);
  if (v0) {
    uint64_t v6 = sub_1002E8734;
  }
  else {
    uint64_t v6 = sub_1002E83E0;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002E83E0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[37];
  uint64_t v2 = v0[32];
  unint64_t v3 = v0[33];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[26];
  uint64_t v6 = v0[21];
  sub_1001D7860(v4, v2, v3);
  sub_1001D7860(v4, v2, v3);
  v1(v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002E8508()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[7] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Server error publishing keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[32];
  unint64_t v6 = v0[33];
  uint64_t v8 = v0[31];

  swift_willThrow();
  sub_1001D7860(v8, v7, v6);
  sub_1001D7860(v8, v7, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1002E8734()
{
  (*(void (**)(void, void))(v0 + 296))(*(void *)(v0 + 208), *(void *)(v0 + 168));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Server error publishing keys: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(void *)(v0 + 256);
  unint64_t v6 = *(void *)(v0 + 264);
  uint64_t v8 = *(void *)(v0 + 248);

  swift_willThrow();
  sub_1001D7860(v8, v7, v6);
  sub_1001D7860(v8, v7, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1002E8974(uint64_t a1)
{
  v2[30] = a1;
  v2[31] = v1;
  sub_10000588C(&qword_101638CF0);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101649E20);
  v2[34] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for FMNAccountType();
  v2[35] = v3;
  v2[36] = *(void *)(v3 - 8);
  v2[37] = swift_task_alloc();
  v2[38] = type metadata accessor for NotifyMeEndpoint();
  v2[39] = swift_task_alloc();
  v2[40] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  v2[41] = v4;
  v2[42] = *(void *)(v4 - 8);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  v2[46] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for NotifyMeRequest.Subscription();
  v2[47] = v5;
  v2[48] = *(void *)(v5 - 8);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = type metadata accessor for StableIdentifier();
  v2[52] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v2[53] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v2[54] = v7;
  v2[55] = *(void *)(v7 + 64);
  v2[56] = swift_task_alloc();
  v2[57] = swift_task_alloc();
  v2[58] = swift_task_alloc();
  v2[59] = swift_task_alloc();
  v2[60] = sub_10000588C(&qword_10163B9F0);
  v2[61] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v2[62] = found;
  v2[63] = *(void *)(found - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  return _swift_task_switch(sub_1002E8D30, v1, 0);
}

uint64_t sub_1002E8D30()
{
  uint64_t v21 = v0;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 528) = sub_100010324(v1, (uint64_t)qword_10170DD90);
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v5 = Array.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 232) = sub_1008FA0F0(v5, v7, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unsubscribe for beacons: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = *(void *)(v0 + 240);
  uint64_t v9 = *(void *)(v8 + 16);
  *(void *)(v0 + 536) = v9;
  if (v9)
  {
    uint64_t v10 = *(void *)(v0 + 504);
    int v11 = *(_DWORD *)(v10 + 80);
    *(_DWORD *)(v0 + 736) = v11;
    *(void *)(v0 + 544) = *(void *)(v10 + 72);
    *(void *)(v0 + 560) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 552) = 0;
    uint64_t v12 = *(void *)(v0 + 520);
    uint64_t v13 = v8 + ((v11 + 32) & ~(unint64_t)v11);
    swift_bridgeObjectRetain();
    sub_1002F6E08(v13, v12, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 80))
    {
      sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
      sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
      size_t v18 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v15 = (void *)swift_task_alloc();
      *(void *)(v0 + 568) = v15;
      *uint64_t v15 = v0;
      v15[1] = sub_1002E914C;
      return v18();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    *(void *)(v0 + 632) = _swiftEmptyArrayStorage;
    uint64_t v16 = *(void *)(*(void *)(v0 + 248) + 128);
    uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016429F8 + dword_1016429F8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v17;
    void *v17 = v0;
    v17[1] = sub_1002E9F30;
    return v19((uint64_t)_swiftEmptyArrayStorage, v16);
  }
  return result;
}

uint64_t sub_1002E914C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 576) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002E9264, v2, 0);
}

uint64_t sub_1002E9264()
{
  uint64_t v1 = v0 + 16;
  if (*(void *)(v0 + 576))
  {
    uint64_t v2 = *(void *)(v0 + 496);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    *(_DWORD *)(v0 + 740) = *(_DWORD *)(v2 + 24);
    uint64_t v3 = *(void *)(v0 + 576);
    return _swift_task_switch(sub_1002E9528, v3, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      unint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "No BeaconStoreActor available!", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = *(void *)(v0 + 520);

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v8 = 0xD000000000000010;
    v8[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002F6F2C(v7, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1002E9528()
{
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 472);
  uint64_t v3 = *(void *)(v0 + 432);
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 520) + *(int *)(v0 + 740);
  *(void *)(v0 + 584) = *(void *)(v1 + 136);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 592) = v6;
  *(void *)(v0 + 600) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 608) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1002E9638, 0, 0);
}

uint64_t sub_1002E9638()
{
  uint64_t v1 = v0[76];
  uint64_t v2 = v0[73];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[77] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6998;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[78] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002E9740;
  uint64_t v6 = v0[60];
  uint64_t v5 = v0[61];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D89C, v3, v6);
}

uint64_t sub_1002E9740()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002E98AC, v1, 0);
}

uint64_t sub_1002E98AC()
{
  uint64_t v1 = *(void *)(v0 + 488);
  uint64_t v2 = (int *)type metadata accessor for OwnedBeaconRecord();
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, &qword_10163B9F0);
  }
  else
  {
    sub_1002F6E08(v1 + v2[6], *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for StableIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      sub_10000588C((uint64_t *)&unk_1016565E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload != 2)
      {
        uint64_t v13 = *(void *)(v0 + 488);
        sub_1002F6F2C(*(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for StableIdentifier);
        sub_1002F6F2C(v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        goto LABEL_10;
      }
      sub_10000588C(&qword_1016555E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v4 = *(void *)(v0 + 488);
    uint64_t v5 = *(void *)(v0 + 424);
    uint64_t v6 = *(void *)(v0 + 432);
    uint64_t v7 = *(void *)(v0 + 416);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v5);
    uint64_t v8 = sub_1002AAF08(*(void *)(v4 + v2[16]), *(void *)(v4 + v2[17]));
    unint64_t v10 = v9;
    sub_1002F6F2C(v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    if (v10 >> 60 != 15)
    {
      *(void *)(v0 + 184) = v8;
      *(void *)(v0 + 192) = v10;
      sub_1001A95DC();
      uint64_t v11 = RawRepresentable<>.hexString.getter();
      uint64_t v38 = v12;
      uint64_t v39 = v11;
      sub_100037A24(v8, v10);
      goto LABEL_11;
    }
  }
LABEL_10:
  uint64_t v38 = 0;
  uint64_t v39 = 0;
LABEL_11:
  BOOL v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 592);
  uint64_t v15 = *(void *)(v0 + 520);
  uint64_t v16 = *(void *)(v0 + 424);
  uint64_t v42 = *(void *)(v0 + 432);
  uint64_t v17 = *(void *)(v0 + 400);
  uint64_t v43 = *(void *)(v0 + 392);
  uint64_t v40 = *(void *)(v0 + 496);
  uint64_t v41 = v15 + *(int *)(v0 + 740);
  size_t v18 = *(int **)(v0 + 376);
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v17, 1, 1, v19);
  v14(v17 + v18[5], v15 + *(int *)(v40 + 20), v16);
  uint64_t v21 = v17 + v18[7];
  v14(v21, v41, v16);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v21, 0, 1, v16);
  v20(v17 + v18[9], 1, 1, v19);
  *(unsigned char *)(v17 + v18[6]) = 0;
  *(void *)(v17 + v18[8]) = _swiftEmptyArrayStorage;
  uint64_t v22 = (uint64_t *)(v17 + v18[10]);
  uint64_t *v22 = v39;
  v22[1] = v38;
  *(void *)(v17 + v18[11]) = _swiftEmptyArrayStorage;
  *(void *)(v17 + v18[12]) = _swiftEmptyArrayStorage;
  sub_1002F6E08(v17, v43, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v24 = *(void *)(v0 + 560);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v24 = sub_100A7024C(0, *(void *)(v24 + 16) + 1, 1, *(void *)(v0 + 560));
  }
  unint64_t v26 = *(void *)(v24 + 16);
  unint64_t v25 = *(void *)(v24 + 24);
  if (v26 >= v25 >> 1) {
    unint64_t v24 = sub_100A7024C(v25 > 1, v26 + 1, 1, v24);
  }
  uint64_t v27 = *(void *)(v0 + 536);
  uint64_t v28 = *(void *)(v0 + 520);
  uint64_t v29 = *(void *)(v0 + 392);
  uint64_t v30 = *(void *)(v0 + 400);
  uint64_t v31 = *(void *)(v0 + 384);
  uint64_t v32 = *(void *)(v0 + 552) + 1;
  *(void *)(v24 + 16) = v26 + 1;
  sub_1002F6EC4(v29, v24+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v26, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_1002F6F2C(v30, (uint64_t (*)(void))type metadata accessor for NotifyMeRequest.Subscription);
  sub_1002F6F2C(v28, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  if (v32 == v27)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 632) = v24;
    uint64_t v33 = *(void *)(*(void *)(v0 + 248) + 128);
    os_log_type_t v44 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016429F8 + dword_1016429F8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1002E9F30;
    return v44(v24, v33);
  }
  else
  {
    uint64_t v36 = *(void *)(v0 + 552) + 1;
    *(void *)(v0 + 560) = v24;
    *(void *)(v0 + 552) = v36;
    sub_1002F6E08(*(void *)(v0 + 240)+ ((*(unsigned __int8 *)(v0 + 736) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 736))+ *(void *)(v0 + 544) * v36, *(void *)(v0 + 520), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 80))
    {
      sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
      sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v45 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v37 = (void *)swift_task_alloc();
      *(void *)(v0 + 568) = v37;
      *uint64_t v37 = v0;
      v37[1] = sub_1002E914C;
      return v45();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002E9F30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(*(void *)v3 + 248);
  v4[81] = a1;
  v4[82] = a2;
  v4[83] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EA050, v5, 0);
}

uint64_t sub_1002EA050()
{
  uint64_t v1 = v0[81];
  if (v1)
  {
    unint64_t v2 = v0[83];
    uint64_t v3 = v0[82];
    uint64_t v22 = v0[39];
    uint64_t v4 = v0[37];
    uint64_t v19 = v0[38];
    uint64_t v20 = (void *)v0[40];
    uint64_t v5 = v0[35];
    uint64_t v21 = v0[34];
    uint64_t v6 = enum case for FMNAccountType.searchParty(_:);
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[36] + 104);
    v7(v4, enum case for FMNAccountType.searchParty(_:), v5);
    type metadata accessor for AccountURLComponents();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_1000361E0(v3, v2);
    *uint64_t v20 = sub_1010E7A64(v4);
    v7((uint64_t)v20 + *(int *)(v19 + 20), v6, v5);
    type metadata accessor for SearchPartyURLSessionFactory(0);
    swift_allocObject();
    uint64_t v8 = type metadata accessor for FMNMockingPreferences();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v21, 1, 1, v8);
    uint64_t v9 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
    type metadata accessor for ServerInteractionController(0);
    uint64_t v10 = swift_allocObject();
    sub_1002F6E08((uint64_t)v20, v22, (uint64_t (*)(void))type metadata accessor for NotifyMeEndpoint);
    v0[84] = sub_1004A2B68(v22, v9, v10);
    sub_1002F6F2C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for NotifyMeEndpoint);
    v0[15] = &type metadata for NotifyMeRequest;
    v0[16] = sub_1002F69B0();
    v0[12] = v1;
    v0[13] = v3;
    v0[14] = v2;
    swift_bridgeObjectRetain();
    sub_1000361E0(v3, v2);
    uint64_t v11 = (void *)swift_task_alloc();
    v0[85] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1002EA4B4;
    uint64_t v12 = v0[46];
    return sub_100487CFC(v12, (uint64_t)(v0 + 12));
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v14 = Logger.logObject.getter();
    uint64_t v15 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v14, (os_log_type_t)v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, (os_log_type_t)v15, "Could not create notify me request", v16, 2u);
      swift_slowDealloc();
    }

    sub_1002F67B4();
    swift_allocError();
    unsigned char *v17 = 3;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    size_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1002EA4B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 248);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1002EB758;
  }
  else
  {
    uint64_t v5 = v2 + 96;
    uint64_t v3 = *(void *)(v2 + 248);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v5);
    uint64_t v4 = sub_1002EA5F8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002EA5F8()
{
  uint64_t v54 = v0;
  uint64_t v1 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  if (v1 == 200)
  {
    (*(void (**)(void, void, void))(v0[42] + 16))(v0[45], v0[46], v0[41]);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = v0[45];
    uint64_t v7 = v0[41];
    uint64_t v6 = v0[42];
    if (v4)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      v53[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[27] = sub_1008FA0F0(v9, v10, v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v11(v5, v7);
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unsubscribe success: %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v11(v0[45], v0[41]);
    }

    v0[87] = v11;
    uint64_t v23 = FMNServerInteractionController.FMNResponseFields.data.getter();
    uint64_t v25 = v24;
    v0[88] = v23;
    v0[89] = v24;
    unint64_t v26 = (void *)swift_task_alloc();
    v0[90] = v26;
    void *v26 = v0;
    v26[1] = sub_1002EAF14;
    return sub_1002ECDD4(v23, v25);
  }
  else
  {
    uint64_t v12 = v1;
    swift_bridgeObjectRelease();
    if (v12 == 500 || v12 == 404)
    {
      (*(void (**)(void, void, void))(v0[42] + 16))(v0[44], v0[46], v0[41]);
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.error.getter();
      BOOL v15 = os_log_type_enabled(v13, v14);
      uint64_t v16 = v0[44];
      uint64_t v18 = v0[41];
      uint64_t v17 = v0[42];
      if (v15)
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        v53[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136446210;
        sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[25] = sub_1008FA0F0(v20, v21, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v22(v16, v18);
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "Unsubscribe failed: %{public}s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v22(v0[44], v0[41]);
      }

      uint64_t v38 = v0[46];
      uint64_t v39 = v0[41];
      sub_1002F67B4();
      swift_allocError();
      *uint64_t v40 = 0;
      swift_willThrow();
      v22(v38, v39);
    }
    else
    {
      (*(void (**)(void, void, void))(v0[42] + 16))(v0[43], v0[46], v0[41]);
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.error.getter();
      BOOL v30 = os_log_type_enabled(v28, v29);
      uint64_t v32 = v0[42];
      uint64_t v31 = v0[43];
      uint64_t v33 = v0[41];
      if (v30)
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        v53[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 136446210;
        sub_1002F6E70((unint64_t *)&qword_101649E30, 255, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        v0[26] = sub_1008FA0F0(v35, v36, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v37(v31, v33);
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unsubscribe failed: %{public}s", v34, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
        v37(v0[43], v0[41]);
      }
      uint64_t v41 = v0[46];
      uint64_t v42 = v0[41];
      sub_1002F67B4();
      swift_allocError();
      unsigned char *v43 = 2;
      swift_willThrow();
      v37(v41, v42);
    }
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138543362;
      swift_errorRetain();
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
      v0[28] = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v47 = v48;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Server error unsubscribing: %{public}@", v46, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }
    unint64_t v49 = v0[83];
    uint64_t v50 = v0[82];
    uint64_t v51 = v0[81];

    swift_willThrow();
    sub_1001D7860(v51, v50, v49);
    sub_1001D7860(v51, v50, v49);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v52 = (uint64_t (*)(void))v0[1];
    return v52();
  }
}

uint64_t sub_1002EAF14()
{
  uint64_t v2 = (void *)*v1;
  v2[91] = v0;
  swift_task_dealloc();
  unint64_t v3 = v2[89];
  uint64_t v4 = v2[88];
  if (v0)
  {
    uint64_t v5 = v2[31];
    swift_bridgeObjectRelease();
    sub_10001CFB8(v4, v3);
    uint64_t v6 = sub_1002EBA30;
  }
  else
  {
    uint64_t v5 = v2[31];
    sub_10001CFB8(v4, v3);
    uint64_t v6 = sub_1002EB088;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002EB088()
{
  uint64_t v59 = v0;
  int64_t v1 = v0[67];
  if (!v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v16 = _swiftEmptyArrayStorage[2];
    if (v16) {
      goto LABEL_9;
    }
LABEL_16:
    uint64_t v39 = *(void (**)(void, uint64_t, uint64_t, void))(v0[54] + 56);
    swift_bridgeObjectRetain();
    v39(v0[33], 1, 1, v0[53]);
    goto LABEL_18;
  }
  uint64_t v2 = v0[63];
  uint64_t v56 = v0[62];
  uint64_t v3 = v0[54];
  uint64_t v4 = v0[30];
  os_log_type_t v58 = _swiftEmptyArrayStorage;
  sub_1000B7034(0, v1, 0);
  uint64_t v5 = 0;
  uint64_t v6 = v4 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v55 = *(void *)(v2 + 72);
  uint64_t v7 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v8 = v0[64];
    uint64_t v9 = v0[56];
    uint64_t v10 = v0[53];
    sub_1002F6E08(v6, v8, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v9, v8 + *(int *)(v56 + 24), v10);
    sub_1002F6F2C(v8, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B7034(0, v7[2] + 1, 1);
      uint64_t v7 = v58;
    }
    unint64_t v12 = v7[2];
    unint64_t v11 = v7[3];
    if (v12 >= v11 >> 1)
    {
      sub_1000B7034(v11 > 1, v12 + 1, 1);
      uint64_t v7 = v58;
    }
    uint64_t v13 = v0[67];
    uint64_t v14 = v0[56];
    uint64_t v15 = v0[53];
    ++v5;
    v7[2] = v12 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, v14, v15);
    os_log_type_t v58 = v7;
    v6 += v55;
  }
  while (v5 != v13);
  swift_bridgeObjectRelease();
  uint64_t v16 = v7[2];
  if (!v16) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v17 = v0[54];
  uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
  v17 += 16;
  uint64_t v18 = v19;
  uint64_t v20 = (char *)v7 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
  uint64_t v51 = *(void *)(v17 + 56);
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
  unint64_t v49 = (void (**)(uint64_t, uint64_t))(v17 - 8);
  uint64_t v50 = (void (**)(char *, void, uint64_t))(v17 + 16);
  swift_bridgeObjectRetain();
  uint64_t v54 = (void *)(v17 + 40);
  uint64_t v52 = v19;
  while (1)
  {
    uint64_t v25 = v0[53];
    uint64_t v26 = v0[33];
    v18(v26, v20, v25);
    uint64_t v27 = (void (*)(uint64_t, void, uint64_t, uint64_t))*v54;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))*v54)(v26, 0, 1, v25);
    if ((*v53)(v26, 1, v25) == 1) {
      break;
    }
    uint64_t v48 = v27;
    uint64_t v57 = v16;
    uint64_t v29 = v0[57];
    uint64_t v28 = (char *)v0[58];
    uint64_t v30 = v0[53];
    (*v50)(v28, v0[33], v30);
    v18(v29, v28, v30);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = v0[57];
    uint64_t v35 = v0[53];
    if (v33)
    {
      uint64_t v36 = swift_slowAlloc();
      os_log_type_t v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 141558275;
      *(void *)(v36 + 4) = 1752392040;
      *(_WORD *)(v36 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v36 + 14) = sub_1008FA0F0(v37, v38, (uint64_t *)&v58);
      swift_bridgeObjectRelease();
      unint64_t v21 = *v49;
      (*v49)(v34, v35);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Removing beacon %{private,mask.hash}s from pending force publish.", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v21 = *v49;
      (*v49)(v34, v35);
    }

    uint64_t v22 = v0[58];
    uint64_t v23 = v0[53];
    uint64_t v24 = v0[32];
    swift_beginAccess();
    sub_101126F68(v22, v24);
    sub_10001DAB4(v24, &qword_101638CF0);
    swift_endAccess();
    v21(v22, v23);
    v20 += v51;
    uint64_t v16 = v57 - 1;
    uint64_t v18 = v52;
    if (v57 == 1)
    {
      v48(v0[33], 1, 1, v0[53]);
      break;
    }
  }
LABEL_18:
  uint64_t v40 = (void (*)(uint64_t, uint64_t))v0[87];
  unint64_t v41 = v0[83];
  uint64_t v42 = v0[82];
  uint64_t v43 = v0[81];
  uint64_t v44 = v0[46];
  uint64_t v45 = v0[41];
  swift_bridgeObjectRelease_n();
  sub_1001D7860(v43, v42, v41);
  sub_1001D7860(v43, v42, v41);
  v40(v44, v45);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = (uint64_t (*)(void))v0[1];
  return v46();
}

uint64_t sub_1002EB758()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 12));
  swift_errorRetain();
  swift_errorRetain();
  int64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[28] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Server error unsubscribing: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v6 = v0[83];
  uint64_t v7 = v0[82];
  uint64_t v8 = v0[81];

  swift_willThrow();
  sub_1001D7860(v8, v7, v6);
  sub_1001D7860(v8, v7, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_1002EBA30()
{
  (*(void (**)(void, void))(v0 + 696))(*(void *)(v0 + 368), *(void *)(v0 + 328));
  swift_errorRetain();
  swift_errorRetain();
  int64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 224) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Server error unsubscribing: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v6 = *(void *)(v0 + 664);
  uint64_t v7 = *(void *)(v0 + 656);
  uint64_t v8 = *(void *)(v0 + 648);

  swift_willThrow();
  sub_1001D7860(v8, v7, v6);
  sub_1001D7860(v8, v7, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1002EBD1C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v2[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Date();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[11] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[12] = v5;
  v2[13] = *(void *)(v5 + 64);
  v2[14] = swift_task_alloc();
  v2[15] = sub_10000588C(&qword_101660BB0);
  v2[16] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v2[17] = found;
  v2[18] = *(void *)(found - 8);
  v2[19] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v2[20] = v7;
  void *v7 = v2;
  v7[1] = sub_1002EBF64;
  v7[15] = v1;
  return _swift_task_switch(sub_1002C662C, v1, 0);
}

uint64_t sub_1002EBF64(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 32);
    unint64_t v6 = sub_1002EC850;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    unint64_t v6 = sub_1002EC098;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002EC098()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[3];
  v0[23] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[24] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_1002EC18C, 0, 0);
}

uint64_t sub_1002EC18C()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5948;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002EC290;
  uint64_t v6 = v0[15];
  uint64_t v5 = v0[16];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F733C, v3, v6);
}

uint64_t sub_1002EC290()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EC3FC, v1, 0);
}

void sub_1002EC3FC()
{
  BOOL v33 = v0;
  uint64_t v1 = v0[16];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[18] + 48))(v1, 1, v0[17]) == 1)
  {
    uint64_t v2 = &qword_101660BB0;
LABEL_5:
    sub_10001DAB4(v1, v2);
    char v7 = 0;
LABEL_6:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (void (*)(void))v0[1];
    v8(v7 & 1);
    return;
  }
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[5];
  sub_1002F6EC4(v1, v0[19], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  type metadata accessor for NotifyWhenFoundManager();
  sub_1002EC90C(v3, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v1 = v0[5];
    sub_1002F6F2C(v0[19], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v2 = (uint64_t *)&unk_10163AC90;
    goto LABEL_5;
  }
  (*(void (**)(void, void, void))(v0[7] + 32))(v0[10], v0[5], v0[6]);
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v10 = v0[9];
  uint64_t v9 = v0[10];
  uint64_t v11 = v0[6];
  uint64_t v12 = v0[7];
  uint64_t v13 = type metadata accessor for Logger();
  sub_100010324(v13, (uint64_t)qword_10170DD90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v9, v11);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v17 = v0[9];
  uint64_t v18 = v0[6];
  uint64_t v19 = v0[7];
  if (v16)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315138;
    sub_1002F6E70((unint64_t *)&qword_101638DA0, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_1008FA0F0(v21, v22, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v17, v18);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "postedLocalNotification lastPosted: %s.", v20, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v23(v0[9], v0[6]);
  }

  uint64_t v24 = v0[21];
  uint64_t v25 = (uint64_t *)v0[19];
  uint64_t v26 = v0[8];
  sub_100B23648(v25, v26);
  if (!v24)
  {
    uint64_t v28 = v0[19];
    uint64_t v29 = v0[10];
    uint64_t v30 = v0[8];
    uint64_t v31 = v0[6];
    char v7 = static Date.> infix(_:_:)();
    v23(v30, v31);
    v23(v29, v31);
    sub_1002F6F2C(v28, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    goto LABEL_6;
  }
}

uint64_t sub_1002EC850()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_1002EC90C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for BeaconObservation();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v34 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636CB8 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    sub_10000588C(&qword_101655540);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v13 = v36;
    if (!v36[2] || (unint64_t v14 = sub_1007240CC(a1), (v15 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
      goto LABEL_18;
    }
    uint64_t v16 = *(void *)(v13[7] + 8 * v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1007100C0(v16);
    swift_bridgeObjectRelease();
    size_t v18 = sub_100B752E8((uint64_t)v17);
    swift_release();
    uint64_t v19 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t v20 = *(void *)(v18 + 16);
    if (!v20) {
      break;
    }
    uint64_t v31 = v12;
    uint64_t v32 = v11;
    uint64_t v33 = a2;
    unint64_t v21 = 0;
    while (v21 < *(void *)(v18 + 16))
    {
      uint64_t v11 = (char *)((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
      a2 = *(void *)(v35 + 72);
      sub_1002F6E08((uint64_t)&v11[v18 + a2 * v21], (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      if (v8[*(int *)(v4 + 24)] == 28)
      {
        uint64_t v22 = v4;
        sub_1002F6EC4((uint64_t)v8, v34, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B77F0(0, *(void *)(v19 + 16) + 1, 1);
        }
        uint64_t v19 = (uint64_t)v36;
        unint64_t v24 = v36[2];
        unint64_t v23 = v36[3];
        a1 = v24 + 1;
        if (v24 >= v23 >> 1)
        {
          sub_1000B77F0(v23 > 1, v24 + 1, 1);
          uint64_t v19 = (uint64_t)v36;
        }
        *(void *)(v19 + 16) = a1;
        sub_1002F6EC4(v34, (uint64_t)&v11[v19 + v24 * a2], (uint64_t (*)(void))type metadata accessor for BeaconObservation);
        uint64_t v4 = v22;
      }
      else
      {
        sub_1002F6F2C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
      }
      if (v20 == ++v21)
      {
        uint64_t v19 = (uint64_t)v36;
        uint64_t v11 = v32;
        a2 = v33;
        uint64_t v12 = v31;
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
LABEL_17:
  swift_release();
LABEL_18:
  sub_100E4D5E0(v19, (uint64_t)v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v11, 1, v4) == 1)
  {
    sub_10001DAB4((uint64_t)v11, (uint64_t *)&unk_101655530);
    uint64_t v25 = type metadata accessor for Date();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 1, 1, v25);
  }
  else
  {
    uint64_t v27 = &v11[*(int *)(v4 + 20)];
    uint64_t v28 = type metadata accessor for Date();
    uint64_t v29 = *(void *)(v28 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 16))(a2, v27, v28);
    sub_1002F6F2C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(a2, 0, 1, v28);
  }
}

uint64_t sub_1002ECDD4(uint64_t a1, uint64_t a2)
{
  v3[33] = a2;
  v3[34] = v2;
  v3[32] = a1;
  sub_10000588C(&qword_10164DBB0);
  v3[35] = swift_task_alloc();
  sub_10000588C(&qword_101639E88);
  v3[36] = swift_task_alloc();
  v3[37] = sub_10000588C(&qword_101660BB0);
  v3[38] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v3[39] = found;
  v3[40] = *(void *)(found - 8);
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[44] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[45] = v6;
  v3[46] = *(void *)(v6 + 64);
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for NotifyMeResponseResult();
  v3[49] = v7;
  v3[50] = *(void *)(v7 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  return _swift_task_switch(sub_1002ED034, v2, 0);
}

uint64_t sub_1002ED034()
{
  uint64_t v41 = v0;
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  *(void *)(v0 + 432) = JSONDecoder.init()();
  sub_1002F6760();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  uint64_t v1 = *(void *)(v0 + 232);
  *(void *)(v0 + 440) = v1;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 448) = sub_100010324(v2, (uint64_t)qword_10170DD90);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v40[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    *(void *)(v0 + 240) = v1;
    swift_bridgeObjectRetain();
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 248) = sub_1008FA0F0(v6, v7, v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "NotifyMeResponse: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v8 = *(void *)(v1 + 16);
  *(void *)(v0 + 456) = v8;
  if (!v8)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  uint64_t v9 = 0;
  uint64_t v36 = (long long *)(v0 + 96);
  uint64_t v35 = (void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 400);
  *(_DWORD *)(v0 + 600) = *(_DWORD *)(v10 + 80);
  *(void *)(v0 + 464) = *(void *)(v10 + 72);
  while (1)
  {
    *(void *)(v0 + 472) = 0;
    *(void *)(v0 + 480) = v9;
    uint64_t v13 = *(void *)(v0 + 424);
    uint64_t v14 = *(void *)(v0 + 384);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v16 = *(void *)(v0 + 352);
    uint64_t v17 = *(void *)(v0 + 360);
    sub_1002F6E08(*(void *)(v0 + 440)+ ((*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600))+ *(void *)(v0 + 464) * v9, v13, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    size_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    *(void *)(v0 + 488) = v18;
    *(void *)(v0 + 496) = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v14, v13, v16);
    if (*(unsigned char *)(v13 + *(int *)(v15 + 20))) {
      break;
    }
    uint64_t v11 = *(void *)(v0 + 424);
    (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 384), *(void *)(v0 + 352));
    uint64_t v12 = v11;
LABEL_9:
    sub_1002F6F2C(v12, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v9 = *(void *)(v0 + 480) + 1;
    if (v9 == *(void *)(v0 + 456)) {
      goto LABEL_16;
    }
  }
  if (*(unsigned char *)(v13 + *(int *)(v15 + 20)) == 2)
  {
    sub_1002F6E08(*(void *)(v0 + 424), *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v23 = *(void *)(v0 + 416);
    uint64_t v22 = *(void *)(v0 + 424);
    if (v21)
    {
      uint64_t v24 = *(void *)(v0 + 408);
      uint64_t v25 = *(void *)(v0 + 360);
      uint64_t v37 = *(void *)(v0 + 352);
      uint64_t v38 = *(void *)(v0 + 384);
      uint64_t v26 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136446210;
      sub_1002F6E08(v23, v24, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      uint64_t v27 = String.init<A>(describing:)();
      *(void *)(v26 + 4) = sub_1008FA0F0(v27, v28, v40);
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v23, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to process notify request: %{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v38, v37);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 384);
      uint64_t v30 = *(void *)(v0 + 352);
      uint64_t v31 = *(void *)(v0 + 360);

      sub_1002F6F2C(v23, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
    }
    uint64_t v12 = v22;
    goto LABEL_9;
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v36, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0(v36, (uint64_t)v35);
    sub_10001CD44(v35, *(void *)(v0 + 80));
    uint64_t v39 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 504) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1002ED7DC;
    return v39();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002ED7DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 512) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002ED8F4, v2, 0);
}

uint64_t sub_1002ED8F4()
{
  uint64_t v1 = (uint64_t)(v0 + 7);
  if (v0[64])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = v0[64];
    return _swift_task_switch(sub_1002EDB48, v2, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "No BeaconStoreActor available!", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = v0[53];
    uint64_t v7 = v0[48];
    uint64_t v8 = v0[44];
    uint64_t v9 = v0[45];

    sub_10001CEC8();
    swift_allocError();
    void *v10 = 0xD000000000000010;
    v10[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    sub_1002F6F2C(v6, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1002EDB48()
{
  uint64_t v1 = v0[64];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[61];
  uint64_t v4 = v0[47];
  uint64_t v3 = v0[48];
  uint64_t v5 = v0[45];
  uint64_t v6 = v0[44];
  v0[65] = *(void *)(v1 + 136);
  v2(v4, v3, v6);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  v0[66] = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v8 + v7, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1002EDC30, 0, 0);
}

uint64_t sub_1002EDC30()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[67] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F680C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[68] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002EDD38;
  uint64_t v6 = v0[37];
  uint64_t v5 = v0[38];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F733C, v3, v6);
}

uint64_t sub_1002EDD38()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 272);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EDEA4, v1, 0);
}

uint64_t sub_1002EDEA4()
{
  uint64_t v47 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 320) + 48))(v1, 1, *(void *)(v0 + 312)) != 1)
  {
    uint64_t v7 = *(void *)(v0 + 336);
    uint64_t v6 = *(void *)(v0 + 344);
    sub_1002F6EC4(v1, v6, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    sub_1002F6E08(v6, v7, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void *)(v0 + 336);
    if (v10)
    {
      uint64_t v12 = *(void *)(v0 + 328);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      sub_1002F6E08(v11, v12, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
      uint64_t v14 = String.init<A>(describing:)();
      *(void *)(v13 + 4) = sub_1008FA0F0(v14, v15, &v46);
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v11, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Delete notification record (204 response): %s", (uint8_t *)v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1002F6F2C(*(void *)(v0 + 336), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    }

    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
    if (*(void *)(v0 + 160))
    {
      sub_10001CEB0((long long *)(v0 + 136), v0 + 16);
      sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
      uint64_t v45 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v38 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v38;
      void *v38 = v0;
      uint64_t v39 = sub_1002EE61C;
      goto LABEL_19;
    }
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v2 = *(void *)(v0 + 424);
  (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 384), *(void *)(v0 + 352));
  sub_1002F6F2C(v2, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
  sub_10001DAB4(v1, &qword_101660BB0);
  uint64_t v3 = *(void *)(v0 + 480) + 1;
  if (v3 == *(void *)(v0 + 456))
  {
LABEL_3:
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v41 = (long long *)(v0 + 96);
  uint64_t v40 = (void *)(v0 + 56);
  uint64_t v16 = *(void *)(v0 + 472);
  while (1)
  {
    *(void *)(v0 + 472) = v16;
    *(void *)(v0 + 480) = v3;
    uint64_t v19 = *(void *)(v0 + 424);
    uint64_t v20 = *(void *)(v0 + 384);
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v22 = *(void *)(v0 + 352);
    uint64_t v23 = *(void *)(v0 + 360);
    sub_1002F6E08(*(void *)(v0 + 440)+ ((*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600))+ *(void *)(v0 + 464) * v3, v19, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
    *(void *)(v0 + 488) = v24;
    *(void *)(v0 + 496) = (v23 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v20, v19, v22);
    if (*(unsigned char *)(v19 + *(int *)(v21 + 20))) {
      break;
    }
    uint64_t v17 = *(void *)(v0 + 424);
    (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 384), *(void *)(v0 + 352));
    uint64_t v18 = v17;
LABEL_10:
    sub_1002F6F2C(v18, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v3 = *(void *)(v0 + 480) + 1;
    if (v3 == *(void *)(v0 + 456)) {
      goto LABEL_3;
    }
  }
  if (*(unsigned char *)(v19 + *(int *)(v21 + 20)) == 2)
  {
    sub_1002F6E08(*(void *)(v0 + 424), *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v29 = *(void *)(v0 + 416);
    uint64_t v28 = *(void *)(v0 + 424);
    if (v27)
    {
      uint64_t v30 = *(void *)(v0 + 408);
      uint64_t v44 = *(void *)(v0 + 424);
      uint64_t v31 = *(void *)(v0 + 360);
      uint64_t v42 = *(void *)(v0 + 352);
      uint64_t v43 = *(void *)(v0 + 384);
      uint64_t v32 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446210;
      sub_1002F6E08(v29, v30, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      uint64_t v33 = String.init<A>(describing:)();
      *(void *)(v32 + 4) = sub_1008FA0F0(v33, v34, &v46);
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v29, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Failed to process notify request: %{public}s", (uint8_t *)v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v43, v42);
      uint64_t v18 = v44;
    }
    else
    {
      uint64_t v35 = *(void *)(v0 + 384);
      uint64_t v36 = *(void *)(v0 + 352);
      uint64_t v37 = *(void *)(v0 + 360);

      sub_1002F6F2C(v29, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
      uint64_t v18 = v28;
    }
    goto LABEL_10;
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v41, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 120))
  {
LABEL_27:
    __break(1u);
    return result;
  }
  sub_10001CEB0(v41, (uint64_t)v40);
  sub_10001CD44(v40, *(void *)(v0 + 80));
  uint64_t v45 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
  uint64_t v38 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v38;
  void *v38 = v0;
  uint64_t v39 = (uint64_t (*)(uint64_t))sub_1002ED7DC;
LABEL_19:
  v38[1] = v39;
  return v45();
}

uint64_t sub_1002EE61C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 560) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002EE734, v2, 0);
}

uint64_t sub_1002EE734()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (!v0[70])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    BOOL v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "No BeaconStoreActor available!", v12, 2u);
      swift_slowDealloc();
    }
    uint64_t v13 = v0[53];
    uint64_t v14 = v0[48];
    uint64_t v15 = v0[44];
    uint64_t v16 = v0[45];
    uint64_t v9 = v0[43];

    sub_10001CEC8();
    swift_allocError();
    void *v17 = 0xD000000000000010;
    v17[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
    sub_1002F6F2C(v13, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    goto LABEL_7;
  }
  uint64_t v2 = v0[59];
  uint64_t v3 = v0[43];
  uint64_t v4 = v0[36];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  *(void *)(swift_task_alloc() + 16) = v3;
  sub_100EE07C0((void (*)(uint64_t, _UNKNOWN **))sub_1002F7320, v4);
  if (v2)
  {
    uint64_t v5 = v0[53];
    uint64_t v6 = v0[48];
    uint64_t v8 = v0[44];
    uint64_t v7 = v0[45];
    uint64_t v9 = v0[43];
    swift_release();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    sub_1002F6F2C(v5, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1002F6F2C(v9, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
  swift_task_dealloc();
  uint64_t v20 = v0[70];
  return _swift_task_switch(sub_1002EEA5C, v20, 0);
}

uint64_t sub_1002EEA5C()
{
  *(void *)(v0 + 568) = *(void *)(*(void *)(v0 + 560) + 128);
  return _swift_task_switch(sub_1002EEA84, 0, 0);
}

uint64_t sub_1002EEA84()
{
  uint64_t v1 = v0[71];
  uint64_t v2 = v0[36];
  uint64_t v3 = swift_task_alloc();
  v0[72] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[73] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002EEB7C;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_100074FFC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1002EEB7C()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002EF444;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1002EEC98;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002EEC98()
{
  uint64_t v1 = *(void *)(v0 + 272);
  sub_10001DAB4(*(void *)(v0 + 288), &qword_101639E88);
  swift_release();
  return _swift_task_switch(sub_1002EED18, v1, 0);
}

uint64_t sub_1002EED18()
{
  uint64_t v50 = v0;
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v3 = type metadata accessor for TaskPriority();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v1, 1, 1, v3);
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = 0;
  v5[3] = 0;
  v5[4] = v2;
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v1, 1, v3);
  swift_retain();
  uint64_t v7 = *(void *)(v0 + 280);
  if (v6 == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 280), &qword_10164DBB0);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
    if (v5[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v9 = v10;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v8 = 0;
      uint64_t v9 = 0;
    }
  }
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &unk_101641218;
  *(void *)(v11 + 24) = v5;
  sub_10000588C(&qword_101641228);
  if (v9 | v8)
  {
    *(void *)(v0 + 176) = 0;
    *(void *)(v0 + 184) = 0;
    *(void *)(v0 + 192) = v8;
    *(void *)(v0 + 200) = v9;
  }
  uint64_t v12 = *(void *)(v0 + 424);
  uint64_t v13 = *(void *)(v0 + 384);
  uint64_t v14 = *(void *)(v0 + 352);
  uint64_t v15 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 344);
  swift_task_create();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  sub_1002F6F2C(v12, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
  sub_1002F6F2C(v16, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v17 = *(void *)(v0 + 480) + 1;
  if (v17 == *(void *)(v0 + 456))
  {
LABEL_9:
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  uint64_t v44 = (long long *)(v0 + 96);
  uint64_t v43 = (void *)(v0 + 56);
  uint64_t v20 = *(void *)(v0 + 592);
  while (1)
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v17;
    uint64_t v23 = *(void *)(v0 + 424);
    uint64_t v24 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 392);
    uint64_t v26 = *(void *)(v0 + 352);
    uint64_t v27 = *(void *)(v0 + 360);
    sub_1002F6E08(*(void *)(v0 + 440)+ ((*(unsigned __int8 *)(v0 + 600) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 600))+ *(void *)(v0 + 464) * v17, v23, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 16);
    *(void *)(v0 + 488) = v28;
    *(void *)(v0 + 496) = (v27 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v28(v24, v23, v26);
    if (*(unsigned char *)(v23 + *(int *)(v25 + 20))) {
      break;
    }
    uint64_t v21 = *(void *)(v0 + 424);
    (*(void (**)(void, void))(*(void *)(v0 + 360) + 8))(*(void *)(v0 + 384), *(void *)(v0 + 352));
    uint64_t v22 = v21;
LABEL_14:
    sub_1002F6F2C(v22, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v17 = *(void *)(v0 + 480) + 1;
    if (v17 == *(void *)(v0 + 456)) {
      goto LABEL_9;
    }
  }
  if (*(unsigned char *)(v23 + *(int *)(v25 + 20)) == 2)
  {
    sub_1002F6E08(*(void *)(v0 + 424), *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v33 = *(void *)(v0 + 416);
    uint64_t v32 = *(void *)(v0 + 424);
    if (v31)
    {
      uint64_t v34 = *(void *)(v0 + 408);
      uint64_t v47 = *(void *)(v0 + 424);
      uint64_t v35 = *(void *)(v0 + 360);
      uint64_t v45 = *(void *)(v0 + 352);
      uint64_t v46 = *(void *)(v0 + 384);
      uint64_t v36 = swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446210;
      sub_1002F6E08(v33, v34, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      uint64_t v37 = String.init<A>(describing:)();
      *(void *)(v36 + 4) = sub_1008FA0F0(v37, v38, &v49);
      swift_bridgeObjectRelease();
      sub_1002F6F2C(v33, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Failed to process notify request: %{public}s", (uint8_t *)v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v46, v45);
      uint64_t v22 = v47;
    }
    else
    {
      uint64_t v39 = *(void *)(v0 + 384);
      uint64_t v40 = *(void *)(v0 + 352);
      uint64_t v41 = *(void *)(v0 + 360);

      sub_1002F6F2C(v33, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
      (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
      uint64_t v22 = v32;
    }
    goto LABEL_14;
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v44, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0(v44, (uint64_t)v43);
    sub_10001CD44(v43, *(void *)(v0 + 80));
    uint64_t v48 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 504) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_1002ED7DC;
    return v48();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002EF444()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 560);
  return _swift_task_switch(sub_1002EF4AC, v1, 0);
}

uint64_t sub_1002EF4AC()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_release();
  sub_10001DAB4(v1, &qword_101639E88);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1002EF540, v2, 0);
}

uint64_t sub_1002EF540()
{
  uint64_t v1 = v0[53];
  uint64_t v2 = v0[48];
  uint64_t v3 = v0[44];
  uint64_t v4 = v0[45];
  uint64_t v5 = v0[43];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_1002F6F2C(v1, (uint64_t (*)(void))type metadata accessor for NotifyMeResponseResult);
  sub_1002F6F2C(v5, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1002EF698(uint64_t a1)
{
  v2[36] = a1;
  v2[37] = v1;
  v2[38] = type metadata accessor for NotifyWhenFoundUserNotification();
  v2[39] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v2[40] = swift_task_alloc();
  v2[41] = sub_10000588C(&qword_10163BB20);
  v2[42] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for BeaconObservation();
  v2[43] = v3;
  v2[44] = *(void *)(v3 - 8);
  v2[45] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[46] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[47] = v5;
  v2[48] = *(void *)(v5 + 64);
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = swift_task_alloc();
  return _swift_task_switch(sub_1002EF89C, v1, 0);
}

uint64_t sub_1002EF89C()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  uint64_t v4 = v0[36];
  uint64_t v5 = v4 + *(int *)(type metadata accessor for NotifyWhenFoundRecord() + 24);
  int v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[56] = v6;
  v0[57] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[58] = v7;
  void *v7 = v0;
  v7[1] = sub_1002EF97C;
  uint64_t v8 = v0[55];
  return sub_1002EBD1C(v8);
}

uint64_t sub_1002EF97C(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 472) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 296);
  if (v1)
  {
    int v6 = sub_1002F1D08;
  }
  else
  {
    *(unsigned char *)(v4 + 676) = a1 & 1;
    int v6 = sub_1002EFABC;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002EFABC()
{
  uint64_t v44 = v0;
  if (*(unsigned char *)(v0 + 676))
  {
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    uint64_t v2 = *(void *)(v0 + 440);
    uint64_t v3 = *(void *)(v0 + 392);
    uint64_t v4 = *(void *)(v0 + 368);
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170DD90);
    v1(v3, v2, v4);
    int v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.info.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = *(void *)(v0 + 440);
    uint64_t v10 = *(void *)(v0 + 392);
    uint64_t v11 = *(void *)(v0 + 368);
    uint64_t v12 = *(void *)(v0 + 376);
    if (v8)
    {
      uint64_t v13 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      *(void *)(v0 + 272) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 280) = sub_1008FA0F0(v14, v15, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Already posted local notification for beacon %{private,mask.hash}s.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v10, v11);
    }
    v16(v9, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
    return v39();
  }
  else
  {
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 360);
    uint64_t v19 = *(void *)(v0 + 344);
    uint64_t v18 = *(void *)(v0 + 352);
    uint64_t v20 = qword_10170E330;
    (*(void (**)(uint64_t, void, void))(v0 + 448))(v17, *(void *)(v0 + 440), *(void *)(v0 + 368));
    static Date.trustedNow.getter(v17 + *(int *)(v19 + 20));
    *(unsigned char *)(v17 + *(int *)(v19 + 24)) = 28;
    sub_10000588C(&qword_10163A778);
    unint64_t v21 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_101342130;
    sub_1002F6E08(v17, v22 + v21, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    type metadata accessor for Transaction();
    uint64_t v23 = (void *)swift_task_alloc();
    v23[2] = v20;
    v23[3] = v22;
    v23[4] = 0;
    v23[5] = 0;
    static Transaction.named<A>(_:with:)();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1002F6F2C(v17, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
    uint64_t v26 = *(void *)(v0 + 432);
    uint64_t v25 = *(void *)(v0 + 440);
    uint64_t v27 = *(void *)(v0 + 368);
    uint64_t v28 = type metadata accessor for Logger();
    *(void *)(v0 + 480) = sub_100010324(v28, (uint64_t)qword_10170DD90);
    v24(v26, v25, v27);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v32 = *(void *)(v0 + 432);
    uint64_t v33 = *(void *)(v0 + 368);
    uint64_t v34 = *(void *)(v0 + 376);
    if (v31)
    {
      uint64_t v35 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 141558275;
      *(void *)(v0 + 256) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 264) = sub_1008FA0F0(v36, v37, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v38(v32, v33);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Showing local NWF notification for beacon %{private,mask.hash}s.", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v38 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v38(*(void *)(v0 + 432), *(void *)(v0 + 368));
    }

    *(void *)(v0 + 488) = v38;
    uint64_t v41 = (void *)swift_task_alloc();
    *(void *)(v0 + 496) = v41;
    *uint64_t v41 = v0;
    v41[1] = sub_1002F01B8;
    uint64_t v42 = *(void *)(v0 + 296);
    v41[15] = v42;
    return _swift_task_switch(sub_1002C662C, v42, 0);
  }
}

uint64_t sub_1002F01B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 504) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 296);
    int v6 = sub_1002F1E14;
  }
  else
  {
    *(void *)(v4 + 512) = a1;
    int v6 = sub_1002F02EC;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002F02EC()
{
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v3 = *(void *)(v0 + 440);
  uint64_t v4 = *(void *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 376);
  uint64_t v6 = *(void *)(v0 + 368);
  *(void *)(v0 + 520) = *(void *)(v1 + 136);
  v2(v4, v3, v6);
  int v7 = *(_DWORD *)(v5 + 80);
  *(_DWORD *)(v0 + 672) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 528) = v9;
  *(void *)(v9 + 16) = v1;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
  *(void *)(v0 + 536) = v10;
  *(void *)(v0 + 544) = (v5 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v4, v6);
  swift_retain();
  return _swift_task_switch(sub_1002F03F0, 0, 0);
}

uint64_t sub_1002F03F0()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[69] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5A00;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[70] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163BBE0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002F050C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 8, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001CE50, v3, v5);
}

uint64_t sub_1002F050C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 296);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F0678, v1, 0);
}

uint64_t sub_1002F0678()
{
  unint64_t v21 = v0;
  uint64_t v1 = (long long *)(v0 + 8);
  if (v0[11])
  {
    sub_10001CEB0(v1, (uint64_t)(v0 + 18));
    uint64_t v2 = (void *)swift_task_alloc();
    v0[71] = v2;
    void *v2 = v0;
    v2[1] = sub_1002F0A14;
    uint64_t v3 = v0[37];
    v2[15] = v3;
    return _swift_task_switch(sub_1002C662C, v3, 0);
  }
  else
  {
    uint64_t v4 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
    uint64_t v5 = v0[55];
    uint64_t v6 = v0[50];
    uint64_t v7 = v0[46];
    sub_10001DAB4((uint64_t)v1, (uint64_t *)&unk_10163BBE0);
    v4(v6, v5, v7);
    unint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[61];
    uint64_t v12 = v0[55];
    uint64_t v13 = v0[50];
    uint64_t v14 = v0[46];
    if (v10)
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 141558275;
      v0[30] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v15 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[31] = sub_1008FA0F0(v16, v17, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v11(v13, v14);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "No beaconRecord for %{private,mask.hash}s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v11(v12, v14);
    }
    else
    {

      v11(v13, v14);
      v11(v12, v14);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1002F0A14(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  uint64_t v5 = *(void **)v2;
  *(void *)(*(void *)v2 + 576) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = v4[37];
    return _swift_task_switch(sub_1002F1F24, v6, 0);
  }
  else
  {
    v4[73] = a1;
    uint64_t v7 = (void *)swift_task_alloc();
    v4[74] = v7;
    void *v7 = v5;
    v7[1] = sub_1002F0BA0;
    uint64_t v8 = v4[55];
    return sub_100E61EB4(v8);
  }
}

uint64_t sub_1002F0BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 296);
  *(void *)(v3 + 600) = a1;
  *(void *)(v3 + 608) = a2;
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_1002F0CD8, v4, 0);
}

uint64_t sub_1002F0CD8()
{
  uint64_t v46 = v0;
  uint64_t v1 = v0 + 144;
  if (!*(void *)(v0 + 608))
  {
    (*(void (**)(void, void, void))(v0 + 448))(*(void *)(v0 + 408), *(void *)(v0 + 440), *(void *)(v0 + 368));
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    BOOL v28 = os_log_type_enabled(v26, v27);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    uint64_t v30 = *(void *)(v0 + 440);
    uint64_t v31 = *(void *)(v0 + 408);
    uint64_t v32 = *(void *)(v0 + 368);
    if (v28)
    {
      uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
      uint64_t v33 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 141558275;
      *(void *)(v0 + 232) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 224) = sub_1008FA0F0(v34, v35, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v43(v31, v32);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Can't construct beacon name for beacon %{private,mask.hash}s.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      uint64_t v1 = v0 + 144;
      swift_slowDealloc();
      swift_slowDealloc();

      v43(v30, v32);
    }
    else
    {

      v29(v31, v32);
      v29(v30, v32);
    }
LABEL_12:
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v2 = *(void *)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 320);
  uint64_t v5 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 176);
  sub_10001CD44((void *)(v0 + 144), v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 192))(v5, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v3) == 1)
  {
    uint64_t v7 = *(void *)(v0 + 336);
    sub_10001DAB4(*(void *)(v0 + 320), &qword_101638CF0);
    uint64_t v8 = type metadata accessor for OwnedBeaconGroup(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = *(void *)(v0 + 608);
    uint64_t v10 = *(void *)(v0 + 600);
    uint64_t v11 = *(void *)(v0 + 336);
    uint64_t v12 = *(int **)(v0 + 304);
    uint64_t v13 = *(_WORD **)(v0 + 312);
    sub_10001D010(v0 + 144, (uint64_t)v13 + v12[8]);
    sub_10001D074(v11, (uint64_t)v13 + v12[9], &qword_10163BB20);
    *uint64_t v13 = 24577;
    UUID.init()();
    uint64_t v14 = (void *)((char *)v13 + v12[7]);
    void *v14 = v10;
    v14[1] = v9;
    if (qword_101637118 != -1) {
      swift_once();
    }
    uint64_t v42 = *(void *)(v0 + 440);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
    uint64_t v41 = *(void *)(v0 + 368);
    uint64_t v40 = *(void *)(v0 + 336);
    uint64_t v15 = *(void *)(v0 + 312);
    *(void *)(v0 + 208) = *(void *)(v0 + 304);
    *(void *)(v0 + 216) = &off_1016112E8;
    uint64_t v16 = sub_10001D958((uint64_t *)(v0 + 184));
    sub_1002F6E08(v15, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundUserNotification);
    id v17 = objc_allocWithZone((Class)UNUserNotificationCenter);
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v19 = [v17 initWithBundleIdentifier:v18];

    id v20 = sub_101094F60((uint64_t)v16);
    UUID.uuidString.getter();
    id v21 = v20;
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v23 = [self requestWithIdentifier:v22 content:v21 trigger:0 destinations:7];

    sub_10001D010(v0 + 184, v0 + 104);
    uint64_t v24 = swift_allocObject();
    sub_10001CEB0((long long *)(v0 + 104), v24 + 16);
    *(void *)(v24 + 56) = 0;
    *(void *)(v24 + 64) = 0;
    *(void *)(v0 + 48) = sub_1002F6720;
    *(void *)(v0 + 56) = v24;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_100769474;
    *(void *)(v0 + 40) = &unk_1015B85A8;
    uint64_t v25 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    [v19 addNotificationRequest:v23 withCompletionHandler:v25];

    _Block_release(v25);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 184);
    sub_1002F6F2C(v15, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundUserNotification);
    sub_10001DAB4(v40, &qword_10163BB20);
    v44(v42, v41);
    uint64_t v1 = v0 + 144;
    goto LABEL_12;
  }
  (*(void (**)(void, void, void))(v0 + 536))(*(void *)(v0 + 416), *(void *)(v0 + 320), *(void *)(v0 + 368));
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 616) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_1002F1440;
  uint64_t v37 = *(void *)(v0 + 296);
  v36[15] = v37;
  return _swift_task_switch(sub_1002C662C, v37, 0);
}

uint64_t sub_1002F1440(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 624) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 296);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_1002F2040;
    uint64_t v7 = v5;
  }
  else
  {
    *(void *)(v4 + 632) = a1;
    uint64_t v6 = sub_1002F1580;
    uint64_t v7 = a1;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_1002F1580()
{
  uint64_t v1 = *(void *)(v0 + 632);
  uint64_t v2 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 536);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v4 = *(void *)(v0 + 416);
  uint64_t v5 = *(void *)(v0 + 424);
  uint64_t v6 = *(void *)(v0 + 368);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 672) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 672);
  *(void *)(v0 + 640) = *(void *)(v1 + 136);
  v3(v5, v4, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 648) = v8;
  *(void *)(v8 + 16) = v1;
  v2(v8 + v7, v5, v6);
  swift_retain();
  return _swift_task_switch(sub_1002F1674, 0, 0);
}

uint64_t sub_1002F1674()
{
  uint64_t v1 = v0[81];
  uint64_t v2 = v0[80];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[82] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F6748;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[83] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002F177C;
  uint64_t v6 = v0[41];
  uint64_t v5 = v0[42];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100061684, v3, v6);
}

uint64_t sub_1002F177C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 296);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F18E8, v1, 0);
}

uint64_t sub_1002F18E8()
{
  (*(void (**)(void, void))(v0 + 488))(*(void *)(v0 + 416), *(void *)(v0 + 368));
  uint64_t v1 = *(void *)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 600);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v5 = *(int **)(v0 + 304);
  uint64_t v4 = *(_WORD **)(v0 + 312);
  sub_10001D010(v0 + 144, (uint64_t)v4 + v5[8]);
  sub_10001D074(v3, (uint64_t)v4 + v5[9], &qword_10163BB20);
  *uint64_t v4 = 24577;
  UUID.init()();
  uint64_t v6 = (void *)((char *)v4 + v5[7]);
  *uint64_t v6 = v2;
  v6[1] = v1;
  if (qword_101637118 != -1) {
    swift_once();
  }
  uint64_t v23 = *(void *)(v0 + 440);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 488);
  uint64_t v22 = *(void *)(v0 + 368);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v20 = v7;
  uint64_t v21 = *(void *)(v0 + 336);
  *(void *)(v0 + 208) = *(void *)(v0 + 304);
  *(void *)(v0 + 216) = &off_1016112E8;
  uint64_t v8 = sub_10001D958((uint64_t *)(v0 + 184));
  sub_1002F6E08(v7, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundUserNotification);
  id v9 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [v9 initWithBundleIdentifier:v10];

  id v12 = sub_101094F60((uint64_t)v8);
  UUID.uuidString.getter();
  id v13 = v12;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [self requestWithIdentifier:v14 content:v13 trigger:0 destinations:7];

  sub_10001D010(v0 + 184, v0 + 104);
  uint64_t v16 = swift_allocObject();
  sub_10001CEB0((long long *)(v0 + 104), v16 + 16);
  *(void *)(v16 + 56) = 0;
  *(void *)(v16 + 64) = 0;
  *(void *)(v0 + 48) = sub_1002F6720;
  *(void *)(v0 + 56) = v16;
  *(void *)(v0 + 16) = _NSConcreteStackBlock;
  *(void *)(v0 + 24) = 1107296256;
  *(void *)(v0 + 32) = sub_100769474;
  *(void *)(v0 + 40) = &unk_1015B85A8;
  id v17 = _Block_copy((const void *)(v0 + 16));
  swift_release();
  [v11 addNotificationRequest:v15 withCompletionHandler:v17];

  _Block_release(v17);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 184);
  sub_1002F6F2C(v20, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundUserNotification);
  sub_10001DAB4(v21, &qword_10163BB20);
  v24(v23, v22);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  NSString v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1002F1D08()
{
  (*(void (**)(void, void))(v0[47] + 8))(v0[55], v0[46]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1002F1E14()
{
  (*(void (**)(void, void))(v0 + 488))(*(void *)(v0 + 440), *(void *)(v0 + 368));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F1F24()
{
  (*(void (**)(void, void))(v0 + 488))(*(void *)(v0 + 440), *(void *)(v0 + 368));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 144);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F2040()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[61];
  uint64_t v2 = v0[55];
  uint64_t v3 = v0[46];
  v1(v0[52], v3);
  v1(v2, v3);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 18));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1002F2178(uint64_t a1)
{
  v2[41] = a1;
  v2[42] = v1;
  sub_10000588C(&qword_101638CF0);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[45] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[46] = v4;
  v2[47] = *(void *)(v4 + 64);
  v2[48] = swift_task_alloc();
  v2[49] = swift_task_alloc();
  v2[50] = swift_task_alloc();
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = sub_10000588C(&qword_101660BB0);
  v2[56] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v2[57] = found;
  v2[58] = *(void *)(found - 8);
  v2[59] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[60] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1002F23A4;
  v6[15] = v1;
  return _swift_task_switch(sub_1002C662C, v1, 0);
}

uint64_t sub_1002F23A4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 488) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 336);
    uint64_t v6 = sub_1002F503C;
  }
  else
  {
    *(void *)(v4 + 496) = a1;
    uint64_t v6 = sub_1002F24D8;
    uint64_t v5 = a1;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002F24D8()
{
  uint64_t v1 = *(void *)(v0 + 496);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 360);
  uint64_t v5 = *(void *)(v0 + 328);
  *(void *)(v0 + 504) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 512) = v6;
  *(void *)(v0 + 520) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  int v7 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 672) = v7;
  unint64_t v8 = (v7 + 24) & ~(unint64_t)v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 528) = v9;
  *(void *)(v9 + 16) = v1;
  NSString v10 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32);
  *(void *)(v0 + 536) = v10;
  *(void *)(v0 + 544) = (v3 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v10(v9 + v8, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_1002F25F8, 0, 0);
}

uint64_t sub_1002F25F8()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[63];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[69] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5948;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[70] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002F2700;
  uint64_t v6 = v0[55];
  uint64_t v5 = v0[56];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F5960, v3, v6);
}

uint64_t sub_1002F2700()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 336);
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F286C, v1, 0);
}

uint64_t sub_1002F286C()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0[56];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[58] + 48))(v1, 1, v0[57]) == 1)
  {
    sub_10001DAB4(v1, &qword_101660BB0);
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[64];
    uint64_t v3 = v0[50];
    uint64_t v4 = v0[45];
    uint64_t v5 = v0[41];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170DD90);
    v2(v3, v5, v4);
    int v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.info.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[50];
    uint64_t v11 = v0[45];
    uint64_t v12 = v0[46];
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      v0[33] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[37] = sub_1008FA0F0(v14, v15, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "No NWF record for beacon %{private,mask.hash}s. No need to publish", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[50], v0[45]);
    }

LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = (uint64_t (*)(void))v0[1];
    return v41();
  }
  uint64_t v16 = (void (*)(char *, uint64_t, uint64_t))v0[64];
  NSString v18 = (char *)v0[53];
  uint64_t v17 = v0[54];
  uint64_t v20 = v0[45];
  uint64_t v19 = v0[46];
  uint64_t v21 = v0[41];
  sub_1002F6EC4(v1, v0[59], (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  v16(v18, v21, v20);
  swift_beginAccess();
  char v22 = sub_100DC8CB8(v17, v18);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v0[71] = v23;
  v0[72] = (v19 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v23(v17, v20);
  swift_endAccess();
  if ((v22 & 1) == 0)
  {
    if (qword_101636A50 != -1) {
      swift_once();
    }
    os_log_type_t v27 = (void (*)(uint64_t, uint64_t, uint64_t))v0[64];
    uint64_t v28 = v0[51];
    uint64_t v29 = v0[45];
    uint64_t v30 = v0[41];
    uint64_t v31 = type metadata accessor for Logger();
    sub_100010324(v31, (uint64_t)qword_10170DD90);
    v27(v28, v30, v29);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.info.getter();
    BOOL v34 = os_log_type_enabled(v32, v33);
    uint64_t v35 = v0[59];
    uint64_t v36 = v0[51];
    uint64_t v37 = v0[45];
    if (v34)
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 141558275;
      v0[35] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[34] = sub_1008FA0F0(v39, v40, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v23(v36, v37);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Found pending force publish for beacon %{private,mask.hash}s", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v23(v36, v37);
    }
    sub_1002F6F2C(v35, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    goto LABEL_18;
  }
  uint64_t v24 = (void *)swift_task_alloc();
  v0[73] = v24;
  void *v24 = v0;
  v24[1] = sub_1002F2F14;
  uint64_t v25 = v0[59];
  return sub_1002EF698(v25);
}

uint64_t sub_1002F2F14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 592) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 336);
  if (v0) {
    uint64_t v4 = sub_1002F5130;
  }
  else {
    uint64_t v4 = sub_1002F3040;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002F3040()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 96);
    sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639120 + dword_101639120);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 600) = v2;
    void *v2 = v0;
    v2[1] = sub_1002F317C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F317C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 608) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F3294, v2, 0);
}

uint64_t sub_1002F3294()
{
  uint64_t v1 = (uint64_t)(v0 + 12);
  if (v0[76])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[77] = v2;
    void *v2 = v0;
    v2[1] = sub_1002F35E4;
    return sub_100923BB4(0);
  }
  else
  {
    uint64_t v4 = (long long *)(v0 + 17);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = 0xD00000000000001DLL;
    v6[1] = 0x80000001013F1E50;
    swift_willThrow();
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170DD90);
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138543362;
      swift_errorRetain();
      uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
      v0[40] = v12;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v12;
      uint64_t v4 = (long long *)(v0 + 17);
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Force publish FMN failed. Error - %{public}@", v10, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    v0[79] = v5;
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v4, (uint64_t *)&unk_101638D30);
    if (v0[20])
    {
      sub_10001CEB0(v4, (uint64_t)(v0 + 2));
      sub_10001CD44(v0 + 2, v0[5]);
      uint64_t v14 = (uint64_t (__cdecl *)())((char *)&dword_1016392E8 + dword_1016392E8);
      uint64_t v13 = (void *)swift_task_alloc();
      v0[80] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_1002F380C;
      return v14();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002F35E4(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 624) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 336);
    uint64_t v6 = sub_1002F5240;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 336);
    swift_release();

    uint64_t v6 = sub_1002F371C;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1002F371C()
{
  *(void *)(v0 + 632) = 0;
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 136, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 160))
  {
    sub_10001CEB0((long long *)(v0 + 136), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_1016392E8 + dword_1016392E8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 640) = v2;
    void *v2 = v0;
    v2[1] = sub_1002F380C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F380C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 336);
  *(void *)(*(void *)v1 + 648) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F3924, v2, 0);
}

uint64_t sub_1002F3924()
{
  uint64_t v46 = v0;
  uint64_t v1 = *(void *)(v0 + 648);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 648);
    return _swift_task_switch(sub_1002F4028, v2, 0);
  }
  else
  {
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v3 = 0xD00000000000001CLL;
    v3[1] = 0x80000001013F8080;
    swift_willThrow();
    p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170DD90);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v44 = v5;
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v8 = 138543362;
      swift_errorRetain();
      uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 288) = v10;
      p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v9 = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Force publish owned device failed. Error - %{public}@", v8, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v5 = v44;
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    if (*((void *)p_ivar_base_size + 330) != -1) {
      swift_once();
    }
    sub_100010324(v5, (uint64_t)qword_10170DD90);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Force publish failed, removing pending forece publish.", v13, 2u);
      swift_slowDealloc();
    }
    uint64_t v14 = *(unsigned __int8 *)(v0 + 672);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    uint64_t v16 = *(void *)(v0 + 360);
    uint64_t v17 = *(void *)(v0 + 368);
    uint64_t v18 = *(void *)(v0 + 352);
    uint64_t v19 = *(void *)(v0 + 328);

    sub_10000588C(&qword_10163BC50);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_101342130;
    uint64_t v21 = v20 + ((v14 + 32) & ~v14);
    v15(v21, v19, v16);
    swift_bridgeObjectRetain();
    v15(v18, v21, v16);
    char v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    v22(v18, 0, 1, v16);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v18, 1, v16) != 1)
    {
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
      uint64_t v25 = *(void *)(v0 + 384);
      uint64_t v24 = *(void *)(v0 + 392);
      uint64_t v26 = *(void *)(v0 + 360);
      (*(void (**)(uint64_t, void, uint64_t))(v0 + 536))(v24, *(void *)(v0 + 352), v26);
      v23(v25, v24, v26);
      os_log_type_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.default.getter();
      BOOL v29 = os_log_type_enabled(v27, v28);
      uint64_t v30 = *(void *)(v0 + 384);
      uint64_t v31 = *(void *)(v0 + 360);
      if (v29)
      {
        uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        uint64_t v32 = swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 141558275;
        *(void *)(v32 + 4) = 1752392040;
        *(_WORD *)(v32 + 12) = 2081;
        sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v32 + 14) = sub_1008FA0F0(v33, v34, &v45);
        swift_bridgeObjectRelease();
        v43(v30, v31);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Removing beacon %{private,mask.hash}s from pending force publish.", (uint8_t *)v32, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 384), *(void *)(v0 + 360));
      }

      uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v36 = *(void *)(v0 + 392);
      uint64_t v38 = *(void *)(v0 + 352);
      uint64_t v37 = *(void *)(v0 + 360);
      uint64_t v39 = *(void *)(v0 + 344);
      swift_beginAccess();
      sub_101126F68(v36, v39);
      sub_10001DAB4(v39, &qword_101638CF0);
      swift_endAccess();
      v35(v36, v37);
      v22(v38, 1, 1, v37);
    }
    uint64_t v40 = *(void *)(v0 + 472);
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    sub_1002F6F2C(v40, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
    return v41();
  }
}

uint64_t sub_1002F4028()
{
  uint64_t v1 = v0[81];
  v0[31] = 0xD000000000000013;
  v0[32] = 0x80000001013F80A0;
  uint64_t v4 = (char *)&async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:)
     + async function pointer to dispatch thunk of AsyncKeyedThrottle.throttle(key:block:skipBlock:);
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[82] = v2;
  void *v2 = v0;
  v2[1] = sub_1002F4140;
  return ((uint64_t (*)(void *, void *, uint64_t, void (*)(), void))v4)(v0 + 31, &unk_1016411F8, v1, sub_100871C18, 0);
}

uint64_t sub_1002F4140()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 664) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = *(void *)(v2 + 648);
    uint64_t v4 = sub_1002F49AC;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 336);
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v4 = sub_1002F4294;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002F4294()
{
  uint64_t v52 = v0;
  if (*(void *)(v0 + 632))
  {
    swift_errorRetain();
    swift_willThrow();
    swift_errorRelease();
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100010324(v1, (uint64_t)qword_10170DD90);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Force publish failed, removing pending forece publish.", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(unsigned __int8 *)(v0 + 672);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 368);
    uint64_t v9 = *(void *)(v0 + 352);
    uint64_t v10 = *(void *)(v0 + 328);

    sub_10000588C(&qword_10163BC50);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_101342130;
    uint64_t v12 = v11 + ((v5 + 32) & ~v5);
    v6(v12, v10, v7);
    swift_bridgeObjectRetain();
    v6(v9, v12, v7);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v13(v9, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7) != 1)
    {
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
      uint64_t v16 = *(void *)(v0 + 384);
      uint64_t v15 = *(void *)(v0 + 392);
      uint64_t v17 = *(void *)(v0 + 360);
      (*(void (**)(uint64_t, void, uint64_t))(v0 + 536))(v15, *(void *)(v0 + 352), v17);
      v14(v16, v15, v17);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v21 = *(void *)(v0 + 384);
      uint64_t v22 = *(void *)(v0 + 360);
      if (v20)
      {
        uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
        uint64_t v23 = swift_slowAlloc();
        v51[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 141558275;
        *(void *)(v23 + 4) = 1752392040;
        *(_WORD *)(v23 + 12) = 2081;
        sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v23 + 14) = sub_1008FA0F0(v24, v25, v51);
        swift_bridgeObjectRelease();
        v50(v21, v22);
        _os_log_impl((void *)&_mh_execute_header, v18, v19, "Removing beacon %{private,mask.hash}s from pending force publish.", (uint8_t *)v23, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 384), *(void *)(v0 + 360));
      }

      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v43 = *(void *)(v0 + 392);
      uint64_t v45 = *(void *)(v0 + 352);
      uint64_t v44 = *(void *)(v0 + 360);
      uint64_t v46 = *(void *)(v0 + 344);
      swift_beginAccess();
      sub_101126F68(v43, v46);
      sub_10001DAB4(v46, &qword_101638CF0);
      swift_endAccess();
      v42(v43, v44);
      v13(v45, 1, 1, v44);
    }
    uint64_t v47 = *(void *)(v0 + 472);
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    uint64_t v41 = v47;
  }
  else
  {
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    uint64_t v27 = *(void *)(v0 + 416);
    uint64_t v28 = *(void *)(v0 + 360);
    uint64_t v29 = *(void *)(v0 + 328);
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170DD90);
    v26(v27, v29, v28);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v35 = *(void *)(v0 + 472);
    uint64_t v36 = *(void *)(v0 + 416);
    uint64_t v37 = *(void *)(v0 + 360);
    if (v33)
    {
      uint64_t v38 = swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 141558275;
      *(void *)(v0 + 304) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v38 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 312) = sub_1008FA0F0(v39, v40, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v34(v36, v37);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Force publish succeeded for beacon %{private,mask.hash}s.", (uint8_t *)v38, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      v34(v36, v37);
    }
    uint64_t v41 = v35;
  }
  sub_1002F6F2C(v41, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
  return v48();
}

uint64_t sub_1002F49AC()
{
  return _swift_task_switch(sub_1002F49C8, *(void *)(v0 + 336), 0);
}

uint64_t sub_1002F49C8()
{
  uint64_t v43 = v0;
  swift_release();
  p_ivar_base_size = &AnalyticsEvent.ivar_base_size;
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170DD90);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v41 = v2;
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138543362;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 288) = v7;
    p_ivar_base_size = (_DWORD *)(&AnalyticsEvent + 8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Force publish owned device failed. Error - %{public}@", v5, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v41;
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRetain();
  swift_willThrow();
  swift_errorRelease();
  if (*((void *)p_ivar_base_size + 330) != -1) {
    swift_once();
  }
  sub_100010324(v2, (uint64_t)qword_10170DD90);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Force publish failed, removing pending forece publish.", v10, 2u);
    swift_slowDealloc();
  }
  uint64_t v11 = *(unsigned __int8 *)(v0 + 672);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v14 = *(void *)(v0 + 368);
  uint64_t v15 = *(void *)(v0 + 352);
  uint64_t v16 = *(void *)(v0 + 328);

  sub_10000588C(&qword_10163BC50);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_101342130;
  uint64_t v18 = v17 + ((v11 + 32) & ~v11);
  v12(v18, v16, v13);
  swift_bridgeObjectRetain();
  v12(v15, v18, v13);
  os_log_type_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v19(v15, 0, 1, v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) != 1)
  {
    BOOL v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 512);
    uint64_t v22 = *(void *)(v0 + 384);
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v23 = *(void *)(v0 + 360);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 536))(v21, *(void *)(v0 + 352), v23);
    v20(v22, v21, v23);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = *(void *)(v0 + 384);
    uint64_t v28 = *(void *)(v0 + 360);
    if (v26)
    {
      unint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
      uint64_t v29 = swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558275;
      *(void *)(v29 + 4) = 1752392040;
      *(_WORD *)(v29 + 12) = 2081;
      sub_1002F6E70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v29 + 14) = sub_1008FA0F0(v30, v31, &v42);
      swift_bridgeObjectRelease();
      v40(v27, v28);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Removing beacon %{private,mask.hash}s from pending force publish.", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v0 + 568))(*(void *)(v0 + 384), *(void *)(v0 + 360));
    }

    os_log_type_t v32 = *(void (**)(uint64_t, uint64_t))(v0 + 568);
    uint64_t v33 = *(void *)(v0 + 392);
    uint64_t v35 = *(void *)(v0 + 352);
    uint64_t v34 = *(void *)(v0 + 360);
    uint64_t v36 = *(void *)(v0 + 344);
    swift_beginAccess();
    sub_101126F68(v33, v36);
    sub_10001DAB4(v36, &qword_101638CF0);
    swift_endAccess();
    v32(v33, v34);
    v19(v35, 1, 1, v34);
  }
  uint64_t v37 = *(void *)(v0 + 472);
  swift_bridgeObjectRelease_n();
  swift_errorRelease();
  sub_1002F6F2C(v37, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1002F503C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F5130()
{
  sub_1002F6F2C(*(void *)(v0 + 472), (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F5240()
{
  uint64_t v1 = (long long *)(v0 + 17);
  swift_release();
  uint64_t v2 = v0[78];
  if (qword_101636A50 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170DD90);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[40] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v8;
    uint64_t v1 = (long long *)(v0 + 17);
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Force publish FMN failed. Error - %{public}@", v6, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  v0[79] = v2;
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v1, (uint64_t *)&unk_101638D30);
  if (v0[20])
  {
    sub_10001CEB0(v1, (uint64_t)(v0 + 2));
    sub_10001CD44(v0 + 2, v0[5]);
    uint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_1016392E8 + dword_1016392E8);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[80] = v10;
    void *v10 = v0;
    v10[1] = sub_1002F380C;
    return v11();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002F54CC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for NotifyWhenFoundManager()
{
  return self;
}

void *sub_1002F5550()
{
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000016;
  v0[15] = 0x8000000101353F20;
  type metadata accessor for DeviceIdentityUtility();
  uint64_t v1 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v2 = v1 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certExpiryDate;
  uint64_t v3 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)(v1 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_refKey) = 0;
  *(void *)(v1 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certs) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v1 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_signingType) = 10;
  v0[16] = v1;
  v0[17] = 0;
  v0[19] = 0;
  v0[20] = 0;
  v0[18] = &_swiftEmptySetSingleton;
  return v0;
}

uint64_t sub_1002F5648()
{
  *(void *)(v1 + 16) = v0;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_1002F56DC, v0, 0);
}

uint64_t sub_1002F56DC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v5 = sub_1002F6E70(&qword_1016411E0, v4, (void (*)(uint64_t))type metadata accessor for NotifyWhenFoundManager);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v1;
  v6[3] = v5;
  v6[4] = v1;
  swift_retain_n();
  sub_1008F5E44(v2, (uint64_t)&unk_1016411F0, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1002F5810(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1002F6E70(&qword_1016411E0, a2, (void (*)(uint64_t))type metadata accessor for NotifyWhenFoundManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1002F586C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  v3[3] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[4] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1002C6ABC;
  return sub_1002D51D8();
}

uint64_t sub_1002F5948()
{
  return sub_1002F713C((uint64_t (*)(uint64_t, uint64_t))sub_100E63478);
}

uint64_t sub_1002F5960(uint64_t a1)
{
  return sub_10012A2BC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002F596C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10012E0C8;
  return sub_100871A84();
}

uint64_t sub_1002F5A04(uint64_t a1)
{
  v1[8] = a1;
  uint64_t v3 = type metadata accessor for UUID();
  v1[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[10] = v4;
  v1[11] = *(void *)(v4 + 64);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  uint64_t found = type metadata accessor for NotifyWhenFoundRecord();
  v1[14] = found;
  v1[15] = *(void *)(found - 8);
  v1[16] = swift_task_alloc();
  return _swift_task_switch(sub_1002F5B3C, a1, 0);
}

uint64_t sub_1002F5B3C()
{
  *(void *)(v0 + 136) = *(void *)(*(void *)(v0 + 64) + 136);
  swift_retain();
  return _swift_task_switch(sub_1002F5BB0, 0, 0);
}

uint64_t sub_1002F5BB0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[8];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  v3[2] = v1;
  v3[3] = sub_1002F6D88;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  uint64_t v5 = sub_10000588C(&qword_1016412A0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002F5CCC;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F6D90, v3, v5);
}

uint64_t sub_1002F5CCC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 160) = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1002F5E28, 0, 0);
}

uint64_t sub_1002F5E28()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 168) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v4 = *(void *)(v0 + 128);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v7 = *(void *)(v0 + 104);
    uint64_t v8 = *(int *)(*(void *)(v0 + 112) + 24);
    *(_DWORD *)(v0 + 232) = v8;
    int v9 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 236) = v9;
    *(void *)(v0 + 176) = *(void *)(v3 + 72);
    *(void *)(v0 + 184) = 0;
    uint64_t v10 = *(void *)(v0 + 64);
    uint64_t v11 = v4 + v8;
    sub_1002F6E08(v1 + ((v9 + 32) & ~(unint64_t)v9), v4, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    *(void *)(v0 + 192) = v12;
    *(void *)(v0 + 200) = (v6 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v12(v7, v11, v5);
    sub_1002F6F2C(v4, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
    return _swift_task_switch(sub_1002F6058, v10, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100010324(v13, (uint64_t)qword_10170DD90);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "No Notify when found activity required.", v16, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17(0);
  }
}

uint64_t sub_1002F6058()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 192))(v1, *(void *)(v0 + 104), v3);
  unint64_t v5 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 208) = v6;
  *(void *)(v6 + 16) = v4;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v6 + v5, v1, v3);
  swift_retain();
  return _swift_task_switch(sub_1002F6134, 0, 0);
}

uint64_t sub_1002F6134()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[17];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[27] = v3;
  v3[2] = v2;
  v3[3] = sub_1002F5A00;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[28] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10163BBE0);
  *uint64_t v4 = v0;
  v4[1] = sub_1002F6250;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7344, v3, v5);
}

uint64_t sub_1002F6250()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  uint64_t v3 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002F63E8, 0, 0);
}

uint64_t sub_1002F63E8()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 40);
  if (v2)
  {
    sub_10001DAB4(v1, (uint64_t *)&unk_10163BBE0);
    swift_bridgeObjectRelease();
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170DD90);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = "Notify when found activity updating criteria required.";
LABEL_11:
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, v6, v10, 2u);
    swift_slowDealloc();
LABEL_12:

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(BOOL))(v0 + 8);
    return v11(v2 != 0);
  }
  uint64_t v7 = *(void *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 184) + 1;
  sub_10001DAB4(v1, (uint64_t *)&unk_10163BBE0);
  if (v8 == v7)
  {
    swift_bridgeObjectRelease();
    if (qword_101636A50 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100010324(v9, (uint64_t)qword_10170DD90);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v4, v5)) {
      goto LABEL_12;
    }
    uint64_t v6 = "No Notify when found activity required.";
    goto LABEL_11;
  }
  *(void *)(v0 + 184) = v8;
  uint64_t v13 = *(void *)(v0 + 128);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v18 = v13 + *(int *)(v0 + 232);
  sub_1002F6E08(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 236) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 236))+ *(void *)(v0 + 176) * v8, v13, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
  *(void *)(v0 + 192) = v19;
  *(void *)(v0 + 200) = (v16 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v19(v14, v18, v15);
  sub_1002F6F2C(v13, (uint64_t (*)(void))type metadata accessor for NotifyWhenFoundRecord);
  return _swift_task_switch(sub_1002F6058, v17, 0);
}

uint64_t sub_1002F66D8()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1002F6720(uint64_t a1)
{
  return sub_100E03C10(a1, v1 + 16, *(void (**)(uint64_t, BOOL))(v1 + 56));
}

uint64_t sub_1002F672C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002F673C()
{
  return swift_release();
}

uint64_t sub_1002F6748()
{
  return sub_1002F713C((uint64_t (*)(uint64_t, uint64_t))sub_100E61A44);
}

unint64_t sub_1002F6760()
{
  unint64_t result = qword_101641200;
  if (!qword_101641200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641200);
  }
  return result;
}

unint64_t sub_1002F67B4()
{
  unint64_t result = qword_101641208;
  if (!qword_101641208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_101641208);
  }
  return result;
}

uint64_t sub_1002F680C()
{
  return sub_1002F713C((uint64_t (*)(uint64_t, uint64_t))sub_100E6344C);
}

uint64_t sub_1002F6828(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_100033F68;
  return _swift_task_switch(sub_1002D68B0, v4, 0);
}

uint64_t sub_1002F68D8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_100033F68;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016393D8 + dword_1016393D8);
  return v6(a1, v4);
}

uint64_t sub_1002F6998()
{
  return sub_1002F713C((uint64_t (*)(uint64_t, uint64_t))sub_100E5F1B0);
}

unint64_t sub_1002F69B0()
{
  unint64_t result = qword_101641230;
  if (!qword_101641230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641230);
  }
  return result;
}

uint64_t sub_1002F6A08(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 - 1 >= 2)
  {
    if (a3) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002F6A70()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F6AA8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *os_log_type_t v5 = v2;
  v5[1] = sub_10001D2E4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1016393D8 + dword_1016393D8);
  return v6(a1, v4);
}

uint64_t sub_1002F6B60()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F6B98(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10001D2E4;
  return sub_1002D5844(a1, a2, v7, v6);
}

uint64_t sub_1002F6C4C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F6C84(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100033F68;
  return sub_1002D5DA8(a1, a2, v2);
}

unint64_t sub_1002F6D2C()
{
  unint64_t result = qword_101641298;
  if (!qword_101641298)
  {
    sub_10000592C(&qword_101641290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641298);
  }
  return result;
}

void *sub_1002F6D88@<X0>(void *a1@<X8>)
{
  return sub_100E635A4(a1);
}

uint64_t sub_1002F6D90(uint64_t a1)
{
  return sub_10012A34C(a1, v1[2], v1[3], v1[4]);
}

void sub_1002F6DA4()
{
  sub_100EE6B44(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1002F6DD0()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002F6E08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002F6E70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002F6EC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002F6F2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1002F6F90()
{
  sub_100EE22B4(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1002F6FBC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1002F708C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  char v5 = *(unsigned char *)(v1 + v4 + *(void *)(v3 + 64));

  return sub_100E6194C(v1 + v4, v5, a1);
}

uint64_t sub_1002F7124(uint64_t a1)
{
  return sub_10012A31C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002F713C(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

unsigned char *storeEnumTagSinglePayload for NotifyWhenFoundManager.NotifyWhenFoundError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002F7290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotifyWhenFoundManager.NotifyWhenFoundError()
{
  return &type metadata for NotifyWhenFoundManager.NotifyWhenFoundError;
}

unint64_t sub_1002F72CC()
{
  unint64_t result = qword_1016412B0;
  if (!qword_1016412B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016412B0);
  }
  return result;
}

void sub_1002F7320()
{
}

uint64_t sub_1002F7378(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 128) = a3;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  return _swift_task_switch(sub_1002F739C, 0, 0);
}

uint64_t sub_1002F739C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  id v2 = [self sharedInstance];
  [v2 isInternalBuild];

  sub_10000588C(&qword_101649E60);
  uint64_t v3 = *(void *)(type metadata accessor for AccessoryMetadata(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  sub_10032FE84(v1, v5 + v4, type metadata accessor for AccessoryMetadata);
  if (qword_101636A60 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10170DDC0;
  uint64_t v10 = (uint64_t (*)(uint64_t, char, char, uint64_t))((char *)&dword_101662DE8 + dword_101662DE8);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v7;
  void *v7 = v0;
  v7[1] = sub_1002F7574;
  char v8 = *(unsigned char *)(v0 + 128);
  return v10(v5, 0, v8, v6);
}

uint64_t sub_1002F7574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4 = (void *)*v3;
  v4[2] = v3;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[12] = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F767C, 0, 0);
}

uint64_t sub_1002F767C()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 80);
    *(void *)(v0 + 48) = v1;
    *(_OWORD *)(v0 + 56) = *(_OWORD *)(v0 + 32);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 104) = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v0 + 48;
    unint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v4;
    uint64_t v5 = sub_10000588C((uint64_t *)&unk_10166BFA0);
    *unint64_t v4 = v0;
    v4[1] = sub_1002F78F0;
    uint64_t v6 = *(void *)(v0 + 72);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000023, 0x80000001013F81E0, sub_10032FE7C, v3, v5);
  }
  else
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170DDA8);
    char v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "retrieveProductInfo: invalid parameters", v10, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_1002F78F0()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1002F7A80;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1002F7A0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002F7A0C()
{
  uint64_t v1 = v0[7];
  unint64_t v2 = v0[8];
  swift_bridgeObjectRelease();
  sub_10001CFB8(v1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002F7A80()
{
  swift_task_dealloc();
  uint64_t v1 = v0[7];
  unint64_t v2 = v0[8];
  swift_bridgeObjectRelease();
  sub_10001CFB8(v1, v2);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1002F7AFC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170DDA8);
  sub_100010324(v0, (uint64_t)qword_10170DDA8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1002F7B74()
{
  type metadata accessor for DeviceIdentityUtility();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certExpiryDate;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_refKey) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certs) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_signingType) = 8;
  qword_10170DDC0 = v0;
  return result;
}

unint64_t sub_1002F7C30()
{
  uint64_t v1 = type metadata accessor for AccessoryMetadata(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MACAddress();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryMetadataManager.Error(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10032FE84(v0, (uint64_t)v10, type metadata accessor for AccessoryMetadataManager.Error);
  unint64_t v11 = 0x6E776F6E6B6E752ELL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(43);
      swift_bridgeObjectRelease();
      unint64_t v19 = 0xD000000000000028;
      unint64_t v20 = 0x80000001013F8670;
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      v14._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v14);
      swift_bridgeObjectRelease();
      v15._countAndFlagsBits = 41;
      v15._object = (void *)0xE100000000000000;
      String.append(_:)(v15);
      unint64_t v11 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
    case 2u:
      sub_100331978((uint64_t)v10, (uint64_t)v3, type metadata accessor for AccessoryMetadata);
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(30);
      swift_bridgeObjectRelease();
      unint64_t v19 = 0xD00000000000001CLL;
      unint64_t v20 = 0x80000001013F8630;
      v16._countAndFlagsBits = sub_1001A9070();
      String.append(_:)(v16);
      swift_bridgeObjectRelease();
      unint64_t v11 = v19;
      sub_1003300FC((uint64_t)v3, type metadata accessor for AccessoryMetadata);
      break;
    case 3u:
      return v11;
    case 4u:
      unint64_t v11 = 0x676E697373696D2ELL;
      break;
    case 5u:
    case 8u:
      unint64_t v11 = 0xD000000000000010;
      break;
    case 6u:
      unint64_t v11 = 0x74756F656D69742ELL;
      break;
    case 7u:
      unint64_t v11 = 0xD000000000000012;
      break;
    case 9u:
      unint64_t v11 = 0x70707553746F6E2ELL;
      break;
    case 0xAu:
      unint64_t v11 = 0x6176616E5574622ELL;
      break;
    case 0xBu:
      unint64_t v11 = 0x726F43617461642ELL;
      break;
    default:
      uint64_t v12 = *v10;
      unint64_t v19 = 0;
      unint64_t v20 = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v19 = 0xD000000000000013;
      unint64_t v20 = 0x80000001013F4660;
      v18[1] = v12;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      v13._countAndFlagsBits = String.init<A>(describing:)();
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      unint64_t v11 = v19;
      break;
  }
  return v11;
}

uint64_t sub_1002F80FC()
{
  swift_release();
  sub_1003300FC(v0+ OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info, type metadata accessor for AccessoryMetadataManager.MetadataInfo);
  swift_bridgeObjectRelease();
  sub_100037A24(*(void *)(v0+ OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer), *(void *)(v0+ OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer+ 8));
  sub_1000A1534(*(void *)(v0
                          + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise));

  return swift_deallocClassInstance();
}

void *sub_1002F81B4(uint64_t a1, uint64_t a2)
{
  v12[0] = a2;
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v6);
  static DispatchQoS.unspecified.getter();
  v12[1] = _swiftEmptyArrayStorage;
  sub_1003300B4((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_100062734((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v2[4] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  v2[5] = &_swiftEmptySetSingleton;
  v2[6] = _swiftEmptyDictionarySingleton;
  uint64_t v10 = v12[0];
  v2[2] = a1;
  v2[3] = v10;
  return v2;
}

uint64_t sub_1002F8440()
{
  sub_10000588C((uint64_t *)&unk_10166C0A0);
  OS_dispatch_queue.sync<A>(execute:)();
  return v1;
}

void sub_1002F84D8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v43 = a3;
  uint64_t v46 = a4;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for MACAddress();
  uint64_t v9 = *(void *)(v47 - 8);
  uint64_t v10 = __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v14 = (char *)&v40 - v13;
  uint64_t v44 = sub_10000588C(&qword_101641870);
  swift_allocObject();
  uint64_t v45 = PassthroughSubject.init()();
  uint64_t v15 = swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 48) + 16)
    && (swift_bridgeObjectRetain(), sub_100724804(a2), v17 = v16, uint64_t v15 = swift_bridgeObjectRelease(), (v17 & 1) != 0))
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170DDA8);
    uint64_t v19 = v9;
    uint64_t v20 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v47);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v49 = (char *)v43;
      *(_DWORD *)uint64_t v23 = 141558275;
      uint64_t v50 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v23 + 12) = 2081;
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v50 = sub_1008FA0F0(v24, v25, (uint64_t *)&v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v20);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Existing metadata session for %{private,mask.hash}s in progress!", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v20);
    }

    uint64_t v49 = (char *)v45;
    sub_100062734(&qword_101641878, &qword_101641870);
    uint64_t v39 = Publisher.eraseToAnyPublisher()();
    swift_release();
  }
  else
  {
    __chkstk_darwin(v15);
    *((void *)&v40 - 2) = a2;
    *((void *)&v40 - 1) = v26;
    sub_10000588C(&qword_10165F6B0);
    uint64_t v27 = v48;
    Lock.callAsFunction<A>(_:)();
    uint64_t v48 = v27;
    uint64_t v28 = v49;
    if (v49)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v47);
      id v29 = [*(id *)&v28[OBJC_IVAR____TtC12searchpartyd10Peripheral_underlyingObject] identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      type metadata accessor for AccessoryMetadataManager.MetadataCoordinator(0);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30
                + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writeQueue) = _swiftEmptyArrayStorage;
      long long v40 = xmmword_101347BB0;
      *(_OWORD *)(v30
                + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer) = xmmword_101347BB0;
      unint64_t v31 = (void *)(v30
                     + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
      *unint64_t v31 = 0;
      v31[1] = 0;
      uint64_t v32 = v45;
      *(void *)(v30 + 16) = v45;
      uint64_t v33 = v30
          + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info;
      (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v30+ OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info, v8, v42);
      uint64_t v34 = (int *)type metadata accessor for AccessoryMetadataManager.MetadataInfo(0);
      *(_OWORD *)(v33 + v34[5]) = v40;
      uint64_t v35 = (void *)(v33 + v34[6]);
      *uint64_t v35 = 0;
      v35[1] = 0;
      uint64_t v36 = v33 + v34[7];
      *(_DWORD *)uint64_t v36 = 0;
      *(unsigned char *)(v36 + 4) = 1;
      *(_DWORD *)(v33 + v34[8]) = 0;
      swift_beginAccess();
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = *(void *)(a1 + 48);
      *(void *)(a1 + 48) = 0x8000000000000000;
      sub_10016D6F4(v30, (uint64_t)v14, isUniquelyReferenced_nonNull_native);
      *(void *)(a1 + 48) = v50;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v47);
      swift_endAccess();
      uint64_t v38 = type metadata accessor for Transaction();
      __chkstk_darwin(v38);
      *((void *)&v40 - 4) = v28;
      *((void *)&v40 - 3) = a1;
      *((void *)&v40 - 2) = v43;
      static Transaction.named<A>(_:with:)();
      uint64_t v49 = (char *)v32;
      sub_100062734(&qword_101641878, &qword_101641870);
      uint64_t v39 = Publisher.eraseToAnyPublisher()();
      swift_release();
    }
    else
    {
      uint64_t v49 = (char *)v45;
      sub_100062734(&qword_101641878, &qword_101641870);
      uint64_t v39 = Publisher.eraseToAnyPublisher()();
      swift_release();
    }
  }
  *uint64_t v46 = v39;
}

uint64_t sub_1002F8C2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v97 = a1;
  uint64_t v98 = a3;
  uint64_t v4 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v4 - 8);
  uint64_t v90 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (void *)sub_10000588C(&qword_1016417E0);
  uint64_t v67 = *(v68 - 1);
  __chkstk_darwin(v68);
  unint64_t v66 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10000588C(&qword_1016417E8);
  uint64_t v70 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v69 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10000588C(&qword_1016417F0);
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v71 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10000588C(&qword_1016417F8);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v75 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_101641800);
  uint64_t v81 = *(void *)(v10 - 8);
  uint64_t v82 = v10;
  __chkstk_darwin(v10);
  unint64_t v76 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10000588C(&qword_101641808);
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v78 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10000588C(&qword_101641810);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v80 = (char *)v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101641818);
  uint64_t v88 = *(void *)(v14 - 8);
  uint64_t v89 = v14;
  __chkstk_darwin(v14);
  uint64_t v87 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C(&qword_101641820);
  uint64_t v92 = *(void *)(v16 - 8);
  uint64_t v93 = v16;
  __chkstk_darwin(v16);
  uint64_t v91 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100010324(v18, (uint64_t)qword_10170DDA8);
  id v19 = a2;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v22 = 138412290;
    id v100 = v19;
    id v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v23 = v19;

    _os_log_impl((void *)&_mh_execute_header, v20, v21, "readMetadata peripheral: %@", v22, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v64 = v19;
  uint64_t v65 = Transaction.subscriptionCleaner.getter();
  uint64_t v25 = v98;
  id v100 = (id)sub_1013285F8((char *)v19, 0);
  uint64_t v26 = *(void **)(v25 + 32);
  id v99 = v26;
  uint64_t v63 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v27 = *(void *)(v63 - 8);
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  uint64_t v28 = v27 + 56;
  uint64_t v29 = (uint64_t)v90;
  v62(v90, 1, 1, v63);
  v61[3] = v28;
  id v30 = v26;
  uint64_t v31 = sub_10000588C((uint64_t *)&unk_101649C90);
  uint64_t v94 = sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  uint64_t v32 = sub_100062734((unint64_t *)&unk_101649CA0, (uint64_t *)&unk_101649C90);
  uint64_t v95 = sub_10033149C((unint64_t *)&qword_10166C020, (unint64_t *)&qword_1016376E0);
  uint64_t v33 = v66;
  v61[1] = v31;
  v61[2] = v32;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v29, &qword_10163C6C8);

  swift_release();
  static Subscribers.Demand.unlimited.getter();
  uint64_t v96 = type metadata accessor for Peripheral();
  v61[0] = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100062734(&qword_101641830, &qword_1016417E0);
  uint64_t v34 = v69;
  uint64_t v35 = v68;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  (*(void (**)(char *, void *))(v67 + 8))(v33, v35);
  id v100 = v30;
  uint64_t v36 = v63;
  uint64_t v37 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62;
  v62((char *)v29, 1, 1, v63);
  uint64_t v68 = &protocol conformance descriptor for Publishers.FlatMap<A, B>;
  sub_100062734(&qword_101641838, &qword_1016417E8);
  id v38 = v30;
  uint64_t v39 = v71;
  uint64_t v40 = v72;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v29, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v70 + 8))(v34, v40);
  static Subscribers.Demand.unlimited.getter();
  sub_100062734(&qword_101641840, &qword_1016417F0);
  uint64_t v41 = v75;
  uint64_t v42 = v74;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v39, v42);
  id v100 = v38;
  v37(v29, 1, 1, v36);
  sub_100062734(&qword_101641848, &qword_1016417F8);
  id v43 = v38;
  uint64_t v44 = v76;
  uint64_t v45 = v79;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v29, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v41, v45);
  sub_100062734(&qword_101641850, &qword_101641800);
  uint64_t v46 = v78;
  uint64_t v47 = v82;
  Publisher.timeout(_:queue:customError:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v47);
  sub_100062734(&qword_101641858, &qword_101641808);
  uint64_t v48 = v80;
  uint64_t v49 = v85;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v49);
  sub_10000588C(&qword_101655B50);
  uint64_t v50 = v86;
  uint64_t v51 = v87;
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v50);
  sub_10000588C(&qword_10163C890);
  sub_100062734(&qword_101641860, &qword_101641818);
  sub_100062734(&qword_10163C8A0, &qword_10163C890);
  uint64_t v52 = v91;
  uint64_t v53 = v89;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v51, v53);
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  uint64_t v55 = (void *)swift_allocObject();
  v55[2] = v97;
  v55[3] = v54;
  uint64_t v56 = v64;
  uint64_t v57 = v65;
  v55[4] = v64;
  v55[5] = v57;
  sub_100062734(&qword_101641868, &qword_101641820);
  id v58 = v56;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v59 = v93;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v52, v59);
  AnyCancellable.store(in:)();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1002F9A44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002FC080(1, a1);
}

uint64_t sub_1002F9A4C@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10000588C(&qword_10163C8B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101649E80);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (char *)*a1;
  v29[3] = &type metadata for BAServiceIdentifier;
  v29[4] = &off_1015CE038;
  LOBYTE(v29[0]) = 1;
  uint64_t v13 = (uint64_t *)&v12[OBJC_IVAR____TtC12searchpartyd10Peripheral_services];
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v28 = v29;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100E4E988((uint64_t (*)(uint64_t *))sub_10015AF64, (uint64_t)v27, v14);
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v29);
  if (v15)
  {
    sub_10000588C(&qword_10163A8B0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_101342130;
    *(void *)(v16 + 56) = &type metadata for BACharacteristicIdentifier.FindMy;
    *(void *)(v16 + 64) = &off_1015CE018;
    *(unsigned char *)(v16 + 32) = 2;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = v16;
    sub_10000588C((uint64_t *)&unk_101649E90);
    swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v29[0] = Future.init(_:)();
    sub_100062734((unint64_t *)&qword_101671CE0, (uint64_t *)&unk_101649E90);
    uint64_t v18 = Publisher.eraseToAnyPublisher()();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100010324(v20, (uint64_t)qword_10170DDA8);
    os_log_type_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v9;
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No FindMy service", v23, 2u);
      uint64_t v9 = v26;
      swift_slowDealloc();
    }

    v29[0] = v12;
    type metadata accessor for Peripheral();
    id v24 = v12;
    Just.init(_:)();
    sub_100061234();
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100062734(&qword_10163C8B8, (uint64_t *)&unk_101649E80);
    uint64_t v18 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a2 = v18;
  return result;
}

uint64_t sub_1002F9EB0(uint64_t a1)
{
  return sub_1002FEE30(a1, &qword_101655B50);
}

uint64_t sub_1002F9EBC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  Transaction.capture()();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10001D074(a1, (uint64_t)v36, &qword_101655B50);
    if (v37)
    {
      sub_10006105C((uint64_t)v36, (uint64_t)v33);
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100010324(v7, (uint64_t)qword_10170DDA8);
      sub_1000610B8((uint64_t)v33, (uint64_t)v32);
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v8, v9))
      {
        uint64_t v10 = (uint8_t *)swift_slowAlloc();
        v31[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 136446210;
        uint64_t v11 = sub_101321420();
        v31[4] = sub_1008FA0F0(v11, v12, v31);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100061288((uint64_t)v32);
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "readMetadata failed due to %{public}s", v10, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100061288((uint64_t)v32);
      }

      sub_1002FD078(a4);
      swift_release();
      return sub_100061288((uint64_t)v33);
    }
    else
    {
      uint64_t v13 = (void *)v36[0];
      uint64_t v34 = &type metadata for BAServiceIdentifier;
      uint64_t v35 = &off_1015CE038;
      v33[0] = 1;
      uint64_t v14 = (uint64_t *)(v36[0] + OBJC_IVAR____TtC12searchpartyd10Peripheral_services);
      uint64_t v15 = swift_beginAccess();
      uint64_t v16 = *v14;
      __chkstk_darwin(v15);
      id v30 = v33;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_100E4E988((uint64_t (*)(uint64_t *))sub_10015AF64, (uint64_t)v29, v16);
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
      if (v17)
      {
        uint64_t v34 = &type metadata for BACharacteristicIdentifier.FindMy;
        uint64_t v35 = &off_1015CE018;
        v33[0] = 2;
        uint64_t v18 = swift_beginAccess();
        uint64_t v19 = *(void *)(v17 + 40);
        __chkstk_darwin(v18);
        id v30 = v33;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_100E4E9E4((uint64_t (*)(uint64_t *))sub_100332E60, (uint64_t)v29, v19);
        swift_bridgeObjectRelease();
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v33);
        if (v20)
        {
          sub_1002FE0CC((uint64_t)v13, v20);
          sub_1002FD58C((uint64_t)v13, v20);

          swift_release();
        }
        else
        {
          if (qword_101636A58 != -1) {
            swift_once();
          }
          uint64_t v25 = type metadata accessor for Logger();
          sub_100010324(v25, (uint64_t)qword_10170DDA8);
          uint64_t v26 = Logger.logObject.getter();
          os_log_type_t v27 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v26, v27))
          {
            uint64_t v28 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v28 = 0;
            _os_log_impl((void *)&_mh_execute_header, v26, v27, "Missing Paired Owner Characteristic!", v28, 2u);
            swift_slowDealloc();
          }
        }
        swift_release();
      }
      else
      {
        if (qword_101636A58 != -1) {
          swift_once();
        }
        uint64_t v21 = type metadata accessor for Logger();
        sub_100010324(v21, (uint64_t)qword_10170DDA8);
        os_log_type_t v22 = Logger.logObject.getter();
        os_log_type_t v23 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v22, v23))
        {
          id v24 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v24 = 0;
          _os_log_impl((void *)&_mh_execute_header, v22, v23, "No FindMy service", v24, 2u);
          swift_slowDealloc();
        }
      }
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1002FA3F0(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = type metadata accessor for MACAddress();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  *(void *)(v9 + ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v3;
  sub_10000588C(&qword_1016417D8);
  swift_allocObject();
  v12[1] = Future.init(_:)();
  sub_100062734((unint64_t *)&unk_10166C130, &qword_1016417D8);
  uint64_t v10 = Publisher.eraseToAnyPublisher()();
  swift_release();
  return v10;
}

uint64_t sub_1002FA5F8(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v133 = a4;
  v134 = a1;
  uint64_t v5 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v5 - 8);
  uint64_t v130 = (char *)v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10000588C(&qword_1016417E0);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v106 = (char *)v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10000588C(&qword_1016417E8);
  uint64_t v110 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v109 = (char *)v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10000588C(&qword_1016417F0);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  unint64_t v111 = (char *)v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10000588C(&qword_1016417F8);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v115 = (char *)v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10000588C(&qword_101641800);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v116 = (char *)v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10000588C(&qword_101641808);
  uint64_t v123 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  v119 = (char *)v95 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10000588C(&qword_101641810);
  uint64_t v124 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  unint64_t v120 = (char *)v95 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101641818);
  uint64_t v128 = *(void *)(v14 - 8);
  uint64_t v129 = v14;
  __chkstk_darwin(v14);
  uint64_t v127 = (char *)v95 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10000588C(&qword_101641820);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v131 = (char *)v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for MACAddress();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = __chkstk_darwin(v19);
  os_log_type_t v23 = (char *)v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v104 = (char *)v95 - v24;
  uint64_t v25 = sub_10000588C(&qword_101641828);
  __chkstk_darwin(v25);
  os_log_type_t v27 = (char *)v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v134(v27);
    return sub_10001DAB4((uint64_t)v27, &qword_101641828);
  }
  uint64_t v101 = v25;
  uint64_t v102 = v17;
  uint64_t v103 = v16;
  uint64_t v132 = a2;
  uint64_t v29 = (id *)Strong;
  __chkstk_darwin(Strong);
  v95[-2] = v133;
  v95[-1] = v30;
  swift_retain();
  sub_10000588C(&qword_10165F6B0);
  Lock.callAsFunction<A>(_:)();
  swift_release();
  uint64_t v31 = (id *)aBlock[0];
  uint64_t v105 = v29;
  if (!aBlock[0])
  {
    uint64_t v48 = v133;
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_100010324(v49, (uint64_t)qword_10170DDA8);
    uint64_t v50 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v104, v48, v19);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = swift_slowAlloc();
      aBlock[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 141558275;
      uint64_t v136 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v53 + 12) = 2081;
      uint64_t v133 = v53 + 14;
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v136 = sub_1008FA0F0(v54, v55, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v50, v19);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Unable to retrieve peripheral for %{private,mask.hash}s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v50, v19);
    }

    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v134(v27);
    swift_release();
    return sub_10001DAB4((uint64_t)v27, &qword_101641828);
  }
  uint64_t v32 = v29[4];
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v133, v19);
  unint64_t v33 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  unint64_t v34 = (v21 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v35 + v33, v23, v19);
  uint64_t v36 = (void (**)(char *))(v35 + v34);
  char v37 = v132;
  *uint64_t v36 = v134;
  v36[1] = (void (*)(char *))v37;
  *(void *)(v35 + ((v34 + 23) & 0xFFFFFFFFFFFFFFF8)) = v31;
  id v38 = (void *)swift_allocObject();
  v38[2] = sub_100331F20;
  v38[3] = v35;
  uint64_t v101 = v35;
  aBlock[4] = sub_100132424;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1000A70B0;
  aBlock[3] = &unk_1015BAC80;
  uint64_t v39 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  uint64_t v133 = (uint64_t)v31;
  uint64_t v40 = v31;
  swift_retain();
  swift_release();
  dispatch_sync(v32, v39);
  _Block_release(v39);
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v32)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v31 = v29;
  if (qword_101636A58 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v41 = type metadata accessor for Logger();
  sub_100010324(v41, (uint64_t)qword_10170DDA8);
  uint64_t v42 = v40;
  id v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 138412290;
    aBlock[0] = v42;
    uint64_t v47 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v46 = v133;

    _os_log_impl((void *)&_mh_execute_header, v43, v44, "readMetadataAirTag peripheral: %@", v45, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    id v43 = v42;
  }

  swift_retain();
  uint64_t v56 = (void *)sub_1013285F8((char *)v42, 0);
  swift_release();
  aBlock[0] = v56;
  uint64_t v136 = (uint64_t)v31[4];
  id v57 = (id)v136;
  uint64_t v58 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
  uint64_t v99 = v59 + 56;
  uint64_t v60 = (uint64_t)v130;
  uint64_t v96 = v58;
  v98(v130, 1, 1, v58);
  id v61 = v57;
  uint64_t v62 = sub_10000588C((uint64_t *)&unk_101649C90);
  uint64_t v133 = sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  uint64_t v63 = sub_100062734((unint64_t *)&unk_101649CA0, (uint64_t *)&unk_101649C90);
  uint64_t v104 = (char *)sub_10033149C((unint64_t *)&qword_10166C020, (unint64_t *)&qword_1016376E0);
  id v64 = v106;
  v95[1] = v62;
  v95[2] = v63;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v60, &qword_10163C6C8);

  swift_release();
  static Subscribers.Demand.unlimited.getter();
  uint64_t v65 = type metadata accessor for Peripheral();
  v95[0] = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_100062734(&qword_101641830, &qword_1016417E0);
  id v100 = v42;
  unint64_t v66 = v109;
  uint64_t v67 = v108;
  uint64_t v97 = v65;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v64, v67);
  aBlock[0] = v31[4];
  id v68 = aBlock[0];
  uint64_t v69 = v58;
  uint64_t v70 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v98;
  v98((char *)v60, 1, 1, v69);
  sub_100062734(&qword_101641838, &qword_1016417E8);
  id v71 = v68;
  uint64_t v72 = v111;
  uint64_t v73 = v112;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v60, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v110 + 8))(v66, v73);
  static Subscribers.Demand.unlimited.getter();
  sub_100062734(&qword_101641840, &qword_1016417F0);
  uint64_t v74 = v115;
  uint64_t v75 = v114;
  Publisher.flatMap<A, B>(maxPublishers:_:)();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v72, v75);
  unint64_t v76 = v105;
  aBlock[0] = v105[4];
  id v77 = aBlock[0];
  v70(v60, 1, 1, v96);
  sub_100062734(&qword_101641848, &qword_1016417F8);
  id v78 = v77;
  uint64_t v79 = v116;
  uint64_t v80 = v118;
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4(v60, &qword_10163C6C8);

  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v80);
  sub_100062734(&qword_101641850, &qword_101641800);
  uint64_t v81 = v119;
  uint64_t v82 = v122;
  Publisher.timeout(_:queue:customError:)();
  (*(void (**)(char *, uint64_t))(v121 + 8))(v79, v82);
  sub_100062734(&qword_101641858, &qword_101641808);
  uint64_t v83 = v120;
  uint64_t v84 = v125;
  Publisher.compactMap<A>(_:)();
  (*(void (**)(char *, uint64_t))(v123 + 8))(v81, v84);
  sub_10000588C(&qword_101655B50);
  uint64_t v85 = v126;
  uint64_t v86 = v127;
  Publishers.CompactMap.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v124 + 8))(v83, v85);
  sub_10000588C(&qword_10163C890);
  sub_100062734(&qword_101641860, &qword_101641818);
  sub_100062734(&qword_10163C8A0, &qword_10163C890);
  uint64_t v87 = v131;
  uint64_t v88 = v129;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v128 + 8))(v86, v88);
  uint64_t v89 = (void *)swift_allocObject();
  uint64_t v90 = v100;
  v89[2] = v76;
  v89[3] = v90;
  uint64_t v91 = v132;
  v89[4] = v134;
  v89[5] = v91;
  sub_100062734(&qword_101641868, &qword_101641820);
  swift_retain();
  swift_retain();
  uint64_t v92 = v90;
  uint64_t v93 = v103;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v87, v93);
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1002FBA80(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a3;
  *(void *)&long long v43 = a5;
  uint64_t v41 = a4;
  uint64_t v39 = sub_10000588C(&qword_101641828);
  __chkstk_darwin(v39);
  uint64_t v40 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MACAddress();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v39 - v16;
  sub_10000588C(&qword_101641870);
  swift_allocObject();
  uint64_t v45 = PassthroughSubject.init()();
  uint64_t v18 = (uint64_t *)(a1 + 48);
  swift_beginAccess();
  if (*(void *)(*(void *)(a1 + 48) + 16)
    && (swift_bridgeObjectRetain(), sub_100724804(a2), char v20 = v19, swift_bridgeObjectRelease(), (v20 & 1) != 0))
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100010324(v21, (uint64_t)qword_10170DDA8);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a2, v11);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 141558275;
      uint64_t v46 = 1752392040;
      v47[0] = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v24 + 12) = 2081;
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v46 = sub_1008FA0F0(v26, v27, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Existing metadata session for %{private,mask.hash}s in progress!", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    }

    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    uint64_t v38 = (uint64_t)v40;
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v42(v38);
    swift_release();
    return sub_10001DAB4(v38, &qword_101641828);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v17, a2, v11);
    id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v43
                                                                + OBJC_IVAR____TtC12searchpartyd10Peripheral_underlyingObject), "identifier", v39));
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    type metadata accessor for AccessoryMetadataManager.MetadataCoordinator(0);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29
              + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writeQueue) = _swiftEmptyArrayStorage;
    long long v43 = xmmword_101347BB0;
    *(_OWORD *)(v29
              + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer) = xmmword_101347BB0;
    uint64_t v30 = (void *)(v29
                   + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
    void *v30 = 0;
    v30[1] = 0;
    uint64_t v31 = v44;
    *(void *)(v29 + 16) = v45;
    uint64_t v32 = v29
        + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v29+ OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info, v10, v31);
    unint64_t v33 = (int *)type metadata accessor for AccessoryMetadataManager.MetadataInfo(0);
    *(_OWORD *)(v32 + v33[5]) = v43;
    unint64_t v34 = (void *)(v32 + v33[6]);
    *unint64_t v34 = 0;
    v34[1] = 0;
    uint64_t v35 = v32 + v33[7];
    *(_DWORD *)uint64_t v35 = 0;
    *(unsigned char *)(v35 + 4) = 1;
    *(_DWORD *)(v32 + v33[8]) = 0;
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = *v18;
    *uint64_t v18 = 0x8000000000000000;
    sub_10016D6F4(v29, (uint64_t)v17, isUniquelyReferenced_nonNull_native);
    *uint64_t v18 = v46;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    swift_endAccess();
    return swift_release();
  }
}

uint64_t sub_1002FC078@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002FC080(2, a1);
}

uint64_t sub_1002FC080@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  sub_10000588C(&qword_10163AAE0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  *(void *)(inited + 56) = &type metadata for BAServiceIdentifier;
  *(void *)(inited + 64) = &off_1015CE038;
  *(unsigned char *)(inited + 32) = a1;
  uint64_t v5 = sub_100A3D36C(inited);
  swift_setDeallocating();
  sub_10000588C(&qword_10163AAE8);
  uint64_t result = swift_arrayDestroy();
  *a2 = v5;
  return result;
}

uint64_t sub_1002FC130@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10000588C(&qword_10163C8B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101649E80);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (char *)*a1;
  v29[3] = &type metadata for BAServiceIdentifier;
  v29[4] = &off_1015CE038;
  LOBYTE(v29[0]) = 2;
  uint64_t v13 = (uint64_t *)&v12[OBJC_IVAR____TtC12searchpartyd10Peripheral_services];
  swift_beginAccess();
  uint64_t v14 = *v13;
  id v28 = v29;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_100E4E988((uint64_t (*)(uint64_t *))sub_10015AF64, (uint64_t)v27, v14);
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v29);
  if (v15)
  {
    sub_10000588C(&qword_10163A8B0);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_101342130;
    *(void *)(v16 + 56) = &type metadata for BACharacteristicIdentifier.UnauthorizedAirTag;
    *(void *)(v16 + 64) = &off_1015CE008;
    *(unsigned char *)(v16 + 32) = 0;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = v16;
    sub_10000588C((uint64_t *)&unk_101649E90);
    swift_allocObject();
    swift_retain();
    swift_bridgeObjectRetain();
    v29[0] = Future.init(_:)();
    sub_100062734((unint64_t *)&qword_101671CE0, (uint64_t *)&unk_101649E90);
    uint64_t v18 = Publisher.eraseToAnyPublisher()();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
  }
  else
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100010324(v20, (uint64_t)qword_10170DDA8);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      os_log_type_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = v9;
      *(_WORD *)os_log_type_t v23 = 0;
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "No UT service", v23, 2u);
      uint64_t v9 = v26;
      swift_slowDealloc();
    }

    v29[0] = v12;
    type metadata accessor for Peripheral();
    uint64_t v24 = v12;
    Just.init(_:)();
    sub_100061234();
    Just.setFailureType<A>(to:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_100062734(&qword_10163C8B8, (uint64_t *)&unk_101649E80);
    uint64_t v18 = Publisher.eraseToAnyPublisher()();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  *a2 = v18;
  return result;
}

unint64_t sub_1002FC590(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v80 = a2;
  uint64_t v9 = sub_10000588C(&qword_101641828);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v75 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for AccessoryMetadata(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D074(a1, (uint64_t)v86, &qword_101655B50);
  if (v87)
  {
    sub_10006105C((uint64_t)v86, (uint64_t)v83);
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170DDA8);
    sub_1000610B8((uint64_t)v83, (uint64_t)v82);
    char v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v79 = a3;
      v81[0] = v22;
      uint64_t v78 = a5;
      *(_DWORD *)uint64_t v21 = 136446210;
      uint64_t v23 = sub_101321420();
      v81[4] = sub_1008FA0F0(v23, v24, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100061288((uint64_t)v82);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "readMetadata failed due to %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      a3 = v79;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100061288((uint64_t)v82);
    }

    sub_100061234();
    uint64_t v41 = swift_allocError();
    sub_1000610B8((uint64_t)v83, v42);
    *uint64_t v11 = v41;
    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    a4(v11);
    sub_10001DAB4((uint64_t)v11, &qword_101641828);
    sub_100061288((uint64_t)v83);
    return sub_1002FD078(a3);
  }
  uint64_t v77 = v9;
  uint64_t v74 = a4;
  uint64_t v79 = a3;
  uint64_t v84 = &type metadata for BAServiceIdentifier;
  uint64_t v85 = &off_1015CE038;
  v83[0] = 2;
  unint64_t v76 = (char *)v86[0];
  uint64_t v25 = (uint64_t *)(v86[0] + OBJC_IVAR____TtC12searchpartyd10Peripheral_services);
  uint64_t v26 = swift_beginAccess();
  uint64_t v27 = *v25;
  __chkstk_darwin(v26);
  *(&v71 - 2) = (uint64_t)v83;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100E4E988((uint64_t (*)(uint64_t *))sub_100158AAC, (uint64_t)(&v71 - 4), v27);
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v83);
  if (!v28)
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_100010324(v43, (uint64_t)qword_10170DDA8);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    BOOL v46 = os_log_type_enabled(v44, v45);
    a3 = v79;
    uint64_t v47 = v74;
    id v48 = v76;
    if (v46)
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "No UT service", v49, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v47(v11);

    goto LABEL_26;
  }
  uint64_t v78 = a5;
  uint64_t v84 = &type metadata for BACharacteristicIdentifier.UnauthorizedAirTag;
  uint64_t v85 = &off_1015CE008;
  v83[0] = 0;
  uint64_t v29 = swift_beginAccess();
  uint64_t v73 = v28;
  uint64_t v30 = *(void *)(v28 + 40);
  __chkstk_darwin(v29);
  *(&v71 - 2) = (uint64_t)v83;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_100E4E9E4((uint64_t (*)(uint64_t *))sub_100158ACC, (uint64_t)(&v71 - 4), v30);
  swift_bridgeObjectRelease();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v83);
  swift_release();
  if (!v31)
  {
    unint64_t v34 = v74;
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_100010324(v50, (uint64_t)qword_10170DDA8);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    BOOL v52 = os_log_type_enabled(v36, v51);
    a3 = v79;
    id v39 = v76;
    if (v52)
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v51, "Missing UT Ranging Characteristic!", v53, 2u);
      swift_slowDealloc();
    }
    goto LABEL_25;
  }
  uint64_t v32 = sub_1002AAF08(76, 21760);
  if (v33 >> 60 == 15)
  {
    unint64_t v34 = v74;
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100010324(v35, (uint64_t)qword_10170DDA8);
    uint64_t v36 = Logger.logObject.getter();
    os_log_type_t v37 = static os_log_type_t.error.getter();
    BOOL v38 = os_log_type_enabled(v36, v37);
    a3 = v79;
    id v39 = v76;
    if (v38)
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v40 = 0;
      _os_log_impl((void *)&_mh_execute_header, v36, v37, "Invalid AirTag productData", v40, 2u);
      swift_slowDealloc();
    }
LABEL_25:

    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v34(v11);

    swift_release();
LABEL_26:
    sub_10001DAB4((uint64_t)v11, &qword_101641828);
    return sub_1002FD078(a3);
  }
  uint64_t v55 = v32;
  unint64_t v56 = v33;
  id v57 = [*(id *)&v76[OBJC_IVAR____TtC12searchpartyd10Peripheral_underlyingObject] identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v72 = v55;
  sub_1000361E0(v55, v56);
  unint64_t result = sub_1009CDB04(0x302E302E31, 0xE500000000000000);
  if ((result & 0x100000000) == 0)
  {
    __int16 v58 = result;
    unint64_t v59 = result >> 16;
    unint64_t v60 = result >> 24;
    id v61 = &v17[v15[10]];
    *(void *)id v61 = 0;
    *((void *)v61 + 1) = 0;
    v61[16] = 1;
    uint64_t v62 = &v17[v15[15]];
    *(void *)uint64_t v62 = 0;
    *((void *)v62 + 1) = 0xE000000000000000;
    (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v17, v14, v12);
    uint64_t v63 = &v17[v15[5]];
    uint64_t v64 = v72;
    *(void *)uint64_t v63 = v72;
    *((void *)v63 + 1) = v56;
    uint64_t v65 = &v17[v15[8]];
    *(_WORD *)uint64_t v65 = v58;
    v65[2] = v59;
    v65[3] = v60;
    unint64_t v66 = &v17[v15[7]];
    *(void *)unint64_t v66 = 0;
    *((void *)v66 + 1) = 0;
    uint64_t v67 = &v17[v15[6]];
    *(void *)uint64_t v67 = 0;
    *((void *)v67 + 1) = 0;
    id v68 = &v17[v15[9]];
    *(_DWORD *)id v68 = 0;
    v68[4] = 1;
    uint64_t v69 = &v17[v15[11]];
    *(void *)uint64_t v69 = 0;
    v69[8] = 1;
    uint64_t v70 = &v17[v15[12]];
    *(_DWORD *)uint64_t v70 = 257;
    v70[4] = 0;
    v17[v15[13]] = 4;
    v17[v15[14]] = 5;
    sub_10032FE84((uint64_t)v17, (uint64_t)v11, type metadata accessor for AccessoryMetadata);
    swift_storeEnumTagMultiPayload();
    v74(v11);

    swift_release();
    sub_100037A24(v64, v56);
    sub_10001DAB4((uint64_t)v11, &qword_101641828);
    sub_1003300FC((uint64_t)v17, type metadata accessor for AccessoryMetadata);
    a3 = v79;
    return sub_1002FD078(a3);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002FD078(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for MACAddress();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v33 - v8;
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (void *)((char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = *(void **)(v2 + 32);
  *uint64_t v13 = v14;
  (*(void (**)(void *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  id v15 = v14;
  char v16 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
  if (v16)
  {
    uint64_t v35 = v7;
    uint64_t v36 = v4;
    if (qword_101636A58 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v17 = type metadata accessor for Logger();
  sub_100010324(v17, (uint64_t)qword_10170DDA8);
  id v18 = a1;
  char v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v34 = v2;
    v39[0] = v22;
    *(_DWORD *)uint64_t v21 = 141558275;
    uint64_t v38 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v21 + 12) = 2081;
    v33[1] = v21 + 14;
    sub_100A3AC74(v9);
    sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
    uint64_t v23 = v36;
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v9, v23);
    uint64_t v38 = sub_1008FA0F0(v24, v26, v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Cleaning up for %{private,mask.hash}s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    uint64_t v2 = v34;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v27 = v35;
  sub_100A3AC74(v35);
  swift_beginAccess();
  if (!*(void *)(*(void *)(v2 + 48) + 16))
  {
    uint64_t v28 = v36;
    uint64_t v31 = v37;
LABEL_11:
    uint64_t v30 = *(void (**)(char *, uint64_t))(v31 + 8);
    v30(v27, v28);
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  sub_100724804((uint64_t)v27);
  uint64_t v28 = v36;
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = v37;
    goto LABEL_11;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v37 + 8);
  v30(v27, v28);
  swift_retain();
  swift_release();
  LOBYTE(v38) = 1;
  PassthroughSubject.send(completion:)();
  swift_release();
LABEL_12:
  sub_100A3AC74(v9);
  swift_beginAccess();
  sub_10016442C((uint64_t)v9);
  v30(v9, v28);
  swift_endAccess();
  swift_release();
  sub_101329270(v18);
  return swift_release();
}

uint64_t sub_1002FD58C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (void *)v2[4];
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = type metadata accessor for Transaction();
    __chkstk_darwin(v13);
    *(void *)&v14[-32] = v2;
    *(void *)&v14[-24] = a2;
    *(void *)&v14[-16] = a1;
    *(void *)&v14[-8] = v5;
    return static Transaction.named<A>(_:with:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FD748(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v42 = a3;
  uint64_t v8 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101641798);
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_1016417A0);
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  char v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000588C(&qword_1016417A8);
  uint64_t v48 = *(void *)(v17 - 8);
  uint64_t v49 = v17;
  __chkstk_darwin(v17);
  uint64_t v47 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000588C(&qword_1016417B0);
  uint64_t v51 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v50 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003319E0();
  BinaryDecodable.init(data:)();
  if (v4) {
    return swift_errorRelease();
  }
  uint64_t v41 = 0;
  uint64_t v40 = Transaction.subscriptionCleaner.getter();
  v52[0] = 1;
  v52[1] = 0;
  uint64_t v52[2] = 0;
  v52[3] = 0x2000000000000000;
  char v53 = 1;
  char v54 = 0;
  uint64_t v22 = sub_1002FF170((uint64_t)v52, v42, a4);
  sub_10001DAB4((uint64_t)v52, &qword_101641708);
  v52[0] = v22;
  id v55 = *(id *)(a2 + 32);
  id v23 = v55;
  uint64_t v24 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
  v37[1] = v23;
  sub_10000588C(&qword_101641710);
  v37[2] = a2;
  uint64_t v39 = a1;
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  uint64_t v38 = a4;
  sub_100062734(&qword_101641760, &qword_101641710);
  uint64_t v42 = v19;
  sub_10033149C((unint64_t *)&qword_10166C020, (unint64_t *)&qword_1016376E0);
  Publisher.receive<A>(on:options:)();
  sub_10001DAB4((uint64_t)v10, &qword_10163C6C8);

  swift_release();
  sub_100062734(&qword_1016417B8, &qword_101641798);
  uint64_t v25 = v44;
  Publisher.timeout(_:queue:customError:)();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v25);
  sub_10000588C(&qword_101641708);
  sub_100062734(&qword_1016417C0, &qword_1016417A0);
  uint64_t v26 = v46;
  uint64_t v27 = v47;
  Publisher.map<A>(_:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v16, v26);
  sub_10000588C(&qword_101641778);
  sub_100062734(&qword_1016417C8, &qword_1016417A8);
  sub_100062734(&qword_101641788, &qword_101641778);
  uint64_t v28 = v49;
  char v29 = v50;
  Publisher.catch<A>(_:)();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v28);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = (void *)swift_allocObject();
  unint64_t v33 = v38;
  uint64_t v32 = v39;
  v31[2] = v30;
  v31[3] = v32;
  uint64_t v34 = v40;
  v31[4] = v33;
  uint64_t v31[5] = v34;
  sub_100062734(&qword_1016417D0, &qword_1016417B0);
  swift_retain();
  id v35 = v33;
  swift_unknownObjectRetain();
  uint64_t v36 = v42;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v29, v36);
  AnyCancellable.store(in:)();
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_1002FDE4C(uint64_t a1)
{
  return sub_1002FEE30(a1, &qword_101641708);
}

uint64_t sub_1002FDE58(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    Transaction.capture()();
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170DDA8);
    sub_10001D074(a1, (uint64_t)v15, &qword_101641708);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      sub_10001D074((uint64_t)v15, (uint64_t)v13, &qword_101641708);
      sub_10000588C(&qword_101641708);
      uint64_t v11 = String.init<A>(describing:)();
      v13[0] = sub_1008FA0F0(v11, v12, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001DAB4((uint64_t)v15, &qword_101641708);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "getProductData result: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001DAB4((uint64_t)v15, &qword_101641708);
    }

    sub_10001D074(a1, (uint64_t)v15, &qword_101641708);
    if (v15[41])
    {
      sub_10001DAB4((uint64_t)v15, &qword_101641708);
      sub_1002FD078(a4);
      return swift_release();
    }
    else
    {
      swift_release();
      return sub_10001DAB4((uint64_t)v15, &qword_101641708);
    }
  }
  return result;
}

uint64_t sub_1002FE0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for DispatchPredicate();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = (void *)v2[4];
  *os_log_type_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  id v11 = v10;
  LOBYTE(v10) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v13 = type metadata accessor for Transaction();
    __chkstk_darwin(v13);
    *(void *)&v14[-32] = a2;
    *(void *)&v14[-24] = v2;
    *(void *)&v14[-16] = a1;
    *(void *)&v14[-8] = v5;
    return static Transaction.named<A>(_:with:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002FE288(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v61 = a4;
  uint64_t v82 = a3;
  uint64_t v7 = sub_10000588C(&qword_10163C6C8);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = (void *)sub_10000588C(&qword_10163C738);
  uint64_t v63 = *(v62 - 1);
  __chkstk_darwin(v62);
  unint64_t v60 = (char *)v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_10163C740);
  uint64_t v65 = *(void *)(v11 - 8);
  id v66 = (id)v11;
  __chkstk_darwin(v11);
  uint64_t v64 = (char *)v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_10000588C(&qword_101641730);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v67 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101641738);
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v73 = v14;
  __chkstk_darwin(v14);
  id v68 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10000588C(&qword_101641740);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v70 = (char *)v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10000588C(&qword_101641748);
  uint64_t v78 = *(void *)(v17 - 8);
  uint64_t v79 = v17;
  __chkstk_darwin(v17);
  uint64_t v77 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10000588C(&qword_101641750);
  uint64_t v81 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v80 = (char *)v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = Transaction.subscriptionCleaner.getter();
  sub_10000588C((uint64_t *)&unk_101649D00);
  uint64_t v75 = a2;
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  if (v4)
  {
    swift_errorRelease();
  }
  else
  {
    uint64_t v57 = a1;
    uint64_t v23 = v82;
    id v83 = *(id *)(v82 + 32);
    id v24 = v83;
    uint64_t v59 = 0;
    uint64_t v25 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
    uint64_t v56 = v21;
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v58 = v19;
    sub_100062734(&qword_101649D10, (uint64_t *)&unk_101649D00);
    sub_10033149C((unint64_t *)&qword_10166C020, (unint64_t *)&qword_1016376E0);
    v55[2] = v24;
    uint64_t v26 = v60;
    Publisher.receive<A>(on:options:)();
    sub_10001DAB4((uint64_t)v9, &qword_10163C6C8);

    swift_release();
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v61;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v28;
    swift_retain();
    id v29 = v28;
    static Subscribers.Demand.unlimited.getter();
    sub_10000588C(&qword_101639B58);
    sub_10000588C(&qword_10163C628);
    id v61 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
    sub_100062734(&qword_10163C778, &qword_10163C738);
    v55[1] = &protocol conformance descriptor for Future<A, B>;
    sub_100062734(&qword_10163C780, &qword_10163C628);
    uint64_t v30 = v64;
    uint64_t v31 = v62;
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, void *))(v63 + 8))(v26, v31);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v82;
    *(void *)(v32 + 16) = v82;
    *(void *)(v32 + 24) = v29;
    uint64_t v34 = v33;
    swift_retain();
    id v35 = v29;
    uint64_t v63 = sub_10000588C(&qword_101641708);
    uint64_t v62 = &protocol conformance descriptor for Publishers.FlatMap<A, B>;
    sub_100062734(&qword_10163C788, &qword_10163C740);
    id v36 = v66;
    uint64_t v37 = v67;
    Publisher.map<A>(_:)();
    swift_release();
    (*(void (**)(char *, id))(v65 + 8))(v30, v36);
    uint64_t v38 = (void *)swift_allocObject();
    uint64_t v39 = v75;
    v38[2] = v34;
    v38[3] = v39;
    v38[4] = v35;
    swift_retain();
    id v66 = v35;
    swift_retain();
    static Subscribers.Demand.unlimited.getter();
    sub_10000588C(&qword_101641710);
    sub_100062734(&qword_101641758, &qword_101641730);
    sub_100062734(&qword_101641760, &qword_101641710);
    uint64_t v40 = v68;
    uint64_t v41 = v71;
    Publisher.flatMap<A, B>(maxPublishers:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v37, v41);
    sub_100062734(&qword_101641768, &qword_101641738);
    uint64_t v42 = v70;
    uint64_t v43 = v73;
    Publisher.timeout(_:queue:customError:)();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v40, v43);
    sub_100062734(&qword_101641770, &qword_101641740);
    uint64_t v44 = v76;
    uint64_t v45 = v77;
    Publisher.map<A>(_:)();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v42, v44);
    sub_10000588C(&qword_101641778);
    sub_100062734(&qword_101641780, &qword_101641748);
    sub_100062734(&qword_101641788, &qword_101641778);
    uint64_t v46 = v79;
    uint64_t v47 = v80;
    Publisher.catch<A>(_:)();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v45, v46);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    uint64_t v49 = (void *)swift_allocObject();
    uint64_t v50 = v57;
    v49[2] = v48;
    v49[3] = v50;
    uint64_t v51 = v66;
    uint64_t v52 = v56;
    v49[4] = v66;
    v49[5] = v52;
    sub_100062734(&qword_101641790, &qword_101641750);
    id v53 = v51;
    swift_retain();
    swift_unknownObjectRetain();
    uint64_t v54 = v58;
    Publisher<>.sink(receiveValue:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v54);
    AnyCancellable.store(in:)();
    swift_release();
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1002FEE0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v4;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 41) = 0;
  return sub_100331630(v3, v2, v4, v5, v6);
}

uint64_t sub_1002FEE30(uint64_t a1, uint64_t *a2)
{
  sub_1000610B8(a1, (uint64_t)v4);
  v4[41] = 1;
  sub_10000588C(a2);
  return Just.init(_:)();
}

uint64_t sub_1002FEE84(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    Transaction.capture()();
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170DDA8);
    sub_10001D074(a1, (uint64_t)v18, &qword_101641708);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      sub_10001D074((uint64_t)v18, (uint64_t)v16, &qword_101641708);
      sub_10000588C(&qword_101641708);
      uint64_t v11 = String.init<A>(describing:)();
      v16[0] = sub_1008FA0F0(v11, v12, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001DAB4((uint64_t)v18, &qword_101641708);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "didNotify result: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001DAB4((uint64_t)v18, &qword_101641708);
    }

    sub_10001D074(a1, (uint64_t)v18, &qword_101641708);
    if (v20)
    {
      sub_1002FD078(a4);
      swift_release();
      return sub_10001DAB4((uint64_t)v18, &qword_101641708);
    }
    else
    {
      sub_1003317A8(v18[0], v18[1], v18[2], v18[3], v19);
      uint64_t v13 = Logger.logObject.getter();
      os_log_type_t v14 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl((void *)&_mh_execute_header, v13, v14, "handleNotify success!", v15, 2u);
        swift_slowDealloc();
      }

      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1002FF170(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)&v24[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = *(void **)(v4 + 32);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = v12;
  LOBYTE(v12) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if ((v12 & 1) == 0)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  sub_10001D074(a1, (uint64_t)v26, &qword_101641708);
  if (v26[41])
  {
    sub_10006105C((uint64_t)v26, (uint64_t)v25);
    sub_1000610B8((uint64_t)v25, (uint64_t)v24);
    uint64_t v14 = swift_allocObject();
    sub_10006105C((uint64_t)v24, v14 + 16);
    sub_10000588C(&qword_101641710);
    swift_allocObject();
    uint64_t v15 = Future.init(_:)();
    sub_100061288((uint64_t)v25);
    return v15;
  }
  sub_1003315D4((uint64_t)v26, (uint64_t)v25);
  if (qword_101636A58 != -1) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v16 = type metadata accessor for Logger();
  sub_100010324(v16, (uint64_t)qword_10170DDA8);
  sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_100331630);
  sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_100331630);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)char v19 = 136315138;
    sub_1003315D4((uint64_t)v25, (uint64_t)v24);
    sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_100331630);
    uint64_t v20 = String.init<A>(describing:)();
    v24[0] = sub_1008FA0F0(v20, v21, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_1003317A8);
    sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_1003317A8);
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Sending: %s", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_1003317A8);
    sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_1003317A8);
  }

  uint64_t v15 = sub_10030240C((uint64_t)v25, a2, a3);
  sub_100331B18((uint64_t)v25, (void (*)(void, void, void, void, void))sub_1003317A8);
  return v15;
}

uint64_t sub_1002FF574(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  sub_100061234();
  uint64_t v5 = swift_allocError();
  sub_1000610B8(a3, v6);
  v8[0] = v5;
  __int16 v9 = 256;
  a1(v8);
  return sub_10001DAB4((uint64_t)v8, &qword_101641708);
}

void sub_1002FF5FC(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  v137 = a3;
  uint64_t v135 = (int *)type metadata accessor for AccessoryMetadataManager.MetadataInfo(0);
  __chkstk_darwin(v135);
  uint64_t v131 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_1016653B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v132 = (uint8_t *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for AccessoryMetadata(0);
  uint64_t v129 = *(void *)(v130 - 8);
  uint64_t v10 = __chkstk_darwin(v130);
  uint64_t v133 = (uint8_t *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v134 = (uint8_t **)((char *)&v123 - v12);
  uint64_t v13 = type metadata accessor for MACAddress();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v136 = (char *)&v123 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  os_log_type_t v18 = (char *)&v123 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint8_t **)((char *)&v123 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v4 + 32);
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  uint64_t v25 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if ((v25 & 1) == 0)
  {
    __break(1u);
    goto LABEL_61;
  }
  sub_100A3AC74(v18);
  swift_beginAccess();
  uint64_t v26 = *(void *)(v4 + 48);
  if (!*(void *)(v26 + 16))
  {
LABEL_14:
    uint64_t v25 = *(void *)(v14 + 8);
    ((void (*)(char *, uint64_t))v25)(v18, v13);
    if (qword_101636A58 == -1)
    {
LABEL_15:
      uint64_t v43 = type metadata accessor for Logger();
      sub_100010324(v43, (uint64_t)qword_10170DDA8);
      id v44 = a2;
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        v134 = (uint8_t **)v25;
        uint64_t v48 = v47;
        uint64_t v135 = (int *)swift_slowAlloc();
        uint64_t v144 = (uint64_t)v135;
        *(_DWORD *)uint64_t v48 = 141558275;
        unint64_t v138 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v48 + 12) = 2081;
        uint64_t v133 = (uint8_t *)(v48 + 14);
        uint64_t v49 = v136;
        sub_100A3AC74(v136);
        sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
        uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v52 = v51;
        ((void (*)(char *, uint64_t))v134)(v49, v13);
        unint64_t v138 = sub_1008FA0F0(v50, v52, &v144);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Missing coordinator for %{private,mask.hash}s", (uint8_t *)v48, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v53 = 7;
      goto LABEL_19;
    }
LABEL_61:
    swift_once();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  unint64_t v27 = sub_100724804((uint64_t)v18);
  if ((v28 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  id v29 = *(char **)(*(void *)(v26 + 56) + 8 * v27);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  sub_10005F6AC(a1, (uint64_t)&v144);
  sub_10000588C(&qword_101639B58);
  if (swift_dynamicCast())
  {
    uint64_t v30 = v138;
    unint64_t v31 = v139;
    uint64_t v32 = v140;
    unint64_t v33 = v141;
    int v34 = v142;
    if (v142) {
      int v35 = 4;
    }
    else {
      int v35 = 0;
    }
    switch((v141 >> 60) & 3 | v35)
    {
      case 2uLL:
        sub_1000361E0(v138, v139);
        if (qword_101636A58 != -1) {
          swift_once();
        }
        uint64_t v36 = type metadata accessor for Logger();
        sub_100010324(v36, (uint64_t)qword_10170DDA8);
        sub_100331630(v30, v31, (uint64_t)v32, v33, v34);
        sub_1000361E0(v30, v31);
        uint64_t v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v37, v38))
        {
          uint64_t v39 = (uint8_t *)swift_slowAlloc();
          v134 = (uint8_t **)swift_slowAlloc();
          uint64_t v144 = (uint64_t)v134;
          uint64_t v133 = v39;
          *(_DWORD *)uint64_t v39 = 136315138;
          uint64_t v132 = v39 + 4;
          sub_1000361E0(v30, v31);
          uint64_t v40 = sub_1002AA678(v30, v31);
          uint64_t v136 = v29;
          unint64_t v42 = v41;
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          unint64_t v138 = sub_1008FA0F0(v40, v42, &v144);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          id v29 = v136;
          swift_bridgeObjectRelease();
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Received productData %s", v133, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        }

        uint64_t v103 = (uint64_t *)&v29[OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info
                             + v135[5]];
        uint64_t v104 = *v103;
        unint64_t v105 = v103[1];
        *uint64_t v103 = v30;
        v103[1] = v31;
        sub_1000361E0(v30, v31);
        sub_100037A24(v104, v105);
        sub_1003319E0();
        BinaryDecodable.init(data:)();
        sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        swift_release();
        sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        char v55 = 0;
        uint64_t v121 = 2;
        break;
      case 3uLL:
        uint64_t v68 = qword_101636A58;
        swift_bridgeObjectRetain();
        if (v68 != -1) {
          swift_once();
        }
        uint64_t v69 = type metadata accessor for Logger();
        sub_100010324(v69, (uint64_t)qword_10170DDA8);
        swift_bridgeObjectRetain_n();
        uint64_t v70 = Logger.logObject.getter();
        os_log_type_t v71 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v70, v71))
        {
          v134 = v32;
          uint64_t v72 = (uint8_t *)swift_slowAlloc();
          uint64_t v144 = swift_slowAlloc();
          LODWORD(v136) = v34;
          *(_DWORD *)uint64_t v72 = 136315138;
          swift_bridgeObjectRetain();
          unint64_t v138 = sub_1008FA0F0(v30, v31, &v144);
          uint64_t v32 = v134;
          LOBYTE(v34) = (_BYTE)v136;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v70, v71, "Received modelName %s", v72, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        }

        uint64_t v106 = (uint64_t *)&v29[OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info
                             + v135[6]];
        uint64_t *v106 = v30;
        v106[1] = v31;
        swift_bridgeObjectRelease();
        sub_1003319E0();
        BinaryDecodable.init(data:)();
        swift_release();
        sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        char v55 = 0;
        uint64_t v121 = 3;
        break;
      case 4uLL:
        if (qword_101636A58 != -1) {
          swift_once();
        }
        uint64_t v73 = type metadata accessor for Logger();
        sub_100010324(v73, (uint64_t)qword_10170DDA8);
        uint64_t v74 = Logger.logObject.getter();
        os_log_type_t v75 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = (uint8_t *)swift_slowAlloc();
          uint64_t v144 = swift_slowAlloc();
          *(_DWORD *)uint64_t v76 = 136315138;
          uint64_t v77 = sub_10110E1B4(v30);
          unint64_t v138 = sub_1008FA0F0(v77, v78, &v144);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v74, v75, "Received capabilities %s", v76, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        *(_DWORD *)&v29[OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info
                      + v135[8]] = v30;
        sub_1003319E0();
        BinaryDecodable.init(data:)();
        swift_release();
        char v55 = 0;
        uint64_t v121 = 4;
        break;
      case 5uLL:
        unint64_t v79 = v138 >> 16;
        unint64_t v80 = v138 >> 24;
        if (qword_101636A58 != -1) {
          swift_once();
        }
        uint64_t v81 = type metadata accessor for Logger();
        uint64_t v82 = (char *)sub_100010324(v81, (uint64_t)qword_10170DDA8);
        id v83 = Logger.logObject.getter();
        os_log_type_t v84 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v83, v84))
        {
          uint64_t v85 = (uint8_t *)swift_slowAlloc();
          uint64_t v125 = swift_slowAlloc();
          unint64_t v138 = v125;
          uint64_t v136 = v82;
          uint64_t v124 = v85;
          *(_DWORD *)uint64_t v85 = 136315138;
          uint64_t v123 = v85 + 4;
          int v127 = v80 << 24;
          int v128 = v79 << 16;
          int v126 = (unsigned __int16)v30;
          uint64_t v86 = sub_1009CD110();
          unint64_t v88 = v87;
          uint64_t v144 = 0x756C615677617220;
          uint64_t v145 = (void *)0xEA00000000002065;
          uint64_t v89 = sub_1009CD1F0();
          unint64_t v91 = v90;
          uint64_t v92 = v29;
          uint64_t v93 = Data.hexString.getter();
          uint64_t v95 = v94;
          sub_10001CFB8(v89, v91);
          v96._countAndFlagsBits = v93;
          id v29 = v92;
          v96._object = v95;
          String.append(_:)(v96);
          swift_bridgeObjectRelease();
          uint64_t v97 = v144;
          uint64_t v98 = v145;
          uint64_t v144 = v86;
          uint64_t v145 = (void *)v88;
          swift_bridgeObjectRetain();
          v99._countAndFlagsBits = v97;
          v99._object = v98;
          String.append(_:)(v99);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v144 = sub_1008FA0F0(v144, (unint64_t)v145, (uint64_t *)&v138);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v83, v84, "Received firmwareVersion %s", v124, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          int v100 = v126;
          int v101 = v128;
          int v102 = v127;
        }
        else
        {

          int v100 = (unsigned __int16)v30;
          int v101 = v79 << 16;
          int v102 = v80 << 24;
        }
        int v107 = v100 | v101 | v102;
        uint64_t v108 = (uint64_t)&v29[OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info];
        uint64_t v109 = (uint64_t)&v29[OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_info
                           + v135[7]];
        *(_DWORD *)uint64_t v109 = v107;
        *(unsigned char *)(v109 + 4) = 0;
        uint64_t v110 = v131;
        sub_10032FE84(v108, v131, type metadata accessor for AccessoryMetadataManager.MetadataInfo);
        uint64_t v111 = (uint64_t)v132;
        sub_100300C48(v110, (uint64_t)v132);
        int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 48))(v111, 1, v130);
        uint64_t v113 = v133;
        if (v112 == 1)
        {
          swift_release();
          sub_10001DAB4(v111, &qword_1016653B0);
        }
        else
        {
          uint64_t v114 = v111;
          uint64_t v115 = (void (*)(void, void))v134;
          sub_100331978(v114, (uint64_t)v134, type metadata accessor for AccessoryMetadata);
          sub_10032FE84((uint64_t)v115, (uint64_t)v113, type metadata accessor for AccessoryMetadata);
          uint64_t v116 = Logger.logObject.getter();
          os_log_type_t v117 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v116, v117))
          {
            uint64_t v118 = (uint8_t *)swift_slowAlloc();
            uint64_t v144 = swift_slowAlloc();
            *(_DWORD *)uint64_t v118 = 136315138;
            uint64_t v119 = sub_1001A9070();
            unint64_t v138 = sub_1008FA0F0(v119, v120, &v144);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_1003300FC((uint64_t)v113, type metadata accessor for AccessoryMetadata);
            _os_log_impl((void *)&_mh_execute_header, v116, v117, "AccessoryMetadata %s", v118, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_1003300FC((uint64_t)v113, type metadata accessor for AccessoryMetadata);
          }

          swift_retain();
          uint64_t v122 = (void (*)(void, void))v134;
          PassthroughSubject.send(_:)();
          swift_release();
          swift_release();
          sub_1003300FC((uint64_t)v122, type metadata accessor for AccessoryMetadata);
        }
        uint64_t v54 = v137;
        v137[4] = 0;
        *(_OWORD *)uint64_t v54 = 0u;
        *((_OWORD *)v54 + 1) = 0u;
        goto LABEL_20;
      default:
        if (qword_101636A58 != -1) {
          swift_once();
        }
        uint64_t v62 = type metadata accessor for Logger();
        sub_100010324(v62, (uint64_t)qword_10170DDA8);
        sub_100331630(v30, v31, (uint64_t)v32, v33, v34);
        sub_100331630(v30, v31, (uint64_t)v32, v33, v34);
        uint64_t v63 = Logger.logObject.getter();
        os_log_type_t v64 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = (uint8_t *)swift_slowAlloc();
          uint64_t v135 = (int *)swift_slowAlloc();
          unint64_t v138 = (unint64_t)v135;
          *(_DWORD *)uint64_t v65 = 136315138;
          v134 = (uint8_t **)(v65 + 4);
          uint64_t v144 = v30;
          uint64_t v145 = (void *)v31;
          v146 = v32;
          unint64_t v147 = v33;
          char v148 = v34;
          sub_100331630(v30, v31, (uint64_t)v32, v33, v34);
          uint64_t v136 = v29;
          uint64_t v66 = String.init<A>(describing:)();
          uint64_t v144 = sub_1008FA0F0(v66, v67, (uint64_t *)&v138);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "Unexpected command %s", v65, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
          sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        }
        swift_release();

        sub_1003317A8(v30, v31, (uint64_t)v32, v33, v34);
        uint64_t v53 = 9;
        goto LABEL_19;
    }
    uint64_t v54 = v137;
    uint64_t *v137 = v121;
    v54[1] = 0;
    v54[2] = 0;
    v54[3] = 0x2000000000000000;
    *((unsigned char *)v54 + 32) = 1;
    goto LABEL_21;
  }
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v56 = type metadata accessor for Logger();
  sub_100010324(v56, (uint64_t)qword_10170DDA8);
  sub_10005F6AC(a1, (uint64_t)&v144);
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    uint64_t v143 = swift_slowAlloc();
    *(_DWORD *)uint64_t v59 = 136315138;
    sub_10005F6AC((uint64_t)&v144, (uint64_t)&v138);
    uint64_t v60 = String.init<A>(describing:)();
    unint64_t v138 = sub_1008FA0F0(v60, v61, &v143);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v144);
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "Invalid command from payload %s", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v144);
  }

  uint64_t v53 = 13;
LABEL_19:
  uint64_t v54 = v137;
  uint64_t *v137 = v53;
  *(_OWORD *)(v54 + 1) = 0u;
  *(_OWORD *)(v54 + 3) = 0u;
LABEL_20:
  *((unsigned char *)v54 + 40) = 11;
  char v55 = 1;
LABEL_21:
  *((unsigned char *)v54 + 41) = v55;
}

unint64_t sub_100300C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)type metadata accessor for AccessoryMetadata(0);
  uint64_t v34 = *((void *)v4 - 1);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v7[*(int *)(v5 + 40)];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  uint64_t v9 = &v7[*(int *)(v5 + 60)];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0xE000000000000000;
  uint64_t v10 = (int *)type metadata accessor for AccessoryMetadataManager.MetadataInfo(0);
  uint64_t v11 = (uint64_t *)(a1 + v10[5]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 == 15
    || (uint64_t v13 = v10, v14 = (uint64_t *)(a1 + v10[6]), (v15 = v14[1]) == 0)
    || (uint64_t v16 = a1 + v10[7], (*(unsigned char *)(v16 + 4) & 1) != 0))
  {
    sub_1003300FC(a1, type metadata accessor for AccessoryMetadataManager.MetadataInfo);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v34 + 56);
    return v17(a2, 1, 1, v4);
  }
  else
  {
    uint64_t v19 = *v11;
    uint64_t v33 = *v14;
    int v20 = *(_DWORD *)v16;
    int v21 = HIWORD(*(_DWORD *)v16);
    int v32 = HIBYTE(*(_DWORD *)v16);
    uint64_t v22 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v7, a1, v22);
    uint64_t v23 = (uint64_t *)&v7[v4[5]];
    *uint64_t v23 = v19;
    v23[1] = v12;
    id v24 = &v7[v4[8]];
    *(_WORD *)id v24 = v20;
    v24[2] = v21;
    v24[3] = v32;
    uint64_t v25 = &v7[v4[7]];
    *(void *)uint64_t v25 = v33;
    *((void *)v25 + 1) = v15;
    uint64_t v26 = &v7[v4[6]];
    *(void *)uint64_t v26 = 0;
    *((void *)v26 + 1) = 0;
    sub_100037A38(v19, v12);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1009CDB04(0x302E302E31, 0xE500000000000000);
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v27 = &v7[v4[9]];
      *(_DWORD *)unint64_t v27 = result;
      v27[4] = 0;
      char v28 = &v7[v4[11]];
      *(void *)char v28 = 0;
      v28[8] = 1;
      int v29 = *(_DWORD *)(a1 + v13[8]);
      sub_1003300FC(a1, type metadata accessor for AccessoryMetadataManager.MetadataInfo);
      uint64_t v30 = &v7[v4[12]];
      *(_DWORD *)uint64_t v30 = v29;
      v30[4] = 0;
      v7[v4[13]] = 4;
      v7[v4[14]] = 5;
      sub_10032FE84((uint64_t)v7, a2, type metadata accessor for AccessoryMetadata);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v34 + 56))(a2, 0, 1, v4);
      return sub_1003300FC((uint64_t)v7, type metadata accessor for AccessoryMetadata);
    }
  }
  return result;
}

uint64_t sub_100300F80(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = (void *)v4[4];
  *unint64_t v12 = v13;
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  id v14 = v13;
  LOBYTE(v13) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  if (v13)
  {
    if (qword_101636A58 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v15 = type metadata accessor for Logger();
  sub_100010324(v15, (uint64_t)qword_10170DDA8);
  sub_1000361E0(a1, a2);
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v18 = 134349056;
    uint64_t v19 = v18;
    uint64_t v20 = 0;
    switch(a2 >> 62)
    {
      case 1uLL:
        LODWORD(v20) = HIDWORD(a1) - a1;
        if (__OFSUB__(HIDWORD(a1), a1))
        {
          __break(1u);
LABEL_15:
          __break(1u);
          JUMPOUT(0x1003012C0);
        }
        uint64_t v20 = (int)v20;
LABEL_10:
        v28[1] = v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_10001CFB8(a1, a2);
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "didNotify data length %{public}ld", v19, 0xCu);
        swift_slowDealloc();
        break;
      case 2uLL:
        uint64_t v22 = *(void *)(a1 + 16);
        uint64_t v21 = *(void *)(a1 + 24);
        BOOL v23 = __OFSUB__(v21, v22);
        uint64_t v20 = v21 - v22;
        if (!v23) {
          goto LABEL_10;
        }
        goto LABEL_15;
      case 3uLL:
        goto LABEL_10;
      default:
        uint64_t v20 = BYTE6(a2);
        goto LABEL_10;
    }
  }
  else
  {
    sub_10001CFB8(a1, a2);
  }

  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v24;
  uint64_t v25[3] = a3;
  v25[4] = a1;
  v25[5] = a2;
  v25[6] = v8;
  sub_10000588C(&qword_10163C628);
  swift_allocObject();
  sub_1000361E0(a1, a2);
  id v26 = a3;
  return Future.init(_:)();
}

uint64_t sub_1003012D0(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  unint64_t v117 = a6;
  uint64_t v116 = a5;
  uint64_t v118 = a2;
  uint64_t v119 = a1;
  uint64_t v114 = (void (*)(char *, uint64_t))type metadata accessor for BinaryDecodingError();
  uint64_t v111 = *((void *)v114 - 1);
  __chkstk_darwin(v114);
  uint64_t v113 = (char *)v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for BinaryDecoder();
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v109 = (char *)v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_10163C630);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Bit();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v110 = (char *)v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v112 = (char *)v101 - v16;
  uint64_t v17 = type metadata accessor for MACAddress();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  BOOL v23 = (char *)v101 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    memset(v123, 0, sizeof(v123));
    LOBYTE(v124) = 11;
    char v125 = 1;
    v119(v123);
    return sub_10001DAB4((uint64_t)v123, &qword_10163C638);
  }
  uint64_t v25 = Strong;
  sub_100A3AC74(v23);
  swift_beginAccess();
  uint64_t v26 = *(void *)(v25 + 48);
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v115 = v25;
  if (!v27)
  {
LABEL_18:
    unint64_t v61 = *(void (**)(char *, uint64_t))(v18 + 8);
    v61(v23, v17);
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v62 = type metadata accessor for Logger();
    sub_100010324(v62, (uint64_t)qword_10170DDA8);
    id v63 = a4;
    os_log_type_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      unint64_t v117 = swift_slowAlloc();
      *(void *)uint64_t v123 = v117;
      *(_DWORD *)uint64_t v66 = 141558275;
      uint64_t v120 = 1752392040;
      uint64_t v114 = v61;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v66 + 12) = 2081;
      uint64_t v116 = v66 + 14;
      sub_100A3AC74(v21);
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v69 = v68;
      v114(v21, v17);
      uint64_t v120 = sub_1008FA0F0(v67, v69, (uint64_t *)v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Missing coordinator for %{private,mask.hash}s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    *(void *)uint64_t v123 = 7;
    memset(&v123[8], 0, 32);
    LOBYTE(v124) = 11;
    char v125 = 1;
    v119(v123);
    swift_release();
    return sub_10001DAB4((uint64_t)v123, &qword_10163C638);
  }
  swift_bridgeObjectRetain();
  unint64_t v28 = sub_100724804((uint64_t)v23);
  if ((v29 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  uint64_t v103 = v13;
  uint64_t v30 = *(void *)(*(void *)(v26 + 56) + 8 * v28);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v17);
  uint64_t v31 = v30;
  int v32 = (uint64_t *)(v30
                  + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer);
  uint64_t v33 = *(void *)(v30
                  + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer);
  unint64_t v34 = *(void *)(v30
                  + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer
                  + 8);
  if (v34 >> 60 == 15) {
    uint64_t v35 = 0;
  }
  else {
    uint64_t v35 = *(void *)(v30
  }
                    + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer);
  unint64_t v36 = 0xC000000000000000;
  if (v34 >> 60 != 15) {
    unint64_t v36 = *(void *)(v30
  }
                    + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_readBuffer
                    + 8);
  uint64_t v121 = v35;
  unint64_t v122 = v36;
  sub_100037A38(v33, v34);
  uint64_t v37 = v116;
  unint64_t v38 = v117;
  sub_1000361E0(v116, v117);
  sub_100EFD6B8(1, v37, v38, (uint64_t *)v123);
  long long v39 = *(_OWORD *)v123;
  Data.append(_:)();
  sub_10001CFB8(v39, *((unint64_t *)&v39 + 1));
  uint64_t v40 = v121;
  unint64_t v41 = v122;
  uint64_t v42 = *v32;
  unint64_t v43 = v32[1];
  uint64_t *v32 = v121;
  v32[1] = v41;
  uint64_t v104 = v32;
  sub_1000361E0(v40, v41);
  sub_100037A24(v42, v43);
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  uint64_t v105 = sub_100010324(v44, (uint64_t)qword_10170DDA8);
  uint64_t v45 = Logger.logObject.getter();
  os_log_type_t v46 = static os_log_type_t.info.getter();
  BOOL v47 = os_log_type_enabled(v45, v46);
  uint64_t v106 = v31;
  if (v47)
  {
    uint64_t v48 = (uint8_t *)swift_slowAlloc();
    uint64_t v102 = swift_slowAlloc();
    *(void *)uint64_t v123 = v102;
    *(_DWORD *)uint64_t v48 = 136315138;
    v101[1] = v48 + 4;
    swift_beginAccess();
    uint64_t v49 = v121;
    unint64_t v50 = v122;
    sub_1000361E0(v121, v122);
    uint64_t v51 = v12;
    uint64_t v52 = Data.description.getter();
    unint64_t v54 = v53;
    sub_10001CFB8(v49, v50);
    uint64_t v55 = v52;
    uint64_t v12 = v51;
    uint64_t v120 = sub_1008FA0F0(v55, v54, (uint64_t *)v123);
    uint64_t v37 = v116;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v45, v46, "localReadBuffer %s", v48, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v56 = v117;
  sub_1000361E0(v37, v117);
  __int16 v57 = sub_10115B26C(v37, v56);
  sub_10001CFB8(v37, v56);
  if ((v57 & 0x100) != 0) {
    goto LABEL_27;
  }
  v123[0] = v57;
  sub_10006145C();
  uint64_t v58 = FixedWidthInteger.bits()();
  if (*(void *)(v58 + 16))
  {
    uint64_t v59 = v103;
    (*(void (**)(char *, unint64_t, uint64_t))(v103 + 16))(v11, v58 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80)), v12);
    uint64_t v60 = 0;
  }
  else
  {
    uint64_t v60 = 1;
    uint64_t v59 = v103;
  }
  uint64_t v70 = v112;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v11, v60, 1, v12);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v11, 1, v12) == 1)
  {
    sub_10001DAB4((uint64_t)v11, &qword_10163C630);
LABEL_27:
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v71 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_10001CFB8(v121, v122);
    uint64_t v72 = v114;
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v70, v11, v12);
  unint64_t v78 = v110;
  (*(void (**)(char *, void, uint64_t))(v59 + 104))(v110, enum case for Bit.one(_:), v12);
  sub_1003300B4((unint64_t *)&qword_10163B220, (void (*)(uint64_t))&type metadata accessor for Bit);
  unint64_t v79 = v70;
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  int v80 = v123[0];
  int v81 = v120;
  uint64_t v82 = *(void (**)(char *, uint64_t))(v59 + 8);
  v82(v78, v12);
  if (v80 == v81)
  {
    uint64_t v110 = (char *)v82;
    id v83 = v109;
    BinaryDecoder.init()();
    swift_beginAccess();
    uint64_t v84 = v121;
    unint64_t v85 = v122;
    sub_1000361E0(v121, v122);
    unint64_t v86 = sub_1003318E4();
    BinaryDecoder.decode<A>(_:from:)();
    sub_10001CFB8(v84, v85);
    long long v95 = *(_OWORD *)v123;
    long long v96 = *(_OWORD *)&v123[16];
    LOBYTE(v85) = v123[32];
    uint64_t v97 = *v104;
    unint64_t v98 = v104[1];
    *(_OWORD *)uint64_t v104 = xmmword_101347BB0;
    sub_100037A24(v97, v98);
    *(void *)&v123[24] = &type metadata for AccessoryNonOwnerCommand;
    *(void *)&v123[32] = v86;
    unint64_t v124 = sub_100331838();
    uint64_t v99 = swift_allocObject();
    *(void *)uint64_t v123 = v99;
    *(_OWORD *)(v99 + 16) = v95;
    *(_OWORD *)(v99 + 32) = v96;
    *(unsigned char *)(v99 + 48) = v85;
    char v125 = 0;
    sub_100331630(v95, *((unint64_t *)&v95 + 1), v96, *((unint64_t *)&v96 + 1), v85);
    v119(v123);
    swift_release();
    swift_release();
    sub_1003317A8(v95, *((unint64_t *)&v95 + 1), v96, *((unint64_t *)&v96 + 1), v85);
    (*(void (**)(char *, uint64_t))(v107 + 8))(v83, v108);
    ((void (*)(char *, uint64_t))v110)(v112, v12);
    sub_10001DAB4((uint64_t)v123, &qword_10163C638);
    return sub_10001CFB8(v121, v122);
  }
  sub_1003300B4((unint64_t *)&qword_101639630, (void (*)(uint64_t))&type metadata accessor for BinaryDecodingError);
  uint64_t v72 = v114;
  uint64_t v71 = swift_allocError();
  (*(void (**)(uint64_t, void, void (*)(char *, uint64_t)))(v111 + 104))(v94, enum case for BinaryDecodingError.insufficientData(_:), v72);
  swift_willThrow();
  v82(v79, v12);
  sub_10001CFB8(v121, v122);
LABEL_28:
  *(void *)uint64_t v123 = v71;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v73 = v113;
  if (!swift_dynamicCast())
  {
LABEL_35:
    swift_errorRelease();
    sub_1000361E0(v37, v56);
    sub_1000361E0(v37, v56);
    unint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      *(void *)uint64_t v123 = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315138;
      uint64_t v90 = Data.hexString.getter();
      uint64_t v121 = sub_1008FA0F0(v90, v91, (uint64_t *)v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(v37, v56);
      sub_10001CFB8(v37, v56);
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "Failed to decode data %s", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(v37, v56);
      sub_10001CFB8(v37, v56);
    }

    uint64_t v92 = *v104;
    unint64_t v93 = v104[1];
    *(_OWORD *)uint64_t v104 = xmmword_101347BB0;
    sub_100037A24(v92, v93);
    *(void *)uint64_t v123 = v71;
    LOBYTE(v124) = 10;
    char v125 = 1;
    swift_errorRetain();
    v119(v123);
    swift_release();
    swift_release();
    swift_errorRelease();
    return sub_10001DAB4((uint64_t)v123, &qword_10163C638);
  }
  uint64_t v74 = v111;
  if ((*(unsigned int (**)(char *, void *))(v111 + 88))(v73, v72) != enum case for BinaryDecodingError.insufficientData(_:))
  {
    (*(void (**)(char *, void *))(v74 + 8))(v73, v72);
    goto LABEL_35;
  }
  swift_errorRelease();
  os_log_type_t v75 = Logger.logObject.getter();
  os_log_type_t v76 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v77 = 0;
    _os_log_impl((void *)&_mh_execute_header, v75, v76, "insufficientData. Keep reading...", v77, 2u);
    swift_slowDealloc();
    swift_release();
    swift_release();
  }
  else
  {

    swift_release();
    swift_release();
  }
  return swift_errorRelease();
}

uint64_t sub_10030240C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 32);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = (void *)swift_allocObject();
    v15[2] = v14;
    v15[3] = a3;
    sub_1003315D4(a1, (uint64_t)(v15 + 4));
    v15[9] = a2;
    sub_10000588C(&qword_101641710);
    swift_allocObject();
    id v16 = a3;
    sub_100331B18(a1, (void (*)(void, void, void, void, void))sub_100331630);
    swift_retain();
    return Future.init(_:)();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003025DC(void (*a1)(unsigned char *), uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v47 = a6;
  uint64_t v10 = type metadata accessor for BinaryEncoder();
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  __chkstk_darwin(v10);
  unint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for MACAddress();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v46 - v17;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    uint64_t v51 = a1;
    uint64_t v52 = a2;
    sub_100A3AC74(v18);
    swift_beginAccess();
    uint64_t v21 = *(void *)(v20 + 48);
    if (*(void *)(v21 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v22 = sub_100724804((uint64_t)v18);
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_retain();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
        uint64_t v25 = (void *)(v24
                       + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
        uint64_t v26 = *(void *)(v24
                        + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
        uint64_t v27 = v52;
        *uint64_t v25 = v51;
        v25[1] = v27;
        swift_retain();
        sub_1000A1534(v26);
        unint64_t v28 = v50;
        BinaryEncoder.init()();
        sub_1003315D4(a5, (uint64_t)v54);
        sub_100331838();
        uint64_t v40 = BinaryEncoder.encode<A>(_:)();
        unint64_t v42 = v41;
        uint64_t v43 = Data.chunked(into:)();
        uint64_t v44 = sub_1001554FC(v43);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_100442E40((uint64_t)v44);
        swift_endAccess();
        sub_100302D78(v47, a5, a4);
        sub_10001CFB8(v40, v42);
        swift_release();
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v28, v49);
      }
      swift_bridgeObjectRelease();
    }
    char v29 = *(void (**)(char *, uint64_t))(v13 + 8);
    v29(v18, v12);
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170DDA8);
    id v31 = a4;
    int v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v47 = v20;
      uint64_t v35 = v34;
      unint64_t v50 = (char *)swift_slowAlloc();
      *(void *)unint64_t v54 = v50;
      *(_DWORD *)uint64_t v35 = 141558275;
      uint64_t v53 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v35 + 12) = 2081;
      uint64_t v49 = v35 + 14;
      sub_100A3AC74(v16);
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v37 = v29;
      unint64_t v39 = v38;
      v37(v16, v12);
      uint64_t v53 = sub_1008FA0F0(v36, v39, (uint64_t *)v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Missing coordinator for %{private,mask.hash}s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    *(void *)unint64_t v54 = 7;
    memset(&v54[8], 0, 32);
    __int16 v55 = 267;
    v51(v54);
    swift_release();
  }
  else
  {
    memset(v54, 0, sizeof(v54));
    __int16 v55 = 267;
    a1(v54);
  }
  return sub_10001DAB4((uint64_t)v54, &qword_101641708);
}

void sub_100302D78(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v85 = a2;
  uint64_t v90 = a1;
  uint64_t v89 = type metadata accessor for DispatchTime();
  p_isa = *(void **)(v89 - 8);
  uint64_t v6 = __chkstk_darwin(v89);
  unint64_t v86 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v87 = (char *)&v79 - v8;
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v79 - v14;
  uint64_t v16 = type metadata accessor for DispatchPredicate();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)(v4 + 32);
  *(void *)uint64_t v19 = v20;
  (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, enum case for DispatchPredicate.onQueue(_:), v16);
  id v21 = v20;
  LOBYTE(v20) = _dispatchPreconditionTest(_:)();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) == 0)
  {
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_11;
  }
  sub_100A3AC74(v15);
  swift_beginAccess();
  uint64_t v22 = *(void *)(v4 + 48);
  if (*(void *)(v22 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_100724804((uint64_t)v15);
    if (v24)
    {
      uint64_t v25 = *(void *)(*(void *)(v22 + 56) + 8 * v23);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v10 + 8);
      unint64_t v26 = v10 + 8;
      v27(v15, v9);
      uint64_t v84 = v25;
      unint64_t v28 = (uint64_t *)(v25
                      + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writeQueue);
      swift_beginAccess();
      if (!*(void *)(*v28 + 16))
      {
        uint64_t v48 = *(void (**)(uint64_t *))(v84
                                               + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
        if (v48)
        {
          uint64_t v49 = v85;
          sub_1003315D4(v85, (uint64_t)v96);
          char v97 = 0;
          sub_1000BD0E8((uint64_t)v48);
          sub_100331B18(v49, (void (*)(void, void, void, void, void))sub_100331630);
          v48(v96);
          sub_1000A1534((uint64_t)v48);
          swift_release();
          sub_10001DAB4((uint64_t)v96, &qword_101641708);
          return;
        }
        goto LABEL_33;
      }
      swift_beginAccess();
      uint64_t v29 = *v28;
      if (*(void *)(*v28 + 16))
      {
        uint64_t v15 = *(char **)(v29 + 32);
        unint64_t v26 = *(void *)(v29 + 40);
        sub_1000361E0((uint64_t)v15, v26);
        int v80 = v28;
        sub_100A29D94(0, 1);
        swift_endAccess();
        if (qword_101636A58 == -1) {
          goto LABEL_7;
        }
      }
      else
      {
        __break(1u);
      }
      swift_once();
LABEL_7:
      uint64_t v30 = type metadata accessor for Logger();
      uint64_t v31 = sub_100010324(v30, (uint64_t)qword_10170DDA8);
      sub_1000361E0((uint64_t)v15, v26);
      sub_1000361E0((uint64_t)v15, v26);
      uint64_t v83 = v31;
      int v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.info.getter();
      BOOL v34 = os_log_type_enabled(v32, v33);
      int v81 = a3;
      if (v34)
      {
        uint64_t v35 = (uint8_t *)swift_slowAlloc();
        v96[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = 136315138;
        uint64_t v82 = v35 + 4;
        sub_1000361E0((uint64_t)v15, v26);
        uint64_t v36 = Data.description.getter();
        uint64_t v37 = (uint64_t)v15;
        unint64_t v39 = v38;
        sub_10001CFB8(v37, v26);
        v93[0] = sub_1008FA0F0(v36, v39, v96);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        uint64_t v15 = (char *)v37;
        swift_bridgeObjectRelease();
        sub_10001CFB8(v37, v26);
        sub_10001CFB8(v37, v26);
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "processQueuedUpdates: writing %s.", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10001CFB8((uint64_t)v15, v26);
        sub_10001CFB8((uint64_t)v15, v26);
      }

      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = 0u;
      uint64_t v51 = v50 + 16;
      *(_OWORD *)(v50 + 32) = 0u;
      *(void *)(v50 + 48) = 0;
      *(_WORD *)(v50 + 56) = 267;
      uint64_t v52 = dispatch_group_create();
      dispatch_group_enter(v52);
      v96[0] = sub_100A6C94C((uint64_t)v15, v26);
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v50;
      *(void *)(v53 + 24) = v52;
      uint64_t v82 = (uint8_t *)v50;
      swift_retain();
      unint64_t v54 = v52;
      sub_10000588C(&qword_10163C5E8);
      sub_100062734(&qword_10163C5F0, &qword_10163C5E8);
      Publisher.oneshot(_:)();
      swift_release();
      swift_release();
      __int16 v55 = v86;
      static DispatchTime.now()();
      unint64_t v56 = v87;
      + infix(_:_:)();
      __int16 v57 = (void (*)(char *, uint64_t))p_isa[1];
      uint64_t v58 = v89;
      v57(v55, v89);
      p_isa = &v54->isa;
      OS_dispatch_group.wait(timeout:)();
      v57(v56, v58);
      if (static DispatchTimeoutResult.== infix(_:_:)())
      {
        uint64_t v59 = Logger.logObject.getter();
        os_log_type_t v60 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v59, v60))
        {
          unint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v61 = 0;
          _os_log_impl((void *)&_mh_execute_header, v59, v60, "Timed out waiting for writeFuture", v61, 2u);
          swift_slowDealloc();
        }
      }
      swift_beginAccess();
      sub_10001D074(v51, (uint64_t)v96, &qword_10163C5F8);
      if (v97)
      {
        sub_10006105C((uint64_t)v96, (uint64_t)v95);
        sub_1000610B8((uint64_t)v95, (uint64_t)v93);
        uint64_t v62 = Logger.logObject.getter();
        os_log_type_t v63 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v62, v63))
        {
          os_log_type_t v64 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = swift_slowAlloc();
          uint64_t v90 = (uint64_t)v15;
          uint64_t v92 = v65;
          *(_DWORD *)os_log_type_t v64 = 136446210;
          uint64_t v66 = sub_101321420();
          uint64_t v91 = sub_1008FA0F0(v66, v67, &v92);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100061288((uint64_t)v93);
          _os_log_impl((void *)&_mh_execute_header, v62, v63, "writeFuture error: %{public}s", v64, 0xCu);
          swift_arrayDestroy();
          uint64_t v15 = (char *)v90;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100061288((uint64_t)v93);
        }

        uint64_t v74 = *(void (**)(uint64_t *))(v84
                                               + OBJC_IVAR____TtCC12searchpartyd24AccessoryMetadataManagerP33_9E4B9D7C2AC40BB201ED52E047F00DA919MetadataCoordinator_writePromise);
        if (v74)
        {
          sub_100061234();
          uint64_t v75 = swift_allocError();
          sub_1000610B8((uint64_t)v95, v76);
          v93[0] = v75;
          __int16 v94 = 256;
          swift_retain();
          v74(v93);
          sub_1000A1534((uint64_t)v74);

          swift_release();
          sub_10001CFB8((uint64_t)v15, v26);
          sub_10001DAB4((uint64_t)v93, &qword_101641708);
          sub_100061288((uint64_t)v95);
LABEL_33:
          swift_release();
          return;
        }
        sub_100061288((uint64_t)v95);

        uint64_t v77 = (uint64_t)v15;
        unint64_t v78 = v26;
      }
      else
      {
        uint64_t v89 = v26;
        swift_retain_n();
        unint64_t v68 = Logger.logObject.getter();
        os_log_type_t v69 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = swift_slowAlloc();
          unint64_t v87 = (char *)swift_slowAlloc();
          v93[0] = (uint64_t)v87;
          *(_DWORD *)uint64_t v70 = 134218242;
          v95[0] = *(void *)(*v80 + 16);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v70 + 12) = 2080;
          unint64_t v86 = (char *)(v70 + 14);
          swift_bridgeObjectRetain();
          uint64_t v71 = Array.description.getter();
          unint64_t v73 = v72;
          swift_bridgeObjectRelease();
          v95[0] = sub_1008FA0F0(v71, v73, v93);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v68, v69, "writeFuture success. writeQueue [%ld] %s", (uint8_t *)v70, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        sub_100302D78(v90, v85, v81);

        uint64_t v77 = (uint64_t)v15;
        unint64_t v78 = v89;
      }
      sub_10001CFB8(v77, v78);
      swift_release();
      goto LABEL_33;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v19 = *(char **)(v10 + 8);
  ((void (*)(char *, uint64_t))v19)(v15, v9);
  if (qword_101636A58 != -1) {
    goto LABEL_35;
  }
LABEL_11:
  uint64_t v40 = type metadata accessor for Logger();
  sub_100010324(v40, (uint64_t)qword_10170DDA8);
  id v41 = a3;
  unint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v90 = swift_slowAlloc();
    v96[0] = v90;
    *(_DWORD *)uint64_t v44 = 141558275;
    v93[0] = 1752392040;
    p_isa = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v44 + 12) = 2081;
    uint64_t v89 = v44 + 14;
    sub_100A3AC74(v13);
    sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v47 = v46;
    ((void (*)(char *, uint64_t))p_isa)(v13, v9);
    v93[0] = sub_1008FA0F0(v45, v47, v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing coordinator for %{private,mask.hash}s", (uint8_t *)v44, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_100303BE4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = a2 + 16;
  swift_beginAccess();
  sub_1003316B0(a1, v5);
  dispatch_group_leave(a3);
}

uint64_t sub_100303C44()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccessoryMetadataManager()
{
  return self;
}

uint64_t sub_100303CC0()
{
  return type metadata accessor for AccessoryMetadataManager.MetadataCoordinator(0);
}

uint64_t type metadata accessor for AccessoryMetadataManager.MetadataCoordinator(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101641470);
}

uint64_t sub_100303CE8()
{
  uint64_t result = type metadata accessor for AccessoryMetadataManager.MetadataInfo(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AccessoryMetadataManager.MetadataInfo(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_1016415E8);
}

uint64_t *sub_100303DC8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    unint64_t v11 = *((void *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v13 = *(void *)v10;
      sub_1000361E0(*(void *)v10, *((void *)v10 + 1));
      *(void *)uint64_t v9 = v13;
      *((void *)v9 + 1) = v11;
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = (char *)a1 + v15;
    uint64_t v20 = (char *)a2 + v15;
    v19[4] = v20[4];
    *(_DWORD *)uint64_t v19 = *(_DWORD *)v20;
    *(_DWORD *)((char *)a1 + a3[8]) = *(_DWORD *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100303F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  unint64_t v6 = v5[1];
  if (v6 >> 60 != 15) {
    sub_10001CFB8(*v5, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100303FA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_1000361E0(*v9, v9[1]);
    *(void *)uint64_t v8 = v11;
    *(void *)(v8 + 8) = v10;
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  *(unsigned char *)(v17 + 4) = *(unsigned char *)(v18 + 4);
  *(_DWORD *)uint64_t v17 = *(_DWORD *)v18;
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100304090(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  if (*(void *)(a1 + v7 + 8) >> 60 != 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v12 = *v9;
      sub_1000361E0(v12, v10);
      uint64_t v13 = *v8;
      unint64_t v14 = v8[1];
      *uint64_t v8 = v12;
      v8[1] = v10;
      sub_10001CFB8(v13, v14);
      goto LABEL_8;
    }
    sub_1001E132C((uint64_t)v8);
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  uint64_t v11 = *v9;
  sub_1000361E0(v11, v10);
  *uint64_t v8 = v11;
  v8[1] = v10;
LABEL_8:
  uint64_t v15 = a3[6];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (int *)(a2 + v18);
  int v21 = *v20;
  *(unsigned char *)(v19 + 4) = *((unsigned char *)v20 + 4);
  *(_DWORD *)uint64_t v19 = v21;
  *(_DWORD *)(a1 + a3[8]) = *(_DWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1003041DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(_DWORD *)uint64_t v10 = *(_DWORD *)v11;
  *(unsigned char *)(v10 + 4) = *(unsigned char *)(v11 + 4);
  *(_DWORD *)(a1 + v9) = *(_DWORD *)(a2 + v9);
  return a1;
}

uint64_t sub_100304284(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (uint64_t *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  unint64_t v10 = *(void *)(a1 + v7 + 8);
  if (v10 >> 60 != 15)
  {
    unint64_t v11 = v9[1];
    if (v11 >> 60 != 15)
    {
      uint64_t v12 = *v8;
      *uint64_t v8 = *v9;
      v8[1] = v11;
      sub_10001CFB8(v12, v10);
      goto LABEL_6;
    }
    sub_1001E132C((uint64_t)v8);
  }
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
LABEL_6:
  uint64_t v13 = a3[6];
  unint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[7];
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
  *(unsigned char *)(v20 + 4) = *(unsigned char *)(v21 + 4);
  *(_DWORD *)(a1 + v19) = *(_DWORD *)(a2 + v19);
  return a1;
}

uint64_t sub_10030438C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003043A0);
}

uint64_t sub_1003043A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100304470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100304484);
}

uint64_t sub_100304484(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t sub_100304544()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1003045FC(uint64_t a1)
{
  sub_10001D074(a1, (uint64_t)v7, &qword_101655B50);
  if (v8)
  {
    sub_10006105C((uint64_t)v7, (uint64_t)v6);
    sub_100061234();
    swift_willThrowTypedImpl();
    sub_10006105C((uint64_t)v6, (uint64_t)v5);
    unint64_t v1 = (void *)swift_allocError();
    sub_10006105C((uint64_t)v5, v2);
    v7[0] = v1;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    swift_willThrowTypedImpl();
    static os_log_type_t.error.getter();
    if (qword_1016372F0 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_101342130;
    uint64_t v4 = _convertErrorToNSError(_:)();
    *(void *)(v3 + 56) = sub_10001D4B0(0, (unint64_t *)&qword_101640E40);
    *(void *)(v3 + 64) = sub_10033149C((unint64_t *)&qword_10163C9B0, (unint64_t *)&qword_101640E40);
    *(void *)(v3 + 32) = v4;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
  }
}

uint64_t sub_1003047E8(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(unsigned char *)(v4 + 24) = 3;
  *(void *)(v4 + 32) = v3;
  sub_10000588C((uint64_t *)&unk_10166C030);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return Future.init(_:)();
}

uint64_t sub_1003048A0(uint64_t a1, char a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(unsigned char *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = v5;
  sub_10000588C((uint64_t *)&unk_10166C030);
  swift_allocObject();
  swift_bridgeObjectRetain();
  return Future.init(_:)();
}

uint64_t sub_100304958(void (*a1)(void), uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v10 = sub_10000588C(&qword_101641650);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AccessoryMetadata(0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v59 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = *(void *)(a3 + 16);
  if (v58)
  {
    int v52 = a4;
    uint64_t v17 = a3 + ((v15[80] + 32) & ~(unint64_t)v15[80]);
    uint64_t v18 = *(int *)(v14 + 20);
    unint64_t v56 = v15;
    uint64_t v57 = v17;
    uint64_t v19 = (uint64_t *)(v17 + v18);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_1000361E0(*v19, v21);
    BOOL v22 = sub_100DC8570(v20, v21);
    sub_10001CFB8(v20, v21);
    if (v22)
    {
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100010324(v23, (uint64_t)qword_10170DDA8);
      char v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        unint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Skip fetching product info for AirTag", v26, 2u);
        swift_slowDealloc();
      }
      goto LABEL_26;
    }
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = a3;
    *(unsigned char *)(v31 + 24) = v52;
    *(void *)(v31 + 32) = a5;
    swift_bridgeObjectRetain();
    sub_10000588C(&qword_101641668);
    unsafeFromAsyncTask<A>(_:)();
    swift_release();
    if (!v62)
    {
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v48 = type metadata accessor for Logger();
      sub_100010324(v48, (uint64_t)qword_10170DDA8);
      char v24 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v24, v28)) {
        goto LABEL_26;
      }
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      uint64_t v30 = "retrieveProductInfo: invalid parameters";
      goto LABEL_25;
    }
    uint64_t v50 = a2;
    uint64_t v51 = a1;
    uint64_t v64 = (uint64_t)v62;
    long long v65 = v63;
    uint64_t v32 = qword_101636A58;
    v49[1] = a3;
    swift_bridgeObjectRetain();
    if (v32 != -1) {
      swift_once();
    }
    uint64_t v34 = 0;
    __int16 v55 = &v61;
    *(void *)&long long v33 = 136315138;
    long long v54 = v33;
    uint64_t v53 = (char *)&type metadata for Any + 8;
    uint64_t v12 = v56;
    uint64_t v35 = (uint64_t)v59;
    while (1)
    {
      uint64_t v36 = v34 + 1;
      if (__OFADD__(v34, 1)) {
        break;
      }
      uint64_t v37 = v57 + *((void *)v12 + 9) * v34;
      uint64_t v38 = type metadata accessor for Logger();
      sub_100010324(v38, (uint64_t)qword_10170DDA8);
      sub_10032FE84(v37, v35, type metadata accessor for AccessoryMetadata);
      unint64_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v39, v40))
      {
        id v41 = (uint8_t *)swift_slowAlloc();
        a1 = (void (*)(void))swift_slowAlloc();
        uint64_t v62 = a1;
        *(_DWORD *)id v41 = v54;
        uint64_t v42 = sub_1001A9070();
        uint64_t v60 = sub_1008FA0F0(v42, v43, (uint64_t *)&v62);
        uint64_t v12 = v56;
        uint64_t v35 = (uint64_t)v59;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1003300FC(v35, type metadata accessor for AccessoryMetadata);
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "retrieveProductInfo: %s", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1003300FC(v35, type metadata accessor for AccessoryMetadata);
      }

      ++v34;
      if (v36 == v58)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = type metadata accessor for Transaction();
        __chkstk_darwin(v44);
        LOBYTE(v49[-4]) = v52;
        v49[-3] = &v64;
        uint64_t v45 = v50;
        v49[-2] = v51;
        v49[-1] = v45;
        static Transaction.named<A>(_:with:)();
        long long v46 = v65;
        swift_bridgeObjectRelease();
        return sub_10001CFB8(v46, *((unint64_t *)&v46 + 1));
      }
    }
    __break(1u);
  }
  else if (qword_101636A58 == -1)
  {
    goto LABEL_9;
  }
  swift_once();
LABEL_9:
  uint64_t v27 = type metadata accessor for Logger();
  sub_100010324(v27, (uint64_t)qword_10170DDA8);
  char v24 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v24, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    uint64_t v30 = "retrieveProductInfo: No metadata found.";
LABEL_25:
    _os_log_impl((void *)&_mh_execute_header, v24, v28, v30, v29, 2u);
    swift_slowDealloc();
  }
LABEL_26:

  type metadata accessor for BluetoothCommunicationCoordinator.Error();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  a1(v12);
  return sub_10001DAB4((uint64_t)v12, &qword_101641650);
}

uint64_t sub_100305054(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 64) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return _swift_task_switch(sub_100305078, 0, 0);
}

uint64_t sub_100305078()
{
  uint64_t v1 = qword_101636A60;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_10170DDC0;
  uint64_t v7 = (char *)&dword_101662DE8 + dword_101662DE8;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10030517C;
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 64);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v7)(v4, 0, v5, v2);
}

uint64_t sub_10030517C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (void *)*v3;
  v4[5] = a1;
  v4[6] = a2;
  v4[7] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_100305280, 0, 0);
}

uint64_t sub_100305280()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 16) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003052A8(uint64_t a1, char a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AccessoryInfoEndPoint();
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v35 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v35 - v20;
  if (a2 == 2) {
    BOOL v22 = (unsigned int *)&enum case for FMNAccountType.thirdPartyAccessory(_:);
  }
  else {
    BOOL v22 = (unsigned int *)&enum case for FMNAccountType.accessory(_:);
  }
  uint64_t v23 = *v22;
  uint64_t v24 = type metadata accessor for FMNAccountType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104))(v19, v23, v24);
  sub_100331978((uint64_t)v19, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AccessoryInfoEndPoint);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v25 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
  uint64_t v26 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v27 = swift_allocObject();
  sub_10032FE84((uint64_t)v21, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AccessoryInfoEndPoint);
  os_log_type_t v28 = (void *)sub_1004A2F80((uint64_t)v16, v26, v27);
  sub_1003300FC((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for AccessoryInfoEndPoint);
  uint64_t v29 = *a3;
  uint64_t v30 = a3[1];
  unint64_t v31 = a3[2];
  swift_bridgeObjectRetain();
  sub_1000361E0(v30, v31);
  sub_1004A94BC(v29, v30, v31, 0, v28);
  swift_bridgeObjectRelease();
  sub_10001CFB8(v30, v31);
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = a1;
  v32[3] = a4;
  v32[4] = a5;
  swift_retain();
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  long long v33 = (void *)swift_allocObject();
  void v33[2] = a1;
  v33[3] = a4;
  v33[4] = a5;
  swift_retain();
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100305640(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v5 = sub_10000588C(&qword_101641650);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  Transaction.capture()();
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100010324(v8, (uint64_t)qword_10170DDA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v16 = a3;
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138543362;
    swift_errorRetain();
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v17 = v12;
    a3 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v12;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Error in product info request %{public}@", v11, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  void *v7 = a1;
  type metadata accessor for BluetoothCommunicationCoordinator.Error();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  a3(v7);
  return sub_10001DAB4((uint64_t)v7, &qword_101641650);
}

uint64_t sub_1003058BC(uint8_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v101 = a4;
  uint64_t v105 = a3;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_10166BFA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryProductInfo();
  uint64_t v108 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v109 = (uint8_t *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v107 = (uint64_t)v90 - v11;
  uint64_t v12 = type metadata accessor for AccessoryInfoResponseContent(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v90 - v17;
  uint64_t v102 = sub_10000588C(&qword_101641650);
  __chkstk_darwin(v102);
  int v100 = (void *)((char *)v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v103 = *(void *)(v20 - 8);
  uint64_t v104 = v20;
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21);
  char v97 = (char *)v90 - v25;
  __chkstk_darwin(v24);
  uint64_t v99 = (char *)v90 - v26;
  uint64_t v27 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v27 - 8);
  Transaction.capture()();
  if (FMNServerInteractionController.FMNResponseFields.statusCode.getter() == 200)
  {
    uint64_t v95 = v13;
    uint64_t v106 = v8;
    uint64_t v28 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v30 = v29;
    static String.Encoding.utf8.getter();
    uint64_t v31 = String.init(data:encoding:)();
    unint64_t v33 = v32;
    sub_10001CFB8(v28, v30);
    uint64_t v92 = v12;
    unint64_t v98 = a1;
    if (v33)
    {
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_100010324(v34, (uint64_t)qword_10170DDA8);
      swift_bridgeObjectRetain();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = v31;
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        *(_DWORD *)uint64_t v38 = 136315138;
        long long v96 = v38 + 4;
        swift_bridgeObjectRetain();
        uint64_t v112 = sub_1008FA0F0(v37, v33, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "response data: %s", v38, 0xCu);
        swift_arrayDestroy();
        a1 = v98;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v49 = v104;
    uint64_t v50 = v99;
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v51 = type metadata accessor for Logger();
    uint64_t v52 = sub_100010324(v51, (uint64_t)qword_10170DDA8);
    uint64_t v53 = v103;
    unint64_t v93 = *(void (**)(char *, uint8_t *, uint64_t))(v103 + 16);
    uint64_t v94 = v103 + 16;
    v93(v50, a1, v49);
    long long v96 = (uint8_t *)v52;
    long long v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      uint64_t v110 = v91;
      *(_DWORD *)unint64_t v56 = 136446210;
      v90[1] = v56 + 4;
      sub_1003300B4((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v112 = sub_1008FA0F0(v57, v58, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
      v59(v99, v49);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "response: %{public}s", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v59 = *(void (**)(char *, uint64_t))(v53 + 8);
      v59(v50, v49);
    }

    type metadata accessor for JSONDecoder();
    swift_allocObject();
    uint64_t v60 = JSONDecoder.init()();
    uint64_t v61 = FMNServerInteractionController.FMNResponseFields.data.getter();
    unint64_t v63 = v62;
    sub_10033015C();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_10001CFB8(v61, v63);
    uint64_t v64 = v110;
    uint64_t v65 = *(void *)(v110 + 16);
    if (v65)
    {
      uint64_t v103 = v60;
      swift_bridgeObjectRetain_n();
      uint64_t v66 = Logger.logObject.getter();
      os_log_type_t v67 = static os_log_type_t.info.getter();
      BOOL v68 = os_log_type_enabled(v66, v67);
      uint64_t v104 = v64;
      if (v68)
      {
        os_log_type_t v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v70 = swift_slowAlloc();
        uint64_t v99 = (char *)v70;
        *(_DWORD *)os_log_type_t v69 = 136315138;
        uint64_t v112 = v70;
        char v97 = (char *)(v69 + 4);
        unint64_t v98 = v69;
        uint64_t v110 = 0;
        unint64_t v111 = 0xE000000000000000;
        swift_bridgeObjectRetain();
        _StringGuts.grow(_:)(34);
        swift_bridgeObjectRelease();
        uint64_t v110 = 0xD000000000000020;
        unint64_t v111 = 0x80000001013F8210;
        swift_bridgeObjectRetain();
        v71._countAndFlagsBits = Array.description.getter();
        String.append(_:)(v71);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v110 = sub_1008FA0F0(v110, v111, &v112);
        uint64_t v64 = v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v66, v67, "decodedResponse: %s", v98, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v80 = v106;
      uint64_t v81 = v64 + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
      uint64_t v82 = *(void *)(v95 + 72);
      uint64_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
      swift_bridgeObjectRetain();
      uint64_t v84 = _swiftEmptyArrayStorage;
      do
      {
        sub_10032FE84(v81, (uint64_t)v18, type metadata accessor for AccessoryInfoResponseContent);
        sub_10032FE84((uint64_t)v18, (uint64_t)v16, type metadata accessor for AccessoryInfoResponseContent);
        sub_1011DF578((uint64_t)v16, (uint64_t)v7);
        sub_1003300FC((uint64_t)v18, type metadata accessor for AccessoryInfoResponseContent);
        if ((*v83)(v7, 1, v80) == 1)
        {
          sub_10001DAB4((uint64_t)v7, (uint64_t *)&unk_10166BFA0);
        }
        else
        {
          uint64_t v85 = v107;
          sub_100331978((uint64_t)v7, v107, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          sub_100331978(v85, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v84 = (void *)sub_100A70294(0, v84[2] + 1, 1, (unint64_t)v84);
          }
          unint64_t v87 = v84[2];
          unint64_t v86 = v84[3];
          if (v87 >= v86 >> 1) {
            uint64_t v84 = (void *)sub_100A70294(v86 > 1, v87 + 1, 1, (unint64_t)v84);
          }
          v84[2] = v87 + 1;
          sub_100331978((uint64_t)v109, (uint64_t)v84+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v87, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          uint64_t v80 = v106;
        }
        v81 += v82;
        --v65;
      }
      while (v65);
      swift_bridgeObjectRelease_n();
      uint64_t v47 = (uint64_t)v100;
      void *v100 = v84;
      swift_storeEnumTagMultiPayload();
      v105(v47);
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v72 = v97;
      uint64_t v73 = v104;
      v93(v97, v98, v104);
      uint64_t v74 = Logger.logObject.getter();
      os_log_type_t v75 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = (uint8_t *)swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        *(_DWORD *)uint64_t v76 = 136446210;
        uint64_t v109 = v76 + 4;
        uint64_t v110 = v77;
        sub_1003300B4((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v112 = sub_1008FA0F0(v78, v79, &v110);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v59(v72, v73);
        _os_log_impl((void *)&_mh_execute_header, v74, v75, "invalidResponse: %{public}s", v76, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v59(v72, v73);
      }

      os_log_type_t v88 = v105;
      uint64_t v47 = (uint64_t)v100;
      type metadata accessor for BluetoothCommunicationCoordinator.Error();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      v88(v47);
    }
    swift_release();
  }
  else
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100010324(v39, (uint64_t)qword_10170DDA8);
    uint64_t v40 = v103;
    uint64_t v41 = v104;
    (*(void (**)(char *, uint8_t *, uint64_t))(v103 + 16))(v23, a1, v104);
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v110 = swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 136315138;
      sub_1003300B4((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
      uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v112 = sub_1008FA0F0(v45, v46, &v110);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Product info check failed: %s", v44, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v23, v41);
    }

    uint64_t v47 = (uint64_t)v100;
    uint64_t v48 = v105;
    type metadata accessor for BluetoothCommunicationCoordinator.Error();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    v48(v47);
  }
  return sub_10001DAB4(v47, &qword_101641650);
}

uint64_t sub_100306958()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_1016412B8);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_1016412B8);
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170DDA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100306A20()
{
  if (qword_101636A68 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100010324(v0, (uint64_t)qword_1016412B8);
}

uint64_t sub_100306A84()
{
  uint64_t v0 = type metadata accessor for UUID();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  uint64_t result = WorkItemQueue.__allocating_init(name:identifier:)();
  qword_1016412D0 = result;
  return result;
}

uint64_t sub_100306B24(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 176) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  uint64_t v4 = type metadata accessor for CentralManager.State();
  *(void *)(v3 + 32) = v4;
  *(void *)(v3 + 40) = *(void *)(v4 - 8);
  *(void *)(v3 + 48) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101665590);
  *(void *)(v3 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_100306C18, 0, 0);
}

uint64_t sub_100306C18()
{
  uint64_t v1 = v0[7];
  v0[8] = type metadata accessor for CentralManager();
  uint64_t v2 = type metadata accessor for CentralManager.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100306D08;
  uint64_t v4 = v0[7];
  return CentralManager.__allocating_init(options:)(v4);
}

uint64_t sub_100306D08(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100306E08, 0, 0);
}

uint64_t sub_100306E08()
{
  (*(void (**)(void, void, void))(v0[5] + 104))(v0[6], enum case for CentralManager.State.poweredOn(_:), v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  uint64_t v2 = sub_1003300B4(&qword_101639A90, (void (*)(uint64_t))&type metadata accessor for CentralManager);
  *uint64_t v1 = v0;
  v1[1] = sub_100306F04;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  return CentralManagerProtocol.await(state:)(v4, v3, v2);
}

uint64_t sub_100306F04()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[6];
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[4];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    return _swift_task_switch(sub_100307724, 0, 0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:)
                                          + async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:));
    uint64_t v7 = (void *)swift_task_alloc();
    v2[13] = v7;
    void *v7 = v3;
    v7[1] = sub_1003070FC;
    uint64_t v8 = v2[3];
    return v10(v8);
  }
}

uint64_t sub_1003070FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100307798;
  }
  else {
    uint64_t v4 = sub_100307210;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100307210()
{
  uint64_t v1 = *(void *)(v0 + 112);
  if (v1)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_101641678 + dword_101641678);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    void *v2 = v0;
    v2[1] = sub_1003073E4;
    uint64_t v3 = *(void *)(v0 + 16);
    char v4 = *(unsigned char *)(v0 + 176);
    return v11(v3, v1, v4);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 24);
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = type metadata accessor for MACAddress();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v6, v9);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1003073E4()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    v2[19] = v0;
    uint64_t v7 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                           + async function pointer to dispatch thunk of Peripheral.cancelConnection());
    char v4 = (void *)swift_task_alloc();
    v2[20] = v4;
    *char v4 = v3;
    uint64_t v5 = sub_10030780C;
  }
  else
  {
    uint64_t v7 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                           + async function pointer to dispatch thunk of Peripheral.cancelConnection());
    char v4 = (void *)swift_task_alloc();
    v2[17] = v4;
    *char v4 = v3;
    uint64_t v5 = sub_100307584;
  }
  v4[1] = v5;
  return v7();
}

uint64_t sub_100307584()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003079B4;
  }
  else {
    uint64_t v2 = sub_100307698;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100307698()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307724()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307798()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10030780C()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100307A7C;
  }
  else {
    uint64_t v2 = sub_100307920;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100307920()
{
  swift_willThrow();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003079B4()
{
  sub_1003300FC(v0[2], type metadata accessor for RawAccessoryMetadata);
  v0[19] = v0[18];
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                         + async function pointer to dispatch thunk of Peripheral.cancelConnection());
  uint64_t v1 = (void *)swift_task_alloc();
  v0[20] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10030780C;
  return v3();
}

uint64_t sub_100307A7C()
{
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100307B08(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 1496) = a3;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = a2;
  uint64_t v4 = type metadata accessor for CentralManager.Error();
  *(void *)(v3 + 216) = v4;
  *(void *)(v3 + 224) = *(void *)(v4 - 8);
  *(void *)(v3 + 232) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  *(void *)(v3 + 240) = v5;
  *(void *)(v3 + 248) = *(void *)(v5 - 8);
  *(void *)(v3 + 256) = swift_task_alloc();
  uint64_t v6 = sub_10000588C(&qword_10163D210);
  *(void *)(v3 + 264) = v6;
  *(void *)(v3 + 272) = *(void *)(v6 - 8);
  *(void *)(v3 + 280) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Duration.UnitsFormatStyle.Unit();
  *(void *)(v3 + 288) = v7;
  *(void *)(v3 + 296) = *(void *)(v7 - 8);
  *(void *)(v3 + 304) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  *(void *)(v3 + 312) = v8;
  *(void *)(v3 + 320) = *(void *)(v8 - 8);
  *(void *)(v3 + 328) = swift_task_alloc();
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_1016654A0);
  *(void *)(v3 + 336) = v9;
  *(void *)(v3 + 344) = *(void *)(v9 - 8);
  *(void *)(v3 + 352) = swift_task_alloc();
  *(void *)(v3 + 360) = swift_task_alloc();
  *(void *)(v3 + 368) = swift_task_alloc();
  *(void *)(v3 + 376) = swift_task_alloc();
  *(void *)(v3 + 384) = swift_task_alloc();
  *(void *)(v3 + 392) = swift_task_alloc();
  *(void *)(v3 + 400) = swift_task_alloc();
  *(void *)(v3 + 408) = swift_task_alloc();
  *(void *)(v3 + 416) = swift_task_alloc();
  *(void *)(v3 + 424) = swift_task_alloc();
  *(void *)(v3 + 432) = swift_task_alloc();
  uint64_t v10 = sub_10000588C(&qword_101639C68);
  *(void *)(v3 + 440) = v10;
  *(void *)(v3 + 448) = *(void *)(v10 - 8);
  *(void *)(v3 + 456) = swift_task_alloc();
  *(void *)(v3 + 464) = swift_task_alloc();
  *(void *)(v3 + 472) = swift_task_alloc();
  *(void *)(v3 + 480) = swift_task_alloc();
  *(void *)(v3 + 488) = swift_task_alloc();
  *(void *)(v3 + 496) = swift_task_alloc();
  *(void *)(v3 + 504) = swift_task_alloc();
  *(void *)(v3 + 512) = swift_task_alloc();
  *(void *)(v3 + 520) = swift_task_alloc();
  *(void *)(v3 + 528) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ContinuousClock.Instant();
  *(void *)(v3 + 536) = v11;
  *(void *)(v3 + 544) = *(void *)(v11 - 8);
  *(void *)(v3 + 552) = swift_task_alloc();
  *(void *)(v3 + 560) = swift_task_alloc();
  *(void *)(v3 + 568) = swift_task_alloc();
  *(void *)(v3 + 576) = swift_task_alloc();
  uint64_t v12 = sub_10000588C(&qword_101639A70);
  *(void *)(v3 + 584) = v12;
  *(void *)(v3 + 592) = *(void *)(v12 - 8);
  *(void *)(v3 + 600) = swift_task_alloc();
  uint64_t v13 = type metadata accessor for ContinuousClock();
  *(void *)(v3 + 608) = v13;
  *(void *)(v3 + 616) = *(void *)(v13 - 8);
  *(void *)(v3 + 624) = swift_task_alloc();
  return _swift_task_switch(sub_10030802C, 0, 0);
}

uint64_t sub_10030802C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 1496);
  ContinuousClock.init()();
  if (v1 >= 2)
  {
    type metadata accessor for Service();
    Identifier.init(stringLiteral:)();
    ContinuousClock.now.getter();
    static Task<>.checkCancellation()();
    uint64_t v5 = type metadata accessor for Peripheral();
    *(void *)(v0 + 632) = v5;
    uint64_t v6 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    *(void *)(v0 + 640) = v6;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 648) = v7;
    void *v7 = v0;
    v7[1] = sub_1003084E8;
    return dispatch thunk of PeripheralProtocol.connect()(v5, v6);
  }
  else
  {
    sub_100061234();
    swift_allocError();
    *(void *)uint64_t v2 = 2;
    *(_OWORD *)(v2 + 8) = 0u;
    *(_OWORD *)(v2 + 24) = 0u;
    *(unsigned char *)(v2 + 40) = 11;
    swift_willThrow();
    (*(void (**)(void, void))(*(void *)(v0 + 616) + 8))(*(void *)(v0 + 624), *(void *)(v0 + 608));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1003084E8()
{
  uint64_t v2 = (void *)*v1;
  v2[82] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100308780, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[83] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_100308668;
    uint64_t v4 = v2[80];
    uint64_t v5 = v2[79];
    uint64_t v6 = v2[75];
    return dispatch thunk of PeripheralProtocol.subscript.getter(v6, v5, v4);
  }
}

uint64_t sub_100308668(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 672) = a1;
  *(void *)(v3 + 680) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100308D34;
  }
  else {
    uint64_t v4 = sub_10030888C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100308780()
{
  (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
  v0[184] = v0[82];
  uint64_t v1 = type metadata accessor for Peripheral();
  uint64_t v2 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[185] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v1, v2);
}

uint64_t sub_10030888C()
{
  uint64_t v1 = v0[85];
  static Task<>.checkCancellation()();
  if (v1)
  {
    (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
    swift_release();
    v0[184] = v1;
    uint64_t v2 = type metadata accessor for Peripheral();
    uint64_t v3 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[185] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v2, v3);
  }
  else
  {
    uint64_t v5 = 11;
    uint64_t v6 = v0[43];
    sub_1000B6F60(0, 11, 0);
    uint64_t v7 = &byte_10159F588;
    do
    {
      ++v7;
      type metadata accessor for Characteristic();
      Identifier.init(stringLiteral:)();
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1000B6F60(v8 > 1, v9 + 1, 1);
      }
      uint64_t v10 = v0[44];
      uint64_t v11 = v0[42];
      _swiftEmptyArrayStorage[2] = v9 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))((char *)_swiftEmptyArrayStorage+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v9, v10, v11);
      --v5;
    }
    while (v5);
    v0[86] = _swiftEmptyArrayStorage;
    uint64_t v12 = type metadata accessor for Service();
    v0[87] = v12;
    uint64_t v13 = sub_1003300B4(&qword_101639AD0, (void (*)(uint64_t))&type metadata accessor for Service);
    v0[88] = v13;
    uint64_t v14 = (void *)swift_task_alloc();
    v0[89] = v14;
    void *v14 = v0;
    v14[1] = sub_100308E40;
    return dispatch thunk of ServiceProtocol.discover(characteristicIdentifiers:)(_swiftEmptyArrayStorage, v12, v13);
  }
}

uint64_t sub_100308D34()
{
  (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
  v0[184] = v0[85];
  uint64_t v1 = type metadata accessor for Peripheral();
  uint64_t v2 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[185] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v1, v2);
}

uint64_t sub_100308E40()
{
  *(void *)(*(void *)v1 + 720) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v2 = sub_100309158;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100308F8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100308F8C()
{
  uint64_t v1 = v0[90];
  static Task<>.checkCancellation()();
  if (v1)
  {
    (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
    swift_release();
    v0[184] = v1;
    uint64_t v2 = type metadata accessor for Peripheral();
    uint64_t v3 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[185] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v2, v3);
  }
  else
  {
    v0[91] = type metadata accessor for Characteristic();
    Identifier.init(stringLiteral:)();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[92] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100309274;
    uint64_t v6 = v0[88];
    uint64_t v7 = v0[87];
    uint64_t v8 = v0[54];
    return dispatch thunk of ServiceProtocol.subscript.getter(v8, v7, v6);
  }
}

uint64_t sub_100309158()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[184] = v0[90];
  uint64_t v4 = type metadata accessor for Peripheral();
  uint64_t v5 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[185] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v4, v5);
}

uint64_t sub_100309274(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[93] = a1;
  v3[94] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[54];
  uint64_t v6 = v3[43];
  uint64_t v7 = v3[42];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    return _swift_task_switch(sub_100309684, 0, 0);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v3[95] = v8;
    v3[96] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v8(v5, v7);
    uint64_t v9 = sub_1003300B4(&qword_101639AE8, (void (*)(uint64_t))&type metadata accessor for Characteristic);
    v3[97] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v3[98] = v10;
    void *v10 = v4;
    v10[1] = sub_1003094B8;
    uint64_t v11 = v3[91];
    uint64_t v12 = v3[66];
    return dispatch thunk of CharacteristicProtocol.read()(v12, v11, v9);
  }
}

uint64_t sub_1003094B8()
{
  uint64_t v2 = (void *)*v1;
  v2[99] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_100309924, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[100] = v3;
    uint64_t v4 = sub_100062734(&qword_101665560, &qword_101639C68);
    v2[101] = v4;
    *uint64_t v3 = v2;
    v3[1] = sub_1003097A0;
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 4, v5, v4);
  }
}

uint64_t sub_100309684()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[184] = v0[94];
  uint64_t v4 = type metadata accessor for Peripheral();
  uint64_t v5 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[185] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v4, v5);
}

uint64_t sub_1003097A0()
{
  uint64_t v2 = (void *)*v1;
  v2[102] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[66];
  uint64_t v4 = v2[56];
  uint64_t v5 = v2[55];
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v6 = v4 + 8;
  uint64_t v7 = v8;
  if (v0)
  {
    v7(v3, v5);
    uint64_t v9 = sub_100309C20;
  }
  else
  {
    v2[103] = v7;
    v2[104] = v6 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v7(v3, v5);
    uint64_t v9 = sub_100309A40;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_100309924()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[184] = v0[99];
  uint64_t v4 = type metadata accessor for Peripheral();
  uint64_t v5 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[185] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v4, v5);
}

uint64_t sub_100309A40()
{
  uint64_t v1 = v0[102];
  uint64_t v3 = v0[4];
  unint64_t v2 = v0[5];
  v0[105] = v3;
  v0[106] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
    sub_100037A24(v3, v2);
    swift_release();
    v0[184] = v1;
    uint64_t v4 = type metadata accessor for Peripheral();
    uint64_t v5 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[185] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v4, v5);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[107] = v7;
    void *v7 = v0;
    v7[1] = sub_100309D3C;
    uint64_t v8 = v0[88];
    uint64_t v9 = v0[87];
    uint64_t v10 = v0[53];
    return dispatch thunk of ServiceProtocol.subscript.getter(v10, v9, v8);
  }
}

uint64_t sub_100309C20()
{
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v0[184] = v0[102];
  uint64_t v4 = type metadata accessor for Peripheral();
  uint64_t v5 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[185] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v4, v5);
}

uint64_t sub_100309D3C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[108] = a1;
  v3[109] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[53];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030A0D0, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[110] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_100309F30;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[65];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_100309F30()
{
  uint64_t v2 = (void *)*v1;
  v2[111] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030A378, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[112] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10030A208;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 6, v5, v4);
  }
}

uint64_t sub_10030A0D0()
{
  unint64_t v1 = v0[106];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[72];
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[67];
  swift_release();
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v0[184] = v0[109];
  uint64_t v6 = type metadata accessor for Peripheral();
  uint64_t v7 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[185] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v6, v7);
}

uint64_t sub_10030A208()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 904) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 520), *(void *)(v2 + 440));
  if (v0) {
    uint64_t v3 = sub_10030A6B0;
  }
  else {
    uint64_t v3 = sub_10030A4B0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030A378()
{
  unint64_t v1 = v0[106];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[72];
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[67];
  swift_release();
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v0[184] = v0[111];
  uint64_t v6 = type metadata accessor for Peripheral();
  uint64_t v7 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[185] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v6, v7);
}

uint64_t sub_10030A4B0()
{
  uint64_t v1 = v0[113];
  uint64_t v3 = v0[6];
  unint64_t v2 = v0[7];
  v0[114] = v3;
  v0[115] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    unint64_t v4 = v0[106];
    uint64_t v5 = v0[105];
    (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
    sub_100037A24(v3, v2);
    sub_100037A24(v5, v4);
    swift_release();
    v0[184] = v1;
    uint64_t v6 = type metadata accessor for Peripheral();
    uint64_t v7 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[185] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v6, v7);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[116] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10030A7E8;
    uint64_t v10 = v0[88];
    uint64_t v11 = v0[87];
    uint64_t v12 = v0[52];
    return dispatch thunk of ServiceProtocol.subscript.getter(v12, v11, v10);
  }
}

uint64_t sub_10030A6B0()
{
  unint64_t v1 = v0[106];
  uint64_t v2 = v0[105];
  uint64_t v3 = v0[72];
  uint64_t v4 = v0[68];
  uint64_t v5 = v0[67];
  swift_release();
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  v0[184] = v0[113];
  uint64_t v6 = type metadata accessor for Peripheral();
  uint64_t v7 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[185] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v6, v7);
}

uint64_t sub_10030A7E8(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[117] = a1;
  v3[118] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[52];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030AB7C, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[119] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030A9DC;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[64];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030A9DC()
{
  uint64_t v2 = (void *)*v1;
  v2[120] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030AE40, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[121] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10030ACD0;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 8, v5, v4);
  }
}

uint64_t sub_10030AB7C()
{
  unint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  unint64_t v3 = v0[106];
  uint64_t v4 = v0[105];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  swift_release();
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v0[184] = v0[118];
  uint64_t v8 = type metadata accessor for Peripheral();
  uint64_t v9 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[185] = v10;
  void *v10 = v0;
  v10[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v8, v9);
}

uint64_t sub_10030ACD0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 976) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 512), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10030B1B4;
  }
  else {
    unint64_t v3 = sub_10030AF94;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030AE40()
{
  unint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  unint64_t v3 = v0[106];
  uint64_t v4 = v0[105];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  swift_release();
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v0[184] = v0[120];
  uint64_t v8 = type metadata accessor for Peripheral();
  uint64_t v9 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[185] = v10;
  void *v10 = v0;
  v10[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v8, v9);
}

uint64_t sub_10030AF94()
{
  uint64_t v1 = v0[122];
  uint64_t v3 = v0[8];
  unint64_t v2 = v0[9];
  v0[123] = v3;
  v0[124] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    unint64_t v4 = v0[115];
    uint64_t v5 = v0[114];
    unint64_t v6 = v0[106];
    uint64_t v7 = v0[105];
    (*(void (**)(void, void))(v0[68] + 8))(v0[72], v0[67]);
    sub_100037A24(v3, v2);
    sub_100037A24(v5, v4);
    sub_100037A24(v7, v6);
    swift_release();
    v0[184] = v1;
    uint64_t v8 = type metadata accessor for Peripheral();
    uint64_t v9 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[185] = v10;
    void *v10 = v0;
    v10[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v8, v9);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[125] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10030B308;
    uint64_t v12 = v0[88];
    uint64_t v13 = v0[87];
    uint64_t v14 = v0[51];
    return dispatch thunk of ServiceProtocol.subscript.getter(v14, v13, v12);
  }
}

uint64_t sub_10030B1B4()
{
  unint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  unint64_t v3 = v0[106];
  uint64_t v4 = v0[105];
  uint64_t v5 = v0[72];
  uint64_t v6 = v0[68];
  uint64_t v7 = v0[67];
  swift_release();
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  v0[184] = v0[122];
  uint64_t v8 = type metadata accessor for Peripheral();
  uint64_t v9 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[185] = v10;
  void *v10 = v0;
  v10[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v8, v9);
}

uint64_t sub_10030B308(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[126] = a1;
  v3[127] = v1;
  swift_task_dealloc();
  uint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[51];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030B694, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[128] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030B4FC;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[63];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030B4FC()
{
  uint64_t v2 = (void *)*v1;
  v2[129] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10030BBC8, 0, 0);
  }
  else
  {
    swift_release();
    unint64_t v3 = (void *)swift_task_alloc();
    v2[130] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_10030BA58;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 10, v5, v4);
  }
}

uint64_t sub_10030B694()
{
  uint64_t v1 = *(void *)(v0 + 1016);
  *(void *)(v0 + 184) = v1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 224) + 88))(*(void *)(v0 + 232), *(void *)(v0 + 216)) == enum case for CentralManager.Error.missingCharacteristic(_:))
    {
      swift_errorRelease();
      swift_errorRelease();
      *(_OWORD *)(v0 + 1056) = xmmword_101347BB0;
      static Task<>.checkCancellation()();
      Identifier.init(stringLiteral:)();
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1072) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_10030C594;
      uint64_t v22 = *(void *)(v0 + 704);
      uint64_t v23 = *(void *)(v0 + 696);
      uint64_t v24 = *(void *)(v0 + 400);
      return dispatch thunk of ServiceProtocol.subscript.getter(v24, v23, v22);
    }
    uint64_t v10 = *(void *)(v0 + 984);
    unint64_t v11 = *(void *)(v0 + 920);
    uint64_t v12 = *(void *)(v0 + 912);
    unint64_t v13 = *(void *)(v0 + 848);
    uint64_t v14 = *(void *)(v0 + 840);
    uint64_t v26 = *(void *)(v0 + 576);
    unint64_t v27 = *(void *)(v0 + 992);
    uint64_t v15 = *(void *)(v0 + 544);
    uint64_t v16 = *(void *)(v0 + 536);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v30 = *(void *)(v0 + 232);
    swift_release();
    sub_100037A24(v14, v13);
    sub_100037A24(v12, v11);
    sub_100037A24(v10, v27);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v30, v28);
  }
  else
  {
    unint64_t v29 = *(void *)(v0 + 992);
    uint64_t v2 = *(void *)(v0 + 984);
    unint64_t v3 = *(void *)(v0 + 920);
    uint64_t v4 = *(void *)(v0 + 912);
    unint64_t v5 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 576);
    uint64_t v8 = *(void *)(v0 + 544);
    uint64_t v9 = *(void *)(v0 + 536);
    swift_release();
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v3);
    sub_100037A24(v2, v29);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_errorRelease();
  *(void *)(v0 + 1472) = v1;
  uint64_t v18 = type metadata accessor for Peripheral();
  uint64_t v19 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 1480) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v18, v19);
}

uint64_t sub_10030BA58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1048) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 504), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10030C1D0;
  }
  else {
    unint64_t v3 = sub_10030BF94;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030BBC8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 1032);
  *(void *)(v0 + 184) = v1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 224) + 88))(*(void *)(v0 + 232), *(void *)(v0 + 216)) == enum case for CentralManager.Error.missingCharacteristic(_:))
    {
      swift_errorRelease();
      swift_errorRelease();
      *(_OWORD *)(v0 + 1056) = xmmword_101347BB0;
      static Task<>.checkCancellation()();
      Identifier.init(stringLiteral:)();
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1072) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_10030C594;
      uint64_t v22 = *(void *)(v0 + 704);
      uint64_t v23 = *(void *)(v0 + 696);
      uint64_t v24 = *(void *)(v0 + 400);
      return dispatch thunk of ServiceProtocol.subscript.getter(v24, v23, v22);
    }
    uint64_t v10 = *(void *)(v0 + 984);
    unint64_t v11 = *(void *)(v0 + 920);
    uint64_t v12 = *(void *)(v0 + 912);
    unint64_t v13 = *(void *)(v0 + 848);
    uint64_t v14 = *(void *)(v0 + 840);
    uint64_t v26 = *(void *)(v0 + 576);
    unint64_t v27 = *(void *)(v0 + 992);
    uint64_t v15 = *(void *)(v0 + 544);
    uint64_t v16 = *(void *)(v0 + 536);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v30 = *(void *)(v0 + 232);
    swift_release();
    sub_100037A24(v14, v13);
    sub_100037A24(v12, v11);
    sub_100037A24(v10, v27);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v30, v28);
  }
  else
  {
    unint64_t v29 = *(void *)(v0 + 992);
    uint64_t v2 = *(void *)(v0 + 984);
    unint64_t v3 = *(void *)(v0 + 920);
    uint64_t v4 = *(void *)(v0 + 912);
    unint64_t v5 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 576);
    uint64_t v8 = *(void *)(v0 + 544);
    uint64_t v9 = *(void *)(v0 + 536);
    swift_release();
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v3);
    sub_100037A24(v2, v29);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_errorRelease();
  *(void *)(v0 + 1472) = v1;
  uint64_t v18 = type metadata accessor for Peripheral();
  uint64_t v19 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 1480) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v18, v19);
}

uint64_t sub_10030BF94()
{
  uint64_t v2 = v0[10];
  unint64_t v1 = v0[11];
  uint64_t v3 = v0[131];
  v0[133] = v1;
  v0[132] = v2;
  static Task<>.checkCancellation()();
  if (v3)
  {
    uint64_t v4 = v0[123];
    unint64_t v5 = v0[115];
    uint64_t v6 = v0[114];
    unint64_t v7 = v0[106];
    uint64_t v8 = v0[105];
    uint64_t v20 = v0[72];
    uint64_t v9 = v0[68];
    unint64_t v18 = v0[124];
    uint64_t v19 = v0[67];
    swift_release();
    sub_100037A24(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v18);
    sub_100037A24(v2, v1);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v19);
    v0[184] = v3;
    uint64_t v10 = type metadata accessor for Peripheral();
    uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[185] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    unint64_t v13 = (void *)swift_task_alloc();
    v0[134] = v13;
    *unint64_t v13 = v0;
    v13[1] = sub_10030C594;
    uint64_t v14 = v0[88];
    uint64_t v15 = v0[87];
    uint64_t v16 = v0[50];
    return dispatch thunk of ServiceProtocol.subscript.getter(v16, v15, v14);
  }
}

uint64_t sub_10030C1D0()
{
  uint64_t v1 = *(void *)(v0 + 1048);
  *(void *)(v0 + 184) = v1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if (swift_dynamicCast())
  {
    if ((*(unsigned int (**)(void, void))(*(void *)(v0 + 224) + 88))(*(void *)(v0 + 232), *(void *)(v0 + 216)) == enum case for CentralManager.Error.missingCharacteristic(_:))
    {
      swift_errorRelease();
      swift_errorRelease();
      *(_OWORD *)(v0 + 1056) = xmmword_101347BB0;
      static Task<>.checkCancellation()();
      Identifier.init(stringLiteral:)();
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 1072) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_10030C594;
      uint64_t v22 = *(void *)(v0 + 704);
      uint64_t v23 = *(void *)(v0 + 696);
      uint64_t v24 = *(void *)(v0 + 400);
      return dispatch thunk of ServiceProtocol.subscript.getter(v24, v23, v22);
    }
    uint64_t v10 = *(void *)(v0 + 984);
    unint64_t v11 = *(void *)(v0 + 920);
    uint64_t v12 = *(void *)(v0 + 912);
    unint64_t v13 = *(void *)(v0 + 848);
    uint64_t v14 = *(void *)(v0 + 840);
    uint64_t v26 = *(void *)(v0 + 576);
    unint64_t v27 = *(void *)(v0 + 992);
    uint64_t v15 = *(void *)(v0 + 544);
    uint64_t v16 = *(void *)(v0 + 536);
    uint64_t v17 = *(void *)(v0 + 224);
    uint64_t v28 = *(void *)(v0 + 216);
    uint64_t v30 = *(void *)(v0 + 232);
    swift_release();
    sub_100037A24(v14, v13);
    sub_100037A24(v12, v11);
    sub_100037A24(v10, v27);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v26, v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v30, v28);
  }
  else
  {
    unint64_t v29 = *(void *)(v0 + 992);
    uint64_t v2 = *(void *)(v0 + 984);
    unint64_t v3 = *(void *)(v0 + 920);
    uint64_t v4 = *(void *)(v0 + 912);
    unint64_t v5 = *(void *)(v0 + 848);
    uint64_t v6 = *(void *)(v0 + 840);
    uint64_t v7 = *(void *)(v0 + 576);
    uint64_t v8 = *(void *)(v0 + 544);
    uint64_t v9 = *(void *)(v0 + 536);
    swift_release();
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v3);
    sub_100037A24(v2, v29);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  }
  swift_errorRelease();
  *(void *)(v0 + 1472) = v1;
  uint64_t v18 = type metadata accessor for Peripheral();
  uint64_t v19 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 1480) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v18, v19);
}

uint64_t sub_10030C594(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[135] = a1;
  v3[136] = v1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[50];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030C928, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[137] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030C788;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[62];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030C788()
{
  uint64_t v2 = (void *)*v1;
  v2[138] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030CC1C, 0, 0);
  }
  else
  {
    swift_release();
    unint64_t v3 = (void *)swift_task_alloc();
    v2[139] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_10030CAAC;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 2, v5, v4);
  }
}

uint64_t sub_10030C928()
{
  uint64_t v14 = v0[132];
  unint64_t v15 = v0[133];
  unint64_t v1 = v0[124];
  uint64_t v2 = v0[123];
  unint64_t v3 = v0[115];
  uint64_t v4 = v0[114];
  unint64_t v5 = v0[106];
  uint64_t v6 = v0[105];
  uint64_t v7 = v0[72];
  uint64_t v8 = v0[68];
  uint64_t v9 = v0[67];
  swift_release();
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v0[184] = v0[136];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030CAAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1120) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 496), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10030CFF0;
  }
  else {
    unint64_t v3 = sub_10030CDA0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030CC1C()
{
  uint64_t v14 = v0[132];
  unint64_t v15 = v0[133];
  unint64_t v1 = v0[124];
  uint64_t v2 = v0[123];
  unint64_t v3 = v0[115];
  uint64_t v4 = v0[114];
  unint64_t v5 = v0[106];
  uint64_t v6 = v0[105];
  uint64_t v7 = v0[72];
  uint64_t v8 = v0[68];
  uint64_t v9 = v0[67];
  swift_release();
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v0[184] = v0[138];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030CDA0()
{
  uint64_t v1 = v0[140];
  uint64_t v3 = v0[2];
  unint64_t v2 = v0[3];
  v0[141] = v3;
  v0[142] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v21 = v0[132];
    unint64_t v22 = v0[133];
    uint64_t v4 = v0[123];
    unint64_t v5 = v0[115];
    uint64_t v6 = v0[114];
    unint64_t v7 = v0[106];
    uint64_t v8 = v0[105];
    uint64_t v20 = v0[72];
    uint64_t v9 = v0[68];
    unint64_t v18 = v0[124];
    uint64_t v19 = v0[67];
    swift_release();
    sub_100037A24(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v18);
    sub_100037A24(v3, v2);
    sub_100037A24(v21, v22);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v19);
    v0[184] = v1;
    uint64_t v10 = type metadata accessor for Peripheral();
    uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[185] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[143] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10030D174;
    uint64_t v14 = v0[88];
    uint64_t v15 = v0[87];
    uint64_t v16 = v0[49];
    return dispatch thunk of ServiceProtocol.subscript.getter(v16, v15, v14);
  }
}

uint64_t sub_10030CFF0()
{
  uint64_t v14 = v0[132];
  unint64_t v15 = v0[133];
  unint64_t v1 = v0[124];
  uint64_t v2 = v0[123];
  unint64_t v3 = v0[115];
  uint64_t v4 = v0[114];
  unint64_t v5 = v0[106];
  uint64_t v6 = v0[105];
  uint64_t v7 = v0[72];
  uint64_t v8 = v0[68];
  uint64_t v9 = v0[67];
  swift_release();
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  v0[184] = v0[140];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030D174(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[144] = a1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[49];
  uint64_t v7 = v3[42];
  if (v1)
  {
    swift_errorRelease();
    v5(v6, v7);
    return _swift_task_switch(sub_10030D52C, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[145] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030D388;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[61];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030D388()
{
  uint64_t v2 = (void *)*v1;
  unint64_t v3 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    swift_errorRelease();
    return _swift_task_switch(sub_100333034, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (void *)swift_task_alloc();
    v2[146] = v4;
    *uint64_t v4 = v3;
    v4[1] = sub_10030D790;
    uint64_t v5 = v2[101];
    uint64_t v6 = v2[55];
    return AsyncSequence.first()(v2 + 16, v6, v5);
  }
}

uint64_t sub_10030D52C()
{
  *(_OWORD *)(v0 + 1184) = xmmword_101347BB0;
  static Task<>.checkCancellation()();
  Identifier.init(stringLiteral:)();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1200) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10030DB88;
  uint64_t v2 = *(void *)(v0 + 704);
  uint64_t v3 = *(void *)(v0 + 696);
  uint64_t v4 = *(void *)(v0 + 384);
  return dispatch thunk of ServiceProtocol.subscript.getter(v4, v3, v2);
}

uint64_t sub_10030D790()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1176) = v0;
  swift_task_dealloc();
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v2[103];
  uint64_t v4 = v2[61];
  uint64_t v5 = v2[55];
  if (v0)
  {
    swift_errorRelease();
    v3(v4, v5);
    uint64_t v6 = sub_100333034;
  }
  else
  {
    v3(v4, v5);
    uint64_t v6 = sub_10030D924;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10030D924()
{
  uint64_t v2 = v0[16];
  unint64_t v1 = v0[17];
  uint64_t v3 = v0[147];
  v0[149] = v1;
  v0[148] = v2;
  static Task<>.checkCancellation()();
  if (v3)
  {
    uint64_t v19 = v0[141];
    unint64_t v20 = v0[142];
    uint64_t v23 = v0[132];
    unint64_t v24 = v0[133];
    unint64_t v18 = v0[124];
    uint64_t v4 = v0[123];
    unint64_t v5 = v0[115];
    uint64_t v6 = v0[114];
    unint64_t v7 = v0[106];
    uint64_t v8 = v0[105];
    uint64_t v9 = v0[68];
    uint64_t v21 = v0[67];
    uint64_t v22 = v0[72];
    swift_release();
    sub_100037A24(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v18);
    sub_100037A24(v19, v20);
    sub_100037A24(v2, v1);
    sub_100037A24(v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v22, v21);
    v0[184] = v3;
    uint64_t v10 = type metadata accessor for Peripheral();
    uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[185] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[150] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10030DB88;
    uint64_t v14 = v0[88];
    uint64_t v15 = v0[87];
    uint64_t v16 = v0[48];
    return dispatch thunk of ServiceProtocol.subscript.getter(v16, v15, v14);
  }
}

uint64_t sub_10030DB88(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[151] = a1;
  v3[152] = v1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[48];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030DF1C, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[153] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030DD7C;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[60];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030DD7C()
{
  uint64_t v2 = (void *)*v1;
  v2[154] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030E240, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (void *)swift_task_alloc();
    v2[155] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10030E0D0;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 18, v5, v4);
  }
}

uint64_t sub_10030DF1C()
{
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v18 = v0[149];
  unint64_t v19 = v0[133];
  uint64_t v16 = v0[148];
  uint64_t v17 = v0[132];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v14 = v0[67];
  uint64_t v15 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v16, v18);
  sub_100037A24(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
  v0[184] = v0[152];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030E0D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1248) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 480), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10030E66C;
  }
  else {
    unint64_t v3 = sub_10030E3F4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030E240()
{
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v18 = v0[149];
  unint64_t v19 = v0[133];
  uint64_t v16 = v0[148];
  uint64_t v17 = v0[132];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v14 = v0[67];
  uint64_t v15 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v16, v18);
  sub_100037A24(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
  v0[184] = v0[154];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030E3F4()
{
  uint64_t v1 = v0[156];
  uint64_t v3 = v0[18];
  unint64_t v2 = v0[19];
  v0[157] = v3;
  v0[158] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v21 = v0[148];
    unint64_t v22 = v0[149];
    uint64_t v19 = v0[141];
    unint64_t v20 = v0[142];
    uint64_t v25 = v0[132];
    unint64_t v26 = v0[133];
    unint64_t v18 = v0[124];
    uint64_t v4 = v0[123];
    unint64_t v5 = v0[115];
    uint64_t v6 = v0[114];
    unint64_t v7 = v0[106];
    uint64_t v8 = v0[105];
    uint64_t v9 = v0[68];
    uint64_t v23 = v0[67];
    uint64_t v24 = v0[72];
    swift_release();
    sub_100037A24(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v18);
    sub_100037A24(v19, v20);
    sub_100037A24(v21, v22);
    sub_100037A24(v3, v2);
    sub_100037A24(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v24, v23);
    v0[184] = v1;
    uint64_t v10 = type metadata accessor for Peripheral();
    uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[185] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[159] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10030E820;
    uint64_t v14 = v0[88];
    uint64_t v15 = v0[87];
    uint64_t v16 = v0[47];
    return dispatch thunk of ServiceProtocol.subscript.getter(v16, v15, v14);
  }
}

uint64_t sub_10030E66C()
{
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v18 = v0[149];
  unint64_t v19 = v0[133];
  uint64_t v16 = v0[148];
  uint64_t v17 = v0[132];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v14 = v0[67];
  uint64_t v15 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v16, v18);
  sub_100037A24(v17, v19);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v14);
  v0[184] = v0[156];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030E820(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[160] = a1;
  v3[161] = v1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[47];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030EBB4, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[162] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030EA14;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[59];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030EA14()
{
  uint64_t v2 = (void *)*v1;
  v2[163] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030EEEC, 0, 0);
  }
  else
  {
    swift_release();
    unint64_t v3 = (void *)swift_task_alloc();
    v2[164] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_10030ED7C;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 20, v5, v4);
  }
}

uint64_t sub_10030EBB4()
{
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v20 = v0[133];
  unint64_t v21 = v0[158];
  uint64_t v18 = v0[132];
  uint64_t v19 = v0[157];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v16 = v0[67];
  uint64_t v17 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v19, v21);
  sub_100037A24(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v16);
  v0[184] = v0[161];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030ED7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1320) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 472), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10030F34C;
  }
  else {
    unint64_t v3 = sub_10030F0B4;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030EEEC()
{
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v20 = v0[133];
  unint64_t v21 = v0[158];
  uint64_t v18 = v0[132];
  uint64_t v19 = v0[157];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v16 = v0[67];
  uint64_t v17 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v19, v21);
  sub_100037A24(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v16);
  v0[184] = v0[163];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030F0B4()
{
  uint64_t v1 = v0[165];
  uint64_t v3 = v0[20];
  unint64_t v2 = v0[21];
  v0[166] = v3;
  v0[167] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    unint64_t v25 = v0[158];
    unint64_t v22 = v0[149];
    uint64_t v23 = v0[157];
    unint64_t v20 = v0[142];
    uint64_t v21 = v0[148];
    uint64_t v27 = v0[132];
    unint64_t v28 = v0[133];
    unint64_t v18 = v0[124];
    uint64_t v19 = v0[141];
    uint64_t v4 = v0[123];
    unint64_t v5 = v0[115];
    uint64_t v6 = v0[114];
    unint64_t v7 = v0[106];
    uint64_t v8 = v0[105];
    uint64_t v26 = v0[72];
    uint64_t v9 = v0[68];
    uint64_t v24 = v0[67];
    swift_release();
    sub_100037A24(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v18);
    sub_100037A24(v19, v20);
    sub_100037A24(v21, v22);
    sub_100037A24(v23, v25);
    sub_100037A24(v3, v2);
    sub_100037A24(v27, v28);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, v24);
    v0[184] = v1;
    uint64_t v10 = type metadata accessor for Peripheral();
    uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[185] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v13 = (void *)swift_task_alloc();
    v0[168] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10030F514;
    uint64_t v14 = v0[88];
    uint64_t v15 = v0[87];
    uint64_t v16 = v0[46];
    return dispatch thunk of ServiceProtocol.subscript.getter(v16, v15, v14);
  }
}

uint64_t sub_10030F34C()
{
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v20 = v0[133];
  unint64_t v21 = v0[158];
  uint64_t v18 = v0[132];
  uint64_t v19 = v0[157];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v9 = v0[68];
  uint64_t v16 = v0[67];
  uint64_t v17 = v0[72];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v19, v21);
  sub_100037A24(v18, v20);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v16);
  v0[184] = v0[165];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030F514(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[169] = a1;
  v3[170] = v1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[46];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_10030F8A8, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[171] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_10030F708;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[58];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_10030F708()
{
  uint64_t v2 = (void *)*v1;
  v2[172] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_10030FBFC, 0, 0);
  }
  else
  {
    swift_release();
    unint64_t v3 = (void *)swift_task_alloc();
    v2[173] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_10030FA8C;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 14, v5, v4);
  }
}

uint64_t sub_10030F8A8()
{
  uint64_t v22 = v0[166];
  unint64_t v23 = v0[167];
  unint64_t v18 = v0[158];
  unint64_t v15 = v0[149];
  uint64_t v16 = v0[157];
  uint64_t v14 = v0[148];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  uint64_t v20 = v0[132];
  unint64_t v21 = v0[133];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v19 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v17 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v18);
  sub_100037A24(v22, v23);
  sub_100037A24(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v17);
  v0[184] = v0[170];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030FA8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1392) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 464), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_100310098;
  }
  else {
    unint64_t v3 = sub_10030FDE0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10030FBFC()
{
  uint64_t v22 = v0[166];
  unint64_t v23 = v0[167];
  unint64_t v18 = v0[158];
  unint64_t v15 = v0[149];
  uint64_t v16 = v0[157];
  uint64_t v14 = v0[148];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  uint64_t v20 = v0[132];
  unint64_t v21 = v0[133];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v19 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v17 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v18);
  sub_100037A24(v22, v23);
  sub_100037A24(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v17);
  v0[184] = v0[172];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10030FDE0()
{
  uint64_t v1 = v0[174];
  uint64_t v3 = v0[14];
  unint64_t v2 = v0[15];
  v0[175] = v3;
  v0[176] = v2;
  static Task<>.checkCancellation()();
  if (v1)
  {
    uint64_t v26 = v0[166];
    uint64_t v23 = v0[157];
    unint64_t v24 = v0[158];
    uint64_t v21 = v0[148];
    unint64_t v22 = v0[149];
    uint64_t v19 = v0[141];
    unint64_t v20 = v0[142];
    unint64_t v29 = v0[167];
    unint64_t v30 = v0[133];
    uint64_t v28 = v0[132];
    uint64_t v31 = v1;
    unint64_t v4 = v0[124];
    uint64_t v5 = v0[123];
    unint64_t v6 = v0[115];
    uint64_t v7 = v0[114];
    unint64_t v8 = v0[106];
    uint64_t v9 = v0[105];
    uint64_t v27 = v0[72];
    uint64_t v10 = v0[68];
    uint64_t v25 = v0[67];
    swift_release();
    sub_100037A24(v9, v8);
    sub_100037A24(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v19, v20);
    sub_100037A24(v21, v22);
    sub_100037A24(v23, v24);
    sub_100037A24(v26, v29);
    sub_100037A24(v3, v2);
    sub_100037A24(v28, v30);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v27, v25);
    v0[184] = v31;
    uint64_t v11 = type metadata accessor for Peripheral();
    uint64_t v12 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v13 = (void *)swift_task_alloc();
    v0[185] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_10031150C;
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v11, v12);
  }
  else
  {
    Identifier.init(stringLiteral:)();
    uint64_t v14 = (void *)swift_task_alloc();
    v0[177] = v14;
    void *v14 = v0;
    v14[1] = sub_10031027C;
    uint64_t v15 = v0[88];
    uint64_t v16 = v0[87];
    uint64_t v17 = v0[45];
    return dispatch thunk of ServiceProtocol.subscript.getter(v17, v16, v15);
  }
}

uint64_t sub_100310098()
{
  uint64_t v22 = v0[166];
  unint64_t v23 = v0[167];
  unint64_t v18 = v0[158];
  unint64_t v15 = v0[149];
  uint64_t v16 = v0[157];
  uint64_t v14 = v0[148];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  uint64_t v20 = v0[132];
  unint64_t v21 = v0[133];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v19 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v17 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v18);
  sub_100037A24(v22, v23);
  sub_100037A24(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v19, v17);
  v0[184] = v0[174];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10031027C(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[178] = a1;
  v3[179] = v1;
  swift_task_dealloc();
  unint64_t v5 = (void (*)(uint64_t, uint64_t))v3[95];
  uint64_t v6 = v3[45];
  uint64_t v7 = v3[42];
  if (v1)
  {
    v5(v6, v7);
    return _swift_task_switch(sub_100310610, 0, 0);
  }
  else
  {
    v5(v6, v7);
    uint64_t v8 = (void *)swift_task_alloc();
    v3[180] = v8;
    *uint64_t v8 = v4;
    v8[1] = sub_100310470;
    uint64_t v9 = v3[97];
    uint64_t v10 = v3[91];
    uint64_t v11 = v3[57];
    return dispatch thunk of CharacteristicProtocol.read()(v11, v10, v9);
  }
}

uint64_t sub_100310470()
{
  uint64_t v2 = (void *)*v1;
  v2[181] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    return _swift_task_switch(sub_100310980, 0, 0);
  }
  else
  {
    swift_release();
    unint64_t v3 = (void *)swift_task_alloc();
    v2[182] = v3;
    *unint64_t v3 = v2;
    v3[1] = sub_100310810;
    uint64_t v4 = v2[101];
    uint64_t v5 = v2[55];
    return AsyncSequence.first()(v2 + 12, v5, v4);
  }
}

uint64_t sub_100310610()
{
  unint64_t v25 = v0[176];
  uint64_t v19 = v0[166];
  uint64_t v16 = v0[157];
  unint64_t v17 = v0[158];
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v23 = v0[133];
  uint64_t v24 = v0[175];
  uint64_t v21 = v0[132];
  unint64_t v22 = v0[167];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v20 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v18 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v17);
  sub_100037A24(v19, v22);
  sub_100037A24(v24, v25);
  sub_100037A24(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v18);
  v0[184] = v0[179];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_100310810()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1464) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 824))(*(void *)(v2 + 456), *(void *)(v2 + 440));
  if (v0) {
    unint64_t v3 = sub_10031130C;
  }
  else {
    unint64_t v3 = sub_100310B80;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100310980()
{
  unint64_t v25 = v0[176];
  uint64_t v19 = v0[166];
  uint64_t v16 = v0[157];
  unint64_t v17 = v0[158];
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v23 = v0[133];
  uint64_t v24 = v0[175];
  uint64_t v21 = v0[132];
  unint64_t v22 = v0[167];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v20 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v18 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v17);
  sub_100037A24(v19, v22);
  sub_100037A24(v24, v25);
  sub_100037A24(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v18);
  v0[184] = v0[181];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_100310B80()
{
  unint64_t v87 = v0;
  uint64_t v84 = v0[13];
  uint64_t v85 = v0[12];
  ContinuousClock.now.getter();
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[71];
  uint64_t v3 = v0[70];
  uint64_t v4 = v0[69];
  uint64_t v5 = v0[68];
  uint64_t v6 = v0[67];
  uint64_t v8 = v0[40];
  uint64_t v7 = v0[41];
  uint64_t v9 = v0[39];
  uint64_t v10 = sub_100010324(v9, (uint64_t)qword_10170DDA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v7, v10, v9);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v11(v3, v1, v6);
  v11(v4, v2, v6);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v15 = v0[69];
  uint64_t v16 = v0[68];
  uint64_t v17 = v0[67];
  uint64_t v18 = v0[40];
  uint64_t v19 = v0[41];
  uint64_t v20 = v0[39];
  if (v14)
  {
    os_log_type_t v81 = v13;
    uint64_t v83 = v0[41];
    uint64_t v22 = v0[37];
    uint64_t v21 = v0[38];
    uint64_t v79 = v0[36];
    uint64_t v80 = v12;
    uint64_t v78 = v0[70];
    uint64_t v82 = v0[39];
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v23 = 136446210;
    static Duration.UnitsFormatStyle.Unit.milliseconds.getter();
    sub_1003300B4(&qword_101653DE0, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
    uint64_t v77 = v15;
    uint64_t v24 = static Duration.description<A>(_:_:units:)();
    unint64_t v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v79);
    v0[24] = sub_1008FA0F0(v24, v26, &v86);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v27(v78, v17);
    uint64_t v76 = v27;
    v27(v77, v17);
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "Raw metadata read time: %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v83, v82);
  }
  else
  {
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v28(v0[70], v17);
    uint64_t v76 = v28;
    v28(v15, v17);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
  }
  uint64_t v74 = v0[175];
  uint64_t v75 = v0[176];
  uint64_t v73 = v0[167];
  uint64_t v71 = v0[158];
  uint64_t v72 = v0[166];
  uint64_t v69 = v0[149];
  uint64_t v70 = v0[157];
  uint64_t v67 = v0[142];
  uint64_t v68 = v0[148];
  uint64_t v65 = v0[133];
  uint64_t v66 = v0[141];
  uint64_t v63 = v0[124];
  uint64_t v64 = v0[132];
  uint64_t v61 = v0[115];
  uint64_t v62 = v0[123];
  uint64_t v59 = v0[106];
  uint64_t v60 = v0[114];
  uint64_t v57 = v0[78];
  uint64_t v58 = v0[105];
  uint64_t v29 = v0[77];
  uint64_t v55 = v0[75];
  uint64_t v56 = v0[76];
  uint64_t v30 = v0[74];
  uint64_t v53 = v0[72];
  uint64_t v54 = v0[73];
  uint64_t v52 = v0[71];
  uint64_t v51 = v0[67];
  uint64_t v31 = v0[34];
  uint64_t v32 = v0[35];
  uint64_t v33 = v0[33];
  uint64_t v34 = v0[31];
  uint64_t v49 = v0[32];
  uint64_t v50 = v0[30];
  uint64_t v35 = v0[25];
  dispatch thunk of PeripheralProtocol.id.getter();
  Identifier.id.getter();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v32, v33);
  v76(v52, v51);
  v76(v53, v51);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v55, v54);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v57, v56);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v35, v49, v50);
  os_log_type_t v36 = (int *)type metadata accessor for RawAccessoryMetadata(0);
  uint64_t v37 = (void *)(v35 + v36[5]);
  *uint64_t v37 = v58;
  v37[1] = v59;
  uint64_t v38 = (void *)(v35 + v36[6]);
  void *v38 = v60;
  v38[1] = v61;
  uint64_t v39 = (void *)(v35 + v36[7]);
  void *v39 = v62;
  v39[1] = v63;
  uint64_t v40 = (void *)(v35 + v36[8]);
  *uint64_t v40 = v64;
  v40[1] = v65;
  uint64_t v41 = (void *)(v35 + v36[9]);
  *uint64_t v41 = v66;
  v41[1] = v67;
  uint64_t v42 = (void *)(v35 + v36[10]);
  *uint64_t v42 = v68;
  v42[1] = v69;
  os_log_type_t v43 = (void *)(v35 + v36[11]);
  void *v43 = v70;
  v43[1] = v71;
  uint64_t v44 = (void *)(v35 + v36[12]);
  *uint64_t v44 = v72;
  v44[1] = v73;
  uint64_t v45 = (void *)(v35 + v36[13]);
  void *v45 = v74;
  v45[1] = v75;
  unint64_t v46 = (void *)(v35 + v36[14]);
  *unint64_t v46 = v85;
  v46[1] = v84;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v47 = (uint64_t (*)(void))v0[1];
  return v47();
}

uint64_t sub_10031130C()
{
  unint64_t v25 = v0[176];
  uint64_t v19 = v0[166];
  uint64_t v16 = v0[157];
  unint64_t v17 = v0[158];
  uint64_t v14 = v0[148];
  unint64_t v15 = v0[149];
  unint64_t v1 = v0[142];
  uint64_t v2 = v0[141];
  unint64_t v23 = v0[133];
  uint64_t v24 = v0[175];
  uint64_t v21 = v0[132];
  unint64_t v22 = v0[167];
  unint64_t v3 = v0[124];
  uint64_t v4 = v0[123];
  unint64_t v5 = v0[115];
  uint64_t v6 = v0[114];
  unint64_t v7 = v0[106];
  uint64_t v8 = v0[105];
  uint64_t v20 = v0[72];
  uint64_t v9 = v0[68];
  uint64_t v18 = v0[67];
  swift_release();
  sub_100037A24(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v14, v15);
  sub_100037A24(v16, v17);
  sub_100037A24(v19, v22);
  sub_100037A24(v24, v25);
  sub_100037A24(v21, v23);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v20, v18);
  v0[184] = v0[183];
  uint64_t v10 = type metadata accessor for Peripheral();
  uint64_t v11 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[185] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10031150C;
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v10, v11);
}

uint64_t sub_10031150C()
{
  *(void *)(*(void *)v1 + 1488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100311898;
  }
  else {
    uint64_t v2 = sub_100311620;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100311620()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  uint64_t v3 = v0[73];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(void, void))(v0[77] + 8))(v0[78], v0[76]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100311898()
{
  if (qword_101637238 != -1) {
    swift_once();
  }
  sub_100010324(v0[39], (uint64_t)qword_10170EF80);
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    uint64_t v5 = _convertErrorToNSError(_:)();
    v0[22] = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "cancelConnection error in readRawAccessoryMetadata() catch block: %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = v0[75];
  uint64_t v7 = v0[74];
  uint64_t v8 = v0[73];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  (*(void (**)(void, void))(v0[77] + 8))(v0[78], v0[76]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100311C78(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 192) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  type metadata accessor for RawAccessoryMetadata(0);
  *(void *)(v3 + 32) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CentralManager.State();
  *(void *)(v3 + 40) = v4;
  *(void *)(v3 + 48) = *(void *)(v4 - 8);
  *(void *)(v3 + 56) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101665590);
  *(void *)(v3 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_100311D98, 0, 0);
}

uint64_t sub_100311D98()
{
  uint64_t v1 = v0[8];
  v0[9] = type metadata accessor for CentralManager();
  uint64_t v2 = type metadata accessor for CentralManager.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100311E88;
  uint64_t v4 = v0[8];
  return CentralManager.__allocating_init(options:)(v4);
}

uint64_t sub_100311E88(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100311F88, 0, 0);
}

uint64_t sub_100311F88()
{
  (*(void (**)(void, void, void))(v0[6] + 104))(v0[7], enum case for CentralManager.State.poweredOn(_:), v0[5]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[12] = v1;
  uint64_t v2 = sub_1003300B4(&qword_101639A90, (void (*)(uint64_t))&type metadata accessor for CentralManager);
  *uint64_t v1 = v0;
  v1[1] = sub_100312084;
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  return CentralManagerProtocol.await(state:)(v4, v3, v2);
}

uint64_t sub_100312084()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[5];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    return _swift_task_switch(sub_1003129F4, 0, 0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:)
                                          + async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:));
    uint64_t v7 = (void *)swift_task_alloc();
    v2[14] = v7;
    void *v7 = v3;
    v7[1] = sub_10031227C;
    uint64_t v8 = v2[3];
    return v10(v8);
  }
}

uint64_t sub_10031227C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100312A7C;
  }
  else {
    uint64_t v4 = sub_100312390;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100312390()
{
  uint64_t v1 = *(void *)(v0 + 120);
  if (v1)
  {
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, char))((char *)&dword_101641678 + dword_101641678);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v2;
    void *v2 = v0;
    v2[1] = sub_100312570;
    uint64_t v3 = *(void *)(v0 + 32);
    char v4 = *(unsigned char *)(v0 + 192);
    return v11(v3, v1, v4);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 24);
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = type metadata accessor for MACAddress();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v6, v9);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100312570()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10031279C;
  }
  else {
    uint64_t v2 = sub_100312684;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100312684()
{
  uint64_t v1 = v0[18];
  sub_1001AA2CC(v0[4], v0[2]);
  if (v1)
  {
    v0[21] = v1;
    uint64_t v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                           + async function pointer to dispatch thunk of Peripheral.cancelConnection());
    uint64_t v2 = (void *)swift_task_alloc();
    v0[22] = (uint64_t)v2;
    void *v2 = v0;
    uint64_t v3 = sub_100312B04;
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                           + async function pointer to dispatch thunk of Peripheral.cancelConnection());
    uint64_t v2 = (void *)swift_task_alloc();
    v0[19] = (uint64_t)v2;
    void *v2 = v0;
    uint64_t v3 = sub_100312848;
  }
  v2[1] = v3;
  return v5();
}

uint64_t sub_10031279C()
{
  v0[21] = v0[18];
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                         + async function pointer to dispatch thunk of Peripheral.cancelConnection());
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100312B04;
  return v3();
}

uint64_t sub_100312848()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100312CB8;
  }
  else {
    uint64_t v2 = sub_10031295C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10031295C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003129F4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100312A7C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100312B04()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100312D80;
  }
  else {
    uint64_t v2 = sub_100312C18;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100312C18()
{
  swift_willThrow();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100312CB8()
{
  sub_1003300FC(v0[2], type metadata accessor for AccessoryMetadata);
  v0[21] = v0[20];
  uint64_t v3 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                         + async function pointer to dispatch thunk of Peripheral.cancelConnection());
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = (uint64_t)v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100312B04;
  return v3();
}

uint64_t sub_100312D80()
{
  swift_errorRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100312E20(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return _swift_task_switch(sub_100312E44, 0, 0);
}

uint64_t sub_100312E44()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  v3[2] = v1;
  v3[3] = v2;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = type metadata accessor for AccessoryMetadata(0);
  *uint64_t v4 = v0;
  v4[1] = sub_100312F44;
  uint64_t v6 = v0[2];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD00000000000002BLL, 0x80000001013F8480, sub_10033033C, v3, v5);
}

uint64_t sub_100312F44()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100313080, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100313080()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003130E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a2;
  uint64_t v24 = a4;
  uint64_t v22 = a1;
  uint64_t v5 = sub_10000588C(&qword_101641690);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v21 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for MACAddress();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  uint64_t v16 = v5;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22, v5);
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v18 = (v10 + *(unsigned __int8 *)(v6 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = 0;
  *((void *)v19 + 3) = 0;
  *((void *)v19 + 4) = v23;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v19[v17], v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v19[v18], v21, v16);
  *(void *)&v19[(v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8] = v24;
  sub_1008F5E44((uint64_t)v14, (uint64_t)&unk_1016416A0, (uint64_t)v19);
  return swift_release();
}

uint64_t sub_1003133AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a6;
  v7[4] = a7;
  v7[2] = a5;
  type metadata accessor for UUID();
  id v7[5] = swift_task_alloc();
  uint64_t v8 = sub_10000588C(&qword_101641690);
  v7[6] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v7[7] = v9;
  v7[8] = *(void *)(v9 + 64);
  v7[9] = swift_task_alloc();
  v7[10] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MACAddress();
  v7[11] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v7[12] = v11;
  v7[13] = *(void *)(v11 + 64);
  v7[14] = swift_task_alloc();
  v7[15] = swift_task_alloc();
  return _swift_task_switch(sub_10031352C, 0, 0);
}

uint64_t sub_10031352C()
{
  if (qword_101636A70 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v26 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v20 = v0[13];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[6];
  uint64_t v19 = v0[8];
  uint64_t v27 = v0[9];
  uint64_t v7 = v0[3];
  uint64_t v22 = v7;
  uint64_t v8 = v0[2];
  uint64_t v24 = v8;
  uint64_t v25 = v0[4];
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v23(v1, v8, v4);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v21(v3, v7, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v17 = (v20 + *(unsigned __int8 *)(v5 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v18 = v9;
  unint64_t v14 = (v19 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  uint64_t v16 = *(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32);
  v16(v10 + v9, v1, v4);
  uint64_t v15 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32);
  v15(v10 + v17, v3, v6);
  *(void *)(v10 + v14) = v25;
  v23(v26, v24, v4);
  v21(v27, v22, v6);
  uint64_t v11 = swift_allocObject();
  v16(v11 + v18, v26, v4);
  v15(v11 + v17, v27, v6);
  *(void *)(v11 + v14) = v25;
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100313844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = sub_10000588C(&qword_101641690);
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MACAddress();
  v3[9] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[10] = v7;
  v3[11] = *(void *)(v7 + 64);
  v3[12] = swift_task_alloc();
  return _swift_task_switch(sub_100313978, 0, 0);
}

uint64_t sub_100313978()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[8];
  uint64_t v14 = v0[7];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v8 = v0[3];
  uint64_t v15 = v0[4];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v1, v0[2], v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v5, v8, v6);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v2 + *(unsigned __int8 *)(v7 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  v0[13] = v11;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v9, v1, v3);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v11 + v10, v5, v6);
  *(void *)(v11 + ((v14 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100313B44;
  return withTimeout<A>(_:block:)(v12, 0x40AAD21B3B700000, 3, &unk_1016416D0, v11, (char *)&type metadata for () + 8);
}

uint64_t sub_100313B44()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100313CD0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100313C60;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100313C60()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100313CD0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100313D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a2;
  type metadata accessor for AccessoryMetadata(0);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for CentralManager.State();
  v4[19] = v5;
  v4[20] = *(void *)(v5 - 8);
  v4[21] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_101665590);
  v4[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MACAddress();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  return _swift_task_switch(sub_100313ED4, 0, 0);
}

uint64_t sub_100313ED4()
{
  uint64_t v23 = v0;
  if (qword_101636A68 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[24];
  uint64_t v2 = v0[25];
  uint64_t v4 = v0[23];
  uint64_t v5 = type metadata accessor for Logger();
  v0[26] = sub_100010324(v5, (uint64_t)qword_1016412B8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[27] = v6;
  v0[28] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v4);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v11 = v0[24];
  uint64_t v10 = v0[25];
  uint64_t v12 = v0[23];
  if (v9)
  {
    os_log_type_t type = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    v0[12] = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2082;
    sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[13] = sub_1008FA0F0(v14, v15, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    _os_log_impl((void *)&_mh_execute_header, v7, type, "%{public}s for address %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(v0[25], v0[23]);
  }

  uint64_t v16 = v0[22];
  v0[29] = type metadata accessor for CentralManager();
  uint64_t v17 = type metadata accessor for CentralManager.Options();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  unint64_t v18 = (void *)swift_task_alloc();
  v0[30] = v18;
  *unint64_t v18 = v0;
  v18[1] = sub_100314218;
  uint64_t v19 = v0[22];
  return CentralManager.__allocating_init(options:)(v19);
}

uint64_t sub_100314218(uint64_t a1)
{
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100314318, 0, 0);
}

uint64_t sub_100314318()
{
  (*(void (**)(void, void, void))(v0[20] + 104))(v0[21], enum case for CentralManager.State.poweredOn(_:), v0[19]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[32] = v1;
  uint64_t v2 = sub_1003300B4(&qword_101639A90, (void (*)(uint64_t))&type metadata accessor for CentralManager);
  *uint64_t v1 = v0;
  v1[1] = sub_100314414;
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[21];
  return CentralManagerProtocol.await(state:)(v4, v3, v2);
}

uint64_t sub_100314414()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[33] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[21];
  uint64_t v5 = v2[20];
  uint64_t v6 = v2[19];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    return _swift_task_switch(sub_100315014, 0, 0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)&async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:)
                                          + async function pointer to dispatch thunk of CentralManager.retrievePeripheral(macAddress:));
    uint64_t v7 = (void *)swift_task_alloc();
    v2[34] = v7;
    void *v7 = v3;
    v7[1] = sub_10031460C;
    uint64_t v8 = v2[14];
    return v10(v8);
  }
}

uint64_t sub_10031460C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 280) = a1;
  *(void *)(v3 + 288) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1003150B8;
  }
  else {
    uint64_t v4 = sub_100314720;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100314720()
{
  uint64_t v16 = v0;
  uint64_t v1 = v0[35];
  if (v1)
  {
    swift_retain_n();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      v15[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136446466;
      v0[9] = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v4 + 12) = 2082;
      v0[10] = v1;
      type metadata accessor for Peripheral();
      sub_1003300B4(&qword_101639B30, (void (*)(uint64_t))&type metadata accessor for Peripheral);
      uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[11] = sub_1008FA0F0(v5, v6, v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s Retrieved peripheral: %{public}s", (uint8_t *)v4, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v13 = (void *)swift_task_alloc();
    v0[37] = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_100314AA0;
    uint64_t v14 = v0[18];
    return sub_1003155B0(v14, v1);
  }
  else
  {
    uint64_t v7 = (void (*)(uint64_t, uint64_t, uint64_t))v0[27];
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[14];
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    swift_allocError();
    v7(v10, v9, v8);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100314AA0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10031515C, 0, 0);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))((char *)&async function pointer to dispatch thunk of Peripheral.cancelConnection()
                           + async function pointer to dispatch thunk of Peripheral.cancelConnection());
    os_log_type_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 312) = v3;
    *os_log_type_t v3 = v2;
    v3[1] = sub_100314C28;
    return v5();
  }
}

uint64_t sub_100314C28()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10031520C;
  }
  else {
    uint64_t v2 = sub_100314D3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100314D3C()
{
  uint64_t v11 = v0;
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[35];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    v0[6] = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2082;
    v0[7] = v3;
    type metadata accessor for Peripheral();
    sub_1003300B4(&qword_101639B30, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[8] = sub_1008FA0F0(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s Disconnected from: %{public}s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v7 = v0[18];
  sub_10032FE84(v7, v0[17], type metadata accessor for AccessoryMetadata);
  sub_10000588C(&qword_101641690);
  CheckedContinuation.resume(returning:)();
  swift_release();
  swift_release();
  sub_1003300FC(v7, type metadata accessor for AccessoryMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100315014()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003150B8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10031515C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10031520C()
{
  uint64_t v13 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[35];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446722;
    v0[2] = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2082;
    v0[3] = v3;
    type metadata accessor for Peripheral();
    sub_1003300B4(&qword_101639B30, (void (*)(uint64_t))&type metadata accessor for Peripheral);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_1008FA0F0(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v4 + 22) = 2114;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s Error disconnecting from: %{public}s %{public}@", (uint8_t *)v4, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = v0[18];
  sub_10032FE84(v9, v0[17], type metadata accessor for AccessoryMetadata);
  sub_10000588C(&qword_101641690);
  CheckedContinuation.resume(returning:)();
  swift_release();
  swift_release();
  sub_1003300FC(v9, type metadata accessor for AccessoryMetadata);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003155B0(uint64_t a1, uint64_t a2)
{
  v3[214] = v2;
  v3[213] = a2;
  v3[212] = a1;
  type metadata accessor for UUID();
  v3[215] = swift_task_alloc();
  uint64_t v4 = sub_10000588C(&qword_10163D210);
  v3[216] = v4;
  v3[217] = *(void *)(v4 - 8);
  v3[218] = swift_task_alloc();
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_1016654A0);
  v3[219] = v5;
  v3[220] = *(void *)(v5 - 8);
  v3[221] = swift_task_alloc();
  uint64_t v6 = sub_10000588C(&qword_101639A70);
  v3[222] = v6;
  v3[223] = *(void *)(v6 - 8);
  v3[224] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v3[225] = v7;
  v3[226] = *(void *)(v7 - 8);
  v3[227] = swift_task_alloc();
  v3[228] = swift_task_alloc();
  v3[229] = swift_task_alloc();
  v3[230] = swift_task_alloc();
  v3[231] = swift_task_alloc();
  v3[232] = swift_task_alloc();
  v3[233] = swift_task_alloc();
  v3[234] = swift_task_alloc();
  v3[235] = swift_task_alloc();
  v3[236] = swift_task_alloc();
  v3[237] = swift_task_alloc();
  v3[238] = swift_task_alloc();
  v3[239] = swift_task_alloc();
  v3[240] = swift_task_alloc();
  v3[241] = swift_task_alloc();
  v3[242] = swift_task_alloc();
  v3[243] = swift_task_alloc();
  v3[244] = swift_task_alloc();
  v3[245] = swift_task_alloc();
  v3[246] = swift_task_alloc();
  v3[247] = swift_task_alloc();
  v3[248] = swift_task_alloc();
  v3[249] = swift_task_alloc();
  v3[250] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Peripheral();
  v3[251] = v8;
  uint64_t v9 = sub_1003300B4(&qword_101639AC8, (void (*)(uint64_t))&type metadata accessor for Peripheral);
  v3[252] = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  v3[253] = v10;
  void *v10 = v3;
  v10[1] = sub_100315970;
  return dispatch thunk of PeripheralProtocol.connect()(v8, v9);
}

uint64_t sub_100315970()
{
  *(void *)(*(void *)v1 + 2032) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100315FFC;
  }
  else {
    uint64_t v2 = sub_100315A84;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100315A84()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[250];
  uint64_t v2 = v0[226];
  uint64_t v3 = v0[225];
  uint64_t v4 = v0[213];
  uint64_t v5 = sub_100306A20();
  v0[255] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v0[256] = v6;
  v0[257] = (v2 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v5, v3);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100330C24;
  *(void *)(v7 + 24) = v4;
  swift_retain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 34;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100332E7C;
  *(void *)(v14 + 24) = v7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1000654EC;
  *(void *)(v15 + 24) = v14;
  v0[258] = sub_10000588C(&qword_101639B60);
  uint64_t v16 = swift_allocObject();
  sub_1004B810C(v16, 6);
  void *v17 = sub_100065514;
  v17[1] = v10;
  v17[2] = sub_100065514;
  v17[3] = v11;
  v17[4] = sub_10032FDF0;
  v17[5] = 0;
  v17[6] = sub_100065514;
  v17[7] = v12;
  v17[8] = sub_100065514;
  v17[9] = v13;
  v17[10] = sub_100065500;
  v17[11] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v8, v9))
  {
    uint64_t v21 = v0[250];
    uint64_t v22 = v0[226];
    uint64_t v23 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v24(v21, v23);
    goto LABEL_12;
  }
  uint64_t v18 = v0[254];
  uint64_t v19 = (uint8_t *)sub_1008F9FAC();
  uint64_t v33 = 0;
  uint64_t v34 = swift_slowAlloc();
  *(_WORD *)uint64_t v19 = 514;
  uint64_t v32 = v19 + 2;
  uint64_t v35 = sub_100065514;
  uint64_t v36 = v10;
  sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
  if (!v18)
  {
    swift_release();
    uint64_t v35 = sub_100065514;
    uint64_t v36 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
    swift_release();
    uint64_t v35 = sub_10032FDF0;
    uint64_t v36 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
    uint64_t v35 = sub_100065514;
    uint64_t v36 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
    swift_release();
    uint64_t v35 = sub_100065514;
    uint64_t v36 = v13;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
    swift_release();
    uint64_t v35 = sub_100065500;
    uint64_t v36 = v15;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v35, (uint64_t)&v32, (uint64_t)&v33, (uint64_t)&v34);
    uint64_t v29 = v0[250];
    uint64_t v30 = v0[226];
    uint64_t v31 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s Connected to: %{public}s", v19, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v24(v29, v31);
LABEL_12:
    v0[259] = v24;
    sub_100EBFB80();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[260] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1003167F0;
    uint64_t v26 = v0[252];
    uint64_t v27 = v0[251];
    uint64_t v28 = v0[224];
    return dispatch thunk of PeripheralProtocol.subscript.getter(v28, v27, v26);
  }
  return swift_errorRelease();
}

uint64_t sub_100315FFC()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[254];
  v0[304] = v1;
  uint64_t v2 = v0[238];
  uint64_t v3 = v0[226];
  uint64_t v4 = v0[225];
  uint64_t v5 = v0[213];
  uint64_t v6 = sub_100306A20();
  v0[305] = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[306] = v7;
  v0[307] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v4);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100330C24;
  *(void *)(v8 + 24) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100330C78;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10005F790;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 66;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10033303C;
  *(void *)(v18 + 24) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000600D8;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000600E0;
  *(void *)(v20 + 24) = v19;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 9);
  void *v22 = sub_10005F778;
  v22[1] = v10;
  v22[2] = sub_100065514;
  v22[3] = v36;
  v22[4] = sub_10032FDF0;
  v22[5] = 0;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v12;
  v22[10] = sub_10005F7D0;
  v22[11] = v14;
  v22[12] = sub_100065514;
  v22[13] = v17;
  v22[14] = sub_100065514;
  v22[15] = v16;
  v22[16] = sub_1000600E8;
  v22[17] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v37))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    buf = v23;
    *(_WORD *)uint64_t v23 = 770;
    uint64_t v39 = v23 + 2;
    uint64_t v42 = (uint64_t (*)())sub_10005F778;
    uint64_t v43 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_10032FDF0;
    uint64_t v43 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v43 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_1000600E8;
    uint64_t v43 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v37, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v33(v30, v32);
  }
  else
  {
    uint64_t v24 = v0[238];
    uint64_t v25 = v0[226];
    uint64_t v26 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v33(v24, v26);
  }
  v0[309] = v33;
  uint64_t v27 = (void *)swift_task_alloc();
  v0[310] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_10032A72C;
  uint64_t v28 = v0[252];
  uint64_t v29 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v29, v28);
}

uint64_t sub_1003167F0(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[261] = a1;
  v4[262] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[223] + 8))(v3[224], v3[222]);
  if (v1) {
    uint64_t v5 = sub_100316BD0;
  }
  else {
    uint64_t v5 = sub_100316964;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100316964()
{
  sub_100EBFBD4();
  uint64_t v1 = type metadata accessor for Service();
  uint64_t v2 = sub_1003300B4(&qword_101639AD0, (void (*)(uint64_t))&type metadata accessor for Service);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 2104) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100316A5C;
  uint64_t v4 = *(void *)(v0 + 1768);
  return dispatch thunk of ServiceProtocol.subscript.getter(v4, v1, v2);
}

uint64_t sub_100316A5C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[264] = a1;
  v4[265] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[220] + 8))(v3[221], v3[219]);
  if (v1) {
    uint64_t v5 = sub_1003175E4;
  }
  else {
    uint64_t v5 = sub_1003173C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100316BD0()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[262];
  v0[304] = v1;
  uint64_t v2 = v0[238];
  uint64_t v3 = v0[226];
  uint64_t v4 = v0[225];
  uint64_t v5 = v0[213];
  uint64_t v6 = sub_100306A20();
  v0[305] = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[306] = v7;
  v0[307] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v4);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100330C24;
  *(void *)(v8 + 24) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100330C78;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10005F790;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 66;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10033303C;
  *(void *)(v18 + 24) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000600D8;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000600E0;
  *(void *)(v20 + 24) = v19;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 9);
  void *v22 = sub_10005F778;
  v22[1] = v10;
  v22[2] = sub_100065514;
  v22[3] = v36;
  v22[4] = sub_10032FDF0;
  v22[5] = 0;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v12;
  v22[10] = sub_10005F7D0;
  v22[11] = v14;
  v22[12] = sub_100065514;
  v22[13] = v17;
  v22[14] = sub_100065514;
  v22[15] = v16;
  v22[16] = sub_1000600E8;
  v22[17] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v37))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    buf = v23;
    *(_WORD *)uint64_t v23 = 770;
    uint64_t v39 = v23 + 2;
    uint64_t v42 = (uint64_t (*)())sub_10005F778;
    uint64_t v43 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_10032FDF0;
    uint64_t v43 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v43 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_1000600E8;
    uint64_t v43 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v37, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v33(v30, v32);
  }
  else
  {
    uint64_t v24 = v0[238];
    uint64_t v25 = v0[226];
    uint64_t v26 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v33(v24, v26);
  }
  v0[309] = v33;
  uint64_t v27 = (void *)swift_task_alloc();
  v0[310] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_10032A72C;
  uint64_t v28 = v0[252];
  uint64_t v29 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v29, v28);
}

uint64_t sub_1003173C4()
{
  *(void *)(v0 + 88) = &type metadata for PoshAccessoryNonOwnerCommand;
  unint64_t v1 = sub_100330D98();
  *(void *)(v0 + 2128) = v1;
  *(void *)(v0 + 96) = v1;
  unint64_t v2 = sub_100330DEC();
  *(void *)(v0 + 2136) = v2;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 80) = 10;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 2144) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1003174C8;
  uint64_t v4 = *(void *)(v0 + 2112);
  return sub_10032B9F8(v0 + 16, v4, v0 + 64, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v1, v2, 0);
}

uint64_t sub_1003174C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100318E24;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 64);
    uint64_t v3 = sub_100317DE0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003175E4()
{
  uint64_t v44 = v0;
  swift_release();
  uint64_t v1 = v0[265];
  v0[304] = v1;
  uint64_t v2 = v0[238];
  uint64_t v3 = v0[226];
  uint64_t v4 = v0[225];
  uint64_t v5 = v0[213];
  uint64_t v6 = sub_100306A20();
  v0[305] = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[306] = v7;
  v0[307] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v4);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100330C24;
  *(void *)(v8 + 24) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100330C78;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10005F790;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 66;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10033303C;
  *(void *)(v18 + 24) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000600D8;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000600E0;
  *(void *)(v20 + 24) = v19;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 9);
  void *v22 = sub_10005F778;
  v22[1] = v10;
  v22[2] = sub_100065514;
  v22[3] = v36;
  v22[4] = sub_10032FDF0;
  v22[5] = 0;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v12;
  v22[10] = sub_10005F7D0;
  v22[11] = v14;
  v22[12] = sub_100065514;
  v22[13] = v17;
  v22[14] = sub_100065514;
  v22[15] = v16;
  v22[16] = sub_1000600E8;
  v22[17] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v37))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    buf = v23;
    *(_WORD *)uint64_t v23 = 770;
    uint64_t v39 = v23 + 2;
    uint64_t v42 = (uint64_t (*)())sub_10005F778;
    uint64_t v43 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_10032FDF0;
    uint64_t v43 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v43 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_1000600E8;
    uint64_t v43 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v37, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v33(v30, v32);
  }
  else
  {
    uint64_t v24 = v0[238];
    uint64_t v25 = v0[226];
    uint64_t v26 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v33(v24, v26);
  }
  v0[309] = v33;
  uint64_t v27 = (void *)swift_task_alloc();
  v0[310] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_10032A72C;
  uint64_t v28 = v0[252];
  uint64_t v29 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v29, v28);
}

uint64_t sub_100317DE0()
{
  uint64_t v94 = v0;
  sub_10005F6AC(v0 + 16, v0 + 112);
  *(void *)(v0 + 2160) = sub_10000588C(&qword_101639B58);
  uint64_t v88 = (void *)v0;
  if (!swift_dynamicCast())
  {
LABEL_4:
    (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1816), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    uint64_t v5 = sub_101020788(0);
    if (os_log_type_enabled(v3, v4))
    {
      os_log_t oslogb = *(os_log_t *)(v0 + 2072);
      uint64_t v6 = *(void *)(v0 + 1816);
      uint64_t v7 = *(void *)(v0 + 1800);
      uint64_t v8 = (uint8_t *)sub_1008F9FAC();
      uint64_t v91 = 0;
      uint64_t v92 = 0;
      *(_WORD *)uint64_t v8 = 0;
      uint64_t v90 = v8 + 2;
      sub_100E08120((uint64_t)v5, (uint64_t)&v90, (uint64_t)&v91, (uint64_t)&v92);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Invalid productDataResponse!", v8, 2u);
      sub_1008F9FA0();

      ((void (*)(uint64_t, uint64_t))oslogb)(v6, v7);
    }
    else
    {
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
      uint64_t v10 = *(void *)(v0 + 1816);
      uint64_t v11 = *(void *)(v0 + 1800);
      swift_bridgeObjectRelease();

      v9(v10, v11);
    }
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v12 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_release();
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    *(void *)(v0 + 2432) = v12;
    uint64_t v13 = *(void *)(v0 + 1904);
    uint64_t v14 = *(void *)(v0 + 1808);
    uint64_t v15 = *(void *)(v0 + 1800);
    uint64_t v16 = *(void *)(v0 + 1704);
    uint64_t v17 = sub_100306A20();
    *(void *)(v0 + 2440) = v17;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    *(void *)(v0 + 2448) = v18;
    *(void *)(v0 + 2456) = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v13, v17, v15);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100330C24;
    *(void *)(v19 + 24) = v16;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v12;
    swift_retain();
    swift_errorRetain();
    osos_log_t log = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 34;
    uint64_t v23 = swift_allocObject();
    *(unsigned char *)(v23 + 16) = 8;
    os_log_t v82 = (os_log_t)swift_allocObject();
    LOBYTE(v82[2].isa) = 34;
    uint64_t v24 = swift_allocObject();
    *(unsigned char *)(v24 + 16) = 8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = sub_100330C78;
    *(void *)(v25 + 24) = v19;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_10005F790;
    *(void *)(v26 + 24) = v25;
    uint64_t v27 = swift_allocObject();
    *(unsigned char *)(v27 + 16) = 66;
    uint64_t v28 = swift_allocObject();
    *(unsigned char *)(v28 + 16) = 8;
    uint64_t v29 = v27;
    os_log_type_t v30 = v21;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_10033303C;
    *(void *)(v31 + 24) = v20;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_1000600D8;
    *(void *)(v32 + 24) = v31;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1000600E0;
    *(void *)(v33 + 24) = v32;
    v88[308] = sub_10000588C(&qword_101639B60);
    uint64_t v34 = swift_allocObject();
    sub_1004B810C(v34, 9);
    *uint64_t v35 = sub_10005F778;
    v35[1] = v22;
    v35[2] = sub_100065514;
    v35[3] = v23;
    v35[4] = sub_10032FDF0;
    v35[5] = 0;
    v35[6] = sub_100065514;
    v35[7] = v82;
    v35[8] = sub_100065514;
    v35[9] = v24;
    v35[10] = sub_10005F7D0;
    v35[11] = v26;
    v35[12] = sub_100065514;
    v35[13] = v29;
    v35[14] = sub_100065514;
    v35[15] = v28;
    v35[16] = sub_1000600E8;
    v35[17] = v33;
    uint64_t v79 = (uint8_t *)v22;
    swift_retain();
    uint64_t v36 = v23;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(oslog, v30))
    {
      os_log_type_t v37 = (uint8_t *)sub_1008F9FAC();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v90 = (uint8_t *)v38;
      uint64_t v91 = v39;
      buf = v37;
      *(_WORD *)os_log_type_t v37 = 770;
      uint64_t v89 = v37 + 2;
      uint64_t v92 = (uint64_t (*)())sub_10005F778;
      uint64_t v93 = (uint64_t)v79;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = sub_100065514;
      uint64_t v93 = v36;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = sub_10032FDF0;
      uint64_t v93 = 0;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      uint64_t v92 = sub_100065514;
      uint64_t v93 = (uint64_t)v82;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = sub_100065514;
      uint64_t v93 = v24;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = (uint64_t (*)())sub_10005F7D0;
      uint64_t v93 = v26;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = sub_100065514;
      uint64_t v93 = v29;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = sub_100065514;
      uint64_t v93 = v28;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      swift_release();
      uint64_t v92 = (uint64_t (*)())sub_1000600E8;
      uint64_t v93 = v33;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
      uint64_t v40 = v88;
      uint64_t v41 = v88[238];
      uint64_t v42 = v88[226];
      uint64_t v43 = v88[225];
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, oslog, v30, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v44(v41, v43);
    }
    else
    {
      uint64_t v45 = v88[238];
      uint64_t v46 = v88[226];
      uint64_t v47 = v88[225];
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
      v44(v45, v47);
      uint64_t v40 = v88;
    }
    v40[309] = v44;
    uint64_t v48 = (void *)swift_task_alloc();
    v40[310] = v48;
    *uint64_t v48 = v40;
    v48[1] = sub_10032A72C;
    uint64_t v49 = v40[252];
    uint64_t v50 = v40[251];
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v50, v49);
  }
  uint64_t v1 = *(void *)(v0 + 1648);
  *(void *)(v0 + 2168) = v1;
  unint64_t v2 = *(void *)(v0 + 1656);
  *(void *)(v0 + 2176) = v2;
  if (*(unsigned char *)(v0 + 1664))
  {
    sub_100330E40(v1, v2, *(unsigned char *)(v0 + 1664));
    goto LABEL_4;
  }
  uint64_t v51 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1992), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_100330C24;
  *(void *)(v52 + 24) = v51;
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v1;
  *(void *)(v53 + 24) = v2;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_100330EA0;
  *(void *)(v54 + 24) = v53;
  sub_100330EB4(v1, v2, 0);
  swift_retain();
  sub_100330EB4(v1, v2, 0);
  os_log_t v83 = (os_log_t)Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  uint64_t v56 = swift_allocObject();
  *(unsigned char *)(v56 + 16) = 34;
  uint64_t v57 = swift_allocObject();
  *(unsigned char *)(v57 + 16) = 8;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_100332E7C;
  *(void *)(v58 + 24) = v52;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_1000654EC;
  *(void *)(v59 + 24) = v58;
  os_log_type_t v60 = v55;
  uint64_t v61 = swift_allocObject();
  *(unsigned char *)(v61 + 16) = 32;
  uint64_t v62 = swift_allocObject();
  *(unsigned char *)(v62 + 16) = 8;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_100330EAC;
  *(void *)(v63 + 24) = v54;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_1000654EC;
  *(void *)(v64 + 24) = v63;
  uint64_t v65 = swift_allocObject();
  sub_1004B810C(v65, 6);
  *uint64_t v66 = sub_100065514;
  v66[1] = v56;
  uint64_t v66[2] = sub_100065514;
  v66[3] = v57;
  v66[4] = sub_100065500;
  v66[5] = v59;
  v66[6] = sub_100065514;
  v66[7] = v61;
  v66[8] = sub_100065514;
  v66[9] = v62;
  v66[10] = sub_100065500;
  v66[11] = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v83, v55))
  {
    os_log_t oslogc = *(os_log_t *)(v0 + 2072);
    os_log_type_t v81 = *(uint8_t **)(v0 + 1992);
    uint64_t v69 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    ((void (*)(uint8_t *, uint64_t))oslogc)(v81, v69);
LABEL_24:
    *(void *)(v0 + 280) = &type metadata for PoshAccessoryNonOwnerCommand;
    *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 2128);
    *(_OWORD *)(v0 + 256) = xmmword_101354080;
    *(unsigned char *)(v0 + 272) = 10;
    uint64_t v70 = (void *)swift_task_alloc();
    *(void *)(v0 + 2184) = v70;
    void *v70 = v0;
    v70[1] = sub_100319638;
    uint64_t v71 = *(void *)(v0 + 2136);
    uint64_t v72 = *(void *)(v0 + 2128);
    uint64_t v73 = *(void *)(v0 + 2112);
    return sub_10032B9F8(v0 + 208, v73, v0 + 256, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v72, v71, 0);
  }
  osos_log_t loga = (os_log_t)v61;
  uint64_t v67 = *(void *)(v0 + 2152);
  uint64_t v68 = (uint8_t *)sub_1008F9FAC();
  uint64_t v90 = 0;
  uint64_t v91 = swift_slowAlloc();
  uint64_t v80 = v68;
  *(_WORD *)uint64_t v68 = 514;
  uint64_t v89 = v68 + 2;
  uint64_t v92 = sub_100065514;
  uint64_t v93 = v56;
  sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
  if (!v67)
  {
    swift_release();
    uint64_t v92 = sub_100065514;
    uint64_t v93 = v57;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
    swift_release();
    uint64_t v92 = sub_100065500;
    uint64_t v93 = v59;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
    swift_release();
    uint64_t v92 = sub_100065514;
    uint64_t v93 = (uint64_t)osloga;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
    swift_release();
    uint64_t v92 = sub_100065514;
    uint64_t v93 = v62;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
    swift_release();
    uint64_t v92 = sub_100065500;
    uint64_t v93 = v64;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v92, (uint64_t)&v89, (uint64_t)&v90, (uint64_t)&v91);
    uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v75 = *(void *)(v0 + 1992);
    uint64_t v76 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v83, v60, "%{public}s productData: %s", v80, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v74(v75, v76);
    goto LABEL_24;
  }
  return swift_errorRelease();
}

uint64_t sub_100318E24()
{
  uint64_t v44 = v0;
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 8));
  uint64_t v1 = v0[269];
  v0[304] = v1;
  uint64_t v2 = v0[238];
  uint64_t v3 = v0[226];
  uint64_t v4 = v0[225];
  uint64_t v5 = v0[213];
  uint64_t v6 = sub_100306A20();
  v0[305] = v6;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[306] = v7;
  v0[307] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v2, v6, v4);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100330C24;
  *(void *)(v8 + 24) = v5;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 8;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100330C78;
  *(void *)(v13 + 24) = v8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_10005F790;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 66;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = v15;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10033303C;
  *(void *)(v18 + 24) = v9;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_1000600D8;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000600E0;
  *(void *)(v20 + 24) = v19;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 9);
  void *v22 = sub_10005F778;
  v22[1] = v10;
  v22[2] = sub_100065514;
  v22[3] = v36;
  v22[4] = sub_10032FDF0;
  v22[5] = 0;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v12;
  v22[10] = sub_10005F7D0;
  v22[11] = v14;
  v22[12] = sub_100065514;
  v22[13] = v17;
  v22[14] = sub_100065514;
  v22[15] = v16;
  v22[16] = sub_1000600E8;
  v22[17] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v37))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v40 = swift_slowAlloc();
    uint64_t v41 = swift_slowAlloc();
    buf = v23;
    *(_WORD *)uint64_t v23 = 770;
    uint64_t v39 = v23 + 2;
    uint64_t v42 = (uint64_t (*)())sub_10005F778;
    uint64_t v43 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_10032FDF0;
    uint64_t v43 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v43 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = sub_100065514;
    uint64_t v43 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    swift_release();
    uint64_t v42 = (uint64_t (*)())sub_1000600E8;
    uint64_t v43 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v42, (uint64_t)&v39, (uint64_t)&v40, (uint64_t)&v41);
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v37, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v33(v30, v32);
  }
  else
  {
    uint64_t v24 = v0[238];
    uint64_t v25 = v0[226];
    uint64_t v26 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v33(v24, v26);
  }
  v0[309] = v33;
  uint64_t v27 = (void *)swift_task_alloc();
  v0[310] = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_10032A72C;
  uint64_t v28 = v0[252];
  uint64_t v29 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v29, v28);
}

uint64_t sub_100319638()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10031A978;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 256);
    uint64_t v3 = sub_100319754;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100319754()
{
  uint64_t v101 = v0;
  sub_10005F6AC(v0 + 208, v0 + 304);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1624);
    *(void *)(v0 + 2200) = v1;
    unint64_t v2 = *(void *)(v0 + 1632);
    *(void *)(v0 + 2208) = v2;
    int v3 = *(unsigned __int8 *)(v0 + 1640);
    if (v3 == 1)
    {
      uint64_t v4 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1984), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_100330C24;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      *(void *)(v6 + 24) = v2;
      sub_100330EB4(v1, v2, 1);
      swift_retain();
      sub_100330EB4(v1, v2, 1);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 34;
      uint64_t v10 = swift_allocObject();
      *(unsigned char *)(v10 + 16) = 8;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_100332E7C;
      *(void *)(v11 + 24) = v5;
      uint64_t v12 = v7;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1000654EC;
      *(void *)(v13 + 24) = v11;
      os_log_type_t v14 = v8;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 32;
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = 8;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_100060DF0;
      *(void *)(v17 + 24) = v6;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1000654EC;
      *(void *)(v18 + 24) = v17;
      uint64_t v19 = swift_allocObject();
      sub_1004B810C(v19, 6);
      *uint64_t v20 = sub_100065514;
      v20[1] = v9;
      v20[2] = sub_100065514;
      v20[3] = v10;
      v20[4] = sub_100065500;
      v20[5] = v13;
      v20[6] = sub_100065514;
      v20[7] = v15;
      v20[8] = sub_100065514;
      v20[9] = v16;
      v20[10] = sub_100065500;
      v20[11] = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v12, v14))
      {
        bufa = *(uint8_t **)(v0 + 1984);
        os_log_t oslogc = *(os_log_t *)(v0 + 2072);
        uint64_t v78 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint8_t *, uint64_t))oslogc)(bufa, v78);
        goto LABEL_28;
      }
      osos_log_t log = (os_log_t)v15;
      uint64_t v21 = *(void *)(v0 + 2192);
      uint64_t v22 = (uint8_t *)sub_1008F9FAC();
      uint64_t v97 = 0;
      uint64_t v98 = swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 514;
      long long v96 = v22 + 2;
      uint64_t v99 = sub_100065514;
      uint64_t v100 = v9;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
      if (!v21)
      {
        swift_release();
        uint64_t v99 = sub_100065514;
        uint64_t v100 = v10;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
        swift_release();
        uint64_t v99 = sub_100065500;
        uint64_t v100 = v13;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
        swift_release();
        uint64_t v99 = sub_100065514;
        uint64_t v100 = (uint64_t)oslog;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
        swift_release();
        uint64_t v99 = sub_100065514;
        uint64_t v100 = v16;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
        swift_release();
        uint64_t v99 = sub_100065500;
        uint64_t v100 = v18;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v24 = *(void *)(v0 + 1984);
        uint64_t v25 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v12, v14, "%{public}s manufacturerName: %s", v22, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v23(v24, v25);
LABEL_28:
        *(void *)(v0 + 472) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 480) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 448) = xmmword_101354090;
        *(unsigned char *)(v0 + 464) = 10;
        uint64_t v79 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v79;
        *uint64_t v79 = v0;
        v79[1] = sub_10031B1C0;
        uint64_t v80 = *(void *)(v0 + 2136);
        uint64_t v81 = *(void *)(v0 + 2128);
        uint64_t v82 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 400, v82, v0 + 448, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v81, v80, 0);
      }
      goto LABEL_20;
    }
    sub_100330E40(v1, v2, v3);
  }
  uint64_t v26 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1824), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_100330C24;
  *(void *)(v27 + 24) = v26;
  swift_retain();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 34;
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_100332E7C;
  *(void *)(v32 + 24) = v27;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1000654EC;
  *(void *)(v33 + 24) = v32;
  uint64_t v34 = swift_allocObject();
  sub_1004B810C(v34, 3);
  *uint64_t v35 = sub_100065514;
  v35[1] = v30;
  v35[2] = sub_100065514;
  v35[3] = v31;
  v35[4] = sub_100065500;
  v35[5] = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v36 = *(void *)(v0 + 2192);
    os_log_type_t v37 = (uint8_t *)sub_1008F9FAC();
    uint64_t v97 = 0;
    uint64_t v98 = swift_slowAlloc();
    *(_WORD *)os_log_type_t v37 = 258;
    long long v96 = v37 + 2;
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v30;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    if (v36)
    {
LABEL_20:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v31;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_100065500;
    uint64_t v100 = v33;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    os_log_t oslogb = *(os_log_t *)(v0 + 2072);
    uint64_t v38 = *(void *)(v0 + 1824);
    uint64_t v39 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s Invalid manufacturerNameCommandResponse!", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    ((void (*)(uint64_t, uint64_t))oslogb)(v38, v39);
  }
  else
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v41 = *(void *)(v0 + 1824);
    uint64_t v42 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v40(v41, v42);
  }
  unint64_t v43 = *(void *)(v0 + 2176);
  uint64_t v44 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v45 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v44, v43, 0);
  sub_100330E40(v44, v43, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v45;
  uint64_t v46 = *(void *)(v0 + 1904);
  uint64_t v47 = *(void *)(v0 + 1808);
  uint64_t v48 = *(void *)(v0 + 1800);
  uint64_t v49 = *(void *)(v0 + 1704);
  uint64_t v50 = sub_100306A20();
  *(void *)(v0 + 2440) = v50;
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  *(void *)(v0 + 2448) = v51;
  *(void *)(v0 + 2456) = (v47 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v51(v46, v50, v48);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_100330C24;
  *(void *)(v52 + 24) = v49;
  uint64_t v53 = swift_allocObject();
  *(void *)(v53 + 16) = v45;
  swift_retain();
  swift_errorRetain();
  osos_log_t loga = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.error.getter();
  uint64_t v54 = swift_allocObject();
  *(unsigned char *)(v54 + 16) = 34;
  buf = (uint8_t *)swift_allocObject();
  buf[16] = 8;
  uint64_t v55 = swift_allocObject();
  *(unsigned char *)(v55 + 16) = 34;
  uint64_t v56 = swift_allocObject();
  *(unsigned char *)(v56 + 16) = 8;
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_100330C78;
  *(void *)(v57 + 24) = v52;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_10005F790;
  *(void *)(v58 + 24) = v57;
  uint64_t v59 = swift_allocObject();
  *(unsigned char *)(v59 + 16) = 66;
  uint64_t v60 = swift_allocObject();
  *(unsigned char *)(v60 + 16) = 8;
  uint64_t v61 = v59;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_10033303C;
  *(void *)(v62 + 24) = v53;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_1000600D8;
  *(void *)(v63 + 24) = v62;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_1000600E0;
  *(void *)(v64 + 24) = v63;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v65 = swift_allocObject();
  sub_1004B810C(v65, 9);
  *uint64_t v66 = sub_10005F778;
  v66[1] = v54;
  uint64_t v66[2] = sub_100065514;
  v66[3] = buf;
  v66[4] = sub_10032FDF0;
  v66[5] = 0;
  v66[6] = sub_100065514;
  v66[7] = v55;
  v66[8] = sub_100065514;
  v66[9] = v56;
  v66[10] = sub_10005F7D0;
  v66[11] = v58;
  v66[12] = sub_100065514;
  v66[13] = v61;
  v66[14] = sub_100065514;
  v66[15] = v60;
  v66[16] = sub_1000600E8;
  v66[17] = v64;
  uint64_t v88 = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(osloga, v89))
  {
    uint64_t v67 = v55;
    uint64_t v68 = (uint8_t *)sub_1008F9FAC();
    uint64_t v69 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v97 = v69;
    uint64_t v98 = v70;
    unint64_t v87 = v68;
    *(_WORD *)uint64_t v68 = 770;
    long long v96 = v68 + 2;
    uint64_t v99 = (uint64_t (*)())sub_10005F778;
    uint64_t v100 = v88;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_100065514;
    uint64_t v100 = (uint64_t)buf;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_10032FDF0;
    uint64_t v100 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v67;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v56;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v100 = v58;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v61;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = sub_100065514;
    uint64_t v100 = v60;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    swift_release();
    uint64_t v99 = (uint64_t (*)())sub_1000600E8;
    uint64_t v100 = v64;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v99, (uint64_t)&v96, (uint64_t)&v97, (uint64_t)&v98);
    uint64_t v83 = *(void *)(v0 + 1904);
    uint64_t v84 = *(void *)(v0 + 1808);
    uint64_t v85 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, osloga, v89, "%{public}s %{public}s Error %{public}@", v87, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v86(v83, v85);
  }
  else
  {
    uint64_t v72 = *(void *)(v0 + 1904);
    uint64_t v73 = *(void *)(v0 + 1808);
    uint64_t v74 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
    v86(v72, v74);
  }
  *(void *)(v0 + 2472) = v86;
  uint64_t v75 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v75;
  void *v75 = v0;
  v75[1] = sub_10032A72C;
  uint64_t v76 = *(void *)(v0 + 2016);
  uint64_t v77 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v77, v76);
}

uint64_t sub_10031A978()
{
  uint64_t v46 = v0;
  unint64_t v1 = v0[272];
  uint64_t v2 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 0);
  sub_100330E40(v2, v1, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 32));
  uint64_t v3 = v0[274];
  v0[304] = v3;
  uint64_t v4 = v0[238];
  uint64_t v5 = v0[226];
  uint64_t v6 = v0[225];
  uint64_t v7 = v0[213];
  uint64_t v8 = sub_100306A20();
  v0[305] = v8;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[306] = v9;
  v0[307] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v4, v8, v6);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100330C24;
  *(void *)(v10 + 24) = v7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 34;
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(unsigned char *)(v13 + 16) = 34;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100330C78;
  *(void *)(v15 + 24) = v10;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10005F790;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 66;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = v17;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10033303C;
  *(void *)(v20 + 24) = v11;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_1000600D8;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1000600E0;
  *(void *)(v22 + 24) = v21;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v23 = swift_allocObject();
  sub_1004B810C(v23, 9);
  void *v24 = sub_10005F778;
  v24[1] = v12;
  v24[2] = sub_100065514;
  v24[3] = v38;
  v24[4] = sub_10032FDF0;
  v24[5] = 0;
  void v24[6] = sub_100065514;
  v24[7] = v13;
  v24[8] = sub_100065514;
  v24[9] = v14;
  v24[10] = sub_10005F7D0;
  v24[11] = v16;
  v24[12] = sub_100065514;
  v24[13] = v19;
  v24[14] = sub_100065514;
  v24[15] = v18;
  v24[16] = sub_1000600E8;
  v24[17] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v39))
  {
    uint64_t v25 = (uint8_t *)sub_1008F9FAC();
    uint64_t v42 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    buf = v25;
    *(_WORD *)uint64_t v25 = 770;
    uint64_t v41 = v25 + 2;
    uint64_t v44 = (uint64_t (*)())sub_10005F778;
    uint64_t v45 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = sub_100065514;
    uint64_t v45 = v38;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = sub_10032FDF0;
    uint64_t v45 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    uint64_t v44 = sub_100065514;
    uint64_t v45 = v13;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = sub_100065514;
    uint64_t v45 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v45 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = sub_100065514;
    uint64_t v45 = v19;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = sub_100065514;
    uint64_t v45 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    swift_release();
    uint64_t v44 = (uint64_t (*)())sub_1000600E8;
    uint64_t v45 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v44, (uint64_t)&v41, (uint64_t)&v42, (uint64_t)&v43);
    uint64_t v32 = v0[238];
    uint64_t v33 = v0[226];
    uint64_t v34 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v39, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v35(v32, v34);
  }
  else
  {
    uint64_t v26 = v0[238];
    uint64_t v27 = v0[226];
    uint64_t v28 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v35(v26, v28);
  }
  v0[309] = v35;
  os_log_type_t v29 = (void *)swift_task_alloc();
  v0[310] = v29;
  *os_log_type_t v29 = v0;
  v29[1] = sub_10032A72C;
  uint64_t v30 = v0[252];
  uint64_t v31 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v31, v30);
}

uint64_t sub_10031B1C0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100330E40(*(void *)(v2 + 2200), *(void *)(v2 + 2208), 1);
    uint64_t v3 = sub_10031C550;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 448);
    uint64_t v3 = sub_10031B2EC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10031B2EC()
{
  uint64_t v108 = v0;
  sub_10005F6AC(v0 + 400, v0 + 496);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1600);
    *(void *)(v0 + 2232) = v1;
    unint64_t v2 = *(void *)(v0 + 1608);
    *(void *)(v0 + 2240) = v2;
    int v3 = *(unsigned __int8 *)(v0 + 1616);
    if (v3 == 2)
    {
      uint64_t v4 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1976), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = sub_100330C24;
      *(void *)(v5 + 24) = v4;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      *(void *)(v6 + 24) = v2;
      sub_100330EB4(v1, v2, 2);
      swift_retain();
      sub_100330EB4(v1, v2, 2);
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 34;
      uint64_t v10 = swift_allocObject();
      *(unsigned char *)(v10 + 16) = 8;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_100332E7C;
      *(void *)(v11 + 24) = v5;
      uint64_t v12 = v7;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1000654EC;
      *(void *)(v13 + 24) = v11;
      os_log_type_t v14 = v8;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 32;
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = 8;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_100333064;
      *(void *)(v17 + 24) = v6;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1000654EC;
      *(void *)(v18 + 24) = v17;
      uint64_t v19 = swift_allocObject();
      sub_1004B810C(v19, 6);
      *uint64_t v20 = sub_100065514;
      v20[1] = v9;
      v20[2] = sub_100065514;
      v20[3] = v10;
      v20[4] = sub_100065500;
      v20[5] = v13;
      v20[6] = sub_100065514;
      v20[7] = v15;
      v20[8] = sub_100065514;
      v20[9] = v16;
      v20[10] = sub_100065500;
      v20[11] = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v12, v14))
      {
        bufa = *(uint8_t **)(v0 + 1976);
        os_log_t oslogc = *(os_log_t *)(v0 + 2072);
        uint64_t v85 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint8_t *, uint64_t))oslogc)(bufa, v85);
        goto LABEL_29;
      }
      osos_log_t log = (os_log_t)v15;
      uint64_t v21 = *(void *)(v0 + 2224);
      uint64_t v22 = (uint8_t *)sub_1008F9FAC();
      uint64_t v104 = 0;
      uint64_t v105 = swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 514;
      uint64_t v103 = v22 + 2;
      uint64_t v106 = sub_100065514;
      uint64_t v107 = v9;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
      if (!v21)
      {
        swift_release();
        uint64_t v106 = sub_100065514;
        uint64_t v107 = v10;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
        swift_release();
        uint64_t v106 = sub_100065500;
        uint64_t v107 = v13;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
        swift_release();
        uint64_t v106 = sub_100065514;
        uint64_t v107 = (uint64_t)oslog;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
        swift_release();
        uint64_t v106 = sub_100065514;
        uint64_t v107 = v16;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
        swift_release();
        uint64_t v106 = sub_100065500;
        uint64_t v107 = v18;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v24 = *(void *)(v0 + 1976);
        uint64_t v25 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v12, v14, "%{public}s modelName: %s", v22, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v23(v24, v25);
LABEL_29:
        *(void *)(v0 + 664) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 672) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 640) = xmmword_1013540A0;
        *(unsigned char *)(v0 + 656) = 10;
        uint64_t v86 = (void *)swift_task_alloc();
        *(void *)(v0 + 2248) = v86;
        *uint64_t v86 = v0;
        v86[1] = sub_10031CDBC;
        uint64_t v87 = *(void *)(v0 + 2136);
        uint64_t v88 = *(void *)(v0 + 2128);
        uint64_t v89 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 592, v89, v0 + 640, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v88, v87, 0);
      }
      goto LABEL_21;
    }
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v27 = v1;
    unint64_t v26 = v2;
    char v28 = v3;
  }
  else
  {
    unint64_t v26 = *(void *)(v0 + 2208);
    uint64_t v27 = *(void *)(v0 + 2200);
    char v28 = 1;
  }
  sub_100330E40(v27, v26, v28);
  uint64_t v29 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1832), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_100330C24;
  *(void *)(v30 + 24) = v29;
  swift_retain();
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  uint64_t v33 = swift_allocObject();
  *(unsigned char *)(v33 + 16) = 34;
  uint64_t v34 = swift_allocObject();
  *(unsigned char *)(v34 + 16) = 8;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100332E7C;
  *(void *)(v35 + 24) = v30;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1000654EC;
  *(void *)(v36 + 24) = v35;
  uint64_t v37 = swift_allocObject();
  sub_1004B810C(v37, 3);
  void *v38 = sub_100065514;
  v38[1] = v33;
  v38[2] = sub_100065514;
  v38[3] = v34;
  v38[4] = sub_100065500;
  v38[5] = v36;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v39 = *(void *)(v0 + 2224);
    uint64_t v40 = (uint8_t *)sub_1008F9FAC();
    uint64_t v104 = 0;
    uint64_t v105 = swift_slowAlloc();
    *(_WORD *)uint64_t v40 = 258;
    uint64_t v103 = v40 + 2;
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v33;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    if (v39)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v34;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_100065500;
    uint64_t v107 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    osos_log_t loga = (os_log_t)(v0 + 400);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v42 = *(void *)(v0 + 1832);
    uint64_t v43 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%{public}s Invalid modelNameCommandResponse!", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v44 = v42;
    uint64_t v45 = v43;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 400);
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v46 = *(void *)(v0 + 1832);
    uint64_t v47 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    uint64_t v44 = v46;
    uint64_t v45 = v47;
  }
  v41(v44, v45);
  unint64_t v48 = *(void *)(v0 + 2208);
  uint64_t v49 = *(void *)(v0 + 2200);
  unint64_t v50 = *(void *)(v0 + 2176);
  uint64_t v51 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v52 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v49, v48, 1);
  sub_100330E40(v51, v50, 0);
  sub_100330E40(v51, v50, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v52;
  uint64_t v53 = *(void *)(v0 + 1904);
  uint64_t v54 = *(void *)(v0 + 1808);
  uint64_t v55 = *(void *)(v0 + 1800);
  uint64_t v56 = *(void *)(v0 + 1704);
  uint64_t v57 = sub_100306A20();
  *(void *)(v0 + 2440) = v57;
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16);
  *(void *)(v0 + 2448) = v58;
  *(void *)(v0 + 2456) = (v54 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v58(v53, v57, v55);
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_100330C24;
  *(void *)(v59 + 24) = v56;
  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v52;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t v96 = static os_log_type_t.error.getter();
  uint64_t v61 = swift_allocObject();
  *(unsigned char *)(v61 + 16) = 34;
  buf = (uint8_t *)swift_allocObject();
  buf[16] = 8;
  uint64_t v62 = swift_allocObject();
  *(unsigned char *)(v62 + 16) = 34;
  uint64_t v63 = swift_allocObject();
  *(unsigned char *)(v63 + 16) = 8;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_100330C78;
  *(void *)(v64 + 24) = v59;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = sub_10005F790;
  *(void *)(v65 + 24) = v64;
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 66;
  uint64_t v67 = swift_allocObject();
  *(unsigned char *)(v67 + 16) = 8;
  uint64_t v68 = v66;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = sub_10033303C;
  *(void *)(v69 + 24) = v60;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = sub_1000600D8;
  *(void *)(v70 + 24) = v69;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_1000600E0;
  *(void *)(v71 + 24) = v70;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v72 = swift_allocObject();
  sub_1004B810C(v72, 9);
  *uint64_t v73 = sub_10005F778;
  v73[1] = v61;
  uint64_t v73[2] = sub_100065514;
  v73[3] = buf;
  v73[4] = sub_10032FDF0;
  v73[5] = 0;
  v73[6] = sub_100065514;
  v73[7] = v62;
  v73[8] = sub_100065514;
  v73[9] = v63;
  v73[10] = sub_10005F7D0;
  v73[11] = v65;
  v73[12] = sub_100065514;
  v73[13] = v68;
  v73[14] = sub_100065514;
  v73[15] = v67;
  v73[16] = sub_1000600E8;
  v73[17] = v71;
  uint64_t v95 = v61;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, v96))
  {
    uint64_t v74 = v62;
    uint64_t v75 = (uint8_t *)sub_1008F9FAC();
    uint64_t v76 = swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    uint64_t v104 = v76;
    uint64_t v105 = v77;
    uint64_t v94 = v75;
    *(_WORD *)uint64_t v75 = 770;
    uint64_t v103 = v75 + 2;
    uint64_t v106 = (uint64_t (*)())sub_10005F778;
    uint64_t v107 = v95;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_100065514;
    uint64_t v107 = (uint64_t)buf;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_10032FDF0;
    uint64_t v107 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v74;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v63;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v107 = v65;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v68;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = sub_100065514;
    uint64_t v107 = v67;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    swift_release();
    uint64_t v106 = (uint64_t (*)())sub_1000600E8;
    uint64_t v107 = v71;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v106, (uint64_t)&v103, (uint64_t)&v104, (uint64_t)&v105);
    uint64_t v90 = *(void *)(v0 + 1904);
    uint64_t v91 = *(void *)(v0 + 1808);
    uint64_t v92 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, v96, "%{public}s %{public}s Error %{public}@", v94, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
    v93(v90, v92);
  }
  else
  {
    uint64_t v79 = *(void *)(v0 + 1904);
    uint64_t v80 = *(void *)(v0 + 1808);
    uint64_t v81 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v93(v79, v81);
  }
  *(void *)(v0 + 2472) = v93;
  uint64_t v82 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v82;
  *uint64_t v82 = v0;
  v82[1] = sub_10032A72C;
  uint64_t v83 = *(void *)(v0 + 2016);
  uint64_t v84 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v84, v83);
}

uint64_t sub_10031C550()
{
  unint64_t v48 = v0;
  unint64_t v1 = v0[276];
  uint64_t v2 = v0[275];
  unint64_t v3 = v0[272];
  uint64_t v4 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 1);
  sub_100330E40(v4, v3, 0);
  sub_100330E40(v4, v3, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 56));
  uint64_t v5 = v0[278];
  v0[304] = v5;
  uint64_t v6 = v0[238];
  uint64_t v7 = v0[226];
  uint64_t v8 = v0[225];
  uint64_t v9 = v0[213];
  uint64_t v10 = sub_100306A20();
  v0[305] = v10;
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v0[306] = v11;
  v0[307] = (v7 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v11(v6, v10, v8);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100330C24;
  *(void *)(v12 + 24) = v9;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v5;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 34;
  uint64_t v40 = swift_allocObject();
  *(unsigned char *)(v40 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 34;
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100330C78;
  *(void *)(v17 + 24) = v12;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_10005F790;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = 66;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 8;
  uint64_t v21 = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_10033303C;
  *(void *)(v22 + 24) = v13;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1000600D8;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_1000600E0;
  *(void *)(v24 + 24) = v23;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v25 = swift_allocObject();
  sub_1004B810C(v25, 9);
  void *v26 = sub_10005F778;
  v26[1] = v14;
  v26[2] = sub_100065514;
  v26[3] = v40;
  v26[4] = sub_10032FDF0;
  v26[5] = 0;
  v26[6] = sub_100065514;
  v26[7] = v15;
  v26[8] = sub_100065514;
  v26[9] = v16;
  v26[10] = sub_10005F7D0;
  v26[11] = v18;
  v26[12] = sub_100065514;
  v26[13] = v21;
  v26[14] = sub_100065514;
  v26[15] = v20;
  v26[16] = sub_1000600E8;
  v26[17] = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v41))
  {
    uint64_t v27 = (uint8_t *)sub_1008F9FAC();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    buf = v27;
    *(_WORD *)uint64_t v27 = 770;
    uint64_t v43 = v27 + 2;
    uint64_t v46 = (uint64_t (*)())sub_10005F778;
    uint64_t v47 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = sub_100065514;
    uint64_t v47 = v40;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = sub_10032FDF0;
    uint64_t v47 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    uint64_t v46 = sub_100065514;
    uint64_t v47 = v15;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = sub_100065514;
    uint64_t v47 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v47 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = sub_100065514;
    uint64_t v47 = v21;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = sub_100065514;
    uint64_t v47 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    swift_release();
    uint64_t v46 = (uint64_t (*)())sub_1000600E8;
    uint64_t v47 = v24;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v46, (uint64_t)&v43, (uint64_t)&v44, (uint64_t)&v45);
    uint64_t v34 = v0[238];
    uint64_t v35 = v0[226];
    uint64_t v36 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v41, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v37(v34, v36);
  }
  else
  {
    uint64_t v28 = v0[238];
    uint64_t v29 = v0[226];
    uint64_t v30 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v37(v28, v30);
  }
  v0[309] = v37;
  uint64_t v31 = (void *)swift_task_alloc();
  v0[310] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_10032A72C;
  uint64_t v32 = v0[252];
  uint64_t v33 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v33, v32);
}

uint64_t sub_10031CDBC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    uint64_t v5 = sub_10031E1AC;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v2 + 80));
    uint64_t v5 = sub_10031CF08;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10031CF08()
{
  uint64_t v112 = v0;
  sub_10005F6AC(v0 + 592, v0 + 688);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1552);
    *(void *)(v0 + 2264) = v1;
    int v2 = *(unsigned __int8 *)(v0 + 1568);
    if (v2 == 3)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1968), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v1;
      swift_retain();
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      uint64_t v7 = swift_allocObject();
      *(unsigned char *)(v7 + 16) = 34;
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 8;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_100332E7C;
      *(void *)(v9 + 24) = v4;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_1000654EC;
      *(void *)(v10 + 24) = v9;
      os_log_type_t v11 = v6;
      uint64_t v12 = swift_allocObject();
      *(unsigned char *)(v12 + 16) = 0;
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 8;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_100331044;
      *(void *)(v14 + 24) = v5;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_10033108C;
      *(void *)(v15 + 24) = v14;
      uint64_t v16 = swift_allocObject();
      sub_1004B810C(v16, 6);
      void *v17 = sub_100065514;
      v17[1] = v7;
      v17[2] = sub_100065514;
      v17[3] = v8;
      v17[4] = sub_100065500;
      v17[5] = v10;
      v17[6] = sub_100065514;
      v17[7] = v12;
      v17[8] = sub_100065514;
      v17[9] = v13;
      v17[10] = sub_10006000C;
      v17[11] = v15;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(oslog, v6))
      {
        bufa = *(uint8_t **)(v0 + 1968);
        uint64_t v103 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
        uint64_t v87 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v103(bufa, v87);
        goto LABEL_29;
      }
      uint64_t v101 = v12;
      uint64_t v18 = *(void *)(v0 + 2256);
      uint64_t v19 = (uint8_t *)sub_1008F9FAC();
      uint64_t v108 = 0;
      uint64_t v109 = swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 514;
      uint64_t v107 = v19 + 2;
      uint64_t v110 = sub_100065514;
      uint64_t v111 = v7;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
      if (!v18)
      {
        swift_release();
        uint64_t v110 = sub_100065514;
        uint64_t v111 = v8;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
        swift_release();
        uint64_t v110 = sub_100065500;
        uint64_t v111 = v10;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
        swift_release();
        uint64_t v110 = sub_100065514;
        uint64_t v111 = v101;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
        swift_release();
        uint64_t v110 = sub_100065514;
        uint64_t v111 = v13;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
        swift_release();
        uint64_t v110 = (uint64_t (*)())sub_10006000C;
        uint64_t v111 = v15;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
        uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v21 = *(void *)(v0 + 1968);
        uint64_t v22 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, v11, "%{public}s category: %llu", v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v20(v21, v22);
LABEL_29:
        *(void *)(v0 + 856) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 864) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 832) = xmmword_1013540B0;
        *(unsigned char *)(v0 + 848) = 10;
        uint64_t v88 = (void *)swift_task_alloc();
        *(void *)(v0 + 2272) = v88;
        void *v88 = v0;
        v88[1] = sub_10031EA40;
        uint64_t v89 = *(void *)(v0 + 2136);
        uint64_t v90 = *(void *)(v0 + 2128);
        uint64_t v91 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 784, v91, v0 + 832, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v90, v89, 0);
      }
      goto LABEL_21;
    }
    osos_log_t loga = (os_log_t)(v0 + 592);
    unint64_t v28 = *(void *)(v0 + 1560);
    unint64_t v29 = *(void *)(v0 + 2240);
    uint64_t v30 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    sub_100330E40(v30, v29, 2);
    uint64_t v25 = v1;
    unint64_t v26 = v28;
    char v27 = v2;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 592);
    unint64_t v23 = *(void *)(v0 + 2240);
    uint64_t v24 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v25 = v24;
    unint64_t v26 = v23;
    char v27 = 2;
  }
  sub_100330E40(v25, v26, v27);
  uint64_t v31 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1840), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_100330C24;
  *(void *)(v32 + 24) = v31;
  swift_retain();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  uint64_t v35 = swift_allocObject();
  *(unsigned char *)(v35 + 16) = 34;
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_100332E7C;
  *(void *)(v37 + 24) = v32;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_1000654EC;
  *(void *)(v38 + 24) = v37;
  uint64_t v39 = swift_allocObject();
  sub_1004B810C(v39, 3);
  *uint64_t v40 = sub_100065514;
  v40[1] = v35;
  uint64_t v40[2] = sub_100065514;
  v40[3] = v36;
  v40[4] = sub_100065500;
  v40[5] = v38;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v41 = *(void *)(v0 + 2256);
    uint64_t v42 = (uint8_t *)sub_1008F9FAC();
    uint64_t v108 = 0;
    uint64_t v109 = swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 258;
    uint64_t v107 = v42 + 2;
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v35;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    if (v41)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_100065500;
    uint64_t v111 = v38;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v44 = *(void *)(v0 + 1840);
    uint64_t v45 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{public}s Invalid categoryCommandResponse!", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v43(v44, v45);
  }
  else
  {
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v47 = *(void *)(v0 + 1840);
    uint64_t v48 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v46(v47, v48);
  }
  unint64_t v49 = *(void *)(v0 + 2240);
  uint64_t v50 = *(void *)(v0 + 2232);
  unint64_t v97 = *(void *)(v0 + 2208);
  uint64_t v51 = *(void *)(v0 + 2200);
  unint64_t v52 = *(void *)(v0 + 2176);
  uint64_t v53 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v54 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v50, v49, 2);
  sub_100330E40(v51, v97, 1);
  sub_100330E40(v53, v52, 0);
  sub_100330E40(v53, v52, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v54;
  uint64_t v55 = *(void *)(v0 + 1904);
  uint64_t v56 = *(void *)(v0 + 1808);
  uint64_t v57 = *(void *)(v0 + 1800);
  uint64_t v58 = *(void *)(v0 + 1704);
  uint64_t v59 = sub_100306A20();
  *(void *)(v0 + 2440) = v59;
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
  *(void *)(v0 + 2448) = v60;
  *(void *)(v0 + 2456) = (v56 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v60(v55, v59, v57);
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_100330C24;
  *(void *)(v61 + 24) = v58;
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v54;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t buf = static os_log_type_t.error.getter();
  uint64_t v63 = swift_allocObject();
  *(unsigned char *)(v63 + 16) = 34;
  uint64_t v102 = swift_allocObject();
  *(unsigned char *)(v102 + 16) = 8;
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 34;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 8;
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = sub_100330C78;
  *(void *)(v66 + 24) = v61;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_10005F790;
  *(void *)(v67 + 24) = v66;
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 66;
  uint64_t v69 = swift_allocObject();
  *(unsigned char *)(v69 + 16) = 8;
  uint64_t v70 = v68;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_10033303C;
  *(void *)(v71 + 24) = v62;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_1000600D8;
  *(void *)(v72 + 24) = v71;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_1000600E0;
  *(void *)(v73 + 24) = v72;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v74 = swift_allocObject();
  sub_1004B810C(v74, 9);
  void *v75 = sub_10005F778;
  v75[1] = v63;
  v75[2] = sub_100065514;
  v75[3] = v102;
  v75[4] = sub_10032FDF0;
  v75[5] = 0;
  v75[6] = sub_100065514;
  v75[7] = v64;
  v75[8] = sub_100065514;
  v75[9] = v65;
  v75[10] = sub_10005F7D0;
  v75[11] = v67;
  v75[12] = sub_100065514;
  v75[13] = v70;
  v75[14] = sub_100065514;
  v75[15] = v69;
  v75[16] = sub_1000600E8;
  v75[17] = v73;
  uint64_t v98 = v63;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, buf))
  {
    uint64_t v76 = v64;
    uint64_t v77 = (uint8_t *)sub_1008F9FAC();
    uint64_t v78 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v108 = v78;
    uint64_t v109 = v79;
    os_log_type_t v96 = v77;
    *(_WORD *)uint64_t v77 = 770;
    uint64_t v107 = v77 + 2;
    uint64_t v110 = (uint64_t (*)())sub_10005F778;
    uint64_t v111 = v98;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v102;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_10032FDF0;
    uint64_t v111 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v76;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v65;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v111 = v67;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v70;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = sub_100065514;
    uint64_t v111 = v69;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    swift_release();
    uint64_t v110 = (uint64_t (*)())sub_1000600E8;
    uint64_t v111 = v73;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v110, (uint64_t)&v107, (uint64_t)&v108, (uint64_t)&v109);
    uint64_t v92 = *(void *)(v0 + 1904);
    uint64_t v93 = *(void *)(v0 + 1808);
    uint64_t v94 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, buf, "%{public}s %{public}s Error %{public}@", v96, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
    v95(v92, v94);
  }
  else
  {
    uint64_t v81 = *(void *)(v0 + 1904);
    uint64_t v82 = *(void *)(v0 + 1808);
    uint64_t v83 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v95 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
    v95(v81, v83);
  }
  *(void *)(v0 + 2472) = v95;
  uint64_t v84 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v84;
  void *v84 = v0;
  v84[1] = sub_10032A72C;
  uint64_t v85 = *(void *)(v0 + 2016);
  uint64_t v86 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v86, v85);
}

uint64_t sub_10031E1AC()
{
  uint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 80));
  uint64_t v7 = v0[282];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *unint64_t v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    unint64_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)unint64_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_10031EA40()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    unint64_t v5 = sub_10031FE80;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v2 + 104));
    unint64_t v5 = sub_10031EB8C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10031EB8C()
{
  uint64_t v113 = v0;
  sub_10005F6AC(v0 + 784, v0 + 880);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1528);
    *(void *)(v0 + 2288) = v1;
    int v2 = *(unsigned __int8 *)(v0 + 1544);
    if (v2 == 4)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1960), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(_WORD *)(v5 + 16) = v1;
      *(unsigned char *)(v5 + 18) = BYTE2(v1);
      *(unsigned char *)(v5 + 19) = BYTE3(v1);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = sub_1003310C4;
      *(void *)(v6 + 24) = v5;
      swift_retain();
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 34;
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100332E7C;
      *(void *)(v10 + 24) = v4;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_1000654EC;
      *(void *)(v11 + 24) = v10;
      os_log_type_t v12 = v7;
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 32;
      uint64_t v14 = swift_allocObject();
      *(unsigned char *)(v14 + 16) = 8;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_1003310D0;
      *(void *)(v15 + 24) = v6;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_1000654EC;
      *(void *)(v16 + 24) = v15;
      uint64_t v17 = swift_allocObject();
      sub_1004B810C(v17, 6);
      *uint64_t v18 = sub_100065514;
      v18[1] = v8;
      void v18[2] = sub_100065514;
      v18[3] = v9;
      uint64_t v18[4] = sub_100065500;
      v18[5] = v11;
      v18[6] = sub_100065514;
      v18[7] = v13;
      v18[8] = sub_100065514;
      v18[9] = v14;
      v18[10] = sub_100065500;
      v18[11] = v16;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(oslog, v7))
      {
        bufa = *(uint8_t **)(v0 + 1960);
        uint64_t v104 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
        uint64_t v88 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v104(bufa, v88);
        goto LABEL_29;
      }
      uint64_t v102 = v13;
      uint64_t v19 = *(void *)(v0 + 2280);
      uint64_t v20 = (uint8_t *)sub_1008F9FAC();
      uint64_t v109 = 0;
      uint64_t v110 = swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 514;
      uint64_t v108 = v20 + 2;
      uint64_t v111 = sub_100065514;
      uint64_t v112 = v8;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
      if (!v19)
      {
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v9;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065500;
        uint64_t v112 = v11;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v102;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v14;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065500;
        uint64_t v112 = v16;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v22 = *(void *)(v0 + 1960);
        uint64_t v23 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, v12, "%{public}s protocolVersion: %s", v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v21(v22, v23);
LABEL_29:
        *(void *)(v0 + 1048) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 1056) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 1024) = xmmword_1013540C0;
        *(unsigned char *)(v0 + 1040) = 10;
        uint64_t v89 = (void *)swift_task_alloc();
        *(void *)(v0 + 2296) = v89;
        void *v89 = v0;
        v89[1] = sub_100320724;
        uint64_t v90 = *(void *)(v0 + 2136);
        uint64_t v91 = *(void *)(v0 + 2128);
        uint64_t v92 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 976, v92, v0 + 1024, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v91, v90, 0);
      }
      goto LABEL_21;
    }
    osos_log_t loga = (os_log_t)(v0 + 784);
    unint64_t v29 = *(void *)(v0 + 1536);
    unint64_t v30 = *(void *)(v0 + 2240);
    uint64_t v31 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    sub_100330E40(v31, v30, 2);
    uint64_t v26 = v1;
    unint64_t v27 = v29;
    char v28 = v2;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 784);
    unint64_t v24 = *(void *)(v0 + 2240);
    uint64_t v25 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v26 = v25;
    unint64_t v27 = v24;
    char v28 = 2;
  }
  sub_100330E40(v26, v27, v28);
  uint64_t v32 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1848), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100330C24;
  *(void *)(v33 + 24) = v32;
  swift_retain();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 34;
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = 8;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_100332E7C;
  *(void *)(v38 + 24) = v33;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1000654EC;
  *(void *)(v39 + 24) = v38;
  uint64_t v40 = swift_allocObject();
  sub_1004B810C(v40, 3);
  *uint64_t v41 = sub_100065514;
  v41[1] = v36;
  v41[2] = sub_100065514;
  v41[3] = v37;
  v41[4] = sub_100065500;
  v41[5] = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v42 = *(void *)(v0 + 2280);
    os_log_type_t v43 = (uint8_t *)sub_1008F9FAC();
    uint64_t v109 = 0;
    uint64_t v110 = swift_slowAlloc();
    *(_WORD *)os_log_type_t v43 = 258;
    uint64_t v108 = v43 + 2;
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    if (v42)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v37;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065500;
    uint64_t v112 = v39;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v45 = *(void *)(v0 + 1848);
    uint64_t v46 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s Invalid protocolVersionCommandResponse!", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v44(v45, v46);
  }
  else
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v48 = *(void *)(v0 + 1848);
    uint64_t v49 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v47(v48, v49);
  }
  unint64_t v50 = *(void *)(v0 + 2240);
  uint64_t v51 = *(void *)(v0 + 2232);
  unint64_t v98 = *(void *)(v0 + 2208);
  uint64_t v52 = *(void *)(v0 + 2200);
  unint64_t v53 = *(void *)(v0 + 2176);
  uint64_t v54 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v55 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v51, v50, 2);
  sub_100330E40(v52, v98, 1);
  sub_100330E40(v54, v53, 0);
  sub_100330E40(v54, v53, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v55;
  uint64_t v56 = *(void *)(v0 + 1904);
  uint64_t v57 = *(void *)(v0 + 1808);
  uint64_t v58 = *(void *)(v0 + 1800);
  uint64_t v59 = *(void *)(v0 + 1704);
  uint64_t v60 = sub_100306A20();
  *(void *)(v0 + 2440) = v60;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
  *(void *)(v0 + 2448) = v61;
  *(void *)(v0 + 2456) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v61(v56, v60, v58);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_100330C24;
  *(void *)(v62 + 24) = v59;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v55;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t buf = static os_log_type_t.error.getter();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 34;
  uint64_t v103 = swift_allocObject();
  *(unsigned char *)(v103 + 16) = 8;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 34;
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 8;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_100330C78;
  *(void *)(v67 + 24) = v62;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_10005F790;
  *(void *)(v68 + 24) = v67;
  uint64_t v69 = swift_allocObject();
  *(unsigned char *)(v69 + 16) = 66;
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = 8;
  uint64_t v71 = v69;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_10033303C;
  *(void *)(v72 + 24) = v63;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_1000600D8;
  *(void *)(v73 + 24) = v72;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1000600E0;
  *(void *)(v74 + 24) = v73;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v75 = swift_allocObject();
  sub_1004B810C(v75, 9);
  *uint64_t v76 = sub_10005F778;
  v76[1] = v64;
  v76[2] = sub_100065514;
  v76[3] = v103;
  v76[4] = sub_10032FDF0;
  v76[5] = 0;
  v76[6] = sub_100065514;
  v76[7] = v65;
  v76[8] = sub_100065514;
  v76[9] = v66;
  v76[10] = sub_10005F7D0;
  v76[11] = v68;
  v76[12] = sub_100065514;
  v76[13] = v71;
  v76[14] = sub_100065514;
  v76[15] = v70;
  v76[16] = sub_1000600E8;
  v76[17] = v74;
  uint64_t v99 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, buf))
  {
    uint64_t v77 = v65;
    uint64_t v78 = (uint8_t *)sub_1008F9FAC();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v109 = v79;
    uint64_t v110 = v80;
    unint64_t v97 = v78;
    *(_WORD *)uint64_t v78 = 770;
    uint64_t v108 = v78 + 2;
    uint64_t v111 = (uint64_t (*)())sub_10005F778;
    uint64_t v112 = v99;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v103;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_10032FDF0;
    uint64_t v112 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v77;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v66;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v112 = v68;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v71;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v70;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_1000600E8;
    uint64_t v112 = v74;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v93 = *(void *)(v0 + 1904);
    uint64_t v94 = *(void *)(v0 + 1808);
    uint64_t v95 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, buf, "%{public}s %{public}s Error %{public}@", v97, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    os_log_type_t v96 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
    v96(v93, v95);
  }
  else
  {
    uint64_t v82 = *(void *)(v0 + 1904);
    uint64_t v83 = *(void *)(v0 + 1808);
    uint64_t v84 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    os_log_type_t v96 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v96(v82, v84);
  }
  *(void *)(v0 + 2472) = v96;
  uint64_t v85 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v85;
  void *v85 = v0;
  v85[1] = sub_10032A72C;
  uint64_t v86 = *(void *)(v0 + 2016);
  uint64_t v87 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v87, v86);
}

uint64_t sub_10031FE80()
{
  unint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 74));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 104));
  uint64_t v7 = v0[285];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *char v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    unint64_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)unint64_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_100320724()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    unint64_t v5 = sub_100321B5C;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v2 + 128));
    unint64_t v5 = sub_100320870;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100320870()
{
  uint64_t v114 = v0;
  sub_10005F6AC(v0 + 976, v0 + 1072);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1504);
    *(void *)(v0 + 2312) = v1;
    int v2 = *(unsigned __int8 *)(v0 + 1520);
    if (v2 == 8)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1952), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(_DWORD *)(v5 + 16) = v1;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = sub_1003310C4;
      *(void *)(v6 + 24) = v5;
      swift_retain();
      uint64_t v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 34;
      uint64_t v10 = swift_allocObject();
      *(unsigned char *)(v10 + 16) = 8;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_100332E7C;
      *(void *)(v11 + 24) = v4;
      uint64_t v12 = v7;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = sub_1000654EC;
      *(void *)(v13 + 24) = v11;
      os_log_type_t v14 = v8;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 32;
      uint64_t v16 = swift_allocObject();
      *(unsigned char *)(v16 + 16) = 8;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_100331148;
      *(void *)(v17 + 24) = v6;
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = sub_1000654EC;
      *(void *)(v18 + 24) = v17;
      uint64_t v19 = swift_allocObject();
      sub_1004B810C(v19, 6);
      *uint64_t v20 = sub_100065514;
      v20[1] = v9;
      v20[2] = sub_100065514;
      v20[3] = v10;
      v20[4] = sub_100065500;
      v20[5] = v13;
      v20[6] = sub_100065514;
      v20[7] = v15;
      v20[8] = sub_100065514;
      v20[9] = v16;
      v20[10] = sub_100065500;
      v20[11] = v18;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v12, v14))
      {
        bufa = *(uint8_t **)(v0 + 1952);
        os_log_t oslogc = *(os_log_t *)(v0 + 2072);
        uint64_t v90 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        ((void (*)(uint8_t *, uint64_t))oslogc)(bufa, v90);
        goto LABEL_29;
      }
      osos_log_t log = (os_log_t)v15;
      uint64_t v21 = *(void *)(v0 + 2304);
      uint64_t v22 = (uint8_t *)sub_1008F9FAC();
      uint64_t v110 = 0;
      uint64_t v111 = swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 514;
      uint64_t v109 = v22 + 2;
      uint64_t v112 = sub_100065514;
      uint64_t v113 = v9;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
      if (!v21)
      {
        swift_release();
        uint64_t v112 = sub_100065514;
        uint64_t v113 = v10;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
        swift_release();
        uint64_t v112 = sub_100065500;
        uint64_t v113 = v13;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
        swift_release();
        uint64_t v112 = sub_100065514;
        uint64_t v113 = (uint64_t)oslog;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
        swift_release();
        uint64_t v112 = sub_100065514;
        uint64_t v113 = v16;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
        swift_release();
        uint64_t v112 = sub_100065500;
        uint64_t v113 = v18;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v24 = *(void *)(v0 + 1952);
        uint64_t v25 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v12, v14, "%{public}s capability: %s", v22, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v23(v24, v25);
LABEL_29:
        *(void *)(v0 + 1240) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 1248) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 1216) = xmmword_1013540D0;
        *(unsigned char *)(v0 + 1232) = 10;
        uint64_t v91 = (void *)swift_task_alloc();
        *(void *)(v0 + 2320) = v91;
        *uint64_t v91 = v0;
        v91[1] = sub_10032240C;
        uint64_t v92 = *(void *)(v0 + 2136);
        uint64_t v93 = *(void *)(v0 + 2128);
        uint64_t v94 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 1168, v94, v0 + 1216, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v93, v92, 0);
      }
      goto LABEL_21;
    }
    osos_log_t loga = (os_log_t)(v0 + 976);
    unint64_t v31 = *(void *)(v0 + 1512);
    unint64_t v32 = *(void *)(v0 + 2240);
    uint64_t v33 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    sub_100330E40(v33, v32, 2);
    uint64_t v28 = v1;
    unint64_t v29 = v31;
    char v30 = v2;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 976);
    unint64_t v26 = *(void *)(v0 + 2240);
    uint64_t v27 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v28 = v27;
    unint64_t v29 = v26;
    char v30 = 2;
  }
  sub_100330E40(v28, v29, v30);
  uint64_t v34 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1856), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_100330C24;
  *(void *)(v35 + 24) = v34;
  swift_retain();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = 34;
  uint64_t v39 = swift_allocObject();
  *(unsigned char *)(v39 + 16) = 8;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_100332E7C;
  *(void *)(v40 + 24) = v35;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1000654EC;
  *(void *)(v41 + 24) = v40;
  uint64_t v42 = swift_allocObject();
  sub_1004B810C(v42, 3);
  void *v43 = sub_100065514;
  v43[1] = v38;
  uint64_t v43[2] = sub_100065514;
  v43[3] = v39;
  v43[4] = sub_100065500;
  v43[5] = v41;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v44 = *(void *)(v0 + 2304);
    uint64_t v45 = (uint8_t *)sub_1008F9FAC();
    uint64_t v110 = 0;
    uint64_t v111 = swift_slowAlloc();
    *(_WORD *)uint64_t v45 = 258;
    uint64_t v109 = v45 + 2;
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v38;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    if (v44)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v39;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_100065500;
    uint64_t v113 = v41;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v47 = *(void *)(v0 + 1856);
    uint64_t v48 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s Invalid capabilityCommandResponse!", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v46(v47, v48);
  }
  else
  {
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v50 = *(void *)(v0 + 1856);
    uint64_t v51 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v49(v50, v51);
  }
  unint64_t v52 = *(void *)(v0 + 2240);
  uint64_t v53 = *(void *)(v0 + 2232);
  unint64_t v100 = *(void *)(v0 + 2208);
  uint64_t v54 = *(void *)(v0 + 2200);
  unint64_t v55 = *(void *)(v0 + 2176);
  uint64_t v56 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v57 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v53, v52, 2);
  sub_100330E40(v54, v100, 1);
  sub_100330E40(v56, v55, 0);
  sub_100330E40(v56, v55, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 784);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v57;
  uint64_t v58 = *(void *)(v0 + 1904);
  uint64_t v59 = *(void *)(v0 + 1808);
  uint64_t v60 = *(void *)(v0 + 1800);
  uint64_t v61 = *(void *)(v0 + 1704);
  uint64_t v62 = sub_100306A20();
  *(void *)(v0 + 2440) = v62;
  uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
  *(void *)(v0 + 2448) = v63;
  *(void *)(v0 + 2456) = (v59 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v63(v58, v62, v60);
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_100330C24;
  *(void *)(v64 + 24) = v61;
  uint64_t v65 = swift_allocObject();
  *(void *)(v65 + 16) = v57;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t v102 = static os_log_type_t.error.getter();
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 34;
  os_log_type_t buf = (uint8_t *)swift_allocObject();
  buf[16] = 8;
  uint64_t v67 = swift_allocObject();
  *(unsigned char *)(v67 + 16) = 34;
  uint64_t v68 = swift_allocObject();
  *(unsigned char *)(v68 + 16) = 8;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = sub_100330C78;
  *(void *)(v69 + 24) = v64;
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = sub_10005F790;
  *(void *)(v70 + 24) = v69;
  uint64_t v71 = swift_allocObject();
  *(unsigned char *)(v71 + 16) = 66;
  uint64_t v72 = swift_allocObject();
  *(unsigned char *)(v72 + 16) = 8;
  uint64_t v73 = v71;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_10033303C;
  *(void *)(v74 + 24) = v65;
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = sub_1000600D8;
  *(void *)(v75 + 24) = v74;
  uint64_t v76 = swift_allocObject();
  *(void *)(v76 + 16) = sub_1000600E0;
  *(void *)(v76 + 24) = v75;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v77 = swift_allocObject();
  sub_1004B810C(v77, 9);
  *uint64_t v78 = sub_10005F778;
  v78[1] = v66;
  v78[2] = sub_100065514;
  v78[3] = buf;
  v78[4] = sub_10032FDF0;
  v78[5] = 0;
  v78[6] = sub_100065514;
  v78[7] = v67;
  v78[8] = sub_100065514;
  v78[9] = v68;
  v78[10] = sub_10005F7D0;
  v78[11] = v70;
  v78[12] = sub_100065514;
  v78[13] = v73;
  v78[14] = sub_100065514;
  v78[15] = v72;
  v78[16] = sub_1000600E8;
  v78[17] = v76;
  uint64_t v101 = v66;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, v102))
  {
    uint64_t v79 = v67;
    uint64_t v80 = (uint8_t *)sub_1008F9FAC();
    uint64_t v81 = swift_slowAlloc();
    uint64_t v82 = swift_slowAlloc();
    uint64_t v110 = v81;
    uint64_t v111 = v82;
    uint64_t v99 = v80;
    *(_WORD *)uint64_t v80 = 770;
    uint64_t v109 = v80 + 2;
    uint64_t v112 = (uint64_t (*)())sub_10005F778;
    uint64_t v113 = v101;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_100065514;
    uint64_t v113 = (uint64_t)buf;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_10032FDF0;
    uint64_t v113 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v79;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v68;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v113 = v70;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v73;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = sub_100065514;
    uint64_t v113 = v72;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    swift_release();
    uint64_t v112 = (uint64_t (*)())sub_1000600E8;
    uint64_t v113 = v76;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v112, (uint64_t)&v109, (uint64_t)&v110, (uint64_t)&v111);
    uint64_t v95 = *(void *)(v0 + 1904);
    uint64_t v96 = *(void *)(v0 + 1808);
    uint64_t v97 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, v102, "%{public}s %{public}s Error %{public}@", v99, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    unint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
    v98(v95, v97);
  }
  else
  {
    uint64_t v84 = *(void *)(v0 + 1904);
    uint64_t v85 = *(void *)(v0 + 1808);
    uint64_t v86 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    unint64_t v98 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v98(v84, v86);
  }
  *(void *)(v0 + 2472) = v98;
  uint64_t v87 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v87;
  void *v87 = v0;
  v87[1] = sub_10032A72C;
  uint64_t v88 = *(void *)(v0 + 2016);
  uint64_t v89 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v89, v88);
}

uint64_t sub_100321B5C()
{
  uint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 98));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 74));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 128));
  uint64_t v7 = v0[288];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *uint64_t v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    unint64_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)unint64_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_10032240C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2328) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    unint64_t v5 = sub_100323830;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v2 + 152));
    unint64_t v5 = sub_100322558;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100322558()
{
  uint64_t v113 = v0;
  sub_10005F6AC(v0 + 1168, v0 + 1264);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1456);
    int v2 = *(unsigned __int8 *)(v0 + 1472);
    if (v2 == 5)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1944), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(unsigned char *)(v5 + 16) = v1;
      swift_retain();
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v6 = static os_log_type_t.default.getter();
      uint64_t v7 = swift_allocObject();
      *(unsigned char *)(v7 + 16) = 34;
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 8;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_100332E7C;
      *(void *)(v9 + 24) = v4;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_1000654EC;
      *(void *)(v10 + 24) = v9;
      os_log_type_t v11 = v6;
      uint64_t v12 = swift_allocObject();
      *(unsigned char *)(v12 + 16) = 0;
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 1;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_1003311C0;
      *(void *)(v14 + 24) = v5;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_100060CF8;
      *(void *)(v15 + 24) = v14;
      uint64_t v16 = swift_allocObject();
      sub_1004B810C(v16, 6);
      void *v17 = sub_100065514;
      v17[1] = v7;
      v17[2] = sub_100065514;
      v17[3] = v8;
      v17[4] = sub_100065500;
      v17[5] = v10;
      v17[6] = sub_100065514;
      v17[7] = v12;
      v17[8] = sub_100065514;
      v17[9] = v13;
      v17[10] = sub_100060D00;
      v17[11] = v15;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(oslog, v11))
      {
        bufa = *(uint8_t **)(v0 + 1944);
        uint64_t v104 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
        uint64_t v88 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v104(bufa, v88);
        goto LABEL_29;
      }
      uint64_t v102 = v15;
      uint64_t v18 = v12;
      uint64_t v19 = *(void *)(v0 + 2328);
      uint64_t v20 = (uint8_t *)sub_1008F9FAC();
      uint64_t v109 = 0;
      uint64_t v110 = swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 514;
      uint64_t v108 = v20 + 2;
      uint64_t v111 = sub_100065514;
      uint64_t v112 = v7;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
      if (!v19)
      {
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v8;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065500;
        uint64_t v112 = v10;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v18;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v13;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = (uint64_t (*)())sub_100060D00;
        uint64_t v112 = v102;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v22 = *(void *)(v0 + 1944);
        uint64_t v23 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, v11, "%{public}snetworkID: %hhu", v20, 0xFu);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v21(v22, v23);
LABEL_29:
        *(void *)(v0 + 1432) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 1440) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 1408) = xmmword_1013540E0;
        *(unsigned char *)(v0 + 1424) = 10;
        uint64_t v89 = (void *)swift_task_alloc();
        *(void *)(v0 + 2336) = v89;
        void *v89 = v0;
        v89[1] = sub_1003240F0;
        uint64_t v90 = *(void *)(v0 + 2136);
        uint64_t v91 = *(void *)(v0 + 2128);
        uint64_t v92 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 1360, v92, v0 + 1408, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v91, v90, 0);
      }
      goto LABEL_21;
    }
    osos_log_t loga = (os_log_t)(v0 + 1168);
    unint64_t v29 = *(void *)(v0 + 1464);
    unint64_t v30 = *(void *)(v0 + 2240);
    uint64_t v31 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    sub_100330E40(v31, v30, 2);
    uint64_t v26 = v1;
    unint64_t v27 = v29;
    char v28 = v2;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 1168);
    unint64_t v24 = *(void *)(v0 + 2240);
    uint64_t v25 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v26 = v25;
    unint64_t v27 = v24;
    char v28 = 2;
  }
  sub_100330E40(v26, v27, v28);
  uint64_t v32 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1864), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100330C24;
  *(void *)(v33 + 24) = v32;
  swift_retain();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 34;
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = 8;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_100332E7C;
  *(void *)(v38 + 24) = v33;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1000654EC;
  *(void *)(v39 + 24) = v38;
  uint64_t v40 = swift_allocObject();
  sub_1004B810C(v40, 3);
  *uint64_t v41 = sub_100065514;
  v41[1] = v36;
  v41[2] = sub_100065514;
  v41[3] = v37;
  v41[4] = sub_100065500;
  v41[5] = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v42 = *(void *)(v0 + 2328);
    os_log_type_t v43 = (uint8_t *)sub_1008F9FAC();
    uint64_t v109 = 0;
    uint64_t v110 = swift_slowAlloc();
    *(_WORD *)os_log_type_t v43 = 258;
    uint64_t v108 = v43 + 2;
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    if (v42)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v37;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065500;
    uint64_t v112 = v39;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v45 = *(void *)(v0 + 1864);
    uint64_t v46 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s Invalid networkIDCommandResponse!", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v44(v45, v46);
  }
  else
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v48 = *(void *)(v0 + 1864);
    uint64_t v49 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v47(v48, v49);
  }
  unint64_t v50 = *(void *)(v0 + 2240);
  uint64_t v51 = *(void *)(v0 + 2232);
  uint64_t v97 = *(uint8_t **)(v0 + 2208);
  uint64_t v52 = *(void *)(v0 + 2200);
  unint64_t v53 = *(void *)(v0 + 2176);
  uint64_t v54 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v55 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v51, v50, 2);
  sub_100330E40(v52, (unint64_t)v97, 1);
  sub_100330E40(v54, v53, 0);
  sub_100330E40(v54, v53, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 784);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v55;
  uint64_t v56 = *(void *)(v0 + 1904);
  uint64_t v57 = *(void *)(v0 + 1808);
  uint64_t v58 = *(void *)(v0 + 1800);
  uint64_t v59 = *(void *)(v0 + 1704);
  uint64_t v60 = sub_100306A20();
  *(void *)(v0 + 2440) = v60;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
  *(void *)(v0 + 2448) = v61;
  *(void *)(v0 + 2456) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v61(v56, v60, v58);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_100330C24;
  *(void *)(v62 + 24) = v59;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v55;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t buf = static os_log_type_t.error.getter();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 34;
  uint64_t v103 = swift_allocObject();
  *(unsigned char *)(v103 + 16) = 8;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 34;
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 8;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_100330C78;
  *(void *)(v67 + 24) = v62;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_10005F790;
  *(void *)(v68 + 24) = v67;
  uint64_t v69 = swift_allocObject();
  *(unsigned char *)(v69 + 16) = 66;
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = 8;
  uint64_t v71 = v69;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_10033303C;
  *(void *)(v72 + 24) = v63;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_1000600D8;
  *(void *)(v73 + 24) = v72;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1000600E0;
  *(void *)(v74 + 24) = v73;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v75 = swift_allocObject();
  sub_1004B810C(v75, 9);
  *uint64_t v76 = sub_10005F778;
  v76[1] = v64;
  v76[2] = sub_100065514;
  v76[3] = v103;
  v76[4] = sub_10032FDF0;
  v76[5] = 0;
  v76[6] = sub_100065514;
  v76[7] = v65;
  v76[8] = sub_100065514;
  v76[9] = v66;
  v76[10] = sub_10005F7D0;
  v76[11] = v68;
  v76[12] = sub_100065514;
  v76[13] = v71;
  v76[14] = sub_100065514;
  v76[15] = v70;
  v76[16] = sub_1000600E8;
  v76[17] = v74;
  uint64_t v99 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, buf))
  {
    uint64_t v77 = v65;
    uint64_t v78 = (uint8_t *)sub_1008F9FAC();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v109 = v79;
    uint64_t v110 = v80;
    unint64_t v98 = v78;
    *(_WORD *)uint64_t v78 = 770;
    uint64_t v108 = v78 + 2;
    uint64_t v111 = (uint64_t (*)())sub_10005F778;
    uint64_t v112 = v99;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v103;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_10032FDF0;
    uint64_t v112 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v77;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v66;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v112 = v68;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v71;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v70;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_1000600E8;
    uint64_t v112 = v74;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v93 = *(void *)(v0 + 1904);
    uint64_t v94 = *(void *)(v0 + 1808);
    uint64_t v95 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, buf, "%{public}s %{public}s Error %{public}@", v98, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
    v96(v93, v95);
  }
  else
  {
    uint64_t v82 = *(void *)(v0 + 1904);
    uint64_t v83 = *(void *)(v0 + 1808);
    uint64_t v84 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v96(v82, v84);
  }
  *(void *)(v0 + 2472) = v96;
  uint64_t v85 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v85;
  void *v85 = v0;
  v85[1] = sub_10032A72C;
  uint64_t v86 = *(void *)(v0 + 2016);
  uint64_t v87 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v87, v86);
}

uint64_t sub_100323830()
{
  unint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 122));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 98));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 74));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 152));
  uint64_t v7 = v0[291];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *char v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    unint64_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)unint64_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_1003240F0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    unint64_t v5 = sub_100325558;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v2 + 176));
    unint64_t v5 = sub_10032423C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10032423C()
{
  uint64_t v113 = v0;
  sub_10005F6AC(v0 + 1360, v0 + 1312);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1480);
    *(void *)(v0 + 2352) = v1;
    int v2 = *(unsigned __int8 *)(v0 + 1496);
    if (v2 == 9)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1936), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(_WORD *)(v5 + 16) = v1;
      *(unsigned char *)(v5 + 18) = BYTE2(v1);
      *(unsigned char *)(v5 + 19) = BYTE3(v1);
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = sub_100333040;
      *(void *)(v6 + 24) = v5;
      swift_retain();
      osos_log_t log = (os_log_t)Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 34;
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100332E7C;
      *(void *)(v10 + 24) = v4;
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = sub_1000654EC;
      *(void *)(v11 + 24) = v10;
      os_log_type_t v12 = v7;
      uint64_t v13 = swift_allocObject();
      *(unsigned char *)(v13 + 16) = 32;
      uint64_t v14 = swift_allocObject();
      *(unsigned char *)(v14 + 16) = 8;
      uint64_t v15 = swift_allocObject();
      *(void *)(v15 + 16) = sub_100332E80;
      *(void *)(v15 + 24) = v6;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_1000654EC;
      *(void *)(v16 + 24) = v15;
      uint64_t v17 = swift_allocObject();
      sub_1004B810C(v17, 6);
      *uint64_t v18 = sub_100065514;
      v18[1] = v8;
      void v18[2] = sub_100065514;
      v18[3] = v9;
      uint64_t v18[4] = sub_100065500;
      v18[5] = v11;
      v18[6] = sub_100065514;
      v18[7] = v13;
      v18[8] = sub_100065514;
      v18[9] = v14;
      v18[10] = sub_100065500;
      v18[11] = v16;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(oslog, v7))
      {
        bufa = *(uint8_t **)(v0 + 1936);
        uint64_t v104 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
        uint64_t v88 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v104(bufa, v88);
        goto LABEL_29;
      }
      uint64_t v102 = v13;
      uint64_t v19 = *(void *)(v0 + 2344);
      uint64_t v20 = (uint8_t *)sub_1008F9FAC();
      uint64_t v109 = 0;
      uint64_t v110 = swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 514;
      uint64_t v108 = v20 + 2;
      uint64_t v111 = sub_100065514;
      uint64_t v112 = v8;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
      if (!v19)
      {
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v9;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065500;
        uint64_t v112 = v11;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v102;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065514;
        uint64_t v112 = v14;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        swift_release();
        uint64_t v111 = sub_100065500;
        uint64_t v112 = v16;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
        uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v22 = *(void *)(v0 + 1936);
        uint64_t v23 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, oslog, v12, "%{public}s firmwareVersion: %s", v20, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v21(v22, v23);
LABEL_29:
        *(void *)(v0 + 952) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 960) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 928) = xmmword_1013540F0;
        *(unsigned char *)(v0 + 944) = 10;
        uint64_t v89 = (void *)swift_task_alloc();
        *(void *)(v0 + 2360) = v89;
        void *v89 = v0;
        v89[1] = sub_100325E28;
        uint64_t v90 = *(void *)(v0 + 2136);
        uint64_t v91 = *(void *)(v0 + 2128);
        uint64_t v92 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 1120, v92, v0 + 928, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v91, v90, 0);
      }
      goto LABEL_21;
    }
    osos_log_t loga = (os_log_t)(v0 + 1360);
    unint64_t v29 = *(void *)(v0 + 1488);
    unint64_t v30 = *(void *)(v0 + 2240);
    uint64_t v31 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    sub_100330E40(v31, v30, 2);
    uint64_t v26 = v1;
    unint64_t v27 = v29;
    char v28 = v2;
  }
  else
  {
    osos_log_t loga = (os_log_t)(v0 + 1360);
    unint64_t v24 = *(void *)(v0 + 2240);
    uint64_t v25 = *(void *)(v0 + 2232);
    sub_100330E40(*(void *)(v0 + 2200), *(void *)(v0 + 2208), 1);
    uint64_t v26 = v25;
    unint64_t v27 = v24;
    char v28 = 2;
  }
  sub_100330E40(v26, v27, v28);
  uint64_t v32 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1872), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_100330C24;
  *(void *)(v33 + 24) = v32;
  swift_retain();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.error.getter();
  uint64_t v36 = swift_allocObject();
  *(unsigned char *)(v36 + 16) = 34;
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = 8;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_100332E7C;
  *(void *)(v38 + 24) = v33;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1000654EC;
  *(void *)(v39 + 24) = v38;
  uint64_t v40 = swift_allocObject();
  sub_1004B810C(v40, 3);
  *uint64_t v41 = sub_100065514;
  v41[1] = v36;
  v41[2] = sub_100065514;
  v41[3] = v37;
  v41[4] = sub_100065500;
  v41[5] = v39;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v42 = *(void *)(v0 + 2344);
    os_log_type_t v43 = (uint8_t *)sub_1008F9FAC();
    uint64_t v109 = 0;
    uint64_t v110 = swift_slowAlloc();
    *(_WORD *)os_log_type_t v43 = 258;
    uint64_t v108 = v43 + 2;
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v36;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    if (v42)
    {
LABEL_21:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v37;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065500;
    uint64_t v112 = v39;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v45 = *(void *)(v0 + 1872);
    uint64_t v46 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s Invalid firmwareVersionCommandResponse!", v43, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v44(v45, v46);
  }
  else
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v48 = *(void *)(v0 + 1872);
    uint64_t v49 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v47(v48, v49);
  }
  unint64_t v50 = *(void *)(v0 + 2240);
  uint64_t v51 = *(void *)(v0 + 2232);
  unint64_t v97 = *(void *)(v0 + 2208);
  uint64_t v52 = *(void *)(v0 + 2200);
  unint64_t v53 = *(void *)(v0 + 2176);
  uint64_t v54 = *(void *)(v0 + 2168);
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v55 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  swift_release();
  swift_release();
  sub_100330E40(v51, v50, 2);
  sub_100330E40(v52, v97, 1);
  sub_100330E40(v54, v53, 0);
  sub_100330E40(v54, v53, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)osloga);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1168);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 784);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  *(void *)(v0 + 2432) = v55;
  uint64_t v56 = *(void *)(v0 + 1904);
  uint64_t v57 = *(void *)(v0 + 1808);
  uint64_t v58 = *(void *)(v0 + 1800);
  uint64_t v59 = *(void *)(v0 + 1704);
  uint64_t v60 = sub_100306A20();
  *(void *)(v0 + 2440) = v60;
  uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
  *(void *)(v0 + 2448) = v61;
  *(void *)(v0 + 2456) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v61(v56, v60, v58);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_100330C24;
  *(void *)(v62 + 24) = v59;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = v55;
  swift_retain();
  swift_errorRetain();
  os_log_t oslogb = Logger.logObject.getter();
  os_log_type_t buf = static os_log_type_t.error.getter();
  uint64_t v64 = swift_allocObject();
  *(unsigned char *)(v64 + 16) = 34;
  uint64_t v103 = swift_allocObject();
  *(unsigned char *)(v103 + 16) = 8;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 34;
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 8;
  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = sub_100330C78;
  *(void *)(v67 + 24) = v62;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = sub_10005F790;
  *(void *)(v68 + 24) = v67;
  uint64_t v69 = swift_allocObject();
  *(unsigned char *)(v69 + 16) = 66;
  uint64_t v70 = swift_allocObject();
  *(unsigned char *)(v70 + 16) = 8;
  uint64_t v71 = v69;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_10033303C;
  *(void *)(v72 + 24) = v63;
  uint64_t v73 = swift_allocObject();
  *(void *)(v73 + 16) = sub_1000600D8;
  *(void *)(v73 + 24) = v72;
  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = sub_1000600E0;
  *(void *)(v74 + 24) = v73;
  *(void *)(v0 + 2464) = sub_10000588C(&qword_101639B60);
  uint64_t v75 = swift_allocObject();
  sub_1004B810C(v75, 9);
  *uint64_t v76 = sub_10005F778;
  v76[1] = v64;
  v76[2] = sub_100065514;
  v76[3] = v103;
  v76[4] = sub_10032FDF0;
  v76[5] = 0;
  v76[6] = sub_100065514;
  v76[7] = v65;
  v76[8] = sub_100065514;
  v76[9] = v66;
  v76[10] = sub_10005F7D0;
  v76[11] = v68;
  v76[12] = sub_100065514;
  v76[13] = v71;
  v76[14] = sub_100065514;
  v76[15] = v70;
  v76[16] = sub_1000600E8;
  v76[17] = v74;
  uint64_t v99 = v64;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslogb, buf))
  {
    uint64_t v77 = v65;
    uint64_t v78 = (uint8_t *)sub_1008F9FAC();
    uint64_t v79 = swift_slowAlloc();
    uint64_t v80 = swift_slowAlloc();
    uint64_t v109 = v79;
    uint64_t v110 = v80;
    unint64_t v98 = v78;
    *(_WORD *)uint64_t v78 = 770;
    uint64_t v108 = v78 + 2;
    uint64_t v111 = (uint64_t (*)())sub_10005F778;
    uint64_t v112 = v99;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v103;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_10032FDF0;
    uint64_t v112 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v77;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v66;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v112 = v68;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v71;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = sub_100065514;
    uint64_t v112 = v70;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    swift_release();
    uint64_t v111 = (uint64_t (*)())sub_1000600E8;
    uint64_t v112 = v74;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v111, (uint64_t)&v108, (uint64_t)&v109, (uint64_t)&v110);
    uint64_t v93 = *(void *)(v0 + 1904);
    uint64_t v94 = *(void *)(v0 + 1808);
    uint64_t v95 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslogb, buf, "%{public}s %{public}s Error %{public}@", v98, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
    v96(v93, v95);
  }
  else
  {
    uint64_t v82 = *(void *)(v0 + 1904);
    uint64_t v83 = *(void *)(v0 + 1808);
    uint64_t v84 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v96 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
    v96(v82, v84);
  }
  *(void *)(v0 + 2472) = v96;
  uint64_t v85 = (void *)swift_task_alloc();
  *(void *)(v0 + 2480) = v85;
  void *v85 = v0;
  v85[1] = sub_10032A72C;
  uint64_t v86 = *(void *)(v0 + 2016);
  uint64_t v87 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v87, v86);
}

uint64_t sub_100325558()
{
  unint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 146));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 122));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 98));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 74));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 176));
  uint64_t v7 = v0[293];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *char v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    unint64_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)unint64_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_100325E28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2368) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_100326F90;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 928);
    unint64_t v3 = sub_100325F44;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100325F44()
{
  uint64_t v91 = v0;
  sub_10005F6AC(v0 + 1120, v0 + 736);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 1576);
    int v2 = *(unsigned __int8 *)(v0 + 1592);
    if (v2 == 6)
    {
      uint64_t v3 = *(void *)(v0 + 1704);
      (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1928), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 16) = sub_100330C24;
      *(void *)(v4 + 24) = v3;
      uint64_t v5 = swift_allocObject();
      *(unsigned char *)(v5 + 16) = v1;
      swift_retain();
      unsigned __int8 v79 = v1;
      uint64_t v6 = Logger.logObject.getter();
      os_log_type_t v7 = static os_log_type_t.default.getter();
      uint64_t v8 = swift_allocObject();
      *(unsigned char *)(v8 + 16) = 34;
      uint64_t v9 = swift_allocObject();
      *(unsigned char *)(v9 + 16) = 8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = sub_100332E7C;
      *(void *)(v10 + 24) = v4;
      uint64_t v11 = v6;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_1000654EC;
      *(void *)(v12 + 24) = v10;
      os_log_type_t v13 = v7;
      uint64_t v14 = swift_allocObject();
      *(unsigned char *)(v14 + 16) = 0;
      uint64_t v15 = swift_allocObject();
      *(unsigned char *)(v15 + 16) = 1;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_100332E88;
      *(void *)(v16 + 24) = v5;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_100333068;
      *(void *)(v17 + 24) = v16;
      uint64_t v18 = swift_allocObject();
      sub_1004B810C(v18, 6);
      void *v19 = sub_100065514;
      v19[1] = v8;
      v19[2] = sub_100065514;
      v19[3] = v9;
      v19[4] = sub_100065500;
      v19[5] = v12;
      v19[6] = sub_100065514;
      v19[7] = v14;
      v19[8] = sub_100065514;
      v19[9] = v15;
      v19[10] = sub_100332E84;
      v19[11] = v17;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (!os_log_type_enabled(v11, v13))
      {
        uint64_t v85 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
        bufb = *(uint8_t **)(v0 + 1928);
        uint64_t v65 = *(void *)(v0 + 1800);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        v85(bufb, v65);
        goto LABEL_21;
      }
      uint64_t v82 = v17;
      uint64_t v20 = v14;
      uint64_t v21 = *(void *)(v0 + 2368);
      uint64_t v22 = (uint8_t *)sub_1008F9FAC();
      uint64_t v87 = 0;
      uint64_t v88 = swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 514;
      uint64_t v86 = v22 + 2;
      uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v90 = v8;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
      if (!v21)
      {
        swift_release();
        uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
        uint64_t v90 = v9;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
        swift_release();
        uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
        uint64_t v90 = v12;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
        swift_release();
        uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
        uint64_t v90 = v20;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
        swift_release();
        uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
        uint64_t v90 = v15;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
        swift_release();
        uint64_t v89 = sub_100332E84;
        uint64_t v90 = v82;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
        uint64_t v24 = *(void *)(v0 + 1928);
        uint64_t v25 = *(void *)(v0 + 1800);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v11, v13, "%{public}s batteryType: %hhu", v22, 0xFu);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        v23(v24, v25);
LABEL_21:
        char v66 = v79;
        if (v79 >= 3u) {
          char v66 = 3;
        }
        *(unsigned char *)(v0 + 1473) = v66;
        *(void *)(v0 + 376) = &type metadata for PoshAccessoryNonOwnerCommand;
        *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 2128);
        *(_OWORD *)(v0 + 352) = xmmword_101354100;
        *(unsigned char *)(v0 + 368) = 10;
        uint64_t v67 = (void *)swift_task_alloc();
        *(void *)(v0 + 2376) = v67;
        *uint64_t v67 = v0;
        v67[1] = sub_100327604;
        uint64_t v68 = *(void *)(v0 + 2136);
        uint64_t v69 = *(void *)(v0 + 2128);
        uint64_t v70 = *(void *)(v0 + 2112);
        return sub_10032B9F8(v0 + 544, v70, v0 + 352, (uint64_t)&type metadata for PoshAccessoryNonOwnerCommand, v69, v68, 0);
      }
      goto LABEL_13;
    }
    sub_100330E40(*(void *)(v0 + 1576), *(void *)(v0 + 1584), v2);
  }
  uint64_t v26 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1880), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_100330C24;
  *(void *)(v27 + 24) = v26;
  swift_retain();
  char v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 34;
  uint64_t v31 = swift_allocObject();
  *(unsigned char *)(v31 + 16) = 8;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_100332E7C;
  *(void *)(v32 + 24) = v27;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_1000654EC;
  *(void *)(v33 + 24) = v32;
  uint64_t v34 = swift_allocObject();
  sub_1004B810C(v34, 3);
  *uint64_t v35 = sub_100065514;
  v35[1] = v30;
  v35[2] = sub_100065514;
  v35[3] = v31;
  v35[4] = sub_100065500;
  v35[5] = v33;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v36 = *(void *)(v0 + 2368);
    uint64_t v37 = (uint8_t *)sub_1008F9FAC();
    uint64_t v87 = 0;
    uint64_t v88 = swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 258;
    uint64_t v86 = v37 + 2;
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v30;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    if (v36)
    {
LABEL_13:
      return swift_errorRelease();
    }
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v31;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
    uint64_t v90 = v33;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    uint64_t v83 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v38 = *(void *)(v0 + 1880);
    uint64_t v39 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s Invalid batteryTypeCommandResponse!", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v83(v38, v39);
  }
  else
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v41 = *(void *)(v0 + 1880);
    uint64_t v42 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();

    v40(v41, v42);
  }
  type metadata accessor for AccessoryMetadataManager.Error(0);
  sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
  uint64_t v43 = swift_allocError();
  swift_storeEnumTagMultiPayload();
  swift_willThrow();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1120);
  *(void *)(v0 + 2408) = v43;
  uint64_t v44 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1912), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_100330C24;
  *(void *)(v45 + 24) = v44;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v43;
  swift_retain();
  swift_errorRetain();
  uint64_t v84 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.error.getter();
  uint64_t v48 = swift_allocObject();
  *(unsigned char *)(v48 + 16) = 34;
  uint64_t v49 = swift_allocObject();
  *(unsigned char *)(v49 + 16) = 8;
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_100332E7C;
  *(void *)(v50 + 24) = v45;
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = sub_1000654EC;
  *(void *)(v51 + 24) = v50;
  uint64_t v52 = swift_allocObject();
  *(unsigned char *)(v52 + 16) = 66;
  uint64_t v53 = swift_allocObject();
  *(unsigned char *)(v53 + 16) = 8;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = sub_1000613DC;
  *(void *)(v54 + 24) = v46;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_1000654F8;
  *(void *)(v55 + 24) = v54;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = sub_1000654FC;
  *(void *)(v56 + 24) = v55;
  uint64_t v57 = swift_allocObject();
  sub_1004B810C(v57, 6);
  void *v58 = sub_100065514;
  v58[1] = v48;
  v58[2] = sub_100065514;
  v58[3] = v49;
  v58[4] = sub_100065500;
  v58[5] = v51;
  v58[6] = sub_100065514;
  v58[7] = v52;
  v58[8] = sub_100065514;
  v58[9] = v53;
  v58[10] = sub_100065508;
  v58[11] = v56;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v80 = v47;
  if (os_log_type_enabled(v84, v47))
  {
    uint64_t v59 = (uint8_t *)sub_1008F9FAC();
    uint64_t v74 = swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    uint64_t v87 = v74;
    uint64_t v88 = v75;
    os_log_type_t buf = v59;
    *(_WORD *)uint64_t v59 = 514;
    uint64_t v86 = v59 + 2;
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v48;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v49;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
    uint64_t v90 = v51;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v52;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v90 = v53;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    swift_release();
    uint64_t v89 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065508;
    uint64_t v90 = v56;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v89, (uint64_t)&v86, (uint64_t)&v87, (uint64_t)&v88);
    uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v72 = *(void *)(v0 + 1912);
    uint64_t v73 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v84, v80, "%{public}s Error reading BatteryLevel/BatteryType %{public}@", buf, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v71(v72, v73);
  }
  else
  {
    bufa = *(uint8_t **)(v0 + 1912);
    uint64_t v81 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
    uint64_t v61 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v81(bufa, v61);
  }
  uint64_t v62 = (void *)swift_task_alloc();
  *(void *)(v0 + 2416) = v62;
  void *v62 = v0;
  v62[1] = sub_100329914;
  uint64_t v63 = *(void *)(v0 + 2016);
  uint64_t v64 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v64, v63);
}

uint64_t sub_100326F90()
{
  uint64_t v36 = v0;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 928);
  uint64_t v1 = *(void *)(v0 + 2368);
  *(void *)(v0 + 2408) = v1;
  uint64_t v2 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1912), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100330C24;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 34;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100332E7C;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000654EC;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 66;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000613DC;
  *(void *)(v12 + 24) = v4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000654F8;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654FC;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  sub_1004B810C(v15, 6);
  *uint64_t v16 = sub_100065514;
  v16[1] = v6;
  v16[2] = sub_100065514;
  v16[3] = v7;
  v16[4] = sub_100065500;
  v16[5] = v9;
  uint64_t v16[6] = sub_100065514;
  v16[7] = v10;
  v16[8] = sub_100065514;
  v16[9] = v11;
  v16[10] = sub_100065508;
  v16[11] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v28 = v5;
  if (os_log_type_enabled(v30, v5))
  {
    uint64_t v17 = (uint8_t *)sub_1008F9FAC();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    os_log_type_t buf = v17;
    *(_WORD *)uint64_t v17 = 514;
    uint64_t v31 = v17 + 2;
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v6;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v7;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065500;
    uint64_t v35 = v9;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065508;
    uint64_t v35 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v23 = *(void *)(v0 + 1912);
    uint64_t v24 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v30, v28, "%{public}s Error reading BatteryLevel/BatteryType %{public}@", buf, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v22(v23, v24);
  }
  else
  {
    bufa = *(uint8_t **)(v0 + 1912);
    os_log_type_t v29 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
    uint64_t v18 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v29(bufa, v18);
  }
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 2416) = v19;
  void *v19 = v0;
  v19[1] = sub_100329914;
  uint64_t v20 = *(void *)(v0 + 2016);
  uint64_t v21 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v21, v20);
}

uint64_t sub_100327604()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1003286F4;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 352);
    uint64_t v3 = sub_100327720;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100327720()
{
  uint64_t v88 = v0;
  sub_10005F6AC(v0 + 544, v0 + 160);
  if (!swift_dynamicCast())
  {
LABEL_7:
    uint64_t v26 = *(void *)(v0 + 1704);
    (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1888), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100330C24;
    *(void *)(v27 + 24) = v26;
    swift_retain();
    os_log_type_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    uint64_t v30 = swift_allocObject();
    *(unsigned char *)(v30 + 16) = 34;
    uint64_t v31 = swift_allocObject();
    *(unsigned char *)(v31 + 16) = 8;
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = sub_100332E7C;
    *(void *)(v32 + 24) = v27;
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_1000654EC;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = swift_allocObject();
    sub_1004B810C(v34, 3);
    *uint64_t v35 = sub_100065514;
    v35[1] = v30;
    v35[2] = sub_100065514;
    v35[3] = v31;
    v35[4] = sub_100065500;
    v35[5] = v33;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v36 = *(void *)(v0 + 2384);
      uint64_t v37 = (uint8_t *)sub_1008F9FAC();
      uint64_t v84 = 0;
      uint64_t v85 = swift_slowAlloc();
      *(_WORD *)uint64_t v37 = 258;
      uint64_t v83 = v37 + 2;
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v30;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      if (v36) {
        goto LABEL_13;
      }
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v31;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
      uint64_t v87 = v33;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      os_log_type_t v80 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
      uint64_t v38 = *(void *)(v0 + 1888);
      uint64_t v39 = *(void *)(v0 + 1800);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "%{public}s Invalid batteryLevelCommandResponse!", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      v80(v38, v39);
    }
    else
    {
      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
      uint64_t v41 = *(void *)(v0 + 1888);
      uint64_t v42 = *(void *)(v0 + 1800);
      swift_release();
      swift_release();
      swift_release();

      v40(v41, v42);
    }
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v43 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 544);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1120);
    *(void *)(v0 + 2408) = v43;
    uint64_t v44 = *(void *)(v0 + 1704);
    (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1912), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_100330C24;
    *(void *)(v45 + 24) = v44;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v43;
    swift_retain();
    swift_errorRetain();
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    uint64_t v48 = swift_allocObject();
    *(unsigned char *)(v48 + 16) = 34;
    uint64_t v49 = swift_allocObject();
    *(unsigned char *)(v49 + 16) = 8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = sub_100332E7C;
    *(void *)(v50 + 24) = v45;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_1000654EC;
    *(void *)(v51 + 24) = v50;
    uint64_t v52 = swift_allocObject();
    *(unsigned char *)(v52 + 16) = 66;
    uint64_t v53 = swift_allocObject();
    *(unsigned char *)(v53 + 16) = 8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_1000613DC;
    *(void *)(v54 + 24) = v46;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1000654F8;
    *(void *)(v55 + 24) = v54;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_1000654FC;
    *(void *)(v56 + 24) = v55;
    uint64_t v57 = swift_allocObject();
    sub_1004B810C(v57, 6);
    void *v58 = sub_100065514;
    v58[1] = v48;
    v58[2] = sub_100065514;
    v58[3] = v49;
    v58[4] = sub_100065500;
    v58[5] = v51;
    v58[6] = sub_100065514;
    v58[7] = v52;
    v58[8] = sub_100065514;
    v58[9] = v53;
    v58[10] = sub_100065508;
    v58[11] = v56;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v77 = v47;
    if (os_log_type_enabled(v81, v47))
    {
      uint64_t v59 = (uint8_t *)sub_1008F9FAC();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      uint64_t v84 = v71;
      uint64_t v85 = v72;
      os_log_type_t buf = v59;
      *(_WORD *)uint64_t v59 = 514;
      uint64_t v83 = v59 + 2;
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v48;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v49;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
      uint64_t v87 = v51;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v52;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
      uint64_t v87 = v53;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      swift_release();
      uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065508;
      uint64_t v87 = v56;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
      uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
      uint64_t v69 = *(void *)(v0 + 1912);
      uint64_t v70 = *(void *)(v0 + 1800);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v81, v77, "%{public}s Error reading BatteryLevel/BatteryType %{public}@", buf, 0x16u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      v68(v69, v70);
    }
    else
    {
      bufa = *(uint8_t **)(v0 + 1912);
      uint64_t v78 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
      uint64_t v61 = *(void *)(v0 + 1800);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      v78(bufa, v61);
    }
    uint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 2416) = v62;
    void *v62 = v0;
    uint64_t v63 = sub_100329914;
LABEL_22:
    v62[1] = v63;
    uint64_t v66 = *(void *)(v0 + 2016);
    uint64_t v67 = *(void *)(v0 + 2008);
    return dispatch thunk of PeripheralProtocol.cancelConnection()(v67, v66);
  }
  uint64_t v1 = *(void *)(v0 + 1672);
  int v2 = *(unsigned __int8 *)(v0 + 1688);
  if (v2 != 7)
  {
    sub_100330E40(*(void *)(v0 + 1672), *(void *)(v0 + 1680), v2);
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1920), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100330C24;
  *(void *)(v4 + 24) = v3;
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = v1;
  swift_retain();
  uint64_t v6 = Logger.logObject.getter();
  char v76 = v1;
  os_log_type_t v7 = static os_log_type_t.default.getter();
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 34;
  uint64_t v9 = swift_allocObject();
  *(unsigned char *)(v9 + 16) = 8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100332E7C;
  *(void *)(v10 + 24) = v4;
  uint64_t v11 = v6;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000654EC;
  *(void *)(v12 + 24) = v10;
  os_log_type_t v13 = v7;
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 0;
  uint64_t v15 = swift_allocObject();
  *(unsigned char *)(v15 + 16) = 1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332E88;
  *(void *)(v16 + 24) = v5;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100333068;
  *(void *)(v17 + 24) = v16;
  uint64_t v18 = swift_allocObject();
  sub_1004B810C(v18, 6);
  void *v19 = sub_100065514;
  v19[1] = v8;
  v19[2] = sub_100065514;
  v19[3] = v9;
  v19[4] = sub_100065500;
  v19[5] = v12;
  v19[6] = sub_100065514;
  v19[7] = v14;
  v19[8] = sub_100065514;
  v19[9] = v15;
  v19[10] = sub_100332E84;
  v19[11] = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v11, v13))
  {
    uint64_t v82 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
    bufb = *(uint8_t **)(v0 + 1920);
    uint64_t v64 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v82(bufb, v64);
    goto LABEL_19;
  }
  uint64_t v79 = v17;
  uint64_t v20 = v14;
  uint64_t v21 = *(void *)(v0 + 2384);
  uint64_t v22 = (uint8_t *)sub_1008F9FAC();
  uint64_t v84 = 0;
  uint64_t v85 = swift_slowAlloc();
  *(_WORD *)uint64_t v22 = 514;
  uint64_t v83 = v22 + 2;
  uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
  uint64_t v87 = v8;
  sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
  if (!v21)
  {
    swift_release();
    uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v87 = v9;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
    swift_release();
    uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065500;
    uint64_t v87 = v12;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
    swift_release();
    uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v87 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
    swift_release();
    uint64_t v86 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_100065514;
    uint64_t v87 = v15;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
    swift_release();
    uint64_t v86 = sub_100332E84;
    uint64_t v87 = v79;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v86, (uint64_t)&v83, (uint64_t)&v84, (uint64_t)&v85);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v24 = *(void *)(v0 + 1920);
    uint64_t v25 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v11, v13, "%{public}s batteryLevel: %hhu", v22, 0xFu);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v23(v24, v25);
LABEL_19:
    char v65 = v76;
    if ((v76 & 0xFC) != 0) {
      char v65 = 4;
    }
    *(unsigned char *)(v0 + 1474) = v65;
    uint64_t v62 = (void *)swift_task_alloc();
    *(void *)(v0 + 2392) = v62;
    void *v62 = v0;
    uint64_t v63 = sub_100328D74;
    goto LABEL_22;
  }
LABEL_13:
  return swift_errorRelease();
}

uint64_t sub_1003286F4()
{
  uint64_t v36 = v0;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1120);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 352);
  uint64_t v1 = *(void *)(v0 + 2384);
  *(void *)(v0 + 2408) = v1;
  uint64_t v2 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1912), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100330C24;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 34;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100332E7C;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000654EC;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 66;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000613DC;
  *(void *)(v12 + 24) = v4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000654F8;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654FC;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  sub_1004B810C(v15, 6);
  *uint64_t v16 = sub_100065514;
  v16[1] = v6;
  v16[2] = sub_100065514;
  v16[3] = v7;
  v16[4] = sub_100065500;
  v16[5] = v9;
  uint64_t v16[6] = sub_100065514;
  v16[7] = v10;
  v16[8] = sub_100065514;
  v16[9] = v11;
  v16[10] = sub_100065508;
  v16[11] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v28 = v5;
  if (os_log_type_enabled(v30, v5))
  {
    uint64_t v17 = (uint8_t *)sub_1008F9FAC();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    os_log_type_t buf = v17;
    *(_WORD *)uint64_t v17 = 514;
    uint64_t v31 = v17 + 2;
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v6;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v7;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065500;
    uint64_t v35 = v9;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065508;
    uint64_t v35 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v23 = *(void *)(v0 + 1912);
    uint64_t v24 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v30, v28, "%{public}s Error reading BatteryLevel/BatteryType %{public}@", buf, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v22(v23, v24);
  }
  else
  {
    bufa = *(uint8_t **)(v0 + 1912);
    os_log_type_t v29 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
    uint64_t v18 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v29(bufa, v18);
  }
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 2416) = v19;
  void *v19 = v0;
  v19[1] = sub_100329914;
  uint64_t v20 = *(void *)(v0 + 2016);
  uint64_t v21 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v21, v20);
}

uint64_t sub_100328D74()
{
  *(void *)(*(void *)v1 + 2400) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100329294;
  }
  else {
    uint64_t v2 = sub_100328E88;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100328E88()
{
  __int16 v21 = *(_WORD *)(v0 + 1473);
  unsigned int v22 = *(_DWORD *)(v0 + 2352);
  uint64_t v19 = *(unsigned int *)(v0 + 2312);
  uint64_t v18 = *(unsigned int *)(v0 + 2288);
  uint64_t v20 = *(void *)(v0 + 2264);
  uint64_t v12 = *(void *)(v0 + 2232);
  unint64_t v13 = *(void *)(v0 + 2240);
  unint64_t v15 = *(void *)(v0 + 2208);
  uint64_t v14 = *(void *)(v0 + 2200);
  unint64_t v1 = *(void *)(v0 + 2176);
  uint64_t v2 = *(void *)(v0 + 2168);
  uint64_t v3 = *(void *)(v0 + 1744);
  uint64_t v4 = *(void *)(v0 + 1736);
  uint64_t v5 = *(void *)(v0 + 1728);
  uint64_t v6 = *(void *)(v0 + 1720);
  uint64_t v17 = *(void *)(v0 + 1696);
  dispatch thunk of PeripheralProtocol.id.getter();
  Identifier.id.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v16 = sub_1001A8CAC();
  uint64_t v8 = v7;
  sub_1000361E0(v2, v1);
  swift_release();
  swift_release();
  sub_100330E40(v12, v13, 2);
  sub_100330E40(v14, v15, 1);
  sub_100330E40(v2, v1, 0);
  sub_100330E40(v2, v1, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 544);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1120);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1360);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1168);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 784);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  sub_1001A8CB8(v6, v2, v1, v14, v15, v12, v13, v22, v17, v18, SBYTE4(v18), 0, 0, 1, v20, 0, v11, v19, SBYTE4(v19),
    SHIWORD(v19),
    v21,
    SHIBYTE(v21),
    v16,
    v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100329294()
{
  uint64_t v36 = v0;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 544);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1120);
  uint64_t v1 = *(void *)(v0 + 2400);
  *(void *)(v0 + 2408) = v1;
  uint64_t v2 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2048))(*(void *)(v0 + 1912), *(void *)(v0 + 2040), *(void *)(v0 + 1800));
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100330C24;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  uint64_t v30 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 34;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100332E7C;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000654EC;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 66;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1000613DC;
  *(void *)(v12 + 24) = v4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000654F8;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654FC;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  sub_1004B810C(v15, 6);
  *uint64_t v16 = sub_100065514;
  v16[1] = v6;
  v16[2] = sub_100065514;
  v16[3] = v7;
  v16[4] = sub_100065500;
  v16[5] = v9;
  uint64_t v16[6] = sub_100065514;
  v16[7] = v10;
  v16[8] = sub_100065514;
  v16[9] = v11;
  v16[10] = sub_100065508;
  v16[11] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v28 = v5;
  if (os_log_type_enabled(v30, v5))
  {
    uint64_t v17 = (uint8_t *)sub_1008F9FAC();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    os_log_type_t buf = v17;
    *(_WORD *)uint64_t v17 = 514;
    uint64_t v31 = v17 + 2;
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v6;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v7;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065500;
    uint64_t v35 = v9;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065514;
    uint64_t v35 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    swift_release();
    uint64_t v34 = sub_100065508;
    uint64_t v35 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v34, (uint64_t)&v31, (uint64_t)&v32, (uint64_t)&v33);
    unsigned int v22 = *(void (**)(uint64_t, uint64_t))(v0 + 2072);
    uint64_t v23 = *(void *)(v0 + 1912);
    uint64_t v24 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v30, v28, "%{public}s Error reading BatteryLevel/BatteryType %{public}@", buf, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    v22(v23, v24);
  }
  else
  {
    bufa = *(uint8_t **)(v0 + 1912);
    os_log_type_t v29 = *(void (**)(uint8_t *, uint64_t))(v0 + 2072);
    uint64_t v18 = *(void *)(v0 + 1800);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v29(bufa, v18);
  }
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 2416) = v19;
  void *v19 = v0;
  v19[1] = sub_100329914;
  uint64_t v20 = *(void *)(v0 + 2016);
  uint64_t v21 = *(void *)(v0 + 2008);
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v21, v20);
}

uint64_t sub_100329914()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 2424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = v2[280];
    uint64_t v4 = v2[279];
    sub_100330E40(v2[275], v2[276], 1);
    sub_100330E40(v4, v3, 2);
    os_log_type_t v5 = sub_100329E50;
  }
  else
  {
    os_log_type_t v5 = sub_100329A58;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100329A58()
{
  unsigned int v21 = *(_DWORD *)(v0 + 2352);
  uint64_t v19 = *(unsigned int *)(v0 + 2312);
  uint64_t v17 = *(unsigned int *)(v0 + 2288);
  uint64_t v20 = *(void *)(v0 + 2264);
  uint64_t v12 = *(void *)(v0 + 2232);
  unint64_t v13 = *(void *)(v0 + 2240);
  uint64_t v14 = *(void *)(v0 + 2200);
  unint64_t v15 = *(void *)(v0 + 2208);
  unint64_t v1 = *(void *)(v0 + 2176);
  uint64_t v2 = *(void *)(v0 + 2168);
  uint64_t v3 = *(void *)(v0 + 1744);
  uint64_t v4 = *(void *)(v0 + 1736);
  uint64_t v5 = *(void *)(v0 + 1728);
  uint64_t v16 = *(void *)(v0 + 1720);
  uint64_t v18 = *(void *)(v0 + 1696);
  dispatch thunk of PeripheralProtocol.id.getter();
  Identifier.id.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = sub_1001A8CAC();
  uint64_t v8 = v7;
  sub_1000361E0(v2, v1);
  swift_release();
  swift_release();
  swift_errorRelease();
  sub_100330E40(v12, v13, 2);
  sub_100330E40(v14, v15, 1);
  sub_100330E40(v2, v1, 0);
  sub_100330E40(v2, v1, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1360);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 1168);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 976);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 784);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 592);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 400);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 208);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  sub_1001A8CB8(v16, v2, v1, v14, v15, v12, v13, v21, v18, v17, SBYTE4(v17), 0, 0, 1, v20, 0, v11, v19, SBYTE4(v19),
    SHIWORD(v19),
    3,
    4,
    v6,
    v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100329E50()
{
  uint64_t v50 = v0;
  unint64_t v1 = v0[280];
  uint64_t v2 = v0[279];
  unint64_t v3 = v0[276];
  uint64_t v4 = v0[275];
  unint64_t v5 = v0[272];
  uint64_t v6 = v0[271];
  swift_release();
  swift_release();
  swift_errorRelease();
  sub_100330E40(v2, v1, 2);
  sub_100330E40(v4, v3, 1);
  sub_100330E40(v6, v5, 0);
  sub_100330E40(v6, v5, 0);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 170));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 146));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 122));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 98));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 74));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 26));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  uint64_t v7 = v0[303];
  v0[304] = v7;
  uint64_t v8 = v0[238];
  uint64_t v9 = v0[226];
  uint64_t v10 = v0[225];
  uint64_t v11 = v0[213];
  uint64_t v12 = sub_100306A20();
  v0[305] = v12;
  unint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v0[306] = v13;
  v0[307] = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v13(v8, v12, v10);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100330C24;
  *(void *)(v14 + 24) = v11;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v7;
  swift_retain();
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = 34;
  uint64_t v42 = swift_allocObject();
  *(unsigned char *)(v42 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(unsigned char *)(v17 + 16) = 34;
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100330C78;
  *(void *)(v19 + 24) = v14;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10005F790;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(unsigned char *)(v21 + 16) = 66;
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = 8;
  uint64_t v23 = v21;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_10033303C;
  *(void *)(v24 + 24) = v15;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1000600D8;
  *(void *)(v25 + 24) = v24;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_1000600E0;
  *(void *)(v26 + 24) = v25;
  v0[308] = sub_10000588C(&qword_101639B60);
  uint64_t v27 = swift_allocObject();
  sub_1004B810C(v27, 9);
  *os_log_type_t v28 = sub_10005F778;
  v28[1] = v16;
  void v28[2] = sub_100065514;
  v28[3] = v42;
  v28[4] = sub_10032FDF0;
  v28[5] = 0;
  v28[6] = sub_100065514;
  v28[7] = v17;
  v28[8] = sub_100065514;
  v28[9] = v18;
  v28[10] = sub_10005F7D0;
  v28[11] = v20;
  v28[12] = sub_100065514;
  v28[13] = v23;
  v28[14] = sub_100065514;
  v28[15] = v22;
  v28[16] = sub_1000600E8;
  v28[17] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v43))
  {
    os_log_type_t v29 = (uint8_t *)sub_1008F9FAC();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    os_log_type_t buf = v29;
    *(_WORD *)os_log_type_t v29 = 770;
    uint64_t v45 = v29 + 2;
    uint64_t v48 = (uint64_t (*)())sub_10005F778;
    uint64_t v49 = v16;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v42;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_10032FDF0;
    uint64_t v49 = 0;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v17;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v18;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v49 = v20;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v23;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = sub_100065514;
    uint64_t v49 = v22;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    swift_release();
    uint64_t v48 = (uint64_t (*)())sub_1000600E8;
    uint64_t v49 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v48, (uint64_t)&v45, (uint64_t)&v46, (uint64_t)&v47);
    uint64_t v36 = v0[238];
    uint64_t v37 = v0[226];
    uint64_t v38 = v0[225];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v43, "%{public}s %{public}s Error %{public}@", buf, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v39(v36, v38);
  }
  else
  {
    uint64_t v30 = v0[238];
    uint64_t v31 = v0[226];
    uint64_t v32 = v0[225];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v39(v30, v32);
  }
  v0[309] = v39;
  uint64_t v33 = (void *)swift_task_alloc();
  v0[310] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_10032A72C;
  uint64_t v34 = v0[252];
  uint64_t v35 = v0[251];
  return dispatch thunk of PeripheralProtocol.cancelConnection()(v35, v34);
}

uint64_t sub_10032A72C()
{
  *(void *)(*(void *)v1 + 2488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10032AA3C;
  }
  else {
    uint64_t v2 = sub_10032A840;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032A840()
{
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032AA3C()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 2488);
  uint64_t v2 = *(void *)(v0 + 1704);
  (*(void (**)(void, void, void))(v0 + 2448))(*(void *)(v0 + 1896), *(void *)(v0 + 2440), *(void *)(v0 + 1800));
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100330C24;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  swift_retain();
  swift_errorRetain();
  os_log_type_t v28 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = 34;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = 8;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_100332E7C;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1000654EC;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 66;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10033303C;
  *(void *)(v12 + 24) = v4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1000654F8;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654FC;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  sub_1004B810C(v15, 6);
  *uint64_t v16 = sub_100065514;
  v16[1] = v6;
  v16[2] = sub_100065514;
  v16[3] = v7;
  v16[4] = sub_100065500;
  v16[5] = v9;
  uint64_t v16[6] = sub_100065514;
  v16[7] = v10;
  v16[8] = sub_100065514;
  v16[9] = v11;
  v16[10] = sub_100065508;
  v16[11] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v26 = v5;
  if (os_log_type_enabled(v28, v5))
  {
    uint64_t v17 = (uint8_t *)sub_1008F9FAC();
    uint64_t v30 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    os_log_type_t buf = v17;
    *(_WORD *)uint64_t v17 = 514;
    os_log_type_t v29 = v17 + 2;
    uint64_t v32 = sub_100065514;
    uint64_t v33 = v6;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    swift_release();
    uint64_t v32 = sub_100065514;
    uint64_t v33 = v7;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    swift_release();
    uint64_t v32 = sub_100065500;
    uint64_t v33 = v9;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    swift_release();
    uint64_t v32 = sub_100065514;
    uint64_t v33 = v10;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    swift_release();
    uint64_t v32 = sub_100065514;
    uint64_t v33 = v11;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    swift_release();
    uint64_t v32 = sub_100065508;
    uint64_t v33 = v14;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v32, (uint64_t)&v29, (uint64_t)&v30, (uint64_t)&v31);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 2472);
    uint64_t v22 = *(void *)(v0 + 1896);
    uint64_t v23 = *(void *)(v0 + 1800);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v28, v26, "%{public}s cancelConnection error in readPoshAccessoryMetadata() catch block: %{public}@", buf, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    v21(v22, v23);
  }
  else
  {
    bufa = *(uint8_t **)(v0 + 1896);
    uint64_t v27 = *(void (**)(uint8_t *, uint64_t))(v0 + 2472);
    uint64_t v18 = *(void *)(v0 + 1800);
    swift_errorRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    v27(bufa, v18);
  }
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_10032B1F8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 80) = a3;
  *(void *)(v4 + 88) = a4;
  *(unsigned char *)(v4 + 128) = a2;
  *(void *)(v4 + 72) = a1;
  uint64_t v5 = type metadata accessor for MACAddress();
  *(void *)(v4 + 96) = v5;
  *(void *)(v4 + 104) = *(void *)(v5 - 8);
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = swift_task_alloc();
  return _swift_task_switch(sub_10032B2D0, 0, 0);
}

uint64_t sub_10032B2D0()
{
  uint64_t v43 = v0;
  if (*(unsigned char *)(v0 + 128))
  {
    uint64_t v15 = *(void *)(v0 + 72);
    swift_errorRetain();
    if (qword_101636A68 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)(v0 + 104);
    uint64_t v16 = *(void *)(v0 + 112);
    uint64_t v18 = *(void *)(v0 + 96);
    uint64_t v20 = *(void *)(v0 + 72);
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v21 = type metadata accessor for Logger();
    sub_100010324(v21, (uint64_t)qword_1016412B8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v16, v19, v18);
    sub_10033093C(v20, 1);
    swift_errorRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    BOOL v24 = os_log_type_enabled(v22, v23);
    uint64_t v26 = *(void *)(v0 + 104);
    uint64_t v25 = *(void *)(v0 + 112);
    uint64_t v27 = *(void *)(v0 + 96);
    uint64_t v28 = *(void *)(v0 + 72);
    if (v24)
    {
      uint64_t v40 = v15;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446722;
      *(void *)(v0 + 32) = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2082;
      sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 40) = sub_1008FA0F0(v30, v31, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
      *(_WORD *)(v29 + 22) = 2114;
      swift_errorRetain();
      uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 48) = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v41 = v32;
      sub_100173E88(v28, 1);
      sub_100173E88(v28, 1);
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s failed for address %{public}s. Error %{public}@", (uint8_t *)v29, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v15 = v40;
      if ((static Task<>.isCancelled.getter() & 1) == 0)
      {
LABEL_10:
        *(void *)(v0 + 16) = v15;
        sub_10000588C(&qword_101641690);
        CheckedContinuation.resume(throwing:)();
        goto LABEL_16;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
      sub_100173E88(v28, 1);
      sub_100173E88(v28, 1);

      if ((static Task<>.isCancelled.getter() & 1) == 0) {
        goto LABEL_10;
      }
    }
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.error.getter();
    BOOL v35 = os_log_type_enabled(v33, v34);
    uint64_t v36 = *(void *)(v0 + 72);
    if (v35)
    {
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136446210;
      *(void *)(v0 + 24) = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "%{public}s Not resuming continuation in cancelled task.", v37, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100173E88(v36, 1);
    }
    else
    {
      sub_100173E88(*(void *)(v0 + 72), 1);
    }
    goto LABEL_16;
  }
  if (qword_101636A68 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_1016412B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 120);
  uint64_t v10 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 104);
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    *(void *)(v0 + 56) = sub_1008FA0F0(0xD00000000000002BLL, 0x80000001013F8480, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2082;
    sub_1003300B4((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 64) = sub_1008FA0F0(v13, v14, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s succeeded for address %{public}s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v11 + 8))(*(void *)(v0 + 120), *(void *)(v0 + 96));
  }
LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_10032B9F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 424) = a6;
  *(void *)(v8 + 432) = v7;
  *(unsigned char *)(v8 + 560) = a7;
  *(void *)(v8 + 408) = a4;
  *(void *)(v8 + 416) = a5;
  *(void *)(v8 + 392) = a2;
  *(void *)(v8 + 400) = a3;
  *(void *)(v8 + 384) = a1;
  uint64_t v9 = type metadata accessor for BinaryDecoder();
  *(void *)(v8 + 440) = v9;
  *(void *)(v8 + 448) = *(void *)(v9 - 8);
  *(void *)(v8 + 456) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for BinaryEncoder();
  *(void *)(v8 + 464) = v10;
  *(void *)(v8 + 472) = *(void *)(v10 - 8);
  *(void *)(v8 + 480) = swift_task_alloc();
  return _swift_task_switch(sub_10032BB24, 0, 0);
}

uint64_t sub_10032BB24()
{
  uint64_t v23 = v0;
  BinaryEncoder.init()();
  BinaryDecoder.init()();
  if (qword_101636A68 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 400);
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 488) = sub_100010324(v2, (uint64_t)qword_1016412B8);
  sub_10005F6AC(v1, v0 + 16);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    v22[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    *(void *)(v0 + 360) = sub_1008FA0F0(0xD00000000000003CLL, 0x80000001013F84B0, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10005F6AC(v0 + 16, v0 + 208);
    sub_10000588C(&qword_101639B58);
    uint64_t v6 = String.init<A>(describing:)();
    *(void *)(v0 + 376) = sub_1008FA0F0(v6, v7, v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s Sending command: %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  }

  sub_10001CD44(*(void **)(v0 + 400), *(void *)(*(void *)(v0 + 400) + 24));
  uint64_t v8 = BinaryEncoder.encode<A>(_:)();
  *(void *)(v0 + 496) = v8;
  *(void *)(v0 + 504) = v9;
  if (*(unsigned char *)(v0 + 560))
  {
    uint64_t v10 = type metadata accessor for Characteristic();
    uint64_t v11 = sub_1003300B4(&qword_101639AE8, (void (*)(uint64_t))&type metadata accessor for Characteristic);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10032C000;
    return dispatch thunk of CharacteristicProtocol.mtu.getter(v10, v11);
  }
  else
  {
    uint64_t v13 = v8;
    unint64_t v14 = v9;
    sub_10000588C(&qword_101657710);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_101342130;
    *(void *)(v15 + 32) = v13;
    *(void *)(v15 + 40) = v14;
    sub_1000361E0(v13, v14);
    uint64_t v16 = *(void *)(v0 + 432);
    char v17 = *(unsigned char *)(v0 + 560);
    uint64_t v18 = *(void *)(v0 + 392);
    uint64_t v19 = swift_allocObject();
    *(void *)(v0 + 536) = v19;
    *(unsigned char *)(v19 + 16) = v17;
    *(void *)(v19 + 24) = v18;
    *(void *)(v19 + 32) = v15;
    *(void *)(v19 + 40) = v16;
    swift_retain();
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 544) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_10032C318;
    return withTimeout<A>(_:block:)(v0 + 304, 0x8AC7230489E80000, 0, &unk_101641700, v19, &type metadata for Data);
  }
}

uint64_t sub_10032C000(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 520) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10032C254;
  }
  else
  {
    *(void *)(v4 + 528) = a1;
    uint64_t v5 = sub_10032C128;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10032C128()
{
  uint64_t v1 = fragment(data:mtu:)();
  uint64_t v2 = *(void *)(v0 + 432);
  char v3 = *(unsigned char *)(v0 + 560);
  uint64_t v4 = *(void *)(v0 + 392);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 536) = v5;
  *(unsigned char *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  *(void *)(v5 + 32) = v1;
  *(void *)(v5 + 40) = v2;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 544) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10032C318;
  return withTimeout<A>(_:block:)(v0 + 304, 0x8AC7230489E80000, 0, &unk_101641700, v5, &type metadata for Data);
}

uint64_t sub_10032C254()
{
  uint64_t v2 = v0[59];
  uint64_t v1 = v0[60];
  uint64_t v4 = v0[57];
  uint64_t v3 = v0[58];
  uint64_t v5 = v0[55];
  uint64_t v6 = v0[56];
  sub_10001CFB8(v0[62], v0[63]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10032C318()
{
  *(void *)(*(void *)v1 + 552) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10032CB58;
  }
  else {
    uint64_t v2 = sub_10032C44C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10032C44C()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 304);
  unint64_t v46 = *(void *)(v0 + 312);
  sub_10005F6AC(*(void *)(v0 + 400), v0 + 112);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446466;
    *(void *)(v0 + 336) = sub_1008FA0F0(0xD00000000000003CLL, 0x80000001013F84B0, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2080;
    sub_10005F6AC(v0 + 112, v0 + 64);
    sub_10000588C(&qword_101639B58);
    uint64_t v5 = String.init<A>(describing:)();
    *(void *)(v0 + 352) = sub_1008FA0F0(v5, v6, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 112);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s Sent command: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 112);
  }

  sub_1000361E0(v1, v46);
  sub_1000361E0(v1, v46);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 134218242;
    uint64_t v10 = 0;
    switch(v46 >> 62)
    {
      case 1uLL:
        LODWORD(v10) = HIDWORD(v1) - v1;
        if (__OFSUB__(HIDWORD(v1), v1))
        {
          __break(1u);
LABEL_22:
          __break(1u);
          JUMPOUT(0x10032CB48);
        }
        uint64_t v10 = (int)v10;
LABEL_11:
        *(void *)(v0 + 320) = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v9 + 12) = 2080;
        uint64_t v14 = Data.hexString.getter();
        *(void *)(v0 + 328) = sub_1008FA0F0(v14, v15, v47);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001CFB8(v1, v46);
        sub_10001CFB8(v1, v46);
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Length: %ld received raw response: %s", (uint8_t *)v9, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        break;
      case 2uLL:
        uint64_t v12 = *(void *)(v1 + 16);
        uint64_t v11 = *(void *)(v1 + 24);
        BOOL v13 = __OFSUB__(v11, v12);
        uint64_t v10 = v11 - v12;
        if (!v13) {
          goto LABEL_11;
        }
        goto LABEL_22;
      case 3uLL:
        goto LABEL_11;
      default:
        uint64_t v10 = BYTE6(v46);
        goto LABEL_11;
    }
  }
  else
  {
    sub_10001CFB8(v1, v46);
    sub_10001CFB8(v1, v46);
  }

  uint64_t v16 = *(void *)(v0 + 552);
  uint64_t v17 = *(void *)(v0 + 384);
  long long v18 = *(_OWORD *)(v0 + 416);
  *(void *)(v17 + 24) = *(void *)(v0 + 408);
  *(_OWORD *)(v17 + 32) = v18;
  sub_10001D958((uint64_t *)v17);
  BinaryDecoder.decode<A>(_:from:)();
  if (v16)
  {
    uint64_t v20 = *(void *)(v0 + 496);
    unint64_t v19 = *(void *)(v0 + 504);
    uint64_t v21 = *(void *)(v0 + 472);
    uint64_t v45 = *(void *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 456);
    uint64_t v22 = *(void *)(v0 + 464);
    uint64_t v25 = *(void *)(v0 + 440);
    uint64_t v24 = *(void *)(v0 + 448);
    uint64_t v26 = v1;
    uint64_t v27 = *(void *)(v0 + 384);
    sub_10001CFB8(v26, v46);
    sub_10001CFB8(v20, v19);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v45, v22);
    sub_10005FE98(v27);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    sub_10005F6AC(*(void *)(v0 + 384), v0 + 160);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v30 = os_log_type_enabled(v29, type);
    unint64_t v31 = *(void *)(v0 + 504);
    uint64_t v32 = *(void *)(v0 + 472);
    uint64_t v42 = *(void *)(v0 + 480);
    uint64_t v43 = *(void *)(v0 + 496);
    uint64_t v34 = *(void *)(v0 + 456);
    uint64_t v33 = *(void *)(v0 + 464);
    uint64_t v35 = *(void *)(v0 + 448);
    uint64_t v44 = *(void *)(v0 + 440);
    if (v30)
    {
      uint64_t v40 = *(void *)(v0 + 456);
      uint64_t v36 = swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136446466;
      *(void *)(v0 + 368) = sub_1008FA0F0(0xD00000000000003CLL, 0x80000001013F84B0, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v36 + 12) = 2080;
      sub_10005F6AC(v0 + 160, v0 + 256);
      sub_10000588C(&qword_101639B58);
      uint64_t v37 = String.init<A>(describing:)();
      *(void *)(v0 + 344) = sub_1008FA0F0(v37, v38, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 160);
      _os_log_impl((void *)&_mh_execute_header, v29, type, "%{public}s Received response: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_10001CFB8(v1, v46);
      sub_10001CFB8(v43, v31);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v40, v44);
    }
    else
    {

      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 160);
      sub_10001CFB8(v1, v46);
      sub_10001CFB8(v43, v31);
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v44);
    }
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v42, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v28();
}

uint64_t sub_10032CB58()
{
  uint64_t v2 = v0[59];
  uint64_t v1 = v0[60];
  uint64_t v4 = v0[57];
  uint64_t v3 = v0[58];
  uint64_t v5 = v0[55];
  uint64_t v6 = v0[56];
  sub_10001CFB8(v0[62], v0[63]);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10032CC1C()
{
  return dispatch thunk of PeripheralProtocol.id.getter();
}

uint64_t sub_10032CC98(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  uint64_t v7 = sub_10000588C(&qword_101639C68);
  v4[6] = v7;
  v4[7] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[8] = v8;
  uint64_t v9 = swift_task_alloc();
  v4[9] = v9;
  if (a2)
  {
    uint64_t v10 = v9;
    uint64_t v11 = type metadata accessor for Characteristic();
    uint64_t v12 = sub_1003300B4(&qword_101639AE8, (void (*)(uint64_t))&type metadata accessor for Characteristic);
    BOOL v13 = (void *)swift_task_alloc();
    v4[10] = v13;
    *BOOL v13 = v4;
    v13[1] = sub_10032CEBC;
    uint64_t v14 = v10;
    uint64_t v15 = a4;
    uint64_t v16 = v11;
  }
  else
  {
    uint64_t v17 = type metadata accessor for Characteristic();
    uint64_t v12 = sub_1003300B4(&qword_101639AE8, (void (*)(uint64_t))&type metadata accessor for Characteristic);
    long long v18 = (void *)swift_task_alloc();
    v4[12] = v18;
    *long long v18 = v4;
    v18[1] = sub_10032D06C;
    uint64_t v14 = v8;
    uint64_t v15 = a4;
    uint64_t v16 = v17;
  }
  return dispatch thunk of CharacteristicProtocol.write(data:)(v14, v15, v16, v12);
}

uint64_t sub_10032CEBC()
{
  uint64_t v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10032D3B0, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[14] = v3;
    uint64_t v4 = sub_100062734(&qword_101665560, &qword_101639C68);
    *uint64_t v3 = v2;
    v3[1] = sub_10032D224;
    uint64_t v5 = v2[6];
    return AsyncSequence<>.reassemble()(v5, v4);
  }
}

uint64_t sub_10032D06C()
{
  uint64_t v2 = (void *)*v1;
  v2[13] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10032D66C, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[18] = v3;
    uint64_t v4 = sub_100062734(&qword_101665560, &qword_101639C68);
    *uint64_t v3 = v2;
    v3[1] = sub_10032D504;
    uint64_t v5 = v2[6];
    return AsyncSequence.first()(v2 + 2, v5, v4);
  }
}

uint64_t sub_10032D224(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[15] = v2;
  swift_task_dealloc();
  uint64_t v7 = v6[9];
  uint64_t v8 = v6[7];
  uint64_t v9 = v6[6];
  if (v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_10032D498;
  }
  else
  {
    v6[16] = a2;
    v6[17] = a1;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v10 = sub_10032D41C;
  }
  return _swift_task_switch(v10, 0, 0);
}

uint64_t sub_10032D3B0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032D41C()
{
  *(int8x16_t *)v0[2].i64[1] = vextq_s8(v0[8], v0[8], 8uLL);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0->i64[1];
  return v1();
}

uint64_t sub_10032D498()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032D504()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[7] + 8))(v2[8], v2[6]);
  if (v0) {
    uint64_t v3 = sub_10032D948;
  }
  else {
    uint64_t v3 = sub_10032D6D8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10032D66C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032D6D8()
{
  uint64_t v10 = v0;
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    if (qword_101636A68 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100010324(v2, (uint64_t)qword_1016412B8);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 136446210;
      v0[4] = sub_1008FA0F0(0xD00000000000003CLL, 0x80000001013F84B0, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s Invalid response!", v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v7 = (void *)v0[5];
    void *v7 = v0[2];
    v7[1] = v1;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
  }
  return v6();
}

uint64_t sub_10032D948()
{
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10032D9B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v42 = a1;
  uint64_t v5 = sub_10000588C(&qword_101641640);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101649E20);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AccessoryInfoEndPoint();
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v40 - v16;
  uint64_t v18 = type metadata accessor for AccessoryMetadata(0);
  if (sub_100DC8570(*(void *)(a2 + *(int *)(v18 + 20)), *(void *)(a2 + *(int *)(v18 + 20) + 8)))
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100010324(v19, (uint64_t)qword_10170DDA8);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Skip fetching product info for AirTag", v22, 2u);
      swift_slowDealloc();
    }

    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v23 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = v23;
    return CheckedContinuation.resume(throwing:)();
  }
  else
  {
    uint64_t v25 = enum case for FMNAccountType.accessory(_:);
    uint64_t v26 = type metadata accessor for FMNAccountType();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v17, v25, v26);
    type metadata accessor for SearchPartyURLSessionFactory(0);
    swift_allocObject();
    uint64_t v27 = type metadata accessor for FMNMockingPreferences();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v11, 1, 1, v27);
    uint64_t v28 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
    type metadata accessor for ServerInteractionController(0);
    uint64_t v29 = swift_allocObject();
    sub_10032FE84((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for AccessoryInfoEndPoint);
    BOOL v30 = (void *)sub_1004A2F80((uint64_t)v15, v28, v29);
    sub_1003300FC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for AccessoryInfoEndPoint);
    uint64_t v31 = *a3;
    uint64_t v32 = a3[1];
    unint64_t v33 = a3[2];
    swift_bridgeObjectRetain();
    sub_1000361E0(v32, v33);
    sub_1004A94BC(v31, v32, v33, 0, v30);
    swift_bridgeObjectRelease();
    sub_10001CFB8(v32, v33);
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v41(v8, v42, v5);
    uint64_t v34 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v35 = v5;
    uint64_t v36 = (v34 + 24) & ~v34;
    v40[1] = v34 | 7;
    uint64_t v40[2] = v36 + v7;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v30;
    unint64_t v38 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
    v38(v37 + v36, v8, v35);
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    v41(v8, v42, v35);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v30;
    v38(v39 + v36, v8, v35);
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10032DF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v4 = type metadata accessor for AccessoryInfoResponseContent(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C((uint64_t *)&unk_10166BFA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = type metadata accessor for AccessoryProductInfo();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637188 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_10170EE68;
  id v18 = [self sharedInstance:v35];
  unsigned int v19 = [v18 isInternalBuild];

  if (!v19
    || (NSString v20 = String._bridgeToObjectiveC()(),
        unsigned int v21 = [v17 BOOLForKey:v20],
        v20,
        !v21))
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100010324(v26, (uint64_t)qword_10170DDA8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      BOOL v30 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 138543362;
      swift_errorRetain();
      uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v36 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v30 = v31;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Error in product info request. Error: %{public}@", v29, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    goto LABEL_17;
  }
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100010324(v22, (uint64_t)qword_10170DDA8);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "AccessoryHardcodedPairingEnabled: bypassing product info check failure", v25, 2u);
    swift_slowDealloc();
  }

  sub_1006FAF2C((uint64_t)v6);
  sub_1011DF578((uint64_t)v6, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001DAB4((uint64_t)v12, (uint64_t *)&unk_10166BFA0);
LABEL_17:
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v32 = swift_allocError();
    *unint64_t v33 = a1;
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = v32;
    swift_errorRetain();
    sub_10000588C(&qword_101641640);
    return CheckedContinuation.resume(throwing:)();
  }
  sub_100331978((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
  sub_10032FE84((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
  sub_10000588C(&qword_101641640);
  CheckedContinuation.resume(returning:)();
  return sub_1003300FC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
}

uint64_t sub_10032E4E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v129 = type metadata accessor for AccessoryInfoResponseContent(0);
  uint64_t v132 = *(void *)(v129 - 8);
  uint64_t v5 = __chkstk_darwin(v129);
  uint64_t v7 = (char *)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v144 = (uint64_t)&v124 - v8;
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_10166BFA0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v131 = (char *)&v124 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v124 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v127 = (uint64_t)&v124 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v134 = (uint64_t)&v124 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  unsigned int v21 = (char *)&v124 - v20;
  __chkstk_darwin(v19);
  uint64_t v133 = (uint64_t)&v124 - v22;
  uint64_t v135 = type metadata accessor for AccessoryProductInfo();
  uint64_t v23 = *(void *)(v135 - 8);
  uint64_t v24 = __chkstk_darwin(v135);
  int v128 = (char *)&v124 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  os_log_type_t v28 = (char *)&v124 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v126 = (uint64_t)&v124 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v143 = (uint64_t)&v124 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v141 = (uint64_t)&v124 - v34;
  __chkstk_darwin(v33);
  uint64_t v130 = (uint64_t)&v124 - v35;
  uint64_t v137 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  unint64_t v139 = *(uint8_t **)(v137 - 8);
  uint64_t v36 = __chkstk_darwin(v137);
  unint64_t v38 = (char *)&v124 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  unint64_t v138 = (char *)&v124 - v39;
  uint64_t v40 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v40 - 8);
  if (FMNServerInteractionController.FMNResponseFields.statusCode.getter() != 200)
  {
    if (qword_101637188 != -1) {
      swift_once();
    }
    uint64_t v53 = (void *)qword_10170EE68;
    id v54 = [self sharedInstance];
    unsigned int v55 = [v54 isInternalBuild];

    if (v55
      && (NSString v56 = String._bridgeToObjectiveC()(),
          unsigned int v57 = [v53 BOOLForKey:v56],
          v56,
          v57))
    {
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v58 = type metadata accessor for Logger();
      sub_100010324(v58, (uint64_t)qword_10170DDA8);
      uint64_t v59 = Logger.logObject.getter();
      os_log_type_t v60 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl((void *)&_mh_execute_header, v59, v60, "AccessoryHardcodedPairingEnabled: bypassing product info check failure", v61, 2u);
        swift_slowDealloc();
      }

      sub_1006FAF2C((uint64_t)v7);
      sub_1011DF578((uint64_t)v7, (uint64_t)v14);
      uint64_t v62 = v135;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v14, 1, v135) != 1)
      {
        sub_100331978((uint64_t)v14, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        uint64_t v105 = v134;
        sub_10032FE84((uint64_t)v28, v134, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(v105, 0, 1, v62);
        sub_10000588C(&qword_101641640);
        CheckedContinuation.resume(returning:)();
        return sub_1003300FC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      }
      sub_10001DAB4((uint64_t)v14, (uint64_t *)&unk_10166BFA0);
    }
    else
    {
      if (qword_101636A58 != -1) {
        swift_once();
      }
      uint64_t v63 = type metadata accessor for Logger();
      sub_100010324(v63, (uint64_t)qword_10170DDA8);
      uint64_t v64 = v139;
      uint64_t v65 = a1;
      uint64_t v66 = v137;
      (*((void (**)(char *, uint64_t, uint64_t))v139 + 2))(v38, v65, v137);
      uint64_t v67 = Logger.logObject.getter();
      os_log_type_t v68 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v67, v68))
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        uint64_t v145 = swift_slowAlloc();
        uint64_t v136 = a3;
        *(_DWORD *)uint64_t v69 = 136315138;
        sub_1003300B4((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
        uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v147 = sub_1008FA0F0(v70, v71, &v145);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*((void (**)(char *, uint64_t))v64 + 1))(v38, v66);
        _os_log_impl((void *)&_mh_execute_header, v67, v68, "Product info check failed: %s", v69, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*((void (**)(char *, uint64_t))v64 + 1))(v38, v66);
      }
    }
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v72 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v145 = v72;
    sub_10000588C(&qword_101641640);
    return CheckedContinuation.resume(throwing:)();
  }
  uint64_t v136 = a3;
  uint64_t v41 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v43 = v42;
  static String.Encoding.utf8.getter();
  uint64_t v125 = String.init(data:encoding:)();
  unint64_t v45 = v44;
  sub_10001CFB8(v41, v43);
  uint64_t v142 = v23;
  v140 = v7;
  uint64_t v47 = v138;
  unint64_t v46 = v139;
  uint64_t v48 = v23;
  if (v45)
  {
    if (qword_101636A58 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_100010324(v49, (uint64_t)qword_10170DDA8);
    swift_bridgeObjectRetain();
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v145 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v147 = sub_1008FA0F0(v125, v45, &v145);
      unint64_t v46 = v139;
      uint64_t v7 = v140;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "response data: %s", v52, 0xCu);
      swift_arrayDestroy();
      uint64_t v47 = v138;
      swift_slowDealloc();
      uint64_t v48 = v142;
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  if (qword_101636A58 != -1) {
    swift_once();
  }
  uint64_t v74 = type metadata accessor for Logger();
  uint64_t v75 = sub_100010324(v74, (uint64_t)qword_10170DDA8);
  uint64_t v76 = v137;
  (*((void (**)(char *, uint64_t, uint64_t))v46 + 2))(v47, a1, v137);
  unint64_t v139 = (uint8_t *)v75;
  os_log_type_t v77 = Logger.logObject.getter();
  os_log_type_t v78 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v77, v78))
  {
    uint64_t v79 = swift_slowAlloc();
    uint64_t v125 = a1;
    os_log_type_t v80 = (uint8_t *)v79;
    uint64_t v145 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v80 = 136446210;
    sub_1003300B4((unint64_t *)&qword_101649E30, (void (*)(uint64_t))&type metadata accessor for FMNServerInteractionController.FMNResponseFields);
    uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v147 = sub_1008FA0F0(v81, v82, &v145);
    uint64_t v7 = v140;
    uint64_t v48 = v142;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v46 + 1))(v138, v76);
    _os_log_impl((void *)&_mh_execute_header, v77, v78, "response: %{public}s", v80, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*((void (**)(char *, uint64_t))v46 + 1))(v47, v76);
  }

  type metadata accessor for JSONDecoder();
  swift_allocObject();
  uint64_t v83 = JSONDecoder.init()();
  uint64_t v84 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v86 = v85;
  sub_10033015C();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  sub_10001CFB8(v84, v86);
  uint64_t v87 = v145;
  uint64_t v88 = *(void *)(v145 + 16);
  if (!v88)
  {
    swift_bridgeObjectRelease();
    if (qword_101637188 != -1) {
      swift_once();
    }
    uint64_t v94 = (void *)qword_10170EE68;
    id v95 = [self sharedInstance];
    unsigned int v96 = [v95 isInternalBuild];

    if (v96)
    {
      NSString v97 = String._bridgeToObjectiveC()();
      unsigned int v98 = [v94 BOOLForKey:v97];

      if (v98)
      {
        uint64_t v99 = Logger.logObject.getter();
        os_log_type_t v100 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v99, v100))
        {
          uint64_t v101 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v101 = 0;
          _os_log_impl((void *)&_mh_execute_header, v99, v100, "AccessoryHardcodedPairingEnabled: bypassing product info check failure", v101, 2u);
          swift_slowDealloc();
        }

        sub_1006FAF2C((uint64_t)v7);
        uint64_t v102 = v127;
        sub_1011DF578((uint64_t)v7, v127);
        uint64_t v103 = v135;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v102, 1, v135) != 1)
        {
          uint64_t v122 = v126;
          sub_100331978(v102, v126, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          uint64_t v123 = v134;
          sub_10032FE84(v122, v134, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v48 + 56))(v123, 0, 1, v103);
          sub_10000588C(&qword_101641640);
          CheckedContinuation.resume(returning:)();
          swift_release();
          return sub_1003300FC(v122, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        }
        sub_10001DAB4(v102, (uint64_t *)&unk_10166BFA0);
      }
    }
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v104 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v145 = v104;
    sub_10000588C(&qword_101641640);
    CheckedContinuation.resume(throwing:)();
    return swift_release();
  }
  unint64_t v138 = (char *)v83;
  swift_bridgeObjectRetain_n();
  uint64_t v89 = Logger.logObject.getter();
  os_log_type_t v90 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v89, v90))
  {
    uint64_t v91 = (uint8_t *)swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    *(_DWORD *)uint64_t v91 = 136315138;
    uint64_t v147 = v92;
    unint64_t v139 = v91 + 4;
    uint64_t v145 = 0;
    unint64_t v146 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    _StringGuts.grow(_:)(34);
    swift_bridgeObjectRelease();
    uint64_t v145 = 0xD000000000000020;
    unint64_t v146 = 0x80000001013F8210;
    swift_bridgeObjectRetain();
    v93._countAndFlagsBits = Array.description.getter();
    String.append(_:)(v93);
    swift_bridgeObjectRelease_n();
    uint64_t v48 = v142;
    swift_bridgeObjectRelease();
    uint64_t v145 = sub_1008FA0F0(v145, v146, &v147);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v89, v90, "decodedResponse: %s", v91, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v7 = v140;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v106 = v135;
  uint64_t v107 = v87 + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
  uint64_t v108 = *(void *)(v132 + 72);
  uint64_t v109 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  unint64_t v139 = (uint8_t *)v87;
  swift_bridgeObjectRetain();
  uint64_t v110 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v111 = v144;
    sub_10032FE84(v107, v144, type metadata accessor for AccessoryInfoResponseContent);
    sub_10032FE84(v111, (uint64_t)v7, type metadata accessor for AccessoryInfoResponseContent);
    sub_1011DF578((uint64_t)v7, (uint64_t)v21);
    sub_1003300FC(v111, type metadata accessor for AccessoryInfoResponseContent);
    uint64_t v112 = *v109;
    if ((*v109)(v21, 1, v106) == 1)
    {
      sub_10001DAB4((uint64_t)v21, (uint64_t *)&unk_10166BFA0);
    }
    else
    {
      uint64_t v113 = v141;
      sub_100331978((uint64_t)v21, v141, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      sub_100331978(v113, v143, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v110 = (void *)sub_100A70294(0, v110[2] + 1, 1, (unint64_t)v110);
      }
      unint64_t v115 = v110[2];
      unint64_t v114 = v110[3];
      if (v115 >= v114 >> 1) {
        uint64_t v110 = (void *)sub_100A70294(v114 > 1, v115 + 1, 1, (unint64_t)v110);
      }
      v110[2] = v115 + 1;
      sub_100331978(v143, (uint64_t)v110+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v142 + 72) * v115, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      uint64_t v7 = v140;
    }
    v107 += v108;
    --v88;
  }
  while (v88);
  swift_bridgeObjectRelease_n();
  if (v110[2])
  {
    uint64_t v116 = v142;
    uint64_t v117 = v133;
    sub_10032FE84((uint64_t)v110 + ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80)), v133, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    uint64_t v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v116 + 56);
    v118(v117, 0, 1, v106);
  }
  else
  {
    uint64_t v118 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56);
    uint64_t v117 = v133;
    v118(v133, 1, 1, v106);
  }
  swift_bridgeObjectRelease();
  if (v112((char *)v117, 1, v106) == 1)
  {
    sub_10001DAB4(v117, (uint64_t *)&unk_10166BFA0);
    type metadata accessor for AccessoryMetadataManager.Error(0);
    sub_1003300B4(&qword_101641638, (void (*)(uint64_t))type metadata accessor for AccessoryMetadataManager.Error);
    uint64_t v119 = swift_allocError();
    swift_storeEnumTagMultiPayload();
    uint64_t v145 = v119;
    sub_10000588C(&qword_101641640);
    CheckedContinuation.resume(throwing:)();
    return swift_release();
  }
  else
  {
    uint64_t v120 = v130;
    sub_100331978(v117, v130, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    uint64_t v121 = v134;
    sub_10032FE84(v120, v134, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    v118(v121, 0, 1, v106);
    sub_10000588C(&qword_101641640);
    CheckedContinuation.resume(returning:)();
    swift_release();
    return sub_1003300FC(v120, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
  }
}

uint64_t sub_10032FDF4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  sub_1008FA0F0(0xD000000000000026, 0x80000001013F84F0, a3);
  uint64_t v4 = *a1 + 8;
  uint64_t result = UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *a1 = v4;
  return result;
}

uint64_t type metadata accessor for AccessoryMetadataManager.Error(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_1016418F0);
}

uint64_t sub_10032FE7C(uint64_t a1)
{
  return sub_10032D9B4(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10032FE84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10032FEF0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10000588C(&qword_101641640) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10032DF24(a1, v4, v5);
}

uint64_t sub_10032FF6C()
{
  uint64_t v1 = sub_10000588C(&qword_101641640);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10033003C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10000588C(&qword_101641640) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_10032E4E8(a1, v4, v5);
}

uint64_t sub_1003300B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003300FC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10033015C()
{
  unint64_t result = qword_101641648;
  if (!qword_101641648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641648);
  }
  return result;
}

uint64_t sub_1003301B0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003301E8(void (*a1)(void), uint64_t a2)
{
  return sub_100304958(a1, a2, *(void *)(v2 + 16), *(unsigned __int8 *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1003301F8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 64) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 8) = sub_100033F68;
  return _swift_task_switch(sub_100305078, 0, 0);
}

uint64_t sub_1003302B8(uint64_t a1)
{
  return sub_1003052A8(a1, *(unsigned char *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1003302E0(uint64_t a1)
{
  return sub_100305640(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_1003302F0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100330330(uint8_t *a1)
{
  return sub_1003058BC(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10033033C(uint64_t a1)
{
  return sub_1003130E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100330348()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_10000588C(&qword_101641690);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_1003304B0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_10000588C(&qword_101641690) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + v9;
  uint64_t v15 = *(void *)((char *)v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v16;
  *uint64_t v16 = v3;
  v16[1] = sub_10001D2E4;
  return sub_1003133AC(a1, v10, v11, v12, v13, v14, v15);
}

uint64_t sub_100330650()
{
  uint64_t v2 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_10000588C(&qword_101641690) - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = v0 + v6;
  uint64_t v9 = *(void *)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_10001D2E4;
  return sub_100313844(v7, v8, v9);
}

uint64_t sub_1003307BC(uint64_t a1, char a2)
{
  char v5 = a2 & 1;
  uint64_t v6 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = v7 + *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(sub_10000588C(&qword_101641690) - 8);
  uint64_t v10 = v2 + ((v8 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_100033F68;
  return sub_10032B1F8(a1, v5, v2 + v7, v10);
}

uint64_t sub_10033093C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_10033094C()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = sub_10000588C(&qword_101641690);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11, v10);
}

uint64_t sub_100330AAC(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(sub_10000588C(&qword_101641690) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v1 + v6;
  uint64_t v11 = v1 + v9;
  uint64_t v12 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v13;
  *uint64_t v13 = v3;
  v13[1] = sub_100033F68;
  return sub_100313D48(a1, v10, v11, v12);
}

uint64_t sub_100330C24()
{
  return sub_10032CC1C();
}

uint64_t sub_100330C40()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100330C78()
{
  return sub_10012B27C(*(void (**)(uint64_t))(v0 + 16));
}

uint64_t sub_100330C80()
{
  swift_errorRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100330CB8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330CC8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330CD8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330CE8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330CF8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D08()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D18()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D28()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D38()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D48()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D58()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D68()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D78()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330D88()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t sub_100330D98()
{
  unint64_t result = qword_1016416E0;
  if (!qword_1016416E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016416E0);
  }
  return result;
}

unint64_t sub_100330DEC()
{
  unint64_t result = qword_1016416E8;
  if (!qword_1016416E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1016416E8);
  }
  return result;
}

uint64_t sub_100330E40(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return swift_bridgeObjectRelease();
  }
  if (!a3) {
    return sub_10001CFB8(result, a2);
  }
  return result;
}

uint64_t sub_100330E68()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100330EA0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  *a1 = v2;
  a1[1] = v3;
  return sub_1000361E0(v2, v3);
}

uint64_t sub_100330EAC()
{
  return sub_10012B1CC(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_100330EB4(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 2 || a3 == 1) {
    return swift_bridgeObjectRetain();
  }
  if (!a3) {
    return sub_1000361E0(result, a2);
  }
  return result;
}

uint64_t sub_100330EDC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330EEC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330EFC()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F1C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F2C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F3C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100330F74()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F84()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330F94()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FA4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FB4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FD4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FE4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100330FF4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331004()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331014()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331024()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331034()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100331044()
{
  return *(void *)(v0 + 16);
}

uint64_t sub_10033104C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10033105C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10033106C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10033107C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10033108C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1009DC0A4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_100331094()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003310A4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003310B4()
{
  return _swift_deallocObject(v0, 20, 7);
}

void sub_1003310C4(_DWORD *a1@<X8>)
{
  *a1 = *(_DWORD *)(v1 + 16);
}

uint64_t sub_1003310D0()
{
  return sub_10012B39C(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1003310D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003310E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003310F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331108()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331118()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331128()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331138()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100331148()
{
  return sub_10012B234(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_100331150()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331160()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331170()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331180()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331190()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311A0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311B0()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311C0()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1003311C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003311F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331208()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331218()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331228()
{
  return _swift_deallocObject(v0, 20, 7);
}

uint64_t sub_100331238()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331248()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331258()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331268()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331278()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331288()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331298()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312A8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312B8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312C8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312D8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312E8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_1003312F8()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331308()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331318()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331328()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331338()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331348()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331358()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331368()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331378()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331388()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100331398()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003313D8(uint64_t a1)
{
  char v4 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100033F68;
  return sub_10032CC98(a1, v4, v5, v6);
}

uint64_t sub_10033149C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001D4B0(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003314E0()
{
  if (*(unsigned char *)(v0 + 57) == 1)
  {
    uint64_t v1 = (id *)(v0 + 16);
    switch(*(unsigned char *)(v0 + 56))
    {
      case 0:
      case 7:
      case 0xA:
        goto LABEL_8;
      case 1:
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v1);
        break;
      case 2:

        goto LABEL_8;
      case 3:

        break;
      case 4:
      case 5:
      case 6:
        swift_release();
        break;
      case 8:
        swift_release();
LABEL_8:
        swift_errorRelease();
        break;
      case 9:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }

  return _swift_deallocObject(v0, 58, 7);
}

void sub_1003315CC(uint64_t a1)
{
  sub_100303BE4(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_1003315D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100331630(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a4 >> 60) & 3 | v6;
  if (v7 == 3)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    if (v7 != 2)
    {
      if (v7) {
        return result;
      }
      sub_1000361E0(result, a2);
      uint64_t result = a3;
      a2 = a4;
    }
    return sub_1000361E0(result, a2);
  }
}

uint64_t sub_1003316B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10163C5F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100331718()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100331750()
{
  swift_release();

  sub_1003317A8(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_1003317A8(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, char a5)
{
  if (a5) {
    int v6 = 4;
  }
  else {
    int v6 = 0;
  }
  int v7 = (a4 >> 60) & 3 | v6;
  if (v7 == 3)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (v7 != 2)
    {
      if (v7) {
        return result;
      }
      sub_10001CFB8(result, a2);
      uint64_t result = a3;
      a2 = a4;
    }
    return sub_10001CFB8(result, a2);
  }
}

uint64_t sub_100331828(void (*a1)(unsigned char *), uint64_t a2)
{
  return sub_1003025DC(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), v2 + 32, *(void *)(v2 + 72));
}

unint64_t sub_100331838()
{
  unint64_t result = qword_101641718;
  if (!qword_101641718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641718);
  }
  return result;
}

uint64_t sub_10033188C()
{
  swift_release();

  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003318D4(void (*a1)(unsigned char *), uint64_t a2)
{
  return sub_1003012D0(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

unint64_t sub_1003318E4()
{
  unint64_t result = qword_101641720;
  if (!qword_101641720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641720);
  }
  return result;
}

uint64_t sub_100331938()
{
  sub_1003317A8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_100331978(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1003319E0()
{
  unint64_t result = qword_101641728;
  if (!qword_101641728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641728);
  }
  return result;
}

uint64_t sub_100331A34()
{
  uint64_t v1 = (id *)(v0 + 16);
  switch(*(unsigned char *)(v0 + 56))
  {
    case 0:
    case 7:
    case 0xA:
      goto LABEL_7;
    case 1:
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v1);
      break;
    case 2:

      goto LABEL_7;
    case 3:

      break;
    case 4:
    case 5:
    case 6:
      swift_release();
      break;
    case 8:
      swift_release();
LABEL_7:
      swift_errorRelease();
      break;
    case 9:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_100331B10(void (*a1)(void *), uint64_t a2)
{
  return sub_1002FF574(a1, a2, v2 + 16);
}

uint64_t sub_100331B18(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100331B58(uint64_t a1)
{
  return sub_1002FE288(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100331B7C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_100300F80(*(void *)a1, *(void *)(a1 + 8), *(void **)(v2 + 24));
  *a2 = result;
  return result;
}

void sub_100331BB8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1002FF5FC(a1, *(void **)(v2 + 24), a2);
}

uint64_t sub_100331BE0()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100331C28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002FF170(a1, *(void *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_100331C60(uint64_t a1)
{
  return sub_1002FEE84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100331C6C(uint64_t a1)
{
  return sub_1002FD748(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100331C90(uint64_t a1)
{
  return sub_1002FDE58(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100331C9C()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100331D74(void (*a1)(char *), uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for MACAddress() - 8);
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1002FA5F8(a1, a2, v6, v7);
}

uint64_t sub_100331E24()
{
  uint64_t v1 = type metadata accessor for MACAddress();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100331F20()
{
  uint64_t v1 = *(void *)(type metadata accessor for MACAddress() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));
  unint64_t v6 = *(void (**)(uint64_t))(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v3 + 8);

  return sub_1002FBA80(v4, v0 + v2, v6, v7, v5);
}

uint64_t sub_100331FC0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100331FD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100331FE0()
{
  return swift_release();
}

uint64_t sub_100331FE8()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_100332030(uint64_t a1)
{
  return sub_1002FC590(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(uint64_t *))(v1 + 32), *(void *)(v1 + 40));
}

void sub_100332040(uint64_t *a1@<X8>)
{
  sub_1002F84D8(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100332060(uint64_t a1)
{
  return sub_1002F8C2C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100332084()
{
  swift_release();
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1003320D4(uint64_t a1)
{
  return sub_1002F9EBC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void *sub_1003320E4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = (int *)type metadata accessor for AccessoryMetadata(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (void *)((char *)a1 + v12);
      uint64_t v14 = (void *)((char *)a2 + v12);
      uint64_t v15 = *v14;
      unint64_t v16 = v14[1];
      sub_1000361E0(*v14, v16);
      *uint64_t v13 = v15;
      v13[1] = v16;
      uint64_t v17 = v11[6];
      uint64_t v18 = (void *)((char *)a1 + v17);
      uint64_t v19 = (void *)((char *)a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      uint64_t v21 = v11[7];
      uint64_t v22 = (void *)((char *)a1 + v21);
      uint64_t v23 = (void *)((char *)a2 + v21);
      uint64_t v24 = v23[1];
      void *v22 = *v23;
      v22[1] = v24;
      *(_DWORD *)((char *)a1 + v11[8]) = *(_DWORD *)((char *)a2 + v11[8]);
      uint64_t v25 = v11[9];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      *(_DWORD *)uint64_t v26 = *(_DWORD *)v27;
      v26[4] = v27[4];
      uint64_t v28 = v11[10];
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      unsigned char v29[16] = v30[16];
      uint64_t v31 = v11[11];
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      v32[8] = v33[8];
      *(void *)uint64_t v32 = *(void *)v33;
      uint64_t v34 = v11[12];
      uint64_t v35 = (char *)a1 + v34;
      uint64_t v36 = (char *)a2 + v34;
      *(_DWORD *)uint64_t v35 = *(_DWORD *)v36;
      v35[4] = v36[4];
      *((unsigned char *)a1 + v11[13]) = *((unsigned char *)a2 + v11[13]);
      *((unsigned char *)a1 + v11[14]) = *((unsigned char *)a2 + v11[14]);
      uint64_t v37 = v11[15];
      unint64_t v38 = (void *)((char *)a1 + v37);
      uint64_t v39 = (void *)((char *)a2 + v37);
      uint64_t v40 = v39[1];
      void *v38 = *v39;
      v38[1] = v40;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v41 = type metadata accessor for MACAddress();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = *a2;
      swift_errorRetain();
      *a1 = v8;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100332380(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v3 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = type metadata accessor for AccessoryMetadata(0);
      sub_10001CFB8(*(void *)(a1 + *(int *)(v4 + 20)), *(void *)(a1 + *(int *)(v4 + 20) + 8));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 1:
      uint64_t v5 = type metadata accessor for MACAddress();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(a1, v5);
    case 0:
      return swift_errorRelease();
  }
  return result;
}

void *sub_1003324C4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for AccessoryMetadata(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    sub_1000361E0(*v12, v14);
    *uint64_t v11 = v13;
    v11[1] = v14;
    uint64_t v15 = v9[6];
    unint64_t v16 = (void *)((char *)a1 + v15);
    uint64_t v17 = (void *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *unint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v9[7];
    uint64_t v20 = (void *)((char *)a1 + v19);
    uint64_t v21 = (void *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *uint64_t v20 = *v21;
    v20[1] = v22;
    *(_DWORD *)((char *)a1 + v9[8]) = *(_DWORD *)((char *)a2 + v9[8]);
    uint64_t v23 = v9[9];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(_DWORD *)uint64_t v24 = *(_DWORD *)v25;
    v24[4] = v25[4];
    uint64_t v26 = v9[10];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    char v27[16] = v28[16];
    uint64_t v29 = v9[11];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v9[12];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    *(_DWORD *)uint64_t v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
    *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
    *((unsigned char *)a1 + v9[14]) = *((unsigned char *)a2 + v9[14]);
    uint64_t v35 = v9[15];
    uint64_t v36 = (void *)((char *)a1 + v35);
    uint64_t v37 = (void *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v39 = type metadata accessor for MACAddress();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = *a2;
    swift_errorRetain();
    *a1 = v7;
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10033271C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003300FC((uint64_t)a1, type metadata accessor for AccessoryMetadataManager.Error);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for AccessoryMetadata(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = (void *)((char *)a1 + v10);
      uint64_t v12 = (void *)((char *)a2 + v10);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      sub_1000361E0(*v12, v14);
      *uint64_t v11 = v13;
      v11[1] = v14;
      uint64_t v15 = v9[6];
      unint64_t v16 = (void *)((char *)a1 + v15);
      uint64_t v17 = (void *)((char *)a2 + v15);
      *unint64_t v16 = *v17;
      v16[1] = v17[1];
      uint64_t v18 = v9[7];
      uint64_t v19 = (void *)((char *)a1 + v18);
      uint64_t v20 = (void *)((char *)a2 + v18);
      void *v19 = *v20;
      v19[1] = v20[1];
      *(_DWORD *)((char *)a1 + v9[8]) = *(_DWORD *)((char *)a2 + v9[8]);
      uint64_t v21 = v9[9];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      int v24 = *(_DWORD *)v23;
      v22[4] = v23[4];
      *(_DWORD *)uint64_t v22 = v24;
      uint64_t v25 = v9[10];
      uint64_t v26 = (char *)a1 + v25;
      uint64_t v27 = (char *)a2 + v25;
      long long v28 = *(_OWORD *)v27;
      v26[16] = v27[16];
      *(_OWORD *)uint64_t v26 = v28;
      uint64_t v29 = v9[11];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = *(void *)v31;
      v30[8] = v31[8];
      *(void *)uint64_t v30 = v32;
      uint64_t v33 = v9[12];
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      LODWORD(v32) = *(_DWORD *)v35;
      v34[4] = v35[4];
      *(_DWORD *)uint64_t v34 = v32;
      *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
      *((unsigned char *)a1 + v9[14]) = *((unsigned char *)a2 + v9[14]);
      uint64_t v36 = v9[15];
      uint64_t v37 = (void *)((char *)a1 + v36);
      uint64_t v38 = (void *)((char *)a2 + v36);
      *uint64_t v37 = *v38;
      v37[1] = v38[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v39 = type metadata accessor for MACAddress();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = *a2;
      swift_errorRetain();
      *a1 = v7;
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

unsigned char *sub_1003329B0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = (int *)type metadata accessor for AccessoryMetadata(0);
    *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
    *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
    *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
    *(_DWORD *)&a1[v9[8]] = *(_DWORD *)&a2[v9[8]];
    uint64_t v10 = v9[9];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    v11[4] = v12[4];
    *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
    uint64_t v13 = v9[10];
    unint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    unsigned char v14[16] = v15[16];
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    uint64_t v16 = v9[11];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = v9[12];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
    v20[4] = v21[4];
    a1[v9[13]] = a2[v9[13]];
    a1[v9[14]] = a2[v9[14]];
    *(_OWORD *)&a1[v9[15]] = *(_OWORD *)&a2[v9[15]];
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for MACAddress();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_100332B8C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1003300FC((uint64_t)a1, type metadata accessor for AccessoryMetadataManager.Error);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for AccessoryMetadata(0);
      *(_OWORD *)&a1[v9[5]] = *(_OWORD *)&a2[v9[5]];
      *(_OWORD *)&a1[v9[6]] = *(_OWORD *)&a2[v9[6]];
      *(_OWORD *)&a1[v9[7]] = *(_OWORD *)&a2[v9[7]];
      *(_DWORD *)&a1[v9[8]] = *(_DWORD *)&a2[v9[8]];
      uint64_t v10 = v9[9];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      v11[4] = v12[4];
      *(_DWORD *)uint64_t v11 = *(_DWORD *)v12;
      uint64_t v13 = v9[10];
      unint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      unsigned char v14[16] = v15[16];
      *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
      uint64_t v16 = v9[11];
      uint64_t v17 = &a1[v16];
      uint64_t v18 = &a2[v16];
      *(void *)uint64_t v17 = *(void *)v18;
      v17[8] = v18[8];
      uint64_t v19 = v9[12];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      *(_DWORD *)uint64_t v20 = *(_DWORD *)v21;
      v20[4] = v21[4];
      a1[v9[13]] = a2[v9[13]];
      a1[v9[14]] = a2[v9[14]];
      *(_OWORD *)&a1[v9[15]] = *(_OWORD *)&a2[v9[15]];
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for MACAddress();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100332D8C()
{
  uint64_t result = type metadata accessor for MACAddress();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AccessoryMetadata(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100332E60(uint64_t a1)
{
  return sub_100158ACC(a1) & 1;
}

void sub_100333044(void *a1@<X8>)
{
}

uint64_t sub_1003330BC(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(char *, void *, id))
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a1;
  id v16 = a5;
  a6(v13, a5, v15);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_10033320C(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5, void (*a6)(char *, void *))
{
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a3;
  id v15 = a1;
  id v16 = a5;
  a6(v13, a5);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void sub_10033392C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v87 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v5 - 8);
  uint64_t v92 = (uint64_t)v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v94 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v85 = (char *)v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v86 = (char *)v83 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v88 = (char *)v83 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  id v16 = (char *)v83 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v83 - v17;
  uint64_t v19 = type metadata accessor for DispatchPredicate();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (void *)((char *)v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v91 = a3;
  uint64_t v23 = *(void **)(a3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  void *v22 = v23;
  (*(void (**)(void *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  id v24 = v23;
  char v25 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v20 + 8))(v22, v19);
  if (v25)
  {
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v89 = v16;
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = sub_100010324(v26, (uint64_t)qword_10170E3C8);
  uint64_t v28 = v93 + 16;
  os_log_type_t v90 = *(void (**)(char *, uint64_t, uint64_t))(v93 + 16);
  v90(v18, a1, v94);
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v84 = a1;
    v98[0] = v32;
    v83[0] = v28;
    v83[1] = v27;
    uint64_t v33 = v94;
    *(_DWORD *)uint64_t v31 = 136315138;
    sub_10028B80C();
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    v96[0] = sub_1008FA0F0(v34, v35, v98);
    uint64_t v36 = v93;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v36 + 8);
    v37(v18, v33);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "didStartPlayingUnauthorizedSoundOnDevice %s", v31, 0xCu);
    swift_arrayDestroy();
    a1 = v84;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v37 = *(void (**)(char *, uint64_t))(v93 + 8);
    v37(v18, v94);
  }

  uint64_t v38 = (uint64_t *)(v91 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v39 = *v38;
  if (!*(void *)(v39 + 16))
  {
    uint64_t v49 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v92, 1, 1, v49);
LABEL_12:
    uint64_t v50 = v37;
    sub_10001DAB4(v92, &qword_10163CBC8);
    os_log_type_t v51 = v89;
    v90(v89, a1, v94);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v52, v53))
    {
      v50(v51, v94);
LABEL_24:

      return;
    }
    id v54 = (uint8_t *)swift_slowAlloc();
    v96[0] = swift_slowAlloc();
    *(_DWORD *)id v54 = 136315138;
    uint64_t v55 = v94;
    sub_10028B80C();
    uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v97 = sub_1008FA0F0(v56, v57, v96);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v50(v51, v55);
    uint64_t v58 = "didStartPlayingUnauthorizedSoundOnDevice called with unknown device %s";
LABEL_23:
    _os_log_impl((void *)&_mh_execute_header, v52, v53, v58, v54, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  unint64_t v40 = sub_1007240CC(a1);
  if (v41)
  {
    unint64_t v42 = v40;
    uint64_t v43 = *(void *)(v39 + 56);
    uint64_t v44 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v45 = a1;
    uint64_t v46 = *(void *)(v44 - 8);
    uint64_t v47 = v43 + *(void *)(v46 + 72) * v42;
    uint64_t v48 = v92;
    sub_100335090(v47, v92);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v44);
    a1 = v45;
  }
  else
  {
    uint64_t v44 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v92, 1, 1, v44);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v92, 1, v44) == 1) {
    goto LABEL_12;
  }
  sub_10001DAB4(v92, &qword_10163CBC8);
  uint64_t v59 = v91 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_playSoundSubjects;
  swift_beginAccess();
  os_log_type_t v60 = v88;
  if (!*(void *)(*(void *)v59 + 16))
  {
LABEL_21:
    v90(v60, a1, v94);
    uint64_t v52 = Logger.logObject.getter();
    os_log_type_t v53 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v52, v53))
    {
      v37(v60, v94);
      goto LABEL_24;
    }
    id v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v97 = swift_slowAlloc();
    *(_DWORD *)id v54 = 136315138;
    uint64_t v72 = v94;
    sub_10028B80C();
    uint64_t v73 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v95 = sub_1008FA0F0(v73, v74, &v97);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v37(v60, v72);
    uint64_t v58 = "Missing playSoundSubject for device %s!";
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  sub_1007240CC(a1);
  if ((v61 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v62 = v87;
  if (v87)
  {
    uint64_t v63 = v86;
    v90(v86, a1, v94);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v97 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v67 = v94;
      sub_10028B80C();
      uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v95 = sub_1008FA0F0(v68, v69, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v37(v63, v67);
      *(_WORD *)(v66 + 12) = 2080;
      uint64_t v95 = v87;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v70 = String.init<A>(describing:)();
      uint64_t v95 = sub_1008FA0F0(v70, v71, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "didStartPlayingUnauthorizedSoundOnDevice %s failed due to %s", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      uint64_t v62 = v87;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v37(v63, v94);
      swift_errorRelease();
      swift_errorRelease();
    }

    uint64_t v97 = v62;
    swift_errorRetain();
    PassthroughSubject.send(completion:)();
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    uint64_t v75 = v85;
    v90(v85, a1, v94);
    uint64_t v76 = Logger.logObject.getter();
    os_log_type_t v77 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v76, v77))
    {
      os_log_type_t v78 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      uint64_t v84 = a1;
      uint64_t v92 = v79;
      uint64_t v97 = v79;
      uint64_t v80 = v94;
      *(_DWORD *)os_log_type_t v78 = 136315138;
      sub_10028B80C();
      uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v95 = sub_1008FA0F0(v81, v82, &v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v37(v75, v80);
      _os_log_impl((void *)&_mh_execute_header, v76, v77, "didStartPlayingUnauthorizedSoundOnDevice %s succeeded", v78, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v37(v75, v94);
    }

    PassthroughSubject.send(_:)();
    uint64_t v97 = 4;
    PassthroughSubject.send(completion:)();
    swift_release();
  }
}

void sub_1003345EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v75 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CBC8);
  __chkstk_darwin(v5 - 8);
  os_log_type_t v78 = (uint64_t *)((char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v80 = *(void *)(v7 - 8);
  uint64_t v81 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  unint64_t v74 = (char *)&v71 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v71 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v71 - v16;
  uint64_t v18 = type metadata accessor for DispatchPredicate();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v79 = a3;
  uint64_t v22 = *(void **)(a3 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_commandQueue);
  *uint64_t v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    uint64_t v73 = v10;
    if (qword_101636CF8 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_100010324(v24, (uint64_t)qword_10170E3C8);
  uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  v76(v17, a1, v81);
  uint64_t v77 = v25;
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v71 = a1;
    uint64_t v29 = v81;
    os_log_type_t v30 = (uint8_t *)v28;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v72 = v15;
    v84[0] = v31;
    *(_DWORD *)os_log_type_t v30 = 136315138;
    sub_10028B80C();
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v83 = sub_1008FA0F0(v32, v33, v84);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v80 + 8);
    v34(v17, v29);
    os_log_type_t v35 = v27;
    uint64_t v36 = (uint64_t *)v34;
    _os_log_impl((void *)&_mh_execute_header, v26, v35, "didCompletePlayingUnauthorizedSoundOnDevice %s", v30, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v72;
    swift_slowDealloc();
    a1 = v71;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v36 = *(uint64_t **)(v80 + 8);
    ((void (*)(char *, uint64_t))v36)(v17, v81);
  }

  uint64_t v37 = (uint64_t *)(v79 + OBJC_IVAR____TtC12searchpartyd20SoundPlaybackManager_coordinators);
  swift_beginAccess();
  uint64_t v38 = *v37;
  if (!*(void *)(v38 + 16))
  {
    uint64_t v50 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v49 = (uint64_t)v78;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v78, 1, 1, v50);
LABEL_12:
    sub_10001DAB4(v49, &qword_10163CBC8);
    v76(v15, a1, v81);
    os_log_type_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v51, v52))
    {
      ((void (*)(char *, uint64_t))v36)(v15, v81);
      goto LABEL_23;
    }
    os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v53 = 136315138;
    uint64_t v54 = v81;
    sub_10028B80C();
    uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v82 = sub_1008FA0F0(v55, v56, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v36)(v15, v54);
    unint64_t v57 = "didCompletePlayingUnauthorizedSoundOnDevice called with unknown device %s";
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_1007240CC(a1);
  if (v40)
  {
    unint64_t v41 = v39;
    uint64_t v42 = *(void *)(v38 + 56);
    uint64_t v43 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v44 = v36;
    uint64_t v45 = a1;
    uint64_t v46 = v15;
    uint64_t v47 = *(void *)(v43 - 8);
    uint64_t v48 = v42 + *(void *)(v47 + 72) * v41;
    uint64_t v49 = (uint64_t)v78;
    sub_100335090(v48, (uint64_t)v78);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v49, 0, 1, v43);
    uint64_t v15 = v46;
    a1 = v45;
    uint64_t v36 = v44;
  }
  else
  {
    uint64_t v43 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
    uint64_t v49 = (uint64_t)v78;
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v78, 1, 1, v43);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v49, 1, v43) == 1) {
    goto LABEL_12;
  }
  os_log_type_t v78 = v36;
  sub_10001DAB4(v49, &qword_10163CBC8);
  sub_100829E80(a1, 0, 0);
  uint64_t v58 = v75;
  if (!v75)
  {
    uint64_t v67 = v73;
    v76(v73, a1, v81);
    os_log_type_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v51, v52))
    {
      ((void (*)(char *, uint64_t))v78)(v67, v81);
      goto LABEL_23;
    }
    os_log_type_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v53 = 136315138;
    uint64_t v68 = v81;
    sub_10028B80C();
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v82 = sub_1008FA0F0(v69, v70, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v78)(v67, v68);
    unint64_t v57 = "didCompletePlayingUnauthorizedSoundOnDevice %s succeeded";
LABEL_14:
    _os_log_impl((void *)&_mh_execute_header, v51, v52, v57, v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    goto LABEL_23;
  }
  uint64_t v59 = v74;
  v76(v74, a1, v81);
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v51 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v51, v60))
  {
    uint64_t v61 = swift_slowAlloc();
    uint64_t v83 = swift_slowAlloc();
    *(_DWORD *)uint64_t v61 = 136315394;
    sub_10028B80C();
    uint64_t v62 = v81;
    uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v82 = sub_1008FA0F0(v63, v64, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v78)(v59, v62);
    *(_WORD *)(v61 + 12) = 2080;
    uint64_t v82 = v58;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v65 = String.init<A>(describing:)();
    uint64_t v82 = sub_1008FA0F0(v65, v66, &v83);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v51, v60, "didCompletePlayingUnauthorizedSoundOnDevice %s failed due to %s", (uint8_t *)v61, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    return;
  }
  swift_errorRelease();
  ((void (*)(char *, uint64_t))v78)(v59, v81);
  swift_errorRelease();
  swift_errorRelease();
LABEL_23:
}

uint64_t sub_100335090(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SoundPlaybackManager.PlaybackCoordinator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t AllMacBeaconConfigs.normalBattery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100335100(v1, a1);
}

uint64_t sub_100335100(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(void *)(a2 + 48) = *(void *)(a1 + 48);
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t AllMacBeaconConfigs.lowBattery.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10033514C(v1 + 56, a1);
}

uint64_t sub_10033514C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101641990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL static MacBeaconConfig.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24)
      && *(double *)(a1 + 32) == *(double *)(a2 + 32)
      && *(double *)(a1 + 40) == *(double *)(a2 + 40)
      && sub_100336C24(*(void **)(a1 + 48), *(void **)(a2 + 48));
}

uint64_t sub_10033522C()
{
  if (*v0) {
    return 0x6574746142776F6CLL;
  }
  else {
    return 0x61426C616D726F6ELL;
  }
}

uint64_t sub_100335278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100338E48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003352A0(uint64_t a1)
{
  unint64_t v2 = sub_100338D38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003352DC(uint64_t a1)
{
  unint64_t v2 = sub_100338D38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AllMacBeaconConfigs.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101641998);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100338D38();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v9 = *(_OWORD *)(v3 + 16);
  v13[0] = *(_OWORD *)v3;
  v13[1] = v9;
  v13[2] = *(_OWORD *)(v3 + 32);
  uint64_t v14 = *(void *)(v3 + 48);
  char v12 = 0;
  sub_100338D8C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    sub_100338DE0(v3 + 56, (uint64_t)v15);
    sub_100338DE0((uint64_t)v15, (uint64_t)v13);
    char v12 = 1;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

__n128 AllMacBeaconConfigs.init(from:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100338F6C(a1, (uint64_t)v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 96) = v7[6];
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10033551C(void *a1)
{
  return AllMacBeaconConfigs.encode(to:)(a1);
}

uint64_t sub_100335568(_OWORD *a1, long long *a2)
{
  long long v2 = a1[5];
  v13[4] = a1[4];
  v13[5] = v2;
  long long v3 = a1[6];
  long long v4 = a1[1];
  v13[0] = *a1;
  v13[1] = v4;
  long long v5 = a1[3];
  v13[2] = a1[2];
  _OWORD v13[3] = v5;
  long long v6 = *a2;
  long long v7 = a2[1];
  uint64_t v13[6] = v3;
  v14[0] = v6;
  long long v8 = a2[2];
  long long v9 = a2[3];
  long long v10 = a2[6];
  v14[5] = a2[5];
  v14[6] = v10;
  long long v11 = a2[4];
  v14[3] = v9;
  void v14[4] = v11;
  v14[1] = v7;
  v14[2] = v8;
  return _s12searchpartyd19AllMacBeaconConfigsV23__derived_struct_equalsySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v14) & 1;
}

double MacBeaconConfig.slowRollAdvertisementDuration.getter()
{
  return *(double *)(v0 + 24);
}

double MacBeaconConfig.slowRollNoAdvertisementDuration.getter()
{
  return *(double *)(v0 + 32);
}

double MacBeaconConfig.noAdvertisementDurationDecayFactor.getter()
{
  return *(double *)(v0 + 40);
}

uint64_t MacBeaconConfig.postInitialDayAdvertisementTimes.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1003355F0(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1003356C0(char a1)
{
  unint64_t result = 0xD00000000000001BLL;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000023;
      break;
    case 4:
      unint64_t result = 0xD000000000000025;
      break;
    case 5:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 6:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100335790(char *a1, char *a2)
{
  return sub_10071E678(*a1, *a2);
}

Swift::Int sub_10033579C()
{
  return sub_100721A68();
}

uint64_t sub_1003357A8()
{
  return sub_100720534();
}

Swift::Int sub_1003357B0()
{
  return sub_100721A68();
}

unint64_t sub_1003357B8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003391D8(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1003357E8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1003355F0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_100335814()
{
  return sub_1003356C0(*v0);
}

unint64_t sub_10033581C@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1003391D8(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100335844(uint64_t a1)
{
  unint64_t v2 = sub_100339500();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100335880(uint64_t a1)
{
  unint64_t v2 = sub_100339500();

  return CodingKey.debugDescription.getter(a1, v2);
}

void __swiftcall MacBeaconConfig.init(initialNoBeaconDuration:fastRollAdvertisementDuration:fastRollAdvertisementInterval:slowRollAdvertisementDuration:slowRollNoAdvertisementDuration:noAdvertisementDurationDecayFactor:postInitialDayAdvertisementTimes:)(searchpartyd::MacBeaconConfig *__return_ptr retstr, Swift::Double initialNoBeaconDuration, Swift::Double fastRollAdvertisementDuration, Swift::Double fastRollAdvertisementInterval, Swift::Double slowRollAdvertisementDuration, Swift::Double slowRollNoAdvertisementDuration, Swift::Double noAdvertisementDurationDecayFactor, Swift::OpaquePointer postInitialDayAdvertisementTimes)
{
  retstr->initialNoBeaconDuration = initialNoBeaconDuration;
  retstr->fastRollAdvertisementDuration = fastRollAdvertisementDuration;
  retstr->fastRollAdvertisementInterval = fastRollAdvertisementInterval;
  retstr->slowRollAdvertisementDuration = slowRollAdvertisementDuration;
  retstr->slowRollNoAdvertisementDuration = slowRollNoAdvertisementDuration;
  retstr->noAdvertisementDurationDecayFactor = noAdvertisementDurationDecayFactor;
  retstr->postInitialDayAdvertisementTimes = postInitialDayAdvertisementTimes;
}

double MacBeaconConfig.init(from:)@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_100339224(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t MacBeaconConfig.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_1016419B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001CD44(a1, a1[3]);
  sub_100339500();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v17 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    char v16 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v15 = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v14 = 3;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = 4;
    KeyedEncodingContainer.encode(_:forKey:)();
    char v12 = 5;
    KeyedEncodingContainer.encode(_:forKey:)();
    uint64_t v11 = *(void *)(v3 + 48);
    v10[15] = 6;
    sub_10000588C(&qword_10163AB88);
    sub_100339F88(&qword_1016419C0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100335B90(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    long long v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_100335C58(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 56);
    unint64_t v4 = (unsigned __int8 *)(a2 + 56);
    while (1)
    {
      if (*(v3 - 24) != *(v4 - 24)) {
        return 0;
      }
      uint64_t v5 = *((void *)v3 - 2);
      unint64_t v6 = *((void *)v3 - 1);
      int v8 = *v3;
      v3 += 32;
      int v7 = v8;
      uint64_t v10 = *((void *)v4 - 2);
      unint64_t v9 = *((void *)v4 - 1);
      int v12 = *v4;
      v4 += 32;
      int v11 = v12;
      uint64_t v13 = 0;
      switch(v6 >> 62)
      {
        case 1uLL:
          LODWORD(v13) = HIDWORD(v5) - v5;
          if (__OFSUB__(HIDWORD(v5), v5))
          {
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
          }
          uint64_t v13 = (int)v13;
          break;
        case 2uLL:
          uint64_t v15 = *(void *)(v5 + 16);
          uint64_t v14 = *(void *)(v5 + 24);
          BOOL v16 = __OFSUB__(v14, v15);
          uint64_t v13 = v14 - v15;
          if (!v16) {
            break;
          }
          goto LABEL_125;
        case 3uLL:
          break;
        default:
          uint64_t v13 = BYTE6(v6);
          break;
      }
      unint64_t v17 = v9 >> 62;
      int v76 = v11;
      int v77 = v7;
      switch(v9 >> 62)
      {
        case 1uLL:
          LODWORD(v18) = HIDWORD(v10) - v10;
          if (__OFSUB__(HIDWORD(v10), v10)) {
            goto LABEL_126;
          }
          uint64_t v18 = (int)v18;
LABEL_16:
          if (v13 != v18) {
            return 0;
          }
          if (v13 < 1)
          {
LABEL_27:
            sub_1000361E0(v10, v9);
            sub_1000361E0(v5, v6);
          }
          else
          {
            unint64_t v75 = v6;
            switch(v6 >> 62)
            {
              case 1uLL:
                if ((int)v5 > v5 >> 32) {
                  goto LABEL_128;
                }
                sub_1000361E0(v5, v6);
                sub_1000361E0(v10, v9);
                sub_1000361E0(v5, v6);
                uint64_t v26 = (char *)__DataStorage._bytes.getter();
                if (!v26) {
                  goto LABEL_35;
                }
                uint64_t v27 = __DataStorage._offset.getter();
                if (__OFSUB__((int)v5, v27)) {
                  goto LABEL_130;
                }
                v26 += (int)v5 - v27;
LABEL_35:
                __DataStorage._length.getter();
                if (!v17)
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!v26) {
                    goto LABEL_157;
                  }
                  int v32 = memcmp(v26, __s1, BYTE6(v9));
LABEL_108:
                  sub_10001CFB8(v5, v6);
                  if (v32) {
                    goto LABEL_120;
                  }
                  break;
                }
                if (v17 == 1)
                {
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v28 = (char *)__DataStorage._bytes.getter();
                  if (v28)
                  {
                    uint64_t v29 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v10, v29)) {
                      goto LABEL_146;
                    }
                    v28 += (int)v10 - v29;
                  }
                  uint64_t v30 = __DataStorage._length.getter();
                  if (v30 >= (v10 >> 32) - (int)v10) {
                    size_t v31 = (v10 >> 32) - (int)v10;
                  }
                  else {
                    size_t v31 = v30;
                  }
                  if (!v26) {
                    goto LABEL_148;
                  }
                  if (!v28) {
                    goto LABEL_149;
                  }
                  int v32 = memcmp(v26, v28, v31);
                  sub_10001CFB8(v10, v9);
                  goto LABEL_108;
                }
                uint64_t v66 = *(void *)(v10 + 16);
                unint64_t v74 = *(void **)(v10 + 24);
                swift_retain();
                swift_retain();
                uint64_t v67 = (char *)__DataStorage._bytes.getter();
                if (v67)
                {
                  uint64_t v68 = __DataStorage._offset.getter();
                  if (__OFSUB__(v66, v68)) {
                    goto LABEL_145;
                  }
                  v67 += v66 - v68;
                }
                if (__OFSUB__(v74, v66)) {
                  goto LABEL_140;
                }
                uint64_t v69 = __DataStorage._length.getter();
                if (v69 >= (uint64_t)v74 - v66) {
                  size_t v70 = (size_t)v74 - v66;
                }
                else {
                  size_t v70 = v69;
                }
                unint64_t v6 = v75;
                if (!v26) {
                  goto LABEL_158;
                }
                if (!v67) {
                  goto LABEL_159;
                }
                int v71 = memcmp(v26, v67, v70);
                swift_release();
                swift_release();
                sub_10001CFB8(v5, v75);
                if (v71)
                {
LABEL_120:
                  sub_10001CFB8(v10, v9);
                  sub_10001CFB8(v5, v6);
                  return 0;
                }
                break;
              case 2uLL:
                uint64_t v33 = *(void *)(v5 + 16);
                sub_1000361E0(v10, v9);
                sub_1000361E0(v5, v6);
                swift_retain();
                swift_retain();
                uint64_t v34 = __DataStorage._bytes.getter();
                if (v34)
                {
                  uint64_t v35 = v34;
                  uint64_t v36 = __DataStorage._offset.getter();
                  if (__OFSUB__(v33, v36)) {
                    goto LABEL_129;
                  }
                  uint64_t v73 = (void *)(v35 + v33 - v36);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                __DataStorage._length.getter();
                unint64_t v6 = v75;
                if (v17)
                {
                  if (v17 == 1)
                  {
                    if (v10 >> 32 < (int)v10) {
                      goto LABEL_133;
                    }
                    swift_retain();
                    uint64_t v42 = (char *)__DataStorage._bytes.getter();
                    if (v42)
                    {
                      uint64_t v43 = __DataStorage._offset.getter();
                      if (__OFSUB__((int)v10, v43)) {
                        goto LABEL_144;
                      }
                      v42 += (int)v10 - v43;
                    }
                    uint64_t v44 = __DataStorage._length.getter();
                    if (v44 >= (v10 >> 32) - (int)v10) {
                      size_t v45 = (v10 >> 32) - (int)v10;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_151;
                    }
                    unint64_t v6 = v75;
                    if (!v42) {
                      goto LABEL_152;
                    }
                    int v46 = memcmp(v73, v42, v45);
                    sub_10001CFB8(v10, v9);
                    swift_release();
                    swift_release();
                    if (v46) {
                      goto LABEL_120;
                    }
                  }
                  else
                  {
                    uint64_t v59 = *(void *)(v10 + 16);
                    uint64_t v58 = *(void *)(v10 + 24);
                    swift_retain();
                    swift_retain();
                    os_log_type_t v60 = (char *)__DataStorage._bytes.getter();
                    if (v60)
                    {
                      uint64_t v61 = __DataStorage._offset.getter();
                      if (__OFSUB__(v59, v61)) {
                        goto LABEL_143;
                      }
                      v60 += v59 - v61;
                    }
                    BOOL v16 = __OFSUB__(v58, v59);
                    int64_t v62 = v58 - v59;
                    if (v16) {
                      goto LABEL_139;
                    }
                    uint64_t v63 = __DataStorage._length.getter();
                    if (v63 >= v62) {
                      size_t v64 = v62;
                    }
                    else {
                      size_t v64 = v63;
                    }
                    unint64_t v6 = v75;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v60) {
                      goto LABEL_156;
                    }
                    int v65 = memcmp(v73, v60, v64);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    if (v65) {
                      goto LABEL_120;
                    }
                  }
                }
                else
                {
                  __s1[0] = v10;
                  LOWORD(__s1[1]) = v9;
                  BYTE2(__s1[1]) = BYTE2(v9);
                  BYTE3(__s1[1]) = BYTE3(v9);
                  BYTE4(__s1[1]) = BYTE4(v9);
                  BYTE5(__s1[1]) = BYTE5(v9);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v57 = memcmp(v73, __s1, BYTE6(v9));
                  swift_release();
LABEL_93:
                  swift_release();
                  if (v57) {
                    goto LABEL_120;
                  }
                }
                break;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v17) {
                  goto LABEL_60;
                }
                if (v17 == 1)
                {
                  uint64_t v21 = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_132;
                  }
                  sub_1000361E0(v10, v9);
                  sub_1000361E0(v10, v9);
                  sub_1000361E0(v5, v6);
                  uint64_t v37 = __DataStorage._bytes.getter();
                  if (!v37) {
                    goto LABEL_150;
                  }
                  uint64_t v23 = v37;
                  uint64_t v38 = __DataStorage._offset.getter();
                  uint64_t v25 = (int)v10 - v38;
                  if (__OFSUB__((int)v10, v38)) {
                    goto LABEL_137;
                  }
LABEL_55:
                  uint64_t v39 = __DataStorage._length.getter();
                  if (v39 >= v21) {
                    size_t v40 = v21;
                  }
                  else {
                    size_t v40 = v39;
                  }
                  int v41 = memcmp(__s1, (const void *)(v23 + v25), v40);
                  sub_10001CFB8(v10, v9);
                  unint64_t v6 = v75;
                  if (v41) {
                    goto LABEL_120;
                  }
                  break;
                }
                uint64_t v53 = *(void *)(v10 + 16);
                uint64_t v54 = *(void *)(v10 + 24);
                sub_1000361E0(v10, v9);
                sub_1000361E0(v5, v75);
                swift_retain();
                swift_retain();
                uint64_t v49 = (char *)__DataStorage._bytes.getter();
                if (v49)
                {
                  uint64_t v55 = __DataStorage._offset.getter();
                  if (__OFSUB__(v53, v55)) {
                    goto LABEL_142;
                  }
                  v49 += v53 - v55;
                }
                BOOL v16 = __OFSUB__(v54, v53);
                int64_t v51 = v54 - v53;
                if (v16) {
                  goto LABEL_135;
                }
                uint64_t v52 = __DataStorage._length.getter();
                unint64_t v6 = v75;
                if (!v49) {
                  goto LABEL_160;
                }
LABEL_87:
                if (v52 >= v51) {
                  size_t v56 = v51;
                }
                else {
                  size_t v56 = v52;
                }
                int v57 = memcmp(__s1, v49, v56);
                swift_release();
                goto LABEL_93;
              default:
                __s1[0] = v5;
                LOWORD(__s1[1]) = v6;
                BYTE2(__s1[1]) = BYTE2(v6);
                BYTE3(__s1[1]) = BYTE3(v6);
                BYTE4(__s1[1]) = BYTE4(v6);
                BYTE5(__s1[1]) = BYTE5(v6);
                if (!v17)
                {
LABEL_60:
                  uint64_t __s2 = v10;
                  __int16 v79 = v9;
                  char v80 = BYTE2(v9);
                  char v81 = BYTE3(v9);
                  char v82 = BYTE4(v9);
                  char v83 = BYTE5(v9);
                  sub_1000361E0(v10, v9);
                  sub_1000361E0(v5, v6);
                  if (memcmp(__s1, &__s2, BYTE6(v9))) {
                    goto LABEL_120;
                  }
                  break;
                }
                if (v17 == 1)
                {
                  uint64_t v21 = (v10 >> 32) - (int)v10;
                  if (v10 >> 32 < (int)v10) {
                    goto LABEL_131;
                  }
                  sub_1000361E0(v10, v9);
                  sub_1000361E0(v10, v9);
                  sub_1000361E0(v5, v6);
                  uint64_t v22 = __DataStorage._bytes.getter();
                  if (!v22)
                  {
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __DataStorage._length.getter();
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
LABEL_160:
                    __break(1u);
                    JUMPOUT(0x100336630);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = __DataStorage._offset.getter();
                  uint64_t v25 = (int)v10 - v24;
                  if (__OFSUB__((int)v10, v24)) {
                    goto LABEL_136;
                  }
                  goto LABEL_55;
                }
                uint64_t v47 = *(void *)(v10 + 16);
                uint64_t v48 = *(void *)(v10 + 24);
                sub_1000361E0(v10, v9);
                sub_1000361E0(v5, v75);
                swift_retain();
                swift_retain();
                uint64_t v49 = (char *)__DataStorage._bytes.getter();
                if (v49)
                {
                  uint64_t v50 = __DataStorage._offset.getter();
                  if (__OFSUB__(v47, v50)) {
                    goto LABEL_141;
                  }
                  v49 += v47 - v50;
                }
                BOOL v16 = __OFSUB__(v48, v47);
                int64_t v51 = v48 - v47;
                if (v16) {
                  goto LABEL_134;
                }
                uint64_t v52 = __DataStorage._length.getter();
                unint64_t v6 = v75;
                if (!v49) {
                  goto LABEL_153;
                }
                goto LABEL_87;
            }
          }
          sub_10001CFB8(v10, v9);
          sub_10001CFB8(v5, v6);
          if (v77 != v76) {
            return 0;
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v20 = *(void *)(v10 + 16);
          uint64_t v19 = *(void *)(v10 + 24);
          BOOL v16 = __OFSUB__(v19, v20);
          uint64_t v18 = v19 - v20;
          if (!v16) {
            goto LABEL_16;
          }
          goto LABEL_127;
        case 3uLL:
          if (!v13) {
            goto LABEL_27;
          }
          sub_1000361E0(v10, v9);
          return 0;
        default:
          uint64_t v18 = BYTE6(v9);
          goto LABEL_16;
      }
    }
  }
  return 1;
}

uint64_t sub_100336660(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v15 = a1;
    uint64_t v16 = a2;
    while (1)
    {
      uint64_t v4 = a1 + v3;
      uint64_t v5 = a2 + v3;
      if (*(unsigned __int8 *)(a1 + v3 + 32) != *(unsigned __int8 *)(a2 + v3 + 32)) {
        break;
      }
      uint64_t v6 = *(void *)(v4 + 56);
      uint64_t v7 = *(void *)(v4 + 64);
      uint64_t v8 = *(void *)(v4 + 80);
      int v9 = *(unsigned __int8 *)(v4 + 88);
      uint64_t v10 = *(void *)(v5 + 56);
      uint64_t v11 = *(void *)(v5 + 64);
      uint64_t v12 = *(void *)(v5 + 80);
      uint64_t v17 = *(void *)(v5 + 72);
      uint64_t v18 = *(void *)(v4 + 72);
      int v13 = *(unsigned __int8 *)(v5 + 88);
      if ((*(void *)(v4 + 40) != *(void *)(v5 + 40) || *(void *)(v4 + 48) != *(void *)(v5 + 48))
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        break;
      }
      if ((v6 != v10 || v7 != v11) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      if (v8)
      {
        if (!v12 || (v18 != v17 || v8 != v12) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          return 0;
        }
      }
      else if (v12)
      {
        return 0;
      }
      if (v9 == 2)
      {
        if (v13 != 2) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v13 == 2 || ((((v9 & 1) == 0) ^ v13) & 1) == 0) {
          return result;
        }
      }
      v3 += 64;
      --v2;
      a1 = v15;
      a2 = v16;
      if (!v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1003367D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WildModeTrackingLocation(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (double *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v5);
  uint64_t v10 = (double *)((char *)&v19 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_16:
    char v15 = 0;
    return v15 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_100339EC0(a1 + v12, (uint64_t)v10, type metadata accessor for WildModeTrackingLocation);
      sub_100339EC0(a2 + v12, (uint64_t)v7, type metadata accessor for WildModeTrackingLocation);
      if (*v10 != *v7 || v10[1] != v7[1] || v10[2] != v7[2]) {
        break;
      }
      char v15 = static Date.== infix(_:_:)();
      sub_100339F28((uint64_t)v7, type metadata accessor for WildModeTrackingLocation);
      sub_100339F28((uint64_t)v10, type metadata accessor for WildModeTrackingLocation);
      BOOL v17 = v14-- != 0;
      if (v15)
      {
        v12 += v13;
        if (v17) {
          continue;
        }
      }
      return v15 & 1;
    }
    sub_100339F28((uint64_t)v7, type metadata accessor for WildModeTrackingLocation);
    sub_100339F28((uint64_t)v10, type metadata accessor for WildModeTrackingLocation);
    goto LABEL_16;
  }
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_1003369DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v21 = a1 + 32;
    uint64_t v4 = a2 + 32;
    while (1)
    {
      uint64_t v6 = (void *)(v21 + 32 * v3);
      uint64_t v7 = (void *)(v4 + 32 * v3);
      if (*v6 != *v7) {
        return 0;
      }
      uint64_t v8 = v6[3];
      uint64_t v9 = v7[3];
      BOOL v10 = v6[1] == v7[1] && v6[2] == v7[2];
      if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        return 0;
      }
      uint64_t v11 = *(void *)(v8 + 16);
      if (v11 != *(void *)(v9 + 16)) {
        return 0;
      }
      if (v11) {
        BOOL v12 = v8 == v9;
      }
      else {
        BOOL v12 = 1;
      }
      if (!v12)
      {
        uint64_t v13 = (uint64_t *)(v9 + 64);
        uint64_t v14 = (uint64_t *)(v8 + 64);
        while (*(v14 - 4) == *(v13 - 4))
        {
          uint64_t v15 = *(v14 - 1);
          uint64_t v16 = *v14;
          uint64_t v17 = *(v13 - 1);
          uint64_t v18 = *v13;
          BOOL v19 = *(v14 - 3) == *(v13 - 3) && *(v14 - 2) == *(v13 - 2);
          if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          BOOL v20 = v15 == v17 && v16 == v18;
          if (!v20 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          v13 += 5;
          v14 += 5;
          if (!--v11) {
            goto LABEL_5;
          }
        }
        return 0;
      }
LABEL_5:
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_100336B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    do
    {
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;
      if (v5 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v7 == v8)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      v3 += 8;
      v4 += 8;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_100336C24(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_100336C90(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (i = (uint64_t *)(a1 + 64); *(i - 4) == *(v3 - 4); i += 5)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_100336D68(uint64_t a1, uint64_t a2)
{
  return sub_1003386D0(a1, a2, (uint64_t (*)(void))type metadata accessor for RawSearchResult, (uint64_t (*)(void))type metadata accessor for RawSearchResult, (uint64_t (*)(char *, char *))sub_100CC4608);
}

uint64_t sub_100336DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unint64_t *)(a1 + 48);
  uint64_t v4 = (unint64_t *)(a2 + 48);
  while (2)
  {
    if (*(v3 - 2) != *(v4 - 2)) {
      return 0;
    }
    uint64_t v5 = *(v3 - 1);
    unint64_t v6 = *v3;
    uint64_t v8 = v3[1];
    unint64_t v7 = v3[2];
    uint64_t v9 = v3[3];
    unint64_t v10 = v3[4];
    unint64_t v11 = v3[6];
    uint64_t v125 = *(v4 - 1);
    uint64_t v126 = v3[5];
    unint64_t v127 = *v4;
    uint64_t v124 = v4[1];
    uint64_t v12 = v4[3];
    unint64_t v129 = v4[2];
    v3 += 9;
    unint64_t v13 = v4[4];
    uint64_t v121 = v4[5];
    unint64_t v128 = v4[6];
    v4 += 9;
    uint64_t v14 = 0;
    switch(v6 >> 62)
    {
      case 1uLL:
        LODWORD(v14) = HIDWORD(v5) - v5;
        if (__OFSUB__(HIDWORD(v5), v5))
        {
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
        }
        uint64_t v14 = (int)v14;
        break;
      case 2uLL:
        uint64_t v16 = *(void *)(v5 + 16);
        uint64_t v15 = *(void *)(v5 + 24);
        BOOL v17 = __OFSUB__(v15, v16);
        uint64_t v14 = v15 - v16;
        if (!v17) {
          break;
        }
        goto LABEL_162;
      case 3uLL:
        break;
      default:
        uint64_t v14 = BYTE6(v6);
        break;
    }
    uint64_t v122 = v8;
    uint64_t v123 = v9;
    unint64_t v119 = v6;
    uint64_t v120 = v5;
    switch(v127 >> 62)
    {
      case 1uLL:
        LODWORD(v18) = HIDWORD(v125) - v125;
        if (__OFSUB__(HIDWORD(v125), v125)) {
          goto LABEL_163;
        }
        uint64_t v18 = (int)v18;
LABEL_16:
        if (v14 != v18) {
          return 0;
        }
        if (v14 < 1)
        {
LABEL_21:
          sub_1000361E0(v5, v6);
          sub_100037A38(v8, v7);
          sub_100037A38(v9, v10);
          sub_100037A38(v126, v11);
          sub_1000361E0(v125, v127);
          sub_100037A38(v124, v129);
          sub_100037A38(v12, v13);
          sub_100037A38(v121, v128);
        }
        else
        {
          unint64_t v118 = v7;
          switch(v6 >> 62)
          {
            case 1uLL:
              uint64_t v111 = v2;
              uint64_t v23 = (int)v5;
              if (v5 >> 32 < (int)v5) {
                goto LABEL_169;
              }
              uint64_t v24 = v5;
              unint64_t v25 = v6;
              sub_1000361E0(v5, v6);
              sub_100037A38(v122, v118);
              sub_100037A38(v9, v10);
              sub_100037A38(v126, v11);
              sub_1000361E0(v125, v127);
              sub_100037A38(v124, v129);
              unint64_t v103 = v13;
              sub_100037A38(v12, v13);
              sub_100037A38(v121, v128);
              sub_1000361E0(v125, v127);
              sub_1000361E0(v24, v25);
              uint64_t v26 = __DataStorage._bytes.getter();
              if (!v26) {
                goto LABEL_36;
              }
              uint64_t v27 = __DataStorage._offset.getter();
              if (__OFSUB__(v23, v27)) {
                goto LABEL_179;
              }
              v26 += v23 - v27;
LABEL_36:
              __DataStorage._length.getter();
              sub_100DC89E8(v26, v125, v127, (char *)__s1);
              sub_10001CFB8(v125, v127);
              sub_10001CFB8(v120, v119);
              uint64_t v2 = v111;
              unint64_t v7 = v118;
              uint64_t v8 = v122;
              unint64_t v13 = v103;
              if (__s1[0]) {
                goto LABEL_37;
              }
              goto LABEL_159;
            case 2uLL:
              uint64_t v98 = *(void *)(v5 + 24);
              uint64_t v99 = *(void *)(v5 + 16);
              sub_1000361E0(v5, v6);
              sub_100037A38(v8, v7);
              sub_100037A38(v9, v10);
              sub_100037A38(v126, v11);
              sub_1000361E0(v125, v127);
              sub_100037A38(v124, v129);
              unint64_t v104 = v13;
              sub_100037A38(v12, v13);
              sub_100037A38(v121, v128);
              sub_1000361E0(v125, v127);
              swift_retain();
              swift_retain();
              uint64_t v28 = __DataStorage._bytes.getter();
              uint64_t v115 = v12;
              if (v28)
              {
                uint64_t v29 = __DataStorage._offset.getter();
                uint64_t v30 = v99;
                if (__OFSUB__(v99, v29)) {
                  goto LABEL_180;
                }
                v28 += v99 - v29;
                unint64_t v31 = v7;
              }
              else
              {
                unint64_t v31 = v7;
                uint64_t v30 = v99;
              }
              if (__OFSUB__(v98, v30)) {
                goto LABEL_170;
              }
              __DataStorage._length.getter();
              sub_100DC89E8(v28, v125, v127, (char *)__s1);
              sub_10001CFB8(v125, v127);
              swift_release();
              swift_release();
              unint64_t v13 = v104;
              unint64_t v7 = v31;
              uint64_t v12 = v115;
              if ((__s1[0] & 1) == 0) {
                goto LABEL_159;
              }
LABEL_37:
              uint64_t v9 = v123;
              break;
            case 3uLL:
              memset(__s1, 0, 14);
              sub_1000361E0(v5, v6);
              sub_100037A38(v8, v7);
              sub_100037A38(v9, v10);
              sub_100037A38(v126, v11);
              uint64_t v21 = v125;
              unint64_t v22 = v127;
              sub_1000361E0(v125, v127);
              sub_100037A38(v124, v129);
              sub_100037A38(v12, v13);
              sub_100037A38(v121, v128);
              sub_1000361E0(v125, v127);
              goto LABEL_30;
            default:
              __s1[0] = v5;
              LOWORD(__s1[1]) = v6;
              BYTE2(__s1[1]) = BYTE2(v6);
              BYTE3(__s1[1]) = BYTE3(v6);
              BYTE4(__s1[1]) = BYTE4(v6);
              BYTE5(__s1[1]) = BYTE5(v6);
              sub_1000361E0(v5, v6);
              sub_100037A38(v8, v7);
              sub_100037A38(v9, v10);
              sub_100037A38(v126, v11);
              uint64_t v21 = v125;
              unint64_t v22 = v127;
              sub_1000361E0(v125, v127);
              sub_100037A38(v124, v129);
              sub_100037A38(v12, v13);
              sub_100037A38(v121, v128);
              sub_1000361E0(v125, v127);
LABEL_30:
              sub_100DC89E8((uint64_t)__s1, v21, v22, &v130);
              unint64_t v32 = v22;
              unint64_t v7 = v118;
              sub_10001CFB8(v21, v32);
              if ((v130 & 1) == 0) {
                goto LABEL_159;
              }
              goto LABEL_37;
          }
        }
        if (v7 >> 60 == 15)
        {
          if (v129 >> 60 != 15) {
            goto LABEL_151;
          }
        }
        else
        {
          if (v129 >> 60 == 15)
          {
LABEL_151:
            sub_100037A38(v8, v7);
            uint64_t v92 = v124;
            unint64_t v93 = v129;
            sub_100037A38(v124, v129);
            uint64_t v94 = v8;
            unint64_t v95 = v7;
LABEL_154:
            sub_100037A24(v94, v95);
            sub_100037A24(v92, v93);
            goto LABEL_159;
          }
          uint64_t v33 = 0;
          switch(v7 >> 62)
          {
            case 1uLL:
              uint64_t v34 = v122;
              if (__OFSUB__(HIDWORD(v122), v122)) {
                goto LABEL_165;
              }
              uint64_t v33 = HIDWORD(v122) - (int)v122;
LABEL_47:
              sub_100037A38(v34, v7);
              break;
            case 2uLL:
              uint64_t v34 = v122;
              uint64_t v36 = *(void *)(v122 + 16);
              uint64_t v35 = *(void *)(v122 + 24);
              uint64_t v33 = v35 - v36;
              if (!__OFSUB__(v35, v36)) {
                goto LABEL_47;
              }
              goto LABEL_166;
            case 3uLL:
              break;
            default:
              uint64_t v33 = BYTE6(v7);
              break;
          }
          switch(v129 >> 62)
          {
            case 1uLL:
              LODWORD(v37) = HIDWORD(v124) - v124;
              if (__OFSUB__(HIDWORD(v124), v124)) {
                goto LABEL_167;
              }
              uint64_t v37 = (int)v37;
LABEL_53:
              if (v33 != v37)
              {
LABEL_155:
                uint64_t v8 = v122;
                sub_100037A24(v122, v7);
                goto LABEL_159;
              }
              if (v33 < 1)
              {
LABEL_58:
                uint64_t v8 = v122;
                sub_100037A24(v122, v7);
              }
              else
              {
                uint64_t v102 = v4;
                switch(v7 >> 62)
                {
                  case 1uLL:
                    os_log_type_t v100 = v3;
                    unint64_t v105 = v13;
                    uint64_t v112 = v2;
                    uint64_t v116 = v12;
                    if (v122 >> 32 < (int)v122) {
                      goto LABEL_181;
                    }
                    sub_100037A38(v124, v129);
                    sub_100037A38(v122, v7);
                    sub_100037A38(v124, v129);
                    uint64_t v43 = __DataStorage._bytes.getter();
                    if (!v43) {
                      goto LABEL_63;
                    }
                    uint64_t v44 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v122, v44)) {
                      goto LABEL_187;
                    }
                    v43 += (int)v122 - v44;
LABEL_63:
                    __DataStorage._length.getter();
                    sub_100DC89E8(v43, v124, v129, (char *)__s1);
                    sub_100037A24(v124, v129);
                    uint64_t v45 = v122;
                    sub_100037A24(v122, v7);
                    sub_100037A24(v124, v129);
                    char v46 = __s1[0];
                    sub_100037A24(v122, v7);
                    break;
                  case 2uLL:
                    os_log_type_t v100 = v3;
                    unint64_t v105 = v13;
                    uint64_t v112 = v2;
                    uint64_t v116 = v12;
                    uint64_t v47 = *(void *)(v122 + 16);
                    uint64_t v48 = *(void *)(v122 + 24);
                    sub_100037A38(v124, v129);
                    sub_100037A38(v124, v129);
                    swift_retain();
                    swift_retain();
                    uint64_t v49 = __DataStorage._bytes.getter();
                    if (!v49) {
                      goto LABEL_67;
                    }
                    uint64_t v50 = __DataStorage._offset.getter();
                    if (__OFSUB__(v47, v50)) {
                      goto LABEL_188;
                    }
                    v49 += v47 - v50;
LABEL_67:
                    if (__OFSUB__(v48, v47)) {
                      goto LABEL_182;
                    }
                    __DataStorage._length.getter();
                    sub_100DC89E8(v49, v124, v129, (char *)__s1);
                    sub_100037A24(v124, v129);
                    swift_release();
                    uint64_t v45 = v122;
                    swift_release();
                    char v46 = __s1[0];
                    sub_100037A24(v124, v129);
                    sub_100037A24(v122, v7);
                    break;
                  case 3uLL:
                    memset(__s1, 0, 14);
                    uint64_t v40 = v12;
                    uint64_t v41 = v124;
                    unint64_t v42 = v129;
                    sub_100037A38(v124, v129);
                    sub_100037A38(v124, v129);
                    goto LABEL_72;
                  default:
                    __s1[0] = v122;
                    LOWORD(__s1[1]) = v7;
                    BYTE2(__s1[1]) = BYTE2(v7);
                    BYTE3(__s1[1]) = BYTE3(v7);
                    BYTE4(__s1[1]) = BYTE4(v7);
                    BYTE5(__s1[1]) = BYTE5(v7);
                    uint64_t v40 = v12;
                    uint64_t v41 = v124;
                    unint64_t v42 = v129;
                    sub_100037A38(v124, v129);
                    sub_100037A38(v124, v129);
LABEL_72:
                    sub_100DC89E8((uint64_t)__s1, v41, v42, &v130);
                    uint64_t v8 = v122;
                    sub_100037A24(v41, v42);
                    uint64_t v51 = v41;
                    uint64_t v12 = v40;
                    sub_100037A24(v51, v42);
                    sub_100037A24(v122, v7);
                    uint64_t v4 = v102;
                    if (v130) {
                      goto LABEL_73;
                    }
                    goto LABEL_159;
                }
                uint64_t v8 = v45;
                uint64_t v2 = v112;
                uint64_t v12 = v116;
                unint64_t v13 = v105;
                uint64_t v3 = v100;
                if ((v46 & 1) == 0) {
                  goto LABEL_159;
                }
              }
LABEL_73:
              uint64_t v9 = v123;
              break;
            case 2uLL:
              uint64_t v39 = *(void *)(v124 + 16);
              uint64_t v38 = *(void *)(v124 + 24);
              BOOL v17 = __OFSUB__(v38, v39);
              uint64_t v37 = v38 - v39;
              if (!v17) {
                goto LABEL_53;
              }
              goto LABEL_168;
            case 3uLL:
              if (!v33) {
                goto LABEL_58;
              }
              goto LABEL_155;
            default:
              uint64_t v37 = BYTE6(v129);
              goto LABEL_53;
          }
        }
        if (v10 >> 60 == 15)
        {
          if (v13 >> 60 != 15) {
            goto LABEL_152;
          }
LABEL_110:
          if (v11 >> 60 == 15)
          {
            if (v128 >> 60 != 15) {
              goto LABEL_153;
            }
            goto LABEL_132;
          }
          if (v128 >> 60 == 15)
          {
LABEL_153:
            sub_100037A38(v126, v11);
            uint64_t v92 = v121;
            unint64_t v93 = v128;
            sub_100037A38(v121, v128);
            uint64_t v94 = v126;
            unint64_t v95 = v11;
            goto LABEL_154;
          }
          uint64_t v73 = 0;
          switch(v11 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v126), v126)) {
                goto LABEL_175;
              }
              uint64_t v73 = HIDWORD(v126) - (int)v126;
LABEL_119:
              sub_100037A38(v126, v11);
              break;
            case 2uLL:
              uint64_t v75 = *(void *)(v126 + 16);
              uint64_t v74 = *(void *)(v126 + 24);
              uint64_t v73 = v74 - v75;
              if (!__OFSUB__(v74, v75)) {
                goto LABEL_119;
              }
              goto LABEL_176;
            case 3uLL:
              break;
            default:
              uint64_t v73 = BYTE6(v11);
              break;
          }
          switch(v128 >> 62)
          {
            case 1uLL:
              LODWORD(v76) = HIDWORD(v121) - v121;
              if (__OFSUB__(HIDWORD(v121), v121)) {
                goto LABEL_177;
              }
              uint64_t v76 = (int)v76;
LABEL_125:
              if (v73 != v76)
              {
LABEL_157:
                uint64_t v96 = v126;
                unint64_t v97 = v11;
                goto LABEL_158;
              }
              if (v73 >= 1)
              {
                uint64_t v117 = v12;
                switch(v11 >> 62)
                {
                  case 1uLL:
                    unint64_t v107 = v13;
                    if (v126 >> 32 < (int)v126) {
                      goto LABEL_185;
                    }
                    sub_100037A38(v121, v128);
                    unint64_t v110 = v11;
                    sub_100037A38(v126, v11);
                    sub_100037A38(v121, v128);
                    uint64_t v81 = __DataStorage._bytes.getter();
                    if (v81)
                    {
                      uint64_t v82 = __DataStorage._offset.getter();
                      unint64_t v83 = v10;
                      if (__OFSUB__((int)v126, v82)) {
                        goto LABEL_191;
                      }
                      v81 += (int)v126 - v82;
                      uint64_t v84 = v126;
                    }
                    else
                    {
                      uint64_t v84 = v126;
                      unint64_t v83 = v10;
                    }
                    __DataStorage._length.getter();
                    sub_100DC89E8(v81, v121, v128, (char *)__s1);
                    sub_100037A24(v121, v128);
                    unint64_t v90 = v110;
                    sub_100037A24(v84, v110);
                    sub_100037A24(v121, v128);
                    char v89 = __s1[0];
                    sub_100037A24(v84, v110);
                    sub_10001CFB8(v125, v127);
                    sub_100037A24(v124, v129);
                    sub_100037A24(v117, v107);
                    sub_100037A24(v121, v128);
                    sub_10001CFB8(v120, v119);
                    sub_100037A24(v122, v7);
                    sub_100037A24(v123, v83);
                    uint64_t v91 = v84;
LABEL_148:
                    sub_100037A24(v91, v90);
                    if ((v89 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_133;
                  case 2uLL:
                    unint64_t v108 = v13;
                    uint64_t v85 = *(void *)(v126 + 16);
                    uint64_t v86 = *(void *)(v126 + 24);
                    sub_100037A38(v121, v128);
                    sub_100037A38(v121, v128);
                    swift_retain();
                    swift_retain();
                    uint64_t v87 = __DataStorage._bytes.getter();
                    if (!v87) {
                      goto LABEL_142;
                    }
                    uint64_t v88 = __DataStorage._offset.getter();
                    if (__OFSUB__(v85, v88)) {
                      goto LABEL_192;
                    }
                    v87 += v85 - v88;
LABEL_142:
                    if (__OFSUB__(v86, v85)) {
                      goto LABEL_186;
                    }
                    __DataStorage._length.getter();
                    sub_100DC89E8(v87, v121, v128, (char *)__s1);
                    sub_100037A24(v121, v128);
                    swift_release();
                    swift_release();
                    char v89 = __s1[0];
                    sub_100037A24(v121, v128);
                    unint64_t v90 = v11;
                    sub_100037A24(v126, v11);
                    sub_10001CFB8(v125, v127);
                    sub_100037A24(v124, v129);
                    sub_100037A24(v117, v108);
                    sub_100037A24(v121, v128);
                    sub_10001CFB8(v120, v119);
                    sub_100037A24(v122, v7);
                    sub_100037A24(v123, v10);
                    uint64_t v91 = v126;
                    goto LABEL_148;
                  case 3uLL:
                    memset(__s1, 0, 14);
                    sub_100037A38(v121, v128);
                    sub_100037A38(v121, v128);
                    sub_100DC89E8((uint64_t)__s1, v121, v128, &v130);
                    sub_100037A24(v121, v128);
                    sub_100037A24(v121, v128);
                    sub_100037A24(v126, v11);
                    char v114 = v130;
                    sub_10001CFB8(v125, v127);
                    sub_100037A24(v124, v129);
                    sub_100037A24(v12, v13);
                    sub_100037A24(v121, v128);
                    sub_10001CFB8(v120, v119);
                    sub_100037A24(v122, v7);
                    sub_100037A24(v123, v10);
                    sub_100037A24(v126, v11);
                    if ((v114 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_133;
                  default:
                    __s1[0] = v126;
                    LOWORD(__s1[1]) = v11;
                    BYTE2(__s1[1]) = BYTE2(v11);
                    BYTE3(__s1[1]) = BYTE3(v11);
                    BYTE4(__s1[1]) = BYTE4(v11);
                    BYTE5(__s1[1]) = BYTE5(v11);
                    sub_100037A38(v121, v128);
                    sub_100037A38(v121, v128);
                    sub_100DC89E8((uint64_t)__s1, v121, v128, &v130);
                    sub_100037A24(v121, v128);
                    sub_100037A24(v121, v128);
                    sub_100037A24(v126, v11);
                    char v79 = v130;
                    sub_10001CFB8(v125, v127);
                    sub_100037A24(v124, v129);
                    sub_100037A24(v12, v13);
                    sub_100037A24(v121, v128);
                    sub_10001CFB8(v120, v119);
                    sub_100037A24(v122, v7);
                    sub_100037A24(v123, v10);
                    sub_100037A24(v126, v11);
                    if ((v79 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_133;
                }
              }
LABEL_131:
              sub_100037A24(v126, v11);
              uint64_t v8 = v122;
              uint64_t v9 = v123;
              break;
            case 2uLL:
              uint64_t v78 = *(void *)(v121 + 16);
              uint64_t v77 = *(void *)(v121 + 24);
              BOOL v17 = __OFSUB__(v77, v78);
              uint64_t v76 = v77 - v78;
              if (!v17) {
                goto LABEL_125;
              }
              goto LABEL_178;
            case 3uLL:
              if (!v73) {
                goto LABEL_131;
              }
              goto LABEL_157;
            default:
              uint64_t v76 = BYTE6(v128);
              goto LABEL_125;
          }
LABEL_132:
          sub_10001CFB8(v125, v127);
          sub_100037A24(v124, v129);
          sub_100037A24(v12, v13);
          sub_100037A24(v121, v128);
          sub_10001CFB8(v120, v119);
          sub_100037A24(v8, v7);
          sub_100037A24(v9, v10);
          sub_100037A24(v126, v11);
LABEL_133:
          uint64_t result = 1;
          if (!--v2) {
            return result;
          }
          continue;
        }
        if (v13 >> 60 == 15)
        {
LABEL_152:
          sub_100037A38(v9, v10);
          sub_100037A38(v12, v13);
          sub_100037A24(v9, v10);
          sub_100037A24(v12, v13);
          goto LABEL_159;
        }
        uint64_t v52 = 0;
        switch(v10 >> 62)
        {
          case 1uLL:
            uint64_t v53 = v123;
            if (__OFSUB__(HIDWORD(v123), v123)) {
              goto LABEL_171;
            }
            uint64_t v52 = HIDWORD(v123) - (int)v123;
LABEL_83:
            sub_100037A38(v53, v10);
            break;
          case 2uLL:
            uint64_t v53 = v123;
            uint64_t v55 = *(void *)(v123 + 16);
            uint64_t v54 = *(void *)(v123 + 24);
            uint64_t v52 = v54 - v55;
            if (!__OFSUB__(v54, v55)) {
              goto LABEL_83;
            }
            goto LABEL_172;
          case 3uLL:
            break;
          default:
            uint64_t v52 = BYTE6(v10);
            break;
        }
        switch(v13 >> 62)
        {
          case 1uLL:
            LODWORD(v56) = HIDWORD(v12) - v12;
            if (__OFSUB__(HIDWORD(v12), v12)) {
              goto LABEL_173;
            }
            uint64_t v56 = (int)v56;
LABEL_89:
            if (v52 == v56)
            {
              if (v52 < 1)
              {
LABEL_94:
                uint64_t v9 = v123;
                sub_100037A24(v123, v10);
                uint64_t v8 = v122;
              }
              else
              {
                switch(v10 >> 62)
                {
                  case 1uLL:
                    unint64_t v106 = v13;
                    if (v123 >> 32 < (int)v123) {
                      goto LABEL_183;
                    }
                    sub_100037A38(v12, v13);
                    sub_100037A38(v123, v10);
                    sub_100037A38(v12, v13);
                    uint64_t v60 = __DataStorage._bytes.getter();
                    if (!v60) {
                      goto LABEL_108;
                    }
                    uint64_t v61 = __DataStorage._offset.getter();
                    if (__OFSUB__((int)v123, v61)) {
                      goto LABEL_189;
                    }
                    v60 += (int)v123 - v61;
LABEL_108:
                    __DataStorage._length.getter();
                    uint64_t v71 = v60;
                    unint64_t v13 = v106;
                    sub_100DC89E8(v71, v12, v106, (char *)__s1);
                    sub_100037A24(v12, v106);
                    sub_100037A24(v123, v10);
                    sub_100037A24(v12, v106);
                    char v72 = __s1[0];
                    sub_100037A24(v123, v10);
                    uint64_t v8 = v122;
                    if (v72) {
                      goto LABEL_109;
                    }
                    goto LABEL_159;
                  case 2uLL:
                    uint64_t v101 = v3;
                    unint64_t v109 = v11;
                    uint64_t v113 = v2;
                    unint64_t v62 = v13;
                    uint64_t v63 = v12;
                    uint64_t v64 = *(void *)(v123 + 16);
                    uint64_t v65 = *(void *)(v123 + 24);
                    sub_100037A38(v63, v62);
                    uint64_t v66 = v63;
                    unint64_t v67 = v62;
                    sub_100037A38(v63, v62);
                    swift_retain();
                    swift_retain();
                    uint64_t v68 = __DataStorage._bytes.getter();
                    if (!v68) {
                      goto LABEL_102;
                    }
                    uint64_t v69 = __DataStorage._offset.getter();
                    if (__OFSUB__(v64, v69)) {
                      goto LABEL_190;
                    }
                    v68 += v64 - v69;
LABEL_102:
                    uint64_t v3 = v101;
                    if (__OFSUB__(v65, v64)) {
                      goto LABEL_184;
                    }
                    __DataStorage._length.getter();
                    uint64_t v12 = v66;
                    sub_100DC89E8(v68, v66, v67, (char *)__s1);
                    sub_100037A24(v66, v67);
                    swift_release();
                    swift_release();
                    char v70 = __s1[0];
                    sub_100037A24(v66, v67);
                    unint64_t v13 = v67;
                    sub_100037A24(v123, v10);
                    unint64_t v11 = v109;
                    uint64_t v2 = v113;
                    uint64_t v8 = v122;
                    if ((v70 & 1) == 0) {
                      goto LABEL_159;
                    }
LABEL_109:
                    uint64_t v9 = v123;
                    break;
                  case 3uLL:
                    memset(__s1, 0, 14);
                    sub_100037A38(v12, v13);
                    sub_100037A38(v12, v13);
                    sub_100DC89E8((uint64_t)__s1, v12, v13, &v130);
                    sub_100037A24(v12, v13);
                    sub_100037A24(v12, v13);
                    uint64_t v59 = v123;
                    goto LABEL_106;
                  default:
                    __s1[0] = v123;
                    LOWORD(__s1[1]) = v10;
                    BYTE2(__s1[1]) = BYTE2(v10);
                    BYTE3(__s1[1]) = BYTE3(v10);
                    BYTE4(__s1[1]) = BYTE4(v10);
                    BYTE5(__s1[1]) = BYTE5(v10);
                    sub_100037A38(v12, v13);
                    sub_100037A38(v12, v13);
                    sub_100DC89E8((uint64_t)__s1, v12, v13, &v130);
                    sub_100037A24(v12, v13);
                    sub_100037A24(v12, v13);
                    uint64_t v59 = v123;
LABEL_106:
                    sub_100037A24(v59, v10);
                    uint64_t v8 = v122;
                    if ((v130 & 1) == 0) {
                      goto LABEL_159;
                    }
                    goto LABEL_109;
                }
              }
              goto LABEL_110;
            }
LABEL_156:
            uint64_t v96 = v123;
            unint64_t v97 = v10;
LABEL_158:
            sub_100037A24(v96, v97);
            uint64_t v8 = v122;
LABEL_159:
            sub_10001CFB8(v125, v127);
            sub_100037A24(v124, v129);
            sub_100037A24(v12, v13);
            sub_100037A24(v121, v128);
            sub_10001CFB8(v120, v119);
            sub_100037A24(v8, v7);
            sub_100037A24(v123, v10);
            sub_100037A24(v126, v11);
            return 0;
          case 2uLL:
            uint64_t v58 = *(void *)(v12 + 16);
            uint64_t v57 = *(void *)(v12 + 24);
            BOOL v17 = __OFSUB__(v57, v58);
            uint64_t v56 = v57 - v58;
            if (!v17) {
              goto LABEL_89;
            }
            goto LABEL_174;
          case 3uLL:
            if (!v52) {
              goto LABEL_94;
            }
            goto LABEL_156;
          default:
            uint64_t v56 = BYTE6(v13);
            goto LABEL_89;
        }
      case 2uLL:
        uint64_t v20 = *(void *)(v125 + 16);
        uint64_t v19 = *(void *)(v125 + 24);
        BOOL v17 = __OFSUB__(v19, v20);
        uint64_t v18 = v19 - v20;
        if (!v17) {
          goto LABEL_16;
        }
        goto LABEL_164;
      case 3uLL:
        if (!v14) {
          goto LABEL_21;
        }
        return 0;
      default:
        uint64_t v18 = BYTE6(v127);
        goto LABEL_16;
    }
  }
}

uint64_t sub_100338690(uint64_t a1, uint64_t a2)
{
  return sub_1003386D0(a1, a2, (uint64_t (*)(void))type metadata accessor for DefaultConfigurationLayer, (uint64_t (*)(void))type metadata accessor for DefaultConfigurationLayer, (uint64_t (*)(char *, char *))sub_10093C32C);
}

uint64_t sub_1003386D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_100339EC0(a1 + v17, (uint64_t)v15, a4);
        sub_100339EC0(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_100339F28((uint64_t)v12, a4);
        sub_100339F28((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_100338858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v27 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v22 = 1;
    }
    else
    {
      unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v30 = v7;
      unint64_t v31 = v13;
      uint64_t v14 = *(void *)(v12 + 56);
      uint64_t v32 = v12;
      uint64_t v28 = v14;
      uint64_t v29 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v15 = v10 - 1;
      uint64_t v16 = v7;
      do
      {
        uint64_t v17 = a1;
        uint64_t v18 = v9;
        uint64_t v19 = v9;
        char v20 = v31;
        v31(v18, a1 + v11, v4);
        uint64_t v21 = a2;
        v20(v16, a2 + v11, v4);
        uint64_t v9 = v19;
        sub_100339E68();
        char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v23 = *v29;
        (*v29)(v16, v4);
        v23(v19, v4);
        BOOL v25 = v15-- != 0;
        if ((v22 & 1) == 0) {
          break;
        }
        v11 += v28;
        a2 = v21;
        a1 = v17;
      }
      while (v25);
    }
  }
  else
  {
    char v22 = 0;
  }
  return v22 & 1;
}

id MacBeaconConfig.xpcObject()()
{
  uint64_t v1 = *((void *)v0 + 6);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_100339554((uint64_t)v0);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v3 = (uint64_t *)(v1 + 32);
    do
    {
      uint64_t v4 = *v3++;
      [objc_allocWithZone((Class)NSNumber) initWithInteger:v4];
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v2;
    }
    while (v2);
    sub_100339580((uint64_t)v0);
  }
  double v5 = *v0;
  double v6 = v0[1];
  double v7 = v0[2];
  double v8 = v0[3];
  double v9 = v0[4];
  double v10 = v0[5];
  id v11 = objc_allocWithZone((Class)SPMacBeaconConfig);
  sub_1003395AC();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithInitialNoBeaconDuration:isa fastRollAdvertisementDuration:v5 fastRollAdvertisementInterval:v6 slowRollAdvertisementDuration:v7 slowRollNoAdvertisementDuration:v8 noAdvertisementDurationDecayFactor:v9 postInitialDayAdvertisementTimes:v10];

  return v13;
}

uint64_t sub_100338BB0(void *a1)
{
  return MacBeaconConfig.encode(to:)(a1);
}

BOOL sub_100338BC8(uint64_t a1, uint64_t a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 32) == *(double *)(a2 + 32)&& *(double *)(a1 + 40) == *(double *)(a2 + 40)&& sub_100336C24(*(void **)(a1 + 48), *(void **)(a2 + 48));
}

uint64_t _s12searchpartyd19AllMacBeaconConfigsV23__derived_struct_equalsySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    if (sub_100336C24(*(void **)(a1 + 48), *(void **)(a2 + 48)))
    {
      double v5 = *(void **)(a1 + 104);
      double v6 = *(void **)(a2 + 104);
      if (v5)
      {
        if (v6
          && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 56), *(float64x2_t *)(a2 + 56)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 72), *(float64x2_t *)(a2 + 72)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 88) == *(double *)(a2 + 88)&& *(double *)(a1 + 96) == *(double *)(a2 + 96)&& sub_100336C24(v5, v6))
        {
          return 1;
        }
      }
      else if (!v6)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_100338D38()
{
  unint64_t result = qword_1016419A0;
  if (!qword_1016419A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419A0);
  }
  return result;
}

unint64_t sub_100338D8C()
{
  unint64_t result = qword_1016419A8;
  if (!qword_1016419A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419A8);
  }
  return result;
}

uint64_t sub_100338DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101641990);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100338E48(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x61426C616D726F6ELL && a2 == 0xED00007972657474;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574746142776F6CLL && a2 == 0xEA00000000007972)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100338F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_101641A08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100338D38();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  char v25 = 0;
  sub_100339FEC();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  long long v9 = v20;
  long long v10 = v21;
  uint64_t v11 = v22;
  uint64_t v12 = v23;
  uint64_t v13 = v24;
  char v25 = 1;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v18 = v21;
  long long v19 = v20;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  uint64_t v16 = v24;
  swift_bridgeObjectRetain();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v9;
  *(_OWORD *)(a2 + 16) = v10;
  *(void *)(a2 + 32) = v11;
  *(void *)(a2 + 40) = v12;
  *(void *)(a2 + 48) = v13;
  *(_OWORD *)(a2 + 56) = v19;
  *(_OWORD *)(a2 + 72) = v18;
  *(void *)(a2 + 88) = v14;
  *(void *)(a2 + 96) = v15;
  *(void *)(a2 + 104) = v16;
  return result;
}

unint64_t sub_1003391D8(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A1028, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_100339224@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_1016419F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100339500();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  char v30 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v10 = v9;
  char v29 = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v12 = v11;
  char v28 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v14 = v13;
  char v27 = 3;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v16 = v15;
  char v26 = 4;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v18 = v17;
  char v25 = 5;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v19;
  sub_10000588C(&qword_10163AB88);
  char v24 = 6;
  sub_100339F88(&qword_101641A00);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v21 = v23[1];
  uint64_t result = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  *a2 = v10;
  a2[1] = v12;
  a2[2] = v14;
  a2[3] = v16;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v21;
  return result;
}

unint64_t sub_100339500()
{
  unint64_t result = qword_1016419B8;
  if (!qword_1016419B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419B8);
  }
  return result;
}

uint64_t sub_100339554(uint64_t a1)
{
  return a1;
}

uint64_t sub_100339580(uint64_t a1)
{
  return a1;
}

unint64_t sub_1003395AC()
{
  unint64_t result = qword_10164DC40;
  if (!qword_10164DC40)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10164DC40);
  }
  return result;
}

uint64_t destroy for AllMacBeaconConfigs()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AllMacBeaconConfigs(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AllMacBeaconConfigs(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for AllMacBeaconConfigs(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for AllMacBeaconConfigs(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllMacBeaconConfigs(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllMacBeaconConfigs(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllMacBeaconConfigs()
{
  return &type metadata for AllMacBeaconConfigs;
}

uint64_t destroy for MacBeaconConfig()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MacBeaconConfig(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MacBeaconConfig(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MacBeaconConfig(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for MacBeaconConfig(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MacBeaconConfig(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MacBeaconConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MacBeaconConfig()
{
  return &type metadata for MacBeaconConfig;
}

unsigned char *storeEnumTagSinglePayload for MacBeaconConfig.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100339B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MacBeaconConfig.CodingKeys()
{
  return &type metadata for MacBeaconConfig.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AllMacBeaconConfigs.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100339C20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AllMacBeaconConfigs.CodingKeys()
{
  return &type metadata for AllMacBeaconConfigs.CodingKeys;
}

unint64_t sub_100339C5C()
{
  unint64_t result = qword_1016419C8;
  if (!qword_1016419C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419C8);
  }
  return result;
}

unint64_t sub_100339CB4()
{
  unint64_t result = qword_1016419D0;
  if (!qword_1016419D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419D0);
  }
  return result;
}

unint64_t sub_100339D0C()
{
  unint64_t result = qword_1016419D8;
  if (!qword_1016419D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419D8);
  }
  return result;
}

unint64_t sub_100339D64()
{
  unint64_t result = qword_1016419E0;
  if (!qword_1016419E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419E0);
  }
  return result;
}

unint64_t sub_100339DBC()
{
  unint64_t result = qword_1016419E8;
  if (!qword_1016419E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419E8);
  }
  return result;
}

unint64_t sub_100339E14()
{
  unint64_t result = qword_1016419F0;
  if (!qword_1016419F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016419F0);
  }
  return result;
}

unint64_t sub_100339E68()
{
  unint64_t result = qword_10163B8F0;
  if (!qword_10163B8F0)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10163B8F0);
  }
  return result;
}

uint64_t sub_100339EC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100339F28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100339F88(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(&qword_10163AB88);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100339FEC()
{
  unint64_t result = qword_101641A10;
  if (!qword_101641A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A10);
  }
  return result;
}

unint64_t sub_10033A040@<X0>(uint64_t *a1@<X8>)
{
  sub_10005E7E8(v1, (uint64_t)v72);
  sub_10005E7E8((uint64_t)v72, (uint64_t)v74);
  sub_10005E7E8(v1, (uint64_t)v73);
  switch(sub_10005EF04((uint64_t)v73))
  {
    case 1u:
      uint64_t v11 = sub_10006242C((uint64_t)v73);
      long long v64 = *(_OWORD *)(v11 + 16);
      long long v68 = *(_OWORD *)v11;
      long long v59 = *(_OWORD *)(v11 + 48);
      long long v61 = *(_OWORD *)(v11 + 32);
      uint64_t v12 = *(void *)(v11 + 64);
      uint64_t v13 = *(void *)(v11 + 72);
      a1[3] = (uint64_t)&type metadata for AirPodsLEInitiatePairingCommandPayload;
      a1[4] = sub_100062448();
      uint64_t v14 = swift_allocObject();
      *a1 = v14;
      *(_OWORD *)(v14 + 16) = v68;
      *(_OWORD *)(v14 + 32) = v64;
      *(_OWORD *)(v14 + 48) = v61;
      *(_OWORD *)(v14 + 64) = v59;
      *(void *)(v14 + 80) = v12;
      *(void *)(v14 + 88) = v13;
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      uint64_t v15 = (uint64_t *)sub_10006242C((uint64_t)v71);
      uint64_t v16 = v15[2];
      unint64_t v17 = v15[3];
      uint64_t v18 = v15[4];
      unint64_t v19 = v15[5];
      uint64_t v20 = v15[6];
      unint64_t v21 = v15[7];
      uint64_t v22 = v15[8];
      unint64_t v23 = v15[9];
      sub_1000361E0(*v15, v15[1]);
      sub_1000361E0(v16, v17);
      sub_1000361E0(v18, v19);
      sub_1000361E0(v20, v21);
      unint64_t result = sub_1000361E0(v22, v23);
      break;
    case 2u:
      char v24 = (const void *)sub_10006242C((uint64_t)v73);
      a1[3] = (uint64_t)&type metadata for AirPodsSWSendPairingDataCommandPayload;
      a1[4] = sub_100062324();
      uint64_t v25 = swift_allocObject();
      *a1 = v25;
      memmove((void *)(v25 + 16), v24, 0x108uLL);
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      char v26 = (uint64_t *)sub_10006242C((uint64_t)v71);
      unint64_t result = (unint64_t)sub_10033C018(v26, (void (*)(uint64_t, uint64_t))sub_1000361E0);
      break;
    case 3u:
      uint64_t v27 = sub_10006242C((uint64_t)v73);
      long long v65 = *(_OWORD *)(v27 + 16);
      long long v69 = *(_OWORD *)v27;
      long long v60 = *(_OWORD *)(v27 + 48);
      long long v62 = *(_OWORD *)(v27 + 32);
      long long v57 = *(_OWORD *)(v27 + 80);
      long long v58 = *(_OWORD *)(v27 + 64);
      uint64_t v28 = *(void *)(v27 + 96);
      uint64_t v29 = *(void *)(v27 + 104);
      a1[3] = (uint64_t)&type metadata for AirPodsSWFinalizePairingCommandPayload;
      a1[4] = sub_100062268();
      uint64_t v30 = swift_allocObject();
      *a1 = v30;
      *(_OWORD *)(v30 + 16) = v69;
      *(_OWORD *)(v30 + 32) = v65;
      *(_OWORD *)(v30 + 48) = v62;
      *(_OWORD *)(v30 + 64) = v60;
      *(_OWORD *)(v30 + 80) = v58;
      *(_OWORD *)(v30 + 96) = v57;
      *(void *)(v30 + 112) = v28;
      *(void *)(v30 + 120) = v29;
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      unint64_t v31 = (uint64_t *)sub_10006242C((uint64_t)v71);
      uint64_t v32 = v31[2];
      unint64_t v33 = v31[3];
      uint64_t v34 = v31[4];
      unint64_t v35 = v31[5];
      uint64_t v36 = v31[6];
      unint64_t v37 = v31[7];
      uint64_t v38 = v31[8];
      unint64_t v39 = v31[9];
      uint64_t v40 = v31[10];
      unint64_t v41 = v31[11];
      *(void *)&long long v69 = v31[12];
      *(void *)&long long v65 = v31[13];
      sub_1000361E0(*v31, v31[1]);
      sub_1000361E0(v32, v33);
      sub_1000361E0(v34, v35);
      sub_1000361E0(v36, v37);
      sub_1000361E0(v38, v39);
      sub_1000361E0(v40, v41);
      unint64_t result = sub_1000361E0(v69, v65);
      break;
    case 4u:
      uint64_t v42 = sub_10006242C((uint64_t)v73);
      long long v66 = *(_OWORD *)(v42 + 16);
      long long v70 = *(_OWORD *)v42;
      long long v63 = *(_OWORD *)(v42 + 32);
      uint64_t v43 = *(void *)(v42 + 48);
      uint64_t v44 = *(void *)(v42 + 56);
      a1[3] = (uint64_t)&type metadata for AirPodsSWSendPairingStatusCommandPayload;
      a1[4] = sub_1000621C0();
      uint64_t v45 = swift_allocObject();
      *a1 = v45;
      *(_OWORD *)(v45 + 16) = v70;
      *(_OWORD *)(v45 + 32) = v66;
      *(_OWORD *)(v45 + 48) = v63;
      *(void *)(v45 + 64) = v43;
      *(void *)(v45 + 72) = v44;
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      char v46 = (uint64_t *)sub_10006242C((uint64_t)v71);
      uint64_t v47 = v46[2];
      unint64_t v48 = v46[3];
      uint64_t v49 = v46[4];
      unint64_t v50 = v46[5];
      uint64_t v51 = v46[6];
      unint64_t v52 = v46[7];
      sub_1000361E0(*v46, v46[1]);
      sub_1000361E0(v47, v48);
      sub_1000361E0(v49, v50);
      unint64_t result = sub_1000361E0(v51, v52);
      break;
    case 5u:
      uint64_t v53 = (uint64_t *)sub_10006242C((uint64_t)v73);
      uint64_t v54 = *v53;
      uint64_t v55 = v53[1];
      a1[3] = (uint64_t)&type metadata for AirPodsSWPairingCompleteCommandPayload;
      a1[4] = sub_10006216C();
      *a1 = v54;
      a1[1] = v55;
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      uint64_t v56 = sub_10006242C((uint64_t)v71);
      unint64_t result = sub_1000361E0(*(void *)v56, *(void *)(v56 + 8));
      break;
    case 6u:
      a1[3] = (uint64_t)&type metadata for AccessoryGenericPayload;
      unint64_t result = sub_10006258C();
      goto LABEL_10;
    case 7u:
      a1[3] = (uint64_t)&type metadata for UnpairCommandPayload;
      unint64_t result = sub_100062118();
LABEL_10:
      a1[4] = result;
      break;
    default:
      uint64_t v3 = sub_10006242C((uint64_t)v73);
      long long v67 = *(_OWORD *)v3;
      uint64_t v4 = *(void *)(v3 + 16);
      uint64_t v5 = *(void *)(v3 + 24);
      a1[3] = (uint64_t)&type metadata for AirPodsSendBeaconGroupDataCommandPayload;
      a1[4] = sub_1000624F4();
      uint64_t v6 = swift_allocObject();
      *a1 = v6;
      *(_OWORD *)(v6 + 16) = v67;
      *(void *)(v6 + 32) = v4;
      *(void *)(v6 + 40) = v5;
      sub_10005E7E8((uint64_t)v74, (uint64_t)v71);
      uint64_t v7 = (uint64_t *)sub_10006242C((uint64_t)v71);
      uint64_t v8 = v7[2];
      unint64_t v9 = v7[3];
      sub_1000361E0(*v7, v7[1]);
      unint64_t result = sub_1000361E0(v8, v9);
      break;
  }
  return result;
}

uint64_t sub_10033A500()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  sub_10001CFB8(*(void *)(v0 + 64), *(void *)(v0 + 72));

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10033A550()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  sub_10001CFB8(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10001CFB8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_10001CFB8(*(void *)(v0 + 112), *(void *)(v0 + 120));

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_10033A5B8()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  sub_10001CFB8(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));
  sub_10001CFB8(*(void *)(v0 + 96), *(void *)(v0 + 104));
  sub_10001CFB8(*(void *)(v0 + 112), *(void *)(v0 + 120));
  sub_10001CFB8(*(void *)(v0 + 128), *(void *)(v0 + 136));
  sub_10001CFB8(*(void *)(v0 + 144), *(void *)(v0 + 152));
  sub_10001CFB8(*(void *)(v0 + 160), *(void *)(v0 + 168));
  sub_10001CFB8(*(void *)(v0 + 176), *(void *)(v0 + 184));
  sub_10001CFB8(*(void *)(v0 + 192), *(void *)(v0 + 200));
  sub_10001CFB8(*(void *)(v0 + 208), *(void *)(v0 + 216));
  sub_10001CFB8(*(void *)(v0 + 232), *(void *)(v0 + 240));
  sub_10001CFB8(*(void *)(v0 + 248), *(void *)(v0 + 256));
  sub_10001CFB8(*(void *)(v0 + 264), *(void *)(v0 + 272));

  return _swift_deallocObject(v0, 280, 7);
}

uint64_t sub_10033A668()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));
  sub_10001CFB8(*(void *)(v0 + 48), *(void *)(v0 + 56));
  sub_10001CFB8(*(void *)(v0 + 64), *(void *)(v0 + 72));
  sub_10001CFB8(*(void *)(v0 + 80), *(void *)(v0 + 88));

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_10033A6C0()
{
  sub_10001CFB8(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_10001CFB8(*(void *)(v0 + 32), *(void *)(v0 + 40));

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t destroy for AirPodsSWPairingCommand(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  return sub_10033A77C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(void *)(a1 + 208),
           *(void *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           *(void *)(a1 + 256),
           (void (*)(void))sub_10001CFB8);
}

uint64_t sub_10033A77C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,unint64_t a33,void (*a34)(void))
{
  uint64_t v40 = (uint64_t (*)(void))a34;
  switch((a33 >> 59) & 6 | ((a31 & 0x2000000000000000) != 0))
  {
    case 0uLL:
      uint64_t v42 = a34;
      a34();
      goto LABEL_7;
    case 1uLL:
      uint64_t v42 = a34;
      a34();
      ((void (*)(uint64_t, uint64_t))a34)(a3, a4);
      ((void (*)(uint64_t, uint64_t))a34)(a5, a6);
      ((void (*)(uint64_t, uint64_t))a34)(a7, a8);
      goto LABEL_7;
    case 2uLL:
      uint64_t v42 = a34;
      a34();
      ((void (*)(uint64_t, uint64_t))a34)(a3, a4);
      ((void (*)(uint64_t, uint64_t))a34)(a5, a6);
      ((void (*)(uint64_t, uint64_t))a34)(a7, a8);
      ((void (*)(uint64_t, uint64_t))a34)(a9, a10);
      ((void (*)(uint64_t, uint64_t))a34)(a11, a12);
      ((void (*)(uint64_t, uint64_t))a34)(a13, a14);
      ((void (*)(uint64_t, uint64_t))a34)(a15, a16);
      ((void (*)(uint64_t, uint64_t))a34)(a17, a18);
      ((void (*)(uint64_t, uint64_t))a34)(a19, a20);
      ((void (*)(uint64_t, uint64_t))a34)(a21, a22);
      ((void (*)(uint64_t, uint64_t))a34)(a23, a24);
      ((void (*)(uint64_t, uint64_t))a34)(a25, a26);
      ((void (*)(uint64_t, uint64_t))a34)(a28, a29);
      ((void (*)(uint64_t, unint64_t))a34)(a30, a31 & 0xDFFFFFFFFFFFFFFFLL);
      goto LABEL_7;
    case 3uLL:
      uint64_t v42 = a34;
      a34();
      ((void (*)(uint64_t, uint64_t))a34)(a3, a4);
      ((void (*)(uint64_t, uint64_t))a34)(a5, a6);
      ((void (*)(uint64_t, uint64_t))a34)(a7, a8);
      ((void (*)(uint64_t, uint64_t))a34)(a9, a10);
      ((void (*)(uint64_t, uint64_t))a34)(a11, a12);
      goto LABEL_7;
    case 4uLL:
      uint64_t v42 = a34;
      a34();
      ((void (*)(uint64_t, uint64_t))a34)(a3, a4);
      ((void (*)(uint64_t, uint64_t))a34)(a5, a6);
LABEL_7:
      uint64_t v40 = (uint64_t (*)(void))v42;
      goto LABEL_8;
    case 5uLL:
LABEL_8:
      uint64_t result = v40();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for AirPodsSWPairingCommand(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = a2[7];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  uint64_t v15 = a2[11];
  uint64_t v16 = a2[12];
  uint64_t v17 = a2[13];
  uint64_t v18 = a2[14];
  uint64_t v19 = a2[15];
  uint64_t v20 = a2[16];
  uint64_t v21 = a2[17];
  uint64_t v22 = a2[18];
  uint64_t v23 = a2[19];
  uint64_t v24 = a2[20];
  uint64_t v25 = a2[21];
  uint64_t v26 = a2[22];
  uint64_t v27 = a2[23];
  uint64_t v28 = a2[24];
  uint64_t v29 = a2[25];
  uint64_t v30 = a2[26];
  uint64_t v31 = a2[27];
  uint64_t v32 = a2[28];
  uint64_t v33 = a2[29];
  uint64_t v34 = a2[30];
  uint64_t v35 = a2[31];
  unint64_t v36 = a2[32];
  uint64_t v4 = a2[8];
  uint64_t v6 = a2[1];
  uint64_t v5 = *a2;
  uint64_t v8 = a2[3];
  uint64_t v7 = a2[2];
  uint64_t v10 = a2[5];
  uint64_t v9 = a2[4];
  uint64_t v11 = a2[6];
  sub_10033A77C(*a2, v6, v7, v8, v9, v10, v11, v3, v4, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    (void (*)(void))sub_1000361E0);
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v7;
  a1[3] = v8;
  a1[4] = v9;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v3;
  a1[8] = v4;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  a1[24] = v28;
  a1[25] = v29;
  a1[26] = v30;
  a1[27] = v31;
  a1[28] = v32;
  a1[29] = v33;
  a1[30] = v34;
  a1[31] = v35;
  a1[32] = v36;
  return a1;
}

uint64_t assignWithCopy for AirPodsSWPairingCommand(uint64_t a1, uint64_t *a2)
{
  uint64_t v56 = *a2;
  uint64_t v57 = a2[1];
  uint64_t v54 = a2[3];
  uint64_t v55 = a2[2];
  uint64_t v52 = a2[5];
  uint64_t v53 = a2[4];
  uint64_t v51 = a2[6];
  uint64_t v34 = a2[9];
  uint64_t v35 = a2[10];
  uint64_t v36 = a2[11];
  uint64_t v37 = a2[12];
  uint64_t v38 = a2[13];
  uint64_t v39 = a2[14];
  uint64_t v40 = a2[15];
  uint64_t v3 = a2[16];
  uint64_t v4 = a2[17];
  uint64_t v5 = a2[18];
  uint64_t v6 = a2[19];
  uint64_t v7 = a2[20];
  uint64_t v8 = a2[21];
  uint64_t v9 = a2[22];
  uint64_t v41 = a2[23];
  uint64_t v42 = a2[24];
  uint64_t v43 = a2[25];
  uint64_t v44 = a2[26];
  uint64_t v45 = a2[27];
  uint64_t v46 = a2[28];
  uint64_t v47 = a2[29];
  uint64_t v48 = a2[30];
  uint64_t v49 = a2[31];
  unint64_t v50 = a2[32];
  uint64_t v10 = a2[8];
  uint64_t v11 = a2[7];
  sub_10033A77C(*a2, v57, v55, v54, v53, v52, v51, v11, v10, v34, v35, v36, v37, v38, v39, v40, v3, v4, v5,
    v6,
    v7,
    v8,
    v9,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    (void (*)(void))sub_1000361E0);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v56;
  *(void *)(a1 + 8) = v57;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v55;
  *(void *)(a1 + 24) = v54;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v53;
  *(void *)(a1 + 40) = v52;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v51;
  *(void *)(a1 + 56) = v11;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v34;
  *(void *)(a1 + 80) = v35;
  *(void *)(a1 + 88) = v36;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v37;
  *(void *)(a1 + 104) = v38;
  *(void *)(a1 + 112) = v39;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 120) = v40;
  *(void *)(a1 + 128) = v3;
  *(void *)(a1 + 136) = v4;
  *(void *)(a1 + 144) = v5;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 152) = v6;
  *(void *)(a1 + 160) = v7;
  *(void *)(a1 + 168) = v8;
  *(void *)(a1 + 176) = v9;
  *(void *)(a1 + 184) = v41;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v42;
  *(void *)(a1 + 200) = v43;
  *(void *)(a1 + 208) = v44;
  *(void *)(a1 + 216) = v45;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v46;
  *(void *)(a1 + 232) = v47;
  *(void *)(a1 + 240) = v48;
  *(void *)(a1 + 248) = v49;
  unint64_t v32 = *(void *)(a1 + 256);
  *(void *)(a1 + 256) = v50;
  sub_10033A77C(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    (void (*)(void))sub_10001CFB8);
  return a1;
}

uint64_t assignWithTake for AirPodsSWPairingCommand(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 256);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = *(_OWORD *)(a1 + 144);
  long long v19 = *(_OWORD *)(a1 + 160);
  long long v20 = *(_OWORD *)(a1 + 176);
  long long v21 = *(_OWORD *)(a1 + 192);
  long long v22 = *(_OWORD *)(a1 + 208);
  long long v23 = *(_OWORD *)(a1 + 224);
  long long v24 = *(_OWORD *)(a1 + 240);
  unint64_t v25 = *(void *)(a1 + 256);
  long long v26 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v26;
  long long v27 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v27;
  long long v28 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v28;
  long long v29 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v29;
  long long v30 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v30;
  long long v31 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v31;
  long long v32 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v32;
  long long v33 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v33;
  *(void *)(a1 + 256) = v4;
  sub_10033A77C(v5, v6, v7, v8, v9, v10, v11, v12, v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    (void (*)(void))sub_10001CFB8);
  return a1;
}

uint64_t getEnumTagSinglePayload for AirPodsSWPairingCommand(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 264)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 24) >> 58) & 0xC | (*(void *)(a1 + 8) >> 60) & 3 | *(unsigned char *)(a1 + 47) & 0x30 | (*(void *)(a1 + 56) >> 54) & 0xC0 | (*(void *)(a1 + 72) >> 52) & 0x300 | (*(void *)(a1 + 88) >> 50) & 0xC00 | *(_WORD *)(a1 + 110) & 0x3000 | (*(void *)(a1 + 120) >> 46) & 0xC000 | (*(void *)(a1 + 136) >> 44) & 0x30000 | (*(void *)(a1 + 152) >> 42) & 0xC0000 | (*(void *)(a1 + 168) >> 40) & 0x300000 | (*(void *)(a1 + 184) >> 38) & 0xC00000 | (*(void *)(a1 + 200) >> 36) & 0x3000000 | (*(_DWORD *)(a1 + 208) >> 8 << 26);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for AirPodsSWPairingCommand(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 248) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 264) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      unint64_t v4 = -a2;
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = (unint64_t)(-(char)a2 & 3) << 60;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = (v4 << 58) & 0x3000000000000000;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = (v4 << 56) & 0x3000000000000000;
      *(void *)(a1 + 48) = 0;
      *(void *)(a1 + 56) = (v4 << 54) & 0x3000000000000000;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 72) = (v4 << 52) & 0x3000000000000000;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 88) = (v4 << 50) & 0x3000000000000000;
      *(void *)(a1 + 96) = 0;
      *(void *)(a1 + 104) = (v4 << 48) & 0x3000000000000000;
      *(void *)(a1 + 112) = 0;
      *(void *)(a1 + 120) = (v4 << 46) & 0x3000000000000000;
      *(void *)(a1 + 128) = 0;
      *(void *)(a1 + 136) = (v4 << 44) & 0x3000000000000000;
      *(void *)(a1 + 144) = 0;
      *(void *)(a1 + 152) = (v4 << 42) & 0x3000000000000000;
      *(void *)(a1 + 160) = 0;
      *(void *)(a1 + 168) = (v4 << 40) & 0x3000000000000000;
      *(void *)(a1 + 176) = 0;
      *(void *)(a1 + 184) = (v4 << 38) & 0x3000000000000000;
      *(void *)(a1 + 192) = 0;
      *(void *)(a1 + 200) = (v4 << 36) & 0x3000000000000000;
      *(void *)(a1 + 208) = (v4 >> 18) & 0x3F00;
      double result = 0.0;
      *(_OWORD *)(a1 + 248) = 0u;
      *(_OWORD *)(a1 + 232) = 0u;
      *(_OWORD *)(a1 + 216) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 264) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

int8x16_t sub_10033B2DC(uint64_t a1, unsigned int a2)
{
  if (a2 < 6)
  {
    unint64_t v3 = *(void *)(a1 + 24) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v4 = *(void *)(a1 + 40) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v5 = *(void *)(a1 + 56) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v6 = *(void *)(a1 + 72) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v7 = *(void *)(a1 + 88) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v8 = *(void *)(a1 + 104) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v9 = *(void *)(a1 + 120) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v10 = *(void *)(a1 + 136) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v11 = *(void *)(a1 + 152) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v12 = *(void *)(a1 + 168) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v13 = *(void *)(a1 + 184) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v14 = *(void *)(a1 + 224) & 0xCFFFFFFFFFFFFFFFLL;
    unint64_t v15 = *(void *)(a1 + 240) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 1) << 61);
    unint64_t v16 = *(void *)(a1 + 256) & 0xCFFFFFFFFFFFFFFFLL | ((((unint64_t)a2 >> 1) & 3) << 60);
    *(void *)(a1 + 8) &= 0xCFFFFFFFFFFFFFFFLL;
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 40) = v4;
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 72) = v6;
    *(void *)(a1 + 88) = v7;
    *(void *)(a1 + 104) = v8;
    *(void *)(a1 + 120) = v9;
    *(void *)(a1 + 136) = v10;
    *(void *)(a1 + 152) = v11;
    *(void *)(a1 + 168) = v12;
    *(void *)(a1 + 184) = v13;
    int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 200), (int8x16_t)xmmword_101347BD0);
    *(int8x16_t *)(a1 + 200) = result;
    *(void *)(a1 + 224) = v14;
    *(void *)(a1 + 240) = v15;
    *(void *)(a1 + 256) = v16;
  }
  else
  {
    *(void *)a1 = a2 - 6;
    result.i64[0] = 0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(void *)(a1 + 248) = 0;
    *(void *)(a1 + 256) = 0x3000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsSWPairingCommand()
{
  return &type metadata for AirPodsSWPairingCommand;
}

ValueMetadata *sub_10033B41C(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = &type metadata for AirPodsSendBeaconGroupDataCommandPayload;
      sub_1000624F4();
      break;
    case 2:
      uint64_t v1 = &type metadata for AirPodsLEInitiatePairingCommandPayload;
      sub_100062448();
      break;
    case 3:
      uint64_t v1 = &type metadata for AirPodsSWSendPairingDataCommandPayload;
      sub_100062324();
      break;
    case 4:
      uint64_t v1 = &type metadata for AirPodsSWFinalizePairingCommandPayload;
      sub_100062268();
      break;
    case 5:
      uint64_t v1 = &type metadata for AirPodsSWSendPairingStatusCommandPayload;
      sub_1000621C0();
      break;
    case 6:
      uint64_t v1 = &type metadata for AirPodsSWPairingCompleteCommandPayload;
      sub_10006216C();
      break;
    case 7:
      uint64_t v1 = &type metadata for UnpairCommandPayload;
      sub_100062118();
      break;
    default:
      uint64_t v1 = &type metadata for AccessoryGenericPayload;
      sub_10006258C();
      break;
  }
  return v1;
}

uint64_t sub_10033B500(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Endianness();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryEncoding.container()();
  sub_10005E7E8(v3, (uint64_t)v54);
  int v9 = sub_10005EF04((uint64_t)v54);
  __int16 v10 = 516;
  switch(v9)
  {
    case 1:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 256;
      break;
    case 2:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 257;
      break;
    case 3:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 258;
      break;
    case 4:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 259;
      break;
    case 5:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 260;
      break;
    case 6:
      __int16 v10 = 267;
      break;
    case 7:
      break;
    default:
      sub_10006242C((uint64_t)v54);
      __int16 v10 = 268;
      break;
  }
  LOWORD(v48[0]) = v10;
  static Endianness.current.getter();
  sub_100179818();
  FixedWidthInteger.convert(to:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOWORD(v48[0]) = v49[0];
  sub_1000BD078((uint64_t)v51, v52);
  dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
  if (!v2)
  {
    sub_10005E7E8(v3, (uint64_t)v53);
    switch(sub_10005EF04((uint64_t)v53))
    {
      case 1u:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v48);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        uint64_t v17 = v49[0];
        unint64_t v18 = v49[1];
        uint64_t v19 = v49[2];
        uint64_t v20 = v49[3];
        uint64_t v42 = v49[5];
        uint64_t v43 = v49[4];
        unint64_t v44 = v49[7];
        uint64_t v45 = v49[6];
        uint64_t v55 = v49[8];
        uint64_t v46 = v49[9];
        sub_1000BD078((uint64_t)v51, v52);
        sub_10033C1D4();
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        sub_10001CFB8(v17, v18);
        uint64_t v21 = v19;
        unint64_t v22 = v20;
        goto LABEL_19;
      case 2u:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v50);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        memcpy(v48, v49, sizeof(v48));
        memcpy(v47, v49, sizeof(v47));
        sub_1000BD078((uint64_t)v51, v52);
        sub_10033BFC4();
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        sub_10033C018(v48, (void (*)(uint64_t, uint64_t))sub_10001CFB8);
        return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v51);
      case 3u:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v48);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        uint64_t v23 = v49[0];
        unint64_t v24 = v49[1];
        uint64_t v25 = v49[2];
        unint64_t v26 = v49[3];
        unint64_t v38 = v49[5];
        uint64_t v39 = v49[4];
        uint64_t v40 = v49[7];
        uint64_t v41 = v49[6];
        uint64_t v42 = v49[9];
        uint64_t v43 = v49[8];
        unint64_t v44 = v49[11];
        uint64_t v45 = v49[10];
        uint64_t v55 = v49[12];
        uint64_t v46 = v49[13];
        sub_1000BD078((uint64_t)v51, v52);
        sub_10033BF70();
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        sub_10001CFB8(v23, v24);
        sub_10001CFB8(v25, v26);
        sub_10001CFB8(v39, v38);
        unint64_t v22 = v40;
        uint64_t v21 = v41;
LABEL_19:
        sub_10001CFB8(v21, v22);
        unint64_t v28 = v42;
        uint64_t v27 = v43;
        goto LABEL_22;
      case 4u:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v48);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        uint64_t v29 = v49[0];
        unint64_t v30 = v49[1];
        uint64_t v31 = v49[2];
        uint64_t v32 = v49[3];
        unint64_t v44 = v49[5];
        uint64_t v45 = v49[4];
        uint64_t v55 = v49[6];
        uint64_t v46 = v49[7];
        sub_1000BD078((uint64_t)v51, v52);
        sub_10033BF1C();
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        sub_10001CFB8(v29, v30);
        uint64_t v27 = v31;
        unint64_t v28 = v32;
LABEL_22:
        sub_10001CFB8(v27, v28);
        sub_10001CFB8(v45, v44);
        uint64_t v15 = v55;
        unint64_t v16 = v46;
        goto LABEL_25;
      case 5u:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v49);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        uint64_t v33 = v48[0];
        uint64_t v34 = v48[1];
        v49[0] = v48[0];
        v49[1] = v48[1];
        sub_1000BD078((uint64_t)v51, v52);
        sub_10033BEC8();
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        uint64_t v15 = v33;
        unint64_t v16 = v34;
        goto LABEL_25;
      case 6u:
        sub_10033A040(v49);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        sub_1000BD078((uint64_t)v51, v52);
        sub_1002A576C();
        goto LABEL_30;
      case 7u:
        sub_10033A040(v49);
        sub_10000588C(&qword_101639B68);
        if (!swift_dynamicCast()) {
          goto LABEL_31;
        }
        sub_1000BD078((uint64_t)v51, v52);
        sub_1001E2D8C();
LABEL_30:
        dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
        break;
      default:
        sub_10006242C((uint64_t)v53);
        sub_10033A040(v49);
        sub_10000588C(&qword_101639B68);
        if (swift_dynamicCast())
        {
          uint64_t v11 = v48[0];
          unint64_t v12 = v48[1];
          uint64_t v13 = v48[2];
          uint64_t v14 = v48[3];
          v49[0] = v48[0];
          v49[1] = v48[1];
          void v49[2] = v48[2];
          v49[3] = v48[3];
          sub_1000BD078((uint64_t)v51, v52);
          sub_10033C228();
          dispatch thunk of BinaryEncodingContaining.encode<A>(_:)();
          sub_10001CFB8(v11, v12);
          uint64_t v15 = v13;
          unint64_t v16 = v14;
LABEL_25:
          sub_10001CFB8(v15, v16);
        }
        else
        {
LABEL_31:
          sub_10033BE74();
          swift_allocError();
          *uint64_t v35 = 0;
          swift_willThrow();
        }
        break;
    }
  }
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v51);
}

uint64_t sub_10033BDD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10033C7C4(a1, (uint64_t)v5);
  if (!v2) {
    return sub_10005E7E8((uint64_t)v5, a2);
  }
  return result;
}

uint64_t sub_10033BE24(void *a1)
{
  sub_10005E7E8(v1, (uint64_t)v4);
  return sub_10033B500(a1);
}

unint64_t sub_10033BE74()
{
  unint64_t result = qword_101641A18;
  if (!qword_101641A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A18);
  }
  return result;
}

unint64_t sub_10033BEC8()
{
  unint64_t result = qword_101641A20;
  if (!qword_101641A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A20);
  }
  return result;
}

unint64_t sub_10033BF1C()
{
  unint64_t result = qword_101641A28;
  if (!qword_101641A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A28);
  }
  return result;
}

unint64_t sub_10033BF70()
{
  unint64_t result = qword_101641A30;
  if (!qword_101641A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A30);
  }
  return result;
}

unint64_t sub_10033BFC4()
{
  unint64_t result = qword_101641A38;
  if (!qword_101641A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A38);
  }
  return result;
}

uint64_t *sub_10033C018(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v6 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v13 = a1[11];
  uint64_t v14 = a1[10];
  uint64_t v15 = a1[13];
  uint64_t v16 = a1[12];
  uint64_t v17 = a1[15];
  uint64_t v18 = a1[14];
  uint64_t v19 = a1[17];
  uint64_t v20 = a1[16];
  uint64_t v21 = a1[19];
  uint64_t v22 = a1[18];
  uint64_t v23 = a1[21];
  uint64_t v24 = a1[20];
  uint64_t v25 = a1[23];
  uint64_t v26 = a1[22];
  uint64_t v27 = a1[25];
  uint64_t v28 = a1[24];
  uint64_t v30 = a1[27];
  uint64_t v29 = a1[28];
  uint64_t v31 = a1[30];
  uint64_t v32 = a1[29];
  uint64_t v33 = a1[32];
  uint64_t v34 = a1[31];
  a2(*a1, a1[1]);
  a2(v4, v6);
  a2(v5, v7);
  a2(v8, v9);
  a2(v10, v11);
  a2(v14, v13);
  a2(v16, v15);
  a2(v18, v17);
  a2(v20, v19);
  a2(v22, v21);
  a2(v24, v23);
  a2(v26, v25);
  a2(v28, v27);
  a2(v30, v29);
  a2(v32, v31);
  a2(v34, v33);
  return a1;
}

unint64_t sub_10033C1D4()
{
  unint64_t result = qword_101641A40;
  if (!qword_101641A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A40);
  }
  return result;
}

unint64_t sub_10033C228()
{
  unint64_t result = qword_101641A48;
  if (!qword_101641A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A48);
  }
  return result;
}

uint64_t sub_10033C27C(unsigned __int16 a1)
{
  int v1 = a1;
  int v2 = a1 - 256;
  uint64_t result = 1;
  switch(v2)
  {
    case 0:
      uint64_t result = 2;
      break;
    case 1:
      uint64_t result = 3;
      break;
    case 2:
      uint64_t result = 4;
      break;
    case 3:
      uint64_t result = 5;
      break;
    case 4:
      uint64_t result = 6;
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      goto LABEL_5;
    case 11:
      uint64_t result = 0;
      break;
    case 12:
      return result;
    default:
      if (v1 == 516) {
        uint64_t result = 7;
      }
      else {
LABEL_5:
      }
        uint64_t result = 8;
      break;
  }
  return result;
}

uint64_t sub_10033C32C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_10001D010(a2, (uint64_t)v34);
  uint64_t v6 = sub_10033B41C(a1);
  sub_10001CD44(v34, v34[3]);
  uint64_t DynamicType = swift_getDynamicType();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v34);
  if (v6 != (ValueMetadata *)DynamicType)
  {
    __break(1u);
    JUMPOUT(0x10033C7A4);
  }
  switch(a1)
  {
    case 1:
      sub_10001D010(a2, (uint64_t)v31);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      *(_OWORD *)__src = *(_OWORD *)__dst;
      *(void *)&__src[16] = *(void *)&__dst[16];
      *(void *)&__src[24] = *(void *)&__dst[24];
      sub_10033CD34((uint64_t)__src);
      goto LABEL_19;
    case 2:
      sub_10001D010(a2, (uint64_t)__dst);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      long long v24 = *(_OWORD *)&v31[16];
      long long v27 = *(_OWORD *)v31;
      long long v19 = *(_OWORD *)&v31[48];
      long long v21 = *(_OWORD *)&v31[32];
      uint64_t v8 = *(void *)&v31[64];
      uint64_t v9 = *(void *)&v31[72];
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      *(_OWORD *)__src = v27;
      *(_OWORD *)&__src[16] = v24;
      *(_OWORD *)&__src[32] = v21;
      *(_OWORD *)&__src[48] = v19;
      *(void *)&__src[64] = v8;
      *(void *)&__src[72] = v9;
      sub_1000614B0((uint64_t)__src);
      goto LABEL_19;
    case 3:
      sub_10001D010(a2, (uint64_t)v32);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      memcpy(__dst, __src, sizeof(__dst));
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      memcpy(v31, __dst, sizeof(v31));
      sub_10033CC64((uint64_t)v31);
      uint64_t v10 = v31;
      goto LABEL_20;
    case 4:
      sub_10001D010(a2, (uint64_t)__dst);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      long long v25 = *(_OWORD *)&v31[16];
      long long v28 = *(_OWORD *)v31;
      long long v20 = *(_OWORD *)&v31[48];
      long long v22 = *(_OWORD *)&v31[32];
      long long v17 = *(_OWORD *)&v31[80];
      long long v18 = *(_OWORD *)&v31[64];
      uint64_t v11 = *(void *)&v31[96];
      uint64_t v12 = *(void *)&v31[104];
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      *(_OWORD *)__src = v28;
      *(_OWORD *)&__src[16] = v25;
      *(_OWORD *)&__src[32] = v22;
      *(_OWORD *)&__src[48] = v20;
      *(_OWORD *)&__src[64] = v18;
      *(_OWORD *)&__src[80] = v17;
      *(void *)&__src[96] = v11;
      *(void *)&__src[104] = v12;
      sub_100061D78((uint64_t)__src);
      goto LABEL_19;
    case 5:
      sub_10001D010(a2, (uint64_t)__dst);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      long long v26 = *(_OWORD *)&v31[16];
      long long v29 = *(_OWORD *)v31;
      long long v23 = *(_OWORD *)&v31[32];
      uint64_t v13 = *(void *)&v31[48];
      uint64_t v14 = *(void *)&v31[56];
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      *(_OWORD *)__src = v29;
      *(_OWORD *)&__src[16] = v26;
      *(_OWORD *)&__src[32] = v23;
      *(void *)&__src[48] = v13;
      *(void *)&__src[56] = v14;
      sub_10033CB94((uint64_t)__src);
      goto LABEL_19;
    case 6:
      sub_10001D010(a2, (uint64_t)v31);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      *(_OWORD *)__src = *(_OWORD *)__dst;
      sub_1000605BC((uint64_t)__src);
      goto LABEL_19;
    case 7:
      sub_10001D010(a2, (uint64_t)v31);
      sub_10000588C(&qword_101639B68);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_21;
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      sub_10033CB40((uint64_t)__src);
      goto LABEL_19;
    default:
      sub_10001D010(a2, (uint64_t)v31);
      sub_10000588C(&qword_101639B68);
      if (swift_dynamicCast())
      {
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
        sub_10005E7B8((uint64_t)__src);
LABEL_19:
        uint64_t v10 = __src;
LABEL_20:
        sub_10005E7E8((uint64_t)v10, (uint64_t)v35);
        return sub_10005E7E8((uint64_t)v35, a3);
      }
      else
      {
LABEL_21:
        sub_10033BE74();
        swift_allocError();
        *uint64_t v16 = 0;
        swift_willThrow();
        return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a2);
      }
  }
}

uint64_t sub_10033C7C4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v4 = type metadata accessor for Endianness();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[3];
  long long v29 = a1;
  sub_10001CD44(a1, v8);
  dispatch thunk of BinaryDecoding.container()();
  sub_1000BD078((uint64_t)v32, v32[3]);
  sub_100179818();
  dispatch thunk of BinaryDecodingContaining.decode<A>(_:)();
  if (v2)
  {
    uint64_t v9 = (uint64_t)v29;
  }
  else
  {
    uint64_t v10 = v28;
    v33[143] = v30[0];
    static Endianness.current.getter();
    FixedWidthInteger.convert(to:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __int16 v11 = v31[0];
    char v12 = sub_10033C27C(v31[0]);
    if (v12 != 8)
    {
      char v21 = v12;
      long long v22 = sub_10033B41C(v12);
      uint64_t v24 = v23;
      uint64_t v25 = (uint64_t)v29;
      sub_10001D010((uint64_t)v29, (uint64_t)v30);
      v31[3] = (uint64_t)v22;
      v31[4] = v24;
      sub_10001D958(v31);
      dispatch thunk of BinaryDecodable.init(from:)();
      sub_10001D010((uint64_t)v31, (uint64_t)v30);
      sub_10033C32C(v21, (uint64_t)v30, (uint64_t)v33);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v31);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v32);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v25);
      return sub_10005E7E8((uint64_t)v33, v10);
    }
    static os_log_type_t.error.getter();
    uint64_t v9 = (uint64_t)v29;
    if (qword_101637308 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_101342130;
    LOWORD(v31[0]) = v11;
    uint64_t v14 = FixedWidthInteger.data.getter();
    unint64_t v16 = v15;
    uint64_t v17 = Data.hexString.getter();
    uint64_t v19 = v18;
    sub_10001CFB8(v14, v16);
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_10000B4CC();
    *(void *)(v13 + 32) = v17;
    *(void *)(v13 + 40) = v19;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10033BE74();
    swift_allocError();
    *long long v20 = 1;
    swift_willThrow();
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v32);
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v9);
}

double sub_10033CB40(uint64_t a1)
{
  *(void *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(void *)(a1 + 248) = 0;
  *(void *)(a1 + 256) = 0x3000000000000000;
  return result;
}

int8x16_t sub_10033CB94(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v2 = *(void *)(a1 + 40) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v3 = *(void *)(a1 + 56) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v4 = *(void *)(a1 + 72) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v5 = *(void *)(a1 + 88) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v6 = *(void *)(a1 + 104) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v7 = *(void *)(a1 + 120) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v8 = *(void *)(a1 + 136) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v9 = *(void *)(a1 + 152) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v10 = *(void *)(a1 + 168) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v11 = *(void *)(a1 + 184) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v12 = *(void *)(a1 + 224) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v13 = *(void *)(a1 + 240) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v14 = *(void *)(a1 + 256) & 0xCFFFFFFFFFFFFFFFLL | 0x2000000000000000;
  *(void *)(a1 + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 136) = v8;
  *(void *)(a1 + 152) = v9;
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = v11;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 200), (int8x16_t)xmmword_101347BD0);
  *(int8x16_t *)(a1 + 200) = result;
  *(void *)(a1 + 224) = v12;
  *(void *)(a1 + 240) = v13;
  *(void *)(a1 + 256) = v14;
  return result;
}

int8x16_t sub_10033CC64(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v2 = *(void *)(a1 + 40) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v3 = *(void *)(a1 + 56) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v4 = *(void *)(a1 + 72) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v5 = *(void *)(a1 + 88) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v6 = *(void *)(a1 + 104) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v7 = *(void *)(a1 + 120) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v8 = *(void *)(a1 + 136) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v9 = *(void *)(a1 + 152) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v10 = *(void *)(a1 + 168) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v11 = *(void *)(a1 + 184) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v12 = *(void *)(a1 + 224) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v13 = *(void *)(a1 + 240) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v14 = *(void *)(a1 + 256) & 0xCFFFFFFFFFFFFFFFLL | 0x1000000000000000;
  *(void *)(a1 + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 136) = v8;
  *(void *)(a1 + 152) = v9;
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = v11;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 200), (int8x16_t)xmmword_101347BD0);
  *(int8x16_t *)(a1 + 200) = result;
  *(void *)(a1 + 224) = v12;
  *(void *)(a1 + 240) = v13;
  *(void *)(a1 + 256) = v14;
  return result;
}

int8x16_t sub_10033CD34(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v2 = *(void *)(a1 + 40) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v3 = *(void *)(a1 + 56) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v4 = *(void *)(a1 + 72) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v5 = *(void *)(a1 + 88) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v6 = *(void *)(a1 + 104) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v7 = *(void *)(a1 + 120) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v8 = *(void *)(a1 + 136) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v9 = *(void *)(a1 + 152) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v10 = *(void *)(a1 + 168) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v11 = *(void *)(a1 + 184) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v12 = *(void *)(a1 + 224) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v13 = *(void *)(a1 + 240) & 0xCFFFFFFFFFFFFFFFLL;
  unint64_t v14 = *(void *)(a1 + 256) & 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  *(void *)(a1 + 24) = v1;
  *(void *)(a1 + 40) = v2;
  *(void *)(a1 + 56) = v3;
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 88) = v5;
  *(void *)(a1 + 104) = v6;
  *(void *)(a1 + 120) = v7;
  *(void *)(a1 + 136) = v8;
  *(void *)(a1 + 152) = v9;
  *(void *)(a1 + 168) = v10;
  *(void *)(a1 + 184) = v11;
  int8x16_t result = vandq_s8(*(int8x16_t *)(a1 + 200), (int8x16_t)xmmword_101347BD0);
  *(int8x16_t *)(a1 + 200) = result;
  *(void *)(a1 + 224) = v12;
  *(void *)(a1 + 240) = v13;
  *(void *)(a1 + 256) = v14;
  return result;
}

unsigned char *storeEnumTagSinglePayload for AirPodsSWPairingCommand.AccessoryPairingCommandError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *int8x16_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10033CECCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *int8x16_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsSWPairingCommand.AccessoryPairingCommandError()
{
  return &type metadata for AirPodsSWPairingCommand.AccessoryPairingCommandError;
}

unint64_t sub_10033CF08()
{
  unint64_t result = qword_101641A50;
  if (!qword_101641A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641A50);
  }
  return result;
}

uint64_t sub_10033CF5C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_101641A58);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_101641A58);
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170D788);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10033D024(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SharedBeaconRecord(0);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_10033D164, v2, 0);
}

uint64_t sub_10033D164()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 64) + 16);
  *(void *)(v0 + 152) = v1;
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 128);
    *(_DWORD *)(v0 + 192) = *(_DWORD *)(v2 + 80);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v3 = 0;
    *(void *)(v0 + 160) = *(void *)(v2 + 72);
    while (1)
    {
      *(void *)(v0 + 168) = v3;
      uint64_t v4 = *(void *)(v0 + 120);
      uint64_t v5 = *(void *)(v0 + 80);
      sub_10033E2F8(*(void *)(v0 + 64)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ *(void *)(v0 + 160) * v3, *(void *)(v0 + 144));
      uint64_t v6 = *(void *)(v5 + 112);
      *(_DWORD *)(v0 + 196) = *(_DWORD *)(v4 + 20);
      if (!*(void *)(v6 + 16)) {
        break;
      }
      uint64_t v25 = v6;
      sub_10033E3D8(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v7 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v8 = -1 << *(unsigned char *)(v25 + 32);
      unint64_t v9 = v7 & ~v8;
      uint64_t v10 = v25;
      if (((*(void *)(v25 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
LABEL_14:
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v11 = ~v8;
      uint64_t v12 = *(void *)(v0 + 96);
      uint64_t v13 = *(void *)(v12 + 72);
      unint64_t v14 = *(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16);
      while (1)
      {
        uint64_t v15 = *(void *)(v0 + 112);
        uint64_t v16 = *(void *)(v0 + 88);
        uint64_t v17 = *(void *)(v0 + 96);
        v14(v15, *(void *)(v10 + 48) + v9 * v13, v16);
        sub_10033E3D8((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
        if (v18) {
          break;
        }
        unint64_t v9 = (v9 + 1) & v11;
        uint64_t v10 = v25;
        if (((*(void *)(v25 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_14;
        }
      }
      uint64_t v19 = *(void *)(v0 + 144);
      swift_bridgeObjectRelease();
      sub_10033E35C(v19);
      uint64_t v3 = *(void *)(v0 + 168) + 1;
      if (v3 == *(void *)(v0 + 152))
      {
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
    }
    long long v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v22;
    void *v22 = v0;
    v22[1] = sub_10033D4B0;
    uint64_t v23 = *(void *)(v0 + 144);
    uint64_t v24 = *(void *)(v0 + 72);
    return sub_10033DEF8(v23, v24);
  }
  else
  {
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_10033D4B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v4 = sub_10033D97C;
  }
  else {
    uint64_t v4 = sub_10033D5DC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10033D5DC()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(char **)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 96);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v2, v1 + *(int *)(v0 + 196), v4);
  swift_beginAccess();
  sub_100DC8CB8(v3, v2);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_endAccess();
  sub_10033E35C(v1);
  uint64_t v6 = *(void *)(v0 + 168) + 1;
  if (v6 == *(void *)(v0 + 152))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 168) = v6;
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v10 = *(void *)(v0 + 80);
      sub_10033E2F8(*(void *)(v0 + 64)+ ((*(unsigned __int8 *)(v0 + 192) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 192))+ *(void *)(v0 + 160) * v6, *(void *)(v0 + 144));
      uint64_t v11 = *(void *)(v10 + 112);
      *(_DWORD *)(v0 + 196) = *(_DWORD *)(v9 + 20);
      if (!*(void *)(v11 + 16)) {
        break;
      }
      uint64_t v28 = v11;
      sub_10033E3D8(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v12 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v13 = -1 << *(unsigned char *)(v28 + 32);
      unint64_t v14 = v12 & ~v13;
      uint64_t v15 = v28;
      if (((*(void *)(v28 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v16 = ~v13;
      uint64_t v17 = *(void *)(v0 + 96);
      uint64_t v18 = *(void *)(v17 + 72);
      uint64_t v19 = *(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16);
      while (1)
      {
        uint64_t v20 = *(void *)(v0 + 112);
        uint64_t v21 = *(void *)(v0 + 88);
        uint64_t v22 = *(void *)(v0 + 96);
        v19(v20, *(void *)(v15 + 48) + v14 * v18, v21);
        sub_10033E3D8((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
        if (v23) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v16;
        uint64_t v15 = v28;
        if (((*(void *)(v28 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_13;
        }
      }
      uint64_t v24 = *(void *)(v0 + 144);
      swift_bridgeObjectRelease();
      sub_10033E35C(v24);
      uint64_t v6 = *(void *)(v0 + 168) + 1;
      if (v6 == *(void *)(v0 + 152)) {
        goto LABEL_2;
      }
    }
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10033D4B0;
    uint64_t v26 = *(void *)(v0 + 144);
    uint64_t v27 = *(void *)(v0 + 72);
    return sub_10033DEF8(v26, v27);
  }
}

uint64_t sub_10033D97C()
{
  uint64_t v39 = v0;
  if (qword_101636A78 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_101641A58);
  sub_10033E2F8(v1, v2);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v8 = v0[17];
  uint64_t v7 = v0[18];
  uint64_t v36 = v0;
  if (v6)
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 141558531;
    *(void *)(v9 + 4) = 1752392040;
    *(_WORD *)(v9 + 12) = 2081;
    sub_10033E3D8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v9 + 14) = sub_1008FA0F0(v11, v12, &v38);
    swift_bridgeObjectRelease();
    sub_10033E35C(v8);
    *(_WORD *)(v9 + 22) = 2114;
    swift_errorRetain();
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v9 + 24) = v13;
    void *v10 = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error hiding beacon %{private,mask.hash}s: %{public}@", (uint8_t *)v9, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    sub_10033E35C(v8);
    swift_errorRelease();
  }
  sub_10033E35C(v7);
  uint64_t v14 = v0[21] + 1;
  if (v14 == v0[19])
  {
LABEL_7:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  else
  {
    while (1)
    {
      v0[21] = v14;
      uint64_t v17 = v0[15];
      uint64_t v18 = v0[10];
      sub_10033E2F8(v0[8]+ ((*((unsigned __int8 *)v0 + 192) + 32) & ~(unint64_t)*((unsigned __int8 *)v0 + 192))+ v0[20] * v14, v0[18]);
      uint64_t v19 = *(void *)(v18 + 112);
      *((_DWORD *)v0 + 49) = *(_DWORD *)(v17 + 20);
      if (!*(void *)(v19 + 16)) {
        break;
      }
      uint64_t v37 = v19;
      sub_10033E3D8(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v0 = v36;
      uint64_t v20 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v21 = -1 << *(unsigned char *)(v37 + 32);
      unint64_t v22 = v20 & ~v21;
      uint64_t v23 = v37;
      if (((*(void *)(v37 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        break;
      }
      uint64_t v24 = ~v21;
      uint64_t v25 = v36[12];
      uint64_t v26 = *(void *)(v25 + 72);
      uint64_t v27 = *(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 16);
      while (1)
      {
        uint64_t v28 = v0[14];
        uint64_t v29 = v0[11];
        uint64_t v30 = v0[12];
        v27(v28, *(void *)(v23 + 48) + v22 * v26, v29);
        sub_10033E3D8((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
        if (v31) {
          break;
        }
        unint64_t v22 = (v22 + 1) & v24;
        uint64_t v0 = v36;
        uint64_t v23 = v37;
        if (((*(void *)(v37 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          goto LABEL_18;
        }
      }
      uint64_t v0 = v36;
      uint64_t v32 = v36[18];
      swift_bridgeObjectRelease();
      sub_10033E35C(v32);
      uint64_t v14 = v36[21] + 1;
      if (v14 == v36[19]) {
        goto LABEL_7;
      }
    }
    uint64_t v33 = (void *)swift_task_alloc();
    v0[22] = v33;
    *uint64_t v33 = v0;
    v33[1] = sub_10033D4B0;
    uint64_t v34 = v0[18];
    uint64_t v35 = v0[9];
    return sub_10033DEF8(v34, v35);
  }
}

uint64_t sub_10033DEF8(uint64_t a1, uint64_t a2)
{
  v3[8] = a1;
  v3[9] = a2;
  v3[10] = type metadata accessor for SharedBeaconRecord(0);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_10033DF8C, v2, 0);
}

uint64_t sub_10033DF8C()
{
  uint64_t v18 = v0;
  if (qword_101636A78 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[11];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_101641A58);
  sub_10033E2F8(v1, v2);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[11];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    type metadata accessor for UUID();
    sub_10033E3D8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v9, v10, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10033E35C(v7);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Hiding .automatic_legacy because we have .automatic beacon for %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10033E35C(v0[11]);
  }

  uint64_t v11 = v0[8];
  uint64_t v12 = v0[9];
  v0[5] = v0[10];
  v0[6] = sub_10033E3D8(&qword_101639EA0, (void (*)(uint64_t))type metadata accessor for SharedBeaconRecord);
  uint64_t v13 = sub_10001D958(v0 + 2);
  sub_10033E2F8(v11, (uint64_t)v13);
  type metadata accessor for Transaction();
  uint64_t v14 = (void *)swift_task_alloc();
  v14[2] = v0 + 2;
  v14[3] = v12;
  void v14[4] = 0;
  v14[5] = 0;
  static Transaction.named<A>(_:with:)();
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_10033E29C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t _s23HiddenBeaconCoordinatorCMa()
{
  return self;
}

uint64_t sub_10033E2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharedBeaconRecord(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10033E35C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharedBeaconRecord(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10033E3B8(uint64_t a1)
{
  return sub_1012DBF34(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10033E3D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10033E420@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_10000588C(&qword_101641B60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMNAccountType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMNAuthenticationProvider();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for FMNAccountType.secureLocations(_:), v6);
  static FMNAuthenticationProvider.configurationURL(accountType:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v17 = &qword_101649E40;
    uint64_t v18 = (uint64_t)v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v19 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v3, 1, v4) != 1)
    {
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v26 = v30;
      v25(v30, v3, v4);
      uint64_t v27 = (void (*)(unsigned char *, void))URLComponents.path.modify();
      v28._countAndFlagsBits = 0x74696D627573;
      v28._object = (void *)0xE600000000000000;
      String.append(_:)(v28);
      v27(v33, 0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v32, v26, v4);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v17 = &qword_101641B60;
    uint64_t v18 = (uint64_t)v3;
  }
  sub_10001DAB4(v18, v17);
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100010324(v20, (uint64_t)qword_10170EC30);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No url found in account bag.", v23, 2u);
    swift_slowDealloc();
  }

  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.path.setter();
  return URLComponents.host.setter();
}

uint64_t sub_10033E924@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_10000588C(&qword_101641B60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v47 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v46 = (char *)&v45 - v7;
  uint64_t v8 = type metadata accessor for FMNAccountType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMNAuthenticationProvider();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for FMNAccountType.ownedDeviceLocations(_:), v8);
  static FMNAuthenticationProvider.configurationURL(accountType:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10001DAB4((uint64_t)v14, &qword_101649E40);
    uint64_t v19 = v4;
    uint64_t v20 = v49;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v20 = v49;
    uint64_t v19 = v4;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v3, 1, v4) != 1)
    {
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      uint64_t v39 = v46;
      v38(v46, v3, v19);
      uint64_t v40 = (void (*)(uint64_t *, void))URLComponents.path.modify();
      v41._countAndFlagsBits = 0x696D6275732F3276;
      v41._object = (void *)0xE900000000000074;
      String.append(_:)(v41);
      v40(v50, 0);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v38)(v48, v39, v19);
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    sub_10001DAB4((uint64_t)v3, &qword_101641B60);
  }
  uint64_t v21 = v47;
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v22 = type metadata accessor for Logger();
  sub_100010324(v22, (uint64_t)qword_10170EC30);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "No url found in account bag.", v25, 2u);
    swift_slowDealloc();
  }

  URLComponents.init()();
  URLComponents.scheme.setter();
  id v26 = [self standardUserDefaults];
  id v27 = [self sharedInstance];
  unsigned int v28 = [v27 isInternalBuild];

  if (v28
    && (NSString v29 = String._bridgeToObjectiveC()(),
        id v30 = [v26 stringForKey:v29],
        v29,
        v30))
  {
    uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v33 = v32;

    swift_bridgeObjectRetain_n();
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      v50[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315138;
      swift_bridgeObjectRetain();
      v50[4] = sub_1008FA0F0(v31, (unint64_t)v33, v50);
      uint64_t v21 = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "Override url found in user defaults %s. ", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v37 = v48;
    v50[0] = 47;
    v50[1] = 0xE100000000000000;
    v43._countAndFlagsBits = v31;
    v43._object = v33;
    String.append(_:)(v43);
    swift_bridgeObjectRelease();
    v44._countAndFlagsBits = 0x6D6275732F32762FLL;
    v44._object = (void *)0xEA00000000007469;
    String.append(_:)(v44);
    URLComponents.path.setter();
  }
  else
  {

    URLComponents.path.setter();
    uint64_t v37 = v48;
  }
  URLComponents.host.setter();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v37, v21, v19);
}

uint64_t sub_10033F0D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FMNAccountType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_10033F13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = type metadata accessor for URLComponents();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_10033F1AC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_101641C88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_1003411F8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  long long v9 = v3[3];
  long long v16 = v3[2];
  long long v17 = v9;
  long long v18 = v3[4];
  long long v10 = v3[1];
  long long v14 = *v3;
  long long v15 = v10;
  char v13 = 0;
  sub_10034124C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    *(void *)&long long v14 = *((void *)v3 + 10);
    char v13 = 1;
    sub_10000588C(&qword_101641CA0);
    sub_1003412A0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10033F358()
{
  if (*v0) {
    return 0x74696D627573;
  }
  else {
    return 0x6F43746E65696C63;
  }
}

uint64_t sub_10033F39C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003417A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10033F3C4(uint64_t a1)
{
  unint64_t v2 = sub_1003411F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10033F400(uint64_t a1)
{
  unint64_t v2 = sub_1003411F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10033F43C(void *a1)
{
  return sub_10033F1AC(a1);
}

uint64_t sub_10033F454()
{
  return 0x65566769666E6F63;
}

uint64_t sub_10033F478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65566769666E6F63 && a2 == 0xED00006E6F697372)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_10033F534(uint64_t a1)
{
  unint64_t v2 = sub_100341368();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10033F570(uint64_t a1)
{
  unint64_t v2 = sub_100341368();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10033F5AC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_101641CB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100341368();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  char v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  return result;
}

uint64_t sub_10033F72C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = a2;
  uint64_t v4 = *a2;
  *(void *)(v3 + 176) = a3;
  *(void *)(v3 + 184) = v4;
  *(_OWORD *)(v3 + 192) = *(_OWORD *)(a2 + 1);
  *(void *)(v3 + 208) = a2[3];
  *(_OWORD *)(v3 + 216) = *((_OWORD *)a2 + 2);
  *(unsigned char *)(v3 + 408) = *((unsigned char *)a2 + 48);
  *(void *)(v3 + 232) = a2[7];
  *(_OWORD *)(v3 + 240) = *((_OWORD *)a2 + 4);
  uint64_t v5 = type metadata accessor for HashAlgorithm();
  *(void *)(v3 + 256) = v5;
  *(void *)(v3 + 264) = *(void *)(v5 - 8);
  *(void *)(v3 + 272) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  *(void *)(v3 + 280) = v6;
  *(void *)(v3 + 288) = *(void *)(v6 - 8);
  *(void *)(v3 + 296) = swift_task_alloc();
  return _swift_task_switch(sub_10033F880, 0, 0);
}

id sub_10033F880()
{
  if (*(void *)(*(void *)(v0 + 160) + 16))
  {
    uint64_t v1 = (unint64_t *)(v0 + 104);
    unint64_t v2 = sub_10092D8F8((uint64_t)_swiftEmptyArrayStorage);
    *(void *)(v0 + 104) = v2;
    id result = [self currentDevice];
    if (result)
    {
      uint64_t v4 = result;
      id v5 = [result serverFriendlyDescription];

      if (v5)
      {
        uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v8 = v7;

        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v1 = 0x8000000000000000;
        sub_10016C0FC(v6, v8, 0xD000000000000011, 0x80000001013F64E0, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_100163690(0xD000000000000011, 0x80000001013F64E0);
        swift_bridgeObjectRelease();
        unint64_t v2 = *v1;
      }
      uint64_t v11 = *(void *)(v0 + 288);
      uint64_t v12 = *(void *)(v0 + 296);
      uint64_t v13 = *(void *)(v0 + 280);
      uint64_t v14 = *(void *)(v0 + 224);
      uint64_t v32 = *(void *)(v0 + 232);
      char v31 = *(unsigned char *)(v0 + 408);
      uint64_t v15 = *(void *)(v0 + 216);
      long long v28 = *(_OWORD *)(v0 + 184);
      long long v29 = *(_OWORD *)(v0 + 200);
      uint64_t v16 = *(void *)(v0 + 160);
      long long v30 = *(_OWORD *)(v0 + 240);
      char v17 = swift_isUniquelyReferenced_nonNull_native();
      sub_10016C0FC(49, 0xE100000000000000, 0x562D747065636341, 0xEE006E6F69737265, v17);
      swift_bridgeObjectRelease();
      char v18 = swift_isUniquelyReferenced_nonNull_native();
      sub_10016C0FC(0xD000000000000010, 0x80000001013F87B0, 0x2D746E65746E6F43, 0xEC00000065707954, v18);
      unint64_t v19 = v2;
      swift_bridgeObjectRelease();
      Date.init()();
      uint64_t v20 = Date.epoch.getter();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v12, v13);
      *(void *)(v0 + 144) = v20;
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v23 = v22;
      char v24 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v0 + 104) = 0x8000000000000000;
      sub_10016C0FC(v21, v23, 0xD000000000000015, 0x80000001013F87D0, v24);
      *(void *)(v0 + 104) = v19;
      swift_bridgeObjectRelease();
      type metadata accessor for JSONEncoder();
      swift_allocObject();
      *(void *)(v0 + 304) = JSONEncoder.init()();
      *(_OWORD *)(v0 + 16) = v28;
      *(_OWORD *)(v0 + 32) = v29;
      *(void *)(v0 + 48) = v15;
      *(void *)(v0 + 56) = v14;
      *(unsigned char *)(v0 + 64) = v31;
      *(void *)(v0 + 72) = v32;
      *(_OWORD *)(v0 + 80) = v30;
      *(void *)(v0 + 96) = v16;
      sub_100340578();
      *(void *)(v0 + 312) = dispatch thunk of JSONEncoder.encode<A>(_:)();
      *(void *)(v0 + 320) = v25;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t (__cdecl *)())((char *)&dword_10165ABD0 + dword_10165ABD0);
      id v27 = (void *)swift_task_alloc();
      *(void *)(v0 + 328) = v27;
      *id v27 = v0;
      v27[1] = sub_10033FE14;
      return (id)v33();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 168);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1003405CC(v10);
    swift_task_dealloc();
    swift_task_dealloc();
    id v26 = *(uint64_t (**)(void, void, void))(v0 + 8);
    return (id)v26(0, 0, 0);
  }
  return result;
}

uint64_t sub_10033FE14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 336) = a1;
  *(void *)(v3 + 344) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_10033FF14, 0, 0);
}

uint64_t sub_10033FF14()
{
  uint64_t v2 = v0[42];
  unint64_t v1 = v0[43];
  uint64_t v4 = v0[39];
  unint64_t v3 = v0[40];
  uint64_t v6 = v0[33];
  uint64_t v5 = v0[34];
  uint64_t v7 = v0[32];
  v0[16] = v2;
  v0[17] = v1;
  sub_1000361E0(v2, v1);
  sub_1000361E0(v4, v3);
  sub_100A42CBC(v4, v3);
  sub_10001CFB8(v4, v3);
  sub_10001CFB8(v2, v1);
  uint64_t v8 = v0[17];
  v0[44] = v0[16];
  v0[45] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for HashAlgorithm.sha256(_:), v7);
  uint64_t v9 = Data.hash(algorithm:)();
  uint64_t v11 = v10;
  v0[46] = v9;
  v0[47] = v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10165ABC8 + dword_10165ABC8);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[48] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10034009C;
  uint64_t v13 = v0[22];
  return v15(v9, v11, v13);
}

uint64_t sub_10034009C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100340308;
  }
  else
  {
    uint64_t v6 = v4[46];
    unint64_t v7 = v4[47];
    v4[50] = a1;
    sub_10001CFB8(v6, v7);
    uint64_t v5 = sub_1003401C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003401C8()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[49];
  uint64_t v2 = v0[50];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = v1;
  v0[13] = 0x8000000000000000;
  sub_1001EE9C8(v2, (uint64_t)sub_100BD6E00, 0, isUniquelyReferenced_nonNull_native, &v12);
  if (v3)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v0[44];
    unint64_t v7 = v0[45];
    v0[13] = v12;
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_10001CFB8(v6, v7);
    uint64_t v8 = v0[13];
    uint64_t v10 = v0[39];
    uint64_t v9 = v0[40];
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
    return v11(v8, v10, v9);
  }
}

uint64_t sub_100340308()
{
  uint64_t v1 = v0[44];
  unint64_t v2 = v0[45];
  sub_10001CFB8(v0[46], v0[47]);
  sub_10001CFB8(v1, v2);
  if (qword_101637000 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170EAE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    unint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138543362;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[19] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to generate attestation header: %{public}@.", v6, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_release();
  }
  uint64_t v9 = v0[13];
  uint64_t v11 = v0[39];
  uint64_t v10 = v0[40];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v12(v9, v11, v10);
}

unint64_t sub_100340578()
{
  unint64_t result = qword_101641B58;
  if (!qword_101641B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641B58);
  }
  return result;
}

uint64_t sub_1003405CC(uint64_t a1)
{
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for OwnedBeaconGroup.Version(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for OwnedBeaconGroup.Version(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SecureLocationsSubmitResponseBody(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsSubmitResponseBody()
{
  return &type metadata for SecureLocationsSubmitResponseBody;
}

uint64_t sub_1003406BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003406D0);
}

uint64_t sub_1003406D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003406E8);
}

uint64_t type metadata accessor for OwnedDeviceSubmitEndpoint(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101641BC0);
}

uint64_t destroy for SecureLocationsSubmitRequestBody()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureLocationsSubmitRequestBody(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureLocationsSubmitRequestBody(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SecureLocationsSubmitRequestBody(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SecureLocationsSubmitRequestBody(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureLocationsSubmitRequestBody(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureLocationsSubmitRequestBody(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsSubmitRequestBody()
{
  return &type metadata for SecureLocationsSubmitRequestBody;
}

ValueMetadata *type metadata accessor for SecureLocationsSubmitRequest()
{
  return &type metadata for SecureLocationsSubmitRequest;
}

uint64_t *sub_100340A54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for FMNAccountType();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for URLComponents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_100340B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for URLComponents();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100340C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URLComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100340CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URLComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100340D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URLComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100340E2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for URLComponents();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100340EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100340EF8);
}

uint64_t sub_100340EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for URLComponents();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100340FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100341008);
}

uint64_t sub_10034100C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMNAccountType();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for URLComponents();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SecureLocationsSubmitEndpoint(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101641C50);
}

uint64_t sub_100341130()
{
  uint64_t result = type metadata accessor for FMNAccountType();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URLComponents();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1003411F8()
{
  unint64_t result = qword_101641C90;
  if (!qword_101641C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641C90);
  }
  return result;
}

unint64_t sub_10034124C()
{
  unint64_t result = qword_101641C98;
  if (!qword_101641C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641C98);
  }
  return result;
}

unint64_t sub_1003412A0()
{
  unint64_t result = qword_101641CA8;
  if (!qword_101641CA8)
  {
    sub_10000592C(&qword_101641CA0);
    sub_100341314();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CA8);
  }
  return result;
}

unint64_t sub_100341314()
{
  unint64_t result = qword_101641CB0;
  if (!qword_101641CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CB0);
  }
  return result;
}

unint64_t sub_100341368()
{
  unint64_t result = qword_101641CC0;
  if (!qword_101641CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SecureLocationsSubmitResponseBody.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100341458);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsSubmitResponseBody.CodingKeys()
{
  return &type metadata for SecureLocationsSubmitResponseBody.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SecureLocationsSubmitRequestBody.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10034155CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsSubmitRequestBody.CodingKeys()
{
  return &type metadata for SecureLocationsSubmitRequestBody.CodingKeys;
}

unint64_t sub_100341598()
{
  unint64_t result = qword_101641CC8;
  if (!qword_101641CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CC8);
  }
  return result;
}

unint64_t sub_1003415F0()
{
  unint64_t result = qword_101641CD0;
  if (!qword_101641CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CD0);
  }
  return result;
}

unint64_t sub_100341648()
{
  unint64_t result = qword_101641CD8;
  if (!qword_101641CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CD8);
  }
  return result;
}

unint64_t sub_1003416A0()
{
  unint64_t result = qword_101641CE0;
  if (!qword_101641CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CE0);
  }
  return result;
}

unint64_t sub_1003416F8()
{
  unint64_t result = qword_101641CE8;
  if (!qword_101641CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CE8);
  }
  return result;
}

unint64_t sub_100341750()
{
  unint64_t result = qword_101641CF0;
  if (!qword_101641CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641CF0);
  }
  return result;
}

uint64_t sub_1003417A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43746E65696C63 && a2 == 0xED0000747865746ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74696D627573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

_OWORD *sub_1003418B4(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)unsigned int v4 = *(void *)a2;
    unsigned int v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    unint64_t v7 = *(void *)(a2 + 8);
    if (v7 >> 60 == 15)
    {
      *a1 = *(_OWORD *)a2;
    }
    else
    {
      uint64_t v9 = *(void *)a2;
      sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
      *(void *)unsigned int v4 = v9;
      *((void *)v4 + 1) = v7;
    }
    uint64_t v10 = (uint64_t *)(a2 + 16);
    unint64_t v11 = *(void *)(a2 + 24);
    if (v11 >> 60 == 15)
    {
      v4[1] = *(_OWORD *)v10;
    }
    else
    {
      uint64_t v12 = *v10;
      sub_1000361E0(*v10, *(void *)(a2 + 24));
      *((void *)v4 + 2) = v12;
      *((void *)v4 + 3) = v11;
    }
    uint64_t v13 = (uint64_t *)(a2 + 32);
    unint64_t v14 = *(void *)(a2 + 40);
    if (v14 >> 60 == 15)
    {
      v4[2] = *(_OWORD *)v13;
    }
    else
    {
      uint64_t v15 = *v13;
      sub_1000361E0(*v13, *(void *)(a2 + 40));
      *((void *)v4 + 4) = v15;
      *((void *)v4 + 5) = v14;
    }
    uint64_t v16 = *(int *)(a3 + 28);
    char v17 = (char *)v4 + v16;
    char v18 = (const void *)(a2 + v16);
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_10000588C(&qword_101638CF0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
  }
  return v4;
}

uint64_t sub_100341ACC(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15) {
    sub_10001CFB8(*a1, v4);
  }
  unint64_t v5 = a1[3];
  if (v5 >> 60 != 15) {
    sub_10001CFB8(a1[2], v5);
  }
  unint64_t v6 = a1[5];
  if (v6 >> 60 != 15) {
    sub_10001CFB8(a1[4], v6);
  }
  unint64_t v7 = (char *)a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t sub_100341BF0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v6 = a2[1];
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v7 = *a2;
    sub_1000361E0(*a2, a2[1]);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v6;
  }
  uint64_t v8 = a2 + 2;
  unint64_t v9 = a2[3];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *v8;
    sub_1000361E0(*v8, a2[3]);
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v9;
  }
  uint64_t v11 = a2 + 4;
  unint64_t v12 = a2[5];
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v11;
  }
  else
  {
    uint64_t v13 = *v11;
    sub_1000361E0(*v11, a2[5]);
    *(void *)(a1 + 32) = v13;
    *(void *)(a1 + 40) = v12;
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10000588C(&qword_101638CF0);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t *sub_100341DB8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v7 = *(void *)a2;
      sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
      *a1 = v7;
      a1[1] = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v8 = *(void *)a2;
  sub_1000361E0(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v9 = *a1;
  unint64_t v10 = a1[1];
  *a1 = v8;
  a1[1] = v6;
  sub_10001CFB8(v9, v10);
LABEL_8:
  uint64_t v11 = (uint64_t *)(a2 + 16);
  unint64_t v12 = *(void *)(a2 + 24);
  if ((unint64_t)a1[3] >> 60 == 15)
  {
    if (v12 >> 60 != 15)
    {
      uint64_t v13 = *v11;
      sub_1000361E0(*v11, *(void *)(a2 + 24));
      a1[2] = v13;
      a1[3] = v12;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v12 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 2));
LABEL_13:
    *((_OWORD *)a1 + 1) = *(_OWORD *)v11;
    goto LABEL_15;
  }
  uint64_t v14 = *v11;
  sub_1000361E0(*v11, *(void *)(a2 + 24));
  uint64_t v15 = a1[2];
  unint64_t v16 = a1[3];
  a1[2] = v14;
  a1[3] = v12;
  sub_10001CFB8(v15, v16);
LABEL_15:
  uint64_t v17 = (uint64_t *)(a2 + 32);
  unint64_t v18 = *(void *)(a2 + 40);
  if ((unint64_t)a1[5] >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      uint64_t v19 = *v17;
      sub_1000361E0(*v17, *(void *)(a2 + 40));
      a1[4] = v19;
      a1[5] = v18;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v18 >> 60 == 15)
  {
    sub_1001356D0((uint64_t)(a1 + 4));
LABEL_20:
    *((_OWORD *)a1 + 2) = *(_OWORD *)v17;
    goto LABEL_22;
  }
  uint64_t v20 = *v17;
  sub_1000361E0(*v17, *(void *)(a2 + 40));
  uint64_t v21 = a1[4];
  unint64_t v22 = a1[5];
  a1[4] = v20;
  a1[5] = v18;
  sub_10001CFB8(v21, v22);
LABEL_22:
  uint64_t v23 = *(int *)(a3 + 28);
  char v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = type metadata accessor for UUID();
  uint64_t v27 = *(void *)(v26 - 8);
  long long v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 24))(v24, v25, v26);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_27;
  }
  if (v30)
  {
LABEL_27:
    uint64_t v31 = sub_10000588C(&qword_101638CF0);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  return a1;
}

_OWORD *sub_1003420B0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 28);
  unint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_10000588C(&qword_101638CF0);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1003421CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(a1 + 8);
  if (v6 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v7 = *(void *)(a2 + 8);
  if (v7 >> 60 == 15)
  {
    sub_1001356D0(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v8 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v7;
  sub_10001CFB8(v8, v6);
LABEL_6:
  uint64_t v9 = (_OWORD *)(a2 + 16);
  unint64_t v10 = *(void *)(a1 + 24);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v9;
    goto LABEL_11;
  }
  unint64_t v11 = *(void *)(a2 + 24);
  if (v11 >> 60 == 15)
  {
    sub_1001356D0(a1 + 16);
    goto LABEL_9;
  }
  uint64_t v12 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v9;
  *(void *)(a1 + 24) = v11;
  sub_10001CFB8(v12, v10);
LABEL_11:
  uint64_t v13 = (_OWORD *)(a2 + 32);
  unint64_t v14 = *(void *)(a1 + 40);
  if (v14 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 32) = *v13;
    goto LABEL_16;
  }
  unint64_t v15 = *(void *)(a2 + 40);
  if (v15 >> 60 == 15)
  {
    sub_1001356D0(a1 + 32);
    goto LABEL_14;
  }
  uint64_t v16 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)v13;
  *(void *)(a1 + 40) = v15;
  sub_10001CFB8(v16, v14);
LABEL_16:
  uint64_t v17 = *(int *)(a3 + 28);
  unint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  unint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 40))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_21;
  }
  if (v24)
  {
LABEL_21:
    uint64_t v25 = sub_10000588C(&qword_101638CF0);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 32))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t sub_100342434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100342448);
}

uint64_t sub_100342448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 11)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    BOOL v5 = ((4 * v4) & 0xC) == 0;
    unsigned int v6 = ((4 * v4) & 0xC | (v4 >> 2)) ^ 0xF;
    if (v5) {
      return 0;
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v10 = sub_10000588C(&qword_101638CF0);
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 28);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100342500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100342514);
}

void *sub_100342514(void *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 11)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
  }
  else
  {
    uint64_t v7 = sub_10000588C(&qword_101638CF0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for AirPodsLEPairingLockAckResponse()
{
  uint64_t result = qword_101641D50;
  if (!qword_101641D50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100342614()
{
  sub_1003426B0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003426B0()
{
  if (!qword_101655AB0)
  {
    type metadata accessor for UUID();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101655AB0);
    }
  }
}

uint64_t sub_100342708@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101641D90);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AirPodsLEPairingLockAckResponse();
  __chkstk_darwin(v10);
  uint64_t v12 = (_OWORD *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001CD44(a1, a1[3]);
  sub_100342C08();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v17 = v10;
  unint64_t v18 = v6;
  char v23 = 0;
  sub_100037AA0();
  uint64_t v13 = v21;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *uint64_t v12 = v22;
  char v23 = 1;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  v12[1] = v22;
  char v23 = 2;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  void v12[2] = v22;
  type metadata accessor for UUID();
  LOBYTE(v22) = 3;
  sub_100342C5C();
  uint64_t v14 = (uint64_t)v18;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v9, v13);
  sub_1002729C8(v14, (uint64_t)v12 + *(int *)(v17 + 28));
  sub_100342CB4((uint64_t)v12, v19);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  return sub_100342D18((uint64_t)v12);
}

uint64_t sub_100342AC8()
{
  uint64_t result = 1684628325;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x644970696863;
      break;
    case 2:
      uint64_t result = 0x754E6C6169726573;
      break;
    case 3:
      uint64_t result = 0x6449616E6D66;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100342B50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100342F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100342B78(uint64_t a1)
{
  unint64_t v2 = sub_100342C08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100342BB4(uint64_t a1)
{
  unint64_t v2 = sub_100342C08();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100342BF0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100342708(a1, a2);
}

unint64_t sub_100342C08()
{
  unint64_t result = qword_101641D98;
  if (!qword_101641D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641D98);
  }
  return result;
}

unint64_t sub_100342C5C()
{
  unint64_t result = qword_10163B010;
  if (!qword_10163B010)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10163B010);
  }
  return result;
}

uint64_t sub_100342CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AirPodsLEPairingLockAckResponse();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100342D18(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AirPodsLEPairingLockAckResponse();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for AirPodsLEPairingLockAckResponse.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100342E40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsLEPairingLockAckResponse.CodingKeys()
{
  return &type metadata for AirPodsLEPairingLockAckResponse.CodingKeys;
}

unint64_t sub_100342E7C()
{
  unint64_t result = qword_101641DA0;
  if (!qword_101641DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641DA0);
  }
  return result;
}

unint64_t sub_100342ED4()
{
  unint64_t result = qword_101641DA8;
  if (!qword_101641DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641DA8);
  }
  return result;
}

unint64_t sub_100342F2C()
{
  unint64_t result = qword_101641DB0;
  if (!qword_101641DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641DB0);
  }
  return result;
}

uint64_t sub_100342F80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684628325 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644970696863 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449616E6D66 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_100343134(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  v2[9] = type metadata accessor for AccessoryUnpairData();
  v2[10] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for HashAlgorithm();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  return _swift_task_switch(sub_100343280, 0, 0);
}

void sub_100343280()
{
  unint64_t v1 = sub_10092D8F8((uint64_t)_swiftEmptyArrayStorage);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(1702195828, 0xE400000000000000, 0xD00000000000001BLL, 0x80000001013F64C0, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  id v3 = [self currentDevice];
  if (!v3)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v3;
  id v5 = [v3 serverFriendlyDescription];

  if (!v5)
  {
LABEL_7:
    __break(1u);
    return;
  }
  uint64_t v6 = v0[15];
  uint64_t v7 = v0[16];
  uint64_t v8 = v0[14];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v11 = v10;

  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v9, v11, 0xD000000000000011, 0x80000001013F64E0, v12);
  unint64_t v13 = v1;
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v14 = Date.epoch.getter();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  v0[4] = v14;
  uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v17 = v16;
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v15, v17, 0xD000000000000015, 0x80000001013F6500, v18);
  swift_bridgeObjectRelease();
  v0[5] = 1;
  uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v21 = v20;
  char v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v19, v21, 0xD000000000000013, 0x80000001013F6520, v22);
  unint64_t v23 = v13;
  uint64_t v24 = swift_bridgeObjectRelease();
  uint64_t v25 = sub_100BCABFC(v24);
  uint64_t v27 = v26;
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016C0FC(v25, v27, 0x6567412D72657355, 0xEA0000000000746ELL, v28);
  v0[17] = v23;
  swift_bridgeObjectRelease();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  v0[18] = JSONEncoder.init()();
  sub_100344424();
  uint64_t v29 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  v0[19] = v29;
  v0[20] = v30;
  sub_1000361E0(v29, v30);
  uint64_t v32 = (void (__cdecl *)())((char *)&dword_10165AC10 + dword_10165AC10);
  uint64_t v31 = (void *)swift_task_alloc();
  v0[21] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100343748;
  v32();
}

uint64_t sub_100343748(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = a2;
  swift_task_dealloc();
  return _swift_task_switch(sub_100343848, 0, 0);
}

uint64_t sub_100343848()
{
  uint64_t v2 = v0[22];
  unint64_t v1 = v0[23];
  uint64_t v4 = v0[19];
  unint64_t v3 = v0[20];
  uint64_t v6 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v7 = v0[11];
  v0[2] = v2;
  v0[3] = v1;
  sub_1000361E0(v4, v3);
  sub_1000361E0(v2, v1);
  sub_100A42CBC(v4, v3);
  sub_10001CFB8(v4, v3);
  sub_10001CFB8(v2, v1);
  uint64_t v8 = v0[3];
  v0[24] = v0[2];
  v0[25] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for HashAlgorithm.sha256(_:), v7);
  uint64_t v9 = Data.hash(algorithm:)();
  uint64_t v11 = v10;
  v0[26] = v9;
  v0[27] = v10;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10165AC08 + dword_10165AC08);
  char v12 = (void *)swift_task_alloc();
  v0[28] = v12;
  *char v12 = v0;
  v12[1] = sub_1003439D0;
  uint64_t v13 = v0[8];
  return v15(v9, v11, v13);
}

uint64_t sub_1003439D0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 232) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100343F6C;
  }
  else
  {
    uint64_t v6 = v4[26];
    unint64_t v7 = v4[27];
    v4[30] = a1;
    sub_10001CFB8(v6, v7);
    uint64_t v5 = sub_100343AFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100343AFC()
{
  Swift::String v43 = v0;
  uint64_t v2 = v0[29];
  uint64_t v1 = v0[30];
  unint64_t v3 = (unsigned char *)v0[17];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v42 = v3;
  sub_1001EE9C8(v1, (uint64_t)sub_100BD6E00, 0, isUniquelyReferenced_nonNull_native, &v42);
  if (v2)
  {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = v0[24];
  unint64_t v6 = v0[25];
  uint64_t v36 = v0;
  uint64_t v8 = v42;
  swift_bridgeObjectRelease();
  sub_10001CFB8(v7, v6);
  static os_log_type_t.debug.getter();
  if (qword_101637308 != -1) {
LABEL_31:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  uint64_t v37 = v8 + 64;
  uint64_t v9 = -1;
  uint64_t v10 = -1 << v8[32];
  if (-v10 < 64) {
    uint64_t v9 = ~(-1 << -(char)v10);
  }
  unint64_t v11 = v9 & *((void *)v8 + 8);
  int64_t v38 = (unint64_t)(63 - v10) >> 6;
  Swift::String v41 = v8;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v8 = &type metadata for String;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_10;
    }
    int64_t v24 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    if (v24 >= v38) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)&v37[8 * v24];
    ++v12;
    if (!v25)
    {
      int64_t v12 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)&v37[8 * v12];
      if (!v25)
      {
        int64_t v12 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_26;
        }
        unint64_t v25 = *(void *)&v37[8 * v12];
        if (!v25) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v12 << 6);
LABEL_10:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*((void *)v41 + 6) + v15);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = (uint64_t *)(*((void *)v41 + 7) + v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static os_log_type_t.debug.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_101347BA0;
    *(void *)(v22 + 56) = &type metadata for String;
    unint64_t v23 = sub_10000B4CC();
    *(void *)(v22 + 32) = v17;
    *(void *)(v22 + 40) = v18;
    *(void *)(v22 + 96) = &type metadata for String;
    *(void *)(v22 + 104) = v23;
    *(void *)(v22 + 64) = v23;
    *(void *)(v22 + 72) = v20;
    *(void *)(v22 + 80) = v21;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  int64_t v26 = v24 + 3;
  if (v26 < v38)
  {
    unint64_t v25 = *(void *)&v37[8 * v26];
    if (!v25)
    {
      while (1)
      {
        int64_t v12 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_30;
        }
        if (v12 >= v38) {
          goto LABEL_26;
        }
        unint64_t v25 = *(void *)&v37[8 * v12];
        ++v26;
        if (v25) {
          goto LABEL_25;
        }
      }
    }
    int64_t v12 = v26;
    goto LABEL_25;
  }
LABEL_26:
  uint64_t v39 = v36[19];
  unint64_t v40 = v36[20];
  uint64_t v27 = v36[10];
  uint64_t v28 = v36[7];
  swift_release();
  static os_log_type_t.debug.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_101342130;
  sub_10034447C(v28, v27);
  uint64_t v30 = String.init<A>(describing:)();
  uint64_t v32 = v31;
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = sub_10000B4CC();
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v32;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10001CFB8(v39, v40);
  sub_100344520(v28);
  uint64_t v34 = v36[19];
  uint64_t v33 = v36[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v35 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v36[1];
  return v35(v41, v34, v33);
}

uint64_t sub_100343F6C()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[24];
  unint64_t v3 = v0[25];
  sub_10001CFB8(v0[26], v0[27]);
  sub_10001CFB8(v2, v3);
  static os_log_type_t.error.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101342130;
  uint64_t v36 = v0;
  v0[6] = v1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v5 = String.init<A>(describing:)();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v8 = sub_10000B4CC();
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  sub_1003444E0();
  uint64_t v9 = (void *)static OS_os_log.default.getter();
  os_log(_:dso:log:_:_:)();

  swift_bridgeObjectRelease();
  swift_errorRelease();
  uint64_t v10 = v0[17];
  static os_log_type_t.debug.getter();
  if (qword_101637308 != -1) {
LABEL_27:
  }
    swift_once();
  os_log(_:dso:log:_:_:)();
  uint64_t v37 = v10 + 64;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v10 + 64);
  int64_t v38 = (unint64_t)(63 - v12) >> 6;
  uint64_t v41 = v10;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_6;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v38) {
      goto LABEL_22;
    }
    unint64_t v25 = *(void *)(v37 + 8 * v24);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v38) {
        goto LABEL_22;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v14 = v24 + 2;
        if (v24 + 2 >= v38) {
          goto LABEL_22;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v14);
        if (!v25) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_6:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v41 + 48) + v17);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = (uint64_t *)(*(void *)(v41 + 56) + v17);
    uint64_t v10 = *v21;
    uint64_t v22 = v21[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    static os_log_type_t.debug.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_101347BA0;
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 64) = v8;
    *(void *)(v23 + 32) = v19;
    *(void *)(v23 + 40) = v20;
    *(void *)(v23 + 96) = &type metadata for String;
    *(void *)(v23 + 104) = v8;
    *(void *)(v23 + 72) = v10;
    *(void *)(v23 + 80) = v22;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
  }
  int64_t v26 = v24 + 3;
  if (v26 < v38)
  {
    unint64_t v25 = *(void *)(v37 + 8 * v26);
    if (!v25)
    {
      while (1)
      {
        int64_t v14 = v26 + 1;
        if (__OFADD__(v26, 1)) {
          goto LABEL_26;
        }
        if (v14 >= v38) {
          goto LABEL_22;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v14);
        ++v26;
        if (v25) {
          goto LABEL_21;
        }
      }
    }
    int64_t v14 = v26;
    goto LABEL_21;
  }
LABEL_22:
  uint64_t v39 = v36[19];
  unint64_t v40 = v36[20];
  uint64_t v27 = v36[10];
  uint64_t v28 = v36[7];
  swift_release();
  static os_log_type_t.debug.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_101342130;
  sub_10034447C(v28, v27);
  uint64_t v30 = String.init<A>(describing:)();
  *(void *)(v29 + 56) = &type metadata for String;
  *(void *)(v29 + 64) = v8;
  *(void *)(v29 + 32) = v30;
  *(void *)(v29 + 40) = v31;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10001CFB8(v39, v40);
  sub_100344520(v28);
  uint64_t v33 = v36[19];
  uint64_t v32 = v36[20];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v36[1];
  return v34(v41, v33, v32);
}

unint64_t sub_100344424()
{
  unint64_t result = qword_101641DC0;
  if (!qword_101641DC0)
  {
    type metadata accessor for AccessoryUnpairData();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641DC0);
  }
  return result;
}

uint64_t sub_10034447C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessoryUnpairData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1003444E0()
{
  unint64_t result = qword_10163AE70;
  if (!qword_10163AE70)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10163AE70);
  }
  return result;
}

uint64_t sub_100344520(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccessoryUnpairData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for AccessoryUnpairRequest()
{
  return &type metadata for AccessoryUnpairRequest;
}

uint64_t destroy for FamilyMember()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FamilyMember(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FamilyMember(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FamilyMember(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FamilyMember()
{
  return &type metadata for FamilyMember;
}

unint64_t sub_1003447D0()
{
  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  swift_bridgeObjectRetain();
  v3._countAndFlagsBits = v1;
  v3._object = v2;
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x4449656C70706120;
  v4._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v4);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v7._countAndFlagsBits = v5;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x203A654D736920;
  v8._object = (void *)0xE700000000000000;
  String.append(_:)(v8);
  if (*(unsigned char *)(v0 + 32)) {
    uint64_t v9 = 1702195828;
  }
  else {
    uint64_t v9 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + 32)) {
    unint64_t v10 = 0xE400000000000000;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  unint64_t v11 = v10;
  String.append(_:)(*(Swift::String *)&v9);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 62;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  return 0xD000000000000017;
}

Swift::Int sub_100344910()
{
  return Hasher._finalize()();
}

uint64_t sub_10034495C()
{
  return String.hash(into:)();
}

Swift::Int sub_100344964()
{
  return Hasher._finalize()();
}

uint64_t sub_1003449B0(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100344A74((uint64_t)v7, (uint64_t)v9) & 1;
}

unint64_t sub_100344A20()
{
  unint64_t result = qword_101641DC8;
  if (!qword_101641DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101641DC8);
  }
  return result;
}

uint64_t sub_100344A74(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v5 & 1) == 0) {
      return result;
    }
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = 0;
    if ((v8 & 1) == 0) {
      return result;
    }
  }
  if ((*(unsigned __int8 *)(a1 + 32) ^ *(unsigned __int8 *)(a2 + 32))) {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a2 + 48);
  if (v9)
  {
    if (!v10) {
      return 0;
    }
    if (*(void *)(a1 + 40) != *(void *)(a2 + 40) || v9 != v10)
    {
      char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = 0;
      if ((v11 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v10)
  {
    return 0;
  }
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a2 + 64);
  if (!v12)
  {
    if (v13) {
      return 0;
    }
    goto LABEL_28;
  }
  if (!v13) {
    return 0;
  }
  if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && v12 == v13
    || (v14 = _stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = 0, (v14 & 1) != 0))
  {
LABEL_28:
    uint64_t v15 = *(void *)(a1 + 80);
    uint64_t v16 = *(void *)(a2 + 80);
    if (v15)
    {
      if (!v16
        || (*(void *)(a1 + 72) != *(void *)(a2 + 72) || v15 != v16)
        && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        return 0;
      }
    }
    else if (v16)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t sub_100344BCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_1007240CC(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(a2, v9 + *(void *)(v11 + 72) * v8, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  }
  else
  {
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  return swift_endAccess();
}

uint64_t sub_100344D28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s22SharedBeaconUUIDMapperCMa()
{
  return self;
}

uint64_t sub_100344D8C(uint64_t a1, uint64_t a2)
{
  v2[11] = a1;
  v2[12] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  return _swift_task_switch(sub_100344EA8, 0, 0);
}

uint64_t sub_100344EA8()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100344F4C;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_100344F4C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[20] = a1;
  v3[21] = v1;
  swift_task_dealloc();
  uint64_t v5 = (uint64_t)(v3 + 2);
  if (v1)
  {
    sub_10001DAB4(v5, &qword_10163BDE0);
    return _swift_task_switch(sub_100345208, 0, 0);
  }
  else
  {
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = (void *)swift_task_alloc();
    v3[22] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1003450F4;
    uint64_t v7 = v3[11];
    uint64_t v8 = v3[12];
    return sub_100587C78(v7, v8);
  }
}

uint64_t sub_1003450F4()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003455C8;
  }
  else {
    uint64_t v2 = sub_100345278;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100345208()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100345278()
{
  uint64_t v32 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v2 = v0 + 11;
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v30 = v0;
  uint64_t v6 = v0[15];
  uint64_t v5 = v2[5];
  uint64_t v8 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[1];
  uint64_t v10 = type metadata accessor for Logger();
  sub_100010324(v10, (uint64_t)qword_10170D788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v15 = v2[6];
  uint64_t v14 = v2[7];
  uint64_t v16 = v2[4];
  uint64_t v18 = v2[2];
  uint64_t v17 = v2[3];
  if (v13)
  {
    os_log_t log = v11;
    uint64_t v19 = v30;
    uint64_t v27 = v2[5];
    uint64_t v28 = v2[2];
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315651;
    uint64_t v21 = URL.absoluteString.getter();
    v30[8] = sub_1008FA0F0(v21, v22, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v27);
    *(_WORD *)(v20 + 12) = 2160;
    v30[9] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 22) = 2081;
    sub_10028B80C();
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v30[10] = sub_1008FA0F0(v23, v24, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v28);
    _os_log_impl((void *)&_mh_execute_header, log, v12, "URL is: %s for beacon ID %{private,mask.hash}s", (uint8_t *)v20, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    (*(void (**)(void, void))(v15 + 8))(v2[7], v2[5]);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_release();

    uint64_t v19 = v30;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v25 = (uint64_t (*)(void))v19[1];
  return v25();
}

uint64_t sub_1003455C8()
{
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170D788);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138543362;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "checkDelegatedShare error: %{public}@", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003457E4(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 144) = v2;
  void *v2 = v1;
  v2[1] = sub_10034588C;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10034588C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 152) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_1003459C0, 0, 0);
  }
}

uint64_t sub_1003459C0()
{
  uint64_t v1 = v0[19];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[20] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[21] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100345AC4;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100345AC4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100345DD8;
  }
  else
  {
    *(void *)(v4 + 192) = a1;
    uint64_t v5 = sub_100345BEC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100345BEC()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[25] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100345CB0;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100345CB0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100346118;
  }
  else
  {
    *(void *)(v4 + 224) = a1;
    uint64_t v5 = sub_100345E44;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100345DD8()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100345E44()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[19];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  v0[29] = sub_10034E920(v4, v9, v1, v5, v3);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[30] = v10;
  void *v10 = v0;
  v10[1] = sub_100345FF0;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100345FF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 248) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100346374;
  }
  else
  {
    *(void *)(v4 + 256) = a1;
    uint64_t v5 = sub_100346190;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100346118()
{
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100346190()
{
  uint64_t v1 = v0[32];
  v0[10] = v0[25];
  v0[11] = &off_1015F0C30;
  v0[7] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[33] = v2;
  void *v2 = v0;
  v2[1] = sub_10034624C;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_10034624C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100346738;
  }
  else
  {
    *(void *)(v4 + 280) = a1;
    uint64_t v5 = sub_1003463EC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100346374()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003463EC()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = sub_1000BD078(v0 + 56, v2);
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v5, v3, v2);
  uint64_t v6 = *v5;
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_10034ECCC(v7, v6, v1);
  *(void *)(v0 + 288) = v8;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 232);
  sub_10001D010(*(void *)(v0 + 136), v0 + 96);
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 296) = v10;
  *(void *)(v10 + 16) = v9;
  sub_10001CEB0((long long *)(v0 + 96), v10 + 24);
  *(void *)(v10 + 64) = v8;
  BOOL v13 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100346608;
  return v13(&unk_1016420B0, v10);
}

uint64_t sub_100346608()
{
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100346850;
  }
  else {
    uint64_t v2 = sub_1003467C4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100346738()
{
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003467C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100346850()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003468DC()
{
  uint64_t v0 = type metadata accessor for UUID();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  uint64_t result = WorkItemQueue.__allocating_init(name:identifier:)();
  qword_101641E78 = result;
  return result;
}

uint64_t sub_10034697C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100033F68;
  return sub_100F8B5BC(a2, a3, a4);
}

uint64_t sub_100346A30(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_100033F68;
  return sub_1012B1980(a2, a3, a4);
}

uint64_t sub_100346AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _OWORD v7[7] = a6;
  v7[8] = a7;
  _OWORD v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  v7[9] = sub_10000588C(&qword_10163B938);
  v7[10] = swift_task_alloc();
  v7[11] = sub_10000588C(&qword_10163B940);
  v7[12] = swift_task_alloc();
  return _swift_task_switch(sub_100346BBC, 0, 0);
}

uint64_t sub_100346BBC()
{
  uint64_t v1 = *(int **)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(int **)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v59 = v1[12];
  uint64_t v7 = v1[16];
  uint64_t v8 = v2 + v7;
  uint64_t v9 = v1[20];
  uint64_t v57 = (uint64_t *)(v2 + v9);
  uint64_t v50 = v1[24];
  uint64_t v10 = v1[28];
  uint64_t v52 = (uint64_t *)(v2 + v10);
  uint64_t v11 = v6 + v7;
  long long v61 = (uint64_t *)(v6 + v9);
  uint64_t v48 = (uint64_t *)(v6 + v10);
  uint64_t v12 = type metadata accessor for UUID();
  *(void *)(v0 + 104) = v12;
  uint64_t v51 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  *(void *)(v0 + 112) = v13;
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v14(v2, v6, v12);
  uint64_t v15 = v14;
  char v56 = *(unsigned char *)(v6 + v59);
  *(unsigned char *)(v2 + v59) = v56;
  uint64_t v55 = *(void *)(v11 + 8);
  uint64_t v60 = *(void *)(v11 + 16);
  char v16 = *(unsigned char *)v11;
  char v54 = *(unsigned char *)v11;
  *(void *)(v0 + 120) = v60;
  *(unsigned char *)uint64_t v8 = v16;
  *(void *)(v8 + 8) = v55;
  *(void *)(v8 + 16) = v60;
  uint64_t v53 = *v61;
  uint64_t v62 = v61[1];
  *(void *)(v0 + 128) = v62;
  *uint64_t v57 = v53;
  v57[1] = v62;
  uint64_t v58 = *(void *)(v6 + v50);
  *(void *)(v0 + 136) = v58;
  *(void *)(v2 + v50) = v58;
  uint64_t v17 = *v48;
  *(void *)(v0 + 144) = *v48;
  unint64_t v45 = v48[1];
  uint64_t v46 = v17;
  *(void *)(v0 + 152) = v45;
  uint64_t *v52 = v17;
  v52[1] = v45;
  uint64_t v18 = v4[12];
  *(_DWORD *)(v0 + 200) = v18;
  uint64_t v19 = v3 + v18;
  uint64_t v20 = v4[16];
  uint64_t v21 = (void *)(v3 + v20);
  uint64_t v22 = v4[20];
  uint64_t v49 = (void *)(v3 + v22);
  uint64_t v23 = v4[24];
  uint64_t v47 = (void *)(v3 + v23);
  uint64_t v43 = v4[32];
  uint64_t v44 = v4[28];
  uint64_t v24 = v4[40];
  uint64_t v25 = v5 + v18;
  uint64_t v41 = v4[36];
  uint64_t v42 = (void *)(v3 + v24);
  int64_t v26 = (uint64_t *)(v5 + v20);
  uint64_t v27 = (uint64_t *)(v5 + v22);
  uint64_t v28 = (uint64_t *)(v5 + v23);
  unint64_t v40 = (uint64_t *)(v5 + v24);
  v15(v3, v5, v51);
  sub_10001D074(v25, v19, &qword_101638CF0);
  uint64_t v30 = v26[1];
  uint64_t v29 = *v26;
  *(void *)(v0 + 160) = v30;
  *uint64_t v21 = v29;
  v21[1] = v30;
  uint64_t v32 = v27[1];
  uint64_t v31 = *v27;
  *(void *)(v0 + 168) = v32;
  *uint64_t v49 = v31;
  v49[1] = v32;
  uint64_t v34 = v28[1];
  uint64_t v33 = *v28;
  *(void *)(v0 + 176) = v34;
  *uint64_t v47 = v33;
  v47[1] = v34;
  *(_DWORD *)(v3 + v44) = *(_DWORD *)(v5 + v44);
  *(_DWORD *)(v3 + v43) = *(_DWORD *)(v5 + v43);
  *(void *)(v3 + v41) = *(void *)(v5 + v41);
  uint64_t v36 = *v40;
  uint64_t v35 = v40[1];
  *(void *)(v0 + 184) = v35;
  *uint64_t v42 = v36;
  v42[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v46, v45);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_100346F88;
  uint64_t v38 = *(void *)(v0 + 96);
  return sub_100F97DFC(v38, v56, v54, v55, v60, v53, v62, v58);
}

uint64_t sub_100346F88()
{
  unint64_t v1 = *(void *)(*v0 + 152);
  uint64_t v2 = *(void *)(*v0 + 144);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 104);
  uint64_t v5 = *(void *)(*v0 + 96);
  uint64_t v6 = *(void *)(*v0 + 80);
  uint64_t v10 = v6 + *(int *)(*v0 + 200);
  uint64_t v11 = *v0;
  swift_task_dealloc();
  sub_10001CFB8(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001DAB4(v10, &qword_101638CF0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(v6, v4);
  v7(v5, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v11 + 8);
  return v8();
}

uint64_t sub_100347250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a3;
  v4[3] = a4;
  sub_10000588C(&qword_101649E40);
  v4[4] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v4[5] = v6;
  v4[6] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v4[7] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v4[8] = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_10034738C;
  return sub_100580558(v7, a2);
}

uint64_t sub_10034738C()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003475A8;
  }
  else {
    uint64_t v2 = sub_1003474A0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003474A0()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = (void (*)(uint64_t, void))v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  v5(v4, 0);
  sub_10001DAB4(v4, &qword_101649E40);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1003475A8()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[4];
  uint64_t v3 = (void (*)(uint64_t, uint64_t))v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0[6] + 56))(v2, 1, 1, v0[5]);
  swift_errorRetain();
  v3(v2, v1);
  swift_errorRelease();
  swift_errorRelease();
  sub_10001DAB4(v2, &qword_101649E40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100347684()
{
  return _swift_task_switch(sub_1003476A0, 0, 0);
}

uint64_t sub_1003476A0()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100347744;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_100347744(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v3[8] = a1;
  v3[9] = v1;
  swift_task_dealloc();
  uint64_t v5 = (uint64_t)(v3 + 2);
  if (v1)
  {
    sub_10001DAB4(v5, &qword_10163BDE0);
    return _swift_task_switch(sub_1003479FC, 0, 0);
  }
  else
  {
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = (void *)swift_task_alloc();
    v3[10] = v6;
    *uint64_t v6 = v4;
    v6[1] = sub_1003478E8;
    return sub_10058B770();
  }
}

uint64_t sub_1003478E8()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100347A78;
  }
  else {
    uint64_t v2 = sub_100347A14;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003479FC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_100347A14()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100347A78()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100347ADC(uint64_t a1, uint64_t a2)
{
  v2[5] = a2;
  sub_10000588C(&qword_101638CF0);
  v2[6] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[7] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100347BB8;
  return sub_10058BF9C(a2, 0, 0, 0);
}

uint64_t sub_100347BB8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_100347D04, 0, 0);
  }
}

uint64_t sub_100347D04()
{
  if (qword_101637648 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  swift_beginAccess();
  sub_101126F68(v1, v2);
  swift_endAccess();
  sub_10001DAB4(v2, &qword_101638CF0);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100347DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_100589CDC(a2);
}

uint64_t sub_100347E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_100588D50(a2);
}

uint64_t sub_100347F24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v5;
  *uint64_t v5 = v3;
  v5[1] = sub_100347FC4;
  return sub_100598DA8(a3);
}

uint64_t sub_100347FC4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003480C4, 0, 0);
}

uint64_t sub_1003480C4()
{
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003480E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  sub_10000588C(&qword_101638CF0);
  v5[10] = swift_task_alloc();
  return _swift_task_switch(sub_100348184, 0, 0);
}

uint64_t sub_100348184()
{
  if (v0[5])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1003482FC;
    uint64_t v2 = v0[8];
    uint64_t v3 = v0[9];
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    return sub_1005992C0(v5, v4, v2, v3);
  }
  else
  {
    uint64_t v7 = *(int *)(type metadata accessor for OwnerSharingCircle() + 24);
    if (qword_101637648 != -1) {
      swift_once();
    }
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[6] + v7;
    swift_beginAccess();
    sub_101126F68(v9, v8);
    swift_endAccess();
    sub_10001DAB4(v8, &qword_101638CF0);
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1003482FC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003483F8, 0, 0);
}

uint64_t sub_1003483F8()
{
  uint64_t v1 = *(int *)(type metadata accessor for OwnerSharingCircle() + 24);
  if (qword_101637648 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[6] + v1;
  swift_beginAccess();
  sub_101126F68(v3, v2);
  swift_endAccess();
  sub_10001DAB4(v2, &qword_101638CF0);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003484F4(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v4 = (void *)swift_task_alloc();
  v2[4] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100348594;
  return sub_10059829C(a2);
}

uint64_t sub_100348594()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v2 + 40) = v6;
    *uint64_t v6 = v3;
    v6[1] = sub_10001CBC4;
    uint64_t v7 = *(void *)(v2 + 24);
    return sub_100598838(v7);
  }
}

uint64_t sub_100348708()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100033F68;
  return sub_1005944CC();
}

uint64_t sub_100348798(uint64_t a1)
{
  v1[24] = a1;
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v1[25] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[26] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[27] = v3;
  v1[28] = *(void *)(v3 + 64);
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = sub_10000588C((uint64_t *)&unk_101638D10);
  v1[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for OwnerSharingCircle();
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  sub_10000588C(&qword_101641FB0);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v1[38] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_1003489B4;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_1003489B4(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 312) = a1;
    return _swift_task_switch(sub_100348B58, a1, 0);
  }
}

uint64_t sub_100348B58()
{
  *(void *)(v0 + 320) = *(void *)(*(void *)(v0 + 312) + 136);
  swift_retain();
  return _swift_task_switch(sub_100348BCC, 0, 0);
}

uint64_t sub_100348BCC()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[41] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  v0[43] = v5;
  *uint64_t v4 = v0;
  v4[1] = sub_100348CE4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 20, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DAA8, v3, v5);
}

uint64_t sub_100348CE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 312);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 352) = *(void *)(v1 + 160);
  return _swift_task_switch(sub_100348E40, v2, 0);
}

uint64_t sub_100348E40()
{
  swift_release();
  return _swift_task_switch(sub_100348EA8, 0, 0);
}

uint64_t sub_100348EA8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  v0[45] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100348F54;
  uint64_t v2 = v0[37];
  uint64_t v3 = v0[24];
  return sub_10064EF3C(v2, v3);
}

uint64_t sub_100348F54()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003492E4;
  }
  else {
    uint64_t v2 = sub_100349068;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100349068()
{
  uint64_t v1 = *(void *)(v0 + 288);
  sub_10001D608(*(void *)(v0 + 296), v1, &qword_101641FB0);
  uint64_t v2 = type metadata accessor for DelegatedBeaconMetadata(0);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 288);
  if (v3 == 1)
  {
    sub_10001DAB4(v4, &qword_101641FB0);
    swift_release();
LABEL_4:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
  char v5 = *(unsigned char *)(v4 + *(int *)(v2 + 32));
  sub_10036574C(v4, type metadata accessor for DelegatedBeaconMetadata);
  swift_release();
  if (v5) {
    goto LABEL_4;
  }
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 56);
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    uint64_t v9 = (uint64_t (*)(void))((char *)&dword_1016391F8 + dword_1016391F8);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1003493A8;
    return v9();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003492E4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003493A8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003494A8, 0, 0);
}

uint64_t sub_1003494A8()
{
  uint64_t v1 = v0 + 56;
  if (*(void *)(v0 + 384))
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    *(void *)(v0 + 48) = 0;
    *(_OWORD *)(v0 + 32) = 0u;
    *(_OWORD *)(v0 + 16) = 0u;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v2;
    void *v2 = v0;
    v2[1] = sub_1003495F4;
    return sub_1003508DC(v0 + 16);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1003495F4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[50] = a1;
  v3[51] = v1;
  swift_task_dealloc();
  sub_10001DAB4((uint64_t)(v3 + 2), &qword_10163BDE0);
  if (v1)
  {
    uint64_t v4 = sub_1003498A0;
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[52] = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_10034976C;
    uint64_t v4 = sub_1002703EC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10034976C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 424) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10034A05C;
    uint64_t v6 = 0;
  }
  else
  {
    *(void *)(v4 + 432) = a1;
    uint64_t v5 = sub_100349964;
    uint64_t v6 = a1;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_1003498A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100349964()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[30];
  uint64_t v3 = v0[27];
  uint64_t v4 = v0[26];
  uint64_t v5 = v0[24];
  v0[55] = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[56] = v6;
  v0[57] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  v0[58] = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_100349A68, 0, 0);
}

uint64_t sub_100349A68()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[55];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[59] = v3;
  v3[2] = v2;
  v3[3] = sub_1003656D8;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[60] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100349B70;
  uint64_t v6 = v0[31];
  uint64_t v5 = v0[32];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100090D14, v3, v6);
}

uint64_t sub_100349B70()
{
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100349CC8, 0, 0);
}

uint64_t sub_100349CC8()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[32];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[34] + 48))(v1, 1, v0[33]) == 1)
  {
    sub_10001DAB4(v1, (uint64_t *)&unk_101638D10);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
    uint64_t v3 = v0[29];
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[24];
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170D788);
    v2(v3, v5, v4);
    unint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = v0[29];
    uint64_t v11 = v0[26];
    uint64_t v12 = v0[27];
    if (v9)
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 141558275;
      v0[21] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v13 + 12) = 2081;
      sub_10028B80C();
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[22] = sub_1008FA0F0(v14, v15, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "    HandleMaxViewsNotification - delegated circle not found withshareIdentifier %{private,mask.hash}s.", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(v0[29], v0[26]);
      swift_release();
    }
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  else
  {
    sub_10036788C(v1, v0[35], (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    char v16 = (void *)swift_task_alloc();
    v0[61] = v16;
    *char v16 = v0;
    v16[1] = sub_10034A12C;
    uint64_t v17 = v0[35];
    return sub_100B93574(v17);
  }
}

uint64_t sub_10034A05C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034A12C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 496) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10034AC1C;
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v2 + 504) = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10034A284;
    uint64_t v3 = sub_1002703EC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10034A284(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 512) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10034A948;
    uint64_t v6 = 0;
  }
  else
  {
    *(void *)(v4 + 520) = a1;
    uint64_t v5 = sub_10034A3B8;
    uint64_t v6 = a1;
  }
  return _swift_task_switch(v5, v6, 0);
}

uint64_t sub_10034A3B8()
{
  *(void *)(v0 + 528) = *(void *)(*(void *)(v0 + 520) + 136);
  swift_retain();
  return _swift_task_switch(sub_10034A42C, 0, 0);
}

uint64_t sub_10034A42C()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[65];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[67] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[68] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10034A53C;
  uint64_t v5 = v0[43];
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 23, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DD1C, v3, v5);
}

uint64_t sub_10034A53C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 520);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 552) = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10034A698, v2, 0);
}

uint64_t sub_10034A698()
{
  swift_release();
  return _swift_task_switch(sub_10034A700, 0, 0);
}

uint64_t sub_10034A700()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[70] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10034A800;
  uint64_t v5 = v0[24];
  uint64_t v4 = v0[25];
  return sub_10065013C(v5, 0, 1, v4, 0, 0xF000000000000000, 1);
}

uint64_t sub_10034A800()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 200);
  *(void *)(*(void *)v1 + 568) = v0;
  swift_task_dealloc();
  sub_10001DAB4(v2, (uint64_t *)&unk_10163AC90);
  if (v0)
  {
    uint64_t v3 = sub_10034AB20;
  }
  else
  {
    swift_release();
    uint64_t v3 = sub_10034AA38;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10034A948()
{
  uint64_t v1 = *(void *)(v0 + 280);
  swift_release();
  swift_release();
  sub_10036574C(v1, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10034AA38()
{
  uint64_t v1 = *(void *)(v0 + 280);
  swift_release();
  swift_release();
  sub_10036574C(v1, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10034AB20()
{
  uint64_t v1 = *(void *)(v0 + 280);
  swift_release();
  swift_release();
  swift_release();
  sub_10036574C(v1, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10034AC1C()
{
  uint64_t v1 = *(void *)(v0 + 280);
  swift_release();
  swift_release();
  sub_10036574C(v1, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10034AD0C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_100033F68;
  return sub_1005977B0(a2, a3, a4, a5);
}

uint64_t sub_10034ADD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_100584338(a2);
}

uint64_t sub_10034AE6C(uint64_t a1, uint64_t a2)
{
  v2[13] = a1;
  v2[14] = a2;
  sub_10000588C(&qword_101638CF0);
  v2[15] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v2[16] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10034AF44;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10034AF44(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 136) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    BOOL v9 = (uint64_t (*)(uint64_t))((char *)&dword_1016706E8 + dword_1016706E8);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v4 + 144) = v8;
    *uint64_t v8 = v5;
    v8[1] = sub_10034B0E0;
    return v9(a1);
  }
}

uint64_t sub_10034B0E0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10034B1DC, 0, 0);
}

uint64_t sub_10034B1DC()
{
  if (qword_101637648 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 104);
  swift_beginAccess();
  uint64_t v2 = qword_1016706C8;
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_100DC7280(v1, v2);
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0) {
    goto LABEL_10;
  }
  if (qword_101637680 != -1) {
    swift_once();
  }
  swift_retain();
  AnyCurrentValuePublisher.value.getter();
  swift_release();
  if (*(unsigned char *)(v0 + 192) == 1)
  {
    sub_10001D010(*(void *)(v0 + 112), v0 + 16);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10034B3B0;
    return sub_1003508DC(v0 + 16);
  }
  else
  {
LABEL_10:
    swift_release();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_10034B3B0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  uint64_t v5 = *v2;
  *(void *)(*v2 + 160) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    sub_10001DAB4(v4, &qword_10163BDE0);
    return _swift_task_switch(sub_10034B6F4, 0, 0);
  }
  else
  {
    sub_10001DAB4(v4, &qword_10163BDE0);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v3 + 168) = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_10034B57C;
    uint64_t v7 = *(void *)(v3 + 104);
    return sub_10058BF9C(v7, 0, 0, 1);
  }
}

uint64_t sub_10034B57C()
{
  uint64_t v2 = (void *)*v1;
  v2[22] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10034B9F8, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v2[23] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_10034B820;
    uint64_t v4 = v2[20];
    uint64_t v5 = v2[17];
    uint64_t v6 = v2[13];
    return sub_100365980(v6, v4, v5);
  }
}

uint64_t sub_10034B6F4()
{
  if (qword_101636B18 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170DED0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "DelegatedShareUseCase not available", v4, 2u);
    swift_slowDealloc();
  }

  swift_release();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10034B820()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10034B91C, 0, 0);
}

uint64_t sub_10034B91C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_beginAccess();
  sub_101126F68(v2, v1);
  swift_endAccess();
  sub_10001DAB4(v1, &qword_101638CF0);
  swift_release();
  swift_release();
  swift_task_dealloc();
  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10034B9F8()
{
  if (qword_101636B18 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170DED0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to stop delegation ", v4, 2u);
    swift_slowDealloc();
  }
  swift_errorRelease();

  uint64_t v5 = (void *)swift_task_alloc();
  v0[23] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10034B820;
  uint64_t v6 = v0[20];
  uint64_t v7 = v0[17];
  uint64_t v8 = v0[13];
  return sub_100365980(v8, v6, v7);
}

uint64_t sub_10034BB58(uint64_t a1)
{
  v1[5] = a1;
  uint64_t v2 = type metadata accessor for UUID();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v1[10] = swift_task_alloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  v1[11] = v3;
  *os_log_type_t v3 = v1;
  v3[1] = sub_10034BC9C;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10034BC9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10034BDF8, 0, 0);
  }
}

uint64_t sub_10034BDF8()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[5];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[13] = v5;
  v0[14] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10034BEF0;
  uint64_t v7 = v0[10];
  return sub_100E5C1B8(v7, 1);
}

uint64_t sub_10034BEF0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  sub_10001DAB4(v2, &qword_101638CF0);
  return _swift_task_switch(sub_10034C018, 0, 0);
}

uint64_t sub_10034C018()
{
  v0[17] = *(void *)(v0[16] + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016706D8 + dword_1016706D8);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10034C0D4;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[5];
  return v5(v3, v2);
}

uint64_t sub_10034C0D4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10034C1D4, 0, 0);
}

uint64_t sub_10034C1D4()
{
  if (*(void *)(v0 + 136)) {
    BOOL v1 = 0;
  }
  else {
    BOOL v1 = *(unsigned char *)(v0 + 152) == 0;
  }
  if (!v1)
  {
    if (qword_101637648 != -1) {
      swift_once();
    }
    uint64_t v2 = *(char **)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v5 = *(void *)(v0 + 56);
    (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *(void *)(v0 + 40), v4);
    swift_beginAccess();
    sub_100DC8CB8(v3, v2);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_10034C328(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_100F96B4C(a2);
}

uint64_t sub_10034C3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_1000656A4(a2);
}

uint64_t sub_10034C460(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100033F68;
  return sub_1001B02C8(a2, a3);
}

uint64_t sub_10034C50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_1001B725C(a2);
}

uint64_t sub_10034C5A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 76) = a4;
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = a3;
  *(void *)(v4 + 16) = a1;
  return _swift_task_switch(sub_10034C5D0, 0, 0);
}

uint64_t sub_10034C5D0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10000588C((uint64_t *)&unk_101657800);
  uint64_t v2 = type metadata accessor for OwnerPeerTrust();
  *(void *)(v0 + 40) = v2;
  int v3 = *(_DWORD *)(*(void *)(v2 - 8) + 80);
  *(_DWORD *)(v0 + 72) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 48) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  sub_100367550(v1, v5 + v4, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10034C72C;
  char v7 = *(unsigned char *)(v0 + 76);
  uint64_t v8 = *(void *)(v0 + 32);
  return sub_101280B04(v5, v8, v7);
}

uint64_t sub_10034C72C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_10034C8AC, 0, 0);
  }
  else
  {
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    int v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_10034C8AC()
{
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034C94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100033F68;
  return sub_1012967E0(a2, a3);
}

uint64_t sub_10034C9F8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_10001D2E4;
  return sub_101286538(a2);
}

uint64_t sub_10034CA94(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_10128B920(a2);
}

uint64_t sub_10034CB30(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_10128BE10(a2);
}

uint64_t sub_10034CBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100033F68;
  return sub_10085AB78(a2, a3);
}

uint64_t sub_10034CC78(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *unint64_t v4 = v2;
  v4[1] = sub_100033F68;
  return sub_10085C968(a2);
}

uint64_t sub_10034CD14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  unint64_t v4 = (void *)swift_task_alloc();
  v3[5] = v4;
  *unint64_t v4 = v3;
  v4[1] = sub_10034CDAC;
  return sub_10129C24C();
}

uint64_t sub_10034CDAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 48) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10034CEF0;
  uint64_t v4 = *(void *)(v1 + 24);
  return sub_100351D10(v4);
}

uint64_t sub_10034CEF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_10034D284;
  }
  else
  {
    *(void *)(v4 + 56) = a1;
    uint64_t v5 = sub_10034D01C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10034D01C()
{
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016420B8 + dword_1016420B8);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[8] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10034D0D4;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[2];
  return v5(v2, v3);
}

uint64_t sub_10034D0D4()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10034D1EC, 0, 0);
}

uint64_t sub_10034D1EC()
{
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10034D3D0;
  return sub_1001B97CC();
}

uint64_t sub_10034D284()
{
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170D788);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Can't create shareCreateUseCase!", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10034D3D0;
  return sub_1001B97CC();
}

uint64_t sub_10034D3D0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 80) = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_10034D510;
  return sub_1001BAAAC();
}

uint64_t sub_10034D510()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_10034D608()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100030F18;
  return sub_10129DC38();
}

void *sub_10034D698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v36 = &off_1015EE080;
  v34[0] = a2;
  uint64_t v32 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v33 = &off_1015F0C30;
  v31[0] = a5;
  uint64_t v29 = type metadata accessor for ShareKeysUploadUseCase();
  uint64_t v30 = &off_1015D02B0;
  v28[0] = a6;
  type metadata accessor for DelegatedShareUseCase();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = sub_1000BD078((uint64_t)v34, v35);
  __chkstk_darwin(v13);
  unint64_t v15 = (void *)((char *)&v28[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_1000BD078((uint64_t)v31, v32);
  __chkstk_darwin(v17);
  uint64_t v19 = (void *)((char *)&v28[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000BD078((uint64_t)v28, v29);
  __chkstk_darwin(v21);
  uint64_t v23 = (void *)((char *)&v28[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_10034D954(a1, *v15, a3, a4, *v19, *v23, v12);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v28);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v31);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v34);
  return v25;
}

void *sub_10034D954(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  int64_t v26 = &off_101603A20;
  uint64_t v27 = &off_1015CCC70;
  uint64_t v28 = &off_1015B22B8;
  uint64_t v25 = type metadata accessor for KeyDropInterface();
  *(void *)&long long v24 = a3;
  uint64_t v22 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v23 = &off_1015EE080;
  *(void *)&long long v21 = a2;
  uint64_t v19 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v20 = &off_1015F0C30;
  *(void *)&long long v18 = a5;
  uint64_t v16 = type metadata accessor for ShareKeysUploadUseCase();
  uint64_t v17 = &off_1015D02B0;
  *(void *)&long long v15 = a6;
  swift_defaultActor_initialize();
  a7[21] = a1;
  sub_1003554A8(&v24, (uint64_t)(a7 + 14));
  sub_10001CEB0(&v21, (uint64_t)(a7 + 22));
  a7[27] = a4;
  a7[28] = &off_1015FA0B8;
  sub_10001CEB0(&v18, (uint64_t)(a7 + 29));
  sub_10001CEB0(&v15, (uint64_t)(a7 + 34));
  return a7;
}

uint64_t sub_10034DA70(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v8 = type metadata accessor for SharingCircleKeyManager();
  void v31[3] = v8;
  v31[4] = &off_1015EE080;
  v31[0] = a1;
  uint64_t v9 = type metadata accessor for MemberCircleRevokeManager();
  uint64_t v29 = v9;
  uint64_t v30 = &off_101607480;
  v28[0] = a3;
  a4(0);
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_1000BD078((uint64_t)v31, v8);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_1000BD078((uint64_t)v28, v29);
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v13;
  uint64_t v20 = *v17;
  uint64_t v26 = v8;
  uint64_t v27 = &off_1015EE080;
  long long v24 = &off_101607480;
  *(void *)&long long v25 = v19;
  uint64_t v23 = v9;
  *(void *)&long long v22 = v20;
  swift_defaultActor_initialize();
  sub_10001CEB0(&v25, v10 + 112);
  *(void *)(v10 + 152) = a2;
  sub_10001CEB0(&v22, v10 + 160);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v28);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v31);
  return v10;
}

uint64_t sub_10034DC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v60 = type metadata accessor for FamilyCircleService();
  long long v61 = &off_1015F13C8;
  v59[0] = a2;
  uint64_t v57 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v58 = &off_1015EE080;
  v56[0] = a3;
  uint64_t v54 = type metadata accessor for MemberCircleRevokeManager();
  uint64_t v55 = &off_101607480;
  v53[0] = a4;
  uint64_t v51 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v52 = &off_1015F0C30;
  v50[0] = a5;
  uint64_t v49 = &off_1015D6570;
  uint64_t v48 = type metadata accessor for ShareKeysDownloadUseCase();
  v47[0] = a6;
  uint64_t v46 = &off_1015C3B00;
  uint64_t v45 = type metadata accessor for BeaconManagerService();
  v44[0] = a8;
  type metadata accessor for ShareAcceptUseCase();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_1000BD078((uint64_t)v59, v60);
  __chkstk_darwin(v17);
  uint64_t v19 = (void *)((char *)&v44[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000BD078((uint64_t)v56, v57);
  __chkstk_darwin(v21);
  uint64_t v23 = (void *)((char *)&v44[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_1000BD078((uint64_t)v53, v54);
  __chkstk_darwin(v25);
  uint64_t v27 = (void *)((char *)&v44[-1] - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_1000BD078((uint64_t)v50, v51);
  __chkstk_darwin(v29);
  uint64_t v31 = (void *)((char *)&v44[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = sub_1000BD078((uint64_t)v47, v48);
  __chkstk_darwin(v33);
  uint64_t v35 = (void *)((char *)&v44[-1] - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  uint64_t v37 = sub_1000BD078((uint64_t)v44, v45);
  __chkstk_darwin(v37);
  uint64_t v39 = (void *)((char *)&v44[-1] - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v40 + 16))(v39);
  uint64_t v41 = sub_10034E794(a1, *v19, *v23, *v27, *v31, *v35, a7, *v39, v16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v44);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v47);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v50);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v53);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v56);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v59);
  return v41;
}

uint64_t sub_10034E1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v40 = a6;
  uint64_t v54 = type metadata accessor for FamilyCircleService();
  uint64_t v55 = &off_1015F13C8;
  v53[0] = a2;
  uint64_t v51 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v52 = &off_1015EE080;
  v50[0] = a3;
  uint64_t v48 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v49 = &off_1015F0C30;
  v47[0] = a4;
  uint64_t v45 = type metadata accessor for ShareKeysDownloadUseCase();
  uint64_t v46 = &off_1015D6570;
  v44[0] = a7;
  uint64_t v43 = &off_1015AA750;
  uint64_t v42 = type metadata accessor for ShareAcceptUseCase();
  v41[0] = a8;
  type metadata accessor for ShareCreateUseCase();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_1000BD078((uint64_t)v53, v54);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000BD078((uint64_t)v50, v51);
  __chkstk_darwin(v21);
  uint64_t v23 = (uint64_t *)((char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_1000BD078((uint64_t)v47, v48);
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)((char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = sub_1000BD078((uint64_t)v44, v45);
  __chkstk_darwin(v29);
  uint64_t v31 = (uint64_t *)((char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v32 + 16))(v31);
  uint64_t v33 = sub_1000BD078((uint64_t)v41, v42);
  __chkstk_darwin(v33);
  uint64_t v35 = (uint64_t *)((char *)&v39 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v36 + 16))(v35);
  uint64_t v37 = sub_10034E61C(a1, *v19, *v23, *v27, a5, v40, *v31, *v35, a9, v16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v41);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v44);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v47);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v50);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v53);
  return v37;
}

uint64_t sub_10034E61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v36 = &off_101603A20;
  uint64_t v37 = &off_1015CCC70;
  uint64_t v35 = type metadata accessor for KeyDropInterface();
  *(void *)&long long v34 = a5;
  uint64_t v32 = type metadata accessor for FamilyCircleService();
  uint64_t v33 = &off_1015F13C8;
  *(void *)&long long v31 = a2;
  uint64_t v29 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v30 = &off_1015EE080;
  *(void *)&long long v28 = a3;
  uint64_t v26 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v27 = &off_1015F0C30;
  *(void *)&long long v25 = a4;
  uint64_t v23 = type metadata accessor for ShareKeysDownloadUseCase();
  uint64_t v24 = &off_1015D6570;
  *(void *)&long long v22 = a7;
  uint64_t v20 = type metadata accessor for ShareAcceptUseCase();
  uint64_t v21 = &off_1015AA750;
  *(void *)&long long v19 = a8;
  swift_defaultActor_initialize();
  *(void *)(a10 + 384) = _swiftEmptyDictionarySingleton;
  sub_10005F748(&v34, (_OWORD *)(a10 + 112));
  sub_10001CEB0(&v28, a10 + 248);
  *(void *)(a10 + 160) = a1;
  sub_10001CEB0(&v31, a10 + 168);
  sub_10001CEB0(&v25, a10 + 208);
  *(void *)(a10 + 288) = a6;
  *(void *)(a10 + 296) = &off_1015FA0B8;
  sub_10001CEB0(&v22, a10 + 304);
  sub_10001CEB0(&v19, a10 + 344);
  *(void *)(a10 + 392) = a9;
  return a10;
}

uint64_t sub_10034E794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v38 = &off_101603A20;
  uint64_t v39 = &off_1015CCC70;
  uint64_t v37 = type metadata accessor for KeyDropInterface();
  *(void *)&long long v36 = a7;
  uint64_t v34 = type metadata accessor for FamilyCircleService();
  uint64_t v35 = &off_1015F13C8;
  *(void *)&long long v33 = a2;
  uint64_t v31 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v32 = &off_1015EE080;
  *(void *)&long long v30 = a3;
  uint64_t v28 = type metadata accessor for MemberCircleRevokeManager();
  uint64_t v29 = &off_101607480;
  *(void *)&long long v27 = a4;
  uint64_t v25 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v26 = &off_1015F0C30;
  *(void *)&long long v24 = a5;
  uint64_t v22 = type metadata accessor for ShareKeysDownloadUseCase();
  uint64_t v23 = &off_1015D6570;
  *(void *)&long long v21 = a6;
  uint64_t v19 = type metadata accessor for BeaconManagerService();
  uint64_t v20 = &off_1015C3B00;
  *(void *)&long long v18 = a8;
  swift_defaultActor_initialize();
  *(void *)(a9 + 408) = _swiftEmptyDictionarySingleton;
  *(void *)(a9 + 112) = a1;
  sub_10001CEB0(&v33, a9 + 120);
  sub_10001CEB0(&v30, a9 + 160);
  sub_10001CEB0(&v27, a9 + 200);
  sub_10001CEB0(&v24, a9 + 240);
  sub_10001CEB0(&v21, a9 + 280);
  sub_10005F748(&v36, (_OWORD *)(a9 + 320));
  sub_10001CEB0(&v18, a9 + 368);
  return a9;
}

uint64_t sub_10034E920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v33 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v34 = &off_1015F0C30;
  v32[0] = a2;
  uint64_t v30 = type metadata accessor for FamilyCircleService();
  uint64_t v31 = &off_1015F13C8;
  v29[0] = a3;
  uint64_t v27 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v28 = &off_1015EE080;
  v26[0] = a5;
  type metadata accessor for ShareStopUseCase();
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = sub_1000BD078((uint64_t)v32, v33);
  __chkstk_darwin(v11);
  uint64_t v13 = (void *)((char *)&v26[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v14 + 16))(v13);
  uint64_t v15 = sub_1000BD078((uint64_t)v29, v30);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)&v26[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = sub_1000BD078((uint64_t)v26, v27);
  __chkstk_darwin(v19);
  long long v21 = (void *)((char *)&v26[-1] - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = sub_10034EBD4(a1, *v13, *v17, a4, *v21, v10);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v26);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v29);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v32);
  return v23;
}

uint64_t sub_10034EBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v24 = &off_101603A20;
  uint64_t v25 = &off_1015CCC70;
  uint64_t v23 = type metadata accessor for KeyDropInterface();
  *(void *)&long long v22 = a4;
  uint64_t v20 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  long long v21 = &off_1015F0C30;
  *(void *)&long long v19 = a2;
  uint64_t v17 = type metadata accessor for FamilyCircleService();
  uint64_t v18 = &off_1015F13C8;
  *(void *)&long long v16 = a3;
  uint64_t v14 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v15 = &off_1015EE080;
  *(void *)&long long v13 = a5;
  swift_defaultActor_initialize();
  *(void *)(a6 + 112) = a1;
  sub_10001CEB0(&v19, a6 + 120);
  sub_10001CEB0(&v16, a6 + 160);
  sub_10005F748(&v22, (_OWORD *)(a6 + 200));
  sub_10001CEB0(&v13, a6 + 248);
  return a6;
}

uint64_t sub_10034ECCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  void v29[3] = v6;
  v29[4] = &off_1015F0C30;
  v29[0] = a2;
  uint64_t v7 = type metadata accessor for FamilyCircleService();
  uint64_t v27 = v7;
  uint64_t v28 = &off_1015F13C8;
  v26[0] = a3;
  type metadata accessor for ShareDeclineUseCase();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = sub_1000BD078((uint64_t)v29, v6);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = sub_1000BD078((uint64_t)v26, v27);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = *v11;
  uint64_t v18 = *v15;
  uint64_t v24 = v6;
  uint64_t v25 = &off_1015F0C30;
  long long v22 = &off_1015F13C8;
  *(void *)&long long v23 = v17;
  uint64_t v21 = v7;
  *(void *)&long long v20 = v18;
  swift_defaultActor_initialize();
  *(void *)(v8 + 112) = a1;
  sub_10001CEB0(&v23, v8 + 120);
  sub_10001CEB0(&v20, v8 + 160);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v26);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v29);
  return v8;
}

uint64_t sub_10034EEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v35 = type metadata accessor for FamilyCircleService();
  long long v36 = &off_1015F13C8;
  v34[0] = a2;
  uint64_t v32 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v33 = &off_1015EE080;
  v31[0] = a3;
  uint64_t v29 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v30 = &off_1015F0C30;
  v28[0] = a4;
  type metadata accessor for SelfBeaconingShareUseCase();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = sub_1000BD078((uint64_t)v34, v35);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)&v28[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_1000BD078((uint64_t)v31, v32);
  __chkstk_darwin(v17);
  long long v19 = (void *)((char *)&v28[-1] - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = sub_1000BD078((uint64_t)v28, v29);
  __chkstk_darwin(v21);
  long long v23 = (void *)((char *)&v28[-1] - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v24 + 16))(v23);
  uint64_t v25 = sub_10034F1A4(a1, *v15, *v19, *v23, a5, a6, v12);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v28);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v31);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v34);
  return v25;
}

uint64_t sub_10034F1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = &off_101603A20;
  uint64_t v27 = &off_1015CCC70;
  uint64_t v25 = type metadata accessor for KeyDropInterface();
  *(void *)&long long v24 = a5;
  uint64_t v22 = type metadata accessor for FamilyCircleService();
  long long v23 = &off_1015F13C8;
  *(void *)&long long v21 = a2;
  uint64_t v19 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v20 = &off_1015EE080;
  *(void *)&long long v18 = a3;
  uint64_t v16 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  uint64_t v17 = &off_1015F0C30;
  *(void *)&long long v15 = a4;
  swift_defaultActor_initialize();
  sub_10005F748(&v24, (_OWORD *)(a7 + 112));
  sub_10001CEB0(&v18, a7 + 248);
  *(void *)(a7 + 160) = a1;
  sub_10001CEB0(&v21, a7 + 168);
  sub_10001CEB0(&v15, a7 + 208);
  *(void *)(a7 + 288) = a6;
  return a7;
}

uint64_t sub_10034F2AC(uint64_t a1, uint64_t a2)
{
  v2[9] = a2;
  uint64_t v5 = type metadata accessor for OwnerSharingCircle();
  v2[10] = v5;
  v2[11] = *(void *)(v5 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  v2[5] = type metadata accessor for ShareCreateUseCase();
  v2[6] = &off_1015FF758;
  v2[2] = a1;
  swift_retain();
  return _swift_task_switch(sub_10034F3C8, a2, 0);
}

uint64_t sub_10034F3C8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 128) = v1;
  return _swift_task_switch(sub_10034F3EC, v1, 0);
}

uint64_t sub_10034F3EC()
{
  *(void *)(v0 + 136) = *(void *)(*(void *)(v0 + 128) + 136);
  swift_retain();
  return _swift_task_switch(sub_10034F460, 0, 0);
}

uint64_t sub_10034F460()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  v3[2] = v1;
  v3[3] = sub_100075250;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  uint64_t v5 = sub_10000588C(&qword_10163B8C0);
  *uint64_t v4 = v0;
  v4[1] = sub_10034F578;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100075258, v3, v5);
}

uint64_t sub_10034F578()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 72);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 160) = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10034F6E8, v2, 0);
}

uint64_t sub_10034F6E8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v4 = *(void *)(v0 + 88);
    uint64_t v26 = *(void *)(v1 + 16);
    uint64_t v27 = *(void *)(v0 + 160);
    while (v3 < *(void *)(v1 + 16))
    {
      uint64_t v6 = *(void *)(v0 + 120);
      unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v8 = *(void *)(v4 + 72);
      sub_100367550(*(void *)(v0 + 160) + v7 + v8 * v3, v6, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
      uint64_t v9 = *(void *)(v0 + 120);
      if (*(unsigned char *)(v6 + *(int *)(v5 + 28)) == 3 || *(unsigned char *)(v9 + *(int *)(v5 + 36)) != 4)
      {
        sub_10036574C(v9, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
      }
      else
      {
        sub_10036788C(v9, *(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B721C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v11 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = _swiftEmptyArrayStorage[3];
        if (v11 >= v10 >> 1) {
          sub_1000B721C(v10 > 1, v11 + 1, 1);
        }
        uint64_t v12 = *(void *)(v0 + 96);
        _swiftEmptyArrayStorage[2] = v11 + 1;
        sub_10036788C(v12, (uint64_t)_swiftEmptyArrayStorage + v7 + v11 * v8, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
        uint64_t v2 = v26;
        uint64_t v1 = v27;
      }
      if (v2 == ++v3) {
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    *(void *)(v0 + 168) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    if (qword_101636888 == -1) {
      goto LABEL_14;
    }
  }
  swift_once();
LABEL_14:
  uint64_t v13 = type metadata accessor for Logger();
  *(void *)(v0 + 176) = sub_100010324(v13, (uint64_t)qword_10170D788);
  swift_retain();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 134217984;
    *(void *)(v0 + 64) = _swiftEmptyArrayStorage[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Found %ld of expired tentatively revoked owner circles.", v16, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_release();
  }

  uint64_t v17 = _swiftEmptyArrayStorage[2];
  *(void *)(v0 + 184) = v17;
  if (v17)
  {
    uint64_t v19 = *(void *)(v0 + 80);
    uint64_t v18 = *(void *)(v0 + 88);
    int v20 = *(_DWORD *)(v18 + 80);
    *(_DWORD *)(v0 + 224) = v20;
    *(void *)(v0 + 192) = *(void *)(v18 + 72);
    *(void *)(v0 + 200) = 0;
    uint64_t v21 = *(void *)(v0 + 112);
    sub_100367550(*(void *)(v0 + 168) + ((v20 + 32) & ~(unint64_t)v20), v21, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v22 = v21 + *(int *)(v19 + 20);
    long long v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v23;
    *long long v23 = v0;
    v23[1] = sub_10034FAF0;
    return sub_100F96B4C(v22);
  }
  else
  {
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_10034FAF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  if (v0) {
    uint64_t v4 = sub_10034FDBC;
  }
  else {
    uint64_t v4 = sub_10034FC1C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_10034FC1C()
{
  sub_10036574C(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v1 = *(void *)(v0 + 200) + 1;
  if (v1 == *(void *)(v0 + 184))
  {
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    *(void *)(v0 + 200) = v1;
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 80);
    sub_100367550(*(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ *(void *)(v0 + 192) * v1, v4, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v6 = v4 + *(int *)(v5 + 20);
    unint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v7;
    void *v7 = v0;
    v7[1] = sub_10034FAF0;
    return sub_100F96B4C(v6);
  }
}

uint64_t sub_10034FDBC()
{
  uint64_t v18 = v0;
  uint64_t v1 = (void *)(v0 + 16);
  sub_100367550(*(void *)(v0 + 112), *(void *)(v0 + 104), (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v6 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  if (v4)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    type metadata accessor for UUID();
    sub_10028B80C();
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v7 + 4) = sub_1008FA0F0(v8, v9, &v17);
    swift_bridgeObjectRelease();
    sub_10036574C(v6, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to re-create owned tentatively revoked share with identifier: %s", (uint8_t *)v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = (void *)(v0 + 16);
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    sub_10036574C(v6, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  }
  sub_10036574C(v5, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v10 = *(void *)(v0 + 200) + 1;
  if (v10 == *(void *)(v0 + 184))
  {
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  else
  {
    *(void *)(v0 + 200) = v10;
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v14 = *(void *)(v0 + 80);
    sub_100367550(*(void *)(v0 + 168)+ ((*(unsigned __int8 *)(v0 + 224) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 224))+ *(void *)(v0 + 192) * v10, v13, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_10001CD44(v1, *(void *)(v0 + 40));
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_10034FAF0;
    return sub_100F96B4C(v15);
  }
}

uint64_t sub_1003500DC()
{
  return _swift_task_switch(sub_1003500F8, 0, 0);
}

uint64_t sub_1003500F8()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    os_log_type_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390F0 + dword_1016390F0);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v2;
    void *v2 = v0;
    v2[1] = sub_100350234;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100350234(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100350334, 0, 0);
}

uint64_t sub_100350334()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 128);
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170D788);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No PeerTrustService available!", v8, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    *unint64_t v9 = 0xD000000000000010;
    v9[1] = 0x80000001013F89D0;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1003504DC()
{
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_1003504F8()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390C0 + dword_1016390C0);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v2;
    void *v2 = v0;
    v2[1] = sub_100350634;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100350634(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100350734, 0, 0);
}

uint64_t sub_100350734()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 128);
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170D788);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No IDSTransportService_ItemSharingCrossAccount available!", v8, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    *unint64_t v9 = 0xD00000000000002BLL;
    v9[1] = 0x80000001013F8980;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1003508DC(uint64_t a1)
{
  *(void *)(v1 + 240) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 248) = v2;
  void *v2 = v1;
  v2[1] = sub_100350984;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100350984(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100350AB8, 0, 0);
  }
}

uint64_t sub_100350AB8()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 264) = v4;
  swift_retain();
  swift_defaultActor_initialize();
  uint64_t v5 = type metadata accessor for KeyDropInterface();
  uint64_t v6 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v6 + 112) = 0;
  *(void *)(v6 + 120) = 0;
  *(void *)(v4 + 112) = v6;
  *(void *)(v4 + 120) = v1;
  sub_10001D074(v2, v0 + 160, &qword_10163BDE0);
  if (*(void *)(v0 + 184))
  {
    sub_10001CEB0((long long *)(v0 + 160), v0 + 120);
    swift_retain();
  }
  else
  {
    uint64_t v7 = qword_101636CB8;
    swift_retain();
    if (v7 != -1) {
      swift_once();
    }
    uint64_t v8 = qword_10170E330;
    *(void *)(v0 + 96) = type metadata accessor for BeaconObservationStore();
    *(void *)(v0 + 104) = &off_1015D4FE8;
    *(void *)(v0 + 112) = &off_1015B2900;
    *(void *)(v0 + 72) = v8;
    uint64_t v9 = type metadata accessor for MemberCircleRevokeManager();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 24) = 0;
    swift_unknownObjectWeakInit();
    sub_10005F748((long long *)(v0 + 72), (_OWORD *)(v10 + 32));
    *(void *)(v0 + 144) = v9;
    *(void *)(v0 + 152) = &off_101607480;
    *(void *)(v0 + 120) = v10;
    swift_retain();
    sub_10001DAB4(v0 + 160, &qword_10163BDE0);
  }
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t v13 = sub_1000BD078(v0 + 120, v12);
  uint64_t v14 = *(void *)(v12 - 8);
  uint64_t v15 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(v15, v13, v12);
  uint64_t v16 = *v15;
  swift_retain();
  uint64_t v17 = swift_retain();
  *(void *)(v0 + 272) = sub_10034DA70(v17, v11, v16, (void (*)(void))type metadata accessor for ShareKeysUploadUseCase);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 120);
  swift_release();
  swift_task_dealloc();
  *(void *)(v0 + 224) = v3;
  *(void *)(v0 + 232) = &off_1015EE080;
  *(void *)(v0 + 200) = v4;
  uint64_t v18 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v18 + 112) = 0;
  *(void *)(v18 + 120) = 0;
  *(void *)(v0 + 40) = v5;
  *(void *)(v0 + 48) = &off_101603A20;
  *(void *)(v0 + 56) = &off_1015CCC70;
  *(void *)(v0 + 64) = &off_1015B22B8;
  *(void *)(v0 + 16) = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 280) = v19;
  void *v19 = v0;
  v19[1] = sub_100350E10;
  return _swift_task_switch(sub_1003500F8, 0, 0);
}

uint64_t sub_100350E10(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[36] = a1;
  v3[37] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_100351098;
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v3[38] = v5;
    *uint64_t v5 = v3;
    v5[1] = sub_100350F68;
    uint64_t v4 = sub_1003504F8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100350F68(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 312) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v5 = sub_10035132C;
  }
  else
  {
    *(void *)(v4 + 320) = a1;
    uint64_t v5 = sub_100351130;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100351098()
{
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 200);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100351130()
{
  uint64_t v16 = v0[36];
  uint64_t v17 = v0[40];
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[28];
  uint64_t v4 = sub_1000BD078((uint64_t)(v0 + 25), v3);
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v3);
  uint64_t v7 = v0[5];
  uint64_t v8 = sub_1000BD078((uint64_t)(v0 + 2), v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  uint64_t v11 = *v6;
  uint64_t v12 = *v10;
  swift_retain();
  uint64_t v13 = sub_10034D698(v2, v11, v12, v16, v17, v1);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 25));
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void *))v0[1];
  return v14(v13);
}

uint64_t sub_10035132C()
{
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 200);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003513C4(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for UUID();
  v1[8] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 + 64);
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10035148C, 0, 0);
}

uint64_t sub_10035148C()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100351530;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_100351530(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_1003681DC;
  }
  else {
    uint64_t v5 = sub_100351658;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100351658()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v2, v0[7], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  v0[15] = v6;
  *(void *)(v6 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v5, v2, v3);
  uint64_t v9 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  void *v7 = v0;
  v7[1] = sub_1003517E0;
  return v9(&unk_101642178, v6);
}

uint64_t sub_1003517E0()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1003681D4;
  }
  else {
    uint64_t v2 = sub_1003681E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100351910()
{
  return _swift_task_switch(sub_10035192C, 0, 0);
}

uint64_t sub_10035192C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639108 + dword_101639108);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v2;
    void *v2 = v0;
    v2[1] = sub_100351A68;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100351A68(uint64_t a1)
{
  *(void *)(*(void *)v1 + 128) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100351B68, 0, 0);
}

uint64_t sub_100351B68()
{
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 128);
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v3(v2);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101636888 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10170D788);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No BeaconManagerService available!", v8, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v9 = 0xD000000000000014;
    v9[1] = 0x80000001013F1920;
    swift_willThrow();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_100351D10(uint64_t a1)
{
  *(void *)(v1 + 496) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 504) = v2;
  void *v2 = v1;
  v2[1] = sub_100351DB8;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100351DB8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 512) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    os_log_type_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 520) = v7;
    void *v7 = v4;
    v7[1] = sub_100351F40;
    return _swift_task_switch(sub_1002708D8, 0, 0);
  }
}

uint64_t sub_100351F40(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 528) = a1;
  *(void *)(v3 + 536) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1003523F0;
  }
  else {
    uint64_t v4 = sub_100352058;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100352058()
{
  uint64_t v14 = v0[66];
  uint64_t v1 = v0[64];
  uint64_t v2 = v0[62];
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager();
  v0[68] = v3;
  uint64_t v4 = swift_allocObject();
  v0[69] = v4;
  swift_retain();
  swift_defaultActor_initialize();
  v0[70] = type metadata accessor for KeyDropInterface();
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  *(void *)(v4 + 112) = v5;
  *(void *)(v4 + 120) = v1;
  sub_10001D010(v2, (uint64_t)(v0 + 29));
  uint64_t v6 = v0[32];
  uint64_t v7 = sub_1000BD078((uint64_t)(v0 + 29), v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
  uint64_t v10 = *v9;
  swift_retain_n();
  swift_retain();
  v0[71] = sub_10034DA70(v4, v1, v10, (void (*)(void))type metadata accessor for ShareKeysDownloadUseCase);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 29));
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = type metadata accessor for FamilyCircleService();
  v0[72] = v11;
  v0[37] = v11;
  v0[38] = &off_1015F13C8;
  v0[34] = v14;
  v0[17] = v3;
  v0[18] = &off_1015EE080;
  v0[14] = v4;
  sub_10001D010(v2, (uint64_t)(v0 + 19));
  swift_retain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[73] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003522C0;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_1003522C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 152);
    uint64_t v5 = sub_1003526B4;
  }
  else
  {
    *(void *)(v4 + 600) = a1;
    uint64_t v5 = sub_100352454;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003523F0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100352454()
{
  uint64_t v1 = v0[75];
  uint64_t v2 = v0[71];
  uint64_t v3 = v0[70];
  uint64_t v4 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[76] = v4;
  v0[27] = v4;
  v0[28] = &off_1015F0C30;
  v0[24] = v1;
  v0[57] = type metadata accessor for ShareKeysDownloadUseCase();
  v0[58] = &off_1015D6570;
  v0[54] = v2;
  uint64_t v5 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  v0[11] = v3;
  v0[12] = &off_101603A20;
  v0[13] = &off_1015CCC70;
  v0[8] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[77] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100352584;
  return _swift_task_switch(sub_10035192C, 0, 0);
}

uint64_t sub_100352584(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 624) = v1;
  swift_task_dealloc();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 152);
    uint64_t v5 = sub_100352D88;
  }
  else
  {
    *(void *)(v4 + 632) = a1;
    uint64_t v5 = sub_100352764;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003526B4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 112);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 272);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100352764()
{
  uint64_t v31 = v0[79];
  uint64_t v32 = v0[72];
  uint64_t v34 = v0[68];
  uint64_t v35 = v0[69];
  uint64_t v33 = v0[66];
  uint64_t v1 = v0[37];
  sub_1000BD078((uint64_t)(v0 + 34), v1);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v30 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v2 + 16))();
  uint64_t v3 = v0[17];
  sub_1000BD078((uint64_t)(v0 + 14), v3);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v29 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v4 + 16))();
  uint64_t v5 = v0[22];
  sub_1000BD078((uint64_t)(v0 + 19), v5);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v28 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v6 + 16))();
  uint64_t v7 = v0[27];
  uint64_t v8 = sub_1000BD078((uint64_t)(v0 + 24), v7);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v9 + 16))(v10, v8, v7);
  uint64_t v11 = v0[57];
  uint64_t v12 = sub_1000BD078((uint64_t)(v0 + 54), v11);
  uint64_t v13 = *(void *)(v11 - 8);
  uint64_t v14 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v13 + 16))(v14, v12, v11);
  uint64_t v15 = v0[11];
  uint64_t v16 = sub_1000BD078((uint64_t)(v0 + 8), v15);
  uint64_t v17 = *(void *)(v15 - 8);
  uint64_t v18 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v17 + 16))(v18, v16, v15);
  uint64_t v19 = *v30;
  uint64_t v20 = *v29;
  uint64_t v21 = *v28;
  uint64_t v22 = *v10;
  uint64_t v23 = *v14;
  uint64_t v24 = *v18;
  uint64_t v25 = swift_retain();
  v0[80] = sub_10034DC94(v25, v19, v20, v21, v22, v23, v24, v31);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 8));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 54));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 24));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 19));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 14));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 34));
  swift_task_dealloc();
  v0[42] = v32;
  v0[43] = &off_1015F13C8;
  v0[39] = v33;
  v0[47] = v34;
  v0[48] = &off_1015EE080;
  v0[44] = v35;
  swift_retain();
  swift_retain();
  uint64_t v26 = (void *)swift_task_alloc();
  v0[81] = v26;
  void *v26 = v0;
  v26[1] = sub_100352C60;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100352C60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 656) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100353078;
  }
  else
  {
    *(void *)(v4 + 664) = a1;
    uint64_t v5 = sub_100352E64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100352D88()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 432);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 192);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 112);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 272);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100352E64()
{
  uint64_t v1 = v0[83];
  uint64_t v2 = v0[70];
  v0[52] = v0[76];
  v0[53] = &off_1015F0C30;
  v0[49] = v1;
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  v0[5] = v2;
  v0[6] = &off_101603A20;
  v0[7] = &off_1015CCC70;
  v0[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[84] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100352F5C;
  return _swift_task_switch(sub_1003500F8, 0, 0);
}

uint64_t sub_100352F5C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[59] = v2;
  v3[60] = a1;
  v3[61] = v1;
  v3[85] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1003534F8;
  }
  else {
    uint64_t v4 = sub_100353134;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100353078()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 352);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 312);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100353134()
{
  uint64_t v1 = v0[80];
  uint64_t v2 = v0[71];
  uint64_t v3 = qword_101636CB8;
  swift_retain();
  swift_retain();
  if (v3 == -1)
  {
    uint64_t v29 = v2;
    uint64_t v30 = v1;
  }
  else
  {
    swift_once();
    uint64_t v30 = v0[80];
    uint64_t v29 = v0[71];
  }
  uint64_t v28 = v0[60];
  uint64_t v27 = v0[64];
  uint64_t v4 = v0[42];
  sub_1000BD078((uint64_t)(v0 + 39), v4);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v26 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v5 + 16))();
  uint64_t v6 = v0[47];
  uint64_t v7 = sub_1000BD078((uint64_t)(v0 + 44), v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
  uint64_t v10 = v0[52];
  uint64_t v11 = sub_1000BD078((uint64_t)(v0 + 49), v10);
  uint64_t v12 = *(void *)(v10 - 8);
  uint64_t v13 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v13, v11, v10);
  uint64_t v14 = v0[5];
  uint64_t v15 = sub_1000BD078((uint64_t)(v0 + 2), v14);
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v17 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v17, v15, v14);
  uint64_t v18 = *v26;
  uint64_t v19 = *v9;
  uint64_t v20 = *v13;
  uint64_t v21 = *v17;
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_10034E1B8(v27, v18, v19, v20, v21, v28, v29, v30, v22);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 49));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 44));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 39));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(uint64_t))v0[1];
  return v24(v23);
}

uint64_t sub_1003534F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 392);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 352);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 312);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003535D4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(unsigned char *)(v4 + 104) = a3;
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v4 + 32) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 48) = *(void *)(v7 + 64);
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 64) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1003536D4;
  return sub_100351D10(a4);
}

uint64_t sub_1003536D4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(*v2 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100353824, 0, 0);
  }
}

uint64_t sub_100353824()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 104);
  uint64_t v7 = *(void *)(v0 + 24);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 16))(v2, *(void *)(v0 + 16), v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 80) = v10;
  *(void *)(v10 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v8, v2, v4);
  unint64_t v11 = v10 + v9;
  *(void *)unint64_t v11 = v7;
  *(unsigned char *)(v11 + 8) = v6;
  uint64_t v14 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003539DC;
  return v14(&unk_101641F80, v10);
}

uint64_t sub_1003539DC()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100353B7C;
  }
  else {
    uint64_t v2 = sub_100353B0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100353B0C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100353B7C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100353BE8(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 240) = a3;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = a2;
  uint64_t v4 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  *(void *)(v3 + 72) = v4;
  *(void *)(v3 + 80) = *(void *)(v4 + 64);
  *(void *)(v3 + 88) = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for OwnerPeerTrust() - 8);
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = *(void *)(v5 + 64);
  *(void *)(v3 + 112) = swift_task_alloc();
  char v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 120) = v6;
  *char v6 = v3;
  v6[1] = sub_100353D54;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100353D54(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100353E9C, 0, 0);
  }
}

uint64_t sub_100353E9C()
{
  uint64_t v1 = v0[16];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[17] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[18] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100353FA0;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100353FA0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003542B4;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_1003540C8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003540C8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[22] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10035418C;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_10035418C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10035473C;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    uint64_t v5 = sub_100354334;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003542B4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100354334()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 136);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078(v0 + 16, v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v24 = sub_10034E920(v4, v9, v1, v5, v3);
  *(void *)(v0 + 208) = v24;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v15 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 80);
  char v22 = *(unsigned char *)(v0 + 240);
  uint64_t v16 = *(void *)(v0 + 64);
  sub_100367550(*(void *)(v0 + 56), v10, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  sub_100367550(v16, v12, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v18 = (v11 + *(unsigned __int8 *)(v15 + 80) + v17) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v0 + 216) = v19;
  *(void *)(v19 + 16) = v24;
  sub_10036788C(v10, v19 + v17, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  sub_10036788C(v12, v19 + v18, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  *(unsigned char *)(v19 + v18 + v14) = v22;
  uint64_t v23 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_10035460C;
  return v23(&unk_101641F20, v19);
}

uint64_t sub_10035460C()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100354860;
  }
  else {
    uint64_t v2 = sub_1003547C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035473C()
{
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003547C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100354860()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003548EC(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 200) = a2;
  *(void *)(v2 + 56) = a1;
  uint64_t v3 = type metadata accessor for UUID();
  *(void *)(v2 + 64) = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)(v2 + 72) = v4;
  *(void *)(v2 + 80) = *(void *)(v4 + 64);
  *(void *)(v2 + 88) = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1003549FC;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_1003549FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 112) = v7;
    void *v7 = v4;
    v7[1] = sub_100354B8C;
    return _swift_task_switch(sub_1003504F8, 0, 0);
  }
}

uint64_t sub_100354B8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v5 = sub_100354EB0;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_100354CBC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100354CBC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[17] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100354D80;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100354D80(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v5 = sub_100355290;
  }
  else
  {
    *(void *)(v4 + 160) = a1;
    uint64_t v5 = sub_100354F14;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100354EB0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100354F14()
{
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = sub_1000BD078(v0 + 16, v2);
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v2);
  uint64_t v7 = sub_10034ECCC(v3, *v6, v1);
  *(void *)(v0 + 168) = v7;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 88);
  uint64_t v10 = *(void *)(v0 + 64);
  uint64_t v11 = *(void *)(v0 + 72);
  char v12 = *(unsigned char *)(v0 + 200);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 16))(v8, *(void *)(v0 + 56), v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = v13 + v9;
  uint64_t v15 = swift_allocObject();
  *(void *)(v0 + 176) = v15;
  *(void *)(v15 + 16) = v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 32))(v15 + v13, v8, v10);
  *(unsigned char *)(v15 + v14) = v12;
  unint64_t v18 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100355160;
  return v18(&unk_10163B9D0, v15);
}

uint64_t sub_100355160()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10035536C;
  }
  else {
    uint64_t v2 = sub_1003552FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100355290()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003552FC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035536C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003553D8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003554A8(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  long long v4 = a1[2];
  *(void *)(a2 + 48) = *((void *)a1 + 6);
  *(_OWORD *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 32) = v4;
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_1003554C8(uint64_t a1, uint64_t a2)
{
  v2[38] = a1;
  v2[39] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[40] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[41] = v4;
  v2[42] = *(void *)(v4 + 64);
  v2[43] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[44] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1003555D4;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_1003555D4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 360) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 368) = v7;
    void *v7 = v4;
    v7[1] = sub_100355764;
    return _swift_task_switch(sub_1002708D8, 0, 0);
  }
}

uint64_t sub_100355764(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 376) = a1;
  *(void *)(v3 + 384) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100355BF8;
  }
  else {
    uint64_t v4 = sub_100355878;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_100355878()
{
  uint64_t v14 = v0[47];
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[39];
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v4 = swift_allocObject();
  v0[49] = v4;
  swift_retain();
  swift_defaultActor_initialize();
  v0[50] = type metadata accessor for KeyDropInterface();
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  *(void *)(v4 + 112) = v5;
  *(void *)(v4 + 120) = v1;
  sub_10001D010(v2, (uint64_t)(v0 + 18));
  uint64_t v6 = v0[21];
  uint64_t v7 = sub_1000BD078((uint64_t)(v0 + 18), v6);
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v9, v7, v6);
  uint64_t v10 = *v9;
  swift_retain();
  uint64_t v11 = swift_retain();
  v0[51] = sub_10034DA70(v11, v1, v10, (void (*)(void))type metadata accessor for ShareKeysDownloadUseCase);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 18));
  swift_task_dealloc();
  v0[11] = type metadata accessor for FamilyCircleService();
  v0[12] = &off_1015F13C8;
  v0[8] = v14;
  v0[16] = v3;
  v0[17] = &off_1015EE080;
  v0[13] = v4;
  sub_10001D010(v2, (uint64_t)(v0 + 33));
  swift_retain();
  swift_retain();
  char v12 = (void *)swift_task_alloc();
  v0[52] = v12;
  *char v12 = v0;
  v12[1] = sub_100355AC8;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100355AC8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 424) = v1;
  swift_task_dealloc();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 264);
    uint64_t v5 = sub_100355EBC;
  }
  else
  {
    *(void *)(v4 + 432) = a1;
    uint64_t v5 = sub_100355C64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100355BF8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100355C64()
{
  uint64_t v1 = v0[54];
  uint64_t v2 = v0[50];
  uint64_t v3 = v0[51];
  v0[26] = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[27] = &off_1015F0C30;
  v0[23] = v1;
  v0[31] = type metadata accessor for ShareKeysDownloadUseCase();
  v0[32] = &off_1015D6570;
  v0[28] = v3;
  uint64_t v4 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  v0[5] = v2;
  v0[6] = &off_101603A20;
  v0[7] = &off_1015CCC70;
  v0[2] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[55] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100355D8C;
  return _swift_task_switch(sub_10035192C, 0, 0);
}

uint64_t sub_100355D8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 448) = v1;
  swift_task_dealloc();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 264);
    uint64_t v5 = sub_100356618;
  }
  else
  {
    *(void *)(v4 + 456) = a1;
    uint64_t v5 = sub_100355F74;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100355EBC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100355F74()
{
  uint64_t v37 = v0[57];
  uint64_t v1 = v0[11];
  sub_1000BD078((uint64_t)(v0 + 8), v1);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v35 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v2 + 16))();
  uint64_t v3 = v0[16];
  sub_1000BD078((uint64_t)(v0 + 13), v3);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v34 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v4 + 16))();
  uint64_t v5 = v0[36];
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 33), v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v36 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v36, v6, v5);
  uint64_t v8 = v0[26];
  sub_1000BD078((uint64_t)(v0 + 23), v8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v33 = (uint64_t *)swift_task_alloc();
  (*(void (**)(void))(v9 + 16))();
  uint64_t v10 = v0[31];
  uint64_t v11 = sub_1000BD078((uint64_t)(v0 + 28), v10);
  uint64_t v12 = *(void *)(v10 - 8);
  unint64_t v13 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v12 + 16))(v13, v11, v10);
  uint64_t v14 = v0[5];
  uint64_t v15 = sub_1000BD078((uint64_t)(v0 + 2), v14);
  uint64_t v16 = *(void *)(v14 - 8);
  unint64_t v17 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 16))(v17, v15, v14);
  uint64_t v18 = *v35;
  uint64_t v19 = *v34;
  uint64_t v20 = *v36;
  uint64_t v21 = *v33;
  uint64_t v22 = *v13;
  uint64_t v23 = *v17;
  uint64_t v24 = swift_retain();
  uint64_t v25 = sub_10034DC94(v24, v18, v19, v20, v21, v22, v23, v37);
  v0[58] = v25;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 28));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 23));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 33));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 13));
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 8));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v26 = v0[43];
  uint64_t v27 = v0[40];
  uint64_t v28 = v0[41];
  (*(void (**)(uint64_t, void, uint64_t))(v28 + 16))(v26, v0[38], v27);
  unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = swift_allocObject();
  v0[59] = v30;
  *(void *)(v30 + 16) = v25;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v28 + 32))(v30 + v29, v26, v27);
  uint64_t v38 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  v0[60] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_1003564E8;
  return v38(&unk_101642160, v30);
}

uint64_t sub_1003564E8()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1003567AC;
  }
  else {
    uint64_t v2 = sub_1003566FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100356618()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 224);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 184);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003566FC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003567AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100356850(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  void *v2 = v1;
  v2[1] = sub_1003568F8;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_1003568F8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100356A2C, 0, 0);
  }
}

uint64_t sub_100356A2C()
{
  uint64_t v1 = v0[9];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[10] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[11] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100356B30;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100356B30(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100356E44;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_100356C58;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100356C58()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[15] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100356D1C;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100356D1C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100357200;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_100356EB0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100356E44()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100356EB0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10034E920(v4, v9, v1, v5, v3);
  v0[19] = v10;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[7];
  uint64_t v12 = swift_allocObject();
  v0[20] = v12;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v15 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v13 = (void *)swift_task_alloc();
  v0[21] = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1003570E4;
  return v15(&unk_101642148, v12);
}

uint64_t sub_1003570E4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003572F0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_100357278;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100357200()
{
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100357278()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003572F0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100357378(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  void *v2 = v1;
  v2[1] = sub_100357420;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100357420(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100357554, 0, 0);
  }
}

uint64_t sub_100357554()
{
  uint64_t v1 = v0[9];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[10] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[11] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100357658;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100357658(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681F8;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_100357780;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100357780()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[15] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100357844;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100357844(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681C4;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_10035796C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035796C()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10034E920(v4, v9, v1, v5, v3);
  v0[19] = v10;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[7];
  uint64_t v12 = swift_allocObject();
  v0[20] = v12;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v15 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v13 = (void *)swift_task_alloc();
  v0[21] = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_100357BA0;
  return v15(&unk_101641FD8, v12);
}

uint64_t sub_100357BA0()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003681D0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003681D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100357CBC(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  v2[9] = v3;
  v2[10] = *(void *)(v3 + 64);
  v2[11] = swift_task_alloc();
  uint64_t v4 = *(void *)(type metadata accessor for OwnerPeerTrust() - 8);
  v2[12] = v4;
  v2[13] = *(void *)(v4 + 64);
  v2[14] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[15] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100357E24;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100357E24(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 128) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100357F6C, 0, 0);
  }
}

uint64_t sub_100357F6C()
{
  uint64_t v1 = v0[16];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[17] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[18] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100358070;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100358070(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 160) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003542B4;
  }
  else
  {
    *(void *)(v4 + 168) = a1;
    uint64_t v5 = sub_100358198;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100358198()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[22] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[23] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10035825C;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_10035825C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10035473C;
  }
  else
  {
    *(void *)(v4 + 200) = a1;
    uint64_t v5 = sub_100358384;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100358384()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[16];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_10034E920(v4, v9, v1, v5, v3);
  v0[26] = v22;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[13];
  uint64_t v10 = v0[14];
  uint64_t v12 = v0[11];
  uint64_t v13 = v0[12];
  uint64_t v14 = v0[9];
  uint64_t v15 = v0[8];
  sub_100367550(v0[7], v10, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  sub_100367550(v15, v12, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v14 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v18 = swift_allocObject();
  v0[27] = v18;
  *(void *)(v18 + 16) = v22;
  sub_10036788C(v10, v18 + v16, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  sub_10036788C(v12, v18 + v17, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v21 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v19 = (void *)swift_task_alloc();
  v0[28] = (uint64_t)v19;
  void *v19 = v0;
  v19[1] = sub_10035460C;
  return v21(&unk_101642130, v18);
}

uint64_t sub_100358648(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for UUID();
  v1[8] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 + 64);
  v1[11] = swift_task_alloc();
  uint64_t v4 = (void *)swift_task_alloc();
  v1[12] = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100358754;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100358754(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 112) = v7;
    void *v7 = v4;
    v7[1] = sub_1003588E4;
    return _swift_task_switch(sub_1003504F8, 0, 0);
  }
}

uint64_t sub_1003588E4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v5 = sub_100354EB0;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    uint64_t v5 = sub_100358A14;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100358A14()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[17] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100358AD8;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100358AD8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    uint64_t v5 = sub_100355290;
  }
  else
  {
    *(void *)(v4 + 160) = a1;
    uint64_t v5 = sub_100358C08;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100358C08()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t v6 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v6, v4, v2);
  uint64_t v7 = sub_10034ECCC(v3, *v6, v1);
  v0[21] = v7;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v8 = v0[11];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 16))(v8, v0[7], v9);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  v0[22] = v12;
  *(void *)(v12 + 16) = v7;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v10 + 32))(v12 + v11, v8, v9);
  uint64_t v15 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[23] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100355160;
  return v15(&unk_10163BF88, v12);
}

uint64_t sub_100358E40()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100358EE4;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100358EE4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_100359018, 0, 0);
  }
}

uint64_t sub_100359018()
{
  uint64_t v1 = v0[17];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[18] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[19] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[20] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10035911C;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_10035911C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100359430;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_100359244;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100359244()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[23] = v2;
  v0[14] = v2;
  v0[15] = &off_1015F0C30;
  v0[11] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100359308;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100359308(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003597D4;
  }
  else
  {
    *(void *)(v4 + 208) = a1;
    uint64_t v5 = sub_10035949C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100359430()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035949C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[17];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 11), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  v0[27] = sub_10034E920(v4, v9, v1, v5, v3);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 11));
  swift_task_dealloc();
  type metadata accessor for CheckDataIntegrityUseCase();
  swift_allocObject();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[28] = v10;
  void *v10 = v0;
  v10[1] = sub_100359648;
  return sub_100075928();
}

uint64_t sub_100359648(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 232) = a1;
  swift_task_dealloc();
  if (v1)
  {
    *(void *)(v3 + 344) = v1;
    return _swift_task_switch(sub_100359E6C, 0, 0);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v3 + 240) = v5;
    *uint64_t v5 = v4;
    v5[1] = sub_10035984C;
    return sub_10007CE54(v3 + 16);
  }
}

uint64_t sub_1003597D4()
{
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 88);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035984C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  v3[31] = v0;
  uint64_t v5 = v2[2];
  v3[32] = v5;
  uint64_t v6 = v2[3];
  v3[33] = v6;
  uint64_t v7 = v2[4];
  v3[34] = v7;
  uint64_t v8 = v2[5];
  v3[35] = v8;
  long long v14 = *((_OWORD *)v3 + 3);
  *((_OWORD *)v3 + 18) = v14;
  v3[38] = v2[8];
  uint64_t v9 = v2[9];
  v3[39] = v9;
  uint64_t v10 = v2[10];
  v3[40] = v10;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100359DFC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_101670540
                                                                                                + dword_101670540);
    unint64_t v11 = (void *)swift_task_alloc();
    v3[41] = v11;
    *unint64_t v11 = v4;
    v11[1] = sub_100359AD8;
    return v13(v5, v6, v7, v8, v14, v9, v10);
  }
}

uint64_t sub_100359AD8()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_100359D84;
  }
  else {
    uint64_t v2 = sub_100359D0C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100359D0C()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100359D84()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100359DFC()
{
  swift_release();
  *(void *)(v0 + 344) = *(void *)(v0 + 248);
  return _swift_task_switch(sub_100359E6C, 0, 0);
}

uint64_t sub_100359E6C()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100359EE4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100359F88;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100359F88(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10035A0BC, 0, 0);
  }
}

uint64_t sub_10035A0BC()
{
  uint64_t v1 = v0[8];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[10] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10035A1C0;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_10035A1C0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10035A4D4;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_10035A2E8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035A2E8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[14] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10035A3AC;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_10035A3AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_10035A7F0;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_10035A540;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035A4D4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035A540()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[8];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  v0[18] = sub_10034E920(v4, v9, v1, v5, v3);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v10 = (void *)swift_task_alloc();
  v0[19] = v10;
  void *v10 = v0;
  v10[1] = sub_10035A6DC;
  return sub_1012900F0();
}

uint64_t sub_10035A6DC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10035A8E0;
  }
  else {
    uint64_t v2 = sub_10035A868;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035A7F0()
{
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035A868()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035A8E0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035A958(uint64_t a1, uint64_t a2)
{
  v2[12] = a1;
  v2[13] = a2;
  uint64_t v3 = *(void *)(type metadata accessor for MemberPeerTrust() - 8);
  v2[14] = v3;
  v2[15] = *(void *)(v3 + 64);
  v2[16] = swift_task_alloc();
  uint64_t v4 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  v2[17] = v4;
  v2[18] = *(void *)(v4 + 64);
  v2[19] = swift_task_alloc();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[20] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10035AAC0;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10035AAC0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 176) = v7;
    void *v7 = v4;
    v7[1] = sub_10035AC5C;
    return _swift_task_switch(sub_1003504F8, 0, 0);
  }
}

uint64_t sub_10035AC5C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 184) = a1;
    return _swift_task_switch(sub_10035ADBC, 0, 0);
  }
}

uint64_t sub_10035ADBC()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = &off_1015F0C30;
  *(void *)(v0 + 16) = v1;
  type metadata accessor for ShareRequestUseCase();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 192) = v4;
  uint64_t v5 = sub_1000BD078(v0 + 16, v3);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = (void *)swift_task_alloc();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, v5, v3);
  *(void *)(v0 + 56) = *v7;
  *(void *)(v0 + 80) = v3;
  *(void *)(v0 + 88) = &off_1015F0C30;
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = v2;
  sub_10001CEB0((long long *)(v0 + 56), v4 + 120);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_release();
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v11 = *(void *)(v0 + 136);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 104);
  sub_100367550(*(void *)(v0 + 96), v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_100367550(v13, v10, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v9 + *(unsigned __int8 *)(v12 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v0 + 200) = v16;
  *(void *)(v16 + 16) = v4;
  sub_10036788C(v8, v16 + v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10036788C(v10, v16 + v15, (uint64_t (*)(void))type metadata accessor for MemberPeerTrust);
  uint64_t v19 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  unint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v0 + 208) = v17;
  void *v17 = v0;
  v17[1] = sub_10035B09C;
  return v19(&unk_101642108, v16);
}

uint64_t sub_10035B09C()
{
  *(void *)(*(void *)v1 + 216) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10035B248;
  }
  else {
    uint64_t v2 = sub_10035B1CC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035B1CC()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035B248()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035B2C0(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 80) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10035B36C;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10035B36C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10035B4A0, 0, 0);
  }
}

uint64_t sub_10035B4A0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 48) = v3;
  swift_retain();
  swift_defaultActor_initialize();
  type metadata accessor for KeyDropInterface();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v0 + 56) = sub_10034DA70(v3, v1, v2, (void (*)(void))type metadata accessor for ShareKeysUploadUseCase);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10035B5DC;
  char v6 = *(unsigned char *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  return sub_1006D102C(v7, v6);
}

uint64_t sub_10035B5DC()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10035B768;
  }
  else {
    uint64_t v2 = sub_10035B6F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035B6F0()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035B768()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035B7E0(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[9] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10035B888;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10035B888(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10035B9BC, 0, 0);
  }
}

uint64_t sub_10035B9BC()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v3 = swift_allocObject();
  v0[11] = v3;
  swift_retain();
  swift_defaultActor_initialize();
  type metadata accessor for KeyDropInterface();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = v1;
  sub_10001D010(v2, (uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
  uint64_t v9 = *v8;
  swift_retain();
  uint64_t v10 = swift_retain();
  v0[12] = sub_10034DA70(v10, v1, v9, (void (*)(void))type metadata accessor for ShareKeysDownloadUseCase);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10035BBA0;
  uint64_t v12 = v0[7];
  return sub_1007D13A8(v12);
}

uint64_t sub_10035BBA0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003681CC;
  }
  else {
    uint64_t v2 = sub_1003681BC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035BCB4(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = (void *)swift_task_alloc();
  v2[9] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10035BD5C;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10035BD5C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 80) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10035BE90, 0, 0);
  }
}

uint64_t sub_10035BE90()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v3 = swift_allocObject();
  v0[11] = v3;
  swift_retain();
  swift_defaultActor_initialize();
  type metadata accessor for KeyDropInterface();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = v1;
  sub_10001D010(v2, (uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
  uint64_t v9 = *v8;
  swift_retain();
  uint64_t v10 = swift_retain();
  v0[12] = sub_10034DA70(v10, v1, v9, (void (*)(void))type metadata accessor for ShareKeysDownloadUseCase);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10035C074;
  uint64_t v12 = v0[7];
  return sub_1007DB09C(v12);
}

uint64_t sub_10035C074()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10035C200;
  }
  else {
    uint64_t v2 = sub_10035C188;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035C188()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035C200()
{
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035C278(uint64_t a1)
{
  v1[6] = a1;
  sub_10000588C(&qword_101638CF0);
  v1[7] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for UUID();
  v1[8] = v2;
  v1[9] = *(void *)(v2 - 8);
  v1[10] = swift_task_alloc();
  type metadata accessor for CheckDataIntegrityUseCase();
  swift_allocObject();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[11] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10035C3AC;
  return sub_100075928();
}

uint64_t sub_10035C3AC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10035C4F4, 0, 0);
  }
}

uint64_t sub_10035C4F4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[7];
  sub_10001D074(v0[6], v3, &qword_101638CF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001DAB4(v0[7], &qword_101638CF0);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[14] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10035C80C;
    return sub_100075CF8();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0[9] + 32))(v0[10], v0[7], v0[8]);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = (uint64_t)v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10035C664;
    uint64_t v7 = v0[10];
    return sub_100077A90(v7);
  }
}

uint64_t sub_10035C664(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10035C764, 0, 0);
}

uint64_t sub_10035C764()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10035C80C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 32) = v1;
  *(void *)(v2 + 40) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10035C90C, 0, 0);
}

uint64_t sub_10035C90C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10035C98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[11] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[12] = v6;
  v4[13] = *(void *)(v6 + 64);
  v4[14] = swift_task_alloc();
  return _swift_task_switch(sub_10035CA58, 0, 0);
}

uint64_t sub_10035CA58()
{
  sub_10001D010(*(void *)(v0 + 64), v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035CAF8;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035CAF8(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 128) = a1;
  *(void *)(v3 + 136) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_10035CF04;
  }
  else {
    uint64_t v5 = sub_10035CC20;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035CC20()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[13];
  uint64_t v2 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 16))(v2, v0[7], v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  v0[18] = v10;
  *(void *)(v10 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v8, v2, v4);
  uint64_t v11 = (void *)(v10 + v9);
  *uint64_t v11 = v6;
  v11[1] = v7;
  uint64_t v14 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[19] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10035CDD4;
  return v14(&unk_1016420F0, v10);
}

uint64_t sub_10035CDD4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10035CFD8;
  }
  else {
    uint64_t v2 = sub_10035CF68;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035CF04()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035CF68()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035CFD8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035D044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[8] = a2;
  v3[9] = a3;
  v3[7] = a1;
  sub_10000588C(&qword_101638CF0);
  v3[10] = swift_task_alloc();
  return _swift_task_switch(sub_10035D0DC, 0, 0);
}

uint64_t sub_10035D0DC()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035D180;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035D180(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2 + 16;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = sub_10035D640;
    uint64_t v7 = 0;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = sub_10035D2D0;
    uint64_t v7 = a1;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_10035D2D0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10035D400;
  uint64_t v6 = v0[10];
  return sub_100E5C1B8(v6, 1);
}

uint64_t sub_10035D400(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 104);
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  sub_10001DAB4(v3, &qword_101638CF0);
  return _swift_task_switch(sub_10035D53C, v2, 0);
}

uint64_t sub_10035D53C()
{
  *(void *)(v0 + 128) = *(void *)(*(void *)(v0 + 120) + 16);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_10035D5AC, 0, 0);
}

uint64_t sub_10035D5AC()
{
  (*(void (**)(BOOL))(v0 + 64))(*(void *)(v0 + 128) != 0);
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035D640()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035D6A4(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = type metadata accessor for UUID();
  v2[9] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[10] = v4;
  v2[11] = *(void *)(v4 + 64);
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_10035D76C, 0, 0);
}

uint64_t sub_10035D76C()
{
  sub_10001D010(*(void *)(v0 + 64), v0 + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035D80C;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035D80C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_10035DBEC;
  }
  else {
    uint64_t v5 = sub_10035D934;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035D934()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[10];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v2, v0[7], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  v0[16] = v6;
  *(void *)(v6 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v5, v2, v3);
  uint64_t v9 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[17] = v7;
  void *v7 = v0;
  v7[1] = sub_10035DABC;
  return v9(&unk_1016420D0, v6);
}

uint64_t sub_10035DABC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10035DCC0;
  }
  else {
    uint64_t v2 = sub_10035DC50;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035DBEC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035DC50()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035DCC0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035DD2C(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  return _swift_task_switch(sub_10035DD4C, 0, 0);
}

uint64_t sub_10035DD4C()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035DDF0;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035DDF0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    unint64_t v5 = sub_10035E170;
  }
  else {
    unint64_t v5 = sub_10035DF18;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035DF18()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  uint64_t v2 = v0[7];
  uint64_t v3 = swift_allocObject();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v6 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10035E054;
  return v6(&unk_101642060, v3);
}

uint64_t sub_10035E054()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10035E1EC;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10035E188;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035E170()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10035E188()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035E1EC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035E25C(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  v1[11] = v2;
  v1[12] = *(void *)(v2 + 64);
  v1[13] = swift_task_alloc();
  return _swift_task_switch(sub_10035E320, 0, 0);
}

uint64_t sub_10035E320()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035E3C4;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035E3C4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = *v2 + 16;
  v3[7] = v2;
  v3[8] = a1;
  v3[9] = v1;
  v3[15] = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    unint64_t v5 = sub_10035E644;
  }
  else {
    unint64_t v5 = sub_10035E4F4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035E4F4()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[11];
  sub_100367550(v0[10], v2, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v1;
  sub_10036788C(v2, v5 + v4, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  swift_retain();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_10035E644()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035E6A8(uint64_t a1)
{
  v1[10] = a1;
  uint64_t v2 = type metadata accessor for UUID();
  v1[11] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[12] = v3;
  v1[13] = *(void *)(v3 + 64);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_10035E780, 0, 0);
}

uint64_t sub_10035E780()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035E824;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035E824(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 136) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_10035EC08;
  }
  else {
    uint64_t v5 = sub_10035E94C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035E94C()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[11];
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 16))(v2, v0[10], v4);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = swift_allocObject();
  v0[19] = v6;
  *(void *)(v6 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v6 + v5, v2, v4);
  uint64_t v9 = (char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult<A>(_:)
     + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult<A>(_:);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[20] = v7;
  void *v7 = v0;
  v7[1] = sub_10035EAEC;
  return ((uint64_t (*)(void *, void *, uint64_t, void *))v9)(v0 + 22, &unk_101642048, v6, &type metadata for Bool);
}

uint64_t sub_10035EAEC()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10035EFC0;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_10035EF48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035EC08()
{
  uint64_t v22 = v0;
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170D788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[12];
  if (v8)
  {
    os_log_t log = v6;
    os_log_type_t type = v7;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 141558531;
    v0[7] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2081;
    sub_10028B80C();
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[8] = sub_1008FA0F0(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    *(_WORD *)(v12 + 22) = 2114;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v18 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Could not verify delegation meta-data for %{private,mask.hash}s, %{public}@", (uint8_t *)v12, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_10035EF48()
{
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 176);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10035EFC0()
{
  uint64_t v22 = v0;
  swift_release();
  swift_release();
  if (qword_101636888 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170D788);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = v0[14];
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[12];
  if (v8)
  {
    os_log_t log = v6;
    os_log_type_t type = v7;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 141558531;
    v0[7] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2081;
    sub_10028B80C();
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[8] = sub_1008FA0F0(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    *(_WORD *)(v12 + 22) = 2114;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v18 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Could not verify delegation meta-data for %{private,mask.hash}s, %{public}@", (uint8_t *)v12, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_10035F314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  v4[11] = v5;
  v4[12] = *(void *)(v5 + 64);
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_10035F3DC, 0, 0);
}

uint64_t sub_10035F3DC()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035F480;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035F480(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2 + 16;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = sub_10035F760;
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    sub_10001DAB4(v5, &qword_10163BDE0);
    uint64_t v6 = sub_10035F5CC;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_10035F5CC()
{
  uint64_t v1 = v0[15];
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  unint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  sub_100367550(v0[7], v2, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  sub_10036788C(v2, v10 + v8, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v11 = (uint64_t *)(v10 + v9);
  *uint64_t v11 = v7;
  v11[1] = v6;
  v11[2] = v4;
  swift_retain();
  sub_100366EC8(v7, v6, v4);
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_10035F760()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  unint64_t v3 = v0[10];
  uint64_t v4 = v0[11];
  uint64_t v6 = v0[8];
  uint64_t v5 = v0[9];
  sub_100367550(v0[7], v1, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v8 = (v2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  sub_10036788C(v1, v9 + v7, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  uint64_t v10 = (uint64_t *)(v9 + v8);
  uint64_t *v10 = v6;
  v10[1] = v5;
  v10[2] = v3;
  sub_100366EC8(v6, v5, v3);
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10035F8D0(uint64_t a1)
{
  v1[7] = a1;
  uint64_t v2 = type metadata accessor for UUID();
  v1[8] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v1[9] = v3;
  v1[10] = *(void *)(v3 + 64);
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_10035F998, 0, 0);
}

uint64_t sub_10035F998()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10035FA3C;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10035FA3C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_10035FE1C;
  }
  else {
    uint64_t v5 = sub_10035FB64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10035FB64()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 16))(v2, v0[7], v3);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  v0[15] = v6;
  *(void *)(v6 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6 + v5, v2, v3);
  uint64_t v9 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[16] = v7;
  void *v7 = v0;
  v7[1] = sub_10035FCEC;
  return v9(&unk_101642018, v6);
}

uint64_t sub_10035FCEC()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_10035FEF0;
  }
  else {
    uint64_t v2 = sub_10035FE80;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10035FE1C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035FE80()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035FEF0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10035FF5C(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 80) = a2;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 32) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_100360008;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100360008(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 40) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10036013C, 0, 0);
  }
}

uint64_t sub_10036013C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 24);
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 48) = v3;
  swift_retain();
  swift_defaultActor_initialize();
  type metadata accessor for KeyDropInterface();
  uint64_t v4 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = 0;
  *(void *)(v4 + 120) = 0;
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = v1;
  swift_retain();
  swift_retain();
  swift_retain();
  *(void *)(v0 + 56) = sub_10034DA70(v3, v1, v2, (void (*)(void))type metadata accessor for ShareKeysUploadUseCase);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *unint64_t v5 = v0;
  v5[1] = sub_100360278;
  char v6 = *(unsigned char *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  return sub_1006D14C0(v7, v6);
}

uint64_t sub_100360278()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1003681E0;
  }
  else {
    uint64_t v2 = sub_1003681F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10036038C()
{
  return _swift_task_switch(sub_1003603A8, 0, 0);
}

uint64_t sub_1003603A8()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10036044C;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_10036044C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 64) = a1;
  *(void *)(v3 + 72) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    unint64_t v5 = sub_1003681C8;
  }
  else {
    unint64_t v5 = sub_100360574;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360574()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v4 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100360674;
  uint64_t v2 = *(void *)(v0 + 64);
  return v4(&unk_101642098, v2);
}

uint64_t sub_100360674()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100360790;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003681F4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100360790()
{
  swift_release_n();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003607F8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10036089C;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_10036089C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 64) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_1003609D0, 0, 0);
  }
}

uint64_t sub_1003609D0()
{
  uint64_t v1 = v0[8];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[10] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100360AD4;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100360AD4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681EC;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_100360BFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360BFC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[14] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100360CC0;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100360CC0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681C0;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_100360DE8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100360DE8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[8];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  unint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10034E920(v4, v9, v1, v5, v3);
  v0[18] = v10;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v13 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[19] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100360FF0;
  return v13(&unk_101642080, v10);
}

uint64_t sub_100360FF0()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10036110C;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1003681E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10036110C()
{
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100361188(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 368) = a3;
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = a2;
  uint64_t v4 = type metadata accessor for UUID();
  *(void *)(v3 + 200) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)(v3 + 208) = v5;
  *(void *)(v3 + 216) = *(void *)(v5 + 64);
  *(void *)(v3 + 224) = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 232) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100361298;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100361298(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 240) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 248) = v7;
    void *v7 = v4;
    v7[1] = sub_100361428;
    return _swift_task_switch(sub_1002708D8, 0, 0);
  }
}

uint64_t sub_100361428(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 256) = a1;
  *(void *)(v3 + 264) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1003617B4;
  }
  else {
    uint64_t v4 = sub_10036153C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10036153C()
{
  uint64_t v1 = v0[32];
  uint64_t v2 = v0[30];
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager();
  uint64_t v4 = swift_allocObject();
  v0[34] = v4;
  swift_retain();
  swift_defaultActor_initialize();
  v0[35] = type metadata accessor for KeyDropInterface();
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  *(void *)(v4 + 112) = v5;
  *(void *)(v4 + 120) = v2;
  v0[11] = type metadata accessor for FamilyCircleService();
  v0[12] = &off_1015F13C8;
  v0[8] = v1;
  v0[16] = v3;
  v0[17] = &off_1015EE080;
  v0[13] = v4;
  swift_retain();
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[36] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10036168C;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_10036168C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100361A44;
  }
  else
  {
    *(void *)(v4 + 304) = a1;
    uint64_t v5 = sub_100361820;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003617B4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100361820()
{
  uint64_t v1 = v0[38];
  uint64_t v2 = v0[35];
  v0[21] = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[22] = &off_1015F0C30;
  v0[18] = v1;
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  v0[5] = v2;
  v0[6] = &off_101603A20;
  v0[7] = &off_1015CCC70;
  v0[2] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[39] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10036191C;
  return _swift_task_switch(sub_1003500F8, 0, 0);
}

uint64_t sub_10036191C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 320) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100362064;
  }
  else
  {
    *(void *)(v4 + 328) = a1;
    uint64_t v5 = sub_100361AE8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100361A44()
{
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100361AE8()
{
  uint64_t v35 = *(void *)(v0 + 328);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = sub_1000BD078(v0 + 64, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16))(v4, v2, v1);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = sub_1000BD078(v0 + 104, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v5);
  uint64_t v9 = *(void *)(v0 + 168);
  uint64_t v10 = sub_1000BD078(v0 + 144, v9);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t v12 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v12, v10, v9);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = sub_1000BD078(v0 + 16, v13);
  uint64_t v15 = *(void *)(v13 - 8);
  uint64_t v16 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v15 + 16))(v16, v14, v13);
  uint64_t v17 = *v4;
  uint64_t v18 = *v8;
  uint64_t v19 = *v12;
  uint64_t v20 = *v16;
  uint64_t v21 = swift_retain();
  uint64_t v22 = sub_10034EEE8(v21, v17, v18, v19, v20, v35);
  *(void *)(v0 + 336) = v22;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 144);
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
  swift_task_dealloc();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v24 = *(void *)(v0 + 216);
  uint64_t v23 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 200);
  uint64_t v26 = *(void *)(v0 + 208);
  char v27 = *(unsigned char *)(v0 + 368);
  uint64_t v28 = *(void *)(v0 + 192);
  (*(void (**)(uint64_t, void, uint64_t))(v26 + 16))(v23, *(void *)(v0 + 184), v25);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v30 = (v24 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = swift_allocObject();
  *(void *)(v0 + 344) = v31;
  *(void *)(v31 + 16) = v22;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v31 + v29, v23, v25);
  unint64_t v32 = v31 + v30;
  *(void *)unint64_t v32 = v28;
  *(unsigned char *)(v32 + 8) = v27;
  uint64_t v36 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_100361F34;
  return v36(&unk_101641F98, v31);
}

uint64_t sub_100361F34()
{
  *(void *)(*(void *)v1 + 360) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1003621C4;
  }
  else {
    uint64_t v2 = sub_100362128;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100362064()
{
  swift_release();
  swift_release();
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 144);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 104);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 64);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100362128()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003621C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10036225C(uint64_t a1, char a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 160) = v54;
  *(void *)(v8 + 168) = v55;
  *(_OWORD *)(v8 + 144) = v53;
  *(void *)(v8 + 128) = v50;
  *(void *)(v8 + 136) = v51;
  *(void *)(v8 + 328) = v48;
  *(void *)(v8 + 112) = v47;
  *(void *)(v8 + 120) = v49;
  *(void *)(v8 + 96) = v45;
  *(void *)(v8 + 104) = v46;
  *(void *)(v8 + 80) = v43;
  *(void *)(v8 + 88) = v44;
  *(void *)(v8 + 64) = v39;
  *(void *)(v8 + 72) = v42;
  *(void *)(v8 + 48) = a8;
  *(void *)(v8 + 56) = v38;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 40) = a7;
  *(void *)(v8 + 16) = a4;
  *(void *)(v8 + 24) = a5;
  *(unsigned char *)(v8 + 341) = a3;
  *(unsigned char *)(v8 + 340) = a2;
  uint64_t v11 = (int *)sub_10000588C(&qword_10163B938);
  *(void *)(v8 + 176) = v11;
  uint64_t v12 = *((void *)v11 - 1);
  *(void *)(v8 + 184) = v12;
  *(void *)(v8 + 192) = *(void *)(v12 + 64);
  *(void *)(v8 + 200) = swift_task_alloc();
  uint64_t v13 = swift_task_alloc();
  *(void *)(v8 + 208) = v13;
  uint64_t v14 = (int *)sub_10000588C(&qword_10163B940);
  *(void *)(v8 + 216) = v14;
  uint64_t v15 = *((void *)v14 - 1);
  *(void *)(v8 + 224) = v15;
  *(void *)(v8 + 232) = *(void *)(v15 + 64);
  *(void *)(v8 + 240) = swift_task_alloc();
  uint64_t v16 = swift_task_alloc();
  *(void *)(v8 + 248) = v16;
  uint64_t v17 = type metadata accessor for UUID();
  *(void *)(v8 + 256) = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  *(void *)(v8 + 264) = v19;
  *(void *)(v8 + 272) = (v18 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v19(v16, a1, v17);
  *(unsigned char *)(v16 + v14[12]) = a2;
  uint64_t v20 = v16 + v14[16];
  *(unsigned char *)uint64_t v20 = a3;
  *(void *)(v20 + 8) = a4;
  *(void *)(v20 + 16) = a5;
  uint64_t v21 = (void *)(v16 + v14[20]);
  *uint64_t v21 = a6;
  v21[1] = a7;
  *(void *)(v16 + v14[24]) = a8;
  uint64_t v22 = (uint64_t *)(v16 + v14[28]);
  uint64_t *v22 = v38;
  v22[1] = v39;
  uint64_t v23 = v11[12];
  *(_DWORD *)(v8 + 336) = v23;
  uint64_t v24 = v13 + v23;
  v19(v13, v40, v17);
  sub_10001D074(v41, v24, &qword_101638CF0);
  uint64_t v25 = (void *)(v13 + v11[16]);
  *uint64_t v25 = v42;
  v25[1] = v43;
  uint64_t v26 = (void *)(v13 + v11[20]);
  void *v26 = v44;
  v26[1] = v45;
  char v27 = (void *)(v13 + v11[24]);
  *char v27 = v46;
  v27[1] = v47;
  *(_DWORD *)(v13 + v11[28]) = v48;
  *(_DWORD *)(v13 + v11[32]) = HIDWORD(v48);
  *(void *)(v13 + v11[36]) = v49;
  uint64_t v28 = (void *)(v13 + v11[40]);
  *uint64_t v28 = v50;
  v28[1] = v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v38, v39);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v8 + 280) = v29;
  *unint64_t v29 = v8;
  v29[1] = sub_100362668;
  return sub_100351D10(v52);
}

uint64_t sub_100362668(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 288) = a1;
  *(void *)(v3 + 296) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100362CC4;
  }
  else {
    uint64_t v4 = sub_10036277C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10036277C()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v53 = *(void *)(v0 + 288);
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 264);
  uint64_t v34 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v52 = *(void *)(v0 + 232);
  uint64_t v48 = *(void *)(v0 + 224);
  uint64_t v2 = *(int **)(v0 + 216);
  uint64_t v36 = *(void *)(v0 + 208);
  uint64_t v40 = *(void *)(v0 + 200);
  uint64_t v51 = *(void *)(v0 + 192);
  uint64_t v3 = *(int **)(v0 + 176);
  uint64_t v47 = *(void *)(v0 + 184);
  uint64_t v56 = *(void *)(v0 + 160);
  uint64_t v57 = *(void *)(v0 + 168);
  uint64_t v54 = *(void *)(v0 + 144);
  uint64_t v55 = *(void *)(v0 + 152);
  uint64_t v45 = *(void *)(v0 + 128);
  uint64_t v46 = *(void *)(v0 + 136);
  int v44 = *(_DWORD *)(v0 + 332);
  int v42 = *(_DWORD *)(v0 + 328);
  uint64_t v43 = *(void *)(v0 + 120);
  uint64_t v62 = *(void *)(v0 + 112);
  uint64_t v39 = v36 + *(int *)(v0 + 336);
  uint64_t v4 = v1 + v2[16];
  unint64_t v32 = (void *)(v1 + v2[20]);
  uint64_t v33 = v2[12];
  uint64_t v31 = v2[24];
  uint64_t v5 = (uint64_t *)(v1 + v2[28]);
  uint64_t v38 = *(void *)(v0 + 104);
  uint64_t v61 = *(void *)(v0 + 96);
  uint64_t v37 = *(void *)(v0 + 88);
  uint64_t v60 = *(void *)(v0 + 80);
  unint64_t v6 = *(void *)(v0 + 64);
  uint64_t v35 = *(void *)(v0 + 72);
  unint64_t v50 = v6;
  uint64_t v8 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v49 = v7;
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 24);
  uint64_t v29 = *(void *)(v0 + 16);
  uint64_t v30 = *(void *)(v0 + 32);
  char v27 = *(unsigned char *)(v0 + 340);
  char v28 = *(unsigned char *)(v0 + 341);
  ((void (*)(uint64_t, void))v58)(v1, *(void *)(v0 + 248));
  uint64_t v41 = v1;
  *(unsigned char *)(v1 + v33) = v27;
  *(unsigned char *)uint64_t v4 = v28;
  *(void *)(v4 + 8) = v29;
  *(void *)(v4 + 16) = v10;
  void *v32 = v30;
  v32[1] = v9;
  *(void *)(v1 + v31) = v8;
  *uint64_t v5 = v7;
  v5[1] = v6;
  uint64_t v11 = v40 + v3[12];
  uint64_t v12 = (void *)(v40 + v3[16]);
  uint64_t v13 = (void *)(v40 + v3[20]);
  uint64_t v14 = (void *)(v40 + v3[24]);
  uint64_t v15 = v3[28];
  uint64_t v16 = v3[32];
  uint64_t v17 = (void *)(v40 + v3[40]);
  uint64_t v18 = v3[36];
  v58(v40, v36, v34);
  sub_10001D074(v39, v11, &qword_101638CF0);
  *uint64_t v12 = v35;
  v12[1] = v60;
  *uint64_t v13 = v37;
  v13[1] = v61;
  void *v14 = v38;
  v14[1] = v62;
  *(_DWORD *)(v40 + v15) = v42;
  *(_DWORD *)(v40 + v16) = v44;
  *(void *)(v40 + v18) = v43;
  void *v17 = v45;
  v17[1] = v46;
  unint64_t v19 = (*(unsigned __int8 *)(v48 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v20 = (v52 + *(unsigned __int8 *)(v47 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
  unint64_t v21 = (v51 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_allocObject();
  *(void *)(v0 + 304) = v22;
  *(void *)(v22 + 16) = v53;
  sub_10001D608(v41, v22 + v19, &qword_10163B940);
  sub_10001D608(v40, v22 + v20, &qword_10163B938);
  uint64_t v23 = (void *)(v22 + v21);
  *uint64_t v23 = v54;
  v23[1] = v55;
  uint64_t v24 = (void *)(v22 + ((v21 + 23) & 0xFFFFFFFFFFFFFFF8));
  void *v24 = v56;
  v24[1] = v57;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1000361E0(v49, v50);
  uint64_t v59 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_100362B94;
  return v59(&unk_101641F08, v22);
}

uint64_t sub_100362B94()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100362E2C;
  }
  else {
    uint64_t v2 = sub_100362D78;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100362CC4()
{
  uint64_t v1 = v0[31];
  sub_10001DAB4(v0[26], &qword_10163B938);
  sub_10001DAB4(v1, &qword_10163B940);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100362D78()
{
  uint64_t v1 = v0[31];
  uint64_t v2 = v0[26];
  swift_release();
  sub_10001DAB4(v2, &qword_10163B938);
  sub_10001DAB4(v1, &qword_10163B940);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100362E2C()
{
  swift_release();
  uint64_t v1 = v0[31];
  sub_10001DAB4(v0[26], &qword_10163B938);
  sub_10001DAB4(v1, &qword_10163B940);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100362EE8(uint64_t a1)
{
  v1[12] = a1;
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  v1[13] = v2;
  v1[14] = *(void *)(v2 + 64);
  v1[15] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[16] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100362FF0;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100362FF0(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v3 + 144) = v7;
    void *v7 = v4;
    v7[1] = sub_100363180;
    return _swift_task_switch(sub_1003504F8, 0, 0);
  }
}

uint64_t sub_100363180(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    unint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 152) = a1;
    return _swift_task_switch(sub_1003632DC, 0, 0);
  }
}

uint64_t sub_1003632DC()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  *(void *)(v0 + 40) = v3;
  *(void *)(v0 + 48) = &off_1015F0C30;
  *(void *)(v0 + 16) = v1;
  type metadata accessor for ShareRequestUseCase();
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 160) = v4;
  uint64_t v5 = sub_1000BD078(v0 + 16, v3);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t v7 = (void *)swift_task_alloc();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, v5, v3);
  *(void *)(v0 + 56) = *v7;
  *(void *)(v0 + 80) = v3;
  *(void *)(v0 + 88) = &off_1015F0C30;
  swift_retain();
  swift_defaultActor_initialize();
  *(void *)(v4 + 112) = v2;
  sub_10001CEB0((long long *)(v0 + 56), v4 + 120);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_release();
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 120);
  uint64_t v9 = *(void *)(v0 + 104);
  sub_100367550(*(void *)(v0 + 96), v8, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v0 + 168) = v11;
  *(void *)(v11 + 16) = v4;
  sub_10036788C(v8, v11 + v10, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v14 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100363564;
  return v14(&unk_101641F38, v11);
}

uint64_t sub_100363564()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100363704;
  }
  else {
    uint64_t v2 = sub_100363694;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100363694()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100363704()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100363770(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  void *v2 = v1;
  v2[1] = sub_100363818;
  return _swift_task_switch(sub_1002703EC, 0, 0);
}

uint64_t sub_100363818(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 72) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10036394C, 0, 0);
  }
}

uint64_t sub_10036394C()
{
  uint64_t v1 = v0[9];
  type metadata accessor for SharingCircleKeyManager();
  uint64_t v2 = swift_allocObject();
  v0[10] = v2;
  swift_retain();
  swift_defaultActor_initialize();
  v0[11] = type metadata accessor for KeyDropInterface();
  uint64_t v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = 0;
  *(void *)(v2 + 112) = v3;
  *(void *)(v2 + 120) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100363A50;
  return _swift_task_switch(sub_1003504F8, 0, 0);
}

uint64_t sub_100363A50(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681F8;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_100363B78;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100363B78()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = type metadata accessor for IDSTransportService_ItemSharingCrossAccount();
  v0[15] = v2;
  v0[5] = v2;
  v0[6] = &off_1015F0C30;
  v0[2] = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100363C3C;
  return _swift_task_switch(sub_1002708D8, 0, 0);
}

uint64_t sub_100363C3C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1003681C4;
  }
  else
  {
    *(void *)(v4 + 144) = a1;
    uint64_t v5 = sub_100363D64;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100363D64()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[9];
  uint64_t v5 = swift_allocObject();
  swift_defaultActor_initialize();
  *(void *)(v5 + 112) = 0;
  *(void *)(v5 + 120) = 0;
  uint64_t v6 = sub_1000BD078((uint64_t)(v0 + 2), v2);
  uint64_t v7 = *(void *)(v2 - 8);
  uint64_t v8 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v8, v6, v2);
  uint64_t v9 = *v8;
  swift_retain();
  swift_retain();
  uint64_t v10 = sub_10034E920(v4, v9, v1, v5, v3);
  v0[19] = v10;
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v11 = v0[7];
  uint64_t v12 = swift_allocObject();
  v0[20] = v12;
  *(void *)(v12 + 16) = v10;
  *(void *)(v12 + 24) = v11;
  uint64_t v15 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[21] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_100357BA0;
  return v15(&unk_101641EF0, v12);
}

uint64_t sub_100363F9C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_10034CB30(v2, v3);
}

uint64_t sub_100364034()
{
  uint64_t v1 = (int *)(sub_10000588C(&qword_10163B940) - 8);
  uint64_t v14 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v2 = (v14 + 24) & ~v14;
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = sub_10000588C(&qword_10163B938);
  uint64_t v13 = *(unsigned __int8 *)(*(void *)(v4 - 8) + 80);
  uint64_t v5 = (v2 + v3 + v13) & ~v13;
  uint64_t v12 = *(void *)(*(void *)(v4 - 8) + 64);
  swift_release();
  uint64_t v6 = v0 + v2;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v6 + v1[30]), *(void *)(v6 + v1[30] + 8));
  v9(v0 + v5, v7);
  uint64_t v10 = v0 + v5 + *(int *)(v4 + 48);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, ((((v12 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v14 | v13 | 7);
}

uint64_t sub_1003642D4()
{
  uint64_t v2 = *(void *)(sub_10000588C(&qword_10163B940) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(sub_10000588C(&qword_10163B938) - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = v0 + v6;
  uint64_t v11 = *(void *)(v0 + v7);
  uint64_t v12 = *(void *)(v0 + v7 + 8);
  uint64_t v13 = (uint64_t *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v16;
  *uint64_t v16 = v1;
  v16[1] = sub_100033F68;
  return sub_100346AE4(v8, v9, v10, v11, v12, v14, v15);
}

uint64_t sub_100364478()
{
  uint64_t v1 = (int *)type metadata accessor for OwnerPeerTrust();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v15 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for OwnerSharingCircle();
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v14 = *(void *)(*(void *)(v3 - 8) + 64);
  swift_release();
  uint64_t v16 = v0;
  uint64_t v5 = v0 + ((v2 + 24) & ~v2);
  sub_10001CFB8(*(void *)v5, *(void *)(v5 + 8));
  uint64_t v6 = v5 + v1[5];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v5 + v1[7];
  type metadata accessor for PeerCommunicationIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_5;
    case 1u:
      v8(v9, v7);
      break;
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v10 = (((v2 + 24) & ~v2) + v15 + v4) & ~v4;
  uint64_t v11 = v14 + v10 + 1;
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v5 + v1[9]), *(void *)(v5 + v1[9] + 8));
  uint64_t v12 = v16 + v10;
  sub_10001CFB8(*(void *)v12, *(void *)(v12 + 8));
  v8(v12 + *(int *)(v3 + 20), v7);
  v8(v12 + *(int *)(v3 + 24), v7);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v16, v11, v2 | v4 | 7);
}

uint64_t sub_10036472C()
{
  uint64_t v2 = *(void *)(type metadata accessor for OwnerPeerTrust() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  unint64_t v6 = (v3 + v4 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + v6;
  char v10 = *(unsigned char *)(v0 + v6 + *(void *)(v5 + 64));
  uint64_t v11 = swift_task_alloc();
  *(void *)(v1 + 16) = v11;
  *(void *)uint64_t v11 = v1;
  *(unsigned char *)(v11 + 76) = v10;
  *(void *)(v11 + 24) = v8;
  *(void *)(v11 + 32) = v9;
  *(void *)(v11 + 8) = sub_100033F68;
  *(void *)(v11 + 16) = v7;
  return _swift_task_switch(sub_10034C5D0, 0, 0);
}

uint64_t sub_1003648A0()
{
  uint64_t v1 = (int *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[8], v8);
  v9(v6 + v1[9], v8);
  v9(v6 + v1[10], v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100364A04()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_10034CC78(v3, v4);
}

uint64_t sub_100364AD8(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 64) = a3;
  *(void *)(v4 + 72) = a4;
  *(unsigned char *)(v4 + 160) = a2;
  *(void *)(v4 + 56) = a1;
  uint64_t v5 = type metadata accessor for UUID();
  *(void *)(v4 + 80) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = *(void *)(v6 + 64);
  *(void *)(v4 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_100364BA8, 0, 0);
}

uint64_t sub_100364BA8()
{
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100364C4C;
  return sub_1003508DC(v0 + 16);
}

uint64_t sub_100364C4C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2 + 16;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v1;
  swift_task_dealloc();
  sub_10001DAB4(v4, &qword_10163BDE0);
  if (v1) {
    uint64_t v5 = sub_100365064;
  }
  else {
    uint64_t v5 = sub_100364D74;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100364D74()
{
  if (qword_101636A80 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 72);
  char v7 = *(unsigned char *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 64);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 16))(v2, *(void *)(v0 + 56), v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v9 = (v3 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v0 + 136) = v10;
  *(void *)(v10 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v8, v2, v4);
  unint64_t v11 = v10 + v9;
  *(unsigned char *)unint64_t v11 = v7;
  *(void *)(v11 + 8) = v14;
  *(void *)(v11 + 16) = v6;
  uint64_t v15 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                                + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100364F34;
  return v15(&unk_101641F60, v10);
}

uint64_t sub_100364F34()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_100365138;
  }
  else {
    uint64_t v2 = sub_1003650C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100365064()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003650C8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100365138()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003651A4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100365290()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t v8 = *(void *)(v6 + 16);
  char v9 = *(unsigned char *)v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_100033F68;
  return sub_10034AD0C(v4, v5, v9, v7, v8);
}

uint64_t sub_1003653B8()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *char v9 = v1;
  v9[1] = sub_100033F68;
  return sub_10034697C(v4, v5, v7, v8);
}

uint64_t sub_1003654D4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 9;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003655BC()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *char v9 = v1;
  v9[1] = sub_100033F68;
  return sub_100346A30(v4, v5, v7, v8);
}

uint64_t sub_1003656D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100E5AB7C(v4, a1);
}

uint64_t sub_10036574C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003657AC()
{
  uint64_t v1 = (int *)(type metadata accessor for OwnerSharingCircle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v7 = v0 + v3 + v1[7];
  uint64_t v8 = type metadata accessor for UUID();
  char v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[8], v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1003658E4()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_10034CA94(v2, v3);
}

uint64_t sub_100365980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v6 = type metadata accessor for Date();
  v3[9] = v6;
  v3[10] = *(void *)(v6 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v3[12] = v7;
  v3[13] = *(void *)(v7 - 8);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1016706D8 + dword_1016706D8);
  uint64_t v8 = (void *)swift_task_alloc();
  v3[17] = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100365B14;
  return v10(a1, a3);
}

uint64_t sub_100365B14(char a1)
{
  *(unsigned char *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100365C14, 0, 0);
}

uint64_t sub_100365C14()
{
  uint64_t v22 = v0;
  if (*(unsigned char *)(v0 + 248) == 1)
  {
    if (qword_101636B18 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v0 + 128);
    uint64_t v3 = *(void *)(v0 + 96);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = type metadata accessor for Logger();
    *(void *)(v0 + 144) = sub_100010324(v5, (uint64_t)qword_10170DED0);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(void *)(v0 + 152) = v6;
    *(void *)(v0 + 160) = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v6(v2, v1, v3);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 104);
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      sub_10028B80C();
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 40) = sub_1008FA0F0(v14, v15, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Notify owner about %s being reunited with sharee.", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v16(v10, v11);
    }

    *(void *)(v0 + 168) = v16;
    unint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v19;
    void *v19 = v0;
    v19[1] = sub_100365F08;
    uint64_t v20 = *(void *)(v0 + 48);
    return sub_100596140(v20);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_100365F08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1003668B4;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v3 = sub_100366024;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_100366024()
{
  *(void *)(v0 + 192) = *(void *)(*(void *)(v0 + 64) + 136);
  swift_retain();
  return _swift_task_switch(sub_100366098, 0, 0);
}

uint64_t sub_100366098()
{
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[8];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  *uint64_t v4 = v0;
  v4[1] = sub_1003661B0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DD1C, v3, v5);
}

uint64_t sub_1003661B0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 216) = *(void *)(v1 + 32);
  return _swift_task_switch(sub_10036630C, 0, 0);
}

uint64_t sub_10036630C()
{
  static Date.trustedNow.getter(v0[11]);
  uid_t v1 = getuid();
  sub_100DC5FC0(v1);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[28] = v2;
  void *v2 = v0;
  v2[1] = sub_1003663D4;
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[6];
  return sub_10064E29C(v5, v3, v4);
}

uint64_t sub_1003663D4()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  uint64_t v3 = *(void *)(*(void *)v1 + 104);
  uint64_t v4 = *(void *)(*(void *)v1 + 96);
  uint64_t v5 = *(void **)v1;
  v5[29] = v0;
  swift_task_dealloc();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5[30] = v6;
  v6(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_1003665C4, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v5[10] + 8))(v5[11], v5[9]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v5[1];
    return v7();
  }
}

uint64_t sub_1003665C4()
{
  uint64_t v16 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
  swift_release();
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 240);
  (*(void (**)(void, void, void))(v0 + 152))(*(void *)(v0 + 112), *(void *)(v0 + 48), *(void *)(v0 + 96));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10028B80C();
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 16) = sub_1008FA0F0(v7, v8, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v1(v4, v5);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to notify owner about %s being reunited with sharee %{public}@.", (uint8_t *)v6, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 96);
    swift_errorRelease();
    v1(v10, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_1003668B4()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
  (*(void (**)(void, void, void))(v0 + 152))(*(void *)(v0 + 112), *(void *)(v0 + 48), *(void *)(v0 + 96));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(v0 + 96);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10028B80C();
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 16) = sub_1008FA0F0(v7, v8, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v1(v4, v5);
    *(_WORD *)(v6 + 12) = 2114;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v14 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to notify owner about %s being reunited with sharee %{public}@.", (uint8_t *)v6, 0x16u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 112);
    uint64_t v11 = *(void *)(v0 + 96);
    swift_errorRelease();
    v1(v10, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100366B84()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_10001D2E4;
  return sub_1003484F4(v3, v4);
}

uint64_t sub_100366C58()
{
  uint64_t v1 = (int *)(type metadata accessor for OwnerSharingCircle() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  sub_10001CFB8(*(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
  uint64_t v6 = v0 + v3 + v1[7];
  uint64_t v7 = type metadata accessor for UUID();
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(v5 + v1[8], v7);
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 16) >= 4uLL) {
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v4 + 24, v2 | 7);
}

uint64_t sub_100366DA4()
{
  uint64_t v2 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = v6[2];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_100033F68;
  return sub_1003480E8(v4, v5, v7, v8, v9);
}

uint64_t sub_100366EC8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a3 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100366EE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_100033F68;
  return sub_100347F24(a1, v5, v6);
}

uint64_t sub_100366FCC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_100347E88(v2, v3);
}

uint64_t sub_100367064()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100033F68;
  return sub_10034D608();
}

uint64_t sub_1003670F4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100033F68;
  return sub_100348708();
}

uint64_t sub_100367184()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1003671CC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + 24;
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_10034CD14(v2, v3, v4);
}

uint64_t sub_10036727C()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_100347ADC(v3, v4);
}

uint64_t sub_100367350()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10036743C()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v3;
  unint64_t v6 = (uint64_t *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_100033F68;
  return sub_100347250(v4, v5, v7, v8);
}

uint64_t sub_100367550(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003675B8()
{
  uint64_t v1 = (int *)(type metadata accessor for MemberSharingCircle() - 8);
  uint64_t v14 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v2 = (v14 + 24) & ~v14;
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = (int *)type metadata accessor for MemberPeerTrust();
  uint64_t v5 = *(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v6 = (v2 + v3 + v5) & ~v5;
  uint64_t v13 = *(void *)(*((void *)v4 - 1) + 64);
  swift_release();
  uint64_t v7 = v0 + v2;
  sub_10001CFB8(*(void *)(v0 + v2), *(void *)(v0 + v2 + 8));
  uint64_t v8 = v0 + v2 + v1[7];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v7 + v1[8], v9);
  v10(v7 + v1[9], v9);
  v10(v7 + v1[10], v9);
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + v6), *(void *)(v0 + v6 + 8));
  v10(v0 + v6 + v4[5], v9);
  uint64_t v11 = v0 + v6 + v4[7];
  type metadata accessor for PeerCommunicationIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_5;
    case 1u:
      v10(v11, v9);
      break;
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v0 + v6 + v4[9]), *(void *)(v0 + v6 + v4[9] + 8));

  return _swift_deallocObject(v0, v6 + v13, v14 | v5 | 7);
}

uint64_t sub_10036788C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003678F4()
{
  uint64_t v2 = *(void *)(type metadata accessor for MemberSharingCircle() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MemberPeerTrust() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_100033F68;
  return sub_10034CBCC(v7, v8, v9);
}

uint64_t sub_100367A30()
{
  uint64_t v1 = (int *)type metadata accessor for OwnerPeerTrust();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v14 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v3 = type metadata accessor for OwnerSharingCircle();
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v13 = *(void *)(*(void *)(v3 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + ((v2 + 24) & ~v2);
  sub_10001CFB8(*(void *)v5, *(void *)(v5 + 8));
  uint64_t v6 = v5 + v1[5];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = v5 + v1[7];
  type metadata accessor for PeerCommunicationIdentifier();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
    case 3u:
      goto LABEL_5;
    case 1u:
      v8(v9, v7);
      break;
    case 4u:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 5u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v10 = v2 | v4 | 7;
  uint64_t v11 = (((v2 + 24) & ~v2) + v14 + v4) & ~v4;
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(v5 + v1[9]), *(void *)(v5 + v1[9] + 8));
  sub_10001CFB8(*(void *)(v0 + v11), *(void *)(v0 + v11 + 8));
  v8(v0 + v11 + *(int *)(v3 + 20), v7);
  v8(v0 + v11 + *(int *)(v3 + 24), v7);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v11 + v13, v10);
}

uint64_t sub_100367CD8()
{
  uint64_t v2 = *(void *)(type metadata accessor for OwnerPeerTrust() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(type metadata accessor for OwnerSharingCircle() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_100033F68;
  return sub_10034C94C(v7, v8, v9);
}

uint64_t sub_100367E18()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100033F68;
  return sub_10034C9F8(v2, v3);
}

uint64_t sub_100367EB4()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_10034C3C4(v3, v4);
}

uint64_t sub_100367F8C()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_100347DEC(v3, v4);
}

unsigned char *storeEnumTagSinglePayload for BeaconSharingFlowError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10036812CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BeaconSharingFlowError()
{
  return &type metadata for BeaconSharingFlowError;
}

unint64_t sub_100368168()
{
  unint64_t result = qword_101642180;
  if (!qword_101642180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101642180);
  }
  return result;
}

uint64_t sub_100368214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100368228);
}

uint64_t sub_10036822C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100368240);
}

uint64_t type metadata accessor for ServiceUUID(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_1016421E0);
}

uint64_t sub_100368268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10036827C);
}

uint64_t sub_100368280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1003682EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100368300);
}

uint64_t sub_100368304(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CharacteristicUUID(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_101642270);
}

void *sub_100368394()
{
  return &protocol witness table for String;
}

uint64_t sub_1003683A0()
{
  strcpy((char *)v3, "ServiceUUID(");
  v0._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 41;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return v3[0];
}

unint64_t sub_100368424()
{
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v0._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 41;
  v1._object = (void *)0xE100000000000000;
  String.append(_:)(v1);
  return 0xD000000000000013;
}

Swift::Int sub_1003684B8()
{
  return Hasher._finalize()();
}

uint64_t sub_100368540()
{
  type metadata accessor for UUID();
  sub_1003687F4(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);

  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1003685C4()
{
  return Hasher._finalize()();
}

uint64_t sub_100368648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v4, v5);
  }
  __break(1u);
  return result;
}

uint64_t sub_100368758()
{
  return sub_1003687F4(&qword_1016422A8, (void (*)(uint64_t))type metadata accessor for CharacteristicUUID);
}

void *sub_1003687A0()
{
  return &protocol witness table for String;
}

uint64_t sub_1003687AC()
{
  return sub_1003687F4(&qword_1016422B0, (void (*)(uint64_t))type metadata accessor for CharacteristicUUID);
}

uint64_t sub_1003687F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10036883C()
{
  return sub_1003687F4(&qword_1016422B8, (void (*)(uint64_t))type metadata accessor for CharacteristicUUID);
}

void *sub_100368884()
{
  return &protocol witness table for String;
}

uint64_t sub_100368890()
{
  return sub_1003687F4(&qword_1016422C0, (void (*)(uint64_t))type metadata accessor for ServiceUUID);
}

uint64_t sub_1003688D8()
{
  return sub_1003687F4(&qword_1016422C8, (void (*)(uint64_t))type metadata accessor for ServiceUUID);
}

uint64_t sub_100368920()
{
  return sub_1003687F4(&qword_1016422D0, (void (*)(uint64_t))type metadata accessor for ServiceUUID);
}

id sub_10036896C(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v42 = *(void *)(v4 - 8);
  uint64_t v43 = v4;
  __chkstk_darwin(v4);
  uint64_t v39 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 24);
  unsigned __int8 v12 = v11(a1, v10);
  long long v47 = xmmword_101348180;
  char v45 = v12 >> 6;
  v46[3] = &type metadata for UnsafeRawBufferPointer;
  v46[4] = &protocol witness table for UnsafeRawBufferPointer;
  v46[0] = &v45;
  v46[1] = v46;
  sub_10001CD44(v46, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  Data._Representation.append(contentsOf:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v46);
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v10);
  unint64_t v44 = v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(a1, v9);
  unint64_t v35 = v15;
  uint64_t v36 = v14;
  unint64_t v31 = *((void *)&v47 + 1);
  uint64_t v32 = v47;
  sub_1000361E0(v47, *((unint64_t *)&v47 + 1));
  int v34 = v11(a1, v10);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(a1, v10);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v10 + 48);
  uint64_t v30 = v8;
  v16(a1, v10);
  uint64_t v17 = v39;
  (*(void (**)(uint64_t))(*(void *)(v37 + 16) + 8))(a1);
  id v18 = objc_allocWithZone((Class)SPBeaconAdvertisement);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  Class v20 = Data._bridgeToObjectiveC()().super.isa;
  Class v21 = Data._bridgeToObjectiveC()().super.isa;
  uint64_t v22 = v32;
  unint64_t v23 = v31;
  Class v24 = Data._bridgeToObjectiveC()().super.isa;
  Class v25 = Date._bridgeToObjectiveC()().super.isa;
  Class v26 = UUID._bridgeToObjectiveC()().super.isa;
  id v27 = [v18 initWithAddress:isa publicKey:v20 deviceType:v21 batteryState:v24 rawStatus:v34 rssi:v33 scanDate:v25 recordIdentifier:v26];

  (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v43);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v30, v41);
  sub_10001CFB8(v22, v23);
  sub_10001CFB8(v36, v35);
  sub_10001CFB8(v38, v44);
  sub_10001CFB8(v22, v23);
  return v27;
}

uint64_t sub_100368D7C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_1000361E0(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t sub_100368DB0()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_100368DB8()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_100368DC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100368E30@<X0>(void *a1@<X8>)
{
  id v3 = [v1 location];
  if (v3)
  {
    uint64_t v4 = v3;
    [v3 latitude];
    uint64_t v6 = v5;
    [v4 longitude];
    uint64_t v8 = v7;
    [v4 horizontalAccuracy];
    uint64_t v10 = v9;
    id v11 = [v4 timestamp];
    uint64_t v12 = type metadata accessor for CachedHistoricalLocation(0);
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    *a1 = v6;
    a1[1] = v8;
    a1[2] = v10;
    unint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = a1;
    uint64_t v15 = 0;
    uint64_t v16 = v12;
  }
  else
  {
    uint64_t v17 = type metadata accessor for CachedHistoricalLocation(0);
    unint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v16 = v17;
    uint64_t v14 = a1;
    uint64_t v15 = 1;
  }

  return v13(v14, v15, 1, v16);
}

uint64_t sub_100368F80@<X0>(void *a1@<X8>)
{
  return sub_100368E30(a1);
}

uint64_t sub_100368FA4(uint64_t a1, uint64_t a2)
{
  return sub_100368FBC(a1, a2, (SEL *)&selRef_address);
}

uint64_t sub_100368FB0(uint64_t a1, uint64_t a2)
{
  return sub_100368FBC(a1, a2, (SEL *)&selRef_advertisementData);
}

uint64_t sub_100368FBC(uint64_t a1, uint64_t a2, SEL *a3)
{
  id v5 = [*v3 advertisement];
  id v6 = [v5 *a3];

  uint64_t v7 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  return v7;
}

id sub_100369034()
{
  id v1 = [*v0 advertisement];
  id v2 = [v1 status];

  return v2;
}

id sub_100369084()
{
  id v1 = [*v0 advertisement];
  id v2 = [v1 rssi];

  return v2;
}

void sub_1003690D4()
{
  id v1 = [*v0 advertisement];
  id v2 = [v1 scanDate];

  static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_100369154()
{
  id v1 = [v0 fetchLimit];
  if (v1)
  {
    id v2 = v1;
    [v1 integerValue];
  }
  else
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010AB69C(v4);
    swift_bridgeObjectRelease();
  }
  if (qword_1016374A0 != -1) {
    swift_once();
  }
  return 0;
}

unint64_t sub_100369274(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_1000361E0(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    unint64_t v10 = *(void *)(a2 + 24);
    sub_1000361E0(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 40);
    unint64_t v12 = *(void *)(a2 + 48);
    sub_1000361E0(v11, v12);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    uint64_t v13 = *(int *)(a3 + 36);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = a2 + v13;
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_100369394(uint64_t a1, uint64_t a2)
{
  sub_10001CFB8(*(void *)a1, *(void *)(a1 + 8));
  sub_10001CFB8(*(void *)(a1 + 16), *(void *)(a1 + 24));
  sub_10001CFB8(*(void *)(a1 + 40), *(void *)(a1 + 48));
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Date();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100369420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(void *)(a2 + 24);
  sub_1000361E0(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  unint64_t v11 = *(void *)(a2 + 48);
  sub_1000361E0(v10, v11);
  *(void *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v11;
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

uint64_t sub_1003694F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_10001CFB8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  unint64_t v11 = *(void *)(a2 + 24);
  sub_1000361E0(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  sub_10001CFB8(v12, v13);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  unint64_t v15 = *(void *)(a2 + 48);
  sub_1000361E0(v14, v15);
  uint64_t v16 = *(void *)(a1 + 40);
  unint64_t v17 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v14;
  *(void *)(a1 + 48) = v15;
  sub_10001CFB8(v16, v17);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v18 = *(int *)(a3 + 36);
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_1003695D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_10036966C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = *(void *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  sub_10001CFB8(v8, v9);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_10001CFB8(v10, v11);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v12 = *(int *)(a3 + 36);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_10036972C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100369740);
}

uint64_t sub_100369740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1003697FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100369810);
}

void *sub_100369810(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for SPCachedAdvertisement()
{
  uint64_t result = qword_101642330;
  if (!qword_101642330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10036990C()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1003699C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for FMNAccountType.pairingLock(_:);
  uint64_t v3 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(a1, v2, v3);
  type metadata accessor for PairingLockCheckEndPoint();
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.path.setter();
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  sub_1010ABD54(v5);
  swift_bridgeObjectRelease();
  return URLComponents.host.setter();
}

uint64_t type metadata accessor for PairingLockCheckEndPoint()
{
  uint64_t result = qword_1016423D0;
  if (!qword_1016423D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100369B64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100369B78);
}

uint64_t sub_100369B78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for URLComponents();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100369C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100369C84);
}

uint64_t sub_100369C84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMNAccountType();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for URLComponents();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void *sub_100369D88(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v2);
  uint64_t v3 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v3 - 8);
  uint64_t v15 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v4 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = sub_10000584C();
  unsigned int v14 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  uint64_t v13 = *(void (**)(char *))(v4 + 104);
  v13(v6);
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  v12[1] = sub_1001BF0B8((unint64_t *)&qword_101638CC0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_10000588C((uint64_t *)&unk_1016376F0);
  sub_1001BF100((unint64_t *)&qword_101638CD0, (uint64_t *)&unk_1016376F0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v1[3] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  ((void (*)(char *, void, uint64_t))v13)(v6, v14, v15);
  static DispatchQoS.unspecified.getter();
  uint64_t v18 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  v1[4] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  sub_10000588C(&qword_101642628);
  swift_allocObject();
  v1[5] = PassthroughSubject.init()();
  v1[7] = 0;
  v1[8] = 0;
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  v1[10] = qword_10170E330;
  uint64_t v7 = (char *)v1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationSubscription;
  uint64_t v8 = sub_10000588C(&qword_10163A798);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(void *)((char *)v1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService____lazy_storage___tagCommandManager) = 0;
  v1[2] = v17;
  *((unsigned char *)v1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationStarted) = 0;
  v1[9] = &_swiftEmptySetSingleton;
  uint64_t v9 = v1[5];
  sub_10000588C(&qword_101642630);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  v1[6] = v10;
  swift_retain();
  swift_retain();
  return v1;
}

id *sub_10036A188()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_10000588C(&qword_10163A798);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  uint64_t v25 = v3;
  __chkstk_darwin(v2);
  uint64_t v21 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000584C();
  uint64_t v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_10036CDCC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015BBD28;
  uint64_t v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v14 = v24;
  uint64_t v15 = v25;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  [v1[8] invalidate];
  id v16 = v1[8];
  v1[8] = 0;

  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationSubscription;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v14))
  {
    uint64_t v18 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v21, v17, v14);
    Subscription.unsubscribe(completion:)();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  swift_release();

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  sub_10001DAB4(v17, &qword_101642638);
  objc_release(*(id *)((char *)v1
                     + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService____lazy_storage___tagCommandManager));
  return v1;
}

void sub_10036A5F4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v1 = *(id *)(Strong + 56);
    swift_release();
    [v1 invalidate];
  }
  swift_beginAccess();
  uint64_t v2 = swift_weakLoadStrong();
  if (v2)
  {
    uint64_t v3 = *(void **)(v2 + 56);
    *(void *)(v2 + 56) = 0;
    swift_release();
  }
}

uint64_t sub_10036A6A0(uint64_t a1)
{
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_1016372A0 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_101342130;
    swift_getErrorValue();
    uint64_t v2 = Error.localizedDescription.getter();
    uint64_t v4 = v3;
    *(void *)(v1 + 56) = &type metadata for String;
    *(void *)(v1 + 64) = sub_10000B4CC();
    *(void *)(v1 + 32) = v2;
    *(void *)(v1 + 40) = v4;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_1016372A0 != -1) {
      swift_once();
    }
    return os_log(_:dso:log:_:_:)();
  }
}

uint64_t sub_10036A848()
{
  sub_10036A188();

  return swift_deallocClassInstance();
}

uint64_t sub_10036A8A0()
{
  return type metadata accessor for BeaconNearOwnerService();
}

uint64_t type metadata accessor for BeaconNearOwnerService()
{
  uint64_t result = qword_101642448;
  if (!qword_101642448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10036A8F4(uint64_t a1, uint64_t a2)
{
  return sub_10036B008(a1, a2, (uint64_t)&unk_1015BBCC0, (uint64_t)sub_10036CD54, (uint64_t)&unk_1015BBCD8);
}

uint64_t sub_10036A91C(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v38 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v12 - 8);
  uint64_t v39 = (uint64_t)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_retain();
  uint64_t v40 = a1;
  swift_release();
  uint64_t v14 = sub_100AD2AD4();
  swift_release();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    v36[1] = a3;
    uint64_t v37 = a2;
    v36[0] = v14;
    uint64_t v16 = v14 + 32;
    uint64_t v41 = _swiftEmptyDictionarySingleton;
    uint64_t v17 = (void (**)(char *, uint64_t))(v7 + 8);
    do
    {
      sub_10001D010(v16, (uint64_t)v44);
      swift_unownedRetainStrong();
      swift_retain();
      swift_release();
      uint64_t v19 = v45;
      uint64_t v18 = v46;
      sub_10001CD44(v44, v45);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v18 + 8) + 8) + 32))(v19);
      if (qword_101636CB8 != -1) {
        swift_once();
      }
      sub_10000588C(&qword_101655540);
      OS_dispatch_queue.sync<A>(execute:)();
      uint64_t v21 = v43[0];
      if (*(void *)(v43[0] + 16) && (unint64_t v22 = sub_1007240CC((uint64_t)v11), (v23 & 1) != 0))
      {
        uint64_t v24 = *(void *)(*(void *)(v21 + 56) + 8 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v25 = sub_1007100C0(v24);
        swift_bridgeObjectRelease();
        Class v26 = (void *)sub_100B752E8((uint64_t)v25);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        Class v26 = _swiftEmptyArrayStorage;
      }
      uint64_t v27 = v39;
      char v28 = sub_100AF7A38(v39, (uint64_t)v11, v26, 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v29 = *v17;
      (*v17)(v11, v6);
      sub_10001DAB4(v27, (uint64_t *)&unk_10163AC90);
      if (v28)
      {
        uint64_t v31 = v45;
        uint64_t v30 = v46;
        sub_10001CD44(v44, v45);
        uint64_t v32 = (uint64_t)v38;
        (*(void (**)(uint64_t))(*(void *)(*(void *)(v30 + 8) + 8) + 32))(v31);
        sub_10001D010((uint64_t)v44, (uint64_t)v43);
        uint64_t v33 = v41;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v42 = v33;
        sub_10016DC70((uint64_t)v43, v32, isUniquelyReferenced_nonNull_native);
        uint64_t v41 = v42;
        swift_bridgeObjectRelease();
        v29((char *)v32, v6);
      }
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v44);
      v16 += 40;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    v37(v41);
  }
  else
  {
    swift_bridgeObjectRelease();
    a2(_swiftEmptyDictionarySingleton);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_10036AD4C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *(void *)(v0 + 24);
  aBlock[4] = SharingCircleWildAdvertisementKey.init(key:);
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015BBC88;
  uint64_t v8 = _Block_copy(aBlock);
  swift_unownedRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v12 = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_unownedRelease();
  _Block_release(v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t sub_10036AFE0(uint64_t a1, uint64_t a2)
{
  return sub_10036B008(a1, a2, (uint64_t)&unk_1015BBBF8, (uint64_t)sub_10036CC2C, (uint64_t)&unk_1015BBC10);
}

uint64_t sub_10036B008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v20[0] = a5;
  uint64_t v7 = v5;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *(void *)(v7 + 24);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v7;
  v17[3] = a1;
  v17[4] = a2;
  aBlock[4] = a4;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = v20[0];
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  unint64_t v22 = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_unownedRelease();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v21);
  return swift_release();
}

uint64_t sub_10036B2D0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  __chkstk_darwin(v6);
  uint64_t v32 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v30 = *(void *)(v8 - 8);
  uint64_t v31 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101642638);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v29 - v15;
  swift_unownedRetainStrong();
  char v17 = *(unsigned char *)(a1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationStarted);
  swift_release();
  if ((v17 & 1) == 0)
  {
    swift_unownedRetainStrong();
    swift_unownedRetainStrong();
    uint64_t v18 = *(void *)(a1 + 80);
    swift_retain();
    swift_release();
    swift_unownedRetainStrong();
    uint64_t v19 = type metadata accessor for BeaconNearOwnerService();
    v29[1] = a3;
    uint64_t v36 = (void *)v19;
    uint64_t v37 = (void (*)())&off_1015BBAC0;
    aBlock[0] = a1;
    __chkstk_darwin(v19);
    v29[-2] = aBlock;
    v29[-1] = v18;
    uint64_t v20 = sub_10000588C(&qword_10163A798);
    OS_dispatch_queue.sync<A>(execute:)();
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)aBlock);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v16, 0, 1, v20);
    sub_10036CC38((uint64_t)v16, (uint64_t)v14);
    uint64_t v21 = a1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationSubscription;
    swift_beginAccess();
    sub_10036CCA0((uint64_t)v14, v21);
    swift_endAccess();
    swift_release();
    swift_unownedRetainStrong();
    *(unsigned char *)(a1 + OBJC_IVAR____TtC12searchpartyd22BeaconNearOwnerService_observationStarted) = 1;
    swift_release();
  }
  sub_10000584C();
  unint64_t v22 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  uint64_t v37 = sub_10036CD08;
  uint64_t v38 = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  uint64_t v36 = &unk_1015BBC60;
  uint64_t v24 = _Block_copy(aBlock);
  swift_unownedRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v25 = v32;
  uint64_t v26 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v26);
  uint64_t v27 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v10, v31);
  return a2(v27);
}

void sub_10036B7A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(swift_unownedRetainStrong() + 56);
  swift_release();
  if (!v2)
  {
    swift_unownedRetainStrong();
    uint64_t v3 = self;
    swift_unownedRetainStrong();
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    OS_dispatch_queue.sync<A>(execute:)();
    sub_1010ABE00(v8);
    double v5 = v4;
    swift_release();
    swift_bridgeObjectRelease();
    swift_unownedRetainStrong();
    id v6 = [v3 scheduledTimerWithTimeInterval:a1 target:"nearOwnerMonitoringTimerFired" selector:0 userInfo:1 repeats:v5];
    swift_release();
    uint64_t v7 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v6;
    swift_release();
  }
}

uint64_t sub_10036B8E8(uint64_t a1)
{
  return sub_10036BA98(a1, (uint64_t)&unk_1015BBBA8, (uint64_t)sub_10036CB98, (uint64_t)&unk_1015BBBC0);
}

uint64_t sub_10036B910(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v11 - v8;
  swift_unownedRetainStrong();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a2, v3);
  swift_beginAccess();
  sub_100DC8CB8((uint64_t)v9, v7);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  swift_endAccess();
  swift_release();
  swift_unownedRetainStrong();
  sub_10036BF54();
  return swift_release();
}

uint64_t sub_10036BA70(uint64_t a1)
{
  return sub_10036BA98(a1, (uint64_t)&unk_1015BBB58, (uint64_t)sub_10036CAB0, (uint64_t)&unk_1015BBB70);
}

uint64_t sub_10036BA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  v20[0] = a2;
  uint64_t v5 = v4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v25 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v23 = *(void *)(v10 - 8);
  uint64_t v24 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  v20[1] = *(void *)(v5 + 24);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v13);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v17 + v16, (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  aBlock[4] = v21;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = v22;
  uint64_t v18 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v26 = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_unownedRelease();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v24);
  return swift_release();
}

void sub_10036BE14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_101126F68(a2, (uint64_t)v6);
  sub_10001DAB4((uint64_t)v6, &qword_101638CF0);
  swift_endAccess();
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v8 = *(void *)(v7 + 16);
  swift_bridgeObjectRelease();
  if (!v8)
  {
    swift_unownedRetainStrong();
    [*(id *)(a1 + 64) invalidate];
    uint64_t v9 = *(void **)(a1 + 64);
    *(void *)(a1 + 64) = 0;
    swift_release();
  }
}

uint64_t sub_10036BF54()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + 64))
  {
    sub_10000584C();
    uint64_t v10 = static OS_dispatch_queue.main.getter();
    aBlock[4] = sub_10036CAA4;
    aBlock[5] = v0;
    uint64_t v14 = (void *)v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004B5480;
    void aBlock[3] = &unk_1015BBB20;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v12 = v14;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v11);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

id sub_10036C200(uint64_t a1)
{
  uint64_t v2 = self;
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  sub_1010ABE18(v8);
  double v4 = v3;
  swift_bridgeObjectRelease();
  id v5 = [v2 scheduledTimerWithTimeInterval:a1 target:"scanTimerFired" selector:0 userInfo:1 repeats:v4];
  uint64_t v6 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = v5;

  return [*(id *)(a1 + 64) fire];
}

uint64_t sub_10036C310()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[1] = *(void *)(v0 + 24);
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v0;
  aBlock[4] = sub_10036CA84;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BBAF8;
  uint64_t v9 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_1001BF0B8((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_1001BF100((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  swift_unownedRelease();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  return swift_release();
}

uint64_t sub_10036C5D0(uint64_t a1)
{
  swift_unownedRetainStrong();
  swift_beginAccess();
  uint64_t v2 = *(void *)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3)
  {
    swift_unownedRetainStrong();
    sub_10036AD4C();
    return swift_release();
  }
  return result;
}

void sub_10036C6DC()
{
  sub_10036C7B8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10036C7B8()
{
  if (!qword_101642458)
  {
    sub_10000592C(&qword_10163A798);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_101642458);
    }
  }
}

uint64_t sub_10036C814(uint64_t a1)
{
  uint64_t result = type metadata accessor for BeaconObservation();
  unsigned int v3 = *(unsigned __int8 *)(a1 + *(int *)(result + 24));
  BOOL v4 = v3 > 0x22;
  uint64_t v5 = (1 << v3) & 0x600018000;
  if (!v4 && v5 != 0)
  {
    static os_log_type_t.info.getter();
    if (qword_1016372A0 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_100ACCD98(a1, (uint64_t)&v13);
    if (v14)
    {
      sub_10001CEB0(&v13, (uint64_t)v15);
      sub_10000588C(&qword_101642618);
      uint64_t v7 = (int *)(sub_10000588C(&qword_101642620) - 8);
      unint64_t v8 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_101342130;
      unint64_t v10 = v9 + v8;
      uint64_t v11 = v10 + v7[14];
      uint64_t v12 = type metadata accessor for UUID();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, a1, v12);
      sub_10001D010((uint64_t)v15, v11);
      *(void *)&long long v13 = sub_10092E3D0(v9);
      PassthroughSubject.send(_:)();
      swift_bridgeObjectRelease();
      return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v15);
    }
    else
    {
      return sub_10001DAB4((uint64_t)&v13, (uint64_t *)&unk_10163BBE0);
    }
  }
  return result;
}

uint64_t sub_10036CA28(uint64_t a1)
{
  return sub_10036C814(a1);
}

uint64_t sub_10036CA4C()
{
  swift_unownedRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10036CA84()
{
  return sub_10036C5D0(*(void *)(v0 + 16));
}

uint64_t sub_10036CA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10036CA9C()
{
  return swift_release();
}

id sub_10036CAA4()
{
  return sub_10036C200(v0);
}

uint64_t sub_10036CAB0()
{
  return sub_10036CBB0((uint64_t (*)(uint64_t, uint64_t))sub_10036BE14);
}

uint64_t sub_10036CACC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unownedRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10036CB98()
{
  return sub_10036CBB0(sub_10036B910);
}

uint64_t sub_10036CBB0(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

uint64_t sub_10036CC2C()
{
  return sub_10036B2D0(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10036CC38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101642638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10036CCA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101642638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10036CD08()
{
  sub_10036B7A4(*(void *)(v0 + 16));
}

uint64_t sub_10036CD14()
{
  swift_unownedRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10036CD54()
{
  return sub_10036A91C(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10036CD60()
{
  return PassthroughSubject.send(_:)();
}

uint64_t sub_10036CD94()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_10036CDCC()
{
}

uint64_t sub_10036CE18()
{
  uint64_t result = sub_10036CE38();
  qword_101642640 = result;
  return result;
}

uint64_t sub_10036CE38()
{
  id v0 = [objc_allocWithZone((Class)GEOMapRegion) init];
  if (v0)
  {
    uint64_t v1 = v0;
    id v2 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:38.3767625 longitude:123.875419];
    [v1 addVertex:v2];

    id v3 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:31.8502665 longitude:125.094901];
    [v1 addVertex:v3];

    id v4 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:36.7747537 longitude:133.334647];
    [v1 addVertex:v4];

    id v5 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:39.1903306 longitude:130.434257];
    [v1 addVertex:v5];

    id v6 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:38.3767625 longitude:123.875419];
    [v1 addVertex:v6];

    return (uint64_t)v1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

id sub_10036D00C()
{
  return [*v0 coordinate];
}

double sub_10036D01C()
{
  [*v0 coordinate];
  return v1;
}

id sub_10036D044()
{
  return [*v0 horizontalAccuracy];
}

void sub_10036D054()
{
  id v1 = [*v0 timestamp];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

id sub_10036D0B4()
{
  return [*v0 latitude];
}

id sub_10036D0C4()
{
  return [*v0 longitude];
}

uint64_t sub_10036D0D4()
{
  id v0 = [objc_allocWithZone((Class)GEOMapRegion) init];
  if (v0)
  {
    id v1 = v0;
    for (uint64_t i = 0; i != 576; i += 16)
    {
      id v3 = [objc_allocWithZone((Class)GEOLatLng) initWithLatitude:*(double *)((char *)&off_10159FE38 + i + 40) longitude:*(double *)((char *)&off_10159FE38 + i + 32)];
      [v1 addVertex:v3];
    }
    return (uint64_t)v1;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPodsSWPairingCompleteCommandPayload()
{
  return &type metadata for AirPodsSWPairingCompleteCommandPayload;
}

uint64_t sub_10036D1F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryDecoding.container()();
  sub_1000BD078((uint64_t)v10, v11);
  uint64_t v5 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  if (v2)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v9 = v6;
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v10);
    uint64_t result = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
    *a2 = v8;
    a2[1] = v9;
  }
  return result;
}

uint64_t sub_10036D2BC(void *a1)
{
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryEncoding.container()();
  sub_1000BD078((uint64_t)v2, v3);
  sub_100135A44();
  dispatch thunk of BinaryEncodingContaining.encode<A>(sequence:)();
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v2);
}

unint64_t sub_10036D364(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_10036D394();
  unint64_t result = sub_10033BEC8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_10036D394()
{
  unint64_t result = qword_101642650;
  if (!qword_101642650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101642650);
  }
  return result;
}

uint64_t sub_10036D3E8(uint64_t a1)
{
  uint64_t v58 = sub_10000588C((uint64_t *)&unk_1016477D0);
  uint64_t v3 = __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v47 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v55 = (uint64_t *)((char *)&v47 - v8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t *)((char *)&v47 - v10);
  __chkstk_darwin(v9);
  uint64_t v53 = (uint64_t *)((char *)&v47 - v11);
  int64_t v12 = *(void *)(a1 + 16);
  long long v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  uint64_t v47 = v1;
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_1000B6FB0(0, v12, 0);
  uint64_t result = sub_100803228(a1);
  uint64_t v16 = result;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v48 = a1 + 80;
  int64_t v49 = v12;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = a1;
  uint64_t v50 = v15;
  uint64_t v19 = v58;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v16 >> 6;
    if ((*(void *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v59 = v17;
    uint64_t v60 = 1 << v16;
    uint64_t v23 = (uint64_t)v53;
    uint64_t v24 = (uint64_t)v53 + *(int *)(v19 + 48);
    uint64_t v25 = *(void *)(a1 + 56);
    uint64_t v26 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v16);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    uint64_t *v53 = *v26;
    *(void *)(v23 + 8) = v28;
    uint64_t v29 = type metadata accessor for OwnedBeaconGroup.PairingState(0);
    sub_1003B6E14(v25 + *(void *)(*(void *)(v29 - 8) + 72) * v16, v24, type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v30 = v54;
    *uint64_t v54 = v27;
    v30[1] = v28;
    sub_1003B6E14(v24, (uint64_t)v30 + *(int *)(v19 + 48), type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v31 = (uint64_t)v30;
    uint64_t v32 = v55;
    sub_10001D608(v31, (uint64_t)v55, (uint64_t *)&unk_1016477D0);
    sub_1000361E0(v27, v28);
    sub_1000361E0(v27, v28);
    sub_10001DAB4(v23, (uint64_t *)&unk_1016477D0);
    uint64_t v33 = *(int *)(v19 + 48);
    uint64_t v34 = (uint64_t)&v56[v33];
    uint64_t v36 = *v32;
    unint64_t v35 = v32[1];
    sub_1003B6E14((uint64_t)v32 + v33, (uint64_t)&v56[v33], type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = (uint64_t)v57 + *(int *)(v19 + 48);
    *uint64_t v57 = v36;
    *(void *)(v37 + 8) = v35;
    sub_1003B6008(v34, v38, type metadata accessor for OwnedBeaconGroup.PairingState);
    sub_1000361E0(v36, v35);
    sub_1000361E0(v36, v35);
    sub_10001DAB4(v37, (uint64_t *)&unk_1016477D0);
    sub_10001DAB4((uint64_t)v32, (uint64_t *)&unk_1016477D0);
    long long v13 = v61;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000B6FB0(0, v13[2] + 1, 1);
      long long v13 = v61;
    }
    unint64_t v40 = v13[2];
    unint64_t v39 = v13[3];
    if (v40 >= v39 >> 1)
    {
      uint64_t result = sub_1000B6FB0(v39 > 1, v40 + 1, 1);
      long long v13 = v61;
    }
    v13[2] = v40 + 1;
    uint64_t v41 = &v13[2 * v40];
    v41[4] = v36;
    v41[5] = v35;
    a1 = v52;
    int64_t v20 = 1 << *(unsigned char *)(v52 + 32);
    if (v16 >= v20) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    uint64_t v42 = *(void *)(v51 + 8 * v22);
    if ((v42 & v60) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v50;
    if (*(_DWORD *)(v52 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v43 = v42 & (-2 << (v16 & 0x3F));
    if (v43)
    {
      int64_t v20 = __clz(__rbit64(v43)) | v16 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v49;
    }
    else
    {
      unint64_t v44 = v22 + 1;
      unint64_t v45 = (unint64_t)(v20 + 63) >> 6;
      int64_t v21 = v49;
      if (v22 + 1 < v45)
      {
        unint64_t v46 = *(void *)(v51 + 8 * v44);
        if (v46)
        {
LABEL_22:
          int64_t v20 = __clz(__rbit64(v46)) + (v44 << 6);
        }
        else
        {
          while (v45 - 2 != v22)
          {
            unint64_t v46 = *(void *)(v48 + 8 * v22++);
            if (v46)
            {
              unint64_t v44 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v59 + 1;
    uint64_t v16 = v20;
    if (v59 + 1 == v21) {
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_10036D83C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170DDC8);
  sub_100010324(v0, (uint64_t)qword_10170DDC8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_10036D8B4()
{
  uint64_t result = Data.init(stringLiteral:)();
  qword_10170DDE0 = result;
  *(void *)algn_10170DDE8 = v1;
  return result;
}

uint64_t sub_10036D8F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347BA0;
  v18[1] = *v2;
  sub_10000588C(&qword_101642888);
  uint64_t v9 = String.init<A>(describing:)();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  unint64_t v12 = sub_10000B4CC();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  *(void *)(v8 + 104) = v12;
  *(void *)(v8 + 64) = v12;
  *(void *)(v8 + 72) = 0xD000000000000023;
  *(void *)(v8 + 80) = 0x80000001013FA8B0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v13 = v2[35];
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  void v14[4] = v2;
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 1, 1, v15);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = 0;
  v16[3] = 0;
  v16[4] = v13;
  v16[5] = sub_1003B5850;
  uint64_t v16[6] = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1008F5E44((uint64_t)v7, (uint64_t)&unk_101642910, (uint64_t)v16);
  swift_release();
  return swift_release();
}

void sub_10036DB88(char a1, void (*a2)(void **, uint64_t))
{
  if (a1)
  {
    uint64_t v7 = sub_100A55528();
    a2(v7, v3 & 1);
  }
  else
  {
    static os_log_type_t.error.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_10000588C(&qword_101642890);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101342130;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v5;
    *(void *)(inited + 48) = 0xD00000000000002FLL;
    *(void *)(inited + 56) = 0x80000001013FA920;
    unint64_t v6 = sub_10092D8F8(inited);
    type metadata accessor for SPPairingSessionError(0);
    sub_10065435C(v6);
    swift_bridgeObjectRelease();
    sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    a2(v8, 1);
  }
}

uint64_t sub_10036DD6C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v35 = a1;
  uint64_t v36 = a3;
  uint64_t v33 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  unint64_t v39 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v32 = static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_10170F000;
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_101347500;
  aBlock[0] = *v4;
  sub_10000588C(&qword_101642888);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v17 = sub_10000B4CC();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v17;
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 72) = 0xD000000000000026;
  *(void *)(v13 + 80) = 0x80000001013FA800;
  id v18 = v35;
  id v19 = [v35 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v17;
  *(void *)(v13 + 112) = v20;
  *(void *)(v13 + 120) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v4;
  v23[3] = v18;
  uint64_t v24 = v36;
  v23[4] = v33;
  v23[5] = v24;
  aBlock[4] = sub_1003B5734;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BCD08;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  id v26 = v18;
  swift_retain();
  uint64_t v27 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v42 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  unint64_t v28 = v39;
  uint64_t v29 = v41;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v38);
  return swift_release();
}

uint64_t sub_10036E284(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v52 = a3;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  __chkstk_darwin(v6);
  uint64_t v55 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v54 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v19 = (char *)&v49 - v18;
  id v20 = [a2 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v21 = (uint64_t *)(a1 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_pairingSessionCoordinators);
  swift_beginAccess();
  uint64_t v22 = *v21;
  if (*(void *)(*v21 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_1007240CC((uint64_t)v19);
    if (v24)
    {
      uint64_t v25 = *(void *)(v22 + 56);
      uint64_t v49 = v9;
      uint64_t v26 = *(void *)(v25 + 8 * v23);
      swift_retain();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v14 + 8);
      v27(v19, v13);
      uint64_t v28 = v26;
      uint64_t v51 = v26;
      uint64_t v29 = (void *)sub_101000778();
      int v50 = v30 & 1;
      id v31 = [*(id *)(v28 + 16) identifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      swift_beginAccess();
      sub_100164568((uint64_t)v17);
      v27(v17, v13);
      swift_endAccess();
      swift_release();
      sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
      uint64_t v32 = v49;
      (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v49);
      uint64_t v33 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v32);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v53;
      *(void *)(v34 + 16) = v52;
      *(void *)(v34 + 24) = v35;
      uint64_t v36 = v29;
      *(void *)(v34 + 32) = v29;
      LOBYTE(v27) = v50;
      *(unsigned char *)(v34 + 40) = v50;
      long long v65 = sub_1003B57A8;
      long long v66 = (void *)v34;
      aBlock = _NSConcreteStackBlock;
      uint64_t v62 = 1107296256;
      uint64_t v63 = sub_1004B5480;
      long long v64 = &unk_1015BCDA8;
      uint64_t v37 = _Block_copy(&aBlock);
      swift_retain();
      sub_1003B57DC(v29, (char)v27);
      uint64_t v38 = v54;
      static DispatchQoS.unspecified.getter();
      uint64_t v60 = _swiftEmptyArrayStorage;
      sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      unint64_t v39 = v55;
      uint64_t v40 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v37);
      swift_release();

      sub_1003B579C(v36, (char)v27);
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_10000588C(&qword_101642890);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v42;
  *(void *)(inited + 48) = 0xD000000000000032;
  *(void *)(inited + 56) = 0x80000001013FA870;
  unint64_t v43 = sub_10092D8F8(inited);
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v9);
  unint64_t v44 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  unint64_t v45 = (void *)swift_allocObject();
  uint64_t v46 = v53;
  v45[2] = v52;
  v45[3] = v46;
  v45[4] = v43;
  long long v65 = sub_1003B7BCC;
  long long v66 = v45;
  aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1004B5480;
  long long v64 = &unk_1015BCD58;
  uint64_t v47 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v38 = v54;
  static DispatchQoS.unspecified.getter();
  uint64_t v60 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  unint64_t v39 = v55;
  uint64_t v40 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v47);

LABEL_8:
  (*(void (**)(char *, uint64_t))(v58 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v38, v57);
  return swift_release();
}

uint64_t sub_10036EB44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v36 = a1;
  uint64_t v37 = a3;
  uint64_t v33 = *v3;
  uint64_t v34 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  __chkstk_darwin(v7);
  uint64_t v35 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v32 = static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  uint64_t v31 = qword_10170F000;
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_101347500;
  aBlock[0] = *v4;
  sub_10000588C(&qword_101642888);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v17 = sub_10000B4CC();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v17;
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 72) = 0xD000000000000022;
  *(void *)(v13 + 80) = 0x80000001013FA190;
  id v18 = v36;
  id v19 = [v36 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  *(void *)(v13 + 136) = &type metadata for String;
  *(void *)(v13 + 144) = v17;
  *(void *)(v13 + 112) = v20;
  *(void *)(v13 + 120) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  unint64_t v23 = (void *)swift_allocObject();
  void v23[2] = v4;
  v23[3] = v18;
  uint64_t v24 = v37;
  v23[4] = v34;
  v23[5] = v24;
  v23[6] = v33;
  aBlock[4] = sub_1003B5058;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BCC18;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  id v26 = v18;
  swift_retain();
  uint64_t v27 = v35;
  static DispatchQoS.unspecified.getter();
  unint64_t v43 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v28 = v40;
  uint64_t v29 = v42;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  return swift_release();
}

uint64_t sub_10036F088(uint64_t a1, void *a2, void (*a3)(void, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v169 = a5;
  uint64_t v9 = type metadata accessor for HashAlgorithm();
  uint64_t v171 = *(void *)(v9 - 8);
  uint64_t v172 = v9;
  __chkstk_darwin(v9);
  v170 = (void **)((char *)&v155 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v155 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v155 - v16;
  unint64_t v174 = (unint64_t)a2;
  id v18 = [a2 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  id v19 = (uint64_t *)(a1 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_pairingSessionCoordinators);
  swift_beginAccess();
  uint64_t v20 = *v19;
  if (*(void *)(*v19 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = sub_1007240CC((uint64_t)v17);
    if (v22)
    {
      uint64_t v164 = a1;
      uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
      swift_retain();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
      static os_signpost_type_t.end.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_signpost(_:dso:log:name:signpostID:)();
      static os_signpost_type_t.begin.getter();
      os_signpost(_:dso:log:name:signpostID:)();
      type metadata accessor for Transaction();
      uint64_t v24 = swift_allocObject();
      id v25 = (id)v174;
      *(void *)(v24 + 16) = v23;
      *(void *)(v24 + 24) = v25;
      swift_retain();
      id v26 = v25;
      uint64_t v27 = v23;
      id v28 = v26;
      static Transaction.asyncTask(name:block:)();
      swift_release();
      id v29 = [v28 collaborativeKeyC1];
      if (!v29)
      {
        static os_log_type_t.error.getter();
        os_log(_:dso:log:_:_:)();
        sub_10000588C(&qword_101642890);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_101342130;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v51;
        *(void *)(inited + 48) = 0xD000000000000041;
        *(void *)(inited + 56) = 0x80000001013FA290;
        unint64_t v52 = sub_10092D8F8(inited);
        type metadata accessor for SPPairingSessionError(0);
        *(void *)&v178[0] = 6;
        sub_10065435C(v52);
        swift_bridgeObjectRelease();
        sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
        _BridgedStoredNSError.init(_:userInfo:)();
        uint64_t v53 = (void *)v179;
        sub_101001148((void *)v179, 1, (uint64_t)a3, a4);

        return swift_release();
      }
      char v30 = v29;
      uint64_t v168 = v27;
      uint64_t v31 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;

      id v34 = [v28 attestation];
      if (!v34)
      {
        static os_log_type_t.error.getter();
        os_log(_:dso:log:_:_:)();
        sub_10000588C(&qword_101642890);
        uint64_t v54 = swift_initStackObject();
        *(_OWORD *)(v54 + 16) = xmmword_101342130;
        *(void *)(v54 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(v54 + 40) = v55;
        *(void *)(v54 + 48) = 0xD000000000000042;
        *(void *)(v54 + 56) = 0x80000001013FA310;
        unint64_t v56 = sub_10092D8F8(v54);
        type metadata accessor for SPPairingSessionError(0);
        *(void *)&v178[0] = 6;
        sub_10065435C(v56);
        swift_bridgeObjectRelease();
        sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
        _BridgedStoredNSError.init(_:userInfo:)();
        uint64_t v57 = (void *)v179;
        sub_101001148((void *)v179, 1, (uint64_t)a3, a4);
        sub_10001CFB8(v31, v33);

        return swift_release();
      }
      uint64_t v35 = v34;
      uint64_t v36 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v174 = v37;

      id v38 = [v28 nonce];
      uint64_t v39 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v41 = v40;

      uint64_t v167 = v36;
      v173 = a3;
      switch(v41 >> 62)
      {
        case 1uLL:
          sub_10001CFB8(v39, v41);
          LODWORD(v42) = HIDWORD(v39) - v39;
          if (__OFSUB__(HIDWORD(v39), v39))
          {
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
LABEL_51:
            __break(1u);
            JUMPOUT(0x100370678);
          }
          uint64_t v42 = (int)v42;
          break;
        case 2uLL:
          uint64_t v58 = v31;
          unint64_t v59 = v33;
          uint64_t v61 = *(void *)(v39 + 16);
          uint64_t v60 = *(void *)(v39 + 24);
          sub_10001CFB8(v39, v41);
          uint64_t v42 = v60 - v61;
          if (__OFSUB__(v60, v61)) {
            goto LABEL_49;
          }
          uint64_t v36 = v167;
          unint64_t v33 = v59;
          uint64_t v31 = v58;
          break;
        case 3uLL:
          sub_10001CFB8(v39, v41);
          uint64_t v42 = 0;
          break;
        default:
          sub_10001CFB8(v39, v41);
          uint64_t v42 = BYTE6(v41);
          break;
      }
      uint64_t v165 = a4;
      uint64_t v62 = v42 - 1;
      if (__OFSUB__(v42, 1))
      {
        __break(1u);
      }
      else if ((v62 & 0x8000000000000000) == 0)
      {
        uint64_t v63 = v31;
        unint64_t v64 = v33;
        uint64_t v65 = sub_1004B4814(0, v62, v36, v174);
        unint64_t v67 = v66;
        id v68 = [v28 nonce];
        uint64_t v69 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v71 = v70;

        uint64_t v160 = v65;
        unint64_t v161 = v67;
        LOBYTE(v68) = _s12searchpartyd24KeyRepresentableInternalV23__derived_struct_equalsySbAC_ACtFZ_0(v65, v67, v69, v71);
        sub_10001CFB8(v69, v71);
        if (v68)
        {
          uint64_t My = type metadata accessor for Feature.FindMy();
          *((void *)&v180 + 1) = My;
          *(void *)&long long v181 = sub_100394110((unint64_t *)&qword_101653E00, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
          uint64_t v73 = sub_10001D958((uint64_t *)&v179);
          (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v73, enum case for Feature.FindMy.alphaWasp(_:), My);
          LOBYTE(My) = isFeatureEnabled(_:)();
          _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v179);
          unint64_t v33 = v64;
          uint64_t v31 = v63;
          if (My)
          {
            id v74 = [self sharedInstance];
            unsigned int v75 = [v74 isInternalBuild];
          }
          else
          {
            unsigned int v75 = 0;
          }
        }
        else
        {
          unsigned int v75 = 0;
          unint64_t v33 = v64;
          uint64_t v31 = v63;
        }
        unsigned int v159 = v75;
        *(unsigned char *)(v168 + 65) = v75;
        if (qword_101636A90 == -1) {
          goto LABEL_29;
        }
        goto LABEL_47;
      }
      __break(1u);
LABEL_47:
      swift_once();
LABEL_29:
      uint64_t v76 = type metadata accessor for Logger();
      uint64_t v77 = sub_100010324(v76, (uint64_t)qword_10170DDC8);
      unint64_t v78 = v174;
      sub_1000361E0(v36, v174);
      sub_1000361E0(v36, v78);
      unint64_t v166 = v77;
      char v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.debug.getter();
      BOOL v81 = os_log_type_enabled(v79, v80);
      uint64_t v162 = v31;
      unint64_t v163 = v33;
      if (v81)
      {
        unint64_t v82 = v174 >> 62;
        uint64_t v83 = swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        *(void *)&long long v179 = v158;
        *(_DWORD *)uint64_t v83 = 134218242;
        uint64_t v84 = 0;
        switch(v82)
        {
          case 1uLL:
            LODWORD(v84) = HIDWORD(v167) - v167;
            if (__OFSUB__(HIDWORD(v167), v167)) {
              goto LABEL_50;
            }
            uint64_t v84 = (int)v84;
LABEL_36:
            *(void *)&v178[0] = v84;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v83 + 12) = 2080;
            unint64_t v89 = v174;
            uint64_t v90 = v167;
            uint64_t v91 = Data.hexString.getter();
            *(void *)&v178[0] = sub_1008FA0F0(v91, v92, (uint64_t *)&v179);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_10001CFB8(v90, v89);
            sub_10001CFB8(v90, v89);
            _os_log_impl((void *)&_mh_execute_header, v79, v80, "S1 count %ld - %s", (uint8_t *)v83, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v31 = v162;
            unint64_t v33 = v163;
            break;
          case 2uLL:
            uint64_t v87 = *(void *)(v167 + 16);
            uint64_t v86 = *(void *)(v167 + 24);
            BOOL v88 = __OFSUB__(v86, v87);
            uint64_t v84 = v86 - v87;
            if (!v88) {
              goto LABEL_36;
            }
            goto LABEL_51;
          case 3uLL:
            goto LABEL_36;
          default:
            uint64_t v84 = BYTE6(v174);
            goto LABEL_36;
        }
      }
      else
      {
        unint64_t v85 = v174;
        sub_10001CFB8(v36, v174);
        sub_10001CFB8(v36, v85);
      }
      id v93 = v28;
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = (uint8_t *)swift_slowAlloc();
        uint64_t v158 = swift_slowAlloc();
        *(void *)&long long v179 = v158;
        v157 = v96;
        *(_DWORD *)uint64_t v96 = 136315138;
        v156 = v96 + 4;
        id v97 = [v93 nonce];
        uint64_t v98 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v100 = v99;

        uint64_t v101 = Data.hexString.getter();
        unint64_t v103 = v102;
        sub_10001CFB8(v98, v100);
        unint64_t v33 = v163;
        *(void *)&v178[0] = sub_1008FA0F0(v101, v103, (uint64_t *)&v179);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        uint64_t v31 = v162;
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v94, v95, "Session nonce: %s", v157, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      unint64_t v104 = Logger.logObject.getter();
      os_log_type_t v105 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v104, v105))
      {
        id v106 = v93;
        unint64_t v107 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)unint64_t v107 = 67109120;
        LODWORD(v179) = v159;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v104, v105, "isAlphaWasp ? %{BOOL}d", v107, 8u);
        id v93 = v106;
        swift_slowDealloc();
      }

      uint64_t v108 = sub_100A8AEE4(v31, v33);
      unint64_t v110 = v109;
      uint64_t v158 = v111;
      uint64_t v113 = v171;
      uint64_t v112 = v172;
      char v114 = v93;
      uint64_t v115 = v170;
      uint64_t v116 = (uint8_t *)v108;
      (*(void (**)(void **, void, uint64_t))(v171 + 104))(v170, enum case for HashAlgorithm.sha256(_:), v172);
      v157 = v116;
      unint64_t v166 = v110;
      uint64_t v117 = Data.hash(algorithm:)();
      unint64_t v119 = v118;
      (*(void (**)(void **, uint64_t))(v113 + 8))(v115, v112);
      uint64_t v172 = v117;
      sub_1003A9AA8(v114, v31, v33, v117, v119, (uint64_t)v177);
      sub_10001D608((uint64_t)v177, (uint64_t)v178, &qword_1016428F8);
      if (sub_1003B4138((uint64_t)v178) == 1)
      {
        static os_log_type_t.error.getter();
        os_log(_:dso:log:_:_:)();
        sub_10000588C(&qword_101642890);
        uint64_t v120 = swift_allocObject();
        *(_OWORD *)(v120 + 16) = xmmword_101342130;
        *(void *)(v120 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(v120 + 40) = v121;
        *(void *)(v120 + 48) = 0xD000000000000048;
        *(void *)(v120 + 56) = 0x80000001013FA430;
        unint64_t v122 = sub_10092D8F8(v120);
        type metadata accessor for SPPairingSessionError(0);
        uint64_t v175 = 6;
        sub_10065435C(v122);
        swift_bridgeObjectRelease();
        sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
        _BridgedStoredNSError.init(_:userInfo:)();
        uint64_t v123 = (void *)v179;
        sub_101001148((void *)v179, 1, (uint64_t)v173, v165);
        sub_10001CFB8(v167, v174);
        swift_release();
        sub_10001CFB8(v172, v119);
        sub_10001CFB8((uint64_t)v157, v166);
        sub_10001CFB8(v160, v161);
        sub_10001CFB8(v31, v33);
      }
      else
      {
        long long v187 = v178[8];
        long long v188 = v178[9];
        long long v189 = v178[10];
        long long v190 = v178[11];
        long long v183 = v178[4];
        long long v184 = v178[5];
        long long v185 = v178[6];
        long long v186 = v178[7];
        long long v179 = v178[0];
        long long v180 = v178[1];
        long long v181 = v178[2];
        long long v182 = v178[3];
        uint64_t v124 = v168;
        *(void *)(v168 + 24) = v158;
        uint64_t v125 = v124;
        swift_retain();
        swift_release();
        uint64_t v126 = v164;
        uint64_t v171 = sub_1008B8284((uint64_t)&v179);
        unint64_t v127 = dispatch_group_create();
        uint64_t v128 = swift_allocObject();
        v156 = (uint8_t *)v119;
        uint64_t v129 = v128;
        type metadata accessor for SPPairingSessionError(0);
        uint64_t v176 = 1;
        sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
        char v130 = v114;
        sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
        _BridgedStoredNSError.init(_:userInfo:)();
        *(void *)(v129 + 16) = v175;
        v170 = (void **)(v129 + 16);
        *(unsigned char *)(v129 + 24) = 1;
        dispatch_group_enter(v127);
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = v127;
        uint64_t v132 = v125;
        *(void *)(v131 + 24) = v125;
        LOBYTE(v125) = v159;
        *(unsigned char *)(v131 + 32) = v159;
        *(void *)(v131 + 40) = v129;
        *(void *)(v131 + 48) = v130;
        uint64_t v133 = v169;
        *(void *)(v131 + 56) = v126;
        *(void *)(v131 + 64) = v133;
        uint64_t v134 = v132;
        swift_retain();
        id v135 = v130;
        uint64_t v136 = v127;
        swift_retain();
        swift_retain();
        Future.addFailure(block:)();
        swift_release();
        swift_release();
        uint64_t v137 = swift_allocObject();
        *(void *)(v137 + 16) = v136;
        *(void *)(v137 + 24) = v129;
        *(void *)(v137 + 32) = v126;
        *(void *)(v137 + 40) = v135;
        long long v138 = v188;
        *(_OWORD *)(v137 + 176) = v187;
        *(_OWORD *)(v137 + 192) = v138;
        long long v139 = v190;
        *(_OWORD *)(v137 + 208) = v189;
        *(_OWORD *)(v137 + 224) = v139;
        long long v140 = v184;
        *(_OWORD *)(v137 + 112) = v183;
        *(_OWORD *)(v137 + 128) = v140;
        long long v141 = v186;
        *(_OWORD *)(v137 + 144) = v185;
        *(_OWORD *)(v137 + 160) = v141;
        long long v142 = v180;
        *(_OWORD *)(v137 + 48) = v179;
        *(_OWORD *)(v137 + 64) = v142;
        long long v143 = v182;
        *(_OWORD *)(v137 + 80) = v181;
        *(_OWORD *)(v137 + 96) = v143;
        uint64_t v144 = v172;
        unint64_t v145 = (unint64_t)v156;
        *(void *)(v137 + 240) = v172;
        *(void *)(v137 + 248) = v145;
        *(unsigned char *)(v137 + 256) = v125;
        unint64_t v146 = v157;
        *(void *)(v137 + 264) = v134;
        *(void *)(v137 + 272) = v146;
        unint64_t v147 = v166;
        uint64_t v148 = v169;
        *(void *)(v137 + 280) = v166;
        *(void *)(v137 + 288) = v148;
        swift_retain();
        id v149 = v135;
        uint64_t v150 = v136;
        swift_retain();
        swift_retain();
        sub_1003B53B4(v177, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1003B529C);
        unint64_t v151 = v145;
        sub_1000361E0(v144, v145);
        sub_1000361E0((uint64_t)v146, v147);
        Future.addSuccess(block:)();
        swift_release();
        swift_release();
        OS_dispatch_group.wait()();
        v152 = v170;
        swift_beginAccess();
        v153 = *v152;
        LODWORD(v147) = *(unsigned __int8 *)(v129 + 24);
        id v154 = v153;
        sub_101001148(v153, v147, (uint64_t)v173, v165);
        swift_release();

        swift_release();
        sub_1003B53B4(v177, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_1003B5428);
        sub_10001CFB8(v144, v151);
        swift_release();
        sub_10001CFB8((uint64_t)v146, v166);
        sub_10001CFB8(v160, v161);
        sub_10001CFB8(v167, v174);
        sub_10001CFB8(v162, v163);
      }
      return swift_release();
    }
    swift_bridgeObjectRelease();
  }
  v173 = a3;
  unint64_t v43 = *(void (**)(char *, uint64_t))(v12 + 8);
  v43(v17, v11);
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_10000588C(&qword_101642890);
  uint64_t v44 = swift_initStackObject();
  *(_OWORD *)(v44 + 16) = xmmword_101342130;
  *(void *)(v44 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v44 + 40) = v45;
  *(void *)(v44 + 48) = 0xD000000000000048;
  *(void *)(v44 + 56) = 0x80000001013FA220;
  unint64_t v46 = sub_10092D8F8(v44);
  type metadata accessor for SPPairingSessionError(0);
  *(void *)&v178[0] = 6;
  sub_10065435C(v46);
  swift_bridgeObjectRelease();
  sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  uint64_t v47 = (void *)v179;
  v173(v179, 1);

  id v48 = [(id)v174 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  sub_100164568((uint64_t)v15);
  v43(v15, v11);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_100370698(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = type metadata accessor for DispatchTime();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_100370758, 0, 0);
}

uint64_t sub_100370758()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtC12searchpartyd22ItemPairingCoordinator_pairingAnalytics);
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_100370788, v1, 0);
}

uint64_t sub_100370788()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  static DispatchTime.now()();
  uint64_t v5 = v1 + OBJC_IVAR____TtC12searchpartyd24SPAnalyticsItemPairEvent_beginVerifyPairing;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v5, v2, v3);
  swift_endAccess();
  v0[11] = type metadata accessor for Transaction();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return _swift_task_switch(sub_1003708A0, 0, 0);
}

uint64_t sub_1003708A0()
{
  id v1 = [*(id *)(v0 + 48) serialNumber];
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void **)(v0 + 48);
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;

    *(void *)(v0 + 96) = v6;
    id v7 = [v3 systemVersion];
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = *(void *)(v0 + 80);
      *(void *)(v0 + 104) = v4;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      *(void *)(v0 + 112) = v10;
      *(void *)(v0 + 120) = v12;
      return _swift_task_switch(sub_1003709C0, v9, 0);
    }
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_1003709C0()
{
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = (void *)swift_allocObject();
  _OWORD v6[2] = v5;
  v6[3] = v2;
  v6[4] = v1;
  v6[5] = v4;
  v6[6] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void sub_100370AC4(uint64_t a1, NSObject *a2, uint64_t a3, int a4, uint64_t a5, void *a6, uint64_t a7)
{
  uint64_t v39 = a7;
  id v45 = a6;
  dispatch_group_t v46 = a2;
  int v42 = a4;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v9 - 8);
  uint64_t v41 = v9;
  __chkstk_darwin(v9);
  id v38 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = a5 + 16;
  uint64_t v44 = a5;
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  v36[1] = sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  long long v37 = xmmword_101342130;
  *(_OWORD *)(v11 + 16) = xmmword_101342130;
  uint64_t v48 = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v12 = String.init<A>(describing:)();
  uint64_t v14 = v13;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v15 = sub_10000B4CC();
  *(void *)(v11 + 64) = v15;
  *(void *)(v11 + 32) = v12;
  *(void *)(v11 + 40) = v14;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  if (v42)
  {
    if (qword_101636A90 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100010324(v16, (uint64_t)qword_10170DDC8);
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "AlphaWasp: bypassing pairing lock check failure for hardcoded pairing", v19, 2u);
      swift_slowDealloc();
    }

    swift_beginAccess();
    uint64_t v20 = v44;
    id v21 = v45;
    char v22 = *(void **)(v44 + 16);
    *(void *)(v44 + 16) = v45;
    *(unsigned char *)(v20 + 24) = 0;

    id v23 = v21;
  }
  else
  {
    uint64_t v48 = a1;
    swift_errorRetain();
    type metadata accessor for SPPairingSessionError(0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_10000588C(&qword_101642890);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v37;
      *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
      *(void *)(inited + 40) = v25;
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = v37;
      uint64_t v48 = a1;
      swift_errorRetain();
      uint64_t v27 = String.init<A>(describing:)();
      *(void *)(v26 + 56) = &type metadata for String;
      *(void *)(v26 + 64) = v15;
      *(void *)(v26 + 32) = v27;
      *(void *)(v26 + 40) = v28;
      *(void *)(inited + 48) = String.init(format:_:)();
      *(void *)(inited + 56) = v29;
      unint64_t v30 = sub_10092D8F8(inited);
      uint64_t v48 = 3;
      sub_10065435C(v30);
      swift_bridgeObjectRelease();
      sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
    }
    uint64_t v31 = v47;
    swift_beginAccess();
    uint64_t v32 = v44;
    unint64_t v33 = *(void **)(v44 + 16);
    *(void *)(v44 + 16) = v31;
    *(unsigned char *)(v32 + 24) = 1;

    id v34 = [v45 identifier];
    uint64_t v35 = (uint64_t)v38;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_beginAccess();
    sub_100164568(v35);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v41);
    swift_endAccess();
    swift_release();
  }
  dispatch_group_leave(v46);
}

void sub_100370FD4(void *a1, NSObject *a2, unint64_t a3, objc_class *a4, void *a5, unint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10, uint64_t a11, uint64_t a12)
{
  uint64_t v126 = a7;
  uint64_t v127 = a8;
  unint64_t v125 = a6;
  id v137 = a5;
  Class v131 = a4;
  dispatch_group_t v135 = a2;
  uint64_t v14 = type metadata accessor for LocalizationUtility.Table();
  Class v123 = *(Class *)(v14 - 8);
  Class v124 = (Class)v14;
  __chkstk_darwin(v14);
  unint64_t v122 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v133 = v16;
  uint64_t v134 = v17;
  __chkstk_darwin(v16);
  uint64_t v132 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v19 = *(unsigned __int8 *)a1;
  uint64_t v21 = a1[1];
  unint64_t v20 = a1[2];
  uint64_t v22 = a1[3];
  unint64_t v23 = a1[4];
  uint64_t v24 = a1[5];
  Class v130 = (Class)a1[6];
  uint64_t v25 = a1[7];
  if (qword_101636A90 != -1) {
    swift_once();
  }
  unint64_t v136 = a3 + 16;
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = sub_100010324(v26, (uint64_t)qword_10170DDC8);
  sub_100037A38(v21, v20);
  sub_100037A38(v22, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100037A38(v21, v20);
  sub_100037A38(v22, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v121 = v27;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.info.getter();
  LODWORD(v129) = v29;
  if (!os_log_type_enabled(v28, v29))
  {
    sub_100037A24(v21, v20);
    sub_100037A24(v22, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100037A24(v21, v20);
    sub_100037A24(v22, v23);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v42 = v19;
    unint64_t v34 = v20;
    if (v42 >= 2) {
      goto LABEL_5;
    }
LABEL_9:
    if (v23 >> 60 == 15 || !v25 || v24[2].isa != (Class)2)
    {
      static os_log_type_t.error.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      type metadata accessor for SPPairingSessionError(0);
      uint64_t v139 = 3;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v56 = v152[0];
      swift_beginAccess();
      uint64_t v57 = *(void **)(a3 + 16);
      *(void *)(a3 + 16) = v56;
      *(unsigned char *)(a3 + 24) = 1;

      id v41 = [v137 identifier];
      goto LABEL_18;
    }
    unint64_t v138 = v34;
    uint64_t v118 = v25;
    os_log_t v119 = v24;
    unint64_t v128 = a3;
    uint64_t v129 = (void *)v21;
    sub_1000361E0(v22, v23);
    uint64_t v43 = v22;
    uint64_t v44 = v23;
    if (qword_101636A98 != -1) {
      swift_once();
    }
    unsigned int v120 = a9;
    uint64_t v45 = qword_10170DDE0;
    uint64_t v46 = *(void *)algn_10170DDE8;
    id v47 = [v137 nonce];
    uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v50 = v49;

    uint64_t v150 = sub_10088540C(v48, v50);
    unint64_t v151 = v51;
    Data.append(_:)();
    Data.append(_:)();
    uint64_t v52 = v150;
    unint64_t v53 = v151;
    sub_1000361E0(v150, v151);
    uint64_t v54 = (id)kSecKeyAlgorithmECDSASignatureMessageX962SHA256;
    uint64_t v117 = (uint8_t *)v45;
    uint64_t v115 = v46;
    uint64_t v127 = v43;
    char v55 = sub_100A8C768(v45, v46, v52, v53, v43, v44, v54);
    unint64_t v116 = v44;
    char v60 = v55;

    sub_10001CFB8(v52, v53);
    if (v60)
    {
      static os_log_type_t.default.getter();
      id v61 = v129;
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
    }
    else
    {
      static os_log_type_t.error.getter();
      uint64_t v45 = v134;
      unint64_t v53 = v128;
      id v61 = v129;
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      if ((v120 & 1) == 0)
      {
        sub_10000588C(&qword_101642890);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_101342130;
        *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
        *(void *)(inited + 40) = v108;
        *(void *)(inited + 48) = 0xD00000000000003FLL;
        *(void *)(inited + 56) = 0x80000001013FA5B0;
        unint64_t v109 = sub_10092D8F8(inited);
        type metadata accessor for SPPairingSessionError(0);
        uint64_t v139 = 3;
        sub_10065435C(v109);
        swift_bridgeObjectRelease();
        sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
        _BridgedStoredNSError.init(_:userInfo:)();
        uint64_t v110 = v152[0];
        swift_beginAccess();
        uint64_t v111 = *(void **)(v53 + 16);
        *(void *)(v53 + 16) = v110;
        *(unsigned char *)(v53 + 24) = 1;

        id v112 = [v137 identifier];
        uint64_t v113 = (uint64_t)v132;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        swift_beginAccess();
        sub_100164568(v113);
        (*(void (**)(uint64_t, unint64_t))(v45 + 8))(v113, v133);
        swift_endAccess();
        sub_100037A24(v127, v116);
        swift_release();
        goto LABEL_51;
      }
      uint64_t v62 = Logger.logObject.getter();
      os_log_type_t v63 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v62, v63))
      {
        unint64_t v64 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v64 = 0;
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "AlphaWasp: bypassing pairing lock check failure for alphaWasp hardcoded pairing", v64, 2u);
        id v61 = v129;
        swift_slowDealloc();
      }

      swift_beginAccess();
      uint64_t v65 = *(void **)(v53 + 16);
      id v66 = v137;
      *(void *)(v53 + 16) = v137;
      *(unsigned char *)(v53 + 24) = 0;

      id v67 = v66;
    }
    Class isa = v119[2].isa;
    if (isa)
    {
      if (isa != (Class)1)
      {
        uint64_t v45 = (uint64_t)a10;
        Class v70 = v119[4].isa;
        Class v69 = v119[5].isa;
        Class v72 = v119[6].isa;
        Class v71 = v119[7].isa;
        Class v148 = v70;
        Class v149 = v69;
        sub_1000361E0((uint64_t)v70, (unint64_t)v69);
        sub_1000361E0((uint64_t)v70, (unint64_t)v69);
        sub_1000361E0((uint64_t)v72, (unint64_t)v71);
        Data.append(_:)();
        uint64_t v73 = a10[4];
        unint64_t v74 = a10[5];
        a10[4] = v70;
        a10[5] = v69;
        sub_1000361E0((uint64_t)v70, (unint64_t)v69);
        sub_100037A24(v73, v74);
        uint64_t v75 = a10[6];
        unint64_t v76 = a10[7];
        a10[6] = v72;
        a10[7] = v71;
        unint64_t v125 = (unint64_t)v71;
        uint64_t v126 = (uint64_t)v72;
        sub_1000361E0((uint64_t)v72, (unint64_t)v71);
        sub_100037A24(v75, v76);
        if (v120)
        {
          Class v131 = v70;
          uint64_t v132 = (char *)v69;
          if (v138 >> 60 == 15) {
            uint64_t v77 = 0;
          }
          else {
            uint64_t v77 = (uint64_t)v61;
          }
          if (v138 >> 60 == 15) {
            unint64_t v78 = 0xC000000000000000;
          }
          else {
            unint64_t v78 = v138;
          }
          sub_100037A38((uint64_t)v61, v138);
        }
        else
        {
          unint64_t v78 = v138;
          if (v138 >> 60 == 15)
          {
            static os_log_type_t.error.getter();
            if (qword_1016372A8 != -1) {
              swift_once();
            }
            os_log(_:dso:log:_:_:)();
            type metadata accessor for SPPairingSessionError(0);
            v152[0] = 3;
            sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
            sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
            _BridgedStoredNSError.init(_:userInfo:)();
            uint64_t v79 = v147;
            swift_beginAccess();
            unint64_t v80 = v128;
            BOOL v81 = *(void **)(v128 + 16);
            *(void *)(v128 + 16) = v79;
            *(unsigned char *)(v80 + 24) = 1;

            id v82 = [v137 identifier];
            uint64_t v83 = (uint64_t)v132;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            swift_beginAccess();
            sub_100164568(v83);
            (*(void (**)(uint64_t, unint64_t))(v134 + 8))(v83, v133);
            swift_endAccess();
            sub_100037A24(v127, v116);
            sub_10001CFB8(v126, v125);
            sub_10001CFB8((uint64_t)v70, (unint64_t)v69);
            swift_release();
            uint64_t v84 = (uint64_t)v148;
            unint64_t v85 = (unint64_t)v149;
            goto LABEL_49;
          }
          Class v131 = v70;
          uint64_t v132 = (char *)v69;
          sub_1000361E0((uint64_t)v61, v138);
          uint64_t v77 = (uint64_t)v61;
        }
        uint64_t v134 = a12;
        uint64_t v86 = v122;
        Class v87 = v123;
        Class v88 = v124;
        (*((void (**)(char *, void, Class))v123 + 13))(v122, enum case for LocalizationUtility.Table.default(_:), v124);
        static LocalizationUtility.localizedString(key:table:)();
        (*((void (**)(char *, Class))v87 + 1))(v86, v88);
        uint64_t v129 = (void *)v77;
        unint64_t v138 = v78;
        Class v89 = Data._bridgeToObjectiveC()().super.isa;
        Class v90 = Data._bridgeToObjectiveC()().super.isa;
        Class v124 = Data._bridgeToObjectiveC()().super.isa;
        Class v123 = Data._bridgeToObjectiveC()().super.isa;
        NSString v91 = String._bridgeToObjectiveC()();
        NSString v92 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        Class v93 = Data._bridgeToObjectiveC()().super.isa;
        Class v130 = v93;
        uint64_t v94 = (uint64_t)v148;
        unint64_t v95 = (unint64_t)v149;
        sub_1000361E0((uint64_t)v148, (unint64_t)v149);
        Class v96 = Data._bridgeToObjectiveC()().super.isa;
        unint64_t v133 = v95;
        uint64_t v134 = v94;
        sub_10001CFB8(v94, v95);
        Class v114 = v93;
        id v61 = v137;
        Class v97 = v89;
        Class v98 = v89;
        Class v99 = v123;
        Class v100 = v124;
        [v137 updateWithSeed:v98 collaborativeKeyC2:v90 serverSignature:v124 serverPublicKey:v123 maskedAppleID:v91 userMessage:v92 baaIntermediateCert:v114 baaLeafCert:v96];

        uint64_t v101 = (void *)(*(void *)((char *)a10
                                    + OBJC_IVAR____TtC12searchpartyd22ItemPairingCoordinator_locationMonitor)
                        + OBJC_IVAR____TtC12searchpartyd22CurrentLocationMonitor_currentLocation);
        swift_beginAccess();
        if (*v101) {
          [v61 updatePairingLocation:];
        }
        static os_log_type_t.default.getter();
        uint64_t v46 = (uint64_t)v131;
        unint64_t v53 = (unint64_t)v132;
        if (qword_1016372A8 == -1)
        {
LABEL_48:
          os_log(_:dso:log:_:_:)();
          unint64_t v102 = *(void **)(v45 + 16);
          *(void *)(v45 + 16) = v61;
          id v103 = v61;

          swift_beginAccess();
          unint64_t v104 = v128;
          os_log_type_t v105 = *(void **)(v128 + 16);
          *(void *)(v128 + 16) = v103;
          *(unsigned char *)(v104 + 24) = 0;

          id v106 = v103;
          static os_signpost_type_t.end.getter();
          os_signpost(_:dso:log:name:signpostID:)();
          static os_signpost_type_t.begin.getter();
          os_signpost(_:dso:log:name:signpostID:)();
          sub_100037A24(v127, v116);
          sub_10001CFB8(v126, v125);
          sub_10001CFB8(v46, v53);
          sub_10001CFB8((uint64_t)v129, v138);
          unint64_t v85 = v133;
          uint64_t v84 = v134;
LABEL_49:
          sub_10001CFB8(v84, v85);
LABEL_51:
          sub_10001CFB8(v150, v151);
          goto LABEL_19;
        }
LABEL_54:
        swift_once();
        goto LABEL_48;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_54;
  }
  unint64_t v138 = v20;
  os_log_t v119 = v28;
  uint64_t v30 = swift_slowAlloc();
  unint64_t v128 = a3;
  uint64_t v31 = (uint8_t *)v30;
  uint64_t v118 = swift_slowAlloc();
  v152[0] = v118;
  *(_DWORD *)uint64_t v31 = 136315138;
  uint64_t v117 = v31 + 4;
  unsigned int v120 = v19;
  LOBYTE(v139) = v19;
  uint64_t v140 = v21;
  unint64_t v141 = v138;
  uint64_t v142 = v22;
  unint64_t v143 = v23;
  uint64_t v144 = v24;
  Class v145 = v130;
  uint64_t v146 = v25;
  sub_100037A38(v21, v138);
  sub_100037A38(v22, v23);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v32 = String.init<A>(describing:)();
  uint64_t v139 = sub_1008FA0F0(v32, v33, v152);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  unint64_t v34 = v138;
  swift_bridgeObjectRelease();
  sub_100037A24(v21, v34);
  sub_100037A24(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100037A24(v21, v34);
  sub_100037A24(v22, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_log_t v35 = v119;
  _os_log_impl((void *)&_mh_execute_header, v119, (os_log_type_t)v129, "pairingCheckResponse: %s", v31, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  a3 = v128;
  swift_slowDealloc();

  if (v120 < 2) {
    goto LABEL_9;
  }
LABEL_5:
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  sub_10000588C(&qword_101642890);
  uint64_t v36 = swift_initStackObject();
  *(_OWORD *)(v36 + 16) = xmmword_101342130;
  *(void *)(v36 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v36 + 40) = v37;
  *(void *)(v36 + 48) = 0xD000000000000036;
  *(void *)(v36 + 56) = 0x80000001013FA660;
  unint64_t v38 = sub_10092D8F8(v36);
  type metadata accessor for SPPairingSessionError(0);
  uint64_t v139 = 18;
  sub_10065435C(v38);
  swift_bridgeObjectRelease();
  sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  uint64_t v39 = v152[0];
  swift_beginAccess();
  uint64_t v40 = *(void **)(a3 + 16);
  *(void *)(a3 + 16) = v39;
  *(unsigned char *)(a3 + 24) = 1;

  id v41 = [v137 identifier];
LABEL_18:
  id v58 = v41;
  uint64_t v59 = (uint64_t)v132;
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  sub_100164568(v59);
  (*(void (**)(uint64_t, unint64_t))(v134 + 8))(v59, v133);
  swift_endAccess();
  swift_release();
LABEL_19:
  dispatch_group_leave(v135);
}

uint64_t sub_100372448(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  uint64_t v26 = *v3;
  uint64_t v27 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v8 - 8);
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  __chkstk_darwin(v11);
  uint64_t v30 = (uint64_t)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.trustedNow.getter(v30);
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_101347BA0;
  aBlock[0] = *v3;
  sub_10000588C(&qword_101642888);
  uint64_t v14 = String.init<A>(describing:)();
  uint64_t v16 = v15;
  *(void *)(v13 + 56) = &type metadata for String;
  unint64_t v17 = sub_10000B4CC();
  *(void *)(v13 + 32) = v14;
  *(void *)(v13 + 40) = v16;
  *(void *)(v13 + 96) = &type metadata for String;
  *(void *)(v13 + 104) = v17;
  *(void *)(v13 + 64) = v17;
  *(void *)(v13 + 72) = 0xD000000000000024;
  *(void *)(v13 + 80) = 0x80000001013F97B0;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v27;
  unint64_t v20 = v28;
  void v18[2] = v4;
  v18[3] = v20;
  uint64_t v21 = v29;
  uint64_t v18[4] = v19;
  v18[5] = v21;
  v18[6] = v26;
  aBlock[4] = sub_1003B40E8;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BC9E8;
  uint64_t v22 = _Block_copy(aBlock);
  swift_retain();
  id v23 = v20;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v36 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v22);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v34);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
  return swift_release();
}

void sub_1003728FC(uint64_t a1, void *a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v116 = a5;
  uint64_t v126 = a4;
  Class v124 = a3;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v122 = *(void *)(v7 - 8);
  *(void *)&long long v123 = v7;
  __chkstk_darwin(v7);
  unsigned int v120 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = (uint64_t *)type metadata accessor for DispatchQoS();
  uint64_t v119 = *(v121 - 1);
  __chkstk_darwin(v121);
  uint64_t v118 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v12 = (char *)&v113 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v114);
  uint64_t v115 = (uint64_t *)((char *)&v113 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v113 - v19;
  unint64_t v125 = a2;
  id v21 = [a2 identifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v22 = a1;
  uint64_t v23 = a1 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_pairingSessionCoordinators;
  swift_beginAccess();
  uint64_t v24 = *(void *)v23;
  if (!*(void *)(*(void *)v23 + 16)) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_1007240CC((uint64_t)v20);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
    v34(v20, v14);
    static os_log_type_t.error.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_10000588C(&qword_101642890);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_101342130;
    *(void *)(v35 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v35 + 40) = v36;
    *(void *)(v35 + 48) = 0xD000000000000050;
    *(void *)(v35 + 56) = 0x80000001013F9840;
    unint64_t v37 = sub_10092D8F8(v35);
    id v38 = [v125 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    swift_beginAccess();
    sub_100164568((uint64_t)v18);
    v34(v18, v14);
    swift_endAccess();
    swift_release();
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v39 = v117;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchQoS.QoSClass.default(_:), v117);
    uint64_t v40 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v39);
    id v41 = (void *)swift_allocObject();
    uint64_t v42 = v126;
    v41[2] = v124;
    void v41[3] = v42;
    v41[4] = v37;
    *(void *)&long long v165 = sub_1003B4118;
    *((void *)&v165 + 1) = v41;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v164 = sub_1004B5480;
    *((void *)&v164 + 1) = &unk_1015BCA38;
    uint64_t v43 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v44 = v118;
    static DispatchQoS.unspecified.getter();
    *(void *)&v161[0] = _swiftEmptyArrayStorage;
    sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v45 = v120;
    uint64_t v46 = v123;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v43);

    (*(void (**)(char *, uint64_t))(v122 + 8))(v45, v46);
    (*(void (**)(char *, uint64_t *))(v119 + 8))(v44, v121);
    goto LABEL_11;
  }
  uint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
  swift_retain();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  static os_signpost_type_t.end.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v28 = *(void *)(v27 + OBJC_IVAR____TtC12searchpartyd22ItemPairingCoordinator_pairingAnalytics);
  swift_retain();
  uint64_t v29 = v125;
  sub_100374140(v125, v27, (uint64_t)v150);
  sub_10001D608((uint64_t)v150, (uint64_t)v149, &qword_101642898);
  sub_10001D608((uint64_t)v150, (uint64_t)&v151, &qword_101642898);
  if (sub_1003B4138((uint64_t)&v151) == 1)
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    sub_10000588C(&qword_101642890);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_101342130;
    *(void *)(v30 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v30 + 40) = v31;
    *(void *)(v30 + 48) = 0xD000000000000043;
    *(void *)(v30 + 56) = 0x80000001013F98F0;
    unint64_t v32 = sub_10092D8F8(v30);
    type metadata accessor for SPPairingSessionError(0);
    *(void *)&v161[0] = 6;
    sub_10065435C(v32);
    swift_bridgeObjectRelease();
    sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    uint64_t v33 = (void *)aBlock;
    sub_101001C7C((void *)aBlock, 1, (uint64_t)v150, (uint64_t)v124, v126);

    swift_release();
LABEL_11:
    swift_release();
    return;
  }
  v161[6] = v157;
  v161[7] = v158;
  v161[8] = v159;
  v161[2] = v153;
  v161[3] = v154;
  v161[4] = v155;
  v161[5] = v156;
  v161[0] = v151;
  v161[1] = v152;
  long long v145 = v157;
  long long v146 = v158;
  long long v147 = v159;
  long long v141 = v153;
  long long v142 = v154;
  long long v143 = v155;
  long long v144 = v156;
  uint64_t v162 = v160;
  uint64_t v148 = v160;
  long long v139 = v151;
  long long v140 = v152;
  type metadata accessor for Transaction();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  id v47 = [v29 keyGenerationStatus];
  uint64_t v48 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v50 = v49;

  *(void *)&long long aBlock = v48;
  *((void *)&aBlock + 1) = v50;
  sub_1000362FC();
  uint64_t v51 = DataProtocol.intValue.getter();
  sub_10001CFB8(v48, v50);
  if (v51)
  {
    static os_log_type_t.error.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v52 = swift_allocObject();
    long long v123 = xmmword_101342130;
    *(_OWORD *)(v52 + 16) = xmmword_101342130;
    id v53 = [v29 keyGenerationStatus];
    uint64_t v54 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v56 = v55;

    uint64_t v57 = Data.hexString.getter();
    uint64_t v59 = v58;
    sub_10001CFB8(v54, v56);
    *(void *)(v52 + 56) = &type metadata for String;
    *(void *)(v52 + 64) = sub_10000B4CC();
    *(void *)(v52 + 32) = v57;
    *(void *)(v52 + 40) = v59;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10000588C(&qword_101642890);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = v123;
    *(void *)(v60 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v60 + 40) = v61;
    *(void *)(v60 + 48) = 0xD000000000000050;
    *(void *)(v60 + 56) = 0x80000001013F9990;
    unint64_t v62 = sub_10092D8F8(v60);
    type metadata accessor for SPPairingSessionError(0);
    *(void *)&long long aBlock = 3;
LABEL_14:
    sub_10065435C(v62);
    swift_bridgeObjectRelease();
    sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    os_log_type_t v63 = *(void **)&v127[0];
    long long v134 = v145;
    long long v135 = v146;
    long long v136 = v147;
    uint64_t v137 = v148;
    long long v130 = v141;
    long long v131 = v142;
    long long v132 = v143;
    long long v133 = v144;
    long long v128 = v139;
    long long v129 = v140;
    SharingCircleWildAdvertisementKey.init(key:)(&v128);
    sub_10001D608((uint64_t)&v128, (uint64_t)&aBlock, &qword_101642898);
    sub_10001D608((uint64_t)v149, (uint64_t)v138, &qword_101642898);
    sub_1003B41F4(v138);
    sub_101001C7C(v63, 1, (uint64_t)&aBlock, (uint64_t)v124, v126);
    swift_release();
    sub_1003B42C8((uint64_t)v150);
    goto LABEL_15;
  }
  uint64_t v64 = *(void *)(v27 + 24);
  if (!v64)
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    sub_10000588C(&qword_101642890);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_101342130;
    *(void *)(v71 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(v71 + 40) = v72;
    *(void *)(v71 + 48) = 0xD00000000000004ELL;
    *(void *)(v71 + 56) = 0x80000001013F9A30;
    unint64_t v62 = sub_10092D8F8(v71);
    type metadata accessor for SPPairingSessionError(0);
    *(void *)&long long aBlock = 7;
    goto LABEL_14;
  }
  swift_retain();
  id v65 = [v29 collaborativeKeyC3];
  if (v65)
  {
    id v66 = v65;
    uint64_t v67 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v69 = v68;

    uint64_t v70 = CCCKGGetOpeningSize();
    *(void *)&long long v123 = v67;
    switch(v69 >> 62)
    {
      case 1uLL:
        if (v67 >> 32 < (int)v67) {
          __break(1u);
        }
        unint64_t v122 = v69 & 0x3FFFFFFFFFFFFFFFLL;
        swift_retain_n();
        sub_1000361E0(v123, v69);
        sub_100394158((int)v67, v67 >> 32, v64, v70, (uint64_t)v127);
        unint64_t v122 = v69;
        sub_10001CFB8(v123, v69);
        goto LABEL_27;
      case 2uLL:
        uint64_t v121 = *(uint64_t **)(v67 + 16);
        unint64_t v122 = v69;
        uint64_t v76 = *(void *)(v67 + 24);
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_100394158((uint64_t)v121, v76, v64, v70, (uint64_t)v127);
        swift_release_n();
        swift_release();
        swift_release();
        goto LABEL_28;
      case 3uLL:
        *(void *)((char *)&aBlock + 6) = 0;
        *(void *)&long long aBlock = 0;
        swift_retain_n();
        goto LABEL_26;
      default:
        *(void *)&long long aBlock = v67;
        WORD4(aBlock) = v69;
        BYTE10(aBlock) = BYTE2(v69);
        BYTE11(aBlock) = BYTE3(v69);
        BYTE12(aBlock) = BYTE4(v69);
        BYTE13(aBlock) = BYTE5(v69);
        swift_retain_n();
LABEL_26:
        sub_100A915E8((uint64_t)&aBlock, v64, v70, (uint64_t)v127);
        unint64_t v122 = v69;
LABEL_27:
        swift_release_n();
LABEL_28:
        long long v165 = v127[2];
        long long v166 = v127[3];
        long long v167 = v127[4];
        long long aBlock = v127[0];
        long long v164 = v127[1];
        uint64_t v77 = *(uint64_t **)(v22 + 280);
        sub_100AB24F0();
        QueueSynchronizer.conditionalSync<A>(_:)();
        swift_release();
        if ((v138[0] & 1) == 0)
        {
          static os_log_type_t.default.getter();
          os_log(_:dso:log:_:_:)();
          sub_10000588C(&qword_101642890);
          uint64_t v109 = swift_allocObject();
          *(_OWORD *)(v109 + 16) = xmmword_101342130;
          *(void *)(v109 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
          *(void *)(v109 + 40) = v110;
          *(void *)(v109 + 48) = 0xD000000000000040;
          *(void *)(v109 + 56) = 0x80000001013F9C20;
          unint64_t v111 = sub_10092D8F8(v109);
          type metadata accessor for SPPairingSessionError(0);
          *(void *)&long long v128 = 10;
          sub_10065435C(v111);
          swift_bridgeObjectRelease();
          sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
          _BridgedStoredNSError.init(_:userInfo:)();
          id v112 = (void *)v138[0];
          v124(v138[0], 1);
          swift_release();
          sub_1003B4428((uint64_t *)&aBlock);
          sub_1003B42C8((uint64_t)v150);
          sub_10001CFB8(v123, v122);

          goto LABEL_51;
        }
        id v78 = [v29 chipId];
        uint64_t v79 = v126;
        unint64_t v80 = v122;
        if (!v78) {
          goto LABEL_50;
        }
        BOOL v81 = v78;
        uint64_t v121 = v77;
        uint64_t v82 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v84 = v83;

        uint64_t v85 = Data.hexString.getter();
        unint64_t v87 = v86;
        sub_10001CFB8(v82, v84);
        uint64_t v88 = HIBYTE(v87) & 0xF;
        if ((v87 & 0x2000000000000000) == 0) {
          uint64_t v88 = v85 & 0xFFFFFFFFFFFFLL;
        }
        if (!v88 || (v89 = v85, (id v90 = [v29 ecid]) == 0))
        {
          uint64_t v79 = v126;
          goto LABEL_49;
        }
        NSString v91 = v90;
        unsigned int v120 = (char *)v64;
        uint64_t v92 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v94 = v93;

        uint64_t v95 = Data.hexString.getter();
        unint64_t v97 = v96;
        sub_10001CFB8(v92, v94);
        uint64_t v98 = HIBYTE(v97) & 0xF;
        if ((v97 & 0x2000000000000000) == 0) {
          uint64_t v98 = v95 & 0xFFFFFFFFFFFFLL;
        }
        if (!v98) {
          goto LABEL_47;
        }
        uint64_t v119 = v28;
        uint64_t v29 = v125;
        id v99 = [v125 serialNumber];
        if (v99)
        {
          Class v100 = v99;
          uint64_t v101 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v103 = v102;

          uint64_t v104 = HIBYTE(v103) & 0xF;
          if ((v103 & 0x2000000000000000) == 0) {
            uint64_t v104 = v101 & 0xFFFFFFFFFFFFLL;
          }
          if (v104)
          {
            uint64_t v105 = v95;
            id v106 = v115;
            *uint64_t v115 = v89;
            v106[1] = v87;
            v106[2] = v105;
            v106[3] = v97;
            v106[4] = v101;
            v106[5] = v103;
            swift_storeEnumTagMultiPayload();
            unint64_t v107 = dispatch_group_create();
            dispatch_group_enter(v107);
            uint64_t v108 = v107;
            sub_1003AA18C((uint64_t)v106, v121, v108);

            OS_dispatch_group.wait()();
            sub_100374B6C(v27, v22, &aBlock, v125, v161, (uint64_t)v124, v126, v116);
            sub_1003B4428((uint64_t *)&aBlock);
            sub_10001CFB8(v123, v122);

            swift_release();
            swift_release();
            sub_1003B42C8((uint64_t)v150);
            swift_release();
            sub_1003B61EC((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
            return;
          }
          swift_bridgeObjectRelease();
LABEL_47:
          uint64_t v29 = v125;
        }
        swift_bridgeObjectRelease();
        uint64_t v79 = v126;
LABEL_49:
        unint64_t v80 = v122;
        swift_bridgeObjectRelease();
LABEL_50:
        sub_100374B6C(v27, v22, &aBlock, v29, v161, (uint64_t)v124, v79, v116);
        swift_release();
        sub_1003B4428((uint64_t *)&aBlock);
        sub_1003B42C8((uint64_t)v150);
        sub_10001CFB8(v123, v80);
LABEL_51:
        swift_release();
        break;
    }
    goto LABEL_11;
  }
  static os_log_type_t.error.getter();
  os_log(_:dso:log:_:_:)();
  sub_10000588C(&qword_101642890);
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_101342130;
  *(void *)(v73 + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(v73 + 40) = v74;
  *(void *)(v73 + 48) = 0xD000000000000050;
  *(void *)(v73 + 56) = 0x80000001013F9AC0;
  unint64_t v75 = sub_10092D8F8(v73);
  type metadata accessor for SPPairingSessionError(0);
  *(void *)&long long aBlock = 6;
  sub_10065435C(v75);
  swift_bridgeObjectRelease();
  sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  os_log_type_t v63 = *(void **)&v127[0];
  long long v134 = v145;
  long long v135 = v146;
  long long v136 = v147;
  uint64_t v137 = v148;
  long long v130 = v141;
  long long v131 = v142;
  long long v132 = v143;
  long long v133 = v144;
  long long v128 = v139;
  long long v129 = v140;
  SharingCircleWildAdvertisementKey.init(key:)(&v128);
  sub_10001D608((uint64_t)&v128, (uint64_t)&aBlock, &qword_101642898);
  sub_10001D608((uint64_t)v149, (uint64_t)v138, &qword_101642898);
  sub_1003B41F4(v138);
  sub_101001C7C(v63, 1, (uint64_t)&aBlock, (uint64_t)v124, v126);
  swift_release();
  sub_1003B42C8((uint64_t)v150);
  swift_release();
LABEL_15:
  swift_release();
  sub_1003B42C8((uint64_t)v150);
}

void sub_100374080(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3)
{
  type metadata accessor for SPPairingSessionError(0);
  sub_10065435C(a3);
  sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  a1(v5, 1);
}

uint64_t sub_100374140@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for DispatchPredicate();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void **)(v3 + 144);
  void *v10 = v11;
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchPredicate.onQueue(_:), v7);
  id v12 = v11;
  LOBYTE(v11) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if ((v11 & 1) == 0)
  {
    __break(1u);
LABEL_61:
    swift_once();
    goto LABEL_15;
  }
  id v13 = [a1 ecid];
  if (v13)
  {
    uint64_t v14 = v13;
    uint64_t v15 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    id v18 = [a1 chipId];
    if (!v18)
    {
      static os_log_type_t.error.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      goto LABEL_24;
    }
    uint64_t v19 = v18;
    uint64_t v20 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    id v23 = [a1 serialNumber];
    if (v23)
    {
      uint64_t v24 = v23;
      uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      id v27 = [a1 systemVersion];
      if (v27)
      {
        uint64_t v28 = v27;
        id v93 = (id)v15;
        unint64_t v29 = v17;
        uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v31 = v30;

        id v32 = [a1 confirmSignature];
        if (!v32)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          static os_log_type_t.error.getter();
          if (qword_1016372A8 != -1) {
            swift_once();
          }
          os_log(_:dso:log:_:_:)();
          sub_10001CFB8(v20, v22);
          uint64_t v46 = (uint64_t)v93;
          unint64_t v47 = v29;
          goto LABEL_25;
        }
        uint64_t v33 = v32;
        uint64_t v88 = v31;
        uint64_t v89 = v26;
        uint64_t v90 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v35 = v34;

        if (*(unsigned char *)(a2 + 65) == 1)
        {
          unint64_t v84 = v22;
          unint64_t v17 = v29;
          if (qword_101636A90 != -1) {
            swift_once();
          }
          unint64_t v82 = v35;
          uint64_t v83 = v20;
          uint64_t v36 = type metadata accessor for Logger();
          sub_100010324(v36, (uint64_t)qword_10170DDC8);
          unint64_t v37 = Logger.logObject.getter();
          os_log_type_t v38 = static os_log_type_t.default.getter();
          BOOL v39 = os_log_type_enabled(v37, v38);
          uint64_t v40 = (uint64_t)v93;
          if (v39)
          {
            id v41 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)id v41 = 0;
            _os_log_impl((void *)&_mh_execute_header, v37, v38, "AlphaWasp: bypassing missing server seed and BAA certs if needed", v41, 2u);
            swift_slowDealloc();
          }

          id v42 = [a1 serverSeed];
          if (v42)
          {
            uint64_t v43 = v42;
            uint64_t v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v86 = v45;
            uint64_t v87 = v44;
          }
          else
          {
            unint64_t v86 = 0xC000000000000000;
            uint64_t v87 = 0;
          }
          sub_10000588C(&qword_101657710);
          uint64_t v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = xmmword_101347BA0;
          uint64_t v55 = *(void *)(a2 + 32);
          unint64_t v56 = *(void *)(a2 + 40);
          if (v56 >> 60 == 15) {
            uint64_t v57 = 0;
          }
          else {
            uint64_t v57 = *(void *)(a2 + 32);
          }
          if (v56 >> 60 == 15) {
            unint64_t v58 = 0xC000000000000000;
          }
          else {
            unint64_t v58 = *(void *)(a2 + 40);
          }
          *(void *)(v54 + 32) = v57;
          *(void *)(v54 + 40) = v58;
          uint64_t v59 = *(void *)(a2 + 48);
          unint64_t v60 = *(void *)(a2 + 56);
          if (v60 >> 60 == 15) {
            uint64_t v61 = 0;
          }
          else {
            uint64_t v61 = *(void *)(a2 + 48);
          }
          if (v60 >> 60 == 15) {
            unint64_t v62 = 0xC000000000000000;
          }
          else {
            unint64_t v62 = *(void *)(a2 + 56);
          }
          *(void *)(v54 + 48) = v61;
          *(void *)(v54 + 56) = v62;
          sub_100037A38(v55, v56);
          uint64_t v63 = v59;
          unint64_t v64 = v60;
          goto LABEL_50;
        }
        id v49 = [a1 serverSeed];
        unint64_t v17 = v29;
        if (v49)
        {
          unint64_t v50 = v49;
          uint64_t v51 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v86 = v52;
          uint64_t v87 = v51;

          unint64_t v53 = *(void *)(a2 + 40);
          uint64_t v40 = (uint64_t)v93;
          if (v53 >> 60 == 15)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            static os_log_type_t.error.getter();
            if (qword_1016372A8 != -1) {
              swift_once();
            }
            os_log(_:dso:log:_:_:)();
            sub_10001CFB8(v90, v35);
            sub_10001CFB8(v20, v22);
            sub_10001CFB8(v40, v17);
          }
          else
          {
            uint64_t v73 = *(void *)(a2 + 32);
            unint64_t v74 = *(void *)(a2 + 56);
            if (v74 >> 60 != 15)
            {
              unint64_t v82 = v35;
              uint64_t v83 = v20;
              unint64_t v84 = v22;
              uint64_t v77 = *(void *)(a2 + 48);
              uint64_t v78 = v73;
              unint64_t v79 = v53;
              unint64_t v80 = v74;
              sub_10000588C(&qword_101657710);
              uint64_t v54 = swift_allocObject();
              *(_OWORD *)(v54 + 16) = xmmword_101347BA0;
              *(void *)(v54 + 32) = v78;
              *(void *)(v54 + 40) = v79;
              *(void *)(v54 + 48) = v77;
              *(void *)(v54 + 56) = v80;
              sub_100037A38(v78, v79);
              uint64_t v63 = v77;
              unint64_t v64 = v80;
LABEL_50:
              sub_100037A38(v63, v64);
              id v93 = [a1 productId];
              id v85 = [a1 vendorId];
              id v65 = [a1 nonce];
              uint64_t v66 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v68 = v67;

              id v69 = [a1 keyGenerationStatus];
              uint64_t v70 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v72 = v71;

              v94[0] = v40;
              v94[1] = v17;
              v94[2] = v83;
              v94[3] = v84;
              v94[4] = v92;
              v94[5] = v89;
              v94[6] = v93;
              v94[7] = v85;
              v94[8] = v91;
              v94[9] = v88;
              v94[10] = v90;
              v94[11] = v82;
              v94[12] = v66;
              v94[13] = v68;
              v94[14] = v87;
              v94[15] = v86;
              v94[16] = v70;
              v94[17] = v72;
              v94[18] = v54;
              SharingCircleWildAdvertisementKey.init(key:)(v94);
              goto LABEL_27;
            }
            uint64_t v75 = *(void *)(a2 + 32);
            unint64_t v76 = v53;
            sub_1000361E0(v73, v53);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            static os_log_type_t.error.getter();
            if (qword_1016372A8 != -1) {
              swift_once();
            }
            os_log(_:dso:log:_:_:)();
            sub_10001CFB8(v90, v35);
            sub_10001CFB8(v20, v22);
            sub_10001CFB8(v40, v17);
            sub_100037A24(v75, v76);
          }
          unint64_t v47 = v86;
          uint64_t v46 = v87;
          goto LABEL_25;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static os_log_type_t.error.getter();
        uint64_t v15 = (uint64_t)v93;
        if (qword_1016372A8 != -1) {
          swift_once();
        }
        os_log(_:dso:log:_:_:)();
        sub_10001CFB8(v90, v35);
        goto LABEL_23;
      }
      swift_bridgeObjectRelease();
      static os_log_type_t.error.getter();
      if (qword_1016372A8 == -1)
      {
LABEL_22:
        os_log(_:dso:log:_:_:)();
LABEL_23:
        sub_10001CFB8(v20, v22);
LABEL_24:
        uint64_t v46 = v15;
        unint64_t v47 = v17;
LABEL_25:
        sub_10001CFB8(v46, v47);
        goto LABEL_26;
      }
    }
    else
    {
      static os_log_type_t.error.getter();
      if (qword_1016372A8 == -1) {
        goto LABEL_22;
      }
    }
    swift_once();
    goto LABEL_22;
  }
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    goto LABEL_61;
  }
LABEL_15:
  os_log(_:dso:log:_:_:)();
LABEL_26:
  sub_1003B5030((uint64_t)v94);
LABEL_27:
  sub_10001D608((uint64_t)v94, (uint64_t)v95, &qword_101642898);
  return sub_10001D608((uint64_t)v95, a3, &qword_101642898);
}

uint64_t sub_100374AEC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_100374B0C, a1, 0);
}

uint64_t sub_100374B0C()
{
  sub_10119863C();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100374B6C(uint64_t a1, uint64_t a2, long long *a3, void *a4, long long *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v63 = a8;
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v68 = a4;
  id v65 = a3;
  long long v10 = a5[7];
  long long v88 = a5[6];
  long long v89 = v10;
  long long v90 = a5[8];
  uint64_t v91 = *((void *)a5 + 18);
  long long v11 = a5[3];
  long long v84 = a5[2];
  long long v85 = v11;
  long long v12 = a5[5];
  long long v86 = a5[4];
  long long v87 = v12;
  long long v13 = a5[1];
  long long v82 = *a5;
  long long v83 = v13;
  uint64_t v61 = type metadata accessor for PairingConfig();
  __chkstk_darwin(v61);
  unint64_t v62 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v15 - 8);
  unint64_t v17 = (_OWORD *)((char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v64 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v21 = *(void *)(a2 + 280);
  sub_100A9FE20(v65, v68, v17);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10001DAB4((uint64_t)v17, &qword_10163B9F0);
    type metadata accessor for SPPairingSessionError(0);
    v81[0] = 6;
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    unint64_t v22 = v70;
    long long v77 = v88;
    long long v78 = v89;
    long long v79 = v90;
    uint64_t v80 = v91;
    long long v73 = v84;
    long long v74 = v85;
    long long v75 = v86;
    long long v76 = v87;
    long long v71 = v82;
    long long v72 = v83;
    SharingCircleWildAdvertisementKey.init(key:)(&v71);
    sub_10001D608((uint64_t)&v71, (uint64_t)v81, &qword_101642898);
    sub_101001C7C(v22, 1, (uint64_t)v81, v66, v67);
  }
  else
  {
    id v65 = (long long *)a2;
    uint64_t v23 = v64;
    sub_1003B6008((uint64_t)v17, v64, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v24 = dispatch_group_create();
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 0;
    dispatch_group_enter(v24);
    static os_signpost_type_t.begin.getter();
    os_signpost(_:dso:log:name:signpostID:)();
    swift_retain();
    uint64_t v26 = v24;
    swift_retain();
    sub_1001D5D50(v23, v21, a1, v26, v25, v63);
    OS_dispatch_group.wait()();
    swift_beginAccess();
    if (*(unsigned char *)(v25 + 16) == 1)
    {
      uint64_t v60 = v25;
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      dispatch_group_t v58 = dispatch_group_create();
      dispatch_group_enter(v58);
      uint64_t v27 = swift_allocObject();
      type metadata accessor for SPPairingSessionError(0);
      *(void *)&long long v71 = 1;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      *(void *)(v27 + 16) = v81[0];
      uint64_t v57 = v27 + 16;
      *(unsigned char *)(v27 + 24) = 1;
      uint64_t v28 = v68;
      id v29 = [v68 name];
      uint64_t v59 = v26;
      if (v29)
      {
        uint64_t v30 = v29;
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v55 = v32;
        uint64_t v56 = v31;
      }
      else
      {
        unint64_t v55 = 0xE000000000000000;
        uint64_t v56 = 0;
      }
      uint64_t v34 = v61;
      id v35 = [v28 roleId:v55, v56];
      id v36 = [v28 roleEmoji];
      if (v36)
      {
        unint64_t v37 = v36;
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        uint64_t v40 = 0;
      }
      id v41 = (uint64_t *)v62;
      id v42 = &v62[*(int *)(v34 + 28)];
      uint64_t v43 = type metadata accessor for AccessoryProductInfo();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
      unint64_t v44 = v55;
      *id v41 = v56;
      v41[1] = v44;
      v41[2] = (uint64_t)v35;
      void v41[3] = v38;
      v41[4] = v40;
      uint64_t v45 = swift_allocObject();
      swift_weakInit();
      uint64_t v46 = (void *)swift_allocObject();
      dispatch_group_t v47 = v58;
      v46[2] = v58;
      v46[3] = a1;
      v46[4] = v27;
      void v46[5] = v45;
      uint64_t v48 = v68;
      uint64_t v49 = v63;
      v46[6] = v68;
      v46[7] = v49;
      swift_retain();
      unint64_t v50 = v47;
      swift_retain();
      swift_retain();
      id v51 = v48;
      uint64_t v52 = v64;
      sub_100AA0654(v64, v41, (uint64_t)sub_1003B455C, (uint64_t)v46);
      swift_release();
      swift_release();
      OS_dispatch_group.wait()();
      swift_beginAccess();
      unint64_t v53 = *(void **)(v27 + 16);
      LODWORD(v45) = *(unsigned __int8 *)(v27 + 24);
      long long v77 = v88;
      long long v78 = v89;
      long long v79 = v90;
      uint64_t v80 = v91;
      long long v73 = v84;
      long long v74 = v85;
      long long v75 = v86;
      long long v76 = v87;
      long long v71 = v82;
      long long v72 = v83;
      SharingCircleWildAdvertisementKey.init(key:)(&v71);
      sub_10001D608((uint64_t)&v71, (uint64_t)v81, &qword_101642898);
      id v54 = v53;
      sub_101001C7C(v53, v45, (uint64_t)v81, v66, v67);

      sub_1003B61EC((uint64_t)v41, (uint64_t (*)(void))type metadata accessor for PairingConfig);
      sub_1003B61EC(v52, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_release();
    }
    else
    {
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      type metadata accessor for SPPairingSessionError(0);
      v81[0] = 19;
      sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
      sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
      _BridgedStoredNSError.init(_:userInfo:)();
      uint64_t v33 = v69;
      long long v77 = v88;
      long long v78 = v89;
      long long v79 = v90;
      uint64_t v80 = v91;
      long long v73 = v84;
      long long v74 = v85;
      long long v75 = v86;
      long long v76 = v87;
      long long v71 = v82;
      long long v72 = v83;
      SharingCircleWildAdvertisementKey.init(key:)(&v71);
      sub_10001D608((uint64_t)&v71, (uint64_t)v81, &qword_101642898);
      sub_101001C7C(v33, 1, (uint64_t)v81, v66, v67);

      sub_1003B61EC(v23, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    swift_release();
  }
}

void sub_100375460(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4)
{
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_signpost(_:dso:log:name:signpostID:)();
  swift_beginAccess();
  *(unsigned char *)(a4 + 16) = a1 == 0;
  dispatch_group_leave(a3);
}

void sub_100375540(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  id v91 = a7;
  uint64_t v95 = a3;
  uint64_t v89 = type metadata accessor for BeaconEstimatedLocation();
  uint64_t v86 = *(void *)(v89 - 8);
  uint64_t v10 = __chkstk_darwin(v89);
  uint64_t v87 = v11;
  uint64_t v88 = (uint64_t)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v13 = (_OWORD *)((char *)&v84 - v12);
  uint64_t v90 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v92 = *(void *)(v90 - 8);
  uint64_t v14 = __chkstk_darwin(v90);
  *(void *)&long long v98 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = v15;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v84 - v16;
  uint64_t v18 = sub_10000588C((uint64_t *)&unk_101656900);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v96 = a5 + 16;
  uint64_t v97 = a5;
  static os_signpost_type_t.end.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  uint64_t v94 = a4;
  os_signpost(_:dso:log:name:signpostID:)();
  sub_10001D074(a1, (uint64_t)v20, (uint64_t *)&unk_101656900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = *v20;
    static os_log_type_t.error.getter();
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v22 = swift_allocObject();
    long long v98 = xmmword_101342130;
    *(_OWORD *)(v22 + 16) = xmmword_101342130;
    uint64_t v100 = v21;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v23 = String.init<A>(describing:)();
    uint64_t v25 = v24;
    *(void *)(v22 + 56) = &type metadata for String;
    *(void *)(v22 + 64) = sub_10000B4CC();
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v25;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_10000588C(&qword_101642890);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v98;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v27;
    *(void *)(inited + 48) = 0xD000000000000032;
    *(void *)(inited + 56) = 0x80000001013F9EF0;
    unint64_t v28 = sub_10092D8F8(inited);
    type metadata accessor for SPPairingSessionError(0);
    uint64_t v100 = 11;
    sub_10065435C(v28);
    swift_bridgeObjectRelease();
    sub_100394110(&qword_101638770, type metadata accessor for SPPairingSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    swift_errorRelease();
    uint64_t v29 = v99;
    swift_beginAccess();
    uint64_t v30 = v97;
    uint64_t v31 = *(void **)(v97 + 16);
    *(void *)(v97 + 16) = v29;
    *(unsigned char *)(v30 + 24) = 1;

    unint64_t v32 = v95;
LABEL_24:
    dispatch_group_leave(v32);
    return;
  }
  sub_1003B6008((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  static os_log_type_t.default.getter();
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_101342130;
  sub_1003B6E14((uint64_t)v17, v98, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v34 = v90;
  uint64_t v35 = String.init<A>(describing:)();
  uint64_t v37 = v36;
  *(void *)(v33 + 56) = &type metadata for String;
  *(void *)(v33 + 64) = sub_10000B4CC();
  *(void *)(v33 + 32) = v35;
  *(void *)(v33 + 40) = v37;
  uint64_t v38 = (uint64_t)v17;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    swift_release();
    sub_100A632C8((uint64_t)v17);
    swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v40 = v94;
  if (!Strong)
  {
LABEL_10:
    swift_beginAccess();
    uint64_t v42 = swift_weakLoadStrong();
    if (v42)
    {
      uint64_t v43 = *(char **)(v42 + 280);
      swift_retain_n();
      swift_release();
      id v44 = sub_100398B08(v38, v43);
      long long v85 = v43;
      swift_release();
      type metadata accessor for Transaction();
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v40;
      *(void *)(v45 + 24) = v44;
      swift_retain();
      id v46 = v44;
      static Transaction.asyncTask(name:block:)();

      uint64_t v40 = v94;
      swift_release();
    }
    else
    {
      long long v85 = 0;
    }
    uint64_t v47 = v38 + *(int *)(v34 + 20);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v49 = v91;
    [v91 updateBeaconId:isa];

    unint64_t v50 = (id *)(*(void *)(v40 + OBJC_IVAR____TtC12searchpartyd22ItemPairingCoordinator_locationMonitor)
               + OBJC_IVAR____TtC12searchpartyd22CurrentLocationMonitor_currentLocation);
    swift_beginAccess();
    if (*v50)
    {
      id v51 = *v50;
      [v49 updatePairingLocation:v51];
      uint64_t v52 = (int *)v89;
      UUID.init()();
      unint64_t v53 = (char *)v13 + v52[6];
      uint64_t v54 = type metadata accessor for UUID();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16))(v53, v47, v54);
      [v51 coordinate];
      uint64_t v56 = v55;
      [v51 coordinate];
      uint64_t v58 = v57;
      [v51 horizontalAccuracy];
      uint64_t v60 = v59;
      id v61 = [v51 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v62 = (char *)v13 + v52[12];
      uint64_t v63 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
      *long long v13 = xmmword_101348180;
      *(void *)((char *)v13 + v52[7]) = v56;
      *(void *)((char *)v13 + v52[8]) = v58;
      *(void *)((char *)v13 + v52[9]) = v60;
      *((unsigned char *)v13 + v52[11]) = 1;
      *(void *)((char *)v13 + v52[13]) = 0;
      swift_beginAccess();
      uint64_t v64 = swift_weakLoadStrong();
      if (v64)
      {
        uint64_t v94 = *(void *)(v64 + 280);
        swift_retain();
        swift_release();
        uint64_t v65 = v38;
        uint64_t v66 = v88;
        sub_1003B6E14((uint64_t)v13, v88, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        uint64_t v67 = v98;
        sub_1003B6E14(v65, v98, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        unint64_t v68 = (*(unsigned __int8 *)(v86 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
        unint64_t v69 = (v87 + *(unsigned __int8 *)(v92 + 80) + v68) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
        uint64_t v70 = swift_allocObject();
        uint64_t v71 = v70 + v68;
        id v49 = v91;
        uint64_t v72 = v66;
        uint64_t v38 = v65;
        sub_1003B6008(v72, v71, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
        sub_1003B6008(v67, v70 + v69, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        sub_100AB6E00((uint64_t)v13, (uint64_t)sub_1003B4F58, v70);
        swift_release();
        swift_release();
      }

      sub_1003B61EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for BeaconEstimatedLocation);
    }
    swift_beginAccess();
    uint64_t v73 = v97;
    long long v74 = *(void **)(v97 + 16);
    *(void *)(v97 + 16) = v49;
    *(unsigned char *)(v73 + 24) = 0;

    swift_beginAccess();
    uint64_t v75 = swift_weakLoadStrong();
    if (v75)
    {
      uint64_t v76 = *(void *)(v75 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_firmwareUpdateService);
      id v77 = v49;
      swift_retain();
      swift_release();
    }
    else
    {
      id v78 = v49;
      uint64_t v76 = 0;
    }
    unint64_t v32 = v95;
    swift_beginAccess();
    uint64_t v79 = swift_weakLoadStrong();
    if (v79)
    {
      uint64_t v80 = *(void *)(v79 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_firmwareUpdateScheduler);
      swift_retain();
      swift_release();
    }
    else
    {
      uint64_t v80 = 0;
    }
    type metadata accessor for Transaction();
    uint64_t v81 = v98;
    sub_1003B6E14(v38, v98, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    unint64_t v82 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    uint64_t v83 = swift_allocObject();
    *(void *)(v83 + 16) = v76;
    *(void *)(v83 + 24) = v80;
    sub_1003B6008(v81, v83 + v82, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_retain();
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    sub_1003B61EC(v38, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    goto LABEL_24;
  }
  uint64_t v41 = *(void *)(Strong + 40);
  swift_retain();
  swift_release();
  if (v41)
  {
    sub_1004E59EC((uint64_t)v17);
    swift_release();
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t sub_1003760F4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100376114, 0, 0);
}

uint64_t sub_100376114()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC12searchpartyd22ItemPairingCoordinator_pairingAnalytics);
  *(void *)(v0 + 32) = v1;
  return _swift_task_switch(sub_100376144, v1, 0);
}

uint64_t sub_100376144()
{
  uint64_t v2 = (void *)v0[3];
  uint64_t v1 = v0[4];
  type metadata accessor for Transaction();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  id v4 = v2;
  static Transaction.asyncTask(name:block:)();
  swift_release();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100376214(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_1016428D8);
  __chkstk_darwin(v2);
  id v4 = (void *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a1, (uint64_t)v4, &qword_1016428D8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = *v4;
    static os_log_type_t.error.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_101347500;
    type metadata accessor for BeaconEstimatedLocation();
    type metadata accessor for Date();
    sub_100394110((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v9 = v8;
    *(void *)(v6 + 56) = &type metadata for String;
    unint64_t v10 = sub_10000B4CC();
    *(void *)(v6 + 64) = v10;
    *(void *)(v6 + 32) = v7;
    *(void *)(v6 + 40) = v9;
    type metadata accessor for OwnedBeaconRecord();
    type metadata accessor for UUID();
    sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v6 + 96) = &type metadata for String;
    *(void *)(v6 + 104) = v10;
    *(void *)(v6 + 72) = v11;
    *(void *)(v6 + 80) = v12;
    v23[1] = v5;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v13 = String.init<A>(describing:)();
    *(void *)(v6 + 136) = &type metadata for String;
    *(void *)(v6 + 144) = v10;
    *(void *)(v6 + 112) = v13;
    *(void *)(v6 + 120) = v14;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_101347BA0;
    type metadata accessor for BeaconEstimatedLocation();
    type metadata accessor for Date();
    sub_100394110((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v19 = v18;
    *(void *)(v16 + 56) = &type metadata for String;
    unint64_t v20 = sub_10000B4CC();
    *(void *)(v16 + 64) = v20;
    *(void *)(v16 + 32) = v17;
    *(void *)(v16 + 40) = v19;
    type metadata accessor for OwnedBeaconRecord();
    type metadata accessor for UUID();
    sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v16 + 96) = &type metadata for String;
    *(void *)(v16 + 104) = v20;
    *(void *)(v16 + 72) = v21;
    *(void *)(v16 + 80) = v22;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return sub_10001DAB4((uint64_t)v4, &qword_1016428D8);
  }
}

uint64_t sub_100376620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_1003766E4, 0, 0);
}

uint64_t sub_1003766E4()
{
  if (v0[2] && v0[3])
  {
    swift_retain();
    swift_retain();
    static os_log_type_t.default.getter();
    if (qword_1016372F8 != -1) {
      swift_once();
    }
    uint64_t v2 = v0[6];
    uint64_t v1 = v0[7];
    uint64_t v3 = v0[4];
    uint64_t v4 = v0[5];
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_101342130;
    uint64_t v6 = v3 + *(int *)(type metadata accessor for OwnedBeaconRecord() + 20);
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v9 = v8;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_10000B4CC();
    *(void *)(v5 + 32) = v7;
    *(void *)(v5 + 40) = v9;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v6, v4);
    uint64_t v10 = v0[2];
    return _swift_task_switch(sub_1003768B8, v10, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1003768B8()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  sub_1001CDDEC(v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10037694C, 0, 0);
}

uint64_t sub_10037694C()
{
  sub_1001AF0BC();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003769C4()
{
  static os_log_type_t.default.getter();
  if (qword_101637250 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v1 = *(NSObject **)(v0 + 72);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_1003B40AC;
  *(void *)(v2 + 24) = v0;
  v5[4] = sub_100132424;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1000A70B0;
  v5[3] = &unk_1015BC998;
  uint64_t v3 = _Block_copy(v5);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v1, v3);
  _Block_release(v3);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v1) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100376B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v38 = a3;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 80);
  if (v17)
  {
    swift_retain();
    static os_log_type_t.default.getter();
    if (qword_101637250 != -1) {
      swift_once();
    }
    uint64_t result = os_log(_:dso:log:_:_:)();
  }
  else
  {
    uint64_t v29 = v14;
    uint64_t v30 = v13;
    uint64_t v31 = v11;
    uint64_t v32 = v9;
    uint64_t v33 = v7;
    uint64_t v34 = v8;
    uint64_t v28 = v5;
    uint64_t v35 = v3;
    sub_10000588C(&qword_1016429D8);
    swift_allocObject();
    uint64_t v17 = Future.init()();
    static os_log_type_t.default.getter();
    if (qword_101637250 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    uint64_t v19 = v30;
    *(void *)(v30 + 80) = v17;
    swift_retain();
    swift_release();
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v20 = v29;
    (*(void (**)(char *, void, uint64_t))(v29 + 104))(v16, enum case for DispatchQoS.QoSClass.default(_:), v12);
    uint64_t v21 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v12);
    uint64_t v22 = (void *)swift_allocObject();
    uint64_t v22[2] = v19;
    v22[3] = v17;
    v22[4] = v36;
    aBlock[4] = sub_1003B6440;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1004B5480;
    void aBlock[3] = &unk_1015BD320;
    uint64_t v23 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = v31;
    static DispatchQoS.unspecified.getter();
    void aBlock[7] = _swiftEmptyArrayStorage;
    sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    uint64_t v25 = v33;
    uint64_t v26 = v28;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v25, v26);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v34);
    uint64_t result = swift_release();
  }
  uint64_t *v38 = v17;
  return result;
}

uint64_t sub_100377080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a1 + 280);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100B3BB80(v6, a1, a2, a3);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100377100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1003AB42C(a2, a3, a4);
}

uint64_t sub_100377110()
{
  uint64_t v0 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003769C4();
  uint64_t v3 = type metadata accessor for OwnedBeaconRecord();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  Future.finish(result:)();
  return sub_10001DAB4((uint64_t)v2, &qword_10163B9F0);
}

uint64_t sub_1003771E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101656900);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchQoS.QoSClass.default(_:), v13);
  uint64_t v17 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_10001D074(v27, (uint64_t)v12, (uint64_t *)&unk_101656900);
  unint64_t v18 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v19 = (v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  sub_10001D608((uint64_t)v12, v21 + v18, (uint64_t *)&unk_101656900);
  uint64_t v22 = v29;
  *(void *)(v21 + v19) = v28;
  *(void *)(v21 + v20) = v22;
  *(void *)(v21 + ((v20 + 15) & 0xFFFFFFFFFFFFFFF8)) = v30;
  aBlock[4] = sub_1003B68F8;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BD3E8;
  uint64_t v23 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v24 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v33);
  return swift_release();
}

uint64_t sub_100377674(uint64_t a1, uint64_t a2)
{
  v19[0] = a2;
  uint64_t v3 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_101656900);
  __chkstk_darwin(v10);
  uint64_t v12 = (void *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a1, (uint64_t)v12, (uint64_t *)&unk_101656900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = *v12;
    static os_log_type_t.error.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_101342130;
    v19[1] = v13;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v15 = String.init<A>(describing:)();
    uint64_t v17 = v16;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_10000B4CC();
    *(void *)(v14 + 32) = v15;
    *(void *)(v14 + 40) = v17;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    sub_1003769C4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    Future.finish(result:)();
    swift_errorRelease();
    return sub_10001DAB4((uint64_t)v5, &qword_10163B9F0);
  }
  else
  {
    sub_1003B6008((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    static os_log_type_t.default.getter();
    if (qword_1016372A8 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_1003B6E14((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
    Future.finish(result:)();
    sub_10001DAB4((uint64_t)v5, &qword_10163B9F0);
    sub_100A632C8((uint64_t)v9);
    return sub_1003B61EC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }
}

uint64_t sub_100377A38()
{
  uint64_t v1 = v0;
  uint64_t v63 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v60 = *(void *)(v63 - 8);
  uint64_t v2 = *(void *)(v60 + 64);
  uint64_t v3 = __chkstk_darwin(v63);
  uint64_t v4 = (char *)&v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v52 - v6;
  __chkstk_darwin(v5);
  uint64_t v56 = (uint64_t)&v52 - v8;
  uint64_t v61 = type metadata accessor for StableIdentifier();
  uint64_t v9 = __chkstk_darwin(v61);
  uint64_t v59 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (uint64_t *)((char *)&v52 - v11);
  uint64_t v12 = type metadata accessor for SystemInfo.DeviceLockState();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v52 - v17;
  static SystemInfo.lockState.getter();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for SystemInfo.DeviceLockState.beforeFirstUnlock(_:), v12);
  sub_100394110((unint64_t *)&qword_1016429C8, (void (*)(uint64_t))&type metadata accessor for SystemInfo.DeviceLockState);
  char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v20 = *(void (**)(char *, uint64_t))(v13 + 8);
  v20(v16, v12);
  v20(v18, v12);
  if (v19)
  {
    static os_log_type_t.default.getter();
    if (qword_101637260 == -1) {
      return os_log(_:dso:log:_:_:)();
    }
    goto LABEL_24;
  }
  id v21 = (id)MobileGestalt_get_current_device();
  if (v21)
  {
    uint64_t v22 = v21;
    id v23 = (id)MobileGestalt_copy_uniqueDeviceID_obj();

    uint64_t v24 = v1;
    uint64_t v25 = v56;
    if (v23)
    {
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
    uint64_t v29 = (uint64_t)v55;
    uint64_t v30 = HIBYTE(v28) & 0xF;
    if ((v28 & 0x2000000000000000) == 0) {
      uint64_t v30 = v26 & 0xFFFFFFFFFFFFLL;
    }
    if (!v30)
    {
      swift_bridgeObjectRelease();
      static os_log_type_t.error.getter();
      if (qword_101637260 == -1) {
        return os_log(_:dso:log:_:_:)();
      }
LABEL_24:
      swift_once();
      return os_log(_:dso:log:_:_:)();
    }
    *uint64_t v55 = v26;
    *(void *)(v29 + 8) = v28;
    swift_storeEnumTagMultiPayload();
    uint64_t v32 = sub_100ACF5FC();
    __chkstk_darwin(v32);
    *(&v52 - 2) = v29;
    uint64_t v64 = (void *)sub_1000A42E4((uint64_t (*)(char *))sub_1003B69A0, &v52 - 4, v33);
    swift_bridgeObjectRetain();
    sub_10038E300(&v64, sub_100394214);
    swift_bridgeObjectRelease();
    uint64_t v34 = v64;
    uint64_t v35 = v34[2];
    if (v35)
    {
      uint64_t v36 = *(unsigned __int8 *)(v60 + 80);
      uint64_t v58 = (v36 + 32) & ~v36;
      uint64_t v37 = sub_1003B6E14((uint64_t)v34 + v58, v25, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      if (v35 == 1)
      {
        swift_release();
        sub_1003B61EC(v25, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      else
      {
        __chkstk_darwin(v37);
        *(&v52 - 2) = v25;
        uint64_t v39 = sub_1000A42E4((uint64_t (*)(char *))sub_1003B69F0, &v52 - 4, (uint64_t)v34);
        LODWORD(v57) = static os_log_type_t.error.getter();
        if (qword_101637260 != -1) {
          swift_once();
        }
        uint64_t v54 = sub_10000588C((uint64_t *)&unk_10163AD00);
        uint64_t v40 = swift_allocObject();
        long long v62 = xmmword_101342130;
        *(_OWORD *)(v40 + 16) = xmmword_101342130;
        sub_1003B6E14(v29, v59, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
        uint64_t v41 = String.init<A>(describing:)();
        uint64_t v43 = v42;
        *(void *)(v40 + 56) = &type metadata for String;
        unint64_t v53 = sub_10000B4CC();
        *(void *)(v40 + 64) = v53;
        *(void *)(v40 + 32) = v41;
        *(void *)(v40 + 40) = v43;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        uint64_t v44 = *(void *)(v39 + 16);
        if (v44)
        {
          uint64_t v52 = v39;
          uint64_t v45 = v39 + v58;
          uint64_t v46 = *(void *)(v60 + 72);
          uint64_t v60 = v24;
          uint64_t v61 = v46;
          uint64_t v59 = (v36 + 16) & ~v36;
          uint64_t v58 = v59 + v2;
          uint64_t v57 = v36 | 7;
          unint64_t v47 = v53;
          do
          {
            sub_1003B6E14(v45, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            static os_log_type_t.default.getter();
            uint64_t v48 = swift_allocObject();
            *(_OWORD *)(v48 + 16) = v62;
            sub_1003B6E14((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            uint64_t v49 = String.init<A>(describing:)();
            *(void *)(v48 + 56) = &type metadata for String;
            *(void *)(v48 + 64) = v47;
            *(void *)(v48 + 32) = v49;
            *(void *)(v48 + 40) = v50;
            os_log(_:dso:log:_:_:)();
            swift_bridgeObjectRelease();
            sub_1003B6E14((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            id v51 = (void (*)(uint64_t))swift_allocObject();
            sub_1003B6008((uint64_t)v4, (uint64_t)v51 + v59, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            sub_100378528((uint64_t)v7, 1, (void (*)(uint64_t))sub_1003B6DA4, v51);
            swift_release();
            sub_1003B61EC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            v45 += v61;
            --v44;
          }
          while (v44);
        }
        swift_bridgeObjectRelease();
        sub_1003B61EC(v56, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v29 = (uint64_t)v55;
      }
    }
    else
    {
      swift_release();
    }
    return sub_1003B61EC(v29, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
  }
  else
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t sub_100378290(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OwnedBeaconRecord();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_101637260 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_101347BA0;
    sub_1003B6E14(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v8 = String.init<A>(describing:)();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v11 = sub_10000B4CC();
    *(void *)(v7 + 64) = v11;
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    swift_getErrorValue();
    uint64_t v12 = Error.localizedDescription.getter();
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v11;
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    return swift_errorRelease();
  }
  else
  {
    static os_log_type_t.default.getter();
    if (qword_101637260 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_101342130;
    sub_1003B6E14(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v16 = String.init<A>(describing:)();
    uint64_t v18 = v17;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_10000B4CC();
    *(void *)(v15 + 32) = v16;
    *(void *)(v15 + 40) = v18;
    os_log(_:dso:log:_:_:)();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100378528(uint64_t a1, int a2, void (*a3)(uint64_t), void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v96 = a4;
  id v91 = a3;
  int v88 = a2;
  uint64_t v7 = type metadata accessor for SystemInfo.DeviceLockState();
  uint64_t v86 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  long long v85 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v84 = (char *)&v72 - v10;
  uint64_t v11 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v89 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v94 = v17;
  uint64_t v95 = (uint64_t)&v72 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v72 - v18;
  uint64_t v20 = type metadata accessor for ShareRecord();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20 - 8);
  id v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = *(void *)(v5 + OBJC_IVAR____TtC12searchpartyd20BeaconManagerService_localPairingMonitor);
  uint64_t v24 = *(void *)(v5 + 280);
  uint64_t v75 = v11;
  uint64_t v25 = *(int *)(v11 + 20);
  uint64_t v87 = v24;
  uint64_t v92 = (uint64_t (*)())(a1 + v25);
  uint64_t v26 = sub_100B6DD88();
  uint64_t v27 = v26[2];
  if (v27)
  {
    *(void *)&long long v90 = v12;
    uint64_t v28 = (uint64_t)v26 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v29 = *(void *)(v21 + 72);
    while (1)
    {
      uint64_t result = sub_1003B6E14(v28, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ShareRecord);
      if (!*(void *)(v5 + 40)) {
        break;
      }
      swift_retain();
      sub_1004E5D28((uint64_t)v23, (uint64_t)sub_10038ABAC, 0);
      swift_release();
      sub_1003B61EC((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ShareRecord);
      v28 += v29;
      if (!--v27)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v90;
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v83 = a1;
    sub_1003B6E14(a1, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_1003B6E14((uint64_t)v19, v95, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v31 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v32 = (v31 + 16) & ~v31;
    unint64_t v33 = (v94 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v82 = v31 | 7;
    uint64_t v35 = swift_allocObject();
    uint64_t v77 = v32;
    sub_1003B6008((uint64_t)v19, v35 + v32, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    unint64_t v78 = v33;
    uint64_t v36 = (void (**)(uint64_t))(v35 + v33);
    uint64_t v37 = v96;
    *uint64_t v36 = v91;
    v36[1] = v37;
    unint64_t v79 = v34;
    *(void *)(v35 + v34) = v93;
    uint64_t v76 = v35;
    *(void *)(v35 + ((v34 + 15) & 0xFFFFFFFFFFFFFFF8)) = v5;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    static os_log_type_t.default.getter();
    if (qword_101637260 != -1) {
      swift_once();
    }
    uint64_t v80 = ~v31;
    uint64_t v81 = v31;
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v38 = swift_allocObject();
    long long v90 = xmmword_101342130;
    *(_OWORD *)(v38 + 16) = xmmword_101342130;
    uint64_t v39 = type metadata accessor for UUID();
    uint64_t v74 = sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v42 = v41;
    *(void *)(v38 + 56) = &type metadata for String;
    unint64_t v73 = sub_10000B4CC();
    *(void *)(v38 + 64) = v73;
    *(void *)(v38 + 32) = v40;
    *(void *)(v38 + 40) = v42;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v43 = v84;
    static SystemInfo.lockState.getter();
    uint64_t v45 = v85;
    uint64_t v44 = v86;
    (*(void (**)(char *, void, uint64_t))(v86 + 104))(v85, enum case for SystemInfo.DeviceLockState.beforeFirstUnlock(_:), v7);
    sub_100394110((unint64_t *)&unk_101655610, (void (*)(uint64_t))&type metadata accessor for SystemInfo.DeviceLockState);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v47 = v97;
    uint64_t v46 = v98;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
    v48(v45, v7);
    v48(v43, v7);
    uint64_t v49 = v83;
    if (v46 == v47)
    {
      static os_log_type_t.default.getter();
      os_log(_:dso:log:_:_:)();
      sub_10009FD9C();
      uint64_t v50 = swift_allocError();
      unsigned char *v51 = 0;
      static os_log_type_t.default.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      uint64_t v52 = swift_allocObject();
      *(_OWORD *)(v52 + 16) = v90;
      uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v54 = v73;
      *(void *)(v52 + 56) = &type metadata for String;
      *(void *)(v52 + 64) = v54;
      *(void *)(v52 + 32) = v53;
      *(void *)(v52 + 40) = v55;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      v91(v50);
      swift_errorRelease();
    }
    uint64_t v56 = dispatch_group_create();
    dispatch_group_enter(v56);
    sub_10000588C(&qword_10163BC50);
    uint64_t v57 = *(void *)(v39 - 8);
    unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v90;
    (*(void (**)(unint64_t, uint64_t (*)(), uint64_t))(v57 + 16))(v59 + v58, v92, v39);
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = v56;
    uint64_t v61 = v56;
    uint64_t v62 = v87;
    sub_100A07010(v59, (uint64_t)sub_1003A951C, v60);
    swift_bridgeObjectRelease();
    swift_release();
    OS_dispatch_group.wait()();
    uint64_t v63 = v89;
    sub_1003B6E14(v49, v89, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    unint64_t v64 = v79;
    uint64_t v65 = swift_allocObject();
    uint64_t v92 = type metadata accessor for OwnedBeaconRecord;
    sub_1003B6008(v63, v65 + v77, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v66 = (uint64_t (**)(uint64_t))(v65 + v78);
    uint64_t v67 = (uint64_t (*)(uint64_t))v76;
    *uint64_t v66 = sub_1003A94E0;
    v66[1] = v67;
    unint64_t v68 = v65 + v64;
    *(void *)unint64_t v68 = v62;
    *(unsigned char *)(v68 + 8) = v88 & 1;
    *(unsigned char *)(v68 + 9) = 1;
    swift_retain();
    swift_retain();
    sub_10038F420(v49, (void (*)(void))sub_1003A952C, v65);
    swift_release();
    swift_release();

    sub_1003B61EC(v95, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_release();
    swift_release();
    swift_release();
    type metadata accessor for Transaction();
    uint64_t v69 = swift_allocObject();
    swift_weakInit();
    sub_1003B6E14(v49, v63, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v70 = (v81 + 24) & v80;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = v69;
    sub_1003B6008(v63, v71 + v70, (uint64_t (*)(void))v92);
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100378F70(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a1;
  uint64_t v53 = a2;
  uint64_t v59 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v55 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for DispatchQoS();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  unint64_t v54 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SystemInfo.DeviceLockState();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v49 - v13;
  uint64_t v15 = type metadata accessor for DispatchPredicate();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (uint64_t *)((char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v49 = v2;
  uint64_t v19 = *(void **)(v2 + 56);
  *uint64_t v18 = v19;
  (*(void (**)(void *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchPredicate.onQueue(_:), v15);
  id v20 = v19;
  LOBYTE(v19) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  static SystemInfo.lockState.getter();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v12, enum case for SystemInfo.DeviceLockState.beforeFirstUnlock(_:), v8);
  sub_100394110((unint64_t *)&qword_1016429C8, (void (*)(uint64_t))&type metadata accessor for SystemInfo.DeviceLockState);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v22(v14, v8);
  if (v21)
  {
    static os_log_type_t.error.getter();
    if (qword_101637260 == -1)
    {
LABEL_4:
      os_log(_:dso:log:_:_:)();
      sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
      uint64_t v24 = v50;
      uint64_t v23 = v51;
      (*(void (**)(char *, void, uint64_t))(v50 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v51);
      uint64_t v25 = (void *)static OS_dispatch_queue.global(qos:)();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v23);
      uint64_t v26 = swift_allocObject();
      uint64_t v27 = v53;
      *(void *)(v26 + 16) = v52;
      *(void *)(v26 + 24) = v27;
      uint64_t v65 = sub_1003B7AE4;
      uint64_t v66 = (void *)v26;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v62 = 1107296256;
      uint64_t v28 = &unk_1015BD280;
LABEL_10:
      uint64_t v63 = sub_1004B5480;
      unint64_t v64 = v28;
      uint64_t v44 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v45 = v54;
      static DispatchQoS.unspecified.getter();
      uint64_t v60 = _swiftEmptyArrayStorage;
      sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v46 = v55;
      uint64_t v47 = v59;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v44);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v46, v47);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v58);
      return swift_release();
    }
LABEL_13:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v29 = v49;
  sub_100AB24F0();
  QueueSynchronizer.conditionalSync<A>(_:)();
  swift_release();
  if (aBlock != 1)
  {
    static os_log_type_t.error.getter();
    if (qword_101637260 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v41 = v50;
    uint64_t v40 = v51;
    (*(void (**)(char *, void, uint64_t))(v50 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v51);
    uint64_t v25 = (void *)static OS_dispatch_queue.global(qos:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v40);
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v53;
    *(void *)(v42 + 16) = v52;
    *(void *)(v42 + 24) = v43;
    uint64_t v65 = sub_1003B6388;
    uint64_t v66 = (void *)v42;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v62 = 1107296256;
    uint64_t v28 = &unk_1015BD1E0;
    goto LABEL_10;
  }
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  uint64_t v31 = v50;
  uint64_t v30 = v51;
  (*(void (**)(char *, void, uint64_t))(v50 + 104))(v7, enum case for DispatchQoS.QoSClass.default(_:), v51);
  uint64_t v32 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v30);
  unint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v52;
  uint64_t v35 = v53;
  void v33[2] = v29;
  v33[3] = v34;
  v33[4] = v35;
  uint64_t v65 = sub_1003B6404;
  uint64_t v66 = v33;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v62 = 1107296256;
  uint64_t v63 = sub_1004B5480;
  unint64_t v64 = &unk_1015BD230;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  uint64_t v37 = v54;
  static DispatchQoS.unspecified.getter();
  uint64_t v60 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v38 = v55;
  uint64_t v39 = v59;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v36);

  (*(void (**)(char *, uint64_t))(v57 + 8))(v38, v39);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v58);
  return swift_release();
}

uint64_t sub_100379954(void (*a1)(char *))
{
  uint64_t v2 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OwnedBeaconRecord();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  a1(v4);
  return sub_10001DAB4((uint64_t)v4, &qword_10163B9F0);
}

uint64_t sub_100379A28(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v51 = a2;
  uint64_t v5 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v50 = (uint64_t)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10000588C(&qword_101638CF0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v49 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v48 = (char *)&v44 - v10;
  uint64_t v11 = sub_10000588C(&qword_1016429D0);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v20 = (char *)&v44 - v19;
  char v21 = sub_100ACF0EC();
  uint64_t v22 = v21[2];
  if (v22)
  {
    uint64_t v46 = v15;
    uint64_t v47 = a3;
    sub_1003B6E14((uint64_t)v21 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80)), (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    if (v22 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v14;
    }
    else
    {
      int v45 = static os_log_type_t.error.getter();
      uint64_t v23 = v14;
      if (qword_101637260 != -1) {
        swift_once();
      }
      uint64_t v44 = qword_10170EFB8;
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_101347BA0;
      sub_100F2BD18(v13);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v33 = v32;
      *(void *)(v30 + 56) = &type metadata for String;
      *(void *)(v30 + 64) = sub_10000B4CC();
      *(void *)(v30 + 32) = v31;
      *(void *)(v30 + 40) = v33;
      swift_bridgeObjectRelease();
      *(void *)(v30 + 96) = &type metadata for Int;
      *(void *)(v30 + 104) = &protocol witness table for Int;
      *(void *)(v30 + 72) = v22;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
    }
    static os_log_type_t.default.getter();
    if (qword_101637260 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_101342130;
    sub_1003B6E14((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v35 = String.init<A>(describing:)();
    uint64_t v37 = v36;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_10000B4CC();
    *(void *)(v34 + 32) = v35;
    *(void *)(v34 + 40) = v37;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v38 = &v20[*(int *)(v23 + 20)];
    uint64_t v39 = type metadata accessor for UUID();
    uint64_t v40 = *(void *)(v39 - 8);
    uint64_t v41 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v48, v38, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v41, 0, 1, v39);
    sub_1000A5940();
    uint64_t v42 = v49;
    sub_10001D074(v41, v49, &qword_101638CF0);
    sub_100F175B0(v42);
    swift_release();
    sub_10001DAB4(v41, &qword_101638CF0);
    uint64_t v43 = v50;
    sub_1003B6E14((uint64_t)v20, v50, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v23);
    v51(v43);
    sub_10001DAB4(v43, &qword_10163B9F0);
    return sub_1003B61EC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }
  else
  {
    uint64_t v24 = swift_bridgeObjectRelease();
    __chkstk_darwin(v24);
    *(&v44 - 2) = a1;
    *(&v44 - 1) = v25;
    sub_10000588C(&qword_1016429D8);
    OS_dispatch_queue.sync<A>(execute:)();
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v51;
    *(void *)(v26 + 16) = v51;
    *(void *)(v26 + 24) = a3;
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release();
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v27;
    *(void *)(v28 + 24) = a3;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10037A108(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  if (qword_101637260 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_101342130;
  v13[1] = a1;
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  uint64_t v8 = String.init<A>(describing:)();
  uint64_t v10 = v9;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_10000B4CC();
  *(void *)(v7 + 32) = v8;
  *(void *)(v7 + 40) = v10;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = type metadata accessor for OwnedBeaconRecord();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  a2(v6);
  return sub_10001DAB4((uint64_t)v6, &qword_10163B9F0);
}

uint64_t sub_10037A2D0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v35 = a3;
  uint64_t v36 = a2;
  uint64_t v4 = sub_10000588C(&qword_101638CF0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v33 = (char *)&v31 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v34 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v31 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10163B9F0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v31 - v17;
  static os_log_type_t.default.getter();
  if (qword_101637260 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_101342130;
  sub_10001D074(a1, (uint64_t)v18, &qword_10163B9F0);
  uint64_t v20 = String.init<A>(describing:)();
  uint64_t v22 = v21;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 64) = sub_10000B4CC();
  *(void *)(v19 + 32) = v20;
  *(void *)(v19 + 40) = v22;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_10001D074(a1, (uint64_t)v16, &qword_10163B9F0);
  uint64_t v23 = type metadata accessor for OwnedBeaconRecord();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v16, 1, v23) == 1)
  {
    sub_10001DAB4((uint64_t)v16, &qword_10163B9F0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v10, 1, 1, v34);
LABEL_6:
    sub_10001DAB4((uint64_t)v10, &qword_101638CF0);
    return v36(a1);
  }
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v25 = v34;
  v24(v10, &v16[*(int *)(v23 + 20)], v34);
  sub_1003B61EC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
  v26(v10, 0, 1, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v25) == 1) {
    goto LABEL_6;
  }
  uint64_t v27 = v31;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v31, v10, v25);
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  uint64_t v28 = (uint64_t)v33;
  v24(v33, v27, v25);
  v26((char *)v28, 0, 1, v25);
  sub_1000A5940();
  uint64_t v29 = v32;
  sub_10001D074(v28, v32, &qword_101638CF0);
  sub_100F175B0(v29);
  swift_release();
  sub_10001DAB4(v28, &qword_101638CF0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v27, v25);
  return v36(a1);
}

uint64_t sub_10037A7A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v9 = v12[1];
  swift_getKeyPath();
  sub_1010AD23C(v9, (uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10001DAB4((uint64_t)v4, &qword_101638CF0);
    uint64_t v10 = type metadata accessor for OwnedBeaconRecord();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_100ACD178(a1);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_10037A9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  _OWORD v6[2] = a4;
  return _swift_task_switch(sub_10037AA20, 0, 0);
}

uint64_t sub_10037AA20()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  v0[5] = v2;
  *(void *)(v2 + 16) = &unk_101642960;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[6] = v3;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_101638DC0);
  *uint64_t v3 = v0;
  v3[1] = sub_10037AB3C;
  return withTimeout<A>(_:block:)(v0 + 7, 8000000000000000000, 0, &unk_101642970, v2, v4);
}

uint64_t sub_10037AB3C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    swift_release();
    uint64_t v1 = sub_1003B7BD0;
  }
  else
  {
    swift_release();
    uint64_t v1 = sub_10037AC84;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10037AC84()
{
  (*(void (**)(uint64_t))(v0 + 24))(1);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037ACEC(uint64_t a1)
{
  *(void *)(v1 + 136) = a1;
  return _swift_task_switch(sub_10037AD0C, 0, 0);
}

uint64_t sub_10037AD0C()
{
  uint64_t v1 = qword_1016375E8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    swift_release();
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_101639240 + dword_101639240);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10037AE5C;
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037AE5C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10037AF5C, 0, 0);
}

uint64_t sub_10037AF5C()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  uint64_t v3 = swift_allocObject();
  v0[20] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[21] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10037B05C;
  return unsafeBlocking<A>(_:)(v4, sub_1003B5E20, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10037B05C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_10037B174, 0, 0);
}

uint64_t sub_10037B174()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10037B204;
  return sub_10037BCAC();
}

uint64_t sub_10037B204()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10037B300, 0, 0);
}

uint64_t sub_10037B300()
{
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  sub_10001D4B0(0, (unint64_t *)&qword_101642980);
  if (qword_101636CC0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for URL();
  sub_100010324(v1, (uint64_t)qword_10170E338);
  uint64_t result = static NSFileManager.removeDirectory(url:)();
  if (*(void *)(*(void *)(v0 + 136) + 40))
  {
    uint64_t v3 = qword_101637450;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    sub_100010324(v1, (uint64_t)qword_10166ADC0);
    static NSFileManager.removeDirectory(url:)();
    swift_release();
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037B7C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003AEB00();
  sub_100AA3034();
  while (1)
  {
    type metadata accessor for BeaconKeyManager(0);
    OSAllocatedUnfairLock.callAsFunction<A>(_:)();
    uint64_t v17 = aBlock[0];
    uint64_t v18 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = 0;
    v19[3] = 0;
    v19[4] = v17;
    swift_retain();
    sub_1008F5E44((uint64_t)v6, (uint64_t)&unk_101642990, (uint64_t)v19);
    swift_release();
    type metadata accessor for Transaction();
    static Transaction.named<A>(_:with:)();
    swift_release();
    if (a2) {
      sub_1002D6644();
    }
    sub_100A55148();
    if (qword_1016368B8 != -1) {
      swift_once();
    }
    OSAllocatedUnfairLock.callAsFunction<A>(_:)();
    uint64_t v20 = *(NSObject **)(a1 + 56);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_1003B5FF4;
    *(void *)(v21 + 24) = a1;
    aBlock[4] = sub_1003B7AE0;
    uint64_t v28 = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1000A70B0;
    void aBlock[3] = &unk_1015BCFD8;
    uint64_t v22 = _Block_copy(aBlock);
    a2 = v28;
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v20, v22);
    _Block_release(v22);
    LOBYTE(v20) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v20 & 1) == 0) {
      break;
    }
    __break(1u);
    swift_once();
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170EF80);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412290;
      swift_errorRetain();
      uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
      os_log_t v25 = v8;
      uint64_t v12 = a1;
      uint64_t v13 = v6;
      uint64_t v14 = a2;
      uint64_t v15 = v11;
      aBlock[0] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v26 = v15;
      a2 = v14;
      uint64_t v6 = v13;
      a1 = v12;
      swift_errorRelease();
      swift_errorRelease();
      os_log_t v16 = v25;
      _os_log_impl((void *)&_mh_execute_header, v25, v9, "Error purging beacon store files: %@.", v10, 0xCu);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_10037BCAC()
{
  *(void *)(v1 + 216) = v0;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v1 + 224) = swift_task_alloc();
  return _swift_task_switch(sub_10037BD40, 0, 0);
}

uint64_t sub_10037BD40()
{
  uint64_t v1 = qword_1016375E8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 96, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 16);
    swift_release();
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1016391C8 + dword_1016391C8);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10037BE90;
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037BE90(uint64_t a1)
{
  *(void *)(*(void *)v1 + 240) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10037BF90, 0, 0);
}

uint64_t sub_10037BF90()
{
  uint64_t v1 = *(void *)(v0 + 240);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 240);
    uint64_t v3 = (uint64_t)sub_10037C0CC;
    uint64_t v4 = 0;
    return _swift_task_switch(v3, v2, v4);
  }
  *(void *)(v0 + 256) = 0;
  uint64_t v3 = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (!*(void *)(v0 + 80))
  {
    __break(1u);
    return _swift_task_switch(v3, v2, v4);
  }
  sub_10001CEB0((long long *)(v0 + 56), v0 + 136);
  sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_101639198 + dword_101639198);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10037C258;
  return v7();
}

uint64_t sub_10037C0CC()
{
  sub_10017E334();
  *(void *)(v0 + 248) = 0;
  return _swift_task_switch(sub_10037C15C, 0, 0);
}

uint64_t sub_10037C15C()
{
  swift_release();
  *(void *)(v0 + 256) = *(void *)(v0 + 248);
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 136);
    sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
    uint64_t v3 = (uint64_t (*)(void))((char *)&dword_101639198 + dword_101639198);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v2;
    void *v2 = v0;
    v2[1] = sub_10037C258;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037C258(uint64_t a1)
{
  *(void *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10037C358, 0, 0);
}

uint64_t sub_10037C358()
{
  uint64_t v1 = *(void *)(v0 + 272);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 272);
    return _swift_task_switch(sub_10037C400, v2, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_10037C400()
{
  uint64_t v1 = v0[34];
  if (*(void *)(v1 + 128))
  {
    uint64_t v2 = v0[32];
    sub_10017E2BC();
    v0[35] = v2;
    if (v2)
    {
      uint64_t v3 = sub_10037C840;
      goto LABEL_8;
    }
    uint64_t v1 = v0[34];
  }
  uint64_t v4 = *(void *)(v1 + 136);
  if (v4)
  {
    uint64_t v5 = v0[28];
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = (void *)swift_allocObject();
    v7[2] = 0;
    v7[3] = 0;
    v7[4] = v4;
    swift_retain();
    sub_100885EBC(v5, (uint64_t)&unk_101642988, (uint64_t)v7);
    swift_release();
  }
  uint64_t v3 = sub_10037C530;
LABEL_8:
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10037C530()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10037C598()
{
  uint64_t v1 = (long long *)(v0 + 7);
  if (qword_101636EF0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100010324(v2, (uint64_t)qword_10170E840);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    uint64_t v7 = _convertErrorToNSError(_:)();
    v0[26] = v7;
    uint64_t v1 = (long long *)(v0 + 7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Error purging StandaloneBeaconService: %@", v5, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  v0[32] = 0;
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v1, (uint64_t *)&unk_101638D30);
  if (v0[10])
  {
    sub_10001CEB0(v1, (uint64_t)(v0 + 17));
    sub_10001CD44(v0 + 17, v0[20]);
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_101639198 + dword_101639198);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[33] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10037C258;
    return v10();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10037C840()
{
  if (qword_101636EF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170E840);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v4 = 138412290;
    uint64_t v6 = _convertErrorToNSError(_:)();
    *(void *)(v0 + 200) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error purging ObservationStoreSerivce: %@", v4, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10037CA58(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  os_log_type_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *os_log_type_t v3 = v2;
  v3[1] = sub_10037CB28;
  return v5();
}

uint64_t sub_10037CB28()
{
  uint64_t v1 = *(unsigned char **)(*v0 + 16);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  *uint64_t v1 = 0;
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10037CC38()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1016368B8 != -1) {
    swift_once();
  }
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = v0;
  aBlock[4] = sub_1003B6264;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  void aBlock[3] = &unk_1015BD0A0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v14 = _swiftEmptyArrayStorage;
  sub_100394110((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v13);
  return swift_release();
}

void sub_10037CF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchTime();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = dispatch_group_create();
  dispatch_group_enter(v14);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 1, 1, v16);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a1;
  v17[5] = sub_1003B62AC;
  v17[6] = v15;
  uint64_t v18 = v14;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1008F5E44((uint64_t)v13, (uint64_t)&unk_1016429B8, (uint64_t)v17);
  swift_release();
  swift_release();
  if (qword_101636EF0 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100010324(v19, (uint64_t)qword_10170E840);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Waiting for manateeAvailable check to complete.", v22, 2u);
    swift_slowDealloc();
  }

  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v8, v4);
  OS_dispatch_group.wait(timeout:)();
  v23(v10, v4);
  if (static DispatchTimeoutResult.== infix(_:_:)())
  {
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Timed out waiting for manateeAvailable.", v26, 2u);
      swift_slowDealloc();
      uint64_t v27 = v18;
      uint64_t v18 = v24;
    }
    else
    {
      uint64_t v27 = v24;
    }
  }
}

void sub_10037D320(char a1, NSObject *a2)
{
  id v4 = [self defaultStore];
  if (!v4)
  {
    __break(1u);
    return;
  }
  uint64_t v5 = v4;
  id v6 = [v4 aa_primaryAppleAccount];

  if (qword_101636EF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100010324(v7, (uint64_t)qword_10170E840);
  id v8 = v6;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446722;
    if (v8) {
      uint64_t v12 = 0x6C696E2D746F6ELL;
    }
    else {
      uint64_t v12 = 7104878;
    }
    if (v8) {
      unint64_t v13 = 0xE700000000000000;
    }
    else {
      unint64_t v13 = 0xE300000000000000;
    }
    sub_1008FA0F0(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    if (v8)
    {
      sub_1004C6CDC();
    }
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    *(_WORD *)(v11 + 22) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "primaryAccountModified account: %{public}s,      security: %lu with manatee enabled: %{BOOL}d.", (uint8_t *)v11, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (!v8) {
      goto LABEL_17;
    }
  }
  else
  {

    if (!v8) {
      goto LABEL_17;
    }
  }
  id v14 = v8;
  id v15 = sub_1004C6CDC();

  if (v15 != (id)4) {
LABEL_17:
  }
    a1 = 0;
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  sub_1000A5940();
  sub_100F16CBC(v8 != 0, a1 & 1);
  swift_release();
  type metadata accessor for Transaction();
  static Transaction.named<A>(_:with:)();
  static Transaction.named<A>(_:with:)();

  dispatch_group_leave(a2);
}

void sub_10037D6C4(uint64_t a1, int a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v67 = a4;
  unint64_t v68 = a3;
  int v65 = a2;
  uint64_t v6 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  os_log_type_t v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for UUID();
  uint64_t v59 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v56 = v11;
  uint64_t v58 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v12 - 8);
  uint64_t v57 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for LocalFindableAccessoryRecord();
  __chkstk_darwin(v60);
  uint64_t v61 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v56 - v25;
  uint64_t v66 = v4;
  sub_100ACCD98(a1, (uint64_t)&v70);
  if (v71)
  {
    uint64_t v27 = a1;
    sub_10001CEB0(&v70, (uint64_t)v72);
    sub_10001D010((uint64_t)v72, (uint64_t)&v70);
    sub_10000588C((uint64_t *)&unk_10164DBF0);
    if (swift_dynamicCast())
    {
      sub_1003B6008((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      sub_10037F0D0((uint64_t)v24, v65 & 1, v68, v67);
      sub_1003B61EC((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    else if (swift_dynamicCast())
    {
      sub_1003B6008((uint64_t)v20, (uint64_t)v18, type metadata accessor for SharedBeaconRecord);
      sub_10037FFBC((uint64_t)v18, (uint64_t)v68, (uint64_t)v67);
      sub_1003B61EC((uint64_t)v18, type metadata accessor for SharedBeaconRecord);
    }
    else
    {
      uint64_t v38 = (uint64_t)v61;
      if (swift_dynamicCast())
      {
        uint64_t v39 = swift_allocObject();
        uint64_t v40 = v67;
        *(void *)(v39 + 16) = v68;
        *(void *)(v39 + 24) = v40;
        uint64_t v41 = type metadata accessor for TaskPriority();
        uint64_t v42 = (uint64_t)v57;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v57, 1, 1, v41);
        uint64_t v43 = v59;
        uint64_t v44 = v58;
        uint64_t v45 = v62;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v58, v27, v62);
        unint64_t v46 = (*(unsigned __int8 *)(v43 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        uint64_t v47 = (char *)swift_allocObject();
        *((void *)v47 + 2) = 0;
        *((void *)v47 + 3) = 0;
        *((void *)v47 + 4) = v66;
        *((void *)v47 + 5) = sub_1003A4804;
        *((void *)v47 + 6) = v39;
        (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v47[v46], v44, v45);
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1008F5E44(v42, (uint64_t)&unk_101642658, (uint64_t)v47);
        swift_release();
        swift_release();
        ((void (*)(void))v68)(0);
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v72);
        sub_1003B61EC(v38, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
LABEL_25:
        _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v70);
        return;
      }
      static os_log_type_t.error.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v50 = swift_allocObject();
      *(_OWORD *)(v50 + 16) = xmmword_101342130;
      sub_10001D010((uint64_t)v72, (uint64_t)v69);
      uint64_t v51 = String.init<A>(describing:)();
      uint64_t v53 = v52;
      *(void *)(v50 + 56) = &type metadata for String;
      *(void *)(v50 + 64) = sub_10000B4CC();
      *(void *)(v50 + 32) = v51;
      *(void *)(v50 + 40) = v53;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      sub_1003A4778();
      swift_allocError();
      *unint64_t v54 = 3;
      v68();
      swift_errorRelease();
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v72);
    goto LABEL_25;
  }
  sub_10001DAB4((uint64_t)&v70, (uint64_t *)&unk_10163BBE0);
  sub_100AE75E0(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v8, 1, v64) != 1)
  {
    sub_1003B6008((uint64_t)v8, (uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    v72[0] = 0;
    uint64_t v33 = sub_1004D1434();
    uint64_t v34 = v66;
    swift_retain();
    sub_1003A410C(v33, v34, v72);
    swift_bridgeObjectRelease();
    swift_release();
    int v35 = v72[0];
    static os_log_type_t.default.getter();
    if (v35 == 1)
    {
      if (qword_101637308 != -1) {
        swift_once();
      }
      os_log(_:dso:log:_:_:)();
      int v36 = v65 & 1;
      uint64_t v37 = (uint64_t)v10;
    }
    else
    {
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_101342130;
      *(void *)(v48 + 56) = &type metadata for Bool;
      *(void *)(v48 + 64) = &protocol witness table for Bool;
      char v49 = v65;
      *(unsigned char *)(v48 + 32) = v65 & 1;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      if ((v49 & 1) == 0)
      {
        sub_1003A4778();
        swift_allocError();
        *uint64_t v55 = 7;
        v68();
        swift_errorRelease();
        goto LABEL_27;
      }
      uint64_t v37 = (uint64_t)v10;
      int v36 = 1;
    }
    sub_1003802C8(v37, v36, (uint64_t)v68, (uint64_t)v67);
LABEL_27:
    sub_1003B61EC((uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    return;
  }
  sub_10001DAB4((uint64_t)v8, &qword_10163BB20);
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_101342130;
  sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v31 = v30;
  *(void *)(v28 + 56) = &type metadata for String;
  *(void *)(v28 + 64) = sub_10000B4CC();
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v31;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for SPOwnerSessionError(0);
  *(void *)&long long v70 = 2;
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_100394110(&qword_101638460, type metadata accessor for SPOwnerSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  uint64_t v32 = *(void **)v72;
  ((void (*)(void))v68)(*(void *)v72);
}

void sub_10037E1D4(unint64_t a1, void (*a2)(void))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    id v6 = 0;
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v5 = *(id *)(a1 + 32);
  }
  id v7 = v5;
  swift_bridgeObjectRelease();
  id v6 = v7;
LABEL_9:
  id v8 = v6;
  a2();
}

uint64_t sub_10037E2BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v3 = type metadata accessor for OwnedBeaconRecord();
  __chkstk_darwin(v3);
  uint64_t v84 = (uint64_t)v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v81 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v80 = (char *)v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v74 - v10;
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  unint64_t v91 = v94;
  uint64_t v83 = (void *)type metadata accessor for BeaconKeyManager(0);
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  uint64_t v12 = sub_101311650(a1, v94);
  swift_release();
  uint64_t v13 = a1 + *(int *)(v3 + 32);
  uint64_t v87 = v7;
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v89 = v11;
  uint64_t v90 = v6;
  unint64_t v79 = v14;
  v14(v11, (char *)v13, v6);
  uint64_t v15 = v3;
  uint64_t v16 = *(int *)(v3 + 52);
  uint64_t v17 = a1;
  uint64_t v18 = (uint64_t *)(a1 + v16);
  uint64_t v19 = *(void *)(a1 + v16);
  unint64_t v20 = *(void *)(a1 + v16 + 8);
  if (!v12)
  {
    sub_1000361E0(v19, v20);
    swift_bridgeObjectRelease();
    if (qword_101636BE0 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100010324(v29, (uint64_t)qword_10170E0E8);
    uint64_t v30 = v17;
    uint64_t v31 = v84;
    sub_1003B6E14(v30, v84, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      *(void *)&long long v94 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 141558275;
      uint64_t v92 = 1752392040;
      unint64_t v86 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 12) = 2081;
      sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v92 = sub_1008FA0F0(v35, v36, (uint64_t *)&v94);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1003B61EC(v31, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "Unable to get basePrimaryKeyIndex for %{private,mask.hash}s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_10001CFB8(v19, v86);
    }
    else
    {
      sub_10001CFB8(v19, v20);

      sub_1003B61EC(v31, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v90);
    uint64_t v71 = v88;
    uint64_t v72 = type metadata accessor for OfflineFindingInfo();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
    uint64_t v27 = 0;
    unint64_t v28 = 0xF000000000000000;
    return sub_100037A24(v27, v28);
  }
  uint64_t v84 = v12;
  if (v12 == 1)
  {
    uint64_t v21 = v15;
    uint64_t v22 = v17 + *(int *)(v15 + 36);
    uint64_t v23 = *(void **)v22;
    unint64_t v24 = *(void *)(v22 + 8);
    sub_1000361E0(v19, v20);
    uint64_t v83 = v23;
    sub_1000361E0((uint64_t)v23, v24);
    uint64_t v25 = v91;
  }
  else
  {
    uint64_t v78 = v19;
    unint64_t v86 = v20;
    sub_1000361E0(v19, v20);
    OSAllocatedUnfairLock.callAsFunction<A>(_:)();
    v74[1] = v74;
    v74[0] = v94;
    uint64_t v21 = v15;
    uint64_t v37 = (uint64_t *)(v17 + *(int *)(v15 + 36));
    uint64_t v38 = *v37;
    unint64_t v39 = v37[1];
    uint64_t v41 = *v18;
    unint64_t v40 = v18[1];
    uint64_t v42 = (uint64_t *)(v17 + *(int *)(v21 + 48));
    uint64_t v43 = *v42;
    unint64_t v44 = v42[1];
    sub_1000361E0(v38, v39);
    sub_1000361E0(v38, v39);
    uint64_t v75 = v41;
    uint64_t v45 = v41;
    unint64_t v46 = v44;
    unint64_t v76 = v40;
    sub_1000361E0(v45, v40);
    uint64_t v77 = v43;
    sub_1000361E0(v43, v44);
    if (qword_1016371D8 != -1) {
      swift_once();
    }
    *(void *)&long long v94 = 0x7365547265646E75;
    *((void *)&v94 + 1) = 0xE900000000000074;
    SynchronousCache.cachedValue<A>(key:computeBlock:)();
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_100A8CDA8(v38, v39, v84);
    uint64_t v25 = v91;
    uint64_t v48 = v47;
    unint64_t v50 = v49;
    uint64_t v92 = v47;
    unint64_t v93 = v49;
    sub_1000361E0(v48, v50);
    sub_100A8EE88(v77, v46, v75, v76, v48, v50, 1, &v92, &v94);
    sub_10001CFB8(v48, v50);
    unint64_t v73 = (void *)v92;
    unint64_t v24 = v93;
    sub_1000361E0(v92, v93);
    sub_1000361E0((uint64_t)v73, v24);
    sub_100037A24(0, 0xF000000000000000);
    sub_1003B6070((uint64_t *)&v94);
    sub_10001CFB8((uint64_t)v73, v24);
    uint64_t v83 = v73;
    sub_10001CFB8((uint64_t)v73, v24);
    sub_10001CFB8(v38, v39);
    sub_10001CFB8(v75, v76);
    sub_10001CFB8(v77, v46);
    sub_10001CFB8(v38, v39);
    swift_release();
    uint64_t v19 = v78;
    unint64_t v20 = v86;
  }
  if (v24 >> 60 == 15)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v89, v90);
    sub_10001CFB8(v19, v20);
    swift_bridgeObjectRelease();
    uint64_t v26 = type metadata accessor for OfflineFindingInfo();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v88, 1, 1, v26);
    uint64_t v27 = (uint64_t)v83;
    unint64_t v28 = v24;
    return sub_100037A24(v27, v28);
  }
  uint64_t v78 = v19;
  sub_1000361E0((uint64_t)v83, v24);
  uint64_t result = sub_1010ABFAC(v25);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v52 = result;
    unint64_t v86 = v20;
    uint64_t v53 = sub_1010ABFC0(v25);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v53 & 0x8000000000000000) == 0)
    {
      id v54 = [objc_allocWithZone((Class)SPOfflineAdvertisingConfiguration) initWithShortIntervalCount:v52 longIntervalCount:v53];
      uint64_t v55 = v17 + *(int *)(v21 + 20);
      uint64_t v56 = v82;
      uint64_t v57 = v81;
      uint64_t v58 = v85;
      (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v81, v55, v85);
      uint64_t v59 = v80;
      uint64_t v60 = v89;
      uint64_t v61 = v90;
      v79(v80, v89, v90);
      sub_10000588C(&qword_1016429A0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_101347BA0;
      *(void *)(inited + 32) = 2;
      *(void *)(inited + 40) = v54;
      *(void *)(inited + 48) = 1;
      *(void *)(inited + 56) = v54;
      unint64_t v91 = sub_10093FC48((void *)inited);
      swift_setDeallocating();
      id v63 = v54;
      sub_10000588C(&qword_1016429A8);
      swift_arrayDestroy();
      uint64_t v64 = v87;
      (*(void (**)(char *, uint64_t))(v87 + 8))(v60, v61);
      uint64_t v65 = v88;
      (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(v88, v57, v58);
      uint64_t v66 = (int *)type metadata accessor for OfflineFindingInfo();
      (*(void (**)(uint64_t, char *, uint64_t))(v64 + 32))(v65 + v66[5], v59, v61);
      *(void *)(v65 + v66[6]) = v84;
      uint64_t v67 = (uint64_t *)(v65 + v66[7]);
      unint64_t v68 = v86;
      *uint64_t v67 = v78;
      v67[1] = v68;
      uint64_t v69 = (void *)(v65 + v66[8]);
      uint64_t v70 = (uint64_t)v83;
      void *v69 = v83;
      v69[1] = v24;
      *(void *)(v65 + v66[9]) = v91;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v66 - 1) + 56))(v65, 0, 1, v66);
      uint64_t v27 = v70;
      unint64_t v28 = v24;
      return sub_100037A24(v27, v28);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10037F0D0(uint64_t a1, int a2, void (*a3)(void), void (*a4)(uint64_t))
{
  uint64_t v109 = a4;
  LODWORD(v108) = a2;
  uint64_t v102 = *v4;
  uint64_t v100 = type metadata accessor for OSSignpostID();
  uint64_t v104 = *(void *)(v100 - 8);
  uint64_t v7 = *(void *)(v104 + 64);
  uint64_t v8 = __chkstk_darwin(v100);
  uint64_t v99 = (char *)v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v103 = (char *)v86 - v9;
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v101 = (uint64_t)v86 - v14;
  uint64_t v15 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v105 = *(uint64_t (**)(void))(v15 - 8);
  uint64_t v16 = *((void *)v105 + 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v107 = (uint64_t (*)())((char *)v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v17);
  unint64_t v20 = (char *)v86 - v19;
  __chkstk_darwin(v18);
  unint64_t v106 = (unint64_t)v86 - v21;
  uint64_t v22 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v22);
  unint64_t v24 = (char *)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  sub_1003B6E14(a1 + *(int *)(v15 + 24), (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v87 = v20;
      uint64_t v90 = v7;
      uint64_t v98 = a3;
      unint64_t v93 = *(void (**)(char *, char *, uint64_t))v24;
      unint64_t v89 = *((void *)v24 + 1);
      unint64_t v91 = *((void *)v24 + 2);
      unint64_t v94 = *((void *)v24 + 3);
      uint64_t v92 = (uint64_t (*)(char))*((void *)v24 + 4);
      uint64_t v88 = *((void *)v24 + 5);
      static os_log_type_t.default.getter();
      if (qword_1016372A8 != -1) {
        swift_once();
      }
      sub_10000588C((uint64_t *)&unk_10163AD00);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_101342130;
      *(void *)(v27 + 56) = &type metadata for Bool;
      *(void *)(v27 + 64) = &protocol witness table for Bool;
      int v97 = v108 & 1;
      *(unsigned char *)(v27 + 32) = v108 & 1;
      os_log(_:dso:log:_:_:)();
      swift_bridgeObjectRelease();
      type metadata accessor for SPAnalyticsItemPairEvent(0);
      swift_allocObject();
      uint64_t v28 = sub_1011973A8(0);
      v86[1] = type metadata accessor for Transaction();
      unint64_t v96 = a1;
      uint64_t v29 = v106;
      sub_1003B6E14(a1, v106, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v30 = *((unsigned __int8 *)v105 + 80);
      uint64_t v31 = (v30 + 24) & ~v30;
      v86[2] = v30 | 7;
      uint64_t v32 = swift_allocObject();
      uint64_t v33 = v110;
      *(void *)(v32 + 16) = v110;
      uint64_t v105 = (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord;
      sub_1003B6008(v29, v32 + v31, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      unint64_t v34 = v32 + ((v16 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v95 = v28;
      *(void *)unint64_t v34 = v28;
      *(unsigned char *)(v34 + 8) = v97;
      swift_retain();
      swift_retain();
      static Transaction.asyncTask(name:block:)();
      swift_release();
      uint64_t v35 = (uint64_t)v87;
      sub_1003B6E14(v96, (uint64_t)v87, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      sub_1003B6E14(v35, (uint64_t)v107, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v36 = (v30 + 80) & ~v30;
      unint64_t v106 = (v36 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v37 = (v36 + v16 + 23) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v38 = (void *)swift_allocObject();
      unint64_t v39 = v94;
      v38[2] = v91;
      v38[3] = v39;
      unint64_t v40 = v89;
      v38[4] = v93;
      v38[5] = v40;
      uint64_t v41 = v109;
      v38[6] = v98;
      v38[7] = v41;
      uint64_t v42 = v88;
      v38[8] = v92;
      v38[9] = v42;
      sub_1003B6008(v35, (uint64_t)v38 + v36, v105);
      uint64_t v43 = (char *)v38 + v106;
      *(void *)uint64_t v43 = v33;
      v43[8] = v97;
      unint64_t v106 = (unint64_t)v38;
      uint64_t v44 = v96;
      *(void *)((char *)v38 + v37) = v95;
      uint64_t v45 = v44 + *(int *)(v15 + 20);
      uint64_t v46 = qword_101636CB8;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v46 != -1) {
        swift_once();
      }
      sub_1007B4970(v45, 0, 0, v111);
      uint64_t v48 = v101;
      char v49 = sub_100AF7A38(v101, v45, v111[0], 1);
      swift_bridgeObjectRelease();
      sub_10001DAB4(v48, (uint64_t *)&unk_10163AC90);
      uint64_t v50 = v90;
      if (v49)
      {
        static os_log_type_t.default.getter();
        os_log(_:dso:log:_:_:)();
        uint64_t v51 = v107;
        sub_100380D70(1, v91, v94, (uint64_t)v93, v40, v98, (uint64_t)v41, (uint64_t)v92, v42, (uint64_t)v107, v110, v108 & 1, v95);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = sub_1003B61EC((uint64_t)v51, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      else
      {
        sub_1003B61EC((uint64_t)v107, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static os_log_type_t.default.getter();
        uint64_t v56 = (void *)qword_10170F000;
        os_log(_:dso:log:_:_:)();
        id v57 = v56;
        uint64_t v58 = v103;
        OSSignpostID.init(log:)();
        static os_signpost_type_t.begin.getter();
        os_signpost(_:dso:log:name:signpostID:)();
        uint64_t v110 = sub_1008BFD88(v45);
        uint64_t v59 = v104;
        uint64_t v108 = *(uint64_t (**)())(v104 + 16);
        uint64_t v61 = v99;
        uint64_t v60 = v100;
        ((void (*)(char *, char *, uint64_t))v108)(v99, v58, v100);
        uint64_t v62 = *(unsigned __int8 *)(v59 + 80);
        unint64_t v63 = ((v62 + 16) & ~v62) + v50;
        uint64_t v64 = (uint64_t (*)())((v62 + 16) & ~v62);
        unint64_t v107 = v64;
        uint64_t v105 = (uint64_t (*)(void))(v62 | 7);
        unint64_t v94 = v63;
        unint64_t v96 = (v63 & 0xFFFFFFFFFFFFFFF8) + 8;
        unint64_t v65 = ((v63 & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v101 = ((v65 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
        unint64_t v91 = (v65 + 23) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v66 = swift_allocObject();
        unint64_t v93 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        v93((char *)v64 + v66, v61, v60);
        *(unsigned char *)(v66 + v63) = v97;
        uint64_t v67 = (uint64_t (**)(char))(v66 + (v63 & 0xFFFFFFFFFFFFFFF8) + 8);
        uint64_t v92 = sub_1003A59FC;
        unint64_t v68 = v106;
        *uint64_t v67 = sub_1003A59FC;
        v67[1] = (uint64_t (*)(char))v68;
        uint64_t v69 = (void *)(v66 + v65);
        uint64_t v70 = v109;
        void *v69 = v98;
        v69[1] = v70;
        *(void *)(v66 + ((v65 + 23) & 0xFFFFFFFFFFFFFFF8)) = v102;
        uint64_t v71 = v70;
        swift_retain();
        swift_retain();
        Future.addSuccess(block:)();
        swift_release();
        swift_release();
        uint64_t v72 = v103;
        ((void (*)(char *, char *, uint64_t))v108)(v61, v103, v60);
        uint64_t v73 = swift_allocObject();
        v93((char *)v107 + v73, v61, v60);
        *(unsigned char *)(v73 + v94) = v97;
        uint64_t v74 = (uint64_t (**)(char))(v73 + v96);
        *uint64_t v74 = v92;
        v74[1] = (uint64_t (*)(char))v68;
        uint64_t v75 = (void *)(v73 + v65);
        void *v75 = v98;
        v75[1] = v71;
        *(void *)(v73 + v91) = v102;
        swift_retain();
        swift_retain();
        Future.addFailure(block:)();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v72, v60);
      }
      break;
    case 2u:
      uint64_t v52 = a3;
      sub_10000588C(&qword_1016555E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v53 = v25 + *(int *)(v15 + 20);
      if (qword_101636CB8 != -1) {
        swift_once();
      }
      sub_1007B4970(v53, 0, 0, v111);
      char v55 = sub_100AF7A38((uint64_t)v13, v53, v111[0], 1);
      swift_bridgeObjectRelease();
      sub_10001DAB4((uint64_t)v13, (uint64_t *)&unk_10163AC90);
      static os_log_type_t.default.getter();
      if (v55)
      {
        if (qword_101637308 != -1) {
          swift_once();
        }
        os_log(_:dso:log:_:_:)();
        sub_100381F78(v25, v108 & 1, v52, (uint64_t)v109);
      }
      else
      {
        uint64_t v98 = v52;
        if (qword_101637308 != -1) {
          swift_once();
        }
        os_log(_:dso:log:_:_:)();
        uint64_t v76 = v110;
        unint64_t v103 = (char *)sub_1008BFD88(v53);
        unint64_t v107 = type metadata accessor for OwnedBeaconRecord;
        unint64_t v96 = v25;
        uint64_t v77 = v106;
        sub_1003B6E14(v25, v106, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v78 = *((unsigned __int8 *)v105 + 80);
        uint64_t v79 = (v78 + 32) & ~v78;
        uint64_t v105 = (uint64_t (*)(void))(v78 | 7);
        uint64_t v80 = swift_allocObject();
        LODWORD(v104) = v108 & 1;
        *(unsigned char *)(v80 + 16) = v108 & 1;
        *(void *)(v80 + 24) = v76;
        uint64_t v108 = type metadata accessor for OwnedBeaconRecord;
        sub_1003B6008(v77, v80 + v79, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v81 = (void *)(v80 + ((v16 + v79 + 7) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v82 = v98;
        uint64_t v83 = v109;
        *uint64_t v81 = v98;
        v81[1] = v83;
        swift_retain();
        swift_retain();
        Future.addSuccess(block:)();
        swift_release();
        swift_release();
        sub_1003B6E14(v96, v77, (uint64_t (*)(void))v107);
        uint64_t v84 = swift_allocObject();
        *(unsigned char *)(v84 + 16) = v104;
        *(void *)(v84 + 24) = v82;
        *(void *)(v84 + 32) = v83;
        *(void *)(v84 + 40) = v76;
        sub_1003B6008(v77, v84 + ((v78 + 48) & ~v78), (uint64_t (*)(void))v108);
        swift_retain();
        swift_retain();
        Future.addFailure(block:)();
        swift_release();
        swift_release();
        swift_release();
      }
      goto LABEL_20;
    case 3u:
      sub_10000588C((uint64_t *)&unk_1016565E0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100378528(a1, 1, (void (*)(uint64_t))a3, v109);
LABEL_20:
      uint64_t v85 = type metadata accessor for UUID();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v85 - 8) + 8))(v24, v85);
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t result = sub_100378528(a1, 1, (void (*)(uint64_t))a3, v109);
      break;
  }
  return result;
}

uint64_t sub_10037FFBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v6 = type metadata accessor for SharedBeaconRecord(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - v11;
  sub_1003B6E14(a1, (uint64_t)&v21 - v11, type metadata accessor for SharedBeaconRecord);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v3;
  sub_1003B6008((uint64_t)v12, v14 + v13, type metadata accessor for SharedBeaconRecord);
  uint64_t v15 = (void *)(v14 + ((v8 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v15 = v22;
  v15[1] = a3;
  uint64_t v16 = *(void *)(a1 + *(int *)(v6 + 44));
  sub_1003B6E14(a1, (uint64_t)v10, type metadata accessor for SharedBeaconRecord);
  if (v16 != -1)
  {
    swift_retain();
    swift_retain();
    uint64_t result = sub_1003B61EC((uint64_t)v10, type metadata accessor for SharedBeaconRecord);
LABEL_4:
    if (*(void *)(v3 + 40))
    {
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_1003B1648;
      *(void *)(v19 + 24) = v14;
      swift_retain();
      swift_retain();
      sub_1004E75CC(a1, (uint64_t)sub_1003B7ADC, v19);
LABEL_6:
      swift_release();
      swift_release();
      return swift_release();
    }
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v18 = *(void *)&v10[*(int *)(v6 + 48)];
  swift_retain();
  swift_retain();
  uint64_t result = sub_1003B61EC((uint64_t)v10, type metadata accessor for SharedBeaconRecord);
  if (v18 != -1) {
    goto LABEL_4;
  }
  if (*(void *)(v3 + 40))
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1003B1648;
    *(void *)(v20 + 24) = v14;
    swift_retain();
    swift_retain();
    sub_1004E6E74(a1, (uint64_t)sub_1003A4804, v20);
    goto LABEL_6;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1003802A0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1003802C8(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v37 = a4;
  uint64_t v6 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v35 = v9;
  uint64_t v36 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - v10;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100010324(v12, (uint64_t)qword_10170F068);
  sub_1003B6E14(a1, (uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  unint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v38 = a1;
  int v34 = a2;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558531;
    uint64_t v41 = 1752392040;
    uint64_t v42 = v17;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2081;
    uint64_t v33 = v7;
    type metadata accessor for UUID();
    sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v41 = sub_1008FA0F0(v18, v19, &v42);
    a1 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B61EC((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
    *(_WORD *)(v16 + 22) = 1024;
    LODWORD(v41) = a2 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "unpairMultipartAccessory for group %{private,mask.hash}s. Force? %{BOOL}d", (uint8_t *)v16, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v7 = v33;
  }
  else
  {
    sub_1003B61EC((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  }
  uint64_t v20 = v36;
  sub_1003B6E14(a1, v36, type metadata accessor for OwnedBeaconGroup);
  uint64_t v21 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v22 = (v21 + 24) & ~v21;
  uint64_t v23 = v35;
  unint64_t v24 = (v35 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v40;
  sub_1003B6008(v20, v25 + v22, type metadata accessor for OwnedBeaconGroup);
  uint64_t v26 = (void *)(v25 + v24);
  uint64_t v27 = v37;
  void *v26 = v39;
  v26[1] = v27;
  sub_1003B6E14(a1, v20, type metadata accessor for OwnedBeaconGroup);
  uint64_t v28 = (v21 + 16) & ~v21;
  uint64_t v29 = swift_allocObject();
  sub_1003B6008(v20, v29 + v28, type metadata accessor for OwnedBeaconGroup);
  unint64_t v30 = v29 + ((v28 + v23 + 7) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v30 = sub_1003B2448;
  *(void *)(v30 + 8) = v25;
  *(unsigned char *)(v30 + 16) = v34 & 1;
  uint64_t v31 = (void *)(v29 + ((v28 + v23 + 31) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v31 = v39;
  v31[1] = v27;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_1003858E0(v38, (uint64_t)sub_1003B2660, v29);
  swift_release();
  return swift_release();
}

uint64_t sub_100380770(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 104) = a4;
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = a3;
  *(void *)(v4 + 24) = a1;
  uint64_t v5 = *(void *)(type metadata accessor for OwnedBeaconRecord() - 8);
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = *(void *)(v5 + 64);
  *(void *)(v4 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_10038083C, 0, 0);
}

uint64_t sub_10038083C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[3];
  sub_1003B6E14(v0[4], v1, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  v0[9] = v5;
  *(void *)(v5 + 16) = v3;
  sub_1003B6008(v1, v5 + v4, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[10] = v6;
  uint64_t v7 = sub_10001D4B0(0, (unint64_t *)&unk_10164DC30);
  *uint64_t v6 = v0;
  v6[1] = sub_10038099C;
  return unsafeBlocking<A>(_:)(v0 + 2, sub_1003A83B4, v5, v7);
}

uint64_t sub_10038099C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100380AB4, 0, 0);
}

uint64_t sub_100380AB4()
{
  uint64_t v1 = v0[5];
  v0[11] = v0[2];
  return _swift_task_switch(sub_100380AD8, v1, 0);
}

uint64_t sub_100380AD8()
{
  uint64_t v1 = (void *)v0[11];
  uint64_t v2 = v0[5];
  v0[12] = type metadata accessor for Transaction();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  id v4 = v1;
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return _swift_task_switch(sub_100380BB8, 0, 0);
}

uint64_t sub_100380BB8()
{
  if (*(unsigned char *)(v0 + 104) == 1)
  {
    uint64_t v1 = *(void *)(v0 + 40);
    return _swift_task_switch(sub_100380C64, v1, 0);
  }
  else
  {

    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_100380C64()
{
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return _swift_task_switch(sub_100380D08, 0, 0);
}

uint64_t sub_100380D08()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100380D70(char a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13)
{
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v36 = a2;
  unint64_t v37 = a3;
  sub_1000336D4();
  swift_bridgeObjectRetain();
  uint64_t v21 = Data.init<A>(hexString:)();
  if (v22 >> 60 == 15) {
    goto LABEL_6;
  }
  uint64_t v23 = v21;
  unint64_t v24 = v22;
  uint64_t v36 = a4;
  unint64_t v37 = a5;
  swift_bridgeObjectRetain();
  uint64_t v25 = Data.init<A>(hexString:)();
  if (v26 >> 60 == 15)
  {
    sub_100037A24(v23, v24);
LABEL_6:
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    sub_1003A4778();
    swift_allocError();
    *uint64_t v27 = 3;
    a6();
    return swift_errorRelease();
  }
  uint64_t v29 = v25;
  unint64_t v30 = v26;
  uint64_t v31 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v32 = *(void *)(a10 + *(int *)(v31 + 68));
  uint64_t v33 = *(void *)(a10 + *(int *)(v31 + 64));
  uint64_t v36 = v23;
  unint64_t v37 = v24;
  uint64_t v38 = v29;
  unint64_t v39 = v30;
  uint64_t v40 = a8;
  uint64_t v41 = a9;
  uint64_t v42 = v32;
  uint64_t v43 = v33;
  sub_100037A38(v23, v24);
  sub_100037A38(v29, v30);
  swift_bridgeObjectRetain();
  sub_1003810A4(a10, &v36, a12 & 1, a1 & 1);
  int v34 = (void *)swift_allocObject();
  v34[2] = a13;
  void v34[3] = a6;
  v34[4] = a7;
  swift_retain();
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = a13;
  v35[3] = a6;
  v35[4] = a7;
  swift_retain();
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  swift_release();
  sub_10001CFB8(v23, v24);
  sub_10001CFB8(v29, v30);
  swift_bridgeObjectRelease();
  sub_100037A24(v29, v30);
  return sub_100037A24(v23, v24);
}

uint64_t sub_1003810A4(uint64_t a1, uint64_t *a2, int a3, int a4)
{
  int v60 = a4;
  int v61 = a3;
  uint64_t v59 = a2;
  uint64_t v65 = a1;
  uint64_t v67 = *v4;
  uint64_t v5 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v58 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v51 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v64 = v7;
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for OSSignpostID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  BOOL v15 = (char *)&v42 - v14;
  sub_10000588C(&qword_101651180);
  swift_allocObject();
  uint64_t v55 = Future.init()();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  id v16 = (id)qword_10170F000;
  OSSignpostID.init(log:)();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v53 = v10 + 16;
  id v54 = v17;
  unint64_t v63 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17(v13, v15, v9);
  uint64_t v52 = type metadata accessor for OwnedBeaconRecord;
  sub_1003B6E14(v65, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v57 = v10;
  uint64_t v19 = (v18 + 16) & ~v18;
  uint64_t v49 = v19;
  uint64_t v50 = v19 + v11;
  unint64_t v20 = (v19 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = v9;
  uint64_t v44 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v21 = (v44 + v20 + 8) & ~v44;
  uint64_t v47 = v18 | v44 | 7;
  unint64_t v22 = (v64 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v62 = v15;
  uint64_t v23 = swift_allocObject();
  uint64_t v51 = v23;
  unint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v10 + 32);
  uint64_t v46 = v10 + 32;
  uint64_t v48 = v24;
  v24(v23 + v19, v13, v9);
  *(void *)(v23 + v20) = v66;
  uint64_t v45 = type metadata accessor for OwnedBeaconRecord;
  uint64_t v25 = (uint64_t)v8;
  uint64_t v42 = v8;
  sub_1003B6008((uint64_t)v8, v23 + v21, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v26 = v55;
  *(void *)(v23 + v22) = v55;
  *(void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8)) = v67;
  swift_retain();
  swift_retain();
  static os_signpost_type_t.begin.getter();
  uint64_t v27 = v62;
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v28 = v65;
  uint64_t v29 = v65 + *(int *)(v56 + 20);
  uint64_t v30 = type metadata accessor for UUID();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v58, v29, v30);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
  uint64_t v59 = (uint64_t *)sub_1008B9BC0(v32, v59);
  sub_10001DAB4(v32, &qword_101638CF0);
  uint64_t v33 = v43;
  v54(v63, v27, v43);
  sub_1003B6E14(v28, v25, (uint64_t (*)(void))v52);
  uint64_t v34 = v50;
  unint64_t v35 = (v44 + (v50 & 0xFFFFFFFFFFFFFFF8) + 16) & ~v44;
  uint64_t v36 = v35 + v64;
  unint64_t v37 = (((v35 + v64) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  unint64_t v39 = (v36 & 0xFFFFFFFFFFFFFFF8) + v38;
  v48(v38 + v49, v63, v33);
  *(unsigned char *)(v38 + v34) = v60 & 1;
  *(void *)((v34 & 0xFFFFFFFFFFFFFFF8) + v38 + 8) = v66;
  sub_1003B6008((uint64_t)v42, v38 + v35, (uint64_t (*)(void))v45);
  *(unsigned char *)(v38 + v36) = v61 & 1;
  uint64_t v40 = v51;
  *(void *)(v39 + 8) = sub_1003A6444;
  *(void *)(v39 + 16) = v40;
  *(void *)(v38 + v37) = v26;
  *(void *)(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8)) = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v33);
  return v26;
}

uint64_t sub_1003816D0(char *a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v5 = *a1;
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  *(void *)(v6 + 56) = &type metadata for Bool;
  *(void *)(v6 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v6 + 32) = v5;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for Transaction();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(unsigned char *)(v7 + 24) = v5;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return a3(0);
}

uint64_t sub_100381840(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 24) = a2;
  *(void *)(v2 + 16) = a1;
  return _swift_task_switch(sub_100381868, a1, 0);
}

uint64_t sub_100381868()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 16);
  type metadata accessor for Transaction();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = 0;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = v1;
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100381940(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  swift_getErrorValue();
  uint64_t v7 = Error.localizedDescription.getter();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000B4CC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  type metadata accessor for Transaction();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a1;
  swift_retain();
  swift_errorRetain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  return a3(a1);
}

uint64_t sub_100381AE4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100381B08, a1, 0);
}

uint64_t sub_100381B08()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  type metadata accessor for Transaction();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  *(void *)(v3 + 32) = 0;
  *(void *)(v3 + 40) = 0;
  *(unsigned char *)(v3 + 48) = 0;
  swift_retain();
  swift_errorRetain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100381BE4(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t), uint64_t a5, void (*a6)(void))
{
  uint64_t v8 = *a1;
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101342130;
  *(void *)(v9 + 56) = &type metadata for Bool;
  *(void *)(v9 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v9 + 32) = v8;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  if (v8 & 1) != 0 || (a3) {
    return a4(v8);
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  sub_1003A4778();
  swift_allocError();
  unsigned char *v10 = 0;
  a6();

  return swift_errorRelease();
}

uint64_t sub_100381DC4(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void), uint64_t a5, uint64_t (*a6)(uint64_t))
{
  static os_log_type_t.error.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101342130;
  swift_getErrorValue();
  uint64_t v9 = Error.localizedDescription.getter();
  uint64_t v11 = v10;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_10000B4CC();
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v11;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  if (a3) {
    return a4(0);
  }
  static os_log_type_t.default.getter();
  os_log(_:dso:log:_:_:)();
  return a6(a1);
}

id sub_100381F78(uint64_t a1, int a2, void (*a3)(void), uint64_t a4)
{
  unint64_t v107 = a3;
  int v101 = a2;
  uint64_t v6 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v97 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v103 = (uint64_t)&v85 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = v8;
  __chkstk_darwin(v7);
  uint64_t v99 = (uint64_t)&v85 - v9;
  uint64_t v10 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v100 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for AccessoryUnpairData();
  __chkstk_darwin(v96);
  unint64_t v13 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v14);
  id v16 = (char *)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v105 = *(void *)(v17 - 8);
  uint64_t v106 = v17;
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v104 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v108 = (char *)&v85 - v20;
  static os_log_type_t.default.getter();
  if (qword_101637308 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_101342130;
  uint64_t v22 = a1 + *(int *)(v6 + 20);
  uint64_t v109 = v6;
  uint64_t v95 = v22;
  uint64_t v23 = UUID.uuidString.getter();
  uint64_t v110 = a1;
  uint64_t v25 = v24;
  *(void *)(v21 + 56) = &type metadata for String;
  *(void *)(v21 + 64) = sub_10000B4CC();
  *(void *)(v21 + 32) = v23;
  *(void *)(v21 + 40) = v25;
  uint64_t v26 = v110;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_1003B6E14(v26 + *(int *)(v109 + 24), (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v103 = a4;
    uint64_t v27 = sub_10000588C(&qword_1016555E0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = &v16[*(int *)(v27 + 80)];
    uint64_t v30 = *(void *)v28;
    uint64_t v29 = *((void *)v28 + 1);
    swift_bridgeObjectRelease();
    uint64_t v32 = v105;
    uint64_t v31 = v106;
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
    uint64_t v34 = v108;
    v33(v108, v16, v106);
    unint64_t v35 = (unint64_t)sub_100F2C724();
    unint64_t v37 = v36;
    uint64_t v38 = HIBYTE(v36) & 0xF;
    if ((v36 & 0x2000000000000000) == 0) {
      uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
    }
    if (!v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      static os_log_type_t.error.getter();
      os_log(_:dso:log:_:_:)();
      return (id)(*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    }
    unint64_t v93 = v35;
    unint64_t v94 = v33;
    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v40 = result;
      uint64_t v91 = v30;
      uint64_t v92 = v29;
      uint64_t uniqueChipID = MobileGestalt_get_uniqueChipID();

      id result = (id)MobileGestalt_get_current_device();
      if (result)
      {
        uint64_t v42 = result;
        uint64_t chipID = MobileGestalt_get_chipID();

        uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
        v90(v104, v108, v31);
        v111[0] = uniqueChipID;
        uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v88 = v44;
        v111[0] = chipID;
        uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v86 = v45;
        uint64_t v46 = (uint64_t *)(v26 + *(int *)(v109 + 60));
        uint64_t v48 = *v46;
        uint64_t v47 = v46[1];
        swift_bridgeObjectRetain();
        uint64_t v49 = sub_100D1B318();
        if (v50 >> 60 == 15)
        {
          uint64_t v51 = 0;
          uint64_t v52 = 0;
        }
        else
        {
          uint64_t v62 = v49;
          unint64_t v63 = v50;
          v111[0] = v49;
          v111[1] = v50;
          sub_1001A95DC();
          uint64_t v51 = RawRepresentable<>.hexString.getter();
          uint64_t v52 = v64;
          sub_100037A24(v62, v63);
        }
        uint64_t v65 = v106;
        v94(v13, v104, v106);
        uint64_t v66 = (int *)v96;
        uint64_t v67 = &v13[*(int *)(v96 + 20)];
        uint64_t v68 = v92;
        *(void *)uint64_t v67 = v91;
        *((void *)v67 + 1) = v68;
        uint64_t v69 = &v13[v66[6]];
        *(void *)uint64_t v69 = v93;
        *((void *)v69 + 1) = v37;
        uint64_t v70 = (uint64_t *)&v13[v66[7]];
        uint64_t v71 = v88;
        uint64_t *v70 = v89;
        v70[1] = v71;
        uint64_t v72 = (uint64_t *)&v13[v66[8]];
        uint64_t v73 = v86;
        *uint64_t v72 = v87;
        v72[1] = v73;
        uint64_t v74 = &v13[v66[9]];
        *(void *)uint64_t v74 = v48;
        *((void *)v74 + 1) = v47;
        uint64_t v75 = (uint64_t *)&v13[v66[10]];
        uint64_t *v75 = v51;
        v75[1] = v52;
        uint64_t v76 = v102;
        uint64_t v109 = sub_100A46CC8();
        uint64_t v77 = (uint64_t)v100;
        v90(v100, (char *)v95, v65);
        uint64_t v78 = v105;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v105 + 56))(v77, 0, 1, v65);
        uint64_t v79 = v99;
        sub_1003B6E14(v110, v99, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        unint64_t v80 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
        unint64_t v81 = (v98 + v80 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v82 = swift_allocObject();
        uint64_t v83 = v103;
        *(void *)(v82 + 16) = v107;
        *(void *)(v82 + 24) = v83;
        sub_1003B6008(v79, v82 + v80, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        unint64_t v84 = v82 + v81;
        *(void *)unint64_t v84 = v76;
        *(unsigned char *)(v84 + 8) = v101 & 1;
        swift_retain();
        swift_retain();
        sub_1003C1ED0(v77, (uint64_t)v13, (uint64_t)sub_1003A8B70, v82);
        swift_release();
        swift_release();
        sub_10001DAB4(v77, &qword_101638CF0);
        sub_1003B61EC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for AccessoryUnpairData);
        return (id)(*(uint64_t (**)(char *, uint64_t))(v78 + 8))(v108, v65);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  sub_1003B61EC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v53 = v107;
  uint64_t v54 = type metadata accessor for Logger();
  sub_100010324(v54, (uint64_t)qword_10170F068);
  uint64_t v55 = v103;
  sub_1003B6E14(v110, v103, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v56 = Logger.logObject.getter();
  os_log_type_t v57 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v56, v57))
  {
    uint64_t v58 = swift_slowAlloc();
    v111[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v58 = 141558275;
    uint64_t v112 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v58 + 12) = 2081;
    uint64_t v59 = sub_101110C7C();
    uint64_t v112 = sub_1008FA0F0(v59, v60, v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B61EC(v55, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "Unsupported stableIdentifier: %{private,mask.hash}s", (uint8_t *)v58, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1003B61EC(v55, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }

  sub_1003A4778();
  swift_allocError();
  *int v61 = 6;
  v53();
  return (id)swift_errorRelease();
}

id sub_100382994(char *a1, char a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6)
{
  char v10 = *a1;
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101347BA0;
  *(void *)(v11 + 56) = &type metadata for Bool;
  *(void *)(v11 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v11 + 32) = v10;
  *(void *)(v11 + 96) = &type metadata for Bool;
  *(void *)(v11 + 104) = &protocol witness table for Bool;
  *(unsigned char *)(v11 + 72) = a2 & 1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (v10 & 1) != 0 || (a2) {
    return sub_100381F78(a4, a2 & 1, a5, a6);
  }
  sub_1003A4778();
  swift_allocError();
  *uint64_t v12 = 7;
  a5();

  return (id)swift_errorRelease();
}

id sub_100382B24(uint64_t a1, char a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6)
{
  static os_log_type_t.default.getter();
  if (qword_1016372A8 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_101342130;
  *(void *)(v11 + 56) = &type metadata for Bool;
  *(void *)(v11 + 64) = &protocol witness table for Bool;
  *(unsigned char *)(v11 + 32) = a2 & 1;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (a2) {
    return sub_100381F78(a6, 1, a3, a4);
  }
  else {
    return (id)((uint64_t (*)(uint64_t))a3)(a1);
  }
}

id sub_100382C58(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  LODWORD(v57) = a2;
  uint64_t v7 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v7 - 8);
  int v61 = &v53[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for OwnedBeaconGroup(0);
  __chkstk_darwin(v9);
  uint64_t v11 = &v53[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_100010324(v12, (uint64_t)qword_10170F068);
  sub_1003B6E14(a1, (uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v62 = v9;
  uint64_t v63 = v5;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v58 = v13;
    uint64_t v18 = v17;
    *(void *)&long long v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 141558275;
    uint64_t v64 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v18 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100394110((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v64 = sub_1008FA0F0(v19, v20, (uint64_t *)&v65);
    uint64_t v5 = v63;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B61EC((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "removeAirPodsPairingLock for %{private,mask.hash}s", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1003B61EC((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  }

  uint64_t v58 = a1;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_10036D3E8(v21);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v23 = sub_1003A70FC(v22, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  BOOL v26 = os_log_type_enabled(v24, v25);
  uint64_t v56 = v23;
  if (v26)
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v65 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
    swift_bridgeObjectRetain();
    uint64_t v28 = Array.description.getter();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_1008FA0F0(v28, v30, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "unpairDevices: %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id result = (id)MobileGestalt_get_current_device();
  if (result)
  {
    uint64_t v32 = result;
    uint64_t uniqueChipID = MobileGestalt_get_uniqueChipID();

    id result = (id)MobileGestalt_get_current_device();
    if (result)
    {
      uint64_t v34 = result;
      int v54 = v57 & 1;
      uint64_t chipID = MobileGestalt_get_chipID();

      *(void *)&long long v65 = uniqueChipID;
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v38 = v37;
      uint64_t v57 = v37;
      *(void *)&long long v65 = chipID;
      uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = v40;
      uint64_t v55 = v40;
      id v42 = sub_100F2C724();
      uint64_t v44 = v43;
      uint64_t v45 = v62;
      uint64_t v46 = v58;
      uint64_t v47 = MACAddress.udid.getter();
      *(void *)&long long v65 = v36;
      *((void *)&v65 + 1) = v38;
      uint64_t v66 = v39;
      uint64_t v67 = v41;
      id v68 = v42;
      uint64_t v69 = v44;
      uint64_t v70 = v47;
      uint64_t v71 = v48;
      char v72 = v54;
      uint64_t v73 = v56;
      sub_100A46CC8();
      uint64_t v49 = v46 + *(int *)(v45 + 24);
      uint64_t v50 = type metadata accessor for UUID();
      uint64_t v51 = *(void *)(v50 - 8);
      uint64_t v52 = (uint64_t)v61;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 16))(v61, v49, v50);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v52, 0, 1, v50);
      sub_1009750B0(v52, &v65, v59, v60);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      return (id)sub_10001DAB4(v52, &qword_101638CF0);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003832DC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v179 = a2;
  uint64_t v4 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v4 - 8);
  v177 = (char *)&v171 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10000588C(&qword_101638CF0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v172 = (uint64_t)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v174 = (uint64_t)&v171 - v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v181 = v10;
  uint64_t v182 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v176 = (char *)&v171 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v178 = (char *)&v171 - v14;
  uint64_t v15 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v171 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v18 - 8);
  unint64_t v20 = (char *)&v171 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v175 = (uint64_t)&v171 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v173 = (uint64_t)&v171 - v26;
  __chkstk_darwin(v25);
  uint64_t v180 = (uint64_t)&v171 - v27;
  uint64_t v29 = *a1;
  unint64_t v28 = a1[1];
  long long v183 = sub_100ACD578(v29, v28);
  swift_bridgeObjectRetain();
  sub_10038E300(&v183, (uint64_t (*)(void *))sub_100394CF0);
  if (v2) {
    goto LABEL_72;
  }
  swift_bridgeObjectRelease();
  if (v183[2])
  {
    sub_1003B6E14((uint64_t)v183 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80)), (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v20, 1, 1, v21);
  }
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    sub_10001DAB4((uint64_t)v20, &qword_10163B9F0);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100010324(v30, (uint64_t)qword_10170F068);
    sub_1000361E0(v29, v28);
    sub_1000361E0(v29, v28);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v171 = 0;
      uint64_t v33 = swift_slowAlloc();
      long long v183 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 141558275;
      uint64_t v185 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v33 + 12) = 2081;
      sub_1000361E0(v29, v28);
      static String.Encoding.utf8.getter();
      uint64_t v34 = String.init(data:encoding:)();
      if (!v35) {
        uint64_t v34 = Data.hexString.getter();
      }
      uint64_t v36 = v34;
      unint64_t v37 = v35;
      sub_10001CFB8(v29, v28);
      uint64_t v185 = sub_1008FA0F0(v36, v37, (uint64_t *)&v183);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(v29, v28);
      sub_10001CFB8(v29, v28);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing beacon record for %{private,mask.hash}s.", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(v29, v28);
      sub_10001CFB8(v29, v28);
    }
    int v61 = (int *)type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
    uint64_t v62 = v179;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v182 + 56))((char *)v179 + v61[7], 1, 1, v181);
    *(_OWORD *)uint64_t v62 = xmmword_101347BB0;
    *((_OWORD *)v62 + 1) = xmmword_101347BB0;
    v62[4] = v29;
    v62[5] = v28;
    uint64_t v63 = (uint64_t *)((char *)v62 + v61[8]);
    void *v63 = 0;
    v63[1] = 0;
    uint64_t v64 = (uint64_t *)((char *)v62 + v61[9]);
    *uint64_t v64 = 0;
    v64[1] = 0;
    (*(void (**)(uint64_t *, void, uint64_t, int *))(*((void *)v61 - 1) + 56))(v62, 0, 1, v61);
    return sub_1000361E0(v29, v28);
  }
  uint64_t v38 = v180;
  sub_1003B6008((uint64_t)v20, v180, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_1003B6E14(v38 + *(int *)(v21 + 24), (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v66 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
    uint64_t v67 = &v17[v66[12]];
    uint64_t v69 = *(void **)v67;
    uint64_t v68 = *((void *)v67 + 1);
    uint64_t v70 = &v17[v66[16]];
    uint64_t v71 = *(void **)v70;
    uint64_t v72 = *((void *)v70 + 1);
    uint64_t v73 = &v17[v66[20]];
    uint64_t v75 = *(void **)v73;
    uint64_t v74 = *((void *)v73 + 1);
    uint64_t v76 = v176;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v176, v17, v181);
    long long v183 = v71;
    uint64_t v184 = v72;
    sub_1000336D4();
    uint64_t v77 = Data.init<A>(hexString:)();
    if (v78 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v93 = v77;
      unint64_t v94 = v78;
      long long v183 = v69;
      uint64_t v184 = v68;
      uint64_t v95 = Data.init<A>(hexString:)();
      if (v96 >> 60 == 15)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v101 = v95;
        unint64_t v102 = v96;
        long long v183 = v75;
        uint64_t v184 = v74;
        uint64_t v103 = Data.init<A>(hexString:)();
        if (v104 >> 60 != 15)
        {
          uint64_t v125 = v104;
          v178 = (char *)v103;
          uint64_t v171 = 0;
          uint64_t v127 = v181;
          uint64_t v126 = v182;
          uint64_t v128 = v172;
          (*(void (**)(uint64_t, char *, uint64_t))(v182 + 16))(v172, v76, v181);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v126 + 56))(v128, 0, 1, v127);
          uint64_t v129 = sub_100D1B318();
          if (v130 >> 60 == 15)
          {
            v177 = 0;
            uint64_t v175 = 0;
          }
          else
          {
            uint64_t v145 = v129;
            unint64_t v146 = v130;
            uint64_t v147 = sub_1002AA5D4(v129, v130);
            unint64_t v149 = v148;
            sub_100037A24(v145, v146);
            v177 = (char *)Data.hexString.getter();
            uint64_t v175 = v150;
            uint64_t v151 = v147;
            uint64_t v76 = v176;
            sub_10001CFB8(v151, v149);
          }
          uint64_t v152 = sub_100D1B318();
          if (v153 >> 60 == 15)
          {
            uint64_t v154 = 0;
            uint64_t v155 = 0;
          }
          else
          {
            unint64_t v156 = v153;
            uint64_t v157 = v152;
            switch(v153 >> 62)
            {
              case 1uLL:
                LODWORD(v158) = HIDWORD(v152) - v152;
                if (__OFSUB__(HIDWORD(v152), v152)) {
                  goto LABEL_70;
                }
                uint64_t v158 = (int)v158;
LABEL_63:
                if (v158 < -1) {
                  goto LABEL_69;
                }
LABEL_64:
                uint64_t v161 = Data.subdata(in:)();
                unint64_t v163 = v162;
                sub_100037A24(v157, v156);
                uint64_t v154 = Data.hexString.getter();
                uint64_t v155 = v164;
                sub_10001CFB8(v161, v163);
                uint64_t v76 = v176;
                break;
              case 2uLL:
                uint64_t v160 = *(void *)(v152 + 16);
                uint64_t v159 = *(void *)(v152 + 24);
                BOOL v134 = __OFSUB__(v159, v160);
                uint64_t v158 = v159 - v160;
                if (!v134) {
                  goto LABEL_63;
                }
                goto LABEL_71;
              default:
                goto LABEL_64;
            }
          }
          (*(void (**)(char *, uint64_t))(v182 + 8))(v76, v181);
          sub_1003B61EC(v180, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          long long v165 = v178;
          long long v166 = v179;
          *long long v179 = v93;
          v166[1] = v94;
          v166[2] = v101;
          v166[3] = v102;
          v166[4] = (uint64_t)v165;
          v166[5] = v125;
          long long v167 = (int *)type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
          sub_10001D608(v172, (uint64_t)v166 + v167[7], &qword_101638CF0);
          uint64_t v168 = (uint64_t *)((char *)v166 + v167[8]);
          uint64_t v169 = v175;
          *uint64_t v168 = v177;
          v168[1] = v169;
          v170 = (uint64_t *)((char *)v166 + v167[9]);
          uint64_t *v170 = v154;
          v170[1] = v155;
          return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v167 - 1) + 56))(v166, 0, 1, v167);
        }
        sub_100037A24(v101, v102);
      }
      sub_100037A24(v93, v94);
    }
    (*(void (**)(char *, uint64_t))(v182 + 8))(v76, v181);
    sub_1003B61EC(v180, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v105 = type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v179, 1, 1, v105);
  }
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v171 = 0;
    uint64_t v40 = (int *)sub_10000588C(&qword_1016555E0);
    uint64_t v41 = &v17[v40[12]];
    id v42 = *(void **)v41;
    uint64_t v43 = *((void *)v41 + 1);
    uint64_t v44 = &v17[v40[16]];
    uint64_t v46 = *(void **)v44;
    uint64_t v45 = *((void *)v44 + 1);
    uint64_t v47 = &v17[v40[20]];
    uint64_t v48 = *(void **)v47;
    uint64_t v49 = *((void *)v47 + 1);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v178, v17, v181);
    long long v183 = v48;
    uint64_t v184 = v49;
    sub_1000336D4();
    uint64_t v50 = Data.init<A>(hexString:)();
    if (v51 >> 60 == 15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v52 = type metadata accessor for Logger();
      sub_100010324(v52, (uint64_t)qword_10170F068);
      uint64_t v53 = v180;
      uint64_t v54 = v173;
      sub_1003B6E14(v180, v173, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v55, v56))
      {
        uint64_t v57 = swift_slowAlloc();
        long long v183 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v57 = 141558275;
        uint64_t v185 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v57 + 12) = 2081;
        uint64_t v58 = sub_101110C7C();
        uint64_t v185 = sub_1008FA0F0(v58, v59, (uint64_t *)&v183);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1003B61EC(v54, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "Invalid serialNumber for %{private,mask.hash}s", (uint8_t *)v57, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v182 + 8))(v178, v181);
        uint64_t v60 = v180;
      }
      else
      {

        sub_1003B61EC(v54, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v178, v181);
        uint64_t v60 = v53;
      }
      sub_1003B61EC(v60, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v99 = v179;
      uint64_t v100 = type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v99, 1, 1, v100);
    }
    uint64_t v87 = v50;
    uint64_t v88 = v51;
    if (v45)
    {
      long long v183 = v46;
      uint64_t v184 = v45;
      uint64_t v89 = Data.init<A>(hexString:)();
      uint64_t v176 = v90;
      v177 = (char *)v89;
      uint64_t v91 = v180;
      if (v43)
      {
LABEL_29:
        long long v183 = v42;
        uint64_t v184 = v43;
        uint64_t v175 = Data.init<A>(hexString:)();
        uint64_t v173 = v92;
LABEL_42:
        uint64_t v106 = v181;
        uint64_t v107 = v182;
        uint64_t v108 = v174;
        (*(void (**)(uint64_t, char *, uint64_t))(v182 + 16))(v174, v178, v181);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56))(v108, 0, 1, v106);
        uint64_t v109 = sub_100D1B318();
        if (v110 >> 60 == 15)
        {
          uint64_t v111 = 0;
          uint64_t v112 = 0;
        }
        else
        {
          uint64_t v113 = v109;
          unint64_t v114 = v110;
          uint64_t v115 = sub_1002AA5D4(v109, v110);
          unint64_t v117 = v116;
          sub_100037A24(v113, v114);
          uint64_t v111 = Data.hexString.getter();
          uint64_t v112 = v118;
          uint64_t v91 = v180;
          sub_10001CFB8(v115, v117);
        }
        uint64_t v119 = sub_100D1B318();
        if (v120 >> 60 == 15)
        {
          uint64_t v121 = 0;
          uint64_t v122 = 0;
LABEL_55:
          (*(void (**)(char *, uint64_t))(v182 + 8))(v178, v181);
          sub_1003B61EC(v91, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          long long v139 = v179;
          long long v140 = v176;
          *long long v179 = (uint64_t)v177;
          v139[1] = (uint64_t)v140;
          uint64_t v141 = v173;
          v139[2] = v175;
          v139[3] = v141;
          v139[4] = v87;
          v139[5] = v88;
          long long v142 = (int *)type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
          sub_10001D608(v174, (uint64_t)v139 + v142[7], &qword_101638CF0);
          long long v143 = (uint64_t *)((char *)v139 + v142[8]);
          *long long v143 = v111;
          v143[1] = v112;
          long long v144 = (uint64_t *)((char *)v139 + v142[9]);
          *long long v144 = v121;
          v144[1] = v122;
          return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v142 - 1) + 56))(v139, 0, 1, v142);
        }
        unint64_t v123 = v120;
        uint64_t v124 = v119;
        switch(v120 >> 62)
        {
          case 1uLL:
            LODWORD(v131) = HIDWORD(v119) - v119;
            if (__OFSUB__(HIDWORD(v119), v119)) {
              goto LABEL_67;
            }
            uint64_t v131 = (int)v131;
LABEL_53:
            if (v131 >= -1)
            {
LABEL_54:
              uint64_t v135 = Data.subdata(in:)();
              unint64_t v137 = v136;
              sub_100037A24(v124, v123);
              uint64_t v121 = Data.hexString.getter();
              uint64_t v122 = v138;
              sub_10001CFB8(v135, v137);
              uint64_t v91 = v180;
              goto LABEL_55;
            }
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
            break;
          case 2uLL:
            uint64_t v133 = *(void *)(v119 + 16);
            uint64_t v132 = *(void *)(v119 + 24);
            BOOL v134 = __OFSUB__(v132, v133);
            uint64_t v131 = v132 - v133;
            if (!v134) {
              goto LABEL_53;
            }
            goto LABEL_68;
          default:
            goto LABEL_54;
        }
LABEL_72:
        swift_release();
        __break(1u);
        JUMPOUT(0x1003845BCLL);
      }
    }
    else
    {
      uint64_t v176 = (char *)0xF000000000000000;
      v177 = 0;
      uint64_t v91 = v180;
      if (v43) {
        goto LABEL_29;
      }
    }
    uint64_t v175 = 0;
    uint64_t v173 = 0xF000000000000000;
    goto LABEL_42;
  }
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v79 = type metadata accessor for Logger();
  sub_100010324(v79, (uint64_t)qword_10170F068);
  uint64_t v80 = v175;
  sub_1003B6E14(v38, v175, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  unint64_t v81 = Logger.logObject.getter();
  os_log_type_t v82 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v81, v82))
  {
    uint64_t v83 = swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    long long v183 = (void *)v182;
    *(_DWORD *)uint64_t v83 = 141558275;
    uint64_t v185 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v83 + 12) = 2081;
    uint64_t v171 = 0;
    uint64_t v84 = sub_101110C7C();
    uint64_t v185 = sub_1008FA0F0(v84, v85, (uint64_t *)&v183);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1003B61EC(v80, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    _os_log_impl((void *)&_mh_execute_header, v81, v82, "Unsupported beacon %{private,mask.hash}s", (uint8_t *)v83, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v86 = v180;
  }
  else
  {

    sub_1003B61EC(v80, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v86 = v38;
  }
  sub_1003B61EC(v86, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v97 = v179;
  uint64_t v98 = type metadata accessor for AirPodsUnpairData.DeviceUnpairData(0);
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v97, 1, 1, v98);
  return sub_1003B61EC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
}