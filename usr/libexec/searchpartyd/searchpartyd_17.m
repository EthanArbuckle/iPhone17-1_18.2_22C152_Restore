unint64_t sub_100BDC264()
{
  unint64_t result;

  result = qword_10165AD48;
  if (!qword_10165AD48)
  {
    result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD48);
  }
  return result;
}

unint64_t sub_100BDC2B8()
{
  unint64_t result = qword_10165AD50;
  if (!qword_10165AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD50);
  }
  return result;
}

unint64_t sub_100BDC30C()
{
  unint64_t result = qword_10165AD58;
  if (!qword_10165AD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD58);
  }
  return result;
}

uint64_t sub_100BDC360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FetchResponse.SearchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BDC3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FetchResponse.SearchResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BDC428(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FetchResponse.SearchResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BDC484(uint64_t a1)
{
  return a1;
}

unint64_t sub_100BDC4D0()
{
  unint64_t result = qword_10165AD68;
  if (!qword_10165AD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD68);
  }
  return result;
}

uint64_t sub_100BDC524(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10000592C(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for FetchResponse.RawSearchResult(uint64_t a1)
{
  sub_10001CFB8(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FetchResponse.RawSearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FetchResponse.RawSearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FetchResponse.RawSearchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FetchResponse.RawSearchResult()
{
  return &type metadata for FetchResponse.RawSearchResult;
}

unsigned char *storeEnumTagSinglePayload for FetchResponse.RawSearchResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BDC810);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchResponse.RawSearchResult.CodingKeys()
{
  return &type metadata for FetchResponse.RawSearchResult.CodingKeys;
}

__n128 initializeWithTake for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload()
{
  return &type metadata for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload;
}

uint64_t _s12searchpartyd24OwnedDeviceFetchResponseV25AcsnDeviceLocationPayloadVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PencilSecureLocationFetchResponse.OwnDeviceLocationPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for PencilSecureLocationFetchResponse.OwnDeviceLocationPayload(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for PencilSecureLocationFetchResponse.OwnDeviceLocationPayload(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PencilSecureLocationFetchResponse.OwnDeviceLocationPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.OwnDeviceLocationPayload()
{
  return &type metadata for OwnedDeviceFetchResponse.OwnDeviceLocationPayload;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.CodingKeys()
{
  return &type metadata for OwnedDeviceFetchResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchResponse.CodingKeys()
{
  return &type metadata for FetchResponse.CodingKeys;
}

unsigned char *_s12searchpartyd13FetchResponseV6StatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BDCAF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchResponse.Status()
{
  return &type metadata for FetchResponse.Status;
}

unint64_t sub_100BDCB34()
{
  unint64_t result = qword_10165AD80;
  if (!qword_10165AD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD80);
  }
  return result;
}

unint64_t sub_100BDCB8C()
{
  unint64_t result = qword_10165AD88;
  if (!qword_10165AD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD88);
  }
  return result;
}

unint64_t sub_100BDCBE4()
{
  unint64_t result = qword_10165AD90;
  if (!qword_10165AD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD90);
  }
  return result;
}

unint64_t sub_100BDCC3C()
{
  unint64_t result = qword_10165AD98;
  if (!qword_10165AD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AD98);
  }
  return result;
}

unint64_t sub_100BDCC94()
{
  unint64_t result = qword_10165ADA0;
  if (!qword_10165ADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADA0);
  }
  return result;
}

unint64_t sub_100BDCCEC()
{
  unint64_t result = qword_10165ADA8;
  if (!qword_10165ADA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADA8);
  }
  return result;
}

unint64_t sub_100BDCD44()
{
  unint64_t result = qword_10165ADB0;
  if (!qword_10165ADB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADB0);
  }
  return result;
}

unint64_t sub_100BDCD9C()
{
  unint64_t result = qword_10165ADB8;
  if (!qword_10165ADB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADB8);
  }
  return result;
}

unint64_t sub_100BDCDF4()
{
  unint64_t result = qword_10165ADC0;
  if (!qword_10165ADC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADC0);
  }
  return result;
}

unint64_t sub_100BDCE4C()
{
  unint64_t result = qword_10165ADC8;
  if (!qword_10165ADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADC8);
  }
  return result;
}

unint64_t sub_100BDCEA0()
{
  unint64_t result = qword_10165ADD0;
  if (!qword_10165ADD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADD0);
  }
  return result;
}

uint64_t sub_100BDCEF4(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10165ADD8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10001CD44(a1, v7);
  sub_100BDD180();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000588C(&qword_101641CA0);
    v9[15] = 0;
    sub_100BDC524((unint64_t *)&qword_1016475A0, &qword_101641CA0, (void (*)(void))sub_1004CB378);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v9[12] = 2;
    sub_100BDB454();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_100BDD180()
{
  unint64_t result = qword_10165ADE0;
  if (!qword_10165ADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADE0);
  }
  return result;
}

uint64_t sub_100BDD1D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC0000006F666E49;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656B636150766C74 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100BDD338(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10165AE40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10001CD44(a1, v7);
  sub_100BDDF80();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000588C((uint64_t *)&unk_10164DBD0);
    char v17 = 0;
    sub_1005FB904();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v15;
    char v17 = 1;
    sub_100037AA0();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v9 = v15;
    unint64_t v10 = v16;
    uint64_t v14 = 0;
    sub_10000588C(&qword_10165AD70);
    char v17 = 2;
    sub_1000361E0(v9, v10);
    sub_100BDC524(&qword_10165AD78, &qword_10165AD70, (void (*)(void))sub_1005FB904);
    uint64_t v11 = v14;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v11)
    {
      sub_10001CFB8(v9, v10);
      swift_bridgeObjectRelease();
      uint64_t v12 = v14;
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      if (!v12) {
        sub_10001CFB8(v9, v10);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1000361E0(v9, v10);
      swift_bridgeObjectRetain();
      sub_10001CFB8(v9, v10);
      swift_bridgeObjectRelease();
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      swift_bridgeObjectRelease();
      sub_10001CFB8(v9, v10);
      swift_bridgeObjectRelease();
    }
  }
  return v7;
}

uint64_t sub_100BDD660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEF64616F6C796150;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65566769666E6F63 && a2 == 0xED00006E6F697372 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F43737574617473 && a2 == 0xEA00000000006564)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_100BDD80C(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10165ADE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10001CD44(a1, v7);
  sub_100BDDA98();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10000588C(&qword_10165ADF8);
    v9[15] = 0;
    sub_100BDC524(&qword_10165AE00, &qword_10165ADF8, (void (*)(void))sub_100BDDAEC);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v10;
    v9[14] = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v9[12] = 2;
    sub_100BDB454();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_100BDDA98()
{
  unint64_t result = qword_10165ADF0;
  if (!qword_10165ADF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165ADF0);
  }
  return result;
}

unint64_t sub_100BDDAEC()
{
  unint64_t result = qword_10165AE08;
  if (!qword_10165AE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE08);
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.CodingKeys()
{
  return &type metadata for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.CodingKeys;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.OwnDeviceLocationPayload.CodingKeys()
{
  return &type metadata for OwnedDeviceFetchResponse.OwnDeviceLocationPayload.CodingKeys;
}

uint64_t destroy for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10001CFB8(*(void *)(a1 + 8), *(void *)(a1 + 16));

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  unint64_t v5 = a2[2];
  swift_bridgeObjectRetain();
  sub_1000361E0(v4, v5);
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  unint64_t v5 = a2[2];
  sub_1000361E0(v4, v5);
  uint64_t v6 = a1[1];
  unint64_t v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_10001CFB8(v6, v7);
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(void *a1, uint64_t a2)
{
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a1[1];
  unint64_t v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_10001CFB8(v4, v5);
  a1[3] = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload()
{
  return &type metadata for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload;
}

unint64_t sub_100BDDD74()
{
  unint64_t result = qword_10165AE10;
  if (!qword_10165AE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE10);
  }
  return result;
}

unint64_t sub_100BDDDCC()
{
  unint64_t result = qword_10165AE18;
  if (!qword_10165AE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE18);
  }
  return result;
}

unint64_t sub_100BDDE24()
{
  unint64_t result = qword_10165AE20;
  if (!qword_10165AE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE20);
  }
  return result;
}

unint64_t sub_100BDDE7C()
{
  unint64_t result = qword_10165AE28;
  if (!qword_10165AE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE28);
  }
  return result;
}

unint64_t sub_100BDDED4()
{
  unint64_t result = qword_10165AE30;
  if (!qword_10165AE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE30);
  }
  return result;
}

unint64_t sub_100BDDF2C()
{
  unint64_t result = qword_10165AE38;
  if (!qword_10165AE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE38);
  }
  return result;
}

unint64_t sub_100BDDF80()
{
  unint64_t result = qword_10165AE48;
  if (!qword_10165AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE48);
  }
  return result;
}

unsigned char *_s12searchpartyd24OwnedDeviceFetchResponseV25AcsnDeviceLocationPayloadV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BDE0A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload.CodingKeys()
{
  return &type metadata for OwnedDeviceFetchResponse.AcsnDeviceLocationPayload.AcsnLocationsEncodedPayload.CodingKeys;
}

unint64_t sub_100BDE0DC()
{
  unint64_t result = qword_10165AE50;
  if (!qword_10165AE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE50);
  }
  return result;
}

unint64_t sub_100BDE134()
{
  unint64_t result = qword_10165AE58;
  if (!qword_10165AE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165AE58);
  }
  return result;
}

unint64_t sub_100BDE18C()
{
  unint64_t result = qword_10165AE60[0];
  if (!qword_10165AE60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10165AE60);
  }
  return result;
}

uint64_t sub_100BDE1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v29 = *(void *)(a1 + 16);
  uint64_t v4 = type metadata accessor for FailableRecord();
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  __chkstk_darwin(v5);
  v28 = (char *)&v26 - v6;
  uint64_t v7 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v33 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C((uint64_t *)&unk_101653C90);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DirectorySequence();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v20 = *(int *)(a1 + 40);
  uint64_t v30 = v2;
  uint64_t v21 = v2 + v20;
  sub_100BDE628(v2 + v20, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10001DAB4((uint64_t)v15, (uint64_t *)&unk_101653C90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v34, 1, 1, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
  DirectorySequence.next()();
  uint64_t v22 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v10) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    sub_10001DAB4((uint64_t)v9, &qword_101649E40);
    sub_10001DAB4(v21, (uint64_t *)&unk_101653C90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v21, 1, 1, v16);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v34, 1, 1, v4);
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v12, v9, v10);
  v25 = v28;
  sub_100BDE690(v12, v30, v29, *(void *)(v27 + 24), v28);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v34, v25, v32);
}

uint64_t sub_100BDE628(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_101653C90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BDE690@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  v130 = a5;
  uint64_t v126 = a4;
  uint64_t v8 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Optional();
  uint64_t v119 = *(void *)(v11 - 8);
  uint64_t v120 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  v124 = (char *)v113 - v13;
  uint64_t v131 = a3;
  uint64_t v125 = *(void *)(a3 - 8);
  __chkstk_darwin(v12);
  v118 = (char *)v113 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v132 = *(void *)(v15 - 8);
  uint64_t v133 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v113 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)v113 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  v122 = (char *)v113 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v123 = (char *)v113 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v28 = (char *)v113 - v27;
  __chkstk_darwin(v26);
  v128 = (char *)v113 - v29;
  uint64_t v30 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v30 - 8);
  uint64_t v32 = (char *)v113 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for UUID();
  v127 = *(void (***)(void, uint64_t))(v129 - 8);
  uint64_t v33 = __chkstk_darwin(v129);
  v121 = (char *)v113 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v36 = (char *)v113 - v35;
  v134 = a1;
  if (URL.pathExtension.getter() == 0xD000000000000010 && v37 == 0x80000001013FB020)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    if (qword_101636F50 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100010324(v39, (uint64_t)qword_10170E9E8);
    uint64_t v40 = v132;
    uint64_t v41 = v133;
    v42 = *(void (**)(char *, void *, uint64_t))(v132 + 16);
    v43 = v18;
    v42(v18, v134, v133);
    v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v129 = swift_slowAlloc();
      uint64_t v136 = v129;
      *(_DWORD *)uint64_t v46 = 141558275;
      uint64_t v135 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2081;
      sub_100BDF8AC();
      uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v135 = sub_1008FA0F0(v47, v48, &v136);
      uint64_t v41 = v133;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v132 + 8))(v43, v41);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Tombstoned file extension. Skipping file %{private,mask.hash}s", (uint8_t *)v46, 0x16u);
      swift_arrayDestroy();
      uint64_t v40 = v132;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v43, v41);
    }

    v49 = v130;
    v50 = v134;
    v42(v130, v134, v41);
    v51 = &v49[*(int *)(type metadata accessor for BeaconStoreFileRecord() + 20)];
    v42(v51, v50, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v51, 0, 1, v41);
    goto LABEL_11;
  }
  uint64_t v117 = a2;
  char v38 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_5;
  }
  v115 = v10;
  if (URL.pathExtension.getter() == 0x64726F636572 && v56 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    uint64_t v57 = v117;
  }
  else
  {
    char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v57 = v117;
    if ((v58 & 1) == 0)
    {
      if (qword_101636F50 != -1) {
        swift_once();
      }
      uint64_t v92 = type metadata accessor for Logger();
      sub_100010324(v92, (uint64_t)qword_10170E9E8);
      uint64_t v93 = v132;
      uint64_t v94 = v133;
      (*(void (**)(char *, void *, uint64_t))(v132 + 16))(v21, v134, v133);
      v66 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v66, v95))
      {
        uint64_t v96 = swift_slowAlloc();
        v134 = (void *)swift_slowAlloc();
        uint64_t v136 = (uint64_t)v134;
        *(_DWORD *)uint64_t v96 = 141558275;
        uint64_t v135 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v96 + 12) = 2081;
        sub_100BDF8AC();
        uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v135 = sub_1008FA0F0(v97, v98, &v136);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v21, v94);
        _os_log_impl((void *)&_mh_execute_header, v66, v95, "Invalid extension. Skipping file %{private,mask.hash}s", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v93 + 8))(v21, v94);
      }
      goto LABEL_34;
    }
  }
  v59 = v128;
  URL.deletingPathExtension()();
  URL.lastPathComponent.getter();
  uint64_t v60 = v132;
  uint64_t v61 = v132 + 8;
  v116 = *(void (**)(char *, uint64_t))(v132 + 8);
  v116(v59, v133);
  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  v62 = v127;
  uint64_t v63 = v129;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v127[6])(v32, 1, v129) != 1)
  {
    v71 = (void (*)(char *, char *, uint64_t))v62[4];
    v72 = v36;
    v71(v36, v32, v63);
    uint64_t v73 = v131;
    v113[1] = *(int *)(type metadata accessor for FailableRecordSequence() + 36);
    v75 = *(void **)(v60 + 16);
    uint64_t v74 = v60 + 16;
    uint64_t v76 = v133;
    v134 = v75;
    ((void (*)(char *, uint64_t, uint64_t))v75)(v59, v57, v133);
    swift_retain();
    v77 = v124;
    v114 = v72;
    sub_100B6ACC4();
    swift_release();
    v78 = v116;
    v116(v59, v76);
    uint64_t v79 = v125;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v77, 1, v73) != 1)
    {
      ((void (**)(char *, uint64_t))v127)[1](v114, v129);
      v99 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
      v100 = v118;
      v99(v118, v77, v73);
      v101 = v130;
      v99(v130, v100, v73);
      uint64_t v52 = type metadata accessor for FailableRecord();
      swift_storeEnumTagMultiPayload();
      v53 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
      v54 = v101;
      return v53((uint64_t)v54, 0, 1, v52);
    }
    (*(void (**)(char *, uint64_t))(v119 + 8))(v77, v120);
    uint64_t v80 = v133;
    ((void (*)(char *, uint64_t, uint64_t))v134)(v59, v117, v133);
    uint64_t v120 = URL.description.getter();
    unint64_t v82 = v81;
    uint64_t v126 = v61;
    v78(v59, v80);
    if (qword_101636F50 != -1) {
      swift_once();
    }
    uint64_t v125 = v74;
    uint64_t v83 = type metadata accessor for Logger();
    sub_100010324(v83, (uint64_t)qword_10170E9E8);
    v84 = v127;
    v85 = v121;
    ((void (*)(char *, char *, uint64_t))v127[2])(v121, v114, v129);
    swift_bridgeObjectRetain();
    v86 = Logger.logObject.getter();
    os_log_type_t v87 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      uint64_t v119 = swift_slowAlloc();
      uint64_t v136 = v119;
      *(_DWORD *)uint64_t v88 = 141558787;
      uint64_t v135 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 12) = 2081;
      uint64_t v89 = UUID.uuidString.getter();
      uint64_t v135 = sub_1008FA0F0(v89, v90, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v91 = (void (**)(void, uint64_t))v84[1];
      v124 = (char *)((unint64_t)(v84 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      v127 = v91;
      ((void (*)(char *, uint64_t))v91)(v85, v129);
      *(_WORD *)(v88 + 22) = 2160;
      uint64_t v135 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v88 + 32) = 2081;
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_1008FA0F0(v120, v82, &v136);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "Could not read item %{private,mask.hash}s for records at: %{private,mask.hash}s", (uint8_t *)v88, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v103 = (void (**)(void, uint64_t))v84[1];
      v124 = (char *)((unint64_t)(v84 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      v127 = v103;
      ((void (*)(char *, uint64_t))v103)(v85, v129);

      swift_bridgeObjectRelease_n();
    }
    uint64_t v104 = v117;
    v105 = v123;
    uint64_t v106 = v133;
    ((void (*)(char *, uint64_t, uint64_t))v134)(v123, v117, v133);
    swift_retain();
    UUID.uuidString.getter();
    v107 = v122;
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    URL.appendingPathExtension(_:)();
    v108 = v116;
    v116(v107, v106);
    swift_release();
    v108(v105, v106);
    ((void (*)(char *, uint64_t, uint64_t))v134)(v105, v104, v106);
    swift_retain();
    v109 = v114;
    UUID.uuidString.getter();
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    uint64_t v110 = (uint64_t)v115;
    URL.appendingPathExtension(_:)();
    v108(v107, v106);
    swift_release();
    v108(v105, v106);
    ((void (*)(char *, uint64_t))v127)(v109, v129);
    uint64_t v111 = v132;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v132 + 56))(v110, 0, 1, v106);
    v49 = v130;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v130, v128, v106);
    uint64_t v112 = type metadata accessor for BeaconStoreFileRecord();
    sub_1000201F8(v110, (uint64_t)&v49[*(int *)(v112 + 20)]);
LABEL_11:
    uint64_t v52 = type metadata accessor for FailableRecord();
    swift_storeEnumTagMultiPayload();
    v53 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
    v54 = v49;
    return v53((uint64_t)v54, 0, 1, v52);
  }
  uint64_t v126 = v61;
  sub_10001DAB4((uint64_t)v32, &qword_101638CF0);
  if (qword_101636F50 != -1) {
    swift_once();
  }
  uint64_t v64 = type metadata accessor for Logger();
  sub_100010324(v64, (uint64_t)qword_10170E9E8);
  uint64_t v65 = v133;
  (*(void (**)(char *, void *, uint64_t))(v60 + 16))(v28, v134, v133);
  v66 = Logger.logObject.getter();
  os_log_type_t v67 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = swift_slowAlloc();
    v134 = (void *)swift_slowAlloc();
    uint64_t v136 = (uint64_t)v134;
    *(_DWORD *)uint64_t v68 = 141558275;
    uint64_t v135 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v68 + 12) = 2081;
    sub_100BDF8AC();
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v135 = sub_1008FA0F0(v69, v70, &v136);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v116(v28, v65);
    _os_log_impl((void *)&_mh_execute_header, v66, v67, "Invalid file identifier at URL: %{private,mask.hash}s", (uint8_t *)v68, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    v116(v28, v65);
  }
LABEL_34:

  uint64_t v102 = type metadata accessor for FailableRecord();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v130, 1, 1, v102);
}

unint64_t sub_100BDF8AC()
{
  unint64_t result = qword_1016605A0;
  if (!qword_1016605A0)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1016605A0);
  }
  return result;
}

uint64_t type metadata accessor for FailableRecordSequence()
{
  return sub_1000103A0();
}

void sub_100BDF91C()
{
  type metadata accessor for URL();
  if (v0 <= 0x3F)
  {
    sub_100BE0594();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100BDF9F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 40);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 36)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 36));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for DirectorySequence();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_retain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_10000588C((uint64_t *)&unk_101653C90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
  }
  return a1;
}

uint64_t sub_100BDFBA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 40);
  uint64_t v6 = type metadata accessor for DirectorySequence();
  uint64_t v9 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v5, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v5, v6);
  }
  return result;
}

uint64_t sub_100BDFCB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 40);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DirectorySequence();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_retain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_10000588C((uint64_t *)&unk_101653C90);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100BDFE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DirectorySequence();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 24))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000588C((uint64_t *)&unk_101653C90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100BDFFEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 40);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DirectorySequence();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_10000588C((uint64_t *)&unk_101653C90);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  return a1;
}

uint64_t sub_100BE0144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 36)) = *(void *)(a2 + *(int *)(a3 + 36));
  swift_release();
  uint64_t v7 = *(int *)(a3 + 40);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DirectorySequence();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10000588C((uint64_t *)&unk_101653C90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_100BE030C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE0320);
}

uint64_t sub_100BE0320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_101653C90);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100BE0450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE0464);
}

uint64_t sub_100BE0464(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for URL();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_101653C90);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

void sub_100BE0594()
{
  if (!qword_10165AEE8)
  {
    type metadata accessor for DirectorySequence();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10165AEE8);
    }
  }
}

uint64_t sub_100BE05EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100BE0608@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v9 - 8);
  uint64_t v65 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BeaconObservation();
  uint64_t v75 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v73 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v74 = (char *)&v59 - v15;
  __chkstk_darwin(v14);
  uint64_t v63 = (uint64_t)&v59 - v16;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v68 = *(void *)(v17 - 8);
  uint64_t v69 = v17;
  __chkstk_darwin(v17);
  os_log_type_t v67 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  if (qword_101636CB8 != -1) {
LABEL_43:
  }
    swift_once();
  uint64_t v19 = OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v66 = v3;
  uint64_t v20 = v79;
  if (*(void *)(v79 + 16) && (unint64_t v21 = sub_1007240CC(a1 + v19), (v22 & 1) != 0))
  {
    uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_1007100C0(v23);
    swift_bridgeObjectRelease();
    size_t v25 = sub_100B752E8((uint64_t)v24);
    swift_release();
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t v80 = _swiftEmptyArrayStorage;
    uint64_t v72 = *(void *)(v25 + 16);
    if (v72)
    {
      uint64_t v60 = a1;
      uint64_t v61 = v8;
      unint64_t v62 = a2;
      unint64_t v27 = 0;
      a1 = -1;
      uint64_t v3 = (uint64_t)v74;
      size_t v70 = v25;
      uint64_t v71 = v11;
      while (1)
      {
        if (v27 >= *(void *)(v25 + 16))
        {
          __break(1u);
          goto LABEL_43;
        }
        unint64_t v28 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        uint64_t v77 = *(void *)(v75 + 72);
        unint64_t v78 = v27 + 1;
        unint64_t v76 = v28;
        sub_1001A2590(v25 + v28 + v77 * v27, v3);
        sub_1004DCCB0();
        uint64_t v29 = Set.init(minimumCapacity:)();
        uint64_t v30 = 0;
        for (uint64_t i = v29 + 56; ; uint64_t i = v29 + 56)
        {
          while (1)
          {
            uint64_t v8 = *((char *)&off_1015A5970 + v30++ + 32);
            Hasher.init(_seed:)();
            Swift::UInt v32 = qword_101379A48[v8];
            Hasher._combine(_:)(v32);
            Swift::Int v33 = Hasher._finalize()();
            uint64_t v34 = -1 << *(unsigned char *)(v29 + 32);
            a2 = v33 & ~v34;
            if (((*(void *)(i + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_17;
            }
            uint64_t v35 = *(void *)(v29 + 48);
            if (qword_101379A48[*(char *)(v35 + a2)] != v32) {
              break;
            }
LABEL_10:
            if (v30 == 7) {
              goto LABEL_19;
            }
          }
          uint64_t v36 = ~v34;
          while (1)
          {
            a2 = (a2 + 1) & v36;
            if (((*(void *)(i + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            if (qword_101379A48[*(char *)(v35 + a2)] == v32) {
              goto LABEL_10;
            }
          }
LABEL_17:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v79 = v29;
          sub_100DE20D8(v8, a2, isUniquelyReferenced_nonNull_native);
          uint64_t v29 = v79;
          swift_bridgeObjectRelease();
          if (v30 == 7) {
            break;
          }
        }
LABEL_19:
        uint64_t v11 = v71;
        uint64_t v3 = (uint64_t)v74;
        BOOL v38 = sub_100DC7BFC(v74[*(int *)(v71 + 24)], v29);
        swift_bridgeObjectRelease();
        if (v38)
        {
          sub_1001A26B0(v3, v73);
          uint64_t v39 = v80;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1000B77F0(0, v39[2] + 1, 1);
            uint64_t v39 = v80;
          }
          uint64_t v8 = v76;
          unint64_t v41 = v39[2];
          unint64_t v40 = v39[3];
          a2 = v41 + 1;
          if (v41 >= v40 >> 1)
          {
            sub_1000B77F0(v40 > 1, v41 + 1, 1);
            uint64_t v39 = v80;
          }
          v39[2] = a2;
          sub_1001A26B0(v73, (uint64_t)v39 + v8 + v41 * v77);
        }
        else
        {
          sub_1001A2654(v3);
        }
        size_t v25 = v70;
        unint64_t v27 = v78;
        if (v78 == v72)
        {
          uint64_t v26 = v80;
          a2 = v62;
          uint64_t v8 = v61;
          a1 = v60;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  v42 = v67;
  v43 = (void *)SPBeaconTaskNamePlaySound;
  uint64_t v44 = v65;
  sub_100E4D5E0((uint64_t)v26, v65);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v44, 1, v11) == 1)
  {
    sub_10001DAB4(v44, (uint64_t *)&unk_101655530);
    uint64_t v45 = 2;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v69);
    uint64_t v46 = v44;
    uint64_t v47 = v63;
    sub_1001A26B0(v46, v63);
    unsigned int v48 = *(unsigned __int8 *)(v47 + *(int *)(v11 + 24)) - 23;
    if (v48 > 2) {
      uint64_t v45 = 2;
    }
    else {
      uint64_t v45 = qword_101379A30[(char)v48];
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v42, v47 + *(int *)(v11 + 20), v69);
    sub_1001A2654(v47);
  }
  uint64_t v49 = *(void *)(a1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playCommandError);
  if (v49) {
    uint64_t v45 = 3;
  }
  id v50 = v43;
  swift_errorRetain();
  v51.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (v49)
  {
    uint64_t v52 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
  }
  else
  {
    uint64_t v52 = 0;
  }
  id v53 = [objc_allocWithZone((Class)SPBeaconTaskInformation) initWithName:v50 lastUpdated:v51.super.isa error:v52 state:v45];

  uint64_t v54 = a1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playCommandIdentifier;
  swift_beginAccess();
  sub_10001D074(v54, v8, &qword_101638CF0);
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v55 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v8, 1, v55) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v8, v55);
  }
  [v53 setCommandIdentifier:isa];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v67, v69);
  *(void *)a2 = v53;
  return result;
}

uint64_t sub_100BE0E38@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v68 = a1;
  uint64_t v5 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C((uint64_t *)&unk_101655530);
  __chkstk_darwin(v8 - 8);
  uint64_t v64 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BeaconObservation();
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v74 = (char *)&v59 - v14;
  __chkstk_darwin(v13);
  uint64_t v62 = (uint64_t)&v59 - v15;
  uint64_t v67 = type metadata accessor for Date();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  if (qword_101636CB8 != -1) {
LABEL_40:
  }
    swift_once();
  uint64_t v18 = OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  sub_10000588C(&qword_101655540);
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v65 = v3;
  uint64_t v19 = v79;
  if (*(void *)(v79 + 16) && (unint64_t v20 = sub_1007240CC(v68 + v18), (v21 & 1) != 0))
  {
    uint64_t v22 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_1007100C0(v22);
    swift_bridgeObjectRelease();
    size_t v24 = sub_100B752E8((uint64_t)v23);
    swift_release();
    size_t v25 = _swiftEmptyArrayStorage;
    uint64_t v80 = _swiftEmptyArrayStorage;
    uint64_t v72 = *(void *)(v24 + 16);
    if (v72)
    {
      uint64_t v60 = v7;
      unint64_t v61 = a2;
      unint64_t v26 = 0;
      uint64_t v7 = -1;
      uint64_t v3 = (uint64_t)v74;
      uint64_t v70 = v10;
      uint64_t v71 = v17;
      size_t v69 = v24;
      while (1)
      {
        if (v26 >= *(void *)(v24 + 16))
        {
          __break(1u);
          goto LABEL_40;
        }
        uint64_t v27 = *(void *)(v75 + 72);
        unint64_t v77 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        unint64_t v78 = v26 + 1;
        uint64_t v76 = v27;
        sub_1001A2590(v24 + v77 + v27 * v26, v3);
        sub_1004DCCB0();
        uint64_t v28 = Set.init(minimumCapacity:)();
        uint64_t v29 = 0;
        for (uint64_t i = v28 + 56; ; uint64_t i = v28 + 56)
        {
          while (1)
          {
            uint64_t v31 = *((char *)&off_1015A5998 + v29++ + 32);
            Hasher.init(_seed:)();
            Swift::UInt v32 = qword_101379A48[v31];
            Hasher._combine(_:)(v32);
            Swift::Int v33 = Hasher._finalize()();
            uint64_t v34 = -1 << *(unsigned char *)(v28 + 32);
            a2 = v33 & ~v34;
            if (((*(void *)(i + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_17;
            }
            uint64_t v35 = *(void *)(v28 + 48);
            if (qword_101379A48[*(char *)(v35 + a2)] != v32) {
              break;
            }
LABEL_10:
            if (v29 == 7) {
              goto LABEL_19;
            }
          }
          uint64_t v36 = ~v34;
          while (1)
          {
            a2 = (a2 + 1) & v36;
            if (((*(void *)(i + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            if (qword_101379A48[*(char *)(v35 + a2)] == v32) {
              goto LABEL_10;
            }
          }
LABEL_17:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v79 = v28;
          sub_100DE20D8(v31, a2, isUniquelyReferenced_nonNull_native);
          uint64_t v28 = v79;
          swift_bridgeObjectRelease();
          if (v29 == 7) {
            break;
          }
        }
LABEL_19:
        uint64_t v10 = v70;
        uint64_t v3 = (uint64_t)v74;
        BOOL v38 = sub_100DC7BFC(v74[*(int *)(v70 + 24)], v28);
        swift_bridgeObjectRelease();
        if (v38)
        {
          sub_1001A26B0(v3, v73);
          uint64_t v39 = v80;
          char v40 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v17 = v71;
          if ((v40 & 1) == 0)
          {
            sub_1000B77F0(0, v39[2] + 1, 1);
            uint64_t v39 = v80;
          }
          unint64_t v42 = v39[2];
          unint64_t v41 = v39[3];
          a2 = v42 + 1;
          if (v42 >= v41 >> 1)
          {
            sub_1000B77F0(v41 > 1, v42 + 1, 1);
            uint64_t v39 = v80;
          }
          v39[2] = a2;
          sub_1001A26B0(v73, (uint64_t)v39 + v77 + v42 * v76);
        }
        else
        {
          sub_1001A2654(v3);
          uint64_t v17 = v71;
        }
        size_t v24 = v69;
        unint64_t v26 = v78;
        if (v78 == v72)
        {
          size_t v25 = v80;
          a2 = v61;
          uint64_t v7 = v60;
          break;
        }
      }
    }
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    size_t v25 = _swiftEmptyArrayStorage;
  }
  uint64_t v43 = v64;
  sub_100E4D5E0((uint64_t)v25, v64);
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v43, 1, v10) == 1)
  {
    sub_10001DAB4(v43, (uint64_t *)&unk_101655530);
    uint64_t v45 = 2;
  }
  else
  {
    uint64_t v46 = v66;
    uint64_t v47 = v67;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v17, v67);
    uint64_t v48 = v62;
    sub_1001A26B0(v44, v62);
    uint64_t v45 = 2 * (*(unsigned char *)(v48 + *(int *)(v10 + 24)) != 26);
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v17, v48 + *(int *)(v10 + 20), v47);
    sub_1001A2654(v48);
  }
  uint64_t v49 = *(void *)(v68 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopCommandError);
  if (v49) {
    uint64_t v45 = 3;
  }
  id v50 = SPBeaconTaskNameStopSound;
  swift_errorRetain();
  v51.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
  if (v49)
  {
    uint64_t v52 = (void *)_convertErrorToNSError(_:)();
    swift_errorRelease();
  }
  else
  {
    uint64_t v52 = 0;
  }
  id v53 = [objc_allocWithZone((Class)SPBeaconTaskInformation) initWithName:v50 lastUpdated:v51.super.isa error:v52 state:v45];

  uint64_t v54 = v68 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopCommandIdentifier;
  swift_beginAccess();
  sub_10001D074(v54, v7, &qword_101638CF0);
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v56 = *(void *)(v55 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48))(v7, 1, v55) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v7, v55);
  }
  [v53 setCommandIdentifier:isa];

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v17, v67);
  *(void *)a2 = v53;
  return result;
}

uint64_t sub_100BE1674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v53 = a3;
  uint64_t v37 = a2;
  uint64_t v52 = a1;
  uint64_t v43 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v46 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v42 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(v4 + 56);
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v50 = v11 + 16;
  NSDate v51 = v14;
  uint64_t v48 = v13;
  uint64_t v49 = v10;
  v14(v13, a1, v10);
  uint64_t v15 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = (v15 + 24) & ~v15;
  uint64_t v40 = v15 | 7;
  uint64_t v41 = v12 + 7;
  unint64_t v17 = (v12 + 7 + v16) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v4;
  uint64_t v39 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v39(v18 + v16, v13, v10);
  *(void *)(v18 + v17) = v37;
  aBlock[4] = sub_100BEA69C;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015ED0A8;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  unint64_t v20 = v42;
  uint64_t v21 = v43;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v21);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v9, v45);
  swift_release();
  uint64_t v23 = v48;
  uint64_t v22 = v49;
  v51(v48, v52, v49);
  uint64_t v24 = (v15 + 16) & ~v15;
  unint64_t v25 = (v41 + v24) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = v23;
  uint64_t v28 = v39;
  v39(v26 + v24, v27, v22);
  uint64_t v29 = (void *)(v26 + v25);
  uint64_t v30 = v47;
  *uint64_t v29 = v53;
  v29[1] = v30;
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  Swift::UInt v32 = v48;
  uint64_t v31 = v49;
  v51(v48, v52, v49);
  uint64_t v33 = swift_allocObject();
  v28(v33 + v24, v32, v31);
  uint64_t v34 = (void *)(v33 + v25);
  *uint64_t v34 = v53;
  v34[1] = v30;
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100BE1B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10000588C(&qword_101638CF0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_10001D608((uint64_t)v11, (uint64_t)v9, &qword_101638CF0);
  uint64_t v14 = a1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playCommandIdentifier;
  swift_beginAccess();
  sub_100062604((uint64_t)v9, v14, &qword_101638CF0);
  swift_endAccess();
  return sub_100BE3B34(a3);
}

uint64_t sub_100BE1D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v42 = a1;
  uint64_t v32 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v35 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  v31[0] = *(void *)(v3 + 56);
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v41 = v11 + 16;
  uint64_t v43 = v13;
  uint64_t v38 = v10;
  v13((char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  v31[1] = v14 | 7;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v3;
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  uint64_t v39 = v11 + 32;
  uint64_t v40 = v16;
  v16(v15 + ((v14 + 24) & ~v14), (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  aBlock[4] = sub_100BEA278;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015ECF68;
  unint64_t v17 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v44 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v18 = v32;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v18);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v34);
  swift_release();
  uint64_t v19 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v38;
  v43(v19, v42, v38);
  uint64_t v21 = (v14 + 16) & ~v14;
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  v40(v23 + v21, v19, v20);
  uint64_t v24 = (void *)(v23 + v22);
  uint64_t v25 = v36;
  uint64_t v26 = v37;
  void *v24 = v36;
  v24[1] = v26;
  swift_retain();
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  uint64_t v27 = v38;
  v43(v19, v42, v38);
  uint64_t v28 = swift_allocObject();
  v40(v28 + v21, v19, v27);
  uint64_t v29 = (void *)(v28 + v22);
  *uint64_t v29 = v25;
  v29[1] = v26;
  swift_retain();
  Future.addSuccess(block:)();
  swift_release();
  return swift_release();
}

uint64_t sub_100BE2210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_101638CF0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, a2, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  sub_10001D608((uint64_t)v9, (uint64_t)v7, &qword_101638CF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopCommandIdentifier;
  swift_beginAccess();
  sub_100062604((uint64_t)v7, v12, &qword_101638CF0);
  swift_endAccess();
  return sub_100BE6FD0();
}

uint64_t sub_100BE2384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a3;
  uint64_t v29 = a4;
  uint64_t v25 = a2;
  uint64_t v27 = a1;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchQoS.QoSClass.default(_:), v12);
  uint64_t v26 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v9);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  uint64_t v19 = (void *)(v18 + v17);
  uint64_t v20 = v29;
  void *v19 = v28;
  v19[1] = v20;
  *(void *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8)) = v27;
  aBlock[4] = sub_100BEA528;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015ED058;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  swift_errorRetain();
  static DispatchQoS.unspecified.getter();
  uint64_t v34 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v22 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v23 = (void *)v26;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v5, v22);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  return swift_release();
}

uint64_t sub_100BE281C(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4)
{
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_101342130;
  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  *(void *)(v6 + 56) = &type metadata for String;
  *(void *)(v6 + 64) = sub_10000B4CC();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = v9;
  sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
  uint64_t v10 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  return a2(a4);
}

uint64_t sub_100BE2910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v39 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v42 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v32 - v13;
  uint64_t v15 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for DispatchQoS.QoSClass.default(_:), v15);
  uint64_t v35 = static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v19(v14, v33, v8);
  v19(v12, v34, v8);
  uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v21 = (v20 + 16) & ~v20;
  uint64_t v22 = (v10 + v20 + v21) & ~v20;
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
  v24(v23 + v21, v14, v8);
  v24(v23 + v22, v12, v8);
  uint64_t v25 = (void *)(v23 + ((v10 + v22 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v37;
  void *v25 = v36;
  v25[1] = v26;
  aBlock[4] = sub_100BEA3C8;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015ED008;
  uint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v29 = v38;
  uint64_t v28 = v39;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v30 = (void *)v35;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v28);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
  return swift_release();
}

uint64_t sub_100BE2DEC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_101347BA0;
  uint64_t v5 = UUID.uuidString.getter();
  uint64_t v7 = v6;
  *(void *)(v4 + 56) = &type metadata for String;
  unint64_t v8 = sub_10000B4CC();
  *(void *)(v4 + 64) = v8;
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v7;
  uint64_t v9 = UUID.uuidString.getter();
  *(void *)(v4 + 96) = &type metadata for String;
  *(void *)(v4 + 104) = v8;
  *(void *)(v4 + 72) = v9;
  *(void *)(v4 + 80) = v10;
  sub_10001D4B0(0, (unint64_t *)&qword_10163AE70);
  uint64_t v11 = (void *)static OS_os_log.default.getter();
  static os_log_type_t.default.getter();
  os_log(_:dso:log:type:_:)();
  swift_bridgeObjectRelease();

  return a3(0);
}

uint64_t sub_100BE2EFC()
{
  return sub_100BE2F74((uint64_t)sub_100BE9EC8, (uint64_t)&unk_1015ECF00, (uint64_t)sub_100BEA0B8, (uint64_t)&unk_1015ECF18);
}

uint64_t sub_100BE2F38()
{
  return sub_100BE2F74((uint64_t)sub_100BE9EC8, (uint64_t)&unk_1015ECEB0, (uint64_t)sub_100BE9EE4, (uint64_t)&unk_1015ECEC8);
}

uint64_t sub_100BE2F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v68 = a4;
  uint64_t v65 = a3;
  uint64_t v62 = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v75 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for DispatchQoS();
  uint64_t v74 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v70 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v72 = *(void *)(v69 - 8);
  uint64_t v9 = *(void *)(v72 + 64);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v10 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10000588C(&qword_10163A9E8);
  uint64_t v12 = *(void *)(v77 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v77);
  uint64_t v63 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v76 = (char *)v42 - v15;
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v4 + 56));
  sub_10000588C(&qword_10165B1A8);
  uint64_t v73 = v4;
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t v16 = aBlock[0];
  uint64_t v17 = *(void *)(aBlock[0] + 16);
  if (v17)
  {
    uint64_t v60 = sub_10001D4B0(0, (unint64_t *)&qword_1016376E0);
    uint64_t v59 = v73 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v18 = v12 + 16;
    char v58 = v19;
    uint64_t v20 = *(unsigned __int8 *)(v18 + 64);
    v42[0] = v16;
    uint64_t v21 = (char *)(v16 + ((v20 + 32) & ~v20));
    uint64_t v56 = *(void *)(v18 + 56);
    unsigned int v55 = enum case for DispatchQoS.QoSClass.default(_:);
    uint64_t v54 = (void (**)(char *, void, uint64_t))(v10 + 104);
    uint64_t v53 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v52 = v72 + 16;
    uint64_t v57 = v20;
    uint64_t v51 = (v20 + 16) & ~v20;
    unint64_t v50 = (v13 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = v50 + 8;
    uint64_t v48 = (void (**)(uint64_t, char *, uint64_t))(v18 + 16);
    uint64_t v47 = v72 + 32;
    uint64_t v46 = v80;
    uint64_t v45 = (void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v44 = (void (**)(char *, uint64_t))(v74 + 8);
    uint64_t v61 = v18;
    uint64_t v43 = (void (**)(char *, uint64_t))(v18 - 8);
    v42[1] = v9;
    uint64_t v22 = v76;
    uint64_t v23 = v77;
    uint64_t v24 = v69;
    do
    {
      uint64_t v75 = v17;
      uint64_t v25 = v23;
      uint64_t v26 = v58;
      v58(v22, v21, v25);
      uint64_t v27 = v64;
      uint64_t v28 = v66;
      (*v54)(v64, v55, v66);
      uint64_t v74 = static OS_dispatch_queue.global(qos:)();
      (*v53)(v27, v28);
      uint64_t v29 = v63;
      v26(v63, v76, v77);
      uint64_t v30 = v72;
      uint64_t v31 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v67, v59, v24);
      uint64_t v32 = v7;
      uint64_t v33 = v5;
      unint64_t v34 = (v49 + *(unsigned __int8 *)(v30 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
      uint64_t v35 = swift_allocObject();
      (*v48)(v35 + v51, v29, v77);
      *(void *)(v35 + v50) = v73;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v35 + v34, v31, v24);
      v80[2] = v65;
      v80[3] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v80[0] = sub_1004B5480;
      v80[1] = v68;
      uint64_t v36 = _Block_copy(aBlock);
      swift_retain();
      uint64_t v37 = v70;
      static DispatchQoS.unspecified.getter();
      unint64_t v78 = _swiftEmptyArrayStorage;
      sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10000588C((uint64_t *)&unk_10163F350);
      uint64_t v38 = v75;
      sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
      uint64_t v22 = v76;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v39 = (void *)v74;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      uint64_t v23 = v77;
      uint64_t v40 = v36;
      uint64_t v5 = v33;
      uint64_t v7 = v32;
      _Block_release(v40);

      (*v45)(v32, v5);
      (*v44)(v37, v71);
      (*v43)(v22, v23);
      swift_release();
      v21 += v56;
      uint64_t v17 = v38 - 1;
    }
    while (v17);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE3760(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  sub_10000588C(&qword_10163A9E8);
  Subscription.subscriber.getter();
  sub_10001CD44(v7, v7[3]);
  a4(a3);
  return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v7);
}

uint64_t sub_100BE37D0()
{
  uint64_t v1 = type metadata accessor for BeaconObservation();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v0 + 56));
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v5 = v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playSoundTimer;
  swift_beginAccess();
  sub_10001D074(v5, (uint64_t)&v15, &qword_10165B170);
  if (*((void *)&v16 + 1))
  {
    sub_10001D010((uint64_t)&v15, (uint64_t)v14);
    sub_10001DAB4((uint64_t)&v15, &qword_10165B170);
    sub_10001CD44(v14, v14[3]);
    dispatch thunk of Cancellable.cancel()();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v14);
  }
  else
  {
    sub_10001DAB4((uint64_t)&v15, &qword_10165B170);
  }
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  swift_beginAccess();
  sub_100062604((uint64_t)&v15, v5, &qword_10165B170);
  swift_endAccess();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10170E330;
  uint64_t v7 = v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  uint64_t v8 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v4, v7, v8);
  Date.init()();
  v4[*(int *)(v1 + 24)] = 27;
  sub_10000588C(&qword_10163A778);
  unint64_t v9 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_101342130;
  sub_1001A2590((uint64_t)v4, v10 + v9);
  uint64_t v11 = type metadata accessor for Transaction();
  __chkstk_darwin(v11);
  *(&v13 - 4) = v6;
  *(&v13 - 3) = v10;
  *(&v13 - 2) = 0;
  *(&v13 - 1) = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_1001A2654((uint64_t)v4);
  sub_100BE2EFC();
  return sub_100BE2F38();
}

uint64_t sub_100BE3B34(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for BeaconObservation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v1 + 56));
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  type metadata accessor for Transaction();
  sub_10000588C(&qword_101645830);
  static Transaction.named<A>(_:with:)();
  swift_release();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_10170E330;
  uint64_t v9 = v2 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v9, v10);
  Date.init()();
  v7[*(int *)(v4 + 24)] = 24;
  sub_10000588C(&qword_10163A778);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101342130;
  uint64_t v13 = sub_1001A2590((uint64_t)v7, v12 + v11);
  __chkstk_darwin(v13);
  *(&v26 - 4) = v8;
  *(&v26 - 3) = v12;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_1001A2654((uint64_t)v7);
  sub_100BE2EFC();
  if (dispatch thunk of Future.isFinished.getter())
  {
    static os_log_type_t.error.getter();
    os_log(_:dso:log:_:_:)();
    LODWORD(v25) = 0;
    uint64_t v24 = 218;
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    type metadata accessor for AnalyticsEvent(0);
    uint64_t v14 = (char *)swift_allocObject();
    swift_defaultActor_initialize();
    *((void *)v14 + 14) = sub_10092D664((uint64_t)_swiftEmptyArrayStorage);
    UUID.init()();
    long long v15 = &v14[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime];
    uint64_t v16 = type metadata accessor for DispatchTime();
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    v17(v15, 1, 1, v16);
    v17(&v14[OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_endTime], 1, 1, v16);
    *((void *)v14 + 15) = 0xD00000000000002CLL;
    *((void *)v14 + 16) = 0x80000001014163C0;
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v14;
    v18[3] = a1;
    v18[4] = v2;
    swift_retain();
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    sub_10001CD44((void *)(v2 + 16), *(void *)(v2 + 40));
    sub_1008C4990(v9, a1);
    uint64_t v19 = swift_allocObject();
    swift_weakInit();
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v14;
    *(void *)(v20 + 24) = v19;
    swift_retain();
    Future.addSuccess(block:)();
    swift_release();
    swift_release();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    Future.addFailure(block:)();
    swift_release();
    swift_release_n();
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v14;
    *(void *)(v22 + 24) = v21;
    swift_retain();
    Future.addCompletion(block:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE4178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v15 = *(id *)(result + 56);
    swift_release();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a3;
    v16[4] = a2;
    aBlock[4] = sub_100BE9EBC;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1004B5480;
    aBlock[3] = &unk_1015ECE78;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_errorRetain();
    static DispatchQoS.unspecified.getter();
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE448C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Transaction.capture()();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playCommandError) = a3;
    swift_errorRetain();
    swift_errorRelease();
    uint64_t result = swift_release();
  }
  if (a3)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100BE37D0();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100BE4548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  sub_10000588C(&qword_101639428);
  v3[8] = swift_task_alloc();
  v3[9] = swift_task_alloc();
  return _swift_task_switch(sub_100BE45F4, a1, 0);
}

uint64_t sub_100BE45F4()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[5];
  static DispatchTime.now()();
  uint64_t v4 = type metadata accessor for DispatchTime();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v1, 0, 1, v4);
  sub_10001D608(v1, v2, &qword_101639428);
  uint64_t v5 = v3 + OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime;
  swift_beginAccess();
  sub_100062604(v2, v5, &qword_101639428);
  swift_endAccess();
  return _swift_task_switch(sub_100BE470C, 0, 0);
}

uint64_t sub_100BE470C()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_retain();
  return _swift_task_switch(sub_100BE477C, v1, 0);
}

uint64_t sub_100BE477C()
{
  sub_1011B439C(v0[5], v0[6], v0[7]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

id sub_100BE4810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10000588C(&qword_10163C5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  *(void *)(inited + 32) = 0x6C4154556D6F7266;
  *(void *)(inited + 40) = 0xEB00000000747265;
  *(void *)(inited + 48) = a1 == 2;
  *(unsigned char *)(inited + 56) = 1;
  unint64_t v9 = sub_10092E03C(inited);
  uint64_t v10 = *(void **)(a2 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_targetBeacon);
  if (!v10) {
    return (id)v9;
  }
  id v11 = v10;
  id result = [v11 systemVersion];
  if (!result)
  {
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v13 = (uint64_t)result;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = v9;
  sub_10016D430(v13, 0, 0xD000000000000013, 0x80000001013FD3D0, isUniquelyReferenced_nonNull_native);
  unint64_t v15 = v51;
  swift_bridgeObjectRelease();
  id result = [v11 systemVersion];
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v16 = (uint64_t)result;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = v15;
  sub_10016D430(v16, 0, 0xD00000000000001BLL, 0x80000001013FD3F0, v17);
  unint64_t v18 = v51;
  swift_bridgeObjectRelease();
  id v19 = [objc_allocWithZone((Class)NSNumber) initWithInteger:[v11 batteryLevel]];
  char v20 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = v18;
  sub_10016D430((uint64_t)v19, 0, 0x4C79726574746162, 0xEC0000006C657665, v20);
  unint64_t v21 = v51;
  swift_bridgeObjectRelease();
  id v22 = SPBeaconTaskNameBeginLeashing;
  id v23 = [v11 taskInformation];
  type metadata accessor for SPBeaconTaskName(0);
  sub_10001D4B0(0, &qword_101653D80);
  sub_100BE9DD4(&qword_1016387E0, type metadata accessor for SPBeaconTaskName);
  uint64_t v24 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v24 + 16) && (uint64_t v25 = sub_1007248DC(v22), (v26 & 1) != 0))
  {
    id v27 = *(id *)(*(void *)(v24 + 56) + 8 * v25);

    swift_bridgeObjectRelease();
    id v28 = [v27 state];

    BOOL v29 = v28 == 0;
  }
  else
  {

    swift_bridgeObjectRelease();
    BOOL v29 = 0;
  }
  char v30 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = v21;
  sub_10016D430(v29, 1, 0x6563697665447369, 0xEF6465687361654CLL, v30);
  unint64_t v31 = v51;
  swift_bridgeObjectRelease();
  uint64_t v32 = [v11 connected];
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v51 = v31;
  sub_10016D430(v32, 1, 0xD000000000000011, 0x80000001013F72A0, v33);
  unint64_t v9 = v51;
  swift_bridgeObjectRelease();
  id v34 = [self sharedInstance];
  unsigned int v35 = [v34 isInternalBuild];

  if (!v35) {
    goto LABEL_14;
  }
  id result = [v11 name];
  if (result)
  {
    uint64_t v36 = (uint64_t)result;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v51 = v9;
    sub_10016D430(v36, 0, 0xD000000000000010, 0x80000001014165D0, v37);
    unint64_t v38 = v51;
    swift_bridgeObjectRelease();
    id v39 = [v11 identifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v51 = v38;
    sub_10016D430((uint64_t)v40, 0, 0x6544646572696170, 0xEE00444965636976, v41);
    unint64_t v9 = v51;
    swift_bridgeObjectRelease();
    id v42 = [v11 serialNumber];
    if (v42)
    {
      uint64_t v43 = (uint64_t)v42;
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v51 = v9;
      sub_10016D430(v43, 0, 0xD000000000000018, 0x80000001013F72C0, v44);
      unint64_t v9 = v51;
      swift_bridgeObjectRelease();
    }
    id v45 = [v11 role];
    if (v45)
    {
      uint64_t v46 = v45;
      id v47 = [v45 role];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v48 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v51 = v9;
      sub_10016D430((uint64_t)v48, 0, 0xD000000000000010, 0x80000001014165F0, v49);
      unint64_t v9 = v51;

      swift_bridgeObjectRelease();
      return (id)v9;
    }
LABEL_14:

    return (id)v9;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_100BE4EA8(unsigned __int8 *a1)
{
  uint64_t v2 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v9 = *a1;
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  type metadata accessor for Transaction();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10001DAB4((uint64_t)v4, &qword_101638CF0);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16))(v4, Strong + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier, v5);
  swift_release();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001DAB4((uint64_t)v4, &qword_101638CF0);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100BE82B8(v9, (uint64_t)v8, 0);
    swift_release();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100BE51B0(uint64_t a1)
{
  v1[5] = a1;
  sub_10000588C(&qword_101639428);
  v1[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for DispatchTime();
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return _swift_task_switch(sub_100BE52A4, a1, 0);
}

uint64_t sub_100BE52A4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 40) + OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime;
  swift_beginAccess();
  sub_10001D074(v2, v1, &qword_101639428);
  return _swift_task_switch(sub_100BE5340, 0, 0);
}

uint64_t sub_100BE5340()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[6];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001DAB4(v3, &qword_101639428);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[9];
    uint64_t v7 = v0[5];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v3, v1);
    uint64_t v8 = swift_task_alloc();
    v0[10] = v8;
    *(void *)(v8 + 16) = v6;
    return _swift_task_switch(sub_100BE5470, v7, 0);
  }
}

uint64_t sub_100BE5470()
{
  sub_10118B228((uint64_t)sub_100BE9DCC);
  swift_task_dealloc();
  return _swift_task_switch(sub_100BE552C, 0, 0);
}

uint64_t sub_100BE552C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

unint64_t sub_100BE55B0()
{
  uint64_t v0 = type metadata accessor for DispatchTime();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static DispatchTime.now()();
  unint64_t v4 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t result = DispatchTime.uptimeNanoseconds.getter();
  if (v4 < result)
  {
    __break(1u);
  }
  else
  {
    sub_10000588C(&qword_10163C5D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_101342130;
    *(void *)(inited + 32) = 0x4474736575716572;
    *(void *)(inited + 40) = 0xEF6E6F6974617275;
    *(NSNumber *)(inited + 48) = Double._bridgeToObjectiveC()();
    *(unsigned char *)(inited + 56) = 0;
    unint64_t v7 = sub_10092E03C(inited);
    (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
    return v7;
  }
  return result;
}

uint64_t sub_100BE5724(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_log_type_t.error.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_101342130;
  uint64_t v16 = a1;
  swift_getErrorValue();
  uint64_t v10 = Error.localizedDescription.getter();
  uint64_t v12 = v11;
  *(void *)(v9 + 56) = &type metadata for String;
  *(void *)(v9 + 64) = sub_10000B4CC();
  *(void *)(v9 + 32) = v10;
  *(void *)(v9 + 40) = v12;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    return sub_10001DAB4((uint64_t)v4, &qword_101638CF0);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v4, Strong + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier, v5);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    return sub_10001DAB4((uint64_t)v4, &qword_101638CF0);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100BE82B8(0, (uint64_t)v8, v16);
    swift_release();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100BE5A54(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v51 = a3;
  uint64_t v49 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v48 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v46 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for DispatchQoS();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  char v44 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for UUID();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v42 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *a1;
  uint64_t v43 = a4;
  uint64_t v50 = a4 + 16;
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_101347BA0;
  char v15 = v13;
  LOBYTE(aBlock[0]) = v13;
  sub_10000588C(&qword_101649EA0);
  uint64_t v16 = String.init<A>(describing:)();
  uint64_t v18 = v17;
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v19 = sub_10000B4CC();
  *(void *)(v14 + 64) = v19;
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v18;
  aBlock[0] = a2;
  swift_errorRetain();
  sub_10000588C((uint64_t *)&unk_101638EB0);
  uint64_t v20 = String.init<A>(describing:)();
  *(void *)(v14 + 96) = &type metadata for String;
  *(void *)(v14 + 104) = v19;
  *(void *)(v14 + 72) = v20;
  *(void *)(v14 + 80) = v21;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  if (!a2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    goto LABEL_9;
  }
  swift_getErrorValue();
  uint64_t v22 = Error.domain.getter();
  uint64_t v24 = v23;
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!v24)
  {
LABEL_9:
    uint64_t v27 = v53;
    uint64_t v28 = v52;
    uint64_t v29 = v51;
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v27 = v53;
  uint64_t v28 = v52;
  uint64_t v29 = v51;
  if (v22 == v25 && v24 == v26)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v40 & 1) == 0)
  {
LABEL_10:
    char v30 = 0;
    goto LABEL_11;
  }
LABEL_22:
  swift_getErrorValue();
  if (Error.code.getter() != 4) {
    goto LABEL_10;
  }
  char v30 = 1;
LABEL_11:
  type metadata accessor for Transaction();
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v29;
  *(unsigned char *)(v31 + 24) = v15;
  *(void *)(v31 + 32) = a2;
  *(unsigned char *)(v31 + 40) = v30;
  swift_errorRetain();
  swift_retain();
  static Transaction.asyncTask(name:block:)();
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v11, 1, 1, v27);
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v11, Strong + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier, v27);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v11, 0, 1, v27);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v11, 1, v27) == 1)
  {
LABEL_17:
    sub_10001DAB4((uint64_t)v11, &qword_101638CF0);
    goto LABEL_18;
  }
  uint64_t v33 = (uint64_t)v42;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v42, v11, v27);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100BE82B8(a2 == 0, v33, a2);
    swift_release();
  }
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v33, v27);
LABEL_18:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v35 = *(id *)(result + 56);
    swift_release();
    aBlock[4] = sub_100BE9D20;
    aBlock[5] = v43;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1004B5480;
    aBlock[3] = &unk_1015ECE00;
    uint64_t v36 = _Block_copy(aBlock);
    swift_retain();
    char v37 = v44;
    static DispatchQoS.unspecified.getter();
    uint64_t v54 = _swiftEmptyArrayStorage;
    sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    unint64_t v38 = v46;
    uint64_t v39 = v49;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v36);

    (*(void (**)(char *, uint64_t))(v48 + 8))(v38, v39);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v47);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE627C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v4 + 161) = a4;
  *(unsigned char *)(v4 + 160) = a2;
  *(void *)(v4 + 40) = a1;
  *(void *)(v4 + 48) = a3;
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  *(void *)(v4 + 56) = v6;
  *(void *)(v4 + 64) = *(void *)(v6 - 8);
  *(void *)(v4 + 72) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DispatchTime();
  *(void *)(v4 + 80) = v7;
  *(void *)(v4 + 88) = *(void *)(v7 - 8);
  *(void *)(v4 + 96) = swift_task_alloc();
  sub_10000588C(&qword_101639428);
  *(void *)(v4 + 104) = swift_task_alloc();
  *(void *)(v4 + 112) = swift_task_alloc();
  *(void *)(v4 + 120) = swift_task_alloc();
  return _swift_task_switch(sub_100BE63F0, a1, 0);
}

uint64_t sub_100BE63F0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 40) + OBJC_IVAR____TtC12searchpartyd14AnalyticsEvent_startTime;
  swift_beginAccess();
  sub_10001D074(v2, v1, &qword_101639428);
  return _swift_task_switch(sub_100BE6490, 0, 0);
}

uint64_t sub_100BE6490()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, &qword_101639428);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 88) + 56))(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 80));
    uint64_t v4 = *(void *)(v0 + 120);
    char v5 = *(unsigned char *)(v0 + 161);
    char v6 = *(unsigned char *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v8 = *(void *)(v0 + 48);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 136) = v9;
    *(unsigned char *)(v9 + 16) = v6;
    *(void *)(v9 + 24) = v8;
    *(unsigned char *)(v9 + 32) = v5;
    *(void *)(v9 + 40) = v4;
    uint64_t v10 = sub_100BE6824;
    uint64_t v11 = v7;
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 40);
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(*(void *)(v0 + 96), v1, v2);
    uint64_t v10 = sub_100BE65C4;
    uint64_t v11 = v12;
  }
  return _swift_task_switch(v10, v11, 0);
}

uint64_t sub_100BE65C4()
{
  *(void *)(v0 + 128) = sub_10117C064(0x4474736575716572, 0xEF6E6F6974617275);
  return _swift_task_switch(sub_100BE6650, 0, 0);
}

uint64_t sub_100BE6650()
{
  uint64_t v1 = *(void **)(v0 + 128);
  if (v1)
  {
    self;
    uint64_t v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 120);
      uint64_t v4 = *(void *)(v0 + 96);
      uint64_t v5 = *(void *)(v0 + 104);
      uint64_t v6 = *(void *)(v0 + 80);
      uint64_t v7 = *(void *)(v0 + 88);
      uint64_t v9 = *(void *)(v0 + 64);
      uint64_t v8 = *(void **)(v0 + 72);
      uint64_t v10 = *(void *)(v0 + 56);
      *uint64_t v8 = [v2 integerValue];
      (*(void (**)(void *, void, uint64_t))(v9 + 104))(v8, enum case for DispatchTimeInterval.seconds(_:), v10);
      DispatchTime.advanced(by:)();

      (*(void (**)(void *, uint64_t))(v9 + 8))(v8, v10);
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
      sub_10001D608(v5, v3, &qword_101639428);
      goto LABEL_6;
    }
  }
  (*(void (**)(void, void))(*(void *)(v0 + 88) + 8))(*(void *)(v0 + 96), *(void *)(v0 + 80));
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 88) + 56))(*(void *)(v0 + 120), 1, 1, *(void *)(v0 + 80));
LABEL_6:
  uint64_t v11 = *(void *)(v0 + 120);
  char v12 = *(unsigned char *)(v0 + 161);
  char v13 = *(unsigned char *)(v0 + 160);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v15 = *(void *)(v0 + 48);
  uint64_t v16 = swift_task_alloc();
  *(void *)(v0 + 136) = v16;
  *(unsigned char *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v15;
  *(unsigned char *)(v16 + 32) = v12;
  *(void *)(v16 + 40) = v11;
  return _swift_task_switch(sub_100BE6824, v14, 0);
}

uint64_t sub_100BE6824()
{
  sub_10118B228((uint64_t)sub_100BE9D28);
  swift_task_dealloc();
  return _swift_task_switch(sub_100BE68E0, 0, 0);
}

uint64_t sub_100BE68E0()
{
  type metadata accessor for AnalyticsPublisher();
  v0[18] = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[19] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100BE6994;
  uint64_t v2 = v0[5];
  return sub_101196838(v2);
}

uint64_t sub_100BE6994()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100BE6AAC, 0, 0);
}

uint64_t sub_100BE6AAC()
{
  sub_10001DAB4(*(void *)(v0 + 120), &qword_101639428);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100BE6B58(unsigned __int8 a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = sub_10000588C(&qword_101639428);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchTime();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v30 - v16;
  sub_10000588C(&qword_10163C5D0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101347BA0;
  *(void *)(inited + 32) = 0x6563637553736177;
  *(void *)(inited + 40) = 0xEA00000000007373;
  *(void *)(inited + 48) = a1 & (a2 == 0);
  *(unsigned char *)(inited + 56) = 1;
  *(void *)(inited + 64) = 0xD000000000000016;
  *(void *)(inited + 72) = 0x8000000101416520;
  *(void *)(inited + 80) = a3 & 1;
  *(unsigned char *)(inited + 88) = 1;
  unint64_t v19 = sub_10092E03C(inited);
  if (a2)
  {
    swift_getErrorValue();
    v30[1] = a2;
    swift_errorRetain();
    Error.domain.getter();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = v19;
    sub_10016D430((uint64_t)v20, 0, 0x6D6F44726F727265, 0xEB000000006E6961, isUniquelyReferenced_nonNull_native);
    unint64_t v22 = v31;
    swift_bridgeObjectRelease();
    swift_getErrorValue();
    Error.code.getter();
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = v22;
    sub_10016D430((uint64_t)isa, 0, 0x646F43726F727265, 0xE900000000000065, v24);
    unint64_t v19 = v31;
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  sub_10001D074(a4, (uint64_t)v10, &qword_101639428);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001DAB4((uint64_t)v10, &qword_101639428);
    return v19;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  static DispatchTime.now()();
  unint64_t v25 = DispatchTime.uptimeNanoseconds.getter();
  unint64_t result = DispatchTime.uptimeNanoseconds.getter();
  if (v25 >= result)
  {
    Class v27 = Double._bridgeToObjectiveC()().super.super.isa;
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = v19;
    sub_10016D430((uint64_t)v27, 0, 0xD000000000000010, 0x8000000101416540, v28);
    unint64_t v19 = v31;
    swift_bridgeObjectRelease();
    uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
    v29(v15, v11);
    v29(v17, v11);
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_100BE6F78()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100BE37D0();
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE6FD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v2 - 8);
  uint64_t v46 = v2;
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for DispatchTimeInterval();
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (void *)((char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = type metadata accessor for DispatchTime();
  uint64_t v39 = *(void *)(v40 - 8);
  uint64_t v7 = __chkstk_darwin(v40);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v38 = (char *)v33 - v10;
  uint64_t v11 = type metadata accessor for BeaconObservation();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch_queue_t v37 = *(dispatch_queue_t *)(v0 + 56);
  dispatch_assert_queue_V2(v37);
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  uint64_t v15 = type metadata accessor for Transaction();
  sub_10000588C(&qword_101645830);
  uint64_t v34 = v15;
  static Transaction.named<A>(_:with:)();
  swift_release();
  uint64_t v16 = v1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playSoundTimer;
  swift_beginAccess();
  sub_10001D074(v16, (uint64_t)&aBlock, &qword_10165B170);
  if (*((void *)&v49 + 1))
  {
    sub_10001D010((uint64_t)&aBlock, (uint64_t)v47);
    sub_10001DAB4((uint64_t)&aBlock, &qword_10165B170);
    v33[1] = 0;
    sub_10001CD44(v47, v47[3]);
    dispatch thunk of Cancellable.cancel()();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v47);
  }
  else
  {
    sub_10001DAB4((uint64_t)&aBlock, &qword_10165B170);
  }
  uint64_t v50 = 0;
  long long aBlock = 0u;
  long long v49 = 0u;
  swift_beginAccess();
  sub_100062604((uint64_t)&aBlock, v16, &qword_10165B170);
  swift_endAccess();
  if (qword_101636CB8 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_10170E330;
  uint64_t v18 = v1 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  uint64_t v19 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v18, v19);
  Date.init()();
  v14[*(int *)(v11 + 24)] = 26;
  sub_10000588C(&qword_10163A778);
  unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_101342130;
  uint64_t v22 = sub_1001A2590((uint64_t)v14, v21 + v20);
  __chkstk_darwin(v22);
  v33[-4] = v17;
  v33[-3] = v21;
  v33[-2] = 0;
  v33[-1] = 0;
  static Transaction.named<A>(_:with:)();
  swift_bridgeObjectRelease();
  sub_1001A2654((uint64_t)v14);
  sub_100BE2EFC();
  sub_10001CD44((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v34 = sub_1008C656C(v18);
  swift_retain();
  Future.addCompletion(block:)();
  swift_release();
  swift_release();
  static DispatchTime.now()();
  *uint64_t v6 = 8;
  uint64_t v23 = v35;
  uint64_t v24 = v36;
  (*(void (**)(void *, void, uint64_t))(v35 + 104))(v6, enum case for DispatchTimeInterval.seconds(_:), v36);
  unint64_t v25 = v38;
  + infix(_:_:)();
  (*(void (**)(void *, uint64_t))(v23 + 8))(v6, v24);
  uint64_t v26 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v27 = v40;
  v26(v9, v40);
  uint64_t v50 = sub_100BE9A84;
  uint64_t v51 = v1;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v49 = sub_1004B5480;
  *((void *)&v49 + 1) = &unk_1015ECCC0;
  char v28 = _Block_copy(&aBlock);
  swift_retain();
  uint64_t v29 = v41;
  static DispatchQoS.unspecified.getter();
  v47[0] = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  char v30 = v43;
  uint64_t v31 = v46;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v28);
  swift_release();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v44);
  v26(v25, v27);
  return swift_release();
}

uint64_t sub_100BE7890@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a1;
  swift_retain();
  uint64_t v6 = Future.addCompletion(block:)();
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_100BE7948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v15 = *(id *)(result + 56);
    swift_release();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a2;
    v16[4] = a3;
    aBlock[4] = sub_100BE9AC4;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_1004B5480;
    aBlock[3] = &unk_1015ECD38;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    unint64_t v20 = _swiftEmptyArrayStorage;
    sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10000588C((uint64_t *)&unk_10163F350);
    sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE7C5C(uint64_t a1, uint64_t a2)
{
  Transaction.capture()();
  if (!a2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    sub_100BE37D0();
    return swift_release();
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(Strong + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopCommandError) = a2;
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_errorRetain();
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_100BE2EFC();
    swift_errorRelease();
    return swift_release();
  }
  return swift_errorRelease();
}

uint64_t sub_100BE7D5C(char *a1, uint64_t a2, uint64_t a3)
{
  if (a2)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_101637278 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_101342130;
    swift_getErrorValue();
    uint64_t v6 = Error.localizedDescription.getter();
    uint64_t v8 = v7;
    *(void *)(v5 + 56) = &type metadata for String;
    *(void *)(v5 + 64) = sub_10000B4CC();
    *(void *)(v5 + 32) = v6;
    *(void *)(v5 + 40) = v8;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    uint64_t v9 = a3 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
    swift_errorRetain();
    sub_100BE8460(0, v9, a2);
    swift_errorRelease();
    return swift_errorRelease();
  }
  else
  {
    char v11 = *a1;
    static os_log_type_t.default.getter();
    if (qword_101637278 != -1) {
      swift_once();
    }
    os_log(_:dso:log:_:_:)();
    return sub_100BE8460(v11 & 1, a3 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier, 0);
  }
}

void sub_100BE7F44()
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  os_log(_:dso:log:_:_:)();
  type metadata accessor for SPOwnerSessionError(0);
  sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
  sub_100BE9DD4(&qword_101638460, type metadata accessor for SPOwnerSessionError);
  _BridgedStoredNSError.init(_:userInfo:)();
  Future.finish(error:)();
}

void sub_100BE806C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  dispatch_assert_queue_V2(*(dispatch_queue_t *)(v4 + 56));
  if (a4)
  {
    swift_errorRetain();
    static os_log_type_t.error.getter();
    if (qword_101637278 != -1) {
      swift_once();
    }
    sub_10000588C((uint64_t *)&unk_10163AD00);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_101347BA0;
    type metadata accessor for UUID();
    sub_100BE9DD4((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v10 = v9;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v11 = sub_10000B4CC();
    *(void *)(v7 + 64) = v11;
    *(void *)(v7 + 32) = v8;
    *(void *)(v7 + 40) = v10;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v12 = String.init<A>(describing:)();
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v11;
    *(void *)(v7 + 72) = v12;
    *(void *)(v7 + 80) = v13;
    os_log(_:dso:log:_:_:)();
    swift_bridgeObjectRelease();
    Future.finish(error:)();
    swift_errorRelease();
  }
  else if (a2)
  {
    Future.finish(result:)();
  }
  else
  {
    type metadata accessor for SPOwnerSessionError(0);
    sub_1004A0BC8((uint64_t)_swiftEmptyArrayStorage);
    sub_100BE9DD4(&qword_101638460, type metadata accessor for SPOwnerSessionError);
    _BridgedStoredNSError.init(_:userInfo:)();
    Future.finish(error:)();
  }
}

uint64_t sub_100BE82B8(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100BE8488(a1, a2, a3, (uint64_t)&unk_1015ECC80, (uint64_t)sub_100BE9974, (uint64_t)&unk_1015ECC98);
}

uint64_t sub_100BE82E0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347500;
  *(void *)(v8 + 56) = &type metadata for Bool;
  *(void *)(v8 + 64) = &protocol witness table for Bool;
  char v9 = a1 & 1;
  *(unsigned char *)(v8 + 32) = v9;
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  unint64_t v13 = sub_10000B4CC();
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 72) = v10;
  *(void *)(v8 + 80) = v12;
  swift_errorRetain();
  sub_10000588C((uint64_t *)&unk_101638EB0);
  uint64_t v14 = String.init<A>(describing:)();
  *(void *)(v8 + 136) = &type metadata for String;
  *(void *)(v8 + 144) = v13;
  *(void *)(v8 + 112) = v14;
  *(void *)(v8 + 120) = v15;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100BE806C(*(void *)(a4 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playFuture), v9, a2, a3);
  return sub_100BE2EFC();
}

uint64_t sub_100BE8460(int a1, uint64_t a2, uint64_t a3)
{
  return sub_100BE8488(a1, a2, a3, (uint64_t)&unk_1015ECC30, (uint64_t)sub_100BE989C, (uint64_t)&unk_1015ECC48);
}

uint64_t sub_100BE8488(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v29 = a6;
  uint64_t v26 = a3;
  uint64_t v27 = a5;
  v24[1] = a4;
  int v25 = a1;
  uint64_t v30 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v10 - 8);
  uint64_t v32 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v6 + 56);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a2, v13);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(unsigned char *)(v19 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v19 + v17, v16, v13);
  uint64_t v20 = v27;
  *(void *)(v19 + v18) = v26;
  *(void *)(v19 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)) = v6;
  aBlock[4] = v20;
  aBlock[5] = v19;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = v29;
  uint64_t v21 = _Block_copy(aBlock);
  swift_errorRetain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v34 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  uint64_t v22 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v22);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  return swift_release();
}

void sub_100BE8834(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  static os_log_type_t.default.getter();
  if (qword_101637278 != -1) {
    swift_once();
  }
  sub_10000588C((uint64_t *)&unk_10163AD00);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_101347500;
  *(void *)(v8 + 56) = &type metadata for Bool;
  *(void *)(v8 + 64) = &protocol witness table for Bool;
  char v9 = a1 & 1;
  *(unsigned char *)(v8 + 32) = v9;
  uint64_t v10 = UUID.uuidString.getter();
  uint64_t v12 = v11;
  *(void *)(v8 + 96) = &type metadata for String;
  unint64_t v13 = sub_10000B4CC();
  *(void *)(v8 + 104) = v13;
  *(void *)(v8 + 72) = v10;
  *(void *)(v8 + 80) = v12;
  swift_errorRetain();
  sub_10000588C((uint64_t *)&unk_101638EB0);
  uint64_t v14 = String.init<A>(describing:)();
  *(void *)(v8 + 136) = &type metadata for String;
  *(void *)(v8 + 144) = v13;
  *(void *)(v8 + 112) = v14;
  *(void *)(v8 + 120) = v15;
  os_log(_:dso:log:_:_:)();
  swift_bridgeObjectRelease();
  sub_100BE806C(*(void *)(a4 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopFuture), v9, a2, a3);
}

uint64_t sub_100BE89B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10000588C(&qword_10163A9E8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_10001D010(a1, (uint64_t)v17);
  swift_allocObject();
  swift_weakInit();
  sub_10000588C(&qword_10165B160);
  Subscription.init(subscriber:unsubscribeBlock:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  uint64_t v10 = (unint64_t *)(a2 + 72);
  swift_beginAccess();
  unint64_t v11 = *(void *)(a2 + 72);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a2 + 72) = v11;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v11 = sub_100A72330(0, *(void *)(v11 + 16) + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  unint64_t v14 = *(void *)(v11 + 16);
  unint64_t v13 = *(void *)(v11 + 24);
  if (v14 >= v13 >> 1)
  {
    unint64_t v11 = sub_100A72330(v13 > 1, v14 + 1, 1, v11);
    *uint64_t v10 = v11;
  }
  *(void *)(v11 + 16) = v14 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, v9, v6);
  return swift_endAccess();
}

uint64_t sub_100BE8BC0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100BE8C34(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100BE8C34(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v17 = *(void *)(v6 - 8);
  uint64_t v18 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_10163A9E8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  v16[1] = *(void *)(v1 + 64);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_100BE97F8;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1004B5480;
  aBlock[3] = &unk_1015ECBF8;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v20 = _swiftEmptyArrayStorage;
  sub_100BE9DD4((unint64_t *)&qword_10163B7E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000588C((uint64_t *)&unk_10163F350);
  sub_100062734((unint64_t *)&qword_10163B7F0, (uint64_t *)&unk_10163F350);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  return swift_release();
}

uint64_t sub_100BE8FBC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 72);
  v6[2] = a2;
  swift_bridgeObjectRetain();
  *(void *)(a1 + 72) = sub_1000A53E0((uint64_t (*)(char *))sub_100BE9878, (uint64_t)v6, v4);
  return swift_bridgeObjectRelease();
}

BOOL sub_100BE9048()
{
  return (dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0;
}

uint64_t sub_100BE90DC()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);

  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_beaconIdentifier;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  sub_10001DAB4(v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playCommandIdentifier, &qword_101638CF0);
  sub_10001DAB4(v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_stopCommandIdentifier, &qword_101638CF0);
  swift_errorRelease();
  swift_errorRelease();
  sub_10001DAB4(v0 + OBJC_IVAR____TtC12searchpartyd24SoundPlaybackCoordinator_playSoundTimer, &qword_10165B170);
  return v0;
}

uint64_t sub_100BE91F8()
{
  sub_100BE90DC();

  return swift_deallocClassInstance();
}

uint64_t sub_100BE9250()
{
  return type metadata accessor for SoundPlaybackCoordinator();
}

uint64_t type metadata accessor for SoundPlaybackCoordinator()
{
  uint64_t result = qword_10165AF58;
  if (!qword_10165AF58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BE92A4()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1003426B0();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100BE93BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100BE9400(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  *(void *)(v3 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_100BE944C())()
{
  return j__swift_endAccess_0;
}

uint64_t sub_100BE94A4()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t sub_100BE9514()
{
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  type metadata accessor for UUID();
  sub_100BE9DD4((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._object = (void *)0x8000000101416110;
  v1._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v1);
  sub_10001D4B0(0, &qword_101653D80);
  OS_dispatch_queue.sync<A>(execute:)();
  id v2 = [v9 debugDescription];

  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 62;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return 0x496E6F636165623CLL;
}

uint64_t sub_100BE96B0()
{
  return sub_100BE9514();
}

uint64_t sub_100BE96D4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100BE970C(uint64_t a1)
{
  return sub_100BE8BC0(a1);
}

uint64_t sub_100BE9728()
{
  uint64_t v1 = sub_10000588C(&qword_10163A9E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BE97F8()
{
  uint64_t v1 = *(void *)(sub_10000588C(&qword_10163A9E8) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100BE8FBC(v2, v3);
}

uint64_t sub_100BE9860(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100BE9870()
{
  return swift_release();
}

BOOL sub_100BE9878()
{
  return sub_100BE9048();
}

uint64_t sub_100BE989C()
{
  return sub_100BE998C((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100BE8834);
}

uint64_t sub_100BE98B8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 17) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100BE9974()
{
  return sub_100BE998C((uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t))sub_100BE82E0);
}

uint64_t sub_100BE998C(uint64_t (*a1)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + v4);
  uint64_t v7 = *(void *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8));

  return a1(v5, v1 + v3, v6, v7);
}

uint64_t sub_100BE9A3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100BE7890(a1, a2);
}

uint64_t sub_100BE9A7C(char *a1, uint64_t a2)
{
  return sub_100BE7D5C(a1, a2, v2);
}

void sub_100BE9A84()
{
}

uint64_t sub_100BE9A90(uint64_t a1, uint64_t a2)
{
  return sub_100BE7948(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100BE9A98()
{
  return sub_100BE9E54((void (*)(void))&_swift_errorRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_100BE9AC4()
{
  return sub_100BE7C5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100BE9AD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100BE7890(a1, a2);
}

uint64_t sub_100BE9B10()
{
  return sub_100BE9C10((void (*)(void))&_swift_release, 40);
}

uint64_t sub_100BE9B2C()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100033F68;
  return sub_100BE4548(v2, v3, v4);
}

uint64_t sub_100BE9BD8(unsigned __int8 *a1)
{
  return sub_100BE4EA8(a1);
}

uint64_t sub_100BE9BE0(uint64_t a1)
{
  return sub_100BE5724(a1);
}

uint64_t sub_100BE9BEC(char *a1, uint64_t a2)
{
  return sub_100BE5A54(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100BE9BF4()
{
  return sub_100BE9C10((void (*)(void))&_swift_errorRelease, 41);
}

uint64_t sub_100BE9C10(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_100BE9C6C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 32);
  char v4 = *(unsigned char *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_10001D2E4;
  return sub_100BE627C(v2, v5, v3, v4);
}

uint64_t sub_100BE9D20()
{
  return sub_100BE6F78();
}

unint64_t sub_100BE9D28()
{
  return sub_100BE6B58(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100BE9D3C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100033F68;
  return sub_100BE51B0(v0);
}

unint64_t sub_100BE9DCC()
{
  return sub_100BE55B0();
}

uint64_t sub_100BE9DD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE9E20(uint64_t a1, uint64_t a2)
{
  return sub_100BE4178(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_100BE9E28()
{
  return sub_100BE9E54((void (*)(void))&_swift_release, (void (*)(void))&_swift_errorRelease);
}

uint64_t sub_100BE9E54(void (*a1)(void), void (*a2)(void))
{
  swift_release();
  a1(*(void *)(v2 + 24));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

uint64_t sub_100BE9EBC()
{
  return sub_100BE448C(v0[2], v0[3], v0[4]);
}

uint64_t sub_100BE9EC8@<X0>(void *a1@<X8>)
{
  return sub_100BE9EFC(a1);
}

uint64_t sub_100BE9EE4()
{
  return sub_100BEA0D0((void (*)(uint64_t))sub_1004819D4);
}

uint64_t sub_100BE9EFC@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  *a1 = *(void *)(v1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_100BE9F50()
{
  uint64_t v1 = sub_10000588C(&qword_10163A9E8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100BEA0B8()
{
  return sub_100BEA0D0((void (*)(uint64_t))sub_10048234C);
}

uint64_t sub_100BEA0D0(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(sub_10000588C(&qword_10163A9E8) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for UUID() - 8);
  return sub_100BE3760(v1 + v4, *(void *)(v1 + v5), v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1);
}

uint64_t sub_100BEA1AC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BEA278()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100BE2210(v2, v3);
}

uint64_t sub_100BEA2EC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);
  swift_release();

  return _swift_deallocObject(v0, v9, v7);
}

uint64_t sub_100BEA3C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  uint64_t v6 = *(uint64_t (**)(void))(v0 + ((v4 + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100BE2DEC(v0 + v3, v0 + v5, v6);
}

uint64_t sub_100BEA468()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100BEA528()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + v3);
  uint64_t v5 = *(void *)(v0 + v3 + 8);
  uint64_t v6 = *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_100BE281C(v0 + v2, v4, v5, v6);
}

uint64_t sub_100BEA5C4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100BEA69C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100BE1B9C(v3, v0 + v2, v4);
}

uint64_t sub_100BEA730(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_100BE2384(a1, v5, v7, v8);
}

uint64_t sub_100BEA7D4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100BEA87C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  unint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return sub_100BE2910(a1, v5, v7, v8);
}

void *sub_100BEA984(uint64_t a1)
{
  uint64_t v47 = sub_10000588C(&qword_10165B1D8);
  uint64_t v3 = *(void *)(v47 - 8);
  uint64_t v4 = __chkstk_darwin(v47);
  uint64_t v43 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v46 = (char *)v36 - v6;
  uint64_t v7 = sub_10000588C((uint64_t *)&unk_10164E7D0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    v36[1] = v1;
    long long v49 = _swiftEmptyArrayStorage;
    sub_1000B81AC(0, v10, 0);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v42 = *(void *)(v3 + 72);
    uint64_t v41 = type metadata accessor for UUID();
    uint64_t v13 = *(void *)(v41 - 8);
    unint64_t v14 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    uint64_t v39 = v13 + 16;
    uint64_t v40 = v14;
    dispatch_queue_t v37 = v9;
    unint64_t v38 = (void (**)(uint64_t, char *, uint64_t))(v13 + 32);
    uint64_t v15 = (uint64_t *)&unk_10164E7D0;
    uint64_t v16 = (uint64_t)v43;
    do
    {
      int64_t v48 = v10;
      uint64_t v17 = v47;
      uint64_t v18 = *(int *)(v47 + 48);
      uint64_t v19 = v45;
      uint64_t v20 = *(int *)(v45 + 48);
      uint64_t v21 = v15;
      uint64_t v22 = v46;
      uint64_t v23 = v41;
      v40(v46, v12, v41);
      uint64_t v24 = *(void **)(v12 + v20);
      int v25 = *(void **)(v12 + v18);
      uint64_t v26 = *(int *)(v17 + 48);
      uint64_t v27 = *(int *)(v19 + 48);
      uint64_t v28 = v22;
      uint64_t v15 = v21;
      (*v38)(v16, v28, v23);
      *(void *)(v16 + v27) = v24;
      uint64_t v29 = (uint64_t)v37;
      *(void *)(v16 + v26) = v25;
      sub_10001D074(v16, v29, v15);
      id v30 = v24;
      id v31 = v25;
      sub_10001DAB4(v16, &qword_10165B1D8);
      uint64_t v11 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B81AC(0, v11[2] + 1, 1);
        uint64_t v11 = v49;
      }
      unint64_t v33 = v11[2];
      unint64_t v32 = v11[3];
      int64_t v34 = v48;
      if (v33 >= v32 >> 1)
      {
        sub_1000B81AC(v32 > 1, v33 + 1, 1);
        uint64_t v11 = v49;
      }
      v11[2] = v33 + 1;
      sub_10001D608(v29, (uint64_t)v11+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v33, v15);
      v12 += v42;
      int64_t v10 = v34 - 1;
    }
    while (v10);
  }
  return v11;
}

uint64_t SPDeviceEventSource.debugDescription.getter()
{
  return 0x6E776F6E6B6E752ELL;
}

uint64_t sub_100BEADB4()
{
  uint64_t result = 0x7463656E6E6F632ELL;
  switch(*v0)
  {
    case 1:
      return result;
    case 2:
      uint64_t result = 0x6E6E6F637369642ELL;
      break;
    case 3:
      unsigned int v2 = 1953784110;
      goto LABEL_6;
    case 4:
      unsigned int v2 = 1952801838;
LABEL_6:
      uint64_t result = v2 | 0x68636100000000;
      break;
    case 5:
      uint64_t result = 0x726961702ELL;
      break;
    case 6:
      uint64_t result = 0x657463657465642ELL;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E752ELL;
      break;
  }
  return result;
}

uint64_t sub_100BEAEA4(uint64_t a1, uint64_t a2, void *a3, void *a4, char a5)
{
  sub_10000588C(&qword_10165B1D0);
  int64_t v10 = (int *)(sub_10000588C(&qword_10165B1D8) - 8);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_101342130;
  unint64_t v13 = v12 + v11;
  uint64_t v14 = v10[14];
  uint64_t v15 = *(int *)(sub_10000588C((uint64_t *)&unk_10164E7D0) + 48);
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, a2, v16);
  uint64_t v17 = a3[3];
  uint64_t v18 = a3[4];
  sub_10001CD44(a3, v17);
  *(void *)(v13 + v15) = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 176))(v17, v18);
  *(void *)(v13 + v14) = a4;
  id v19 = a4;
  sub_10000588C(&qword_10164E7E8);
  OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  uint64_t v20 = sub_100BEA984(v12);
  type metadata accessor for Transaction();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a1;
  *(void *)(v21 + 24) = v23;
  *(void *)(v21 + 32) = v20;
  *(unsigned char *)(v21 + 40) = a5;
  *(void *)(v21 + 48) = _swiftEmptyArrayStorage;
  *(void *)(v21 + 56) = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  static Transaction.asyncTask(name:block:)();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_100BEB100(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  *(unsigned char *)(v6 + 64) = a4;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  *(void *)(v6 + 16) = a1;
  type metadata accessor for UUID();
  *(void *)(v6 + 56) = swift_task_alloc();
  return _swift_task_switch(sub_100BEB19C, 0, 0);
}

uint64_t sub_100BEB19C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  char v2 = *(unsigned char *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 24);
  type metadata accessor for WorkItemQueue.WorkItem();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *(unsigned char *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v3;
  *(void *)(v6 + 48) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  UUID.init()();
  WorkItemQueue.WorkItem.__allocating_init(identifier:block:completion:)();
  dispatch thunk of WorkItemQueue.enqueue(_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100BEB2D8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 56) = a4;
  *(void *)(v5 + 64) = a5;
  *(unsigned char *)(v5 + 193) = a3;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a2;
  uint64_t v6 = sub_10000588C((uint64_t *)&unk_10164E720);
  *(void *)(v5 + 72) = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 + 64);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  *(void *)(v5 + 112) = swift_task_alloc();
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = swift_task_alloc();
  *(void *)(v5 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_100BEB3EC, 0, 0);
}

uint64_t sub_100BEB3EC()
{
  uint64_t v73 = v0 + 4;
  uint64_t v1 = v0[5];
  char v2 = *(unsigned char *)(v1 + 32);
  *((unsigned char *)v0 + 194) = v2;
  uint64_t v3 = 1 << v2;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  uint64_t v6 = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v74 = v0;
  uint64_t v84 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v5));
  uint64_t v12 = (v5 - 1) & v5;
  unint64_t v13 = v11 | (v10 << 6);
  uint64_t v14 = v0[5];
  while (1)
  {
    unint64_t v75 = v12;
    int64_t v76 = v10;
    v0[18] = v10;
    v0[19] = v12;
    uint64_t v20 = v0[16];
    uint64_t v21 = v0[17];
    uint64_t v88 = v0[15];
    uint64_t v22 = v0[9];
    char v95 = *((unsigned char *)v0 + 193);
    uint64_t v79 = v0[14];
    uint64_t v81 = v0[7];
    uint64_t v77 = v0[6];
    uint64_t v23 = *(void *)(v14 + 48);
    uint64_t v99 = type metadata accessor for UUID();
    uint64_t v24 = *(void *)(v99 - 8);
    unint64_t v98 = *(void (**)(void))(v24 + 16);
    ((void (*)(uint64_t, unint64_t, uint64_t))v98)(v21, v23 + *(void *)(v24 + 72) * v13, v99);
    uint64_t v25 = v22;
    uint64_t v93 = v22;
    uint64_t v26 = *(void *)(v14 + 56) + 104 * v13;
    uint64_t v27 = v21 + *(int *)(v22 + 48);
    uint64_t v28 = *(void *)v26;
    char v29 = *(unsigned char *)(v26 + 8);
    char v97 = v29;
    uint64_t v30 = *(void *)(v26 + 24);
    uint64_t v31 = *(void *)(v26 + 32);
    uint64_t v32 = *(void *)(v26 + 40);
    uint64_t v34 = *(void *)(v26 + 48);
    uint64_t v33 = *(void *)(v26 + 56);
    char v35 = *(unsigned char *)(v26 + 64);
    char v104 = v35;
    char v36 = *(unsigned char *)(v26 + 65);
    uint64_t v100 = *(void *)(v26 + 72);
    uint64_t v101 = *(void *)(v26 + 16);
    uint64_t v96 = *(void *)(v26 + 80);
    uint64_t v103 = *(void *)(v26 + 88);
    char v102 = *(unsigned char *)(v26 + 96);
    *(void *)uint64_t v27 = *(void *)v26;
    uint64_t v83 = v28;
    *(unsigned char *)(v27 + 8) = v29;
    *(void *)(v27 + 16) = v101;
    *(void *)(v27 + 24) = v30;
    uint64_t v37 = v30;
    *(void *)(v27 + 32) = v31;
    *(void *)(v27 + 40) = v32;
    *(void *)(v27 + 48) = v34;
    *(void *)(v27 + 56) = v33;
    *(unsigned char *)(v27 + 64) = v35;
    *(unsigned char *)(v27 + 65) = v36;
    *(void *)(v27 + 72) = v100;
    *(void *)(v27 + 80) = v96;
    *(void *)(v27 + 88) = v103;
    *(unsigned char *)(v27 + 96) = v102;
    uint64_t v38 = v20;
    uint64_t v91 = v20;
    uint64_t v39 = v20 + *(int *)(v25 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v38, v21, v99);
    *(void *)uint64_t v39 = v28;
    *(unsigned char *)(v39 + 8) = v97;
    *(void *)(v39 + 16) = v101;
    *(void *)(v39 + 24) = v37;
    *(void *)(v39 + 32) = v31;
    *(void *)(v39 + 40) = v32;
    uint64_t v87 = v34;
    *(void *)(v39 + 48) = v34;
    *(void *)(v39 + 56) = v33;
    *(unsigned char *)(v39 + 64) = v104;
    *(unsigned char *)(v39 + 65) = v36;
    *(void *)(v39 + 72) = v100;
    *(void *)(v39 + 80) = v96;
    *(void *)(v39 + 88) = v103;
    *(unsigned char *)(v39 + 96) = v102;
    uint64_t v40 = v88 + *(int *)(v93 + 48);
    v98();
    *(void *)uint64_t v40 = v28;
    *(unsigned char *)(v40 + 8) = v97;
    *(void *)(v40 + 16) = v101;
    *(void *)(v40 + 24) = v37;
    *(void *)(v40 + 32) = v31;
    *(void *)(v40 + 40) = v32;
    *(void *)(v40 + 48) = v34;
    *(void *)(v40 + 56) = v33;
    *(unsigned char *)(v40 + 64) = v104;
    *(unsigned char *)(v40 + 65) = v36;
    *(void *)(v40 + 72) = v100;
    *(void *)(v40 + 80) = v96;
    *(void *)(v40 + 88) = v103;
    *(unsigned char *)(v40 + 96) = v102;
    uint64_t v41 = swift_task_alloc();
    *(void *)(v41 + 16) = v88;
    *(unsigned char *)(v41 + 24) = v95;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v42 = v84;
    uint64_t v85 = sub_1000A4B44((uint64_t (*)(char *))sub_10080E1C8, (void *)v41, v77);
    uint64_t v43 = v28;
    swift_task_dealloc();
    sub_10001DAB4(v88, (uint64_t *)&unk_10164E720);
    uint64_t v44 = v79 + *(int *)(v93 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v79, v91, v99);
    *(void *)uint64_t v44 = v43;
    *(unsigned char *)(v44 + 8) = v97;
    *(void *)(v44 + 16) = v101;
    *(void *)(v44 + 24) = v37;
    *(void *)(v44 + 32) = v31;
    *(void *)(v44 + 40) = v32;
    *(void *)(v44 + 48) = v34;
    *(void *)(v44 + 56) = v33;
    *(unsigned char *)(v44 + 64) = v104;
    *(unsigned char *)(v44 + 65) = v36;
    *(void *)(v44 + 72) = v100;
    *(void *)(v44 + 80) = v96;
    *(void *)(v44 + 88) = v103;
    *(unsigned char *)(v44 + 96) = v102;
    uint64_t v45 = swift_task_alloc();
    *(void *)(v45 + 16) = v79;
    *(unsigned char *)(v45 + 24) = v95;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v92 = v37;
    swift_bridgeObjectRetain();
    uint64_t v94 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_1000A4DD4((uint64_t)sub_10080E1EC, v45, v81);
    swift_task_dealloc();
    sub_10001DAB4(v79, (uint64_t *)&unk_10164E720);
    uint64_t v47 = *(void *)(v85 + 16);
    swift_bridgeObjectRelease();
    if (v47 || *(void *)(v46 + 16))
    {
      uint64_t v48 = v74[13];
      uint64_t v80 = v74[16];
      uint64_t v82 = v74[12];
      uint64_t v78 = v74[9];
      uint64_t v86 = v42;
      uint64_t v49 = v74[8];
      uint64_t v50 = v43;
      uint64_t v51 = v48 + *(int *)(v78 + 48);
      ((void (*)(uint64_t))v98)(v48);
      *(void *)uint64_t v51 = v50;
      *(unsigned char *)(v51 + 8) = v97;
      *(void *)(v51 + 16) = v101;
      *(void *)(v51 + 24) = v92;
      *(void *)(v51 + 32) = v94;
      *(void *)(v51 + 40) = v32;
      *(void *)(v51 + 48) = v34;
      *(void *)(v51 + 56) = v33;
      *(unsigned char *)(v51 + 64) = v104;
      *(unsigned char *)(v51 + 65) = v36;
      *(void *)(v51 + 72) = v100;
      *(void *)(v51 + 80) = v96;
      *(void *)(v51 + 88) = v103;
      *(unsigned char *)(v51 + 96) = v102;
      uint64_t v52 = swift_task_alloc();
      *(void *)(v52 + 16) = v48;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v89 = sub_100BEF8EC(v49, (uint64_t (*)(char *, uint64_t, void, void))sub_100BEF8E4, v52);
      swift_task_dealloc();
      sub_10001DAB4(v48, (uint64_t *)&unk_10164E720);
      uint64_t v53 = v82 + *(int *)(v78 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v82, v80, v99);
      *(void *)uint64_t v53 = v50;
      *(unsigned char *)(v53 + 8) = v97;
      *(void *)(v53 + 16) = v101;
      *(void *)(v53 + 24) = v92;
      *(void *)(v53 + 32) = v94;
      *(void *)(v53 + 40) = v32;
      *(void *)(v53 + 48) = v34;
      *(void *)(v53 + 56) = v33;
      *(unsigned char *)(v53 + 64) = v104;
      *(unsigned char *)(v53 + 65) = v36;
      *(void *)(v53 + 72) = v100;
      *(void *)(v53 + 80) = v96;
      *(void *)(v53 + 88) = v103;
      *(unsigned char *)(v53 + 96) = v102;
      uint64_t v54 = swift_task_alloc();
      *(void *)(v54 + 16) = v82;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unsigned int v55 = sub_100BEFB10(v46, (uint64_t (*)(char *, void *, void, void))sub_100BEFB08, v54);
      swift_task_dealloc();
      sub_10001DAB4(v82, (uint64_t *)&unk_10164E720);
      swift_bridgeObjectRelease();
      sub_100445B80((uint64_t)v55);
      if (v89[2])
      {
        sub_10000588C(&qword_10165B210);
        uint64_t v56 = (void *)static _DictionaryStorage.allocate(capacity:)();
      }
      else
      {
        uint64_t v56 = _swiftEmptyDictionarySingleton;
      }
      v74[4] = v56;
      uint64_t v57 = swift_bridgeObjectRetain();
      sub_100BEDB6C(v57, 1, v73);
      v74[20] = v86;
      uint64_t v90 = v74[16];
      uint64_t v58 = v74[13];
      uint64_t v60 = v74[10];
      uint64_t v59 = v74[11];
      uint64_t v61 = v74[9];
      swift_bridgeObjectRelease();
      id v62 = objc_allocWithZone((Class)SPDeviceEventFetchResult);
      sub_100BEFCAC();
      sub_10001035C(&qword_10163BC60);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_release();
      id v64 = [v62 initWithResults:isa];
      v74[21] = v64;

      uint64_t v65 = *(int *)(v61 + 48);
      ((void (*)(uint64_t, uint64_t, uint64_t))v98)(v58, v90, v99);
      unint64_t v66 = (*(unsigned __int8 *)(v60 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
      uint64_t v67 = v58 + v65;
      *(void *)uint64_t v67 = v83;
      *(unsigned char *)(v67 + 8) = v97;
      *(void *)(v67 + 16) = v101;
      *(void *)(v67 + 24) = v92;
      *(void *)(v67 + 32) = v94;
      *(void *)(v67 + 40) = v32;
      *(void *)(v67 + 48) = v87;
      *(void *)(v67 + 56) = v33;
      *(unsigned char *)(v67 + 64) = v104;
      *(unsigned char *)(v67 + 65) = v36;
      *(void *)(v67 + 72) = v100;
      *(void *)(v67 + 80) = v96;
      *(void *)(v67 + 88) = v103;
      *(unsigned char *)(v67 + 96) = v102;
      uint64_t v68 = swift_allocObject();
      v74[22] = v68;
      sub_10001D608(v58, v68 + v66, (uint64_t *)&unk_10164E720);
      *(void *)(v68 + ((v59 + v66 + 7) & 0xFFFFFFFFFFFFFFF8)) = v64;
      id v69 = v64;
      uint64_t v70 = (void *)swift_task_alloc();
      v74[23] = v70;
      uint64_t v9 = sub_10000588C((uint64_t *)&unk_101638DC0);
      *uint64_t v70 = v74;
      v70[1] = sub_100BEBF78;
      uint64_t v7 = sub_100BEFE28;
      uint64_t v6 = (uint64_t)(v74 + 24);
      uint64_t v8 = v68;
      return unsafeBlocking<A>(_:)(v6, v7, v8, v9);
    }
    uint64_t v0 = v74;
    sub_10001DAB4(v74[16], (uint64_t *)&unk_10164E720);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v6 = swift_release();
    unint64_t v5 = v75;
    int64_t v10 = v76;
    uint64_t v84 = v42;
    if (v75) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    int64_t v16 = (unint64_t)((1 << *((unsigned char *)v0 + 194)) + 63) >> 6;
    uint64_t v14 = v0[5];
    if (v15 >= v16) {
      goto LABEL_30;
    }
    uint64_t v17 = v14 + 64;
    unint64_t v18 = *(void *)(v14 + 64 + 8 * v15);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v16) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v17 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v16) {
          goto LABEL_30;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    uint64_t v12 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v10 << 6);
  }
  int64_t v19 = v15 + 3;
  if (v19 < v16)
  {
    unint64_t v18 = *(void *)(v17 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        int64_t v10 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (v10 >= v16) {
          goto LABEL_30;
        }
        unint64_t v18 = *(void *)(v17 + 8 * v10);
        ++v19;
        if (v18) {
          goto LABEL_19;
        }
      }
LABEL_34:
      __break(1u);
      return unsafeBlocking<A>(_:)(v6, v7, v8, v9);
    }
    int64_t v10 = v19;
    goto LABEL_19;
  }
LABEL_30:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = (uint64_t (*)(void))v0[1];
  return v71();
}

uint64_t sub_100BEBF78()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100BEC090, 0, 0);
}

uint64_t sub_100BEC090()
{
  id v69 = v0 + 4;
  uint64_t v68 = (uint64_t)(v0 + 24);
  uint64_t v1 = v0[16];

  uint64_t v2 = sub_10001DAB4(v1, (uint64_t *)&unk_10164E720);
  unint64_t v6 = v0[19];
  int64_t v7 = v0[18];
  uint64_t v70 = v0;
  uint64_t v78 = v0[20];
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  uint64_t v9 = (v6 - 1) & v6;
  unint64_t v10 = v8 | (v7 << 6);
  uint64_t v11 = v0[5];
  while (1)
  {
    unint64_t v71 = v9;
    int64_t v72 = v7;
    v0[18] = v7;
    v0[19] = v9;
    uint64_t v17 = v0[16];
    uint64_t v18 = v0[17];
    uint64_t v102 = v0[15];
    uint64_t v19 = v0[9];
    char v87 = *((unsigned char *)v0 + 193);
    uint64_t v74 = v0[14];
    uint64_t v75 = v0[7];
    uint64_t v73 = v0[6];
    uint64_t v20 = *(void *)(v11 + 48);
    uint64_t v100 = type metadata accessor for UUID();
    uint64_t v21 = *(void *)(v100 - 8);
    uint64_t v99 = *(void (**)(void))(v21 + 16);
    ((void (*)(uint64_t, unint64_t, uint64_t))v99)(v18, v20 + *(void *)(v21 + 72) * v10, v100);
    uint64_t v22 = v19;
    uint64_t v85 = v19;
    uint64_t v23 = *(void *)(v11 + 56) + 104 * v10;
    uint64_t v24 = v18 + *(int *)(v19 + 48);
    uint64_t v25 = *(void *)v23;
    char v98 = *(unsigned char *)(v23 + 8);
    uint64_t v26 = *(void *)(v23 + 16);
    uint64_t v27 = *(void *)(v23 + 24);
    uint64_t v29 = *(void *)(v23 + 32);
    uint64_t v28 = *(void *)(v23 + 40);
    uint64_t v30 = *(void *)(v23 + 48);
    uint64_t v82 = *(void *)(v23 + 56);
    char v96 = *(unsigned char *)(v23 + 65);
    char v97 = *(unsigned char *)(v23 + 64);
    uint64_t v101 = *(void *)(v23 + 72);
    uint64_t v95 = *(void *)(v23 + 80);
    uint64_t v31 = *(void *)(v23 + 88);
    char v93 = *(unsigned char *)(v23 + 96);
    *(void *)uint64_t v24 = *(void *)v23;
    uint64_t v77 = v25;
    *(unsigned char *)(v24 + 8) = v98;
    *(void *)(v24 + 16) = v26;
    *(void *)(v24 + 24) = v27;
    *(void *)(v24 + 32) = v29;
    *(void *)(v24 + 40) = v28;
    uint64_t v91 = v28;
    uint64_t v92 = v29;
    *(void *)(v24 + 48) = v30;
    *(void *)(v24 + 56) = v82;
    *(unsigned char *)(v24 + 64) = v97;
    *(unsigned char *)(v24 + 65) = v96;
    *(void *)(v24 + 72) = v101;
    *(void *)(v24 + 80) = v95;
    *(void *)(v24 + 88) = v31;
    uint64_t v94 = v31;
    *(unsigned char *)(v24 + 96) = v93;
    uint64_t v32 = v17;
    uint64_t v83 = v17;
    uint64_t v33 = v17 + *(int *)(v22 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v32, v18, v100);
    *(void *)uint64_t v33 = v25;
    *(unsigned char *)(v33 + 8) = v98;
    uint64_t v90 = v26;
    *(void *)(v33 + 16) = v26;
    *(void *)(v33 + 24) = v27;
    *(void *)(v33 + 32) = v29;
    *(void *)(v33 + 40) = v28;
    uint64_t v81 = v30;
    *(void *)(v33 + 48) = v30;
    *(void *)(v33 + 56) = v82;
    *(unsigned char *)(v33 + 64) = v97;
    *(unsigned char *)(v33 + 65) = v96;
    *(void *)(v33 + 72) = v101;
    *(void *)(v33 + 80) = v95;
    *(void *)(v33 + 88) = v31;
    *(unsigned char *)(v33 + 96) = v93;
    uint64_t v34 = v102 + *(int *)(v85 + 48);
    v99();
    *(void *)uint64_t v34 = v25;
    *(unsigned char *)(v34 + 8) = v98;
    *(void *)(v34 + 16) = v26;
    *(void *)(v34 + 24) = v27;
    uint64_t v35 = v27;
    *(void *)(v34 + 32) = v29;
    *(void *)(v34 + 40) = v28;
    *(void *)(v34 + 48) = v30;
    *(void *)(v34 + 56) = v82;
    *(unsigned char *)(v34 + 64) = v97;
    *(unsigned char *)(v34 + 65) = v96;
    *(void *)(v34 + 72) = v101;
    *(void *)(v34 + 80) = v95;
    *(void *)(v34 + 88) = v31;
    *(unsigned char *)(v34 + 96) = v93;
    uint64_t v36 = swift_task_alloc();
    *(void *)(v36 + 16) = v102;
    *(unsigned char *)(v36 + 24) = v87;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v37 = v78;
    uint64_t v79 = sub_1000A4B44((uint64_t (*)(char *))sub_10080E1C8, (void *)v36, v73);
    swift_task_dealloc();
    sub_10001DAB4(v102, (uint64_t *)&unk_10164E720);
    uint64_t v38 = v25;
    uint64_t v39 = v74 + *(int *)(v85 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v99)(v74, v83, v100);
    *(void *)uint64_t v39 = v38;
    *(unsigned char *)(v39 + 8) = v98;
    *(void *)(v39 + 16) = v90;
    *(void *)(v39 + 24) = v35;
    *(void *)(v39 + 32) = v29;
    *(void *)(v39 + 40) = v28;
    *(void *)(v39 + 48) = v30;
    *(void *)(v39 + 56) = v82;
    *(unsigned char *)(v39 + 64) = v97;
    *(unsigned char *)(v39 + 65) = v96;
    *(void *)(v39 + 72) = v101;
    *(void *)(v39 + 80) = v95;
    *(void *)(v39 + 88) = v31;
    *(unsigned char *)(v39 + 96) = v93;
    uint64_t v40 = swift_task_alloc();
    *(void *)(v40 + 16) = v74;
    *(unsigned char *)(v40 + 24) = v87;
    swift_retain();
    uint64_t v41 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1000A4DD4((uint64_t)sub_10080E1EC, v40, v75);
    swift_task_dealloc();
    sub_10001DAB4(v74, (uint64_t *)&unk_10164E720);
    uint64_t v43 = *(void *)(v79 + 16);
    swift_bridgeObjectRelease();
    if (v43 || *(void *)(v42 + 16)) {
      break;
    }
    uint64_t v0 = v70;
    sub_10001DAB4(v70[16], (uint64_t *)&unk_10164E720);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = swift_release();
    unint64_t v6 = v71;
    int64_t v7 = v72;
    uint64_t v78 = v37;
    if (v71) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v12 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    int64_t v13 = (unint64_t)((1 << *((unsigned char *)v0 + 194)) + 63) >> 6;
    uint64_t v11 = v0[5];
    if (v12 >= v13) {
      goto LABEL_31;
    }
    uint64_t v14 = v11 + 64;
    unint64_t v15 = *(void *)(v11 + 64 + 8 * v12);
    ++v7;
    if (!v15)
    {
      int64_t v7 = v12 + 1;
      if (v12 + 1 >= v13) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v14 + 8 * v7);
      if (!v15)
      {
        int64_t v7 = v12 + 2;
        if (v12 + 2 >= v13) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v14 + 8 * v7);
        if (!v15)
        {
          int64_t v16 = v12 + 3;
          if (v16 >= v13)
          {
LABEL_31:
            swift_release();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v67 = (uint64_t (*)(void))v0[1];
            return v67();
          }
          unint64_t v15 = *(void *)(v14 + 8 * v16);
          if (!v15)
          {
            while (1)
            {
              int64_t v7 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v7 >= v13) {
                goto LABEL_31;
              }
              unint64_t v15 = *(void *)(v14 + 8 * v7);
              ++v16;
              if (v15) {
                goto LABEL_16;
              }
            }
LABEL_35:
            __break(1u);
            return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
          }
          int64_t v7 = v16;
        }
      }
    }
LABEL_16:
    uint64_t v9 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v7 << 6);
  }
  uint64_t v44 = v70[13];
  uint64_t v84 = v70[16];
  uint64_t v86 = v70[12];
  uint64_t v76 = v70[9];
  uint64_t v80 = v37;
  uint64_t v45 = v70[8];
  uint64_t v46 = v44 + *(int *)(v76 + 48);
  ((void (*)(uint64_t))v99)(v44);
  *(void *)uint64_t v46 = v38;
  *(unsigned char *)(v46 + 8) = v98;
  *(void *)(v46 + 16) = v90;
  *(void *)(v46 + 24) = v35;
  *(void *)(v46 + 32) = v92;
  *(void *)(v46 + 40) = v41;
  *(void *)(v46 + 48) = v30;
  *(void *)(v46 + 56) = v82;
  *(unsigned char *)(v46 + 64) = v97;
  *(unsigned char *)(v46 + 65) = v96;
  *(void *)(v46 + 72) = v101;
  *(void *)(v46 + 80) = v95;
  *(void *)(v46 + 88) = v94;
  *(unsigned char *)(v46 + 96) = v93;
  uint64_t v47 = swift_task_alloc();
  *(void *)(v47 + 16) = v44;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v88 = sub_100BEF8EC(v45, (uint64_t (*)(char *, uint64_t, void, void))sub_100BEF8E4, v47);
  swift_task_dealloc();
  sub_10001DAB4(v44, (uint64_t *)&unk_10164E720);
  uint64_t v48 = v86 + *(int *)(v76 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v99)(v86, v84, v100);
  *(void *)uint64_t v48 = v38;
  *(unsigned char *)(v48 + 8) = v98;
  *(void *)(v48 + 16) = v90;
  *(void *)(v48 + 24) = v35;
  *(void *)(v48 + 32) = v92;
  *(void *)(v48 + 40) = v41;
  *(void *)(v48 + 48) = v30;
  *(void *)(v48 + 56) = v82;
  *(unsigned char *)(v48 + 64) = v97;
  *(unsigned char *)(v48 + 65) = v96;
  *(void *)(v48 + 72) = v101;
  *(void *)(v48 + 80) = v95;
  *(void *)(v48 + 88) = v94;
  *(unsigned char *)(v48 + 96) = v93;
  uint64_t v49 = swift_task_alloc();
  *(void *)(v49 + 16) = v86;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_100BEFB10(v42, (uint64_t (*)(char *, void *, void, void))sub_100BEFB08, v49);
  swift_task_dealloc();
  sub_10001DAB4(v86, (uint64_t *)&unk_10164E720);
  swift_bridgeObjectRelease();
  sub_100445B80((uint64_t)v50);
  if (v88[2])
  {
    sub_10000588C(&qword_10165B210);
    uint64_t v51 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v51 = _swiftEmptyDictionarySingleton;
  }
  v70[4] = v51;
  uint64_t v52 = swift_bridgeObjectRetain();
  sub_100BEDB6C(v52, 1, v69);
  v70[20] = v80;
  if (!v80)
  {
    uint64_t v54 = v70[16];
    uint64_t v55 = v70[13];
    uint64_t v56 = v70[11];
    uint64_t v89 = v70[10];
    uint64_t v57 = v70[9];
    swift_bridgeObjectRelease();
    id v58 = objc_allocWithZone((Class)SPDeviceEventFetchResult);
    sub_100BEFCAC();
    sub_10001035C(&qword_10163BC60);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_release();
    id v60 = [v58 initWithResults:isa];
    v70[21] = v60;

    uint64_t v61 = *(int *)(v57 + 48);
    ((void (*)(uint64_t, uint64_t, uint64_t))v99)(v55, v54, v100);
    unint64_t v62 = (*(unsigned __int8 *)(v89 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    uint64_t v63 = v55 + v61;
    *(void *)uint64_t v63 = v77;
    *(unsigned char *)(v63 + 8) = v98;
    *(void *)(v63 + 16) = v90;
    *(void *)(v63 + 24) = v35;
    *(void *)(v63 + 32) = v92;
    *(void *)(v63 + 40) = v91;
    *(void *)(v63 + 48) = v81;
    *(void *)(v63 + 56) = v82;
    *(unsigned char *)(v63 + 64) = v97;
    *(unsigned char *)(v63 + 65) = v96;
    *(void *)(v63 + 72) = v101;
    *(void *)(v63 + 80) = v95;
    *(void *)(v63 + 88) = v94;
    *(unsigned char *)(v63 + 96) = v93;
    uint64_t v64 = swift_allocObject();
    v70[22] = v64;
    sub_10001D608(v55, v64 + v62, (uint64_t *)&unk_10164E720);
    *(void *)(v64 + ((v56 + v62 + 7) & 0xFFFFFFFFFFFFFFF8)) = v60;
    id v65 = v60;
    unint64_t v66 = (void *)swift_task_alloc();
    v70[23] = v66;
    uint64_t v5 = sub_10000588C((uint64_t *)&unk_101638DC0);
    void *v66 = v70;
    v66[1] = sub_100BEBF78;
    uint64_t v3 = sub_100BEFE28;
    uint64_t v2 = v68;
    uint64_t v4 = v64;
    return unsafeBlocking<A>(_:)(v2, v3, v4, v5);
  }
  return swift_unexpectedError();
}

id sub_100BECBF4(char *a1, uint64_t *a2, void *a3, void *a4, char *a5)
{
  uint64_t v105 = a5;
  uint64_t v100 = a1;
  uint64_t v101 = a4;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v89 = (char *)&v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v88 = (char *)&v87 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v107 = (uint64_t)&v87 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v106 = (uint64_t *)((char *)&v87 - v16);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v87 - v17;
  uint64_t v19 = sub_10000588C((uint64_t *)&unk_10164E7D0);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v99 = (char *)&v87 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v104 = (uint64_t)&v87 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v103 = (uint64_t *)((char *)&v87 - v25);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v87 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v31 = (char *)&v87 - v30;
  uint64_t v96 = v29;
  uint64_t v32 = *(int *)(v29 + 48);
  uint64_t v98 = v8;
  uint64_t v34 = *(void (**)(char *, uint64_t *, uint64_t))(v8 + 16);
  uint64_t v33 = v8 + 16;
  uint64_t v35 = a2;
  uint64_t v36 = v34;
  v34((char *)&v87 - v30, (uint64_t *)v35, v7);
  uint64_t v97 = v32;
  *(void *)&v31[v32] = a3;
  uint64_t v37 = qword_101636CF0;
  uint64_t v95 = a3;
  if (v37 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for Logger();
  uint64_t v94 = sub_100010324(v38, (uint64_t)qword_10170E3B0);
  uint64_t v39 = *(int *)(v10 + 48);
  uint64_t v40 = &v18[v39];
  uint64_t v41 = &v105[v39];
  uint64_t v102 = v36;
  ((void (*)(char *))v36)(v18);
  *(void *)uint64_t v40 = *(void *)v41;
  char v42 = v41[8];
  uint64_t v43 = *((void *)v41 + 3);
  uint64_t v90 = (void (*)(void, void, void))*((void *)v41 + 2);
  uint64_t v44 = v90;
  uint64_t v91 = v43;
  uint64_t v45 = *((void *)v41 + 5);
  uint64_t v92 = *((void *)v41 + 4);
  uint64_t v46 = v92;
  os_log_t v93 = v45;
  uint64_t v47 = *((void *)v41 + 6);
  uint64_t v48 = *((void *)v41 + 7);
  char v49 = v41[64];
  char v50 = v41[65];
  uint64_t v51 = *((void *)v41 + 9);
  char v52 = v41[96];
  v40[8] = v42;
  *((void *)v40 + 2) = v44;
  *((void *)v40 + 3) = v43;
  *((void *)v40 + 4) = v46;
  *((void *)v40 + 5) = v45;
  *((void *)v40 + 6) = v47;
  *((void *)v40 + 7) = v48;
  v40[64] = v49;
  v40[65] = v50;
  *((void *)v40 + 9) = v51;
  *((_OWORD *)v40 + 5) = *((_OWORD *)v41 + 5);
  v40[96] = v52;
  sub_10001D074((uint64_t)v18, (uint64_t)v106, (uint64_t *)&unk_10164E720);
  sub_10001D608((uint64_t)v18, v107, (uint64_t *)&unk_10164E720);
  uint64_t v53 = *(int *)(v96 + 48);
  uint64_t v96 = v7;
  uint64_t v54 = v102;
  v102(v28, (uint64_t *)v31, v7);
  uint64_t v105 = v31;
  uint64_t v55 = v95;
  *(void *)&v28[v53] = v95;
  uint64_t v56 = (uint64_t)v103;
  sub_10001D074((uint64_t)v28, (uint64_t)v103, (uint64_t *)&unk_10164E7D0);
  uint64_t v57 = (uint64_t)v28;
  uint64_t v58 = v104;
  sub_10001D608(v57, v104, (uint64_t *)&unk_10164E7D0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = v55;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v60 = Logger.logObject.getter();
  os_log_type_t v61 = static os_log_type_t.default.getter();
  int v62 = v61;
  BOOL v63 = os_log_type_enabled(v60, v61);
  uint64_t v64 = v105;
  if (v63)
  {
    uint64_t v65 = v33;
    unint64_t v66 = v54;
    uint64_t v67 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v94 = v68;
    *(_DWORD *)uint64_t v67 = 141558787;
    uint64_t v108 = 1752392040;
    v109[0] = v68;
    uint64_t v95 = v109;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 12) = 2081;
    uint64_t v87 = v67 + 14;
    id v69 = v88;
    uint64_t v70 = (void (*)(void, void))v106;
    os_log_t v93 = v60;
    uint64_t v71 = v96;
    v66(v88, v106, v96);
    uint64_t v72 = v98;
    LODWORD(v92) = v62;
    uint64_t v90 = *(void (**)(void, void, void))(v98 + 32);
    uint64_t v91 = v65;
    uint64_t v73 = v89;
    v90(v89, v69, v71);
    sub_10001DAB4((uint64_t)v70, (uint64_t *)&unk_10164E720);
    sub_10001035C((unint64_t *)&qword_101638B10);
    uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v76 = v75;
    uint64_t v106 = *(uint64_t **)(v72 + 8);
    ((void (*)(char *, uint64_t))v106)(v73, v71);
    uint64_t v108 = sub_1008FA0F0(v74, v76, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v107, (uint64_t *)&unk_10164E720);
    *(_WORD *)(v67 + 22) = 2160;
    uint64_t v108 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v67 + 32) = 2081;
    uint64_t v107 = v67 + 34;
    uint64_t v77 = v99;
    uint64_t v78 = (uint64_t)v103;
    v102(v99, v103, v71);
    uint64_t v79 = (void (*)(char *, char *, uint64_t))v90;
    v90(v73, v77, v71);
    uint64_t v80 = v79;
    uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v83 = v82;
    ((void (*)(char *, uint64_t))v106)(v73, v71);
    uint64_t v108 = sub_1008FA0F0(v81, v83, v109);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v104, (uint64_t *)&unk_10164E7D0);
    sub_10001DAB4(v78, (uint64_t *)&unk_10164E7D0);
    os_log_t v84 = v93;
    _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v92, "Received device event update for subscription: %{private,mask.hash}s, beaconID: %{private,mask.hash}s.", (uint8_t *)v67, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v64 = v105;
    swift_slowDealloc();
  }
  else
  {
    sub_10001DAB4((uint64_t)v106, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v107, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v58, (uint64_t *)&unk_10164E7D0);
    sub_10001DAB4(v56, (uint64_t *)&unk_10164E7D0);

    uint64_t v77 = v99;
    uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    uint64_t v71 = v96;
  }
  v80(v77, v64, v71);

  v80(v100, v77, v71);
  uint64_t v85 = v101;

  return v85;
}

id sub_100BED3DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v66 = a1;
  uint64_t v67 = a4;
  id v69 = (void *)a2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v10 = __chkstk_darwin(v9);
  os_log_type_t v61 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v68 = (uint64_t)&v59 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  os_log_t v70 = (os_log_t)((char *)&v59 - v15);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v59 - v16;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v65 = sub_100010324(v18, (uint64_t)qword_10170E3B0);
  uint64_t v19 = *(int *)(v9 + 48);
  uint64_t v20 = &v17[v19];
  uint64_t v21 = a5 + v19;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v60 = v7 + 16;
  v59(v17, a5, v6);
  uint64_t v62 = v6;
  uint64_t v63 = v7;
  *(void *)uint64_t v20 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 16);
  uint64_t v22 = *(void *)(v21 + 24);
  uint64_t v25 = *(void *)(v21 + 32);
  uint64_t v24 = *(void *)(v21 + 40);
  uint64_t v26 = *(void *)(v21 + 48);
  uint64_t v27 = *(void *)(v21 + 56);
  char v28 = *(unsigned char *)(v21 + 64);
  char v29 = *(unsigned char *)(v21 + 65);
  uint64_t v30 = *(void *)(v21 + 72);
  char v31 = *(unsigned char *)(v21 + 96);
  v20[8] = *(unsigned char *)(v21 + 8);
  *((void *)v20 + 2) = v23;
  *((void *)v20 + 3) = v22;
  *((void *)v20 + 4) = v25;
  *((void *)v20 + 5) = v24;
  *((void *)v20 + 6) = v26;
  *((void *)v20 + 7) = v27;
  v20[64] = v28;
  v20[65] = v29;
  *((void *)v20 + 9) = v30;
  *((_OWORD *)v20 + 5) = *(_OWORD *)(v21 + 80);
  v20[96] = v31;
  sub_10001D074((uint64_t)v17, (uint64_t)v70, (uint64_t *)&unk_10164E720);
  uint64_t v32 = v68;
  sub_10001D608((uint64_t)v17, v68, (uint64_t *)&unk_10164E720);
  uint64_t v33 = (uint64_t)v69;
  sub_10001D010((uint64_t)v69, (uint64_t)v73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  int v36 = v35;
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    uint64_t v65 = v38;
    *(_DWORD *)uint64_t v37 = 141558787;
    uint64_t v71 = 1752392040;
    uint64_t v72 = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2081;
    uint64_t v40 = v61;
    uint64_t v39 = v62;
    os_log_t v41 = v70;
    v59(v61, (uint64_t)v70, v62);
    uint64_t v42 = v63;
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v63 + 32);
    LODWORD(v60) = v36;
    uint64_t v44 = v64;
    v43(v64, v40, v39);
    sub_10001DAB4((uint64_t)v41, (uint64_t *)&unk_10164E720);
    sub_10001035C((unint64_t *)&qword_101638B10);
    os_log_t v70 = v34;
    uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v47 = v46;
    uint64_t v48 = *(void (**)(char *, uint64_t))(v42 + 8);
    v48(v44, v39);
    uint64_t v71 = sub_1008FA0F0(v45, v47, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001DAB4(v68, (uint64_t *)&unk_10164E720);
    *(_WORD *)(v37 + 22) = 2160;
    uint64_t v71 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 32) = 2081;
    uint64_t v68 = v37 + 34;
    uint64_t v49 = v74;
    uint64_t v50 = v75;
    sub_10001CD44(v73, v74);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v50);
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v53 = v52;
    v48(v44, v39);
    uint64_t v54 = v69;
    uint64_t v71 = sub_1008FA0F0(v51, v53, &v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v73);
    uint64_t v34 = v70;
    _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v60, "Received device event update for subscription: %{private,mask.hash}s, beaconGroupID: %{private,mask.hash}s.", (uint8_t *)v37, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v54 = (void *)v33;
    sub_10001DAB4((uint64_t)v70, (uint64_t *)&unk_10164E720);
    sub_10001DAB4(v32, (uint64_t *)&unk_10164E720);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v73);
  }

  uint64_t v55 = v54[3];
  uint64_t v56 = v54[4];
  sub_10001CD44(v54, v55);
  (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v55, v56);
  uint64_t v57 = v67;

  return v57;
}

BOOL sub_100BED9D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10164E720);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(int *)(v5 + 56);
  uint64_t v9 = &v7[v8];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v7, a1, v11);
  *(void *)uint64_t v9 = *(void *)v10;
  char v13 = *(unsigned char *)(v10 + 64);
  char v14 = *(unsigned char *)(v10 + 65);
  uint64_t v15 = *(void *)(v10 + 72);
  char v16 = *(unsigned char *)(v10 + 96);
  v9[8] = *(unsigned char *)(v10 + 8);
  long long v17 = *(_OWORD *)(v10 + 32);
  *((_OWORD *)v9 + 1) = *(_OWORD *)(v10 + 16);
  *((_OWORD *)v9 + 2) = v17;
  *((_OWORD *)v9 + 3) = *(_OWORD *)(v10 + 48);
  v9[64] = v13;
  v9[65] = v14;
  *((void *)v9 + 9) = v15;
  *((_OWORD *)v9 + 5) = *(_OWORD *)(v10 + 80);
  v9[96] = v16;
  swift_retain();
  XPCSession.proxy.getter();
  swift_release();
  id v18 = v21;
  if (v21)
  {
    [v21 receivedUpdatedDeviceEvents:a2];
    swift_unknownObjectRelease();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v11);
  return v18 == 0;
}

uint64_t sub_100BEDB6C(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101657C20);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v59) = a2;
  uint64_t v17 = *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v56[1] = v3;
  uint64_t v18 = a1 + v56[0];
  uint64_t v61 = *(void *)(v13 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  sub_10001D074(v18, (uint64_t)v15, &qword_101657C20);
  uint64_t v57 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v62 = v7;
  uint64_t v63 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v60 = v17;
  uint64_t v20 = *(void **)&v15[v17];
  uint64_t v64 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_1007240CC((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v59)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100E84E4C();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v34 = (void *)*v64;
    *(void *)(*v64 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v35 = v34[6];
    uint64_t v59 = *(void *)(v57 + 72);
    uint64_t v36 = v62;
    v63(v35 + v59 * v23, v10, v62);
    *(void *)(v34[7] + 8 * v23) = v20;
    uint64_t v37 = v34[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v34[2] = v39;
    uint64_t v40 = v16 - 1;
    if (v16 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v41 = v58 + v61 + v56[0];
    while (1)
    {
      sub_10001D074(v41, (uint64_t)v15, &qword_101657C20);
      v63((unint64_t)v10, v15, v36);
      uint64_t v20 = *(void **)&v15[v60];
      uint64_t v42 = (void *)*v64;
      unint64_t v44 = sub_1007240CC((uint64_t)v10);
      uint64_t v45 = v42[2];
      BOOL v46 = (v43 & 1) == 0;
      uint64_t v47 = v45 + v46;
      if (__OFADD__(v45, v46)) {
        break;
      }
      char v48 = v43;
      if (v42[3] < v47)
      {
        sub_100E736F4(v47, 1);
        unint64_t v49 = sub_1007240CC((uint64_t)v10);
        if ((v48 & 1) != (v50 & 1)) {
          goto LABEL_26;
        }
        unint64_t v44 = v49;
      }
      if (v48) {
        goto LABEL_10;
      }
      uint64_t v51 = (void *)*v64;
      *(void *)(*v64 + 8 * (v44 >> 6) + 64) |= 1 << v44;
      uint64_t v36 = v62;
      v63(v51[6] + v59 * v44, v10, v62);
      *(void *)(v51[7] + 8 * v44) = v20;
      uint64_t v52 = v51[2];
      BOOL v38 = __OFADD__(v52, 1);
      uint64_t v53 = v52 + 1;
      if (v38) {
        goto LABEL_25;
      }
      v51[2] = v53;
      v41 += v61;
      if (!--v40) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100E736F4(v26, v59 & 1);
  unint64_t v28 = sub_1007240CC((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = swift_allocError();
    swift_willThrow();
    uint64_t v67 = v31;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    char v32 = swift_dynamicCast();
    uint64_t v33 = v62;
    if ((v32 & 1) == 0)
    {

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v33);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  _StringGuts.grow(_:)(30);
  v54._object = (void *)0x8000000101408560;
  v54._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v54);
  _print_unlocked<A, B>(_:_:)();
  v55._countAndFlagsBits = 39;
  v55._object = (void *)0xE100000000000000;
  String.append(_:)(v55);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100BEE0C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 184) = a5;
  *(void *)(v6 + 192) = a6;
  *(unsigned char *)(v6 + 296) = a3;
  *(void *)(v6 + 168) = a1;
  *(void *)(v6 + 176) = a4;
  sub_10000588C(&qword_101638CF0);
  *(void *)(v6 + 200) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  *(void *)(v6 + 208) = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  *(void *)(v6 + 216) = v12;
  *(void *)(v6 + 224) = *(void *)(v12 + 64);
  *(void *)(v6 + 232) = swift_task_alloc();
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = a6;
  uint64_t v13 = sub_10001D958((uint64_t *)(v6 + 16));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v13, a2, a5);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v6 + 240) = v14;
  *uint64_t v14 = v6;
  v14[1] = sub_100BEE260;
  return sub_100BEF060((uint64_t)v13, a4, a5, a6);
}

uint64_t sub_100BEE260(uint64_t a1)
{
  *(void *)(*(void *)v1 + 248) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100BEE360, 0, 0);
}

uint64_t sub_100BEE360()
{
  uint64_t v58 = v0;
  uint64_t v1 = v0 + 16;
  if (qword_101636CF0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void **)(v0 + 168);
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170E3B0);
  sub_10001D010(v0 + 16, v0 + 56);
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  id v5 = v4;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v51 = v7;
    uint64_t v52 = v6;
    uint64_t v8 = *(void *)(v0 + 232);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v53 = *(void *)(v0 + 184);
    id v54 = *(id *)(v0 + 168);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 141558787;
    *(void *)(v0 + 136) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 12) = 2081;
    sub_10001CD44((void *)(v0 + 56), *(void *)(v0 + 80));
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v11 + 8) + 8) + 32))(v53);
    sub_10001035C((unint64_t *)&qword_101638B10);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(void *)(v0 + 144) = sub_1008FA0F0(v13, v15, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
    *(_WORD *)(v12 + 22) = 2082;
    [v54 source];
    uint64_t v17 = *(void *)(v0 + 248);
    uint64_t v18 = *(void **)(v0 + 168);
    *(void *)(v0 + 152) = sub_1008FA0F0(0x6E776F6E6B6E752ELL, 0xE800000000000000, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v12 + 32) = 2048;
    uint64_t v19 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v52, v51, "Update device event for beacon: %{private,mask.hash}s, source: %{public}s,\nclientBeaconIdentifiers %ld].", (uint8_t *)v12, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v1 = v0 + 16;
  }
  else
  {
    uint64_t v16 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);

    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_101158244(*(void *)(v0 + 248));
  *(void *)(v0 + 256) = v20;
  swift_bridgeObjectRelease();
  char v21 = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v0 + 297) = v21;
  uint64_t v22 = -1;
  uint64_t v23 = -1 << v21;
  if (-v23 < 64) {
    uint64_t v22 = ~(-1 << -(char)v23);
  }
  unint64_t v24 = v22 & *(void *)(v20 + 56);
  if (v24)
  {
    uint64_t v25 = 0;
    unint64_t v26 = __clz(__rbit64(v24));
    uint64_t v27 = (v24 - 1) & v24;
    unint64_t v28 = *(void **)(v0 + 256);
    goto LABEL_10;
  }
  unint64_t v44 = 63 - v23;
  unint64_t v28 = *(void **)(v0 + 256);
  if ((unint64_t)(63 - v23) <= 0x7F) {
    goto LABEL_39;
  }
  unint64_t v45 = v28[8];
  if (!v45)
  {
    if (v44 >= 0xC0)
    {
      unint64_t v45 = v28[9];
      if (v45)
      {
        uint64_t v25 = 2;
        goto LABEL_17;
      }
      if (v44 >= 0x100)
      {
        unint64_t v45 = v28[10];
        if (v45)
        {
          uint64_t v25 = 3;
          goto LABEL_17;
        }
        if (v44 >= 0x140)
        {
          unint64_t v45 = v28[11];
          if (v45)
          {
            uint64_t v25 = 4;
            goto LABEL_17;
          }
          if (v44 >= 0x180)
          {
            unint64_t v45 = v28[12];
            if (v45)
            {
              uint64_t v25 = 5;
              goto LABEL_17;
            }
            if (v44 >= 0x1C0)
            {
              unint64_t v45 = v28[13];
              if (v45)
              {
                uint64_t v25 = 6;
                goto LABEL_17;
              }
              uint64_t v46 = 0;
              uint64_t v47 = v44 >> 6;
              if (v44 >> 6 <= 7) {
                uint64_t v47 = 7;
              }
              uint64_t v48 = v47 - 7;
              while (v48 != v46)
              {
                unint64_t v45 = v28[v46++ + 14];
                if (v45)
                {
                  uint64_t v25 = v46 + 6;
                  goto LABEL_17;
                }
              }
            }
          }
        }
      }
    }
LABEL_39:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 216) + 56))(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 208));
    goto LABEL_40;
  }
  uint64_t v25 = 1;
LABEL_17:
  uint64_t v27 = (v45 - 1) & v45;
  unint64_t v26 = __clz(__rbit64(v45)) + (v25 << 6);
LABEL_10:
  *(void *)(v0 + 264) = v25;
  *(void *)(v0 + 272) = v27;
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v30 = *(void *)(v0 + 216);
  uint64_t v31 = *(void *)(v0 + 200);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 16))(v31, v28[6] + *(void *)(v30 + 72) * v26, v29);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v31, 1, v29) != 1)
  {
    uint64_t v33 = *(void *)(v0 + 224);
    unint64_t v32 = *(void *)(v0 + 232);
    uint64_t v34 = *(void *)(v0 + 208);
    uint64_t v35 = *(void *)(v0 + 216);
    char v56 = *(unsigned char *)(v0 + 296);
    uint64_t v36 = *(void *)(v0 + 176);
    Swift::String v55 = *(void **)(v0 + 168);
    uint64_t v37 = *(void (**)(unint64_t, unint64_t, uint64_t))(v35 + 32);
    v37(v32, *(void *)(v0 + 200), v34);
    sub_10001D010(v1, v0 + 96);
    unint64_t v38 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v39 = (v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = swift_allocObject();
    *(void *)(v0 + 280) = v40;
    *(void *)(v40 + 16) = v36;
    v37(v40 + v38, v32, v34);
    sub_10001CEB0((long long *)(v0 + 96), v40 + v39);
    unint64_t v41 = v40 + ((v39 + 47) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v41 = v55;
    *(unsigned char *)(v41 + 8) = v56;
    id v42 = v55;
    swift_retain();
    char v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v43;
    void *v43 = v0;
    v43[1] = sub_100BEEB94;
    return unsafeBlocking<A>(_:)(v43, sub_100BEF608, v40, (char *)&type metadata for () + 8);
  }
LABEL_40:
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v49 = *(uint64_t (**)(void))(v0 + 8);
  return v49();
}

uint64_t sub_100BEEB94()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100BEECAC, 0, 0);
}

uint64_t sub_100BEECAC(void *a1, uint64_t (*a2)(), uint64_t a3, char *a4)
{
  int64_t v5 = *(void *)(v4 + 264);
  unint64_t v6 = *(void *)(v4 + 272);
  if (v6)
  {
    uint64_t v7 = (v6 - 1) & v6;
    unint64_t v8 = __clz(__rbit64(v6)) | (v5 << 6);
    uint64_t v9 = *(void *)(v4 + 256);
    goto LABEL_3;
  }
  int64_t v24 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  int64_t v25 = (unint64_t)((1 << *(unsigned char *)(v4 + 297)) + 63) >> 6;
  uint64_t v9 = *(void *)(v4 + 256);
  if (v24 >= v25)
  {
LABEL_25:
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v4 + 216) + 56))(*(void *)(v4 + 200), 1, 1, *(void *)(v4 + 208));
    goto LABEL_26;
  }
  uint64_t v26 = v9 + 56;
  unint64_t v27 = *(void *)(v9 + 56 + 8 * v24);
  ++v5;
  if (!v27)
  {
    int64_t v5 = v24 + 1;
    if (v24 + 1 < v25)
    {
      unint64_t v27 = *(void *)(v26 + 8 * v5);
      if (v27) {
        goto LABEL_10;
      }
      int64_t v5 = v24 + 2;
      if (v24 + 2 < v25)
      {
        unint64_t v27 = *(void *)(v26 + 8 * v5);
        if (v27) {
          goto LABEL_10;
        }
        int64_t v5 = v24 + 3;
        if (v24 + 3 < v25)
        {
          unint64_t v27 = *(void *)(v26 + 8 * v5);
          if (v27) {
            goto LABEL_10;
          }
          int64_t v5 = v24 + 4;
          if (v24 + 4 < v25)
          {
            unint64_t v27 = *(void *)(v26 + 8 * v5);
            if (v27) {
              goto LABEL_10;
            }
            int64_t v28 = v24 + 5;
            if (v28 < v25)
            {
              unint64_t v27 = *(void *)(v26 + 8 * v28);
              if (v27)
              {
                int64_t v5 = v28;
                goto LABEL_10;
              }
              while (1)
              {
                int64_t v5 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  break;
                }
                if (v5 >= v25) {
                  goto LABEL_25;
                }
                unint64_t v27 = *(void *)(v26 + 8 * v5);
                ++v28;
                if (v27) {
                  goto LABEL_10;
                }
              }
LABEL_30:
              __break(1u);
              return unsafeBlocking<A>(_:)(a1, a2, a3, a4);
            }
          }
        }
      }
    }
    goto LABEL_25;
  }
LABEL_10:
  uint64_t v7 = (v27 - 1) & v27;
  unint64_t v8 = __clz(__rbit64(v27)) + (v5 << 6);
LABEL_3:
  *(void *)(v4 + 264) = v5;
  *(void *)(v4 + 272) = v7;
  uint64_t v10 = *(void *)(v4 + 208);
  uint64_t v11 = *(void *)(v4 + 216);
  uint64_t v12 = *(void *)(v4 + 200);
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v12, *(void *)(v9 + 48) + *(void *)(v11 + 72) * v8, v10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) != 1)
  {
    uint64_t v14 = *(void *)(v4 + 224);
    unint64_t v13 = *(void *)(v4 + 232);
    uint64_t v15 = *(void *)(v4 + 208);
    uint64_t v16 = *(void *)(v4 + 216);
    char v32 = *(unsigned char *)(v4 + 296);
    uint64_t v17 = *(void *)(v4 + 176);
    uint64_t v31 = *(void **)(v4 + 168);
    uint64_t v18 = *(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 32);
    v18(v13, *(void *)(v4 + 200), v15);
    sub_10001D010(v4 + 16, v4 + 96);
    unint64_t v19 = (*(unsigned __int8 *)(v16 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v20 = (v14 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = swift_allocObject();
    *(void *)(v4 + 280) = v21;
    *(void *)(v21 + 16) = v17;
    v18(v21 + v19, v13, v15);
    sub_10001CEB0((long long *)(v4 + 96), v21 + v20);
    unint64_t v22 = v21 + ((v20 + 47) & 0xFFFFFFFFFFFFFFF8);
    *(void *)unint64_t v22 = v31;
    *(unsigned char *)(v22 + 8) = v32;
    id v23 = v31;
    swift_retain();
    a1 = (void *)swift_task_alloc();
    *(void *)(v4 + 288) = a1;
    *a1 = v4;
    a1[1] = sub_100BEEB94;
    a4 = (char *)&type metadata for () + 8;
    a2 = sub_100BEF608;
    a3 = v21;
    return unsafeBlocking<A>(_:)(a1, a2, a3, a4);
  }
LABEL_26:
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v4 + 8);
  return v29();
}

uint64_t sub_100BEF060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[7] = a2;
  uint64_t v7 = type metadata accessor for UUID();
  v4[10] = v7;
  v4[11] = *(void *)(v7 - 8);
  v4[12] = swift_task_alloc();
  v4[5] = a3;
  v4[6] = a4;
  v4[13] = (uint64_t)sub_10001D958(v4 + 2);
  (*(void (**)(void))(*(void *)(a3 - 8) + 16))();
  return _swift_task_switch(sub_100BEF17C, 0, 0);
}

uint64_t sub_100BEF17C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  sub_10000588C(&qword_10163BC50);
  *(void *)(v0 + 112) = *(void *)(v1 + 72);
  *(_DWORD *)(v0 + 136) = *(_DWORD *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(void *)(v0 + 120) = v4;
  *(_OWORD *)(v4 + 16) = xmmword_101342130;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 8) + 8) + 32))(v3);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 88))(v3, v2))
  {
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10164E850 + dword_10164E850);
    int64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v5;
    *int64_t v5 = v0;
    v5[1] = sub_100BEF330;
    uint64_t v6 = *(void *)(v0 + 96);
    return v9(v6, v0 + 16);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
    swift_task_dealloc();
    unint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v8(v4);
  }
}

uint64_t sub_100BEF330()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100BEF42C, 0, 0);
}

uint64_t sub_100BEF42C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  unint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  if (v3 >= v2 >> 1) {
    uint64_t v1 = sub_100A6F668(v2 > 1, v3 + 1, 1, *(void *)(v0 + 120));
  }
  uint64_t v4 = *(unsigned __int8 *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 80);
  *(void *)(v1 + 16) = v3 + 1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v1 + ((v4 + 32) & ~v4) + v5 * v3, v6, v8);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v9(v1);
}

uint64_t sub_100BEF510()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + v6);

  return _swift_deallocObject(v0, v7 + 9, v5);
}

uint64_t sub_100BEF608()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  unint64_t v6 = *(void **)(v0 + v4);
  char v7 = *(unsigned char *)(v0 + v4 + 8);

  return sub_100BEAEA4(v5, v0 + v2, (void *)(v0 + v3), v6, v7);
}

uint64_t sub_100BEF6BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_100BEF714()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = *(void *)(v0 + 56);
  char v7 = *(unsigned char *)(v0 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_10001D2E4;
  return sub_100BEB100(v2, v3, v4, v7, v5, v6);
}

uint64_t sub_100BEF7D8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100BEF828()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 32);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *char v7 = v1;
  v7[1] = sub_10001D2E4;
  return sub_100BEB2D8(v2, v3, v6, v4, v5);
}

id sub_100BEF8E4(char *a1, uint64_t *a2, void *a3, void *a4)
{
  return sub_100BECBF4(a1, a2, a3, a4, *(char **)(v4 + 16));
}

void *sub_100BEF8EC(uint64_t a1, uint64_t (*a2)(char *, uint64_t, void, void), uint64_t a3)
{
  unint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v19 = sub_10000588C(&qword_101657C20);
  uint64_t v5 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  char v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    v17[1] = v3;
    unint64_t v22 = _swiftEmptyArrayStorage;
    sub_1000B814C(0, v8, 0);
    uint64_t v9 = v22;
    uint64_t v18 = sub_10000588C(&qword_10165B1D8);
    uint64_t v10 = a1
        + ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80));
    uint64_t v11 = *(void *)(*(void *)(v18 - 8) + 72);
    do
    {
      uint64_t v12 = sub_10000588C((uint64_t *)&unk_10164E7D0);
      uint64_t v13 = *(int *)(v19 + 48);
      *(void *)&v7[v13] = v20(v7, v10, *(void *)(v10 + *(int *)(v12 + 48)), *(void *)(v10 + *(int *)(v18 + 48)));
      unint64_t v22 = v9;
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1)
      {
        sub_1000B814C(v14 > 1, v15 + 1, 1);
        uint64_t v9 = v22;
      }
      v9[2] = v15 + 1;
      sub_10001D608((uint64_t)v7, (uint64_t)v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, &qword_101657C20);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return v9;
}

id sub_100BEFB08(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100BED3DC(a1, a2, a3, a4, *(void *)(v4 + 16));
}

void *sub_100BEFB10(uint64_t a1, uint64_t (*a2)(char *, void *, void, void), uint64_t a3)
{
  uint64_t v17 = a2;
  uint64_t v18 = a3;
  uint64_t v5 = sub_10000588C(&qword_101657C20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    v16[1] = v3;
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1000B814C(0, v9, 0);
    uint64_t v10 = v19;
    uint64_t v11 = (void *)(a1 + 80);
    do
    {
      uint64_t v12 = *(int *)(v5 + 48);
      *(void *)&v8[v12] = v17(v8, v11 - 6, *(v11 - 1), *v11);
      uint64_t v19 = v10;
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_1000B814C(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v19;
      }
      v10[2] = v14 + 1;
      sub_10001D608((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, &qword_101657C20);
      v11 += 7;
      --v9;
    }
    while (v9);
  }
  return v10;
}

unint64_t sub_100BEFCAC()
{
  unint64_t result = qword_10164E908;
  if (!qword_10164E908)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10164E908);
  }
  return result;
}

uint64_t sub_100BEFCEC()
{
  uint64_t v1 = *(void *)(sub_10000588C((uint64_t *)&unk_10164E720) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5 + 8, v4);
}

BOOL sub_100BEFE28@<W0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10000588C((uint64_t *)&unk_10164E720) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  BOOL result = sub_100BED9D4(v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
  *a1 = result;
  return result;
}

uint64_t sub_100BEFEC0(uint64_t a1, void *a2)
{
  uint64_t v89 = a2;
  uint64_t v88 = type metadata accessor for OwnedBeaconGroup.PairingState(0);
  uint64_t v79 = *(void *)(v88 - 8);
  uint64_t v3 = __chkstk_darwin(v88);
  uint64_t v87 = &v76[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v86 = &v76[-v5];
  uint64_t v85 = sub_10000588C(&qword_101639618);
  uint64_t v6 = __chkstk_darwin(v85);
  os_log_t v84 = &v76[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v83 = &v76[-v9];
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v82 = (uint64_t *)&v76[-v11];
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v81 = (uint64_t *)&v76[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v99 = (uint64_t *)&v76[-v15];
  __chkstk_darwin(v14);
  uint64_t v80 = (uint64_t *)&v76[-v16];
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v77 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v78 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v90 = a1;
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  unint64_t v22 = v99;
  while (1)
  {
    if (v20)
    {
      uint64_t v92 = (v20 - 1) & v20;
      int64_t v93 = v21;
      unint64_t v23 = __clz(__rbit64(v20)) | (v21 << 6);
    }
    else
    {
      int64_t v24 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_38;
      }
      if (v24 >= v78) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v77 + 8 * v24);
      int64_t v26 = v21 + 1;
      if (!v25)
      {
        int64_t v26 = v21 + 2;
        if (v21 + 2 >= v78) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v77 + 8 * v26);
        if (!v25)
        {
          int64_t v26 = v21 + 3;
          if (v21 + 3 >= v78) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v77 + 8 * v26);
          if (!v25)
          {
            int64_t v26 = v21 + 4;
            if (v21 + 4 >= v78) {
              return swift_release();
            }
            unint64_t v25 = *(void *)(v77 + 8 * v26);
            if (!v25)
            {
              uint64_t v27 = v21 + 5;
              if (v21 + 5 >= v78) {
                return swift_release();
              }
              unint64_t v25 = *(void *)(v77 + 8 * v27);
              if (!v25)
              {
                while (1)
                {
                  int64_t v26 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v26 >= v78) {
                    return swift_release();
                  }
                  unint64_t v25 = *(void *)(v77 + 8 * v26);
                  ++v27;
                  if (v25) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v26 = v21 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v92 = (v25 - 1) & v25;
      int64_t v93 = v26;
      unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
    }
    uint64_t v28 = *(void *)(v90 + 56);
    uint64_t v29 = (uint64_t *)(*(void *)(v90 + 48) + 16 * v23);
    unint64_t v30 = v29[1];
    uint64_t v94 = *v29;
    uint64_t v31 = v94;
    unint64_t v95 = v30;
    char v32 = (int *)(type metadata accessor for MultipartAccessoryPairingInfo(0) - 8);
    uint64_t v33 = *(void *)(*(void *)v32 + 72);
    uint64_t v96 = v32;
    uint64_t v34 = v28 + v33 * v23;
    uint64_t v35 = v85;
    uint64_t v36 = v80;
    sub_100BFD92C(v34, (uint64_t)v80 + *(int *)(v85 + 48), type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t *v36 = v31;
    v36[1] = v30;
    sub_10001D608((uint64_t)v36, (uint64_t)v22, &qword_101639618);
    uint64_t v37 = *(int *)(v35 + 48);
    unint64_t v38 = v81;
    uint64_t v39 = (uint64_t)v81 + v37;
    uint64_t v40 = (uint64_t)v22 + v37;
    uint64_t v41 = *v22;
    unint64_t v42 = v22[1];
    *uint64_t v81 = *v22;
    v38[1] = v42;
    uint64_t v91 = (uint64_t)v38 + v37;
    sub_100BFD92C((uint64_t)v22 + v37, v39, type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v43 = sub_10000588C((uint64_t *)&unk_101647810);
    uint64_t v44 = (uint64_t)v86;
    unint64_t v45 = &v86[*(int *)(v43 + 48)];
    uint64_t v97 = v41;
    uint64_t v98 = v45;
    uint64_t v46 = *(int *)(v35 + 48);
    uint64_t v47 = v82;
    uint64_t v48 = (uint64_t)v82 + v46;
    *unint64_t v82 = v41;
    v47[1] = v42;
    sub_100BFD92C(v40, (uint64_t)v47 + v46, type metadata accessor for MultipartAccessoryPairingInfo);
    sub_10001D074(v48 + v32[8], v44, (uint64_t *)&unk_1016477E0);
    sub_1000361E0(v94, v95);
    sub_1000361E0(v41, v42);
    sub_100BFDD1C(v48, type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v49 = *(int *)(v35 + 48);
    char v50 = v83;
    os_log_type_t v51 = (char *)v83 + v49;
    *unint64_t v83 = *(_OWORD *)v22;
    sub_100BFD92C(v40, (uint64_t)v50 + v49, type metadata accessor for MultipartAccessoryPairingInfo);
    LOBYTE(v48) = *v51;
    sub_100BFDD1C((uint64_t)v51, type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v52 = *(int *)(v35 + 48);
    uint64_t v53 = v84;
    uint64_t v54 = (uint64_t)v84 + v52;
    *os_log_t v84 = *(_OWORD *)v22;
    sub_100BFD92C(v40, (uint64_t)v53 + v52, type metadata accessor for MultipartAccessoryPairingInfo);
    LOBYTE(v35) = *(unsigned char *)(v54 + v96[9]);
    sub_100BFDD1C(v54, type metadata accessor for MultipartAccessoryPairingInfo);
    Swift::String v55 = v98;
    *uint64_t v98 = v48;
    v55[1] = 0;
    v55[2] = v35;
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = v44;
    uint64_t v57 = v97;
    uint64_t v58 = v87;
    sub_100BFDB90(v56, (uint64_t)v87, type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v59 = v89;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v100 = (void *)*v59;
    uint64_t v61 = v100;
    void *v59 = 0x8000000000000000;
    unint64_t v63 = sub_1007241A0(v57, v42);
    uint64_t v64 = v61[2];
    BOOL v65 = (v62 & 1) == 0;
    uint64_t v66 = v64 + v65;
    if (__OFADD__(v64, v65)) {
      break;
    }
    char v67 = v62;
    if (v61[3] >= v66)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_t v70 = v100;
        if (v62) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_100E7EDD8();
        os_log_t v70 = v100;
        if (v67) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_100E663C4(v66, isUniquelyReferenced_nonNull_native);
      uint64_t v68 = sub_1007241A0(v57, v42);
      if ((v67 & 1) != (v69 & 1)) {
        goto LABEL_40;
      }
      unint64_t v63 = v68;
      os_log_t v70 = v100;
      if (v67)
      {
LABEL_4:
        sub_100061690((uint64_t)v58, v70[7] + *(void *)(v79 + 72) * v63);
        goto LABEL_5;
      }
    }
    v70[(v63 >> 6) + 8] |= 1 << v63;
    uint64_t v71 = (uint64_t *)(v70[6] + 16 * v63);
    *uint64_t v71 = v57;
    v71[1] = v42;
    sub_100BFDB90((uint64_t)v58, v70[7] + *(void *)(v79 + 72) * v63, type metadata accessor for OwnedBeaconGroup.PairingState);
    uint64_t v72 = v70[2];
    BOOL v73 = __OFADD__(v72, 1);
    uint64_t v74 = v72 + 1;
    if (v73) {
      goto LABEL_37;
    }
    v70[2] = v74;
    sub_1000361E0(v57, v42);
LABEL_5:
    void *v59 = v70;
    swift_bridgeObjectRelease();
    sub_10001CFB8(v57, v42);
    sub_100BFDD1C(v91, type metadata accessor for MultipartAccessoryPairingInfo);
    sub_10001DAB4((uint64_t)v99, &qword_101639618);
    unint64_t v20 = v92;
    int64_t v21 = v93;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100BF05DC(uint64_t a1)
{
  uint64_t v58 = sub_10000588C(&qword_101639618);
  uint64_t v3 = __chkstk_darwin(v58);
  uint64_t v57 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v56 = (char *)&v47 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v55 = (uint64_t *)((char *)&v47 - v8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t *)((char *)&v47 - v10);
  __chkstk_darwin(v9);
  uint64_t v53 = (uint64_t *)((char *)&v47 - v11);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (uint64_t)v13;
  }
  uint64_t v47 = v1;
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_1000B6FB0(0, v12, 0);
  uint64_t result = sub_100803228(a1);
  uint64_t v16 = result;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  uint64_t v48 = a1 + 80;
  int64_t v49 = v12;
  uint64_t v51 = a1 + 64;
  uint64_t v52 = a1;
  uint64_t v50 = v15;
  uint64_t v19 = v58;
  while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v16 >> 6;
    if ((*(void *)(v18 + 8 * ((unint64_t)v16 >> 6)) & (1 << v16)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v59 = v17;
    uint64_t v60 = 1 << v16;
    uint64_t v23 = (uint64_t)v53;
    uint64_t v24 = (uint64_t)v53 + *(int *)(v19 + 48);
    uint64_t v25 = *(void *)(a1 + 56);
    int64_t v26 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v16);
    uint64_t v27 = *v26;
    unint64_t v28 = v26[1];
    *uint64_t v53 = *v26;
    *(void *)(v23 + 8) = v28;
    uint64_t v29 = type metadata accessor for MultipartAccessoryPairingInfo(0);
    sub_100BFD92C(v25 + *(void *)(*(void *)(v29 - 8) + 72) * v16, v24, type metadata accessor for MultipartAccessoryPairingInfo);
    unint64_t v30 = v54;
    uint64_t *v54 = v27;
    v30[1] = v28;
    sub_100BFD92C(v24, (uint64_t)v30 + *(int *)(v19 + 48), type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v31 = (uint64_t)v30;
    char v32 = v55;
    sub_10001D608(v31, (uint64_t)v55, &qword_101639618);
    sub_1000361E0(v27, v28);
    sub_1000361E0(v27, v28);
    sub_10001DAB4(v23, &qword_101639618);
    uint64_t v33 = *(int *)(v19 + 48);
    uint64_t v34 = (uint64_t)&v56[v33];
    uint64_t v36 = *v32;
    unint64_t v35 = v32[1];
    sub_100BFD92C((uint64_t)v32 + v33, (uint64_t)&v56[v33], type metadata accessor for MultipartAccessoryPairingInfo);
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = (uint64_t)v57 + *(int *)(v19 + 48);
    *uint64_t v57 = v36;
    *(void *)(v37 + 8) = v35;
    sub_100BFDB90(v34, v38, type metadata accessor for MultipartAccessoryPairingInfo);
    sub_1000361E0(v36, v35);
    sub_1000361E0(v36, v35);
    sub_10001DAB4(v37, &qword_101639618);
    sub_10001DAB4((uint64_t)v32, &qword_101639618);
    uint64_t v13 = v61;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1000B6FB0(0, v13[2] + 1, 1);
      uint64_t v13 = v61;
    }
    unint64_t v40 = v13[2];
    unint64_t v39 = v13[3];
    if (v40 >= v39 >> 1)
    {
      uint64_t result = sub_1000B6FB0(v39 > 1, v40 + 1, 1);
      uint64_t v13 = v61;
    }
    v13[2] = v40 + 1;
    uint64_t v41 = &v13[2 * v40];
    v41[4] = v36;
    v41[5] = v35;
    a1 = v52;
    int64_t v20 = 1 << *(unsigned char *)(v52 + 32);
    if (v16 >= v20) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    uint64_t v42 = *(void *)(v51 + 8 * v22);
    if ((v42 & v60) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v50;
    if (*(_DWORD *)(v52 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v43 = v42 & (-2 << (v16 & 0x3F));
    if (v43)
    {
      int64_t v20 = __clz(__rbit64(v43)) | v16 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v49;
    }
    else
    {
      unint64_t v44 = v22 + 1;
      unint64_t v45 = (unint64_t)(v20 + 63) >> 6;
      int64_t v21 = v49;
      if (v22 + 1 < v45)
      {
        unint64_t v46 = *(void *)(v51 + 8 * v44);
        if (v46)
        {
LABEL_22:
          int64_t v20 = __clz(__rbit64(v46)) + (v44 << 6);
        }
        else
        {
          while (v45 - 2 != v22)
          {
            unint64_t v46 = *(void *)(v48 + 8 * v22++);
            if (v46)
            {
              unint64_t v44 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v17 = v59 + 1;
    uint64_t v16 = v20;
    if (v59 + 1 == v21) {
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100BF0A30(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v106 = a7;
  uint64_t v8 = v7;
  uint64_t v96 = a6;
  uint64_t v95 = a5;
  uint64_t v97 = a3;
  uint64_t v98 = a4;
  uint64_t v11 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v11 - 8);
  uint64_t v99 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C((uint64_t *)&unk_10166BFA0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v94 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccessoryProductInfo();
  uint64_t v100 = *(void *)(v16 - 8);
  uint64_t v101 = v16;
  __chkstk_darwin(v16);
  uint64_t v102 = (uint64_t)&v94 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v18 - 8);
  int64_t v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v103 = (uint64_t)&v94 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v94 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  unint64_t v30 = (char *)&v94 - v29;
  __chkstk_darwin(v28);
  unint64_t v108 = a2;
  uint64_t v109 = (uint64_t)&v94 - v31;
  uint64_t v107 = a1;
  uint64_t v104 = v8;
  sub_100AE7A78(a1, a2, (uint64_t)v20);
  char v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v110 = (int *)v21;
  int v33 = v32(v20, 1, v21);
  if (v33 != 1)
  {
    sub_100BFDB90((uint64_t)v20, (uint64_t)v30, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    uint64_t v44 = sub_100010324(v43, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v30, (uint64_t)v27, type metadata accessor for OwnedBeaconGroup);
    unint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    int v47 = v46;
    BOOL v48 = os_log_type_enabled(v45, v46);
    uint64_t v49 = v107;
    if (v48)
    {
      uint64_t v50 = swift_slowAlloc();
      LODWORD(v106) = v33;
      uint64_t v51 = v50;
      uint64_t v102 = swift_slowAlloc();
      v112[0] = v102;
      *(_DWORD *)uint64_t v51 = 141558275;
      v111[0] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v51 + 12) = 2081;
      uint64_t v100 = v51 + 14;
      LODWORD(v101) = v47;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v52 = dispatch thunk of CustomStringConvertible.description.getter();
      v111[0] = sub_1008FA0F0(v52, v53, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v27, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v101, "Found existing OwnedBeaconGroup %{private,mask.hash}s", (uint8_t *)v51, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      int v33 = v106;
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v27, type metadata accessor for OwnedBeaconGroup);
    }

    unint64_t v54 = v108;
    sub_1004CCF70(v44);
    uint64_t v55 = v109;
    sub_100BFDB90((uint64_t)v30, v109, type metadata accessor for OwnedBeaconGroup);
    goto LABEL_21;
  }
  sub_10001DAB4((uint64_t)v20, &qword_10163BB20);
  unint64_t v34 = *(void *)(v106 + 112);
  if (v34 >> 60 != 15)
  {
    uint64_t v35 = *(void *)(v106 + 104);
    uint64_t v36 = v106 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_productInfo;
    swift_beginAccess();
    sub_10001D074(v36, (uint64_t)v15, (uint64_t *)&unk_10166BFA0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v15, 1, v101) == 1)
    {
      sub_10001DAB4((uint64_t)v15, (uint64_t *)&unk_10166BFA0);
      goto LABEL_5;
    }
    LODWORD(v106) = 1;
    uint64_t v56 = (uint64_t)v15;
    uint64_t v57 = v102;
    sub_100BFDB90(v56, v102, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    sub_100037A38(v35, v34);
    uint64_t v101 = sub_100BFD3FC(v35, v34, v57);
    char v59 = v58;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    sub_100010324(v60, (uint64_t)qword_10170F068);
    uint64_t v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.info.getter();
    BOOL v63 = os_log_type_enabled(v61, v62);
    uint64_t v49 = v107;
    unint64_t v54 = v108;
    if (v63)
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "Creating new OwnedBeaconGroup.", v64, 2u);
      swift_slowDealloc();
    }

    uint64_t v65 = v109;
    uint64_t v66 = v110;
    uint64_t v67 = v109 + v110[7];
    uint64_t v68 = type metadata accessor for MACAddress();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 16))(v67, v95, v68);
    uint64_t v69 = v96;
    swift_bridgeObjectRetain();
    uint64_t v70 = v98;
    swift_bridgeObjectRetain();
    UUID.init()();
    *(_OWORD *)uint64_t v65 = xmmword_101348180;
    *(void *)(v65 + 16) = v101;
    *(unsigned char *)(v65 + 24) = v59 & 1;
    v111[0] = (uint64_t)&_swiftEmptyDictionarySingleton;
    uint64_t v71 = v105;
    sub_100BEFEC0(v69, v111);
    uint64_t v105 = v71;
    swift_bridgeObjectRelease();
    uint64_t v72 = v35;
    uint64_t v55 = v65;
    sub_100037A24(v72, v34);
    *(unsigned char *)(v65 + v66[8]) = 1;
    BOOL v73 = (void *)(v65 + v66[9]);
    *BOOL v73 = v97;
    v73[1] = v70;
    *(void *)(v65 + v66[10]) = v111[0];
    sub_100BFDD1C(v102, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    int v33 = v106;
LABEL_21:
    uint64_t v74 = swift_allocBox();
    uint64_t v76 = v75;
    sub_100BFD92C(v55, v75, type metadata accessor for OwnedBeaconGroup);
    if (sub_1004D9824(v49, v54))
    {
      uint64_t v77 = v74;
      int64_t v78 = dispatch_group_create();
      uint64_t v79 = swift_allocObject();
      *(unsigned char *)(v79 + 16) = 0;
      dispatch_group_enter(v78);
      uint64_t v80 = v103;
      if (v33 == 1)
      {
        sub_100BFD92C(v76, v103, type metadata accessor for OwnedBeaconGroup);
        uint64_t v81 = v78;
        swift_retain();
        sub_100B39338(v80, 0, v104, v81, v79);
      }
      else
      {
        sub_100BFD92C(v55, v103, type metadata accessor for OwnedBeaconGroup);
        uint64_t v90 = swift_allocObject();
        *(void *)(v90 + 16) = v78;
        *(void *)(v90 + 24) = v79;
        swift_retain();
        uint64_t v91 = v78;
        swift_retain();
        sub_101072EAC(v80, 0, (void (*)(uint64_t))sub_100BFD76C, v77, (void (*)(uint64_t (*)(uint64_t)))sub_100BFDED8, (void (*)(uint64_t (*)(uint64_t)))v90);
        swift_release();
      }
      swift_release();
      sub_100BFDD1C(v80, type metadata accessor for OwnedBeaconGroup);
      OS_dispatch_group.wait()();
      swift_beginAccess();
      if ((*(unsigned char *)(v79 + 16) & 1) == 0)
      {
        sub_100BFDD1C(v55, type metadata accessor for OwnedBeaconGroup);
        swift_release();

        return swift_release();
      }
      sub_10009FD9C();
      swift_allocError();
      *uint64_t v92 = 15;
      swift_willThrow();

      sub_100BFDD1C(v55, type metadata accessor for OwnedBeaconGroup);
      swift_release();
    }
    else
    {
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v82 = type metadata accessor for Logger();
      sub_100010324(v82, (uint64_t)qword_10170F068);
      sub_1000361E0(v49, v54);
      sub_1000361E0(v49, v54);
      unint64_t v83 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v110 = (int *)v74;
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        uint64_t v109 = swift_slowAlloc();
        v111[0] = v109;
        *(_DWORD *)uint64_t v85 = 136315138;
        sub_1000361E0(v49, v54);
        static String.Encoding.utf8.getter();
        uint64_t v86 = String.init(data:encoding:)();
        if (!v87) {
          uint64_t v86 = Data.hexString.getter();
        }
        uint64_t v88 = v86;
        unint64_t v89 = v87;
        sub_10001CFB8(v49, v54);
        v112[5] = sub_1008FA0F0(v88, v89, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10001CFB8(v49, v54);
        sub_10001CFB8(v49, v54);
        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Unable to set pairing locked state for %s", v85, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10001CFB8(v49, v54);
        sub_10001CFB8(v49, v54);
      }
      sub_10009FD9C();
      swift_allocError();
      *int64_t v93 = 2;
      swift_willThrow();
      sub_100BFDD1C(v55, type metadata accessor for OwnedBeaconGroup);
    }
    return swift_release();
  }
LABEL_5:
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_100010324(v37, (uint64_t)qword_10170F068);
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    unint64_t v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Missing product info to handle pairing lock error.", v40, 2u);
    swift_slowDealloc();
  }

  sub_10009FD9C();
  swift_allocError();
  *uint64_t v41 = 5;
  return swift_willThrow();
}

uint64_t sub_100BF17A8(uint64_t a1, uint64_t a2, long long *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v412 = a8;
  unint64_t v401 = a7;
  uint64_t v402 = a5;
  v404 = a3;
  uint64_t v385 = a1;
  uint64_t v383 = type metadata accessor for BeaconObservation();
  uint64_t v384 = *(void *)(v383 - 8);
  __chkstk_darwin(v383);
  uint64_t v388 = (uint64_t)v348 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10000588C(&qword_101639628);
  __chkstk_darwin(v11 - 8);
  uint64_t v393 = (uint64_t)v348 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v394 = type metadata accessor for MultipartAccessoryPairingInfo(0);
  uint64_t v392 = *(void *)(v394 - 8);
  __chkstk_darwin(v394);
  uint64_t v14 = (unsigned __int8 *)v348 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v406 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v406);
  uint64_t v397 = (uint64_t)v348 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v411 = type metadata accessor for DispatchTime();
  uint64_t v408 = *(void *)(v411 - 8);
  uint64_t v16 = __chkstk_darwin(v411);
  v409 = (char *)v348 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v410 = (char *)v348 - v18;
  uint64_t v405 = type metadata accessor for PairingConfig();
  __chkstk_darwin(v405);
  int64_t v20 = (char *)v348 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v420 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v407 = *(void *)(v420 - 8);
  uint64_t v21 = __chkstk_darwin(v420);
  uint64_t v386 = (uint64_t)v348 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v389 = (uint64_t)v348 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)v348 - v26;
  __chkstk_darwin(v25);
  v422 = (_OWORD *)((char *)v348 - v28);
  uint64_t v403 = type metadata accessor for StableIdentifier();
  __chkstk_darwin(v403);
  uint64_t v419 = (uint64_t)v348 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Endianness();
  __chkstk_darwin(v30 - 8);
  v415 = (void (*)(uint64_t, char *, uint64_t))((char *)v348 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v390 = sub_10000588C(&qword_10163BB20);
  uint64_t v32 = __chkstk_darwin(v390);
  uint64_t v391 = (uint64_t)v348 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v413 = (uint64_t)v348 - v34;
  uint64_t v424 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v416 = *(void *)(v424 - 8);
  uint64_t v35 = __chkstk_darwin(v424);
  uint64_t v387 = (uint64_t)v348 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v396 = (uint64_t)v348 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  v399 = (char *)v348 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v414 = (uint64_t)v348 - v42;
  uint64_t v43 = __chkstk_darwin(v41);
  uint64_t v398 = (uint64_t)v348 - v44;
  uint64_t v45 = __chkstk_darwin(v43);
  uint64_t v400 = (uint64_t)v348 - v46;
  __chkstk_darwin(v45);
  BOOL v48 = (char *)v348 - v47;
  uint64_t v49 = sub_10000588C((uint64_t *)&unk_10166BFA0);
  __chkstk_darwin(v49 - 8);
  uint64_t v421 = (uint64_t)v348 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v425 = type metadata accessor for AccessoryProductInfo();
  uint64_t isa = (uint64_t)v425[-1].isa;
  __chkstk_darwin(v425);
  uint64_t v52 = (char *)v348 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v53 - 8);
  v417 = (char *)v348 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10000588C(&qword_101638CF0);
  uint64_t v56 = __chkstk_darwin(v55 - 8);
  uint64_t v395 = (uint64_t)v348 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v56);
  char v59 = (char *)v348 - v58;
  uint64_t v60 = type metadata accessor for UUID();
  uint64_t v61 = *(void *)(v60 - 8);
  uint64_t v62 = __chkstk_darwin(v60);
  uint64_t v65 = &qword_101637000;
  if (!v64[12]) {
    goto LABEL_12;
  }
  unint64_t v66 = v64[14];
  if (v66 >> 60 == 15) {
    goto LABEL_12;
  }
  unint64_t v67 = *(void *)((char *)v64 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessorySerialNumber + 8);
  if (v67 >> 60 == 15) {
    goto LABEL_12;
  }
  uint64_t v380 = v64[12];
  uint64_t v372 = a2;
  v373 = v14;
  unint64_t v382 = v66;
  unint64_t v379 = v67;
  v377 = v52;
  v376 = v48;
  v381 = (char *)v348 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v375 = v64[11];
  uint64_t v68 = v64[13];
  uint64_t v69 = *(void *)((char *)v64 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessorySerialNumber);
  v378 = v64;
  uint64_t v70 = (uint64_t)v64 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_fmnaId;
  uint64_t v71 = v62;
  swift_beginAccess();
  sub_10001D074(v70, (uint64_t)v59, &qword_101638CF0);
  v374 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
  if (v374((uint64_t)v59, 1, v71) != 1)
  {
    uint64_t v364 = v61 + 48;
    uint64_t v366 = a6;
    v365 = v27;
    v367 = v20;
    uint64_t v72 = v381;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v381, v59, v71);
    unint64_t v73 = v379;
    uint64_t v431 = v69;
    unint64_t v432 = v379;
    sub_100037A38(v69, v379);
    sub_100037A38(v69, v73);
    swift_bridgeObjectRetain();
    uint64_t v74 = v68;
    uint64_t v75 = v68;
    unint64_t v76 = v382;
    sub_100037A38(v74, v382);
    unint64_t v368 = sub_1000362FC();
    if (DataProtocol.isNull.getter())
    {
      sub_100037A24(v69, v73);
      (*(void (**)(char *, uint64_t))(v61 + 8))(v72, v71);
      sub_100037A24(v75, v76);
      sub_100037A24(v69, v73);
LABEL_10:
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v371 = v75;
    uint64_t v369 = v71;
    uint64_t v370 = v61;
    uint64_t v77 = Data.trimmed.getter();
    unint64_t v79 = v78;
    sub_100037A24(v69, v73);
    uint64_t v80 = v69;
    if (*((unsigned char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryPartId + 1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
      sub_100037A24(v371, v382);
      sub_100037A24(v69, v73);
      sub_10001CFB8(v77, v79);
      goto LABEL_10;
    }
    unint64_t v87 = (void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryEcid);
    unint64_t v88 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryEcid + 8);
    uint64_t v89 = v371;
    int v359 = *((unsigned __int8 *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryPartId);
    if (v88 >> 60 == 15)
    {
      uint64_t v357 = 0;
      unint64_t v362 = 0;
      uint64_t v358 = 0;
      unint64_t v363 = 0;
      uint64_t v90 = v438;
    }
    else
    {
      unint64_t v91 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryChipId + 8);
      uint64_t v90 = v438;
      if (v91 >> 60 == 15)
      {
        uint64_t v357 = 0;
        unint64_t v362 = 0;
        uint64_t v358 = 0;
        unint64_t v363 = 0;
      }
      else
      {
        uint64_t v92 = *v87;
        uint64_t v93 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryChipId);
        sub_100037A38(*v87, v88);
        sub_100037A38(v93, v91);
        uint64_t v94 = Data.hexString.getter();
        uint64_t v96 = HIBYTE(v95) & 0xF;
        if ((v95 & 0x2000000000000000) == 0) {
          uint64_t v96 = v94 & 0xFFFFFFFFFFFFLL;
        }
        if (v96)
        {
          uint64_t v358 = v94;
          unint64_t v363 = v95;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v358 = 0;
          unint64_t v363 = 0;
        }
        uint64_t v97 = Data.hexString.getter();
        uint64_t v99 = HIBYTE(v98) & 0xF;
        if ((v98 & 0x2000000000000000) == 0) {
          uint64_t v99 = v97 & 0xFFFFFFFFFFFFLL;
        }
        if (v99)
        {
          uint64_t v357 = v97;
          unint64_t v362 = v98;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v357 = 0;
          unint64_t v362 = 0;
        }
        sub_100037A24(v92, v88);
        sub_100037A24(v93, v91);
      }
    }
    uint64_t v431 = v77;
    unint64_t v432 = v79;
    sub_100BFBD38();
    uint64_t v100 = RawRepresentable<>.hexString.getter();
    uint64_t v102 = HIBYTE(v101) & 0xF;
    if ((v101 & 0x2000000000000000) == 0) {
      uint64_t v102 = v100 & 0xFFFFFFFFFFFFLL;
    }
    if (!v102)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (qword_101637310 != -1) {
        swift_once();
      }
      uint64_t v106 = type metadata accessor for Logger();
      sub_100010324(v106, (uint64_t)qword_10170F068);
      uint64_t v107 = Logger.logObject.getter();
      os_log_type_t v108 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v107, v108)) {
        goto LABEL_61;
      }
      unint64_t v109 = v79;
      uint64_t v110 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v110 = 0;
      uint64_t v111 = "generateOwnedBeaconRecord: invalid parameters for StableIdentifier.";
      goto LABEL_60;
    }
    unint64_t v103 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_alternateSerialNumber + 8);
    unint64_t v361 = v101;
    uint64_t v355 = v100;
    if (v103 >> 60 != 15)
    {
      uint64_t v431 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_alternateSerialNumber);
      uint64_t v104 = v431;
      unint64_t v432 = v103;
      sub_1000361E0(v431, v103);
      if ((DataProtocol.isNull.getter() & 1) == 0)
      {
        uint64_t v356 = v80;
        uint64_t v112 = Data.trimmed.getter();
        uint64_t v431 = v112;
        unint64_t v432 = v113;
        unint64_t v114 = v113;
        uint64_t v115 = RawRepresentable<>.hexString.getter();
        unint64_t v105 = v116;
        uint64_t v117 = HIBYTE(v116) & 0xF;
        uint64_t v354 = v115;
        if ((v116 & 0x2000000000000000) == 0) {
          uint64_t v117 = v115 & 0xFFFFFFFFFFFFLL;
        }
        if (v117)
        {
          sub_100037A24(v104, v103);
          sub_10001CFB8(v112, v114);
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_100037A24(v104, v103);
          sub_10001CFB8(v112, v114);
          uint64_t v354 = 0;
          unint64_t v105 = 0;
        }
        uint64_t v90 = v438;
        uint64_t v80 = v356;
LABEL_49:
        unint64_t v360 = v105;
        if (qword_101637310 != -1) {
          swift_once();
        }
        uint64_t v118 = type metadata accessor for Logger();
        uint64_t v119 = sub_100010324(v118, (uint64_t)qword_10170F068);
        sub_1000361E0(v77, v79);
        sub_1000361E0(v77, v79);
        unint64_t v368 = v119;
        uint64_t v120 = Logger.logObject.getter();
        int v121 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v120, (os_log_type_t)v121))
        {
          LODWORD(v356) = v121;
          uint64_t v122 = swift_slowAlloc();
          uint64_t v431 = swift_slowAlloc();
          *(_DWORD *)uint64_t v122 = 141558275;
          uint64_t v429 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          v123 = (uint8_t *)v122;
          *(_WORD *)(v122 + 12) = 2081;
          sub_1000361E0(v77, v79);
          static String.Encoding.utf8.getter();
          uint64_t v124 = String.init(data:encoding:)();
          if (v125)
          {
            unint64_t v126 = v125;
            uint64_t v127 = v124;
          }
          else
          {
            uint64_t v127 = Data.hexString.getter();
            unint64_t v126 = v128;
          }
          sub_10001CFB8(v77, v79);
          uint64_t v352 = (uint64_t)(v123 + 14);
          uint64_t v429 = sub_1008FA0F0(v127, v126, &v431);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10001CFB8(v77, v79);
          sub_10001CFB8(v77, v79);
          _os_log_impl((void *)&_mh_execute_header, v120, (os_log_type_t)v356, "Removing any existing beacon record for %{private,mask.hash}s", v123, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v89 = v371;
        }
        else
        {
          sub_10001CFB8(v77, v79);
          sub_10001CFB8(v77, v79);
        }
        sub_100BF8798(v77, v79);
        uint64_t v129 = (char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_productInfo;
        swift_beginAccess();
        uint64_t v130 = (uint64_t)v129;
        uint64_t v131 = v421;
        sub_10001D074(v130, v421, (uint64_t *)&unk_10166BFA0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, NSObject *))(isa + 48))(v131, 1, v425) == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10001DAB4(v131, (uint64_t *)&unk_10166BFA0);
          uint64_t v107 = Logger.logObject.getter();
          os_log_type_t v108 = static os_log_type_t.error.getter();
          if (!os_log_type_enabled(v107, v108))
          {
LABEL_61:

            sub_10009FD9C();
            swift_allocError();
            *uint64_t v132 = 5;
            swift_willThrow();
            sub_100037A24(v371, v382);
            sub_10001CFB8(v77, v79);
            sub_100037A24(v80, v379);
            return (*(uint64_t (**)(char *, uint64_t))(v370 + 8))(v381, v369);
          }
          unint64_t v109 = v79;
          uint64_t v110 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v110 = 0;
          uint64_t v111 = "Missing product info to create beacon.";
LABEL_60:
          _os_log_impl((void *)&_mh_execute_header, v107, v108, v111, v110, 2u);
          unint64_t v79 = v109;
          swift_slowDealloc();
          goto LABEL_61;
        }
        uint64_t v133 = v131;
        uint64_t v134 = (uint64_t)v377;
        sub_100BFDB90(v133, (uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        uint64_t v352 = sub_100BFD3FC(v89, v382, v134);
        int v136 = v135;
        uint64_t v137 = v413;
        sub_100AE7A78(v77, v79, v413);
        uint64_t v138 = v137;
        uint64_t v139 = v416 + 48;
        v349 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v416 + 48);
        int v140 = v349(v138, 1, v424);
        uint64_t v356 = v80;
        uint64_t v421 = v77;
        unint64_t v353 = v79;
        uint64_t v350 = v139;
        if (v140 == 1)
        {
          sub_10001DAB4(v138, &qword_10163BB20);
          uint64_t v141 = v412;
          uint64_t v142 = v418;
          uint64_t v143 = sub_100BF05DC(v412);
          sub_1000361E0(v77, v79);
          v144 = sub_100BFCD28(v143, v77, v79);
          sub_10001CFB8(v77, v79);
          swift_bridgeObjectRelease();
          uint64_t v145 = sub_1011586CC((uint64_t)v144);
          swift_bridgeObjectRelease();
          uint64_t v429 = (uint64_t)&_swiftEmptySetSingleton;
          swift_retain();
          sub_100BFBF1C(v145, v90, (uint64_t)&v429);
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v146 = v429;
          swift_retain();
          sub_100BFC840(v146, v90);
          swift_bridgeObjectRelease();
          swift_release();
          v147 = Logger.logObject.getter();
          os_log_type_t v148 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v147, v148))
          {
            v149 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v149 = 0;
            _os_log_impl((void *)&_mh_execute_header, v147, v148, "Creating new OwnedBeaconGroup.", v149, 2u);
            swift_slowDealloc();
          }

          v150 = (int *)v424;
          uint64_t v151 = (uint64_t)v376;
          v152 = &v376[*(int *)(v424 + 28)];
          uint64_t v153 = type metadata accessor for MACAddress();
          (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v153 - 8) + 16))(v152, v401, v153);
          swift_bridgeObjectRetain();
          uint64_t v154 = v366;
          swift_bridgeObjectRetain();
          UUID.init()();
          *(_OWORD *)uint64_t v151 = xmmword_101348180;
          *(void *)(v151 + 16) = v352;
          *(unsigned char *)(v151 + 24) = v136 & 1;
          uint64_t v429 = (uint64_t)&_swiftEmptyDictionarySingleton;
          sub_100BEFEC0(v141, &v429);
          uint64_t v418 = v142;
          swift_bridgeObjectRelease();
          int v155 = 0;
          *(unsigned char *)(v151 + v150[8]) = 1;
          v156 = (void *)(v151 + v150[9]);
          void *v156 = v402;
          v156[1] = v154;
          *(void *)(v151 + v150[10]) = v429;
          goto LABEL_81;
        }
        int v351 = v136;
        uint64_t v157 = v400;
        sub_100BFDB90(v138, v400, type metadata accessor for OwnedBeaconGroup);
        uint64_t v158 = v398;
        sub_100BFD92C(v157, v398, type metadata accessor for OwnedBeaconGroup);
        v159 = Logger.logObject.getter();
        os_log_type_t v160 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v159, v160))
        {
          uint64_t v161 = swift_slowAlloc();
          uint64_t v413 = swift_slowAlloc();
          uint64_t v429 = v413;
          *(_DWORD *)uint64_t v161 = 141558275;
          uint64_t v427 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v161 + 12) = 2081;
          v348[1] = v161 + 14;
          sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v162 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v427 = sub_1008FA0F0(v162, v163, &v429);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100BFDD1C(v158, type metadata accessor for OwnedBeaconGroup);
          _os_log_impl((void *)&_mh_execute_header, v159, v160, "Found existing OwnedBeaconGroup %{private,mask.hash}s", (uint8_t *)v161, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100BFDD1C(v158, type metadata accessor for OwnedBeaconGroup);
        }

        uint64_t v164 = (uint64_t)v399;
        sub_1004CCF70(v368);
        char v165 = *((unsigned char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_forcePair);
        uint64_t v166 = v414;
        sub_100BFD92C(v157, v414, type metadata accessor for OwnedBeaconGroup);
        char v167 = v351;
        if (v165)
        {
          sub_100BFDD1C(v166, type metadata accessor for OwnedBeaconGroup);
LABEL_71:
          sub_100BFDB90(v157, (uint64_t)v376, type metadata accessor for OwnedBeaconGroup);
          int v155 = 1;
          goto LABEL_81;
        }
        char v168 = sub_1004CF378();
        uint64_t v169 = v414;
        char v170 = v168;
        sub_100BFD92C(v414, v164, type metadata accessor for OwnedBeaconGroup);
        if (v170)
        {
          sub_100BFDD1C(v164, type metadata accessor for OwnedBeaconGroup);
          sub_100BFDD1C(v169, type metadata accessor for OwnedBeaconGroup);
        }
        else
        {
          uint64_t v171 = v395;
          sub_1004D1078(v77, v79, v395);
          sub_100BFDD1C(v164, type metadata accessor for OwnedBeaconGroup);
          sub_100BFDD1C(v169, type metadata accessor for OwnedBeaconGroup);
          int v172 = v374(v171, 1, v369);
          uint64_t v173 = v171;
          char v167 = v351;
          sub_10001DAB4(v173, &qword_101638CF0);
          if (v172 == 1) {
            goto LABEL_71;
          }
        }
        sub_1000361E0(v77, v79);
        sub_1000361E0(v77, v79);
        v174 = Logger.logObject.getter();
        uint64_t v175 = v77;
        unint64_t v176 = v79;
        os_log_type_t v177 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v174, v177))
        {
          uint64_t v178 = swift_slowAlloc();
          uint64_t v429 = swift_slowAlloc();
          *(_DWORD *)uint64_t v178 = 141558275;
          uint64_t v427 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v178 + 12) = 2081;
          sub_1000361E0(v175, v176);
          static String.Encoding.utf8.getter();
          uint64_t v179 = String.init(data:encoding:)();
          if (!v180) {
            uint64_t v179 = Data.hexString.getter();
          }
          uint64_t v181 = v179;
          unint64_t v182 = v180;
          sub_10001CFB8(v175, v176);
          uint64_t v427 = sub_1008FA0F0(v181, v182, &v429);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_10001CFB8(v175, v176);
          sub_10001CFB8(v175, v176);
          _os_log_impl((void *)&_mh_execute_header, v174, v177, "%{private,mask.hash}s is already paired. Need to clean up for possible bud replacement", (uint8_t *)v178, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v183 = v412;
          char v167 = v351;
        }
        else
        {
          sub_10001CFB8(v175, v176);
          sub_10001CFB8(v175, v176);

          uint64_t v183 = v412;
        }
        uint64_t v184 = v400;
        sub_100BF7464(v400);
        v185 = (int *)v424;
        uint64_t v186 = v396;
        uint64_t v187 = v396 + *(int *)(v424 + 28);
        uint64_t v188 = type metadata accessor for MACAddress();
        (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v188 - 8) + 16))(v187, v401, v188);
        swift_bridgeObjectRetain();
        uint64_t v189 = v366;
        swift_bridgeObjectRetain();
        UUID.init()();
        *(_OWORD *)uint64_t v186 = xmmword_101348180;
        *(void *)(v186 + 16) = v352;
        *(unsigned char *)(v186 + 24) = v167 & 1;
        uint64_t v429 = (uint64_t)&_swiftEmptyDictionarySingleton;
        uint64_t v190 = v418;
        sub_100BEFEC0(v183, &v429);
        uint64_t v418 = v190;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v186 + v185[8]) = 1;
        v191 = (void *)(v186 + v185[9]);
        void *v191 = v402;
        v191[1] = v189;
        *(void *)(v186 + v185[10]) = v429;
        sub_100BFDD1C(v184, type metadata accessor for OwnedBeaconGroup);
        sub_100BFDB90(v186, (uint64_t)v376, type metadata accessor for OwnedBeaconGroup);
        int v155 = 0;
        uint64_t v77 = v421;
LABEL_81:
        uint64_t v192 = v371;
        unint64_t v193 = v382;
        uint64_t v194 = sub_1002AA484(v371, v382);
        sub_1002AA5D4(v192, v193);
        static Endianness.current.getter();
        sub_100091A80();
        FixedWidthInteger.init(data:ofEndianness:)();
        if (BYTE4(v429)) {
          uint64_t v195 = 0;
        }
        else {
          uint64_t v195 = (int)v429;
        }
        int v196 = v377[SHIDWORD(v425[4].isa)];
        if (v196 == 2)
        {
          if (!sub_100DC8868(v192, v382))
          {
LABEL_86:
            uint64_t v413 = v195;
            uint64_t v414 = v194;
            LODWORD(v402) = v155;
            v197 = (int *)sub_10000588C(&qword_1016555E0);
            uint64_t v198 = v419;
            v199 = (uint64_t *)(v419 + v197[12]);
            v200 = (uint64_t *)(v419 + v197[16]);
            v201 = (uint64_t *)(v419 + v197[20]);
            v202 = (unsigned char *)(v419 + v197[24]);
            v203 = (uint64_t *)(v419 + v197[28]);
            unint64_t v204 = (v370 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
            uint64_t v205 = v369;
            v415 = *(void (**)(uint64_t, char *, uint64_t))(v370 + 16);
            v415(v419, v381, v369);
            uint64_t v206 = v363;
            uint64_t *v199 = v358;
            v199[1] = v206;
            uint64_t v207 = v362;
            uint64_t *v200 = v357;
            v200[1] = v207;
            uint64_t v208 = v361;
            uint64_t *v201 = v355;
            v201[1] = v208;
            unsigned char *v202 = v359;
            v202[1] = 0;
            uint64_t v209 = v360;
            uint64_t *v203 = v354;
            v203[1] = v209;
            uint64_t v210 = (uint64_t)v376;
            goto LABEL_91;
          }
        }
        else if ((v196 & 1) == 0)
        {
          goto LABEL_86;
        }
        swift_bridgeObjectRelease();
        unint64_t v211 = v353;
        if (!v363 || (uint64_t v212 = v362) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v278 = Logger.logObject.getter();
          os_log_type_t v279 = static os_log_type_t.error.getter();
          BOOL v280 = os_log_type_enabled(v278, v279);
          uint64_t v281 = v356;
          if (v280)
          {
            v282 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v282 = 0;
            _os_log_impl((void *)&_mh_execute_header, v278, v279, "generateOwnedBeaconRecord: ECID and ChipID are required for HELE accessory", v282, 2u);
            swift_slowDealloc();
          }

          sub_10009FD9C();
          swift_allocError();
          unsigned char *v283 = 5;
          swift_willThrow();
          sub_100037A24(v371, v382);
          sub_10001CFB8(v77, v211);
          sub_100037A24(v281, v379);
          sub_100BFDD1C((uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
          goto LABEL_112;
        }
        uint64_t v413 = v195;
        uint64_t v414 = v194;
        LODWORD(v402) = v155;
        uint64_t v213 = v363;
        v214 = (int *)sub_10000588C((uint64_t *)&unk_1016565E0);
        uint64_t v198 = v419;
        v215 = (uint64_t *)(v419 + v214[12]);
        v216 = (uint64_t *)(v419 + v214[16]);
        v217 = (uint64_t *)(v419 + v214[20]);
        uint64_t v218 = v214[24];
        unint64_t v204 = (v370 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v205 = v369;
        v415 = *(void (**)(uint64_t, char *, uint64_t))(v370 + 16);
        v415(v419, v381, v369);
        uint64_t *v215 = v358;
        v215[1] = v213;
        uint64_t *v216 = v357;
        v216[1] = v212;
        uint64_t v210 = (uint64_t)v376;
        uint64_t v219 = v361;
        uint64_t *v217 = v355;
        v217[1] = v219;
        *(unsigned char *)(v198 + v218) = v359;
LABEL_91:
        swift_storeEnumTagMultiPayload();
        v220 = (int *)v420;
        v221 = v422;
        uint64_t v403 = (uint64_t)v422 + *(int *)(v420 + 20);
        UUID.init()();
        sub_100BFD92C(v198, (uint64_t)v221 + v220[6], (uint64_t (*)(void))type metadata accessor for StableIdentifier);
        v222 = (char *)v221 + v220[7];
        uint64_t v223 = v210 + *(int *)(v424 + 24);
        unint64_t v401 = v204;
        v415((uint64_t)v222, (char *)v223, v205);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v370 + 56))(v222, 0, 1, v205);
        sub_100A9E43C((uint64_t)v221 + v220[8]);
        v224 = v404;
        long long v437 = v404[2];
        sub_10001D608((uint64_t)(v404 + 3), (uint64_t)v436, &qword_10163A138);
        sub_10001D608((uint64_t)(v224 + 4), (uint64_t)v435, &qword_10163A138);
        long long v225 = v224[1];
        long long v434 = *v224;
        long long v433 = v225;
        v226 = &v377[SLODWORD(v425[6].isa)];
        uint64_t v228 = *(void *)v226;
        uint64_t v227 = *((void *)v226 + 1);
        _OWORD *v221 = xmmword_101348180;
        *(_OWORD *)((char *)v221 + v220[9]) = v437;
        sub_10001D608((uint64_t)v436, (uint64_t)v221 + v220[10], &qword_10163A138);
        sub_10001D608((uint64_t)v435, (uint64_t)v221 + v220[11], &qword_10163A138);
        *(_OWORD *)((char *)v221 + v220[12]) = v434;
        *(_OWORD *)((char *)v221 + v220[13]) = v433;
        v229 = (void *)((char *)v221 + v220[14]);
        void *v229 = v228;
        v229[1] = v227;
        v230 = (void *)((char *)v221 + v220[15]);
        uint64_t v231 = v380;
        void *v230 = v375;
        v230[1] = v231;
        *(void *)((char *)v221 + v220[16]) = v414;
        *(void *)((char *)v221 + v220[17]) = v413;
        *((unsigned char *)v221 + v220[18]) = 3;
        *((unsigned char *)v221 + v220[19]) = 0;
        *((unsigned char *)v221 + v220[20]) = 0;
        unint64_t v232 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryDisplayName + 8);
        if (v232)
        {
          uint64_t v233 = *(void *)((char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessoryDisplayName);
          sub_100061E54((uint64_t)&v437);
          sub_100091B38((uint64_t)v436);
          sub_100091B38((uint64_t)v435);
          sub_100061E54((uint64_t)&v434);
          sub_100061E54((uint64_t)&v433);
          swift_bridgeObjectRetain();
          unint64_t v234 = v232;
          uint64_t v235 = (uint64_t)v377;
          uint64_t v236 = (uint64_t)v367;
          uint64_t v237 = v407;
          uint64_t v238 = v405;
        }
        else
        {
          uint64_t v429 = 0;
          unint64_t v430 = 0xE000000000000000;
          sub_100061E54((uint64_t)&v437);
          sub_100091B38((uint64_t)v436);
          sub_100091B38((uint64_t)v435);
          sub_100061E54((uint64_t)&v434);
          sub_100061E54((uint64_t)&v433);
          swift_bridgeObjectRetain();
          static String.Encoding.utf8.getter();
          uint64_t v239 = String.init(data:encoding:)();
          uint64_t v236 = (uint64_t)v367;
          uint64_t v237 = v407;
          uint64_t v238 = v405;
          if (!v240) {
            uint64_t v239 = Data.hexString.getter();
          }
          uint64_t v235 = (uint64_t)v377;
          String.append(_:)(*(Swift::String *)&v239);
          swift_bridgeObjectRelease();
          uint64_t v233 = v429;
          unint64_t v234 = v430;
        }
        uint64_t v241 = v236 + *(int *)(v238 + 28);
        sub_100BFD92C(v235, v241, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        (*(void (**)(uint64_t, void, uint64_t, NSObject *))(isa + 56))(v241, 0, 1, v425);
        *(void *)uint64_t v236 = v233;
        *(void *)(v236 + 8) = v234;
        *(_OWORD *)(v236 + 16) = xmmword_101379BE0;
        *(void *)(v236 + 32) = 0xA400000000000000;
        swift_bridgeObjectRetain();
        v242 = dispatch_group_create();
        uint64_t v243 = swift_allocBox();
        uint64_t v245 = v244;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v237 + 56))(v244, 1, 1, v420);
        dispatch_group_enter(v242);
        uint64_t v246 = swift_allocObject();
        *(void *)(v246 + 16) = v242;
        *(void *)(v246 + 24) = v243;
        v247 = v242;
        uint64_t isa = v243;
        swift_retain();
        sub_100AA0654((uint64_t)v422, (void *)v236, (uint64_t)sub_100BFD764, v246);
        swift_release();
        v248 = v409;
        static DispatchTime.now()();
        uint64_t v249 = v237;
        v250 = v410;
        + infix(_:_:)();
        v251 = *(void (**)(char *, uint64_t))(v408 + 8);
        uint64_t v252 = v411;
        v251(v248, v411);
        v425 = v247;
        OS_dispatch_group.wait(timeout:)();
        v251(v250, v252);
        if (static DispatchTimeoutResult.== infix(_:_:)())
        {
          v253 = Logger.logObject.getter();
          os_log_type_t v254 = static os_log_type_t.error.getter();
          BOOL v255 = os_log_type_enabled(v253, v254);
          uint64_t v256 = v356;
          if (v255)
          {
            v257 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v257 = 0;
            _os_log_impl((void *)&_mh_execute_header, v253, v254, "Timed out creating new beacon record", v257, 2u);
            swift_slowDealloc();
          }

          sub_10009FD9C();
          swift_allocError();
          unsigned char *v258 = 13;
          swift_willThrow();
          sub_100037A24(v371, v382);

          sub_10001CFB8(v421, v353);
          uint64_t v259 = v256;
          goto LABEL_102;
        }
        swift_beginAccess();
        uint64_t v260 = v245;
        uint64_t v261 = v397;
        sub_10001D074(v260, v397, &qword_10163B9F0);
        int v262 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v249 + 48))(v261, 1, v420);
        uint64_t v263 = v356;
        if (v262 == 1)
        {
          sub_10001DAB4(v261, &qword_10163B9F0);
          sub_10009FD9C();
          swift_allocError();
          unsigned char *v264 = 13;
          swift_willThrow();
          sub_100037A24(v371, v382);

          sub_10001CFB8(v421, v353);
          uint64_t v259 = v263;
LABEL_102:
          sub_100037A24(v259, v379);
          sub_100BFDD1C(v236, (uint64_t (*)(void))type metadata accessor for PairingConfig);
          sub_100BFDD1C((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          sub_100BFDD1C(v419, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
          sub_100BFDD1C((uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
LABEL_103:
          swift_release();
LABEL_112:
          uint64_t v284 = (uint64_t)v376;
          return sub_100BFDD1C(v284, type metadata accessor for OwnedBeaconGroup);
        }
        sub_100BFDB90(v261, (uint64_t)v365, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        uint64_t v265 = swift_allocBox();
        uint64_t v267 = v266;
        sub_100BFD92C((uint64_t)v376, v266, type metadata accessor for OwnedBeaconGroup);
        uint64_t v268 = v371;
        if ((uint64_t)v378[4] < 1)
        {
          v285 = Logger.logObject.getter();
          os_log_type_t v286 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v285, v286))
          {
            v287 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v287 = 0;
            _os_log_impl((void *)&_mh_execute_header, v285, v286, "Expected non-zero pairingEpoch", v287, 2u);
            uint64_t v268 = v371;
            swift_slowDealloc();
          }

          sub_10009FD9C();
          swift_allocError();
          unsigned char *v288 = 2;
          swift_willThrow();
          sub_100037A24(v268, v382);

          sub_10001CFB8(v421, v353);
          sub_100037A24(v263, v379);
          sub_100BFDD1C((uint64_t)v365, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          sub_100BFDD1C((uint64_t)v367, (uint64_t (*)(void))type metadata accessor for PairingConfig);
          sub_100BFDD1C((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          sub_100BFDD1C(v419, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
          sub_100BFDD1C((uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
          swift_release();
          goto LABEL_103;
        }
        uint64_t v269 = v412;
        if (!*(void *)(v412 + 16))
        {
          uint64_t v276 = v393;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v392 + 56))(v393, 1, 1, v394);
LABEL_120:
          sub_10001DAB4(v276, &qword_101639628);
LABEL_121:
          v290 = Logger.logObject.getter();
          os_log_type_t v291 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v290, v291))
          {
            v292 = (uint8_t *)swift_slowAlloc();
            uint64_t v428 = swift_slowAlloc();
            *(_DWORD *)v292 = 136315138;
            swift_beginAccess();
            uint64_t v293 = sub_1004D6904();
            uint64_t v426 = sub_1008FA0F0(v293, v294, &v428);
            uint64_t v268 = v371;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v290, v291, "Unable to pair new beacon with its group %s", v292, 0xCu);
            swift_arrayDestroy();
            uint64_t v295 = (uint64_t)v377;
            uint64_t v296 = (uint64_t)v376;
            swift_slowDealloc();
            uint64_t v263 = v356;
            swift_slowDealloc();

            unint64_t v297 = v353;
          }
          else
          {

            unint64_t v297 = v353;
            uint64_t v296 = (uint64_t)v376;
            uint64_t v295 = (uint64_t)v377;
          }
          sub_10009FD9C();
          swift_allocError();
          unsigned char *v298 = 2;
          swift_willThrow();
          sub_100037A24(v268, v382);

          sub_10001CFB8(v421, v297);
          sub_100037A24(v263, v379);
          sub_100BFDD1C((uint64_t)v365, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          sub_100BFDD1C((uint64_t)v367, (uint64_t (*)(void))type metadata accessor for PairingConfig);
          sub_100BFDD1C((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          sub_100BFDD1C(v419, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
          sub_100BFDD1C(v295, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
          (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
          swift_release();
          swift_release();
          uint64_t v284 = v296;
          return sub_100BFDD1C(v284, type metadata accessor for OwnedBeaconGroup);
        }
        uint64_t v270 = v421;
        unint64_t v271 = v353;
        sub_1000361E0(v421, v353);
        uint64_t v272 = sub_1007241A0(v270, v271);
        if (v273)
        {
          uint64_t v274 = v392;
          uint64_t v275 = *(void *)(v269 + 56) + *(void *)(v392 + 72) * v272;
          uint64_t v276 = v393;
          sub_100BFD92C(v275, v393, type metadata accessor for MultipartAccessoryPairingInfo);
          uint64_t v277 = 0;
        }
        else
        {
          uint64_t v277 = 1;
          uint64_t v276 = v393;
          uint64_t v274 = v392;
        }
        uint64_t v289 = v394;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v274 + 56))(v276, v277, 1, v394);
        sub_10001CFB8(v421, v353);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48))(v276, 1, v289) == 1) {
          goto LABEL_120;
        }
        v417 = (char *)v265;
        v299 = v373;
        sub_100BFDB90(v276, (uint64_t)v373, type metadata accessor for MultipartAccessoryPairingInfo);
        uint64_t v300 = v378[2];
        unint64_t v301 = v378[3];
        uint64_t v302 = v378[4];
        char v303 = *((unsigned char *)v378 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_forcePair);
        sub_1000361E0(v300, v301);
        LOBYTE(v302) = sub_1004D9028(v403, v421, v353, v299, v300, v301, v302, v303);
        sub_10001CFB8(v300, v301);
        if ((v302 & 1) == 0)
        {
          sub_100BFDD1C((uint64_t)v299, type metadata accessor for MultipartAccessoryPairingInfo);
          uint64_t v263 = v356;
          uint64_t v268 = v371;
          goto LABEL_121;
        }
        uint64_t v304 = swift_allocBox();
        uint64_t v306 = v305;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v416 + 56))(v305, 1, 1, v424);
        v307 = v425;
        dispatch_group_enter(v425);
        uint64_t v414 = v304;
        uint64_t v308 = v396;
        if (v402)
        {
          sub_100BFD92C((uint64_t)v376, v396, type metadata accessor for OwnedBeaconGroup);
          uint64_t v309 = swift_allocObject();
          *(void *)(v309 + 16) = v307;
          *(void *)(v309 + 24) = v304;
          v310 = v307;
          uint64_t v311 = (uint64_t)v417;
          swift_retain();
          swift_retain();
          sub_101072EAC(v308, 0, (void (*)(uint64_t))sub_100BFD76C, v311, (void (*)(uint64_t (*)(uint64_t)))sub_100BFD78C, (void (*)(uint64_t (*)(uint64_t)))v309);
          swift_release();
        }
        else
        {
          sub_100BFD92C(v267, v396, type metadata accessor for OwnedBeaconGroup);
          v312 = v307;
          swift_retain();
          sub_100B39ADC(v308, 0, v438, v312, v304);
        }
        swift_release();
        sub_100BFDD1C(v308, type metadata accessor for OwnedBeaconGroup);
        v313 = v409;
        static DispatchTime.now()();
        v314 = v410;
        + infix(_:_:)();
        v315 = v313;
        uint64_t v316 = v411;
        v251(v315, v411);
        OS_dispatch_group.wait(timeout:)();
        v251(v314, v316);
        if (static DispatchTimeoutResult.== infix(_:_:)())
        {
          v317 = Logger.logObject.getter();
          os_log_type_t v318 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v317, v318))
          {
            v319 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)v319 = 0;
            _os_log_impl((void *)&_mh_execute_header, v317, v318, "Timed out saving beacon group", v319, 2u);
            swift_slowDealloc();
          }

          sub_10009FD9C();
          swift_allocError();
          char v321 = 13;
        }
        else
        {
          swift_beginAccess();
          uint64_t v322 = v391;
          sub_10001D074(v306, v391, &qword_10163BB20);
          if (v349(v322, 1, v424) != 1)
          {
            uint64_t v329 = v387;
            sub_100BFDB90(v391, v387, type metadata accessor for OwnedBeaconGroup);
            uint64_t v330 = v329 + *(int *)(v424 + 24);
            uint64_t v331 = v388;
            v415(v388, (char *)v330, v369);
            uint64_t v332 = v383;
            static Date.trustedNow.getter(v331 + *(int *)(v383 + 20));
            *(unsigned char *)(v331 + *(int *)(v332 + 24)) = 37;
            if (qword_101636CB8 != -1) {
              swift_once();
            }
            uint64_t v333 = qword_10170E330;
            sub_10000588C(&qword_10163A778);
            unint64_t v334 = (*(unsigned __int8 *)(v384 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v384 + 80);
            uint64_t v335 = swift_allocObject();
            *(_OWORD *)(v335 + 16) = xmmword_101342130;
            uint64_t v336 = v388;
            sub_100BFD92C(v388, v335 + v334, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
            uint64_t v337 = type metadata accessor for Transaction();
            __chkstk_darwin(v337);
            v348[-4] = v333;
            v348[-3] = v335;
            v348[-2] = 0;
            v348[-1] = 0;
            static Transaction.named<A>(_:with:)();
            swift_bridgeObjectRelease();
            sub_100037A24(v371, v382);

            sub_10001CFB8(v421, v353);
            sub_100037A24(v356, v379);
            sub_100BFDD1C(v336, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
            sub_100BFDD1C((uint64_t)v373, type metadata accessor for MultipartAccessoryPairingInfo);
            sub_100BFDD1C((uint64_t)v367, (uint64_t (*)(void))type metadata accessor for PairingConfig);
            sub_100BFDD1C((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            sub_100BFDD1C(v419, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
            sub_100BFDD1C((uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
            (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
            sub_100BFDB90((uint64_t)v365, v385, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            sub_100BFDB90(v387, v372, type metadata accessor for OwnedBeaconGroup);
            goto LABEL_147;
          }
          sub_10001DAB4(v391, &qword_10163BB20);
          sub_100BFD92C((uint64_t)v365, v389, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          v323 = Logger.logObject.getter();
          os_log_type_t v324 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v323, v324))
          {
            uint64_t v325 = swift_slowAlloc();
            uint64_t v428 = swift_slowAlloc();
            *(_DWORD *)uint64_t v325 = 141558275;
            uint64_t v426 = 1752392040;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *(_WORD *)(v325 + 12) = 2081;
            uint64_t v326 = v389;
            sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v327 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v426 = sub_1008FA0F0(v327, v328, &v428);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            sub_100BFDD1C(v326, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            _os_log_impl((void *)&_mh_execute_header, v323, v324, "Failed to create/modify beacon group. Unpairing beacon: %{private,mask.hash}s", (uint8_t *)v325, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            sub_100BFDD1C(v389, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
          }

          uint64_t v338 = sub_100DBB224((uint64_t)v365, 0, 0);
          if (v338)
          {
            uint64_t v339 = v338;
            sub_100BFD92C((uint64_t)v365, v386, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
            swift_errorRetain();
            swift_errorRetain();
            v340 = Logger.logObject.getter();
            os_log_type_t v341 = static os_log_type_t.error.getter();
            if (os_log_type_enabled(v340, v341))
            {
              uint64_t v342 = swift_slowAlloc();
              uint64_t v428 = swift_slowAlloc();
              *(_DWORD *)uint64_t v342 = 141558531;
              uint64_t v426 = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v342 + 12) = 2081;
              uint64_t v343 = v386;
              sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v344 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v426 = sub_1008FA0F0(v344, v345, &v428);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100BFDD1C(v343, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
              *(_WORD *)(v342 + 22) = 2082;
              uint64_t v426 = v339;
              swift_errorRetain();
              sub_10000588C(&qword_101638D40);
              uint64_t v346 = String.init<A>(describing:)();
              uint64_t v426 = sub_1008FA0F0(v346, v347, &v428);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl((void *)&_mh_execute_header, v340, v341, "Unable to clean up orphaned beacon record %{private,mask.hash}s.\nError %{public}s", (uint8_t *)v342, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              sub_100BFDD1C(v386, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
              swift_errorRelease();
              swift_errorRelease();
            }
          }
          sub_10009FD9C();
          swift_allocError();
          char v321 = 15;
        }
        char *v320 = v321;
        swift_willThrow();
        sub_100037A24(v371, v382);

        sub_10001CFB8(v421, v353);
        sub_100037A24(v356, v379);
        sub_100BFDD1C((uint64_t)v373, type metadata accessor for MultipartAccessoryPairingInfo);
        sub_100BFDD1C((uint64_t)v365, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        sub_100BFDD1C((uint64_t)v367, (uint64_t (*)(void))type metadata accessor for PairingConfig);
        sub_100BFDD1C((uint64_t)v422, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        sub_100BFDD1C(v419, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
        sub_100BFDD1C((uint64_t)v377, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
        (*(void (**)(char *, uint64_t))(v370 + 8))(v381, v369);
LABEL_147:
        swift_release();
        swift_release();
        goto LABEL_103;
      }
      sub_100037A24(v104, v103);
    }
    uint64_t v354 = 0;
    unint64_t v105 = 0;
    goto LABEL_49;
  }
  sub_10001DAB4((uint64_t)v59, &qword_101638CF0);
LABEL_11:
  uint64_t v65 = &qword_101637000;
LABEL_12:
  if (v65[98] != -1) {
    swift_once();
  }
  uint64_t v81 = type metadata accessor for Logger();
  sub_100010324(v81, (uint64_t)qword_10170F068);
  uint64_t v82 = Logger.logObject.getter();
  os_log_type_t v83 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v82, v83))
  {
    os_log_type_t v84 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v84 = 0;
    _os_log_impl((void *)&_mh_execute_header, v82, v83, "generateOwnedBeaconRecordGroup: could not get basic device info from the session.", v84, 2u);
    swift_slowDealloc();
  }

  sub_10009FD9C();
  swift_allocError();
  unsigned char *v85 = 5;
  return swift_willThrow();
}

uint64_t sub_100BF5520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[29] = a7;
  v8[30] = v7;
  v8[27] = a5;
  v8[28] = a6;
  v8[25] = a3;
  v8[26] = a4;
  v8[23] = a1;
  v8[24] = a2;
  sub_10000588C(&qword_10164DBB0);
  v8[31] = swift_task_alloc();
  v8[32] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Connection.TransactionMode();
  v8[33] = v9;
  v8[34] = *(void *)(v9 - 8);
  v8[35] = swift_task_alloc();
  uint64_t v10 = sub_10000588C(&qword_10163CE68);
  v8[36] = v10;
  v8[37] = *(void *)(v10 - 8);
  v8[38] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for Table();
  v8[39] = v11;
  v8[40] = *(void *)(v11 - 8);
  v8[41] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v8[42] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[43] = v13;
  v8[44] = *(void *)(v13 + 64);
  v8[45] = swift_task_alloc();
  v8[46] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for StandaloneBeacon();
  v8[47] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  v8[48] = v15;
  v8[49] = *(void *)(v15 + 64);
  v8[50] = swift_task_alloc();
  v8[51] = swift_task_alloc();
  type metadata accessor for String.Encoding();
  v8[52] = swift_task_alloc();
  return _swift_task_switch(sub_100BF57FC, 0, 0);
}

uint64_t sub_100BF57FC()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v1 + 104);
  *(void *)(v0 + 424) = v2;
  unint64_t v3 = *(void *)(v1 + 112);
  *(void *)(v0 + 432) = v3;
  if (v3 >> 60 != 15)
  {
    uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC12searchpartyd20AccessoryPairingInfo_accessorySerialNumber);
    uint64_t v5 = *v4;
    *(void *)(v0 + 440) = *v4;
    unint64_t v6 = v4[1];
    *(void *)(v0 + 448) = v6;
    if (v6 >> 60 != 15)
    {
      sub_100037A38(v2, v3);
      sub_100037A38(v5, v6);
      static String.Encoding.utf8.getter();
      uint64_t v7 = String.init(data:encoding:)();
      *(void *)(v0 + 456) = v7;
      *(void *)(v0 + 464) = v8;
      if (v8)
      {
        uint64_t v9 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
        }
        if (v9)
        {
          uint64_t v10 = qword_1016375E8;
          swift_retain();
          if (v10 != -1) {
            swift_once();
          }
          swift_beginAccess();
          uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
          if (*(void *)(v0 + 80))
          {
            sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
            swift_release();
            sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
            uint64_t v19 = (uint64_t (__cdecl *)())((char *)&dword_1016391C8 + dword_1016391C8);
            uint64_t v12 = (void *)swift_task_alloc();
            *(void *)(v0 + 472) = v12;
            *uint64_t v12 = v0;
            v12[1] = sub_100BF5BB0;
            return v19();
          }
          else
          {
            __break(1u);
          }
          return result;
        }
        swift_bridgeObjectRelease();
      }
      sub_100037A24(v5, v6);
      sub_100037A24(v2, v3);
    }
  }
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100010324(v13, (uint64_t)qword_10170F068);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "generateStandaloneBeacon: could not get basic device info from the session.", v16, 2u);
    swift_slowDealloc();
  }

  sub_10009FD9C();
  swift_allocError();
  *uint64_t v17 = 5;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100BF5BB0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 480) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100BF5CB0, 0, 0);
}

uint64_t sub_100BF5CB0()
{
  if (v0[60])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    uint64_t v1 = v0[60];
    return _swift_task_switch(sub_100BF5F04, v1, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100010324(v2, (uint64_t)qword_10170F068);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "Missing StandaloneBeaconService!", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v7 = v0[55];
    unint64_t v6 = v0[56];
    uint64_t v9 = v0[53];
    unint64_t v8 = v0[54];

    sub_10009FD9C();
    swift_allocError();
    *uint64_t v10 = 17;
    swift_willThrow();
    sub_100037A24(v7, v6);
    sub_100037A24(v9, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_100BF5F04()
{
  sub_100FBE200(v0[57], v0[58], *(void **)(v0[60] + 128));
  v0[61] = 0;
  v0[62] = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  return _swift_task_switch(sub_100BF60C8, 0, 0);
}

uint64_t sub_100BF5FB4()
{
  uint64_t v1 = v0[55];
  unint64_t v2 = v0[56];
  uint64_t v4 = v0[53];
  unint64_t v3 = v0[54];
  swift_release();
  sub_100037A24(v1, v2);
  sub_100037A24(v4, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100BF60C8()
{
  uint64_t v52 = v0;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170F068);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 496);
  unint64_t v6 = *(void *)(v0 + 464);
  if (v4)
  {
    uint64_t v49 = *(void *)(v0 + 456);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v51 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 134218499;
    uint64_t v8 = *(void *)(v5 + 16);
    swift_release();
    *(void *)(v0 + 160) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v7 + 12) = 2160;
    *(void *)(v0 + 168) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 22) = 2081;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 176) = sub_1008FA0F0(v49, v6, &v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Removing %ld existing beacons matching %{private,mask.hash}s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = *(void *)(v0 + 496);
  uint64_t v10 = *(void *)(v9 + 16);
  *(void *)(v0 + 504) = v10;
  if (v10)
  {
    uint64_t v11 = *(void *)(v0 + 384);
    int v12 = *(_DWORD *)(v11 + 80);
    *(_DWORD *)(v0 + 632) = v12;
    *(void *)(v0 + 512) = *(void *)(v11 + 72);
    *(_DWORD *)(v0 + 636) = enum case for Connection.TransactionMode.deferred(_:);
    uint64_t v13 = *(void *)(v0 + 488);
    *(void *)(v0 + 528) = 0;
    *(void *)(v0 + 520) = v13;
    uint64_t v14 = *(void *)(v0 + 408);
    uint64_t v15 = *(void *)(v0 + 368);
    uint64_t v16 = *(void *)(v0 + 336);
    uint64_t v17 = *(void *)(v0 + 344);
    sub_100BFD92C(v9 + ((v12 + 32) & ~(unint64_t)v12), v14, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16);
    *(void *)(v0 + 536) = v18;
    *(void *)(v0 + 544) = (v17 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v18(v15, v14, v16);
    sub_100BFDD1C(v14, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    uint64_t v19 = *(void *)(v0 + 480);
    uint64_t v20 = sub_100BF65BC;
  }
  else
  {
    swift_release();
    *(void *)(v0 + 568) = *(void *)(v0 + 488);
    uint64_t v46 = *(void *)(v0 + 464);
    unint64_t v47 = *(void *)(v0 + 432);
    uint64_t v44 = *(void *)(v0 + 456);
    uint64_t v45 = *(void *)(v0 + 424);
    uint64_t v21 = *(int **)(v0 + 376);
    uint64_t v48 = *(void *)(v0 + 224);
    unint64_t v50 = *(void *)(v0 + 232);
    uint64_t v43 = *(void *)(v0 + 216);
    uint64_t v22 = *(void *)(v0 + 208);
    uint64_t v24 = *(void *)(v0 + 184);
    uint64_t v23 = *(uint64_t **)(v0 + 192);
    uint64_t v25 = v23[2];
    *(void *)(v0 + 576) = v25;
    unint64_t v26 = v23[3];
    *(void *)(v0 + 584) = v26;
    uint64_t v27 = *v23;
    *(void *)(v0 + 592) = *v23;
    unint64_t v28 = v23[1];
    *(void *)(v0 + 600) = v28;
    uint64_t v29 = v23[4];
    *(void *)(v0 + 608) = v29;
    uint64_t v41 = v29;
    uint64_t v42 = v27;
    unint64_t v30 = v23[5];
    *(void *)(v0 + 616) = v30;
    uint64_t v39 = v22;
    unint64_t v40 = v30;
    sub_1000361E0(v25, v26);
    sub_1000361E0(v27, v28);
    sub_1000361E0(v29, v30);
    UUID.init()();
    uint64_t v31 = v24 + v21[5];
    uint64_t v32 = type metadata accessor for MACAddress();
    uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
    v33(v31, v39, v32);
    v33(v24 + v21[6], v43, v32);
    sub_100A9E43C(v24 + v21[8]);
    uint64_t v34 = (void *)(v24 + v21[7]);
    *uint64_t v34 = v44;
    v34[1] = v46;
    uint64_t v35 = (uint64_t *)(v24 + v21[9]);
    *uint64_t v35 = v45;
    v35[1] = v47;
    uint64_t v36 = (uint64_t *)(v24 + v21[10]);
    uint64_t *v36 = v25;
    v36[1] = v26;
    void v36[2] = v42;
    v36[3] = v28;
    v36[4] = v41;
    v36[5] = v40;
    uint64_t v37 = (uint64_t *)(v24 + v21[11]);
    *uint64_t v37 = v48;
    v37[1] = v50;
    sub_100037A38(v45, v47);
    sub_1000361E0(v25, v26);
    sub_1000361E0(v42, v28);
    sub_1000361E0(v41, v40);
    sub_1000361E0(v48, v50);
    uint64_t v19 = *(void *)(v0 + 480);
    uint64_t v20 = sub_100BF6FB0;
  }
  return _swift_task_switch(v20, v19, 0);
}

void sub_100BF65BC()
{
  uint64_t v1 = *(void *)(v0 + 520);
  unint64_t v2 = *(os_unfair_lock_s **)(*(void *)(*(void *)(v0 + 480) + 128) + 16);
  os_log_type_t v3 = v2 + 4;
  BOOL v4 = v2 + 5;
  os_unfair_lock_lock(v2 + 5);
  sub_1002B3D78(v3, (unsigned char *)(v0 + 640));
  os_unfair_lock_unlock(v4);
  if (!v1)
  {
    if ((*(unsigned char *)(v0 + 640) & 1) != 0
      && (sub_10000588C(&qword_10163CEF8),
          OSAllocatedUnfairLock.callAsFunction<A>(_:)(),
          (uint64_t v5 = *(void *)(v0 + 152)) != 0))
    {
      uint64_t v6 = *(void *)(v5 + 24);
      swift_retain();
      swift_release();
      if (qword_101636D48 != -1) {
        swift_once();
      }
      unsigned int v40 = *(_DWORD *)(v0 + 636);
      uint64_t v7 = *(void *)(v0 + 328);
      uint64_t v8 = *(void *)(v0 + 304);
      uint64_t v9 = *(void *)(v0 + 296);
      uint64_t v10 = *(void *)(v0 + 272);
      uint64_t v11 = *(void *)(v0 + 280);
      uint64_t v36 = *(void *)(v0 + 288);
      uint64_t v38 = *(void *)(v0 + 264);
      uint64_t v12 = sub_10000588C(&qword_10163CE70);
      sub_100010324(v12, (uint64_t)qword_10170E460);
      == infix<A>(_:_:)();
      QueryType.filter(_:)();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v36);
      uint64_t v13 = swift_task_alloc();
      *(void *)(v13 + 16) = v6;
      *(void *)(v13 + 24) = v7;
      (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v11, v40, v38);
      Connection.transaction(_:block:)();
      *(void *)(v0 + 552) = 0;
      uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 536);
      uint64_t v17 = *(void *)(v0 + 360);
      uint64_t v37 = *(void *)(v0 + 368);
      uint64_t v18 = *(void *)(v0 + 344);
      uint64_t v41 = *(void *)(v0 + 480);
      uint64_t v20 = *(void *)(v0 + 328);
      uint64_t v19 = *(void *)(v0 + 336);
      uint64_t v22 = *(void *)(v0 + 312);
      uint64_t v21 = *(void *)(v0 + 320);
      uint64_t v23 = *(void *)(v0 + 256);
      (*(void (**)(void, void))(*(void *)(v0 + 272) + 8))(*(void *)(v0 + 280), *(void *)(v0 + 264));
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      swift_task_dealloc();
      uint64_t v24 = type metadata accessor for TaskPriority();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56))(v23, 1, 1, v24);
      v39(v17, v37, v19);
      uint64_t v26 = sub_100BFDD7C(&qword_10165B250, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconService);
      unint64_t v27 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
      unint64_t v28 = (char *)swift_allocObject();
      *((void *)v28 + 2) = v41;
      *((void *)v28 + 3) = v26;
      *((void *)v28 + 4) = v41;
      (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(&v28[v27], v17, v19);
      LODWORD(v18) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24);
      swift_retain_n();
      uint64_t v29 = *(void *)(v0 + 256);
      if (v18 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 256), &qword_10164DBB0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v29, v24);
      }
      if (*((void *)v28 + 2))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v30 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v32 = v31;
        swift_unknownObjectRelease();
        if (v32 | v30)
        {
          *(void *)(v0 + 96) = 0;
          *(void *)(v0 + 104) = 0;
          *(void *)(v0 + 112) = v30;
          *(void *)(v0 + 120) = v32;
        }
      }
      uint64_t v33 = *(void *)(v0 + 368);
      uint64_t v34 = *(void *)(v0 + 336);
      uint64_t v35 = *(void *)(v0 + 344);
      swift_task_create();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
      uint64_t v16 = sub_100BF6CC0;
    }
    else
    {
      sub_1001A149C();
      uint64_t v14 = swift_allocError();
      *(_DWORD *)uint64_t v15 = 2;
      *(unsigned char *)(v15 + 4) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 560) = v14;
      (*(void (**)(void, void))(*(void *)(v0 + 344) + 8))(*(void *)(v0 + 368), *(void *)(v0 + 336));
      swift_release();
      uint64_t v16 = sub_100BF6BB0;
    }
    _swift_task_switch(v16, 0, 0);
  }
}

uint64_t sub_100BF6BB0()
{
  uint64_t v2 = v0[55];
  unint64_t v1 = v0[56];
  sub_100037A24(v0[53], v0[54]);
  sub_100037A24(v2, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100BF6CC0()
{
  uint64_t v1 = *(void *)(v0 + 528) + 1;
  if (v1 == *(void *)(v0 + 504))
  {
    swift_release();
    *(void *)(v0 + 568) = *(void *)(v0 + 552);
    uint64_t v36 = *(void *)(v0 + 464);
    unint64_t v37 = *(void *)(v0 + 432);
    uint64_t v34 = *(void *)(v0 + 456);
    uint64_t v35 = *(void *)(v0 + 424);
    uint64_t v2 = *(int **)(v0 + 376);
    unint64_t v39 = *(void *)(v0 + 232);
    uint64_t v38 = *(void *)(v0 + 224);
    uint64_t v3 = *(void *)(v0 + 216);
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 184);
    uint64_t v5 = *(uint64_t **)(v0 + 192);
    uint64_t v7 = v5[2];
    *(void *)(v0 + 576) = v7;
    unint64_t v8 = v5[3];
    *(void *)(v0 + 584) = v8;
    uint64_t v9 = *v5;
    *(void *)(v0 + 592) = *v5;
    uint64_t v32 = v9;
    uint64_t v33 = v3;
    unint64_t v10 = v5[1];
    *(void *)(v0 + 600) = v10;
    uint64_t v11 = v5[4];
    *(void *)(v0 + 608) = v11;
    uint64_t v31 = v11;
    unint64_t v12 = v5[5];
    *(void *)(v0 + 616) = v12;
    uint64_t v29 = v4;
    unint64_t v30 = v12;
    sub_1000361E0(v7, v8);
    sub_1000361E0(v9, v10);
    sub_1000361E0(v11, v12);
    UUID.init()();
    uint64_t v13 = v6 + v2[5];
    uint64_t v14 = type metadata accessor for MACAddress();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v13, v29, v14);
    v15(v6 + v2[6], v33, v14);
    sub_100A9E43C(v6 + v2[8]);
    uint64_t v16 = (void *)(v6 + v2[7]);
    *uint64_t v16 = v34;
    v16[1] = v36;
    uint64_t v17 = (uint64_t *)(v6 + v2[9]);
    *uint64_t v17 = v35;
    v17[1] = v37;
    uint64_t v18 = (uint64_t *)(v6 + v2[10]);
    *uint64_t v18 = v7;
    v18[1] = v8;
    v18[2] = v32;
    v18[3] = v10;
    v18[4] = v31;
    v18[5] = v30;
    uint64_t v19 = (uint64_t *)(v6 + v2[11]);
    uint64_t *v19 = v38;
    v19[1] = v39;
    sub_100037A38(v35, v37);
    sub_1000361E0(v7, v8);
    sub_1000361E0(v32, v10);
    sub_1000361E0(v31, v30);
    sub_1000361E0(v38, v39);
    uint64_t v20 = *(void *)(v0 + 480);
    uint64_t v21 = sub_100BF6FB0;
  }
  else
  {
    uint64_t v22 = *(void *)(v0 + 552);
    *(void *)(v0 + 528) = v1;
    *(void *)(v0 + 520) = v22;
    uint64_t v23 = *(void *)(v0 + 408);
    uint64_t v24 = *(void *)(v0 + 368);
    uint64_t v25 = *(void *)(v0 + 336);
    uint64_t v26 = *(void *)(v0 + 344);
    sub_100BFD92C(*(void *)(v0 + 496)+ ((*(unsigned __int8 *)(v0 + 632) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 632))+ *(void *)(v0 + 512) * v1, v23, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    unint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    *(void *)(v0 + 536) = v27;
    *(void *)(v0 + 544) = (v26 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v27(v24, v23, v25);
    sub_100BFDD1C(v23, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    uint64_t v20 = *(void *)(v0 + 480);
    uint64_t v21 = sub_100BF65BC;
  }
  return _swift_task_switch(v21, v20, 0);
}

uint64_t sub_100BF6FB0()
{
  uint64_t v1 = v0[71];
  sub_100FBD844(v0[23], *(void *)(v0[60] + 128));
  v0[78] = v1;
  if (v1)
  {
    uint64_t v2 = sub_100BF72F4;
  }
  else
  {
    uint64_t v3 = v0[60];
    uint64_t v4 = v0[50];
    uint64_t v5 = v0[48];
    uint64_t v6 = v0[31];
    uint64_t v7 = v0[23];
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
    sub_100BFD92C(v7, v4, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    uint64_t v9 = sub_100BFDD7C(&qword_10165B250, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconService);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v3;
    v11[3] = v9;
    v11[4] = v3;
    sub_100BFDB90(v4, (uint64_t)v11 + v10, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    swift_retain_n();
    sub_100885EBC(v6, (uint64_t)&unk_10165B270, (uint64_t)v11);
    swift_release();
    uint64_t v2 = sub_100BF717C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100BF717C()
{
  unint64_t v1 = v0[75];
  uint64_t v2 = v0[74];
  unint64_t v3 = v0[73];
  uint64_t v4 = v0[72];
  uint64_t v11 = v0[76];
  uint64_t v6 = v0[55];
  unint64_t v5 = v0[56];
  uint64_t v7 = v0[53];
  unint64_t v8 = v0[54];
  unint64_t v12 = v0[77];
  sub_100B30768();
  sub_100037A24(v7, v8);
  sub_100037A24(v6, v5);
  sub_10001CFB8(v4, v3);
  sub_10001CFB8(v2, v1);
  sub_10001CFB8(v11, v12);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100BF72F4()
{
  unint64_t v1 = v0[77];
  uint64_t v2 = v0[76];
  unint64_t v3 = v0[75];
  uint64_t v4 = v0[74];
  unint64_t v5 = v0[73];
  uint64_t v6 = v0[72];
  uint64_t v8 = v0[53];
  unint64_t v7 = v0[54];
  uint64_t v11 = v0[23];
  sub_100037A24(v0[55], v0[56]);
  swift_release();
  sub_10001CFB8(v6, v5);
  sub_10001CFB8(v4, v3);
  sub_10001CFB8(v2, v1);
  sub_100037A24(v8, v7);
  sub_100BFDD1C(v11, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100BF7464(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v4 - 8);
  char v59 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v53 - v16;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = sub_100010324(v18, (uint64_t)qword_10170F068);
  uint64_t v58 = a1;
  sub_100BFD92C(a1, (uint64_t)v17, type metadata accessor for OwnedBeaconGroup);
  uint64_t v56 = v19;
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v54 = v9;
  uint64_t v55 = v6;
  if (v22)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    v61[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    uint64_t v53 = v12;
    uint64_t v24 = sub_1004D6904();
    uint64_t v60 = sub_1008FA0F0(v24, v25, v61);
    uint64_t v12 = v53;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100BFDD1C((uint64_t)v17, type metadata accessor for OwnedBeaconGroup);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Clean up existing beacon group %s", v23, 0xCu);
    swift_arrayDestroy();
    uint64_t v6 = v55;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100BFDD1C((uint64_t)v17, type metadata accessor for OwnedBeaconGroup);
  }

  uint64_t v26 = v58;
  uint64_t v27 = sub_1004D1434();
  swift_retain();
  unint64_t v28 = sub_100BFC2C4(v27, v2);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = v28[2];
  if (v29)
  {
    uint64_t v30 = *(void *)(type metadata accessor for OwnedBeaconRecord() - 8);
    uint64_t v31 = (uint64_t)v28 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    uint64_t v32 = *(void *)(v30 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100DBB224(v31, 1, 0);
      swift_errorRelease();
      v31 += v32;
      --v29;
    }
    while (v29);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v33 = (uint64_t)v59;
  sub_100AE75E0(v26 + *(int *)(v6 + 24), (uint64_t)v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v33, 1, v6) == 1) {
    return sub_10001DAB4(v33, &qword_10163BB20);
  }
  sub_100BFDB90(v33, (uint64_t)v15, type metadata accessor for OwnedBeaconGroup);
  sub_100BFD92C((uint64_t)v15, (uint64_t)v12, type metadata accessor for OwnedBeaconGroup);
  uint64_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    char v59 = v15;
    *(_DWORD *)uint64_t v37 = 141558275;
    uint64_t v60 = 1752392040;
    v61[0] = v38;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v37 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v60 = sub_1008FA0F0(v39, v40, v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100BFDD1C((uint64_t)v12, type metadata accessor for OwnedBeaconGroup);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "Group %{private,mask.hash}s still exists. Need to clean up", (uint8_t *)v37, 0x16u);
    swift_arrayDestroy();
    uint64_t v15 = v59;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100BFDD1C((uint64_t)v12, type metadata accessor for OwnedBeaconGroup);
  }

  uint64_t v41 = (uint64_t)v54;
  uint64_t v42 = sub_100E09380((uint64_t)v15);
  if (v42)
  {
    uint64_t v43 = v42;
    sub_100BFD92C((uint64_t)v15, v41, type metadata accessor for OwnedBeaconGroup);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      char v59 = (char *)v47;
      *(_DWORD *)uint64_t v46 = 141558531;
      uint64_t v60 = 1752392040;
      v61[0] = v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2081;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v60 = sub_1008FA0F0(v48, v49, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C(v41, type metadata accessor for OwnedBeaconGroup);
      *(_WORD *)(v46 + 22) = 2082;
      uint64_t v60 = v43;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v50 = String.init<A>(describing:)();
      uint64_t v60 = sub_1008FA0F0(v50, v51, v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Unable to remove %{private,mask.hash}s due to %{public}s)", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      sub_100BFDD1C(v41, type metadata accessor for OwnedBeaconGroup);
    }
    swift_errorRelease();
    uint64_t v52 = (uint64_t)v15;
  }
  else
  {
    uint64_t v52 = (uint64_t)v15;
  }
  return sub_100BFDD1C(v52, type metadata accessor for OwnedBeaconGroup);
}

void sub_100BF7D68(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = sub_10000588C(&qword_10163C650);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a1, (uint64_t)v14, &qword_10163C650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = *v14;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v16 = (unsigned char *)(a3 + 16);
    uint64_t v17 = type metadata accessor for Logger();
    sub_100010324(v17, (uint64_t)qword_10170F068);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = v15;
      v35[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v34 = sub_1008FA0F0(v22, v23, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to modify existing group. Error %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_beginAccess();
    *uint64_t v16 = 1;
  }
  else
  {
    sub_100BFDB90((uint64_t)v14, (uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    uint64_t v25 = sub_100010324(v24, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v11, (uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v33 = a2;
      *(_DWORD *)uint64_t v28 = 141558275;
      uint64_t v34 = 1752392040;
      v35[0] = v29;
      uint64_t v32 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v28 + 12) = 2081;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v34 = sub_1008FA0F0(v30, v31, v35);
      uint64_t v25 = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Successfully modified existing group %{private,mask.hash}s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      a2 = v33;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
    }

    sub_1004CCF70(v25);
    sub_100BFDD1C((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  }
  dispatch_group_leave(a2);
}

void sub_100BF82C8(uint64_t a1, NSObject *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = sub_10000588C(&qword_10163C650);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a1, (uint64_t)v14, &qword_10163C650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = *v14;
    if (qword_101637310 != -1) {
      swift_once();
    }
    unint64_t v31 = a2;
    uint64_t v16 = (unsigned char *)(a3 + 16);
    uint64_t v17 = type metadata accessor for Logger();
    sub_100010324(v17, (uint64_t)qword_10170F068);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v32 = v15;
      v33[0] = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v32 = sub_1008FA0F0(v22, v23, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Unable to save new group. Error %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    swift_beginAccess();
    *uint64_t v16 = 1;
    a2 = v31;
  }
  else
  {
    sub_100BFDB90((uint64_t)v14, (uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100010324(v24, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v11, (uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      v33[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v27 = 136315138;
      uint64_t v28 = sub_1004D6904();
      uint64_t v32 = sub_1008FA0F0(v28, v29, v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Successfully saved new group %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100BFDD1C((uint64_t)v9, type metadata accessor for OwnedBeaconGroup);
    }
    sub_100BFDD1C((uint64_t)v11, type metadata accessor for OwnedBeaconGroup);
  }
  dispatch_group_leave(a2);
}

void sub_100BF8798(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = sub_100010324(v9, (uint64_t)qword_10170F068);
  sub_1000361E0(a1, a2);
  sub_1000361E0(a1, a2);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    v46[1] = v10;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 141558275;
    uint64_t v48 = 1752392040;
    v49[0] = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 12) = 2081;
    sub_1000361E0(a1, a2);
    static String.Encoding.utf8.getter();
    uint64_t v47 = v8;
    uint64_t v15 = String.init(data:encoding:)();
    if (!v16) {
      uint64_t v15 = Data.hexString.getter();
    }
    uint64_t v17 = v15;
    unint64_t v18 = v16;
    sub_10001CFB8(a1, a2);
    uint64_t v48 = sub_1008FA0F0(v17, v18, v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(a1, a2);
    sub_10001CFB8(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "unpairAllBeaconRecords for serial number: %{private,mask.hash}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10001CFB8(a1, a2);
    sub_10001CFB8(a1, a2);
  }
  os_log_type_t v19 = sub_100ACD578(a1, a2);
  uint64_t v20 = v19[2];
  if (v20)
  {
    uint64_t v21 = *(void *)(type metadata accessor for OwnedBeaconRecord() - 8);
    uint64_t v22 = (uint64_t)v19 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v23 = *(void *)(v21 + 72);
    do
    {
      sub_100BF8ED0(v22, a1, a2, v3);
      v22 += v23;
      --v20;
    }
    while (v20);
  }
  swift_bridgeObjectRelease();
  static String.Encoding.utf8.getter();
  uint64_t v24 = String.init(data:encoding:)();
  if (!v25) {
    uint64_t v24 = Data.hexString.getter();
  }
  uint64_t v26 = v24;
  unint64_t v27 = v25;
  uint64_t v28 = HIBYTE(v25) & 0xF;
  if ((v25 & 0x2000000000000000) == 0) {
    uint64_t v28 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v28)
  {
    sub_1000361E0(a1, a2);
    sub_1000361E0(a1, a2);
    unint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v31 = 141558275;
      uint64_t v48 = 1752392040;
      v49[0] = v32;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v31 + 12) = 2081;
      sub_1000361E0(a1, a2);
      static String.Encoding.utf8.getter();
      uint64_t v33 = String.init(data:encoding:)();
      uint64_t v47 = (char *)v32;
      if (!v34) {
        uint64_t v33 = Data.hexString.getter();
      }
      uint64_t v35 = v33;
      unint64_t v36 = v34;
      sub_10001CFB8(a1, a2);
      uint64_t v48 = sub_1008FA0F0(v35, v36, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Removing standalone beacons for serial number: %{private,mask.hash}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
    }

    type metadata accessor for Transaction();
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v26;
    *(void *)(v45 + 24) = v27;
    static Transaction.asyncTask(name:block:)();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1000361E0(a1, a2);
    sub_1000361E0(a1, a2);
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 141558275;
      uint64_t v48 = 1752392040;
      v49[0] = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v39 + 12) = 2081;
      sub_1000361E0(a1, a2);
      static String.Encoding.utf8.getter();
      uint64_t v41 = String.init(data:encoding:)();
      if (!v42) {
        uint64_t v41 = Data.hexString.getter();
      }
      uint64_t v43 = v41;
      unint64_t v44 = v42;
      sub_10001CFB8(a1, a2);
      uint64_t v48 = sub_1008FA0F0(v43, v44, v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Invalid serial number %{private,mask.hash}s. Cannot look up standalone beacons!", (uint8_t *)v39, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10001CFB8(a1, a2);
      sub_10001CFB8(a1, a2);
    }
  }
}

void sub_100BF8ED0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v47 = a4;
  uint64_t v9 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v39 - v14;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_100010324(v16, (uint64_t)qword_10170F068);
  sub_100BFD92C(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_1000361E0(a2, a3);
  sub_1000361E0(a2, a3);
  uint64_t v46 = v17;
  unint64_t v18 = Logger.logObject.getter();
  int v44 = static os_log_type_t.default.getter();
  BOOL v19 = os_log_type_enabled(v18, (os_log_type_t)v44);
  uint64_t v43 = v10;
  if (v19)
  {
    os_log_t v40 = v18;
    uint64_t v41 = a1;
    unint64_t v42 = v13;
    uint64_t v45 = v4;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    uint64_t v49 = v39;
    *(_DWORD *)uint64_t v20 = 141558787;
    uint64_t v48 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v48 = sub_1008FA0F0(v21, v22, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100BFDD1C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    *(_WORD *)(v20 + 22) = 2160;
    uint64_t v48 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 32) = 2081;
    sub_1000361E0(a2, a3);
    static String.Encoding.utf8.getter();
    uint64_t v23 = String.init(data:encoding:)();
    if (!v24) {
      uint64_t v23 = Data.hexString.getter();
    }
    uint64_t v25 = v23;
    unint64_t v26 = v24;
    sub_10001CFB8(a2, a3);
    os_log_type_t v27 = v44;
    uint64_t v48 = sub_1008FA0F0(v25, v26, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10001CFB8(a2, a3);
    sub_10001CFB8(a2, a3);
    os_log_t v28 = v40;
    _os_log_impl((void *)&_mh_execute_header, v40, v27, "Unpairing beacon record %{private,mask.hash}s matching %{private,mask.hash}s", (uint8_t *)v20, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v5 = v45;
    a1 = v41;
    uint64_t v13 = v42;
  }
  else
  {
    sub_100BFDD1C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_10001CFB8(a2, a3);
    sub_10001CFB8(a2, a3);
  }
  uint64_t v29 = sub_100DBB224(a1, 0, 0);
  if (v29)
  {
    uint64_t v30 = v29;
    sub_100BFD92C(a1, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v45 = v5;
      uint64_t v34 = v33;
      uint64_t v47 = swift_slowAlloc();
      uint64_t v48 = v30;
      uint64_t v49 = v47;
      *(_DWORD *)uint64_t v34 = 136446723;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v35 = String.init<A>(describing:)();
      uint64_t v48 = sub_1008FA0F0(v35, v36, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v34 + 12) = 2160;
      uint64_t v48 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v34 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v48 = sub_1008FA0F0(v37, v38, &v49);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Error %{public}s deleting %{private,mask.hash}s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_100BFDD1C((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
  }
}

uint64_t sub_100BF959C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 136) = a1;
  *(void *)(v2 + 144) = a2;
  return _swift_task_switch(sub_100BF95BC, 0, 0);
}

uint64_t sub_100BF95BC()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016391C8 + dword_1016391C8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100BF96F8;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BF96F8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100BF97F8, 0, 0);
}

uint64_t sub_100BF97F8()
{
  uint64_t v1 = *(void *)(v0 + 160);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 160);
    return _swift_task_switch(sub_100BF9958, v2, 0);
  }
  else
  {
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170F068);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Missing StandaloneBeaconService!", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100BF9958()
{
  sub_100FBE200(v0[17], v0[18], *(void **)(v0[20] + 128));
  v0[21] = 0;
  v0[22] = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  return _swift_task_switch(sub_100BF9A00, 0, 0);
}

uint64_t sub_100BF9A00()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[20];
  uint64_t v3 = swift_task_alloc();
  v0[23] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[24] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100BF9AF0;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100BF9AF0()
{
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_10045A44C, 0, 0);
}

uint64_t sub_100BF9C24()
{
  uint64_t v12 = v0;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170F068);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[21];
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    v0[15] = v5;
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    uint64_t v7 = String.init<A>(describing:)();
    v0[16] = sub_1008FA0F0(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Unable to remove standalone beacons due to %{public}s.", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();

    swift_errorRelease();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100BF9E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  uint64_t v5 = *(void *)(type metadata accessor for StandaloneBeacon() - 8);
  v4[12] = v5;
  v4[13] = *(void *)(v5 + 64);
  v4[14] = swift_task_alloc();
  sub_10000588C(&qword_10164DBB0);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  return _swift_task_switch(sub_100BF9F68, 0, 0);
}

uint64_t sub_100BF9F68()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 96);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + v4;
    uint64_t v28 = *(void *)(v3 + 72);
    unint64_t v29 = v4;
    unint64_t v27 = (*(void *)(v0 + 104) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v6 = type metadata accessor for TaskPriority();
    uint64_t v7 = *(void *)(v6 - 8);
    unint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v25 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v23 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v24 = v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 120);
      uint64_t v10 = *(void *)(v0 + 128);
      uint64_t v11 = *(void *)(v0 + 112);
      uint64_t v12 = *(void *)(v0 + 88);
      v26(v10, 1, 1, v6);
      sub_100BFD92C(v5, v11, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      sub_100BFDB90(v11, v13 + v29, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
      *(void *)(v13 + v27) = v12;
      sub_10001D074(v10, v9, &qword_10164DBB0);
      LODWORD(v9) = (*v25)(v9, 1, v6);
      swift_retain();
      uint64_t v15 = *(void *)(v0 + 120);
      if (v9 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 120), &qword_10164DBB0);
        if (!*v14) {
          goto LABEL_8;
        }
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*v23)(v15, v6);
        if (!*v14)
        {
LABEL_8:
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v6 = v24;
      uint64_t v19 = **(void **)(v0 + 72);
      uint64_t v20 = v18 | v16;
      if (v18 | v16)
      {
        uint64_t v20 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v16;
        *(void *)(v0 + 40) = v18;
      }
      uint64_t v8 = *(void *)(v0 + 128);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v20;
      *(void *)(v0 + 64) = v19;
      swift_task_create();
      swift_release();
      sub_10001DAB4(v8, &qword_10164DBB0);
      v5 += v28;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_100BFA2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[4] = a4;
  v5[5] = a5;
  sub_10000588C(&qword_10164DBB0);
  v5[6] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[7] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[8] = v7;
  v5[9] = *(void *)(v7 + 64);
  v5[10] = swift_task_alloc();
  v5[11] = swift_task_alloc();
  type metadata accessor for StandaloneBeacon();
  v5[12] = swift_task_alloc();
  return _swift_task_switch(sub_100BFA3E0, 0, 0);
}

uint64_t sub_100BFA3E0()
{
  uint64_t v19 = v0;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[12];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170F068);
  sub_100BFD92C(v1, v2, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[12];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    uint64_t v9 = sub_100C03E08();
    v0[3] = sub_1008FA0F0(v9, v10, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100BFDD1C(v7, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Removing standalone beacon %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100BFDD1C(v0[12], (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  }

  uint64_t v11 = v0[11];
  uint64_t v12 = v0[7];
  uint64_t v13 = v0[8];
  uint64_t v14 = v0[4];
  uint64_t v15 = v0[5];
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v0[13] = v16;
  v0[14] = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v16(v11, v14, v12);
  return _swift_task_switch(sub_100BFA654, v15, 0);
}

uint64_t sub_100BFA654()
{
  sub_100FBD9F8(v0[11]);
  v0[15] = 0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[8];
  uint64_t v7 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
  v1(v3, v2, v4);
  uint64_t v9 = sub_100BFDD7C(&qword_10165B250, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconService);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v7;
  *((void *)v11 + 3) = v9;
  *((void *)v11 + 4) = v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v11[v10], v3, v4);
  swift_retain_n();
  sub_100885EBC(v6, (uint64_t)&unk_10165B258, (uint64_t)v11);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_100BFA8A4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100BFA930(uint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v5 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)v34 - v12;
  uint64_t v14 = sub_10000588C((uint64_t *)&unk_101656900);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = swift_projectBox();
  sub_10001D074(a1, (uint64_t)v16, (uint64_t *)&unk_101656900);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = *v16;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100010324(v19, (uint64_t)qword_10170F068);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v38 = v18;
      v39[0] = v23;
      *(_DWORD *)unint64_t v22 = 136446210;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v24 = String.init<A>(describing:)();
      uint64_t v38 = sub_1008FA0F0(v24, v25, v39);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to save beacon record %{public}s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v36 = v17;
    sub_100BFDB90((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100010324(v26, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v34[2] = v30;
      *(_DWORD *)uint64_t v29 = 141558275;
      uint64_t v38 = 1752392040;
      v39[0] = v30;
      uint64_t v35 = a3;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2081;
      v34[1] = v29 + 14;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v38 = sub_1008FA0F0(v31, v32, v39);
      a3 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "New beacon record has been created. %{private,mask.hash}s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }

    uint64_t v33 = v36;
    sub_100BFDB90((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v7, 0, 1, v8);
    swift_beginAccess();
    sub_100062604((uint64_t)v7, v33, &qword_10163B9F0);
  }
  dispatch_group_leave(a3);
}

void sub_100BFAF40(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v39 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = sub_10000588C(&qword_10163C650);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = swift_projectBox();
  sub_10001D074(a1, (uint64_t)v15, &qword_10163C650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = *v15;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100010324(v18, (uint64_t)qword_10170F068);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v21 = 136446210;
      uint64_t v41 = v17;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v22 = String.init<A>(describing:)();
      uint64_t v41 = sub_1008FA0F0(v22, v23, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to modify existing group. Error %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v38 = v16;
    sub_100BFDB90((uint64_t)v15, (uint64_t)v12, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    uint64_t v25 = sub_100010324(v24, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v12, (uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.default.getter();
    int v28 = v27;
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v37 = a2;
      uint64_t v30 = v29;
      uint64_t v36 = swift_slowAlloc();
      v40[0] = v36;
      *(_DWORD *)uint64_t v30 = 141558275;
      uint64_t v41 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 12) = 2081;
      uint64_t v34 = v30 + 14;
      type metadata accessor for UUID();
      int v35 = v28;
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v41 = sub_1008FA0F0(v31, v32, v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v35, "Successfully modified existing group %{private,mask.hash}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v37;
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    }

    sub_1004CCF70(v25);
    sub_100BFDB90((uint64_t)v12, (uint64_t)v6, type metadata accessor for OwnedBeaconGroup);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v6, 0, 1, v7);
    uint64_t v33 = v38;
    swift_beginAccess();
    sub_100062604((uint64_t)v6, v33, &qword_10163BB20);
  }
  dispatch_group_leave(a2);
}

void sub_100BFB574(uint64_t a1, NSObject *a2)
{
  uint64_t v4 = type metadata accessor for BeaconObservation();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  uint64_t v50 = v5;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = sub_10000588C(&qword_10163C650);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = swift_projectBox();
  sub_10001D074(a1, (uint64_t)v19, &qword_10163C650);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = *v19;
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100010324(v22, (uint64_t)qword_10170F068);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      v51[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446210;
      uint64_t v52 = v21;
      swift_errorRetain();
      sub_10000588C(&qword_101638D40);
      uint64_t v26 = String.init<A>(describing:)();
      uint64_t v52 = sub_1008FA0F0(v26, v27, v51);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to save new group. Error %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    uint64_t v46 = v20;
    sub_100BFDB90((uint64_t)v19, (uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    sub_100010324(v28, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v16, (uint64_t)v14, type metadata accessor for OwnedBeaconGroup);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v45 = a2;
      unint64_t v32 = (uint8_t *)v31;
      v51[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v32 = 136315138;
      int v44 = v7;
      uint64_t v33 = sub_1004D6904();
      uint64_t v52 = sub_1008FA0F0(v33, v34, v51);
      uint64_t v7 = v44;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v14, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Successfully saved new group %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v45;
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v14, type metadata accessor for OwnedBeaconGroup);
    }

    uint64_t v35 = v46;
    sub_100BFD92C((uint64_t)v16, (uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    uint64_t v36 = v48;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v10, 0, 1, v48);
    swift_beginAccess();
    sub_100062604((uint64_t)v10, v35, &qword_10163BB20);
    uint64_t v37 = &v16[*(int *)(v36 + 24)];
    uint64_t v38 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v7, v37, v38);
    uint64_t v39 = v49;
    static Date.trustedNow.getter((uint64_t)&v7[*(int *)(v49 + 20)]);
    v7[*(int *)(v39 + 24)] = 37;
    if (qword_101636CB8 != -1) {
      swift_once();
    }
    uint64_t v40 = qword_10170E330;
    sub_10000588C(&qword_10163A778);
    unint64_t v41 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_101342130;
    sub_100BFD92C((uint64_t)v7, v42 + v41, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    uint64_t v43 = type metadata accessor for Transaction();
    __chkstk_darwin(v43);
    *(&v44 - 4) = (char *)v40;
    *(&v44 - 3) = (char *)v42;
    *(&v44 - 2) = 0;
    *(&v44 - 1) = 0;
    static Transaction.named<A>(_:with:)();
    swift_bridgeObjectRelease();
    sub_100BFDD1C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BeaconObservation);
    sub_100BFDD1C((uint64_t)v16, type metadata accessor for OwnedBeaconGroup);
  }
  dispatch_group_leave(a2);
}

unint64_t sub_100BFBD38()
{
  unint64_t result = qword_10165B218;
  if (!qword_10165B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165B218);
  }
  return result;
}

uint64_t sub_100BFBD8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_100DC89E8((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_100BFBE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = __DataStorage._bytes.getter();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = __DataStorage._offset.getter();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  __DataStorage._length.getter();
  sub_100DC89E8(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_100BFBF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a3;
  uint64_t v38 = a2;
  uint64_t v4 = sub_10000588C(&qword_10163BB20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v7 = __chkstk_darwin(v37);
  uint64_t v33 = (uint64_t)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v32 = (char *)&v31 - v10;
  __chkstk_darwin(v9);
  char v13 = (char *)&v31 - v12;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v35 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v36 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t v39 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v21 = (uint64_t)v32;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_24;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v36) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    ++v20;
    if (!v25)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v36) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v35 + 8 * v20);
      if (!v25)
      {
        int64_t v20 = v24 + 2;
        if (v24 + 2 >= v36) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v35 + 8 * v20);
        if (!v25)
        {
          int64_t v20 = v24 + 3;
          if (v24 + 3 >= v36) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v35 + 8 * v20);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_24:
    unint64_t v27 = (uint64_t *)(*(void *)(v39 + 48) + 16 * v23);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    sub_1000361E0(*v27, v29);
    sub_100AE7A78(v28, v29, (uint64_t)v6);
    if ((*v18)(v6, 1, v37) == 1)
    {
      sub_10001DAB4((uint64_t)v6, &qword_10163BB20);
    }
    else
    {
      sub_100BFDB90((uint64_t)v6, (uint64_t)v13, type metadata accessor for OwnedBeaconGroup);
      uint64_t v30 = v33;
      sub_100BFD92C((uint64_t)v13, v33, type metadata accessor for OwnedBeaconGroup);
      sub_100DCFCA0(v21, v30);
      sub_100BFDD1C(v21, type metadata accessor for OwnedBeaconGroup);
      sub_100BFDD1C((uint64_t)v13, type metadata accessor for OwnedBeaconGroup);
    }
    uint64_t result = sub_10001CFB8(v28, v29);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v36) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25)
  {
    int64_t v20 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v36) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v35 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100BFC2C4(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v3 = sub_10000588C(&qword_10163B9F0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for OwnedBeaconRecord();
  uint64_t v6 = *(void *)(v46 - 8);
  uint64_t v7 = __chkstk_darwin(v46);
  uint64_t v40 = (uint64_t)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v38 = (uint64_t)&v36 - v9;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v42 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v49 = v11 + 16;
  uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v48 = v11 + 48;
  uint64_t v45 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  int64_t v43 = (unint64_t)(v18 + 63) >> 6;
  int v44 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v39 = v6;
  uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v51 = a1;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v23 = 0;
  unint64_t v41 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v20)
    {
      unint64_t v24 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v26 >= v43) {
      goto LABEL_30;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v26);
    ++v23;
    if (!v27)
    {
      int64_t v23 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_30;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v23);
      if (!v27)
      {
        int64_t v23 = v26 + 2;
        if (v26 + 2 >= v43) {
          goto LABEL_30;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 3;
          if (v26 + 3 >= v43) {
            goto LABEL_30;
          }
          unint64_t v27 = *(void *)(v42 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v16, *(void *)(v51 + 48) + *(void *)(v11 + 72) * v25, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10) == 1) {
      goto LABEL_31;
    }
    (*v45)(v13, v16, v10);
    sub_100ACD178((uint64_t)v5);
    (*v44)(v13, v10);
    if ((*v21)(v5, 1, v46) == 1)
    {
      uint64_t result = (void *)sub_10001DAB4((uint64_t)v5, &qword_10163B9F0);
    }
    else
    {
      uint64_t v37 = type metadata accessor for OwnedBeaconRecord;
      uint64_t v29 = v38;
      sub_100BFDB90((uint64_t)v5, v38, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      sub_100BFDB90(v29, v40, (uint64_t (*)(void))v37);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v41 = (void *)sub_100A6F6C4(0, v41[2] + 1, 1, (unint64_t)v41);
      }
      unint64_t v31 = v41[2];
      unint64_t v30 = v41[3];
      unint64_t v32 = (uint64_t (*)())(v31 + 1);
      if (v31 >= v30 >> 1)
      {
        uint64_t v37 = (uint64_t (*)())(v31 + 1);
        uint64_t v35 = (void *)sub_100A6F6C4(v30 > 1, v31 + 1, 1, (unint64_t)v41);
        unint64_t v32 = v37;
        unint64_t v41 = v35;
      }
      uint64_t v33 = v40;
      uint64_t v34 = v41;
      v41[2] = v32;
      uint64_t result = (void *)sub_100BFDB90(v33, (uint64_t)v34+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v31, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v43)
  {
LABEL_30:
    (*v50)(v16, 1, 1, v10);
LABEL_31:
    swift_release();
    return v41;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v43) {
      goto LABEL_30;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_100BFC840(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = type metadata accessor for OwnedBeaconGroup(0);
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = __chkstk_darwin(v35);
  uint64_t v7 = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)v32 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v32 - v11;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v37 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v38 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  *(void *)&long long v19 = 141558275;
  long long v33 = v19;
  v32[1] = (char *)&type metadata for Any + 8;
  uint64_t v36 = a2;
  uint64_t v34 = v4;
  while (1)
  {
    if (v16)
    {
      unint64_t v20 = __clz(__rbit64(v16));
      uint64_t v21 = (v16 - 1) & v16;
      unint64_t v22 = v20 | (v18 << 6);
      goto LABEL_24;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v38) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v37 + 8 * v23);
    ++v18;
    if (!v24)
    {
      int64_t v18 = v23 + 1;
      if (v23 + 1 >= v38) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v37 + 8 * v18);
      if (!v24)
      {
        int64_t v18 = v23 + 2;
        if (v23 + 2 >= v38) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v37 + 8 * v18);
        if (!v24)
        {
          int64_t v18 = v23 + 3;
          if (v23 + 3 >= v38) {
            return swift_release();
          }
          unint64_t v24 = *(void *)(v37 + 8 * v18);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v21 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_24:
    unint64_t v40 = v21;
    int64_t v41 = v18;
    sub_100BFD92C(*(void *)(a1 + 48) + *(void *)(v4 + 72) * v22, (uint64_t)v12, type metadata accessor for OwnedBeaconGroup);
    sub_100BFDB90((uint64_t)v12, (uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100010324(v26, (uint64_t)qword_10170F068);
    sub_100BFD92C((uint64_t)v10, (uint64_t)v7, type metadata accessor for OwnedBeaconGroup);
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v42 = v39;
      *(_DWORD *)uint64_t v29 = v33;
      *(void *)(v29 + 4) = 1752392040;
      *(_WORD *)(v29 + 12) = 2081;
      type metadata accessor for UUID();
      sub_100BFDD7C((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v29 + 14) = sub_1008FA0F0(v30, v31, &v42);
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v7, type metadata accessor for OwnedBeaconGroup);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Clean up existing group %{private,mask.hash}s for other serial numbers", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      uint64_t v4 = v34;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v7, type metadata accessor for OwnedBeaconGroup);
    }

    unint64_t v16 = v40;
    int64_t v18 = v41;
    sub_100BF7464((uint64_t)v10);
    uint64_t result = sub_100BFDD1C((uint64_t)v10, type metadata accessor for OwnedBeaconGroup);
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v38) {
    return swift_release();
  }
  unint64_t v24 = *(void *)(v37 + 8 * v25);
  if (v24)
  {
    int64_t v18 = v25;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v18 >= v38) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v37 + 8 * v18);
    ++v25;
    if (v24) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_100BFCD28(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v53 = *(void *)(a1 + 16);
  if (!v53) {
    return _swiftEmptyArrayStorage;
  }
  unint64_t v3 = a3;
  unint64_t v5 = 0;
  BOOL v6 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v44 = v6;
  uint64_t v43 = HIDWORD(a2) - (int)a2;
  uint64_t v50 = BYTE6(a3);
  uint64_t v51 = a1 + 32;
  uint64_t v7 = _swiftEmptyArrayStorage;
  unint64_t v49 = a3 >> 62;
LABEL_6:
  uint64_t v42 = v7;
  unint64_t v8 = v53;
  if (v5 > v53) {
    unint64_t v8 = v5;
  }
  unint64_t v52 = v8;
  while (2)
  {
    if (v52 == v5)
    {
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
    }
    unint64_t v10 = v5;
    long long v11 = *(_OWORD *)(v51 + 16 * v5++);
    unint64_t v12 = *((void *)&v11 + 1);
    uint64_t v13 = *((void *)&v11 + 1) >> 62;
    uint64_t v14 = 0;
    long long v54 = v11;
    switch(*((void *)&v11 + 1) >> 62)
    {
      case 1:
        unint64_t v46 = v10;
        unint64_t v15 = v3;
        unint64_t v16 = v5;
        uint64_t v17 = v11;
        if (__OFSUB__(DWORD1(v11), v11)) {
          goto LABEL_57;
        }
        uint64_t v14 = DWORD1(v11) - (int)v11;
        sub_1000361E0(v11, *((unint64_t *)&v11 + 1));
        sub_1000361E0(v17, v12);
        *(void *)&long long v11 = v54;
        unint64_t v5 = v16;
        unint64_t v3 = v15;
        unint64_t v10 = v46;
        break;
      case 2:
        unint64_t v18 = v10;
        unint64_t v19 = v3;
        unint64_t v20 = v5;
        uint64_t v21 = v11;
        uint64_t v23 = *(void *)(v11 + 16);
        uint64_t v22 = *(void *)(v11 + 24);
        uint64_t v14 = v22 - v23;
        if (__OFSUB__(v22, v23)) {
          goto LABEL_58;
        }
        sub_1000361E0(v11, *((unint64_t *)&v11 + 1));
        sub_1000361E0(v21, v12);
        *(void *)&long long v11 = v54;
        unint64_t v5 = v20;
        unint64_t v3 = v19;
        unint64_t v10 = v18;
        break;
      case 3:
        break;
      default:
        uint64_t v14 = BYTE14(v11);
        break;
    }
    uint64_t v24 = v50;
    switch(v49)
    {
      case 1uLL:
        uint64_t v24 = v43;
        if (v44) {
          goto LABEL_59;
        }
        goto LABEL_23;
      case 2uLL:
        uint64_t v26 = *(void *)(a2 + 16);
        uint64_t v25 = *(void *)(a2 + 24);
        BOOL v27 = __OFSUB__(v25, v26);
        uint64_t v24 = v25 - v26;
        if (!v27) {
          goto LABEL_23;
        }
        goto LABEL_60;
      case 3uLL:
        if (!v14) {
          goto LABEL_10;
        }
        goto LABEL_46;
      default:
LABEL_23:
        if (v14 == v24)
        {
          if (v14 >= 1)
          {
            switch((int)v13)
            {
              case 1:
                unint64_t v47 = v5;
                unint64_t v5 = v11;
                uint64_t v34 = (int)v11;
                if ((uint64_t)v11 >> 32 < (int)v11) {
                  goto LABEL_61;
                }
                sub_1000361E0(a2, a3);
                sub_1000361E0(v5, v12);
                sub_1000361E0(a2, a3);
                uint64_t v35 = __DataStorage._bytes.getter();
                if (!v35) {
                  goto LABEL_42;
                }
                uint64_t v36 = __DataStorage._offset.getter();
                if (__OFSUB__(v34, v36)) {
                  goto LABEL_64;
                }
                v35 += v34 - v36;
LABEL_42:
                __DataStorage._length.getter();
                unint64_t v3 = a3;
                sub_100DC89E8(v35, a2, a3, (char *)__s1);
                if (v48) {
                  goto LABEL_67;
                }
                sub_10001CFB8(a2, a3);
                sub_10001CFB8(v5, v12);
                goto LABEL_44;
              case 2:
                unint64_t v47 = v5;
                unint64_t v5 = v11;
                uint64_t v31 = *(void *)(v11 + 16);
                uint64_t v30 = *(void *)(v11 + 24);
                sub_1000361E0(a2, v3);
                sub_1000361E0(a2, v3);
                swift_retain();
                swift_retain();
                uint64_t v32 = __DataStorage._bytes.getter();
                if (!v32) {
                  goto LABEL_32;
                }
                uint64_t v33 = __DataStorage._offset.getter();
                if (__OFSUB__(v31, v33)) {
                  goto LABEL_63;
                }
                v32 += v31 - v33;
LABEL_32:
                if (__OFSUB__(v30, v31)) {
                  goto LABEL_62;
                }
                __DataStorage._length.getter();
                unint64_t v3 = a3;
                sub_100DC89E8(v32, a2, a3, (char *)__s1);
                if (v48) {
                  goto LABEL_66;
                }
                sub_10001CFB8(a2, a3);
                swift_release();
                swift_release();
LABEL_44:
                sub_10001CFB8(a2, v3);
                sub_10001CFB8(v5, v12);
                uint64_t v9 = v54;
                unint64_t v5 = v47;
                if ((__s1[0] & 1) == 0) {
                  goto LABEL_47;
                }
                goto LABEL_11;
              case 3:
                memset(__s1, 0, 14);
                sub_1000361E0(a2, v3);
                sub_1000361E0(a2, v3);
                sub_100DC89E8((uint64_t)__s1, a2, v3, &v55);
                if (v48) {
                  goto LABEL_65;
                }
                sub_10001CFB8(a2, v3);
                sub_10001CFB8(a2, v3);
                sub_10001CFB8(v54, v12);
                uint64_t v9 = v54;
                if ((v55 & 1) == 0) {
                  goto LABEL_47;
                }
                goto LABEL_11;
              default:
                unint64_t v28 = v5;
                uint64_t v29 = v11;
                __s1[0] = v11;
                LOWORD(__s1[1]) = v12;
                BYTE2(__s1[1]) = BYTE2(v12);
                BYTE3(__s1[1]) = BYTE3(v12);
                BYTE4(__s1[1]) = BYTE4(v12);
                BYTE5(__s1[1]) = BYTE5(v12);
                unint64_t v5 = (unint64_t)__s1 + BYTE6(v12);
                sub_1000361E0(a2, v3);
                sub_1000361E0(a2, v3);
                sub_100DC89E8((uint64_t)__s1, a2, v3, &v55);
                if (v48)
                {
LABEL_65:
                  sub_10001CFB8(a2, v3);
                  __break(1u);
LABEL_66:
                  sub_10001CFB8(a2, v3);
                  swift_release();
                  swift_release();
                  __break(1u);
LABEL_67:
                  sub_10001CFB8(a2, v3);
                  sub_10001CFB8(v5, v12);
                  __break(1u);
                  JUMPOUT(0x100BFD3CCLL);
                }
                sub_10001CFB8(a2, v3);
                sub_10001CFB8(a2, v3);
                sub_10001CFB8(v29, v12);
                uint64_t v9 = v54;
                unint64_t v5 = v28;
                if ((v55 & 1) == 0) {
                  goto LABEL_47;
                }
                goto LABEL_11;
            }
          }
LABEL_10:
          sub_10001CFB8(v11, v12);
          uint64_t v9 = v54;
LABEL_11:
          sub_10001CFB8(v9, v12);
          if (v53 == v5) {
            return v42;
          }
          continue;
        }
LABEL_46:
        sub_10001CFB8(v11, v12);
LABEL_47:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v7 = v42;
        uint64_t v57 = v42;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1000B6FB0(0, v42[2] + 1, 1);
          uint64_t v7 = v57;
        }
        unint64_t v39 = v7[2];
        unint64_t v38 = v7[3];
        long long v40 = v54;
        if (v39 >= v38 >> 1)
        {
          sub_1000B6FB0(v38 > 1, v39 + 1, 1);
          long long v40 = v54;
          uint64_t v7 = v57;
        }
        unint64_t v5 = v10 + 1;
        v7[2] = v39 + 1;
        *(_OWORD *)&v7[2 * v39 + 4] = v40;
        unint64_t v3 = a3;
        if (v53 - 1 != v10) {
          goto LABEL_6;
        }
        return v7;
    }
  }
}

uint64_t sub_100BFD3FC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AccessoryProductInfo();
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100DC8844(a1, a2))
  {
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100010324(v9, (uint64_t)qword_10170F068);
    unint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Setting AlphaWasp beacon group version to 1", v12, 2u);
      swift_slowDealloc();
    }

    return 1;
  }
  else
  {
    if (qword_101637310 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100010324(v14, (uint64_t)qword_10170F068);
    sub_100BFD92C(a3, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      if (v8[8])
      {
        unint64_t v18 = 0xE700000000000000;
        uint64_t v19 = 0x79636167656C2ELL;
      }
      else
      {
        uint64_t v20 = *(void *)v8;
        uint64_t v24 = 0x6E6F69737265762ELL;
        unint64_t v25 = 0xEB00000000286465;
        uint64_t v23 = v20;
        v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v21);
        swift_bridgeObjectRelease();
        v22._countAndFlagsBits = 41;
        v22._object = (void *)0xE100000000000000;
        String.append(_:)(v22);
        uint64_t v19 = v24;
        unint64_t v18 = v25;
      }
      uint64_t v24 = sub_1008FA0F0(v19, v18, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100BFDD1C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Getting beacon group version from product info: %{public}s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100BFDD1C((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AccessoryProductInfo);
    }

    return *(void *)a3;
  }
}

void sub_100BFD764(uint64_t a1, uint64_t a2)
{
  sub_100BFA930(a1, a2, *(NSObject **)(v2 + 16));
}

uint64_t sub_100BFD76C(uint64_t a1)
{
  return sub_100150F24(a1);
}

void sub_100BFD78C(uint64_t a1)
{
  sub_100BFAF40(a1, *(NSObject **)(v1 + 16));
}

uint64_t sub_100BFD794()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100BFD7CC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10001D2E4;
  v4[17] = v2;
  v4[18] = v3;
  return _swift_task_switch(sub_100BF95BC, 0, 0);
}

uint64_t sub_100BFD878(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  unint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *unint64_t v8 = v3;
  v8[1] = sub_10001D2E4;
  return sub_100BF9E60(a1, a2, v7, v6);
}

uint64_t sub_100BFD92C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BFD994()
{
  uint64_t v1 = (int *)(type metadata accessor for StandaloneBeacon() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v1[8], v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[10];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_10001CFB8(*(void *)(v6 + v1[11]), *(void *)(v6 + v1[11] + 8));
  uint64_t v13 = v6 + v1[12];
  sub_10001CFB8(*(void *)v13, *(void *)(v13 + 8));
  sub_10001CFB8(*(void *)(v13 + 16), *(void *)(v13 + 24));
  sub_10001CFB8(*(void *)(v13 + 32), *(void *)(v13 + 40));
  sub_10001CFB8(*(void *)(v6 + v1[13]), *(void *)(v6 + v1[13] + 8));
  swift_release();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_100BFDB90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100BFDBF8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StandaloneBeacon() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100033F68;
  return sub_100BFA2AC(a1, v6, v7, v8, v9);
}

uint64_t sub_100BFDD1C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100BFDD7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BFDDC8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100033F68;
  return sub_100C1F5C8(a1, v5, v6, v7, v8);
}

uint64_t sub_100BFDEC4()
{
  return _swift_deallocObject(v0, 17, 7);
}

void sub_100BFDED8(uint64_t a1)
{
  sub_100BF7D68(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100BFDEE0()
{
  return sub_100FBF144();
}

uint64_t sub_100BFDF00()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100BFDFD4()
{
  uint64_t v1 = (int *)(type metadata accessor for StandaloneBeacon() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + v1[7];
  uint64_t v9 = type metadata accessor for MACAddress();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10(v6 + v1[8], v9);
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v1[10];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  sub_10001CFB8(*(void *)(v6 + v1[11]), *(void *)(v6 + v1[11] + 8));
  uint64_t v13 = v6 + v1[12];
  sub_10001CFB8(*(void *)v13, *(void *)(v13 + 8));
  sub_10001CFB8(*(void *)(v13 + 16), *(void *)(v13 + 24));
  sub_10001CFB8(*(void *)(v13 + 32), *(void *)(v13 + 40));
  sub_10001CFB8(*(void *)(v6 + v1[13]), *(void *)(v6 + v1[13] + 8));

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_100BFE1C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StandaloneBeacon() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100033F68;
  return sub_100C1F290(a1, v5, v6, v7, v8);
}

ValueMetadata *type metadata accessor for AccessoryModelNameResponsePayload()
{
  return &type metadata for AccessoryModelNameResponsePayload;
}

unint64_t sub_100BFE2D0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100BFE300();
  unint64_t result = sub_100573FCC();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100BFE300()
{
  unint64_t result = qword_10165B278;
  if (!qword_10165B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B278);
  }
  return result;
}

void *sub_100BFE354(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000B6EF0(0, v1, 0);
  unint64_t result = (void *)sub_100803228(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  uint64_t v7 = a1 + 64;
  int64_t v20 = v1;
  int v21 = v4;
  uint64_t v22 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v10 = (unint64_t)v5 >> 6;
    if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_24;
    }
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8 * v5);
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    unint64_t v12 = _swiftEmptyArrayStorage[3];
    unint64_t result = *(id *)(*(void *)(a1 + 56) + 8 * v5);
    uint64_t v13 = result;
    if (v11 >= v12 >> 1) {
      unint64_t result = (void *)sub_1000B6EF0(v12 > 1, v11 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v11 + 1;
    uint64_t v14 = &_swiftEmptyArrayStorage[2 * v11];
    void v14[4] = v24;
    v14[5] = v13;
    int64_t v8 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v8) {
      goto LABEL_25;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v15 = *(void *)(v22 + 8 * v10);
    if ((v15 & (1 << v5)) == 0) {
      goto LABEL_26;
    }
    int v4 = v21;
    if (*(_DWORD *)(a1 + 36) != v21) {
      goto LABEL_27;
    }
    unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
    if (v16)
    {
      int64_t v8 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v9 = v20;
    }
    else
    {
      unint64_t v17 = v10 + 1;
      unint64_t v18 = (unint64_t)(v8 + 63) >> 6;
      int64_t v9 = v20;
      if (v10 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v22 + 8 * v17);
        if (v19)
        {
LABEL_20:
          int64_t v8 = __clz(__rbit64(v19)) + (v17 << 6);
        }
        else
        {
          while (v18 - 2 != v10)
          {
            unint64_t v19 = *(void *)(a1 + 80 + 8 * v10++);
            if (v19)
            {
              unint64_t v17 = v10 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v6 = v23 + 1;
    uint64_t v5 = v8;
    if (v23 + 1 == v9) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

void sub_100BFE56C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v2 = a1;
    sub_1000B7A3C(0, v1, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v5 = sub_100803228(v2);
    uint64_t v6 = 0;
    uint64_t v7 = v2 + 64;
    uint64_t v26 = v2 + 80;
    uint64_t v29 = v2 + 64;
    int64_t v27 = v1;
    int v28 = v4;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(v2 + 32))
    {
      unint64_t v10 = (unint64_t)v5 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v2 + 36) != v4) {
        goto LABEL_24;
      }
      id v11 = *(id *)(*(void *)(v2 + 56) + 8 * v5);
      unint64_t v12 = v3;
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v30 = v14;
      uint64_t v31 = v13;
      id v15 = [v11 dictionaryRepresentation];
      uint64_t v16 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v3 = v12;
      uint64_t v32 = v12;
      uint64_t v17 = v2;
      unint64_t v19 = v3[2];
      unint64_t v18 = v3[3];
      if (v19 >= v18 >> 1)
      {
        sub_1000B7A3C(v18 > 1, v19 + 1, 1);
        uint64_t v3 = v32;
      }
      v3[2] = v19 + 1;
      int64_t v20 = &v3[3 * v19];
      v20[4] = v31;
      v20[5] = v30;
      v20[6] = v16;
      int64_t v8 = 1 << *(unsigned char *)(v17 + 32);
      if (v5 >= v8) {
        goto LABEL_25;
      }
      uint64_t v7 = v29;
      uint64_t v21 = *(void *)(v29 + 8 * v10);
      if ((v21 & (1 << v5)) == 0) {
        goto LABEL_26;
      }
      uint64_t v2 = v17;
      int v4 = v28;
      if (*(_DWORD *)(v17 + 36) != v28) {
        goto LABEL_27;
      }
      unint64_t v22 = v21 & (-2 << (v5 & 0x3F));
      if (v22)
      {
        int64_t v8 = __clz(__rbit64(v22)) | v5 & 0xFFFFFFFFFFFFFFC0;
        int64_t v9 = v27;
      }
      else
      {
        unint64_t v23 = v10 + 1;
        unint64_t v24 = (unint64_t)(v8 + 63) >> 6;
        int64_t v9 = v27;
        if (v10 + 1 < v24)
        {
          unint64_t v25 = *(void *)(v29 + 8 * v23);
          if (v25)
          {
LABEL_20:
            int64_t v8 = __clz(__rbit64(v25)) + (v23 << 6);
          }
          else
          {
            while (v24 - 2 != v10)
            {
              unint64_t v25 = *(void *)(v26 + 8 * v10++);
              if (v25)
              {
                unint64_t v23 = v10 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v6;
      uint64_t v5 = v8;
      if (v6 == v9) {
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
}

unint64_t sub_100BFE804()
{
  sub_10000588C((uint64_t *)&unk_101637F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10134BFA0;
  *(void *)(inited + 32) = 108;
  *(void *)(inited + 40) = 0xE100000000000000;
  *(void *)(inited + 48) = UUID.data.getter();
  *(void *)(inited + 56) = v2;
  *(void *)(inited + 72) = &type metadata for Data;
  *(void *)(inited + 80) = 98;
  *(void *)(inited + 88) = 0xE100000000000000;
  uint64_t v3 = (int *)type metadata accessor for OfflineFindingInfo();
  uint64_t v4 = v0 + v3[5];
  uint64_t v5 = type metadata accessor for Date();
  *(void *)(inited + 120) = v5;
  uint64_t v6 = sub_10001D958((uint64_t *)(inited + 96));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v6, v4, v5);
  *(void *)(inited + 128) = 105;
  *(void *)(inited + 136) = 0xE100000000000000;
  *(void *)(inited + 144) = *(void *)(v0 + v3[6]);
  *(void *)(inited + 168) = &type metadata for UInt64;
  *(void *)(inited + 176) = 112;
  *(void *)(inited + 184) = 0xE100000000000000;
  uint64_t v7 = (uint64_t *)(v0 + v3[7]);
  uint64_t v8 = *v7;
  unint64_t v9 = v7[1];
  *(void *)(inited + 192) = *v7;
  *(void *)(inited + 200) = v9;
  *(void *)(inited + 216) = &type metadata for Data;
  *(void *)(inited + 224) = 115;
  *(void *)(inited + 232) = 0xE100000000000000;
  unint64_t v10 = (uint64_t *)(v0 + v3[8]);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  *(void *)(inited + 240) = *v10;
  *(void *)(inited + 248) = v12;
  *(void *)(inited + 264) = &type metadata for Data;
  *(void *)(inited + 272) = 118;
  *(void *)(inited + 280) = 0xE100000000000000;
  sub_1000361E0(v8, v9);
  sub_1000361E0(v11, v12);
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_100BFE56C(v13);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  if (*(void *)(v15 + 16))
  {
    sub_10000588C(&qword_10165B298);
    uint64_t v16 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v16 = _swiftEmptyDictionarySingleton;
  }
  int64_t v20 = v16;
  uint64_t v17 = (void *)swift_bridgeObjectRetain();
  sub_100BFFF80(v17, 1, &v20);
  swift_bridgeObjectRelease();
  unint64_t v18 = v20;
  *(void *)(inited + 312) = sub_10000588C(&qword_10165B2A0);
  *(void *)(inited + 288) = v18;
  return sub_10092CEEC(inited);
}

uint64_t sub_100BFEA20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v94 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v93 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v95 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for OfflineFindingInfo();
  uint64_t v16 = *((void *)v15 - 1);
  __chkstk_darwin(v15);
  unint64_t v18 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)
    || (v96 = a2, uint64_t v19 = sub_100723FF4(108, 0xE100000000000000), a2 = v96, (v20 & 1) == 0)
    || (sub_10012F428(*(void *)(a1 + 56) + 32 * v19, (uint64_t)&v98), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  unint64_t v91 = v14;
  uint64_t v92 = v7;
  long long v21 = v97;
  long long v98 = v97;
  sub_1000362FC();
  DataProtocol.bytes.getter();
  UUID.init(bytes:)();
  uint64_t v22 = v95;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v11, 1, v12) != 1)
  {
    long long v90 = v21;
    unint64_t v25 = v91;
    uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v89(v91, v11, v12);
    if (*(void *)(a1 + 16) && (uint64_t v26 = sub_100723FF4(98, 0xE100000000000000), (v27 & 1) != 0))
    {
      uint64_t v88 = v22 + 32;
      sub_10012F428(*(void *)(a1 + 56) + 32 * v26, (uint64_t)&v98);
      uint64_t v28 = v92;
      int v29 = swift_dynamicCast();
      uint64_t v30 = v94;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v94 + 56))(v6, v29 ^ 1u, 1, v28);
      int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v28);
      a2 = v96;
      if (v31 != 1)
      {
        unint64_t v87 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v87(v93, v6, v28);
        if (!*(void *)(a1 + 16))
        {
          swift_bridgeObjectRelease();
          unint64_t v41 = *((void *)&v90 + 1);
          uint64_t v40 = v90;
LABEL_25:
          sub_10001CFB8(v40, v41);
          goto LABEL_26;
        }
        uint64_t v32 = sub_100723FF4(105, 0xE100000000000000);
        unint64_t v33 = *((void *)&v90 + 1);
        if (v34)
        {
          sub_10012F428(*(void *)(a1 + 56) + 32 * v32, (uint64_t)&v98);
          char v35 = swift_dynamicCast();
          a2 = v96;
          if ((v35 & 1) == 0 || !*(void *)(a1 + 16))
          {
LABEL_24:
            swift_bridgeObjectRelease();
            uint64_t v40 = v90;
            unint64_t v41 = v33;
            goto LABEL_25;
          }
          uint64_t v86 = v97;
          uint64_t v36 = sub_100723FF4(112, 0xE100000000000000);
          if (v37)
          {
            sub_10012F428(*(void *)(a1 + 56) + 32 * v36, (uint64_t)&v98);
            char v38 = swift_dynamicCast();
            a2 = v96;
            if (v38)
            {
              unint64_t v39 = *((void *)&v97 + 1);
              uint64_t v85 = v97;
              sub_1000361E0(v97, *((unint64_t *)&v97 + 1));
              unint64_t v84 = v39;
              uint64_t v42 = sub_10043A38C(v85, v39);
              unint64_t v83 = v43;
              if (!*(void *)(a1 + 16)
                || (uint64_t v44 = sub_100723FF4(115, 0xE100000000000000), (v45 & 1) == 0)
                || (sub_10012F428(*(void *)(a1 + 56) + 32 * v44, (uint64_t)&v98), (swift_dynamicCast() & 1) == 0))
              {
                swift_bridgeObjectRelease();
                uint64_t v47 = v42;
                uint64_t v48 = &v101;
LABEL_32:
                sub_10001CFB8(v47, *(v48 - 32));
                sub_10001CFB8(v85, v84);
                sub_10001CFB8(v90, *((unint64_t *)&v90 + 1));
LABEL_33:
                (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v92);
                (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v12);
                goto LABEL_6;
              }
              long long v46 = v97;
              sub_1000361E0(v97, *((unint64_t *)&v97 + 1));
              long long v82 = v46;
              sub_100434DF4(v46, *((unint64_t *)&v46 + 1), (uint64_t *)&v98);
              unint64_t v81 = *((void *)&v98 + 1);
              uint64_t v49 = v98;
              if (*(void *)(a1 + 16) && (uint64_t v50 = sub_100723FF4(118, 0xE100000000000000), (v51 & 1) != 0))
              {
                sub_10012F428(*(void *)(a1 + 56) + 32 * v50, (uint64_t)&v98);
              }
              else
              {
                long long v98 = 0u;
                long long v99 = 0u;
              }
              swift_bridgeObjectRelease();
              if (!*((void *)&v99 + 1))
              {
                sub_10001CFB8(v42, v83);
                sub_10001CFB8(v49, v81);
                sub_10001CFB8(v82, *((unint64_t *)&v82 + 1));
                sub_10001CFB8(v85, v84);
                sub_10001CFB8(v90, *((unint64_t *)&v90 + 1));
                sub_10001DAB4((uint64_t)&v98, (uint64_t *)&unk_101644360);
                goto LABEL_33;
              }
              sub_10000588C(&qword_101657068);
              if ((swift_dynamicCast() & 1) == 0)
              {
                sub_10001CFB8(v42, v83);
                sub_10001CFB8(v49, v81);
LABEL_55:
                uint64_t v47 = v82;
                uint64_t v48 = &v100;
                goto LABEL_32;
              }
              uint64_t v52 = v97;
              if (*(void *)(v97 + 16) == 2)
              {
                *(void *)&long long v98 = 1;
                uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
                if (*(void *)(v52 + 16))
                {
                  uint64_t v55 = sub_100723FF4(v53, v54);
                  if (v56)
                  {
                    uint64_t v80 = *(void *)(*(void *)(v52 + 56) + 8 * v55);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    *(void *)&long long v98 = 2;
                    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
                    if (*(void *)(v52 + 16))
                    {
                      uint64_t v59 = sub_100723FF4(v57, v58);
                      if (v60)
                      {
                        uint64_t v79 = *(void *)(*(void *)(v52 + 56) + 8 * v59);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        *(void *)&long long v98 = _swiftEmptyDictionarySingleton;
                        if (*(void *)(v80 + 16)
                          && (uint64_t v61 = sub_100723FF4(115, 0xE100000000000000), (v62 & 1) != 0)
                          && *(void *)(v80 + 16)
                          && (uint64_t v63 = *(void *)(*(void *)(v80 + 56) + 8 * v61),
                              uint64_t v64 = sub_100723FF4(108, 0xE100000000000000),
                              (v65 & 1) != 0))
                        {
                          uint64_t v66 = *(void *)(*(void *)(v80 + 56) + 8 * v64);
                          swift_bridgeObjectRelease();
                          sub_10015E974((uint64_t)[objc_allocWithZone((Class)SPOfflineAdvertisingConfiguration) initWithShortIntervalCount:v63 longIntervalCount:v66], 1);
                        }
                        else
                        {
                          swift_bridgeObjectRelease();
                        }
                        if (*(void *)(v79 + 16) && (uint64_t v67 = sub_100723FF4(115, 0xE100000000000000), (v68 & 1) != 0))
                        {
                          if (*(void *)(v79 + 16)
                            && (uint64_t v69 = *(void *)(*(void *)(v79 + 56) + 8 * v67),
                                uint64_t v70 = sub_100723FF4(108, 0xE100000000000000),
                                (v71 & 1) != 0))
                          {
                            uint64_t v72 = *(void *)(*(void *)(v79 + 56) + 8 * v70);
                            swift_bridgeObjectRelease();
                            sub_10015E974((uint64_t)[objc_allocWithZone((Class)SPOfflineAdvertisingConfiguration) initWithShortIntervalCount:v69 longIntervalCount:v72], 2);
                          }
                          else
                          {
                            swift_bridgeObjectRelease();
                          }
                          sub_10001CFB8(v90, *((unint64_t *)&v90 + 1));
                          sub_10001CFB8(v85, v84);
                          sub_10001CFB8(v82, *((unint64_t *)&v82 + 1));
                        }
                        else
                        {
                          sub_10001CFB8(v90, *((unint64_t *)&v90 + 1));
                          sub_10001CFB8(v85, v84);
                          sub_10001CFB8(v82, *((unint64_t *)&v82 + 1));
                          swift_bridgeObjectRelease();
                        }
                        uint64_t v73 = v98;
                        if (*(void *)(v98 + 16) == 2)
                        {
                          v89(v18, v91, v12);
                          v87(&v18[v15[5]], v93, v92);
                          *(void *)&v18[v15[6]] = v86;
                          uint64_t v74 = (uint64_t *)&v18[v15[7]];
                          unint64_t v75 = v83;
                          *uint64_t v74 = v42;
                          v74[1] = v75;
                          unint64_t v76 = (uint64_t *)&v18[v15[8]];
                          unint64_t v77 = v81;
                          *unint64_t v76 = v49;
                          v76[1] = v77;
                          *(void *)&v18[v15[9]] = v73;
                          a2 = v96;
                          sub_100C00314((uint64_t)v18, v96);
                          uint64_t v23 = 0;
                          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(a2, v23, 1, v15);
                        }
                        sub_10001CFB8(v42, v83);
                        sub_10001CFB8(v49, v81);
                        swift_bridgeObjectRelease();
                        goto LABEL_33;
                      }
                    }
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_10001CFB8(v42, v83);
                    sub_10001CFB8(v49, v81);
                    goto LABEL_54;
                  }
                }
                swift_bridgeObjectRelease();
              }
              sub_10001CFB8(v42, v83);
              sub_10001CFB8(v49, v81);
LABEL_54:
              swift_bridgeObjectRelease();
              goto LABEL_55;
            }
            goto LABEL_24;
          }
        }
        swift_bridgeObjectRelease();
        sub_10001CFB8(v90, v33);
        a2 = v96;
LABEL_26:
        (*(void (**)(char *, uint64_t))(v94 + 8))(v93, v28);
        (*(void (**)(char *, uint64_t))(v95 + 8))(v25, v12);
        goto LABEL_8;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v94 + 56))(v6, 1, 1, v92);
      a2 = v96;
    }
    swift_bridgeObjectRelease();
    sub_10001CFB8(v90, *((unint64_t *)&v90 + 1));
    (*(void (**)(char *, uint64_t))(v95 + 8))(v25, v12);
    sub_10001DAB4((uint64_t)v6, (uint64_t *)&unk_10163AC90);
LABEL_8:
    uint64_t v23 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(a2, v23, 1, v15);
  }
  sub_10001CFB8(v21, *((unint64_t *)&v21 + 1));
  swift_bridgeObjectRelease();
  sub_10001DAB4((uint64_t)v11, &qword_101638CF0);
LABEL_6:
  uint64_t v23 = 1;
  a2 = v96;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(a2, v23, 1, v15);
}

uint64_t sub_100BFF688()
{
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
  _StringGuts.grow(_:)(88);
  int64_t v1 = (int *)type metadata accessor for OfflineFindingInfo();
  sub_100BFFB94(&qword_10165B280, (void (*)(uint64_t))type metadata accessor for OfflineFindingInfo);
  v2._countAndFlagsBits = CustomStringConvertible.typeDescription.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x6669746E65646928;
  v3._object = (void *)0xED0000203A726569;
  String.append(_:)(v3);
  type metadata accessor for UUID();
  sub_100BFFB94((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  v4._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  v5._countAndFlagsBits = 0x676E697269617020;
  v5._object = (void *)0xEE00203A65746144;
  String.append(_:)(v5);
  type metadata accessor for Date();
  sub_100BFFB94((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  v6._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x203A7865646E6920;
  v7._object = (void *)0xE800000000000000;
  String.append(_:)(v7);
  uint64_t v36 = *(void **)(v0 + v1[6]);
  v8._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x3C203A4B5020;
  v9._object = (void *)0xE600000000000000;
  String.append(_:)(v9);
  uint64_t v10 = (uint64_t *)(v0 + v1[7]);
  uint64_t v11 = *v10;
  unint64_t v12 = v10[1];
  unint64_t v13 = 0;
  switch(v12 >> 62)
  {
    case 1uLL:
      LODWORD(v13) = HIDWORD(v11) - v11;
      if (__OFSUB__(HIDWORD(v11), v11))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        JUMPOUT(0x100BFFB24);
      }
      unint64_t v13 = (int)v13;
LABEL_6:
      uint64_t v36 = (void *)v13;
      v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v18);
      swift_bridgeObjectRelease();
      v19._countAndFlagsBits = 0x203E736574796220;
      v19._object = (void *)0xED00003C203A5353;
      String.append(_:)(v19);
      char v20 = (uint64_t *)(v0 + v1[8]);
      uint64_t v21 = *v20;
      unint64_t v22 = v20[1];
      unint64_t v23 = 0;
      switch(v22 >> 62)
      {
        case 1uLL:
          LODWORD(v23) = HIDWORD(v21) - v21;
          if (__OFSUB__(HIDWORD(v21), v21)) {
            goto LABEL_17;
          }
          unint64_t v23 = (int)v23;
LABEL_11:
          uint64_t v36 = (void *)v23;
          v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v27);
          swift_bridgeObjectRelease();
          v28._object = (void *)0x8000000101416750;
          v28._countAndFlagsBits = 0xD000000000000013;
          String.append(_:)(v28);
          uint64_t v29 = swift_bridgeObjectRetain();
          uint64_t v30 = sub_100BFE354(v29);
          swift_bridgeObjectRelease();
          if (v30[2])
          {
            sub_10000588C(&qword_10165B288);
            int v31 = (void *)static _DictionaryStorage.allocate(capacity:)();
          }
          else
          {
            int v31 = _swiftEmptyDictionarySingleton;
          }
          uint64_t v36 = v31;
          uint64_t v32 = (void *)swift_bridgeObjectRetain();
          sub_100BFFBDC(v32, 1, &v36);
          swift_bridgeObjectRelease();
          sub_100BFFF40();
          v33._countAndFlagsBits = Dictionary.description.getter();
          String.append(_:)(v33);
          swift_release();
          swift_bridgeObjectRelease();
          v34._countAndFlagsBits = 41;
          v34._object = (void *)0xE100000000000000;
          String.append(_:)(v34);
          return v37;
        case 2uLL:
          uint64_t v26 = v21 + 16;
          uint64_t v25 = *(void *)(v21 + 16);
          uint64_t v24 = *(void *)(v26 + 8);
          BOOL v17 = __OFSUB__(v24, v25);
          unint64_t v23 = v24 - v25;
          if (!v17) {
            goto LABEL_11;
          }
          goto LABEL_18;
        case 3uLL:
          goto LABEL_11;
        default:
          unint64_t v23 = BYTE6(v22);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v16 = v11 + 16;
      uint64_t v15 = *(void *)(v11 + 16);
      uint64_t v14 = *(void *)(v16 + 8);
      BOOL v17 = __OFSUB__(v14, v15);
      unint64_t v13 = v14 - v15;
      if (!v17) {
        goto LABEL_6;
      }
      goto LABEL_16;
    case 3uLL:
      goto LABEL_6;
    default:
      unint64_t v13 = BYTE6(v12);
      goto LABEL_6;
  }
}

uint64_t type metadata accessor for OfflineFindingInfo()
{
  uint64_t result = qword_10165B300;
  if (!qword_10165B300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BFFB94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BFFBDC(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1[4];
  Swift::String v6 = (void *)a1[5];
  swift_bridgeObjectRetain();
  Swift::String v8 = (void *)*a3;
  unint64_t v9 = sub_100723EF4(v7);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12)) {
    goto LABEL_24;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  uint64_t v16 = v8[3];
  id v17 = v6;
  if (v16 >= v13)
  {
    if (a2)
    {
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100E7DEAC();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v21[6] + v22) = v7;
    *(void *)(v21[7] + v22) = v17;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v25;
    uint64_t v26 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = (void **)(a1 + 7); ; i += 2)
    {
      uint64_t v29 = (uint64_t)*(i - 1);
      Swift::String v28 = *i;
      uint64_t v30 = (void *)*a3;
      unint64_t v31 = sub_100723EF4(v29);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      unint64_t v36 = v31;
      char v37 = v32;
      uint64_t v38 = v30[3];
      id v17 = v28;
      if (v38 < v35)
      {
        sub_100E64A64(v35, 1);
        unint64_t v39 = sub_100723EF4(v29);
        if ((v37 & 1) != (v40 & 1)) {
          goto LABEL_26;
        }
        unint64_t v36 = v39;
      }
      if (v37) {
        goto LABEL_10;
      }
      unint64_t v41 = (void *)*a3;
      *(void *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      uint64_t v42 = 8 * v36;
      *(void *)(v41[6] + v42) = v29;
      *(void *)(v41[7] + v42) = v17;
      uint64_t v43 = v41[2];
      BOOL v24 = __OFADD__(v43, 1);
      uint64_t v44 = v43 + 1;
      if (v24) {
        goto LABEL_25;
      }
      v41[2] = v44;
      if (!--v26) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100E64A64(v13, a2 & 1);
  unint64_t v18 = sub_100723EF4(v7);
  if ((v15 & 1) == (v19 & 1))
  {
    unint64_t v14 = v18;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    if ((swift_dynamicCast() & 1) == 0)
    {

      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  _StringGuts.grow(_:)(30);
  v45._object = (void *)0x8000000101408560;
  v45._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v45);
  _print_unlocked<A, B>(_:_:)();
  v46._countAndFlagsBits = 39;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_100BFFF40()
{
  unint64_t result = qword_10165B290;
  if (!qword_10165B290)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10165B290);
  }
  return result;
}

uint64_t sub_100BFFF80(void *a1, char a2, void *a3)
{
  if (!a1[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v43 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  unint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_100723FF4(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100E81234();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    char v19 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    char v20 = (uint64_t *)(v19[6] + 16 * v11);
    *char v20 = v7;
    v20[1] = v6;
    *(void *)(v19[7] + 8 * v11) = v8;
    uint64_t v21 = v19[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v19[2] = v23;
    uint64_t v24 = v43 - 1;
    if (v43 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 9; ; i += 3)
    {
      uint64_t v27 = *(i - 2);
      uint64_t v26 = *(i - 1);
      uint64_t v28 = *i;
      uint64_t v29 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v30 = sub_100723FF4(v27, v26);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v22 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v22) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_100E6BB84(v34, 1);
        unint64_t v30 = sub_100723FF4(v27, v26);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      char v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      uint64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      *uint64_t v38 = v27;
      v38[1] = v26;
      *(void *)(v37[7] + 8 * v30) = v28;
      uint64_t v39 = v37[2];
      BOOL v22 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v22) {
        goto LABEL_24;
      }
      v37[2] = v40;
      if (!--v24) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_100E6BB84(v14, a2 & 1);
  uint64_t v16 = sub_100723FF4(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_10000588C(&qword_101638D40);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_26:
  _StringGuts.grow(_:)(30);
  v41._object = (void *)0x8000000101408560;
  v41._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v41);
  _print_unlocked<A, B>(_:_:)();
  v42._countAndFlagsBits = 39;
  v42._object = (void *)0xE100000000000000;
  String.append(_:)(v42);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100C00314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OfflineFindingInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100C00378(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    unint64_t v9 = (char *)a1 + v8;
    char v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    BOOL v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = *(uint64_t *)((char *)a2 + v12);
    unint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 8);
    sub_1000361E0(v14, v15);
    *BOOL v13 = v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    char v17 = (uint64_t *)((char *)a1 + v16);
    unint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_1000361E0(*v18, v20);
    *char v17 = v19;
    v17[1] = v20;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100C004E0(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  sub_10001CFB8(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  sub_10001CFB8(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8));

  return swift_bridgeObjectRelease();
}

uint64_t sub_100C005BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  unint64_t v14 = *(void *)(a2 + v11 + 8);
  sub_1000361E0(v13, v14);
  *uint64_t v12 = v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  uint64_t v16 = (uint64_t *)(a1 + v15);
  char v17 = (uint64_t *)(a2 + v15);
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  sub_1000361E0(*v17, v19);
  *uint64_t v16 = v18;
  v16[1] = v19;
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100C006D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v11 = a3[7];
  uint64_t v12 = (uint64_t *)(a1 + v11);
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  unint64_t v15 = v13[1];
  sub_1000361E0(*v13, v15);
  uint64_t v16 = *v12;
  unint64_t v17 = v12[1];
  *uint64_t v12 = v14;
  v12[1] = v15;
  sub_10001CFB8(v16, v17);
  uint64_t v18 = a3[8];
  unint64_t v19 = (uint64_t *)(a1 + v18);
  unint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  sub_1000361E0(*v20, v22);
  uint64_t v23 = *v19;
  unint64_t v24 = v19[1];
  uint64_t *v19 = v21;
  v19[1] = v22;
  sub_10001CFB8(v23, v24);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C0080C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v12 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  return a1;
}

uint64_t sub_100C008F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = *(void *)(a1 + v11);
  unint64_t v13 = *(void *)(a1 + v11 + 8);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  sub_10001CFB8(v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = *(void *)(a1 + v14);
  unint64_t v16 = *(void *)(a1 + v14 + 8);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  sub_10001CFB8(v15, v16);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100C00A00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C00A14);
}

uint64_t sub_100C00A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t sub_100C00B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C00B3C);
}

uint64_t sub_100C00B3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for Date();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_100C00C4C()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsPushAckStatus()
{
  return &type metadata for SecureLocationsPushAckStatus;
}

uint64_t sub_100C00D4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v1 = sub_10000588C(&qword_101641B60);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URLComponents();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v30 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMNAccountType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10000588C(&qword_101649E40);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for URL();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FMNAuthenticationProvider();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for FMNAccountType.secureLocations(_:), v6);
  static FMNAuthenticationProvider.configurationURL(accountType:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t v17 = &qword_101649E40;
    uint64_t v18 = (uint64_t)v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    uint64_t v19 = v31;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v3, 1, v4) != 1)
    {
      uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      uint64_t v26 = v30;
      v25(v30, v3, v4);
      uint64_t v27 = (void (*)(unsigned char *, void))URLComponents.path.modify();
      v28._countAndFlagsBits = 7037793;
      v28._object = (void *)0xE300000000000000;
      String.append(_:)(v28);
      v27(v33, 0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v25)(v32, v26, v4);
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    unint64_t v17 = &qword_101641B60;
    uint64_t v18 = (uint64_t)v3;
  }
  sub_10001DAB4(v18, v17);
  if (qword_101637070 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100010324(v20, (uint64_t)qword_10170EC30);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "No url found in account bag.", v23, 2u);
    swift_slowDealloc();
  }

  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.path.setter();
  return URLComponents.host.setter();
}

uint64_t sub_100C01240(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_10000588C(&qword_10165B408);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100C02BA8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v13[0]) = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    LOBYTE(v13[0]) = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
    *(void *)&v13[0] = *(void *)(v3 + 32);
    char v15 = 3;
    sub_10000588C(&qword_10164D118);
    sub_100C02BFC();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    long long v9 = *(_OWORD *)(v3 + 120);
    v13[4] = *(_OWORD *)(v3 + 104);
    v13[5] = v9;
    v13[6] = *(_OWORD *)(v3 + 136);
    uint64_t v14 = *(void *)(v3 + 152);
    long long v10 = *(_OWORD *)(v3 + 56);
    v13[0] = *(_OWORD *)(v3 + 40);
    v13[1] = v10;
    long long v11 = *(_OWORD *)(v3 + 88);
    v13[2] = *(_OWORD *)(v3 + 72);
    v13[3] = v11;
    char v15 = 4;
    sub_1004CABF4();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100C01480(unsigned __int8 *a1, char *a2)
{
  return sub_10071A334(*a1, *a2);
}

Swift::Int sub_100C0148C()
{
  return Hasher._finalize()();
}

uint64_t sub_100C01580()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100C0165C()
{
  return Hasher._finalize()();
}

unint64_t sub_100C0174C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100C02A80(*a1);
  *a2 = result;
  return result;
}

void sub_100C0177C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE900000000000053;
  uint64_t v3 = 0x54646E6553706174;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 29556;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6449646D63;
      *(void *)(a1 + 8) = 0xE500000000000000;
      break;
    case 3:
      *(void *)a1 = 0x737574617473;
      *(void *)(a1 + 8) = 0xE600000000000000;
      break;
    case 4:
      strcpy((char *)a1, "clientContext");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_100C01834()
{
  uint64_t result = 0x54646E6553706174;
  switch(*v0)
  {
    case 1:
      uint64_t result = 29556;
      break;
    case 2:
      uint64_t result = 0x6449646D63;
      break;
    case 3:
      uint64_t result = 0x737574617473;
      break;
    case 4:
      uint64_t result = 0x6F43746E65696C63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100C018DC@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_100C02A80(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100C01904(uint64_t a1)
{
  unint64_t v2 = sub_100C02BA8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C01940(uint64_t a1)
{
  unint64_t v2 = sub_100C02BA8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C0197C(void *a1)
{
  return sub_100C01240(a1);
}

uint64_t sub_100C01994(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v11[0] = a4;
  uint64_t v6 = sub_10000588C(&qword_10165B348);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  long long v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100C01C1C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v4)
  {
    v11[1] = v11[0];
    char v12 = 1;
    sub_10000588C(&qword_101647EA0);
    sub_100C01C70();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100C01B2C()
{
  if (*v0) {
    return 0x73726F727265;
  }
  else {
    return 1682533734;
  }
}

uint64_t sub_100C01B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100C02ACC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C01B84(uint64_t a1)
{
  unint64_t v2 = sub_100C01C1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C01BC0(uint64_t a1)
{
  unint64_t v2 = sub_100C01C1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C01BFC(void *a1)
{
  return sub_100C01994(a1, *v1, v1[1], v1[2]);
}

unint64_t sub_100C01C1C()
{
  unint64_t result = qword_10165B350;
  if (!qword_10165B350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B350);
  }
  return result;
}

unint64_t sub_100C01C70()
{
  unint64_t result = qword_10164C190;
  if (!qword_10164C190)
  {
    sub_10000592C(&qword_101647EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10164C190);
  }
  return result;
}

id sub_100C01CDC(uint64_t a1)
{
  unint64_t v2 = sub_10092D8F8((uint64_t)_swiftEmptyArrayStorage);
  id result = [self currentDevice];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result serverFriendlyDescription];

    if (v5)
    {
      uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10016C0FC(v6, v8, 0xD000000000000011, 0x80000001013F64E0, isUniquelyReferenced_nonNull_native);
    }
    else
    {
      sub_100163690(0xD000000000000011, 0x80000001013F64E0);
    }
    swift_bridgeObjectRelease();
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    sub_10016C0FC(49, 0xE100000000000000, 0x562D747065636341, 0xEE006E6F69737265, v10);
    swift_bridgeObjectRelease();
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_10016C0FC(0xD000000000000010, 0x80000001013F87B0, 0x2D746E65746E6F43, 0xEC00000065707954, v11);
    swift_bridgeObjectRelease();
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    sub_100C02038();
    dispatch thunk of JSONEncoder.encode<A>(_:)();
    swift_release();
    sub_100C0208C(a1);
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_100C02038()
{
  unint64_t result = qword_10165B358;
  if (!qword_10165B358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B358);
  }
  return result;
}

uint64_t sub_100C0208C(uint64_t a1)
{
  return a1;
}

uint64_t destroy for SecureLocationsPushAckRequestBody()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SecureLocationsPushAckRequestBody(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  uint64_t v9 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SecureLocationsPushAckRequestBody(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v4;
  LOBYTE(v4) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = v4;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v5;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SecureLocationsPushAckRequestBody(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t assignWithTake for SecureLocationsPushAckRequestBody(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SecureLocationsPushAckRequestBody(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 176)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SecureLocationsPushAckRequestBody(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 176) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsPushAckRequestBody()
{
  return &type metadata for SecureLocationsPushAckRequestBody;
}

ValueMetadata *type metadata accessor for SecureLocationsPushAckRequest()
{
  return &type metadata for SecureLocationsPushAckRequest;
}

uint64_t sub_100C02604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C02618);
}

uint64_t sub_100C02618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for FMNAccountType();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for URLComponents();
    char v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100C02710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C02724);
}

uint64_t sub_100C02724(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for FMNAccountType();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for URLComponents();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SecureLocationsPushAckEndpoint()
{
  uint64_t result = qword_10165B3B8;
  if (!qword_10165B3B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SecureLocationsPushAckStatus.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C02940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsPushAckStatus.CodingKeys()
{
  return &type metadata for SecureLocationsPushAckStatus.CodingKeys;
}

unint64_t sub_100C0297C()
{
  unint64_t result = qword_10165B3F0;
  if (!qword_10165B3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B3F0);
  }
  return result;
}

unint64_t sub_100C029D4()
{
  unint64_t result = qword_10165B3F8;
  if (!qword_10165B3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B3F8);
  }
  return result;
}

unint64_t sub_100C02A2C()
{
  unint64_t result = qword_10165B400;
  if (!qword_10165B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B400);
  }
  return result;
}

unint64_t sub_100C02A80(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1015A5480, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 5) {
    return 5;
  }
  else {
    return v3;
  }
}

uint64_t sub_100C02ACC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1682533734 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F727265 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100C02BA8()
{
  unint64_t result = qword_10165B410;
  if (!qword_10165B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B410);
  }
  return result;
}

unint64_t sub_100C02BFC()
{
  unint64_t result = qword_10165B418;
  if (!qword_10165B418)
  {
    sub_10000592C(&qword_10164D118);
    sub_100C02C70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B418);
  }
  return result;
}

unint64_t sub_100C02C70()
{
  unint64_t result = qword_10165B420;
  if (!qword_10165B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B420);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SecureLocationsPushAckRequestBody.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C02D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureLocationsPushAckRequestBody.CodingKeys()
{
  return &type metadata for SecureLocationsPushAckRequestBody.CodingKeys;
}

unint64_t sub_100C02DCC()
{
  unint64_t result = qword_10165B428;
  if (!qword_10165B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B428);
  }
  return result;
}

unint64_t sub_100C02E24()
{
  unint64_t result = qword_10165B430;
  if (!qword_10165B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B430);
  }
  return result;
}

unint64_t sub_100C02E7C()
{
  unint64_t result = qword_10165B438;
  if (!qword_10165B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B438);
  }
  return result;
}

char *sub_100C02ED0(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v41 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v41 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for MACAddress();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = &a1[v13];
    unint64_t v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)uint64_t v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    uint64_t v18 = &a1[v14];
    uint64_t v19 = &a2[v14];
    uint64_t v20 = type metadata accessor for Date();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = a3[9];
    uint64_t v23 = (uint64_t *)&a1[v22];
    unint64_t v24 = (uint64_t *)&a2[v22];
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    sub_1000361E0(*v24, v26);
    *uint64_t v23 = v25;
    v23[1] = v26;
    uint64_t v27 = a3[10];
    Swift::String v28 = (uint64_t *)&a1[v27];
    uint64_t v29 = &a2[v27];
    uint64_t v30 = *(void *)&a2[v27];
    unint64_t v31 = *(void *)&a2[v27 + 8];
    sub_1000361E0(v30, v31);
    uint64_t *v28 = v30;
    v28[1] = v31;
    uint64_t v32 = *((void *)v29 + 2);
    unint64_t v33 = *((void *)v29 + 3);
    sub_1000361E0(v32, v33);
    v28[2] = v32;
    v28[3] = v33;
    uint64_t v34 = *((void *)v29 + 4);
    unint64_t v35 = *((void *)v29 + 5);
    sub_1000361E0(v34, v35);
    v28[4] = v34;
    v28[5] = v35;
    uint64_t v36 = a3[11];
    char v37 = (uint64_t *)&a1[v36];
    uint64_t v38 = (uint64_t *)&a2[v36];
    uint64_t v39 = *v38;
    unint64_t v40 = v38[1];
    sub_1000361E0(*v38, v40);
    *char v37 = v39;
    v37[1] = v40;
  }
  return a1;
}

uint64_t sub_100C030FC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for MACAddress();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  v7(a1 + a2[6], v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  sub_10001CFB8(*(void *)(a1 + a2[9]), *(void *)(a1 + a2[9] + 8));
  uint64_t v10 = a1 + a2[10];
  sub_10001CFB8(*(void *)v10, *(void *)(v10 + 8));
  sub_10001CFB8(*(void *)(v10 + 16), *(void *)(v10 + 24));
  sub_10001CFB8(*(void *)(v10 + 32), *(void *)(v10 + 40));
  uint64_t v11 = (uint64_t *)(a1 + a2[11]);
  uint64_t v12 = *v11;
  unint64_t v13 = v11[1];

  return sub_10001CFB8(v12, v13);
}

uint64_t sub_100C03260(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = a3[9];
  uint64_t v22 = (uint64_t *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v24 = *v23;
  unint64_t v25 = v23[1];
  sub_1000361E0(*v23, v25);
  *uint64_t v22 = v24;
  v22[1] = v25;
  uint64_t v26 = a3[10];
  uint64_t v27 = (uint64_t *)(a1 + v26);
  Swift::String v28 = (void *)(a2 + v26);
  uint64_t v29 = *(void *)(a2 + v26);
  unint64_t v30 = *(void *)(a2 + v26 + 8);
  sub_1000361E0(v29, v30);
  *uint64_t v27 = v29;
  v27[1] = v30;
  uint64_t v31 = v28[2];
  unint64_t v32 = v28[3];
  sub_1000361E0(v31, v32);
  v27[2] = v31;
  v27[3] = v32;
  uint64_t v33 = v28[4];
  unint64_t v34 = v28[5];
  sub_1000361E0(v33, v34);
  v27[4] = v33;
  v27[5] = v34;
  uint64_t v35 = a3[11];
  uint64_t v36 = (uint64_t *)(a1 + v35);
  char v37 = (uint64_t *)(a2 + v35);
  uint64_t v38 = *v37;
  unint64_t v39 = v37[1];
  sub_1000361E0(*v37, v39);
  uint64_t *v36 = v38;
  v36[1] = v39;
  return a1;
}

uint64_t sub_100C0343C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[8];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = (uint64_t *)(a1 + v19);
  uint64_t v21 = (uint64_t *)(a2 + v19);
  uint64_t v22 = *v21;
  unint64_t v23 = v21[1];
  sub_1000361E0(*v21, v23);
  uint64_t v24 = *v20;
  unint64_t v25 = v20[1];
  *uint64_t v20 = v22;
  v20[1] = v23;
  sub_10001CFB8(v24, v25);
  uint64_t v26 = a3[10];
  uint64_t v27 = (uint64_t *)(a1 + v26);
  Swift::String v28 = (void *)(a2 + v26);
  uint64_t v29 = *(void *)(a2 + v26);
  unint64_t v30 = *(void *)(a2 + v26 + 8);
  sub_1000361E0(v29, v30);
  uint64_t v31 = *v27;
  unint64_t v32 = v27[1];
  *uint64_t v27 = v29;
  v27[1] = v30;
  sub_10001CFB8(v31, v32);
  uint64_t v33 = v28[2];
  unint64_t v34 = v28[3];
  sub_1000361E0(v33, v34);
  uint64_t v35 = v27[2];
  unint64_t v36 = v27[3];
  v27[2] = v33;
  v27[3] = v34;
  sub_10001CFB8(v35, v36);
  uint64_t v37 = v28[4];
  unint64_t v38 = v28[5];
  sub_1000361E0(v37, v38);
  uint64_t v39 = v27[4];
  unint64_t v40 = v27[5];
  v27[4] = v37;
  v27[5] = v38;
  sub_10001CFB8(v39, v40);
  uint64_t v41 = a3[11];
  Swift::String v42 = (uint64_t *)(a1 + v41);
  uint64_t v43 = (uint64_t *)(a2 + v41);
  uint64_t v44 = *v43;
  unint64_t v45 = v43[1];
  sub_1000361E0(*v43, v45);
  uint64_t v46 = *v42;
  unint64_t v47 = v42[1];
  uint64_t *v42 = v44;
  v42[1] = v45;
  sub_10001CFB8(v46, v47);
  return a1;
}

uint64_t sub_100C03648(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  uint64_t v17 = (_OWORD *)(a1 + v16);
  uint64_t v18 = (long long *)(a2 + v16);
  long long v19 = v18[2];
  long long v20 = *v18;
  v17[1] = v18[1];
  void v17[2] = v19;
  *uint64_t v17 = v20;
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t sub_100C037B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MACAddress();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[6], a2 + a3[6], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = *(void *)(a1 + v21);
  unint64_t v23 = *(void *)(a1 + v21 + 8);
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  sub_10001CFB8(v22, v23);
  uint64_t v24 = a3[10];
  unint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)(a1 + v24);
  unint64_t v28 = *(void *)(a1 + v24 + 8);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  sub_10001CFB8(v27, v28);
  uint64_t v29 = v25[2];
  unint64_t v30 = v25[3];
  *((_OWORD *)v25 + 1) = *(_OWORD *)(v26 + 16);
  sub_10001CFB8(v29, v30);
  uint64_t v31 = v25[4];
  unint64_t v32 = v25[5];
  *((_OWORD *)v25 + 2) = *(_OWORD *)(v26 + 32);
  sub_10001CFB8(v31, v32);
  uint64_t v33 = a3[11];
  uint64_t v34 = *(void *)(a1 + v33);
  unint64_t v35 = *(void *)(a1 + v33 + 8);
  *(_OWORD *)(a1 + v33) = *(_OWORD *)(a2 + v33);
  sub_10001CFB8(v34, v35);
  return a1;
}

uint64_t sub_100C03968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100C0397C);
}

uint64_t sub_100C0397C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for MACAddress();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7] + 8);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t sub_100C03B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100C03B14);
}

uint64_t sub_100C03B14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for MACAddress();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = type metadata accessor for Date();
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

uint64_t type metadata accessor for StandaloneBeacon()
{
  uint64_t result = qword_10165B498;
  if (!qword_10165B498) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100C03CE4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MACAddress();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Date();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100C03E08()
{
  _StringGuts.grow(_:)(75);
  v1._countAndFlagsBits = 0x203A64693CLL;
  v1._object = (void *)0xE500000000000000;
  String.append(_:)(v1);
  type metadata accessor for UUID();
  sub_100C042E8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x7373657264646120;
  v3._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v3);
  uint64_t v4 = type metadata accessor for StandaloneBeacon();
  type metadata accessor for MACAddress();
  sub_100C042E8((unint64_t *)&qword_101649EE0, (void (*)(uint64_t))&type metadata accessor for MACAddress);
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._object = (void *)0x8000000101416790;
  v6._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v6);
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x203A4E5320;
  v8._object = (void *)0xE500000000000000;
  String.append(_:)(v8);
  uint64_t v9 = (uint64_t *)(v0 + *(int *)(v4 + 28));
  uint64_t v10 = *v9;
  uint64_t v11 = (void *)v9[1];
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v10;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x746375646F727020;
  v13._object = (void *)0xEE00203A61746144;
  String.append(_:)(v13);
  uint64_t v14 = (uint64_t *)(v0 + *(int *)(v4 + 36));
  uint64_t v15 = *v14;
  unint64_t v16 = v14[1];
  sub_1000361E0(*v14, v16);
  v17._countAndFlagsBits = sub_1002AA678(v15, v16);
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  sub_10001CFB8(v15, v16);
  v18._countAndFlagsBits = 0x7461447269617020;
  v18._object = (void *)0xEB00000000203A65;
  String.append(_:)(v18);
  type metadata accessor for Date();
  sub_100C042E8((unint64_t *)&qword_101638DA0, (void (*)(uint64_t))&type metadata accessor for Date);
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 62;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  return 0;
}

Swift::Int sub_100C04108()
{
  return Hasher._finalize()();
}

uint64_t sub_100C04190()
{
  type metadata accessor for UUID();
  sub_100C042E8(&qword_10163BC60, (void (*)(uint64_t))&type metadata accessor for UUID);

  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_100C04214()
{
  return Hasher._finalize()();
}

uint64_t sub_100C042A0()
{
  return sub_100C042E8(&qword_10165B4E8, (void (*)(uint64_t))type metadata accessor for StandaloneBeacon);
}

uint64_t sub_100C042E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char **sub_100C04330()
{
  Swift::String v1 = v0;
  id v2 = [v0 ownedCircles];
  Swift::String v3 = _swiftEmptyDictionarySingleton;
  if (v2)
  {
    uint64_t v4 = v2;
    sub_10001D4B0(0, &qword_10163A098);
    unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62) {
      goto LABEL_29;
    }
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    for (uint64_t i = v1; v6; uint64_t i = v1)
    {
      unint64_t v7 = 0;
      unint64_t v121 = v5 & 0xC000000000000001;
      unint64_t v115 = v5 + 32;
      uint64_t v117 = v5 & 0xFFFFFFFFFFFFFF8;
      Swift::String v8 = _swiftEmptyDictionarySingleton;
      uint64_t v119 = v6;
      unint64_t v120 = v5;
      while (1)
      {
        if (v121)
        {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v7 >= *(void *)(v117 + 16)) {
            goto LABEL_28;
          }
          id v22 = *(id *)(v115 + 8 * v7);
        }
        Swift::String v1 = v22;
        BOOL v23 = __OFADD__(v7, 1);
        unint64_t v24 = v7 + 1;
        if (v23) {
          break;
        }
        id v25 = [v22 peerTrusts];
        sub_10001D4B0(0, &qword_10163A0E8);
        unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v26 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        unint64_t v125 = v24;
        uint64_t v127 = v8;
        v123 = v1;
        if (v27)
        {
          if (v27 < 1) {
            goto LABEL_27;
          }
          uint64_t v28 = 0;
          do
          {
            if ((v26 & 0xC000000000000001) != 0) {
              id v36 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v36 = *(id *)(v26 + 8 * v28 + 32);
            }
            uint64_t v37 = v36;
            id v38 = [v36 peerTrustRecord];
            id v39 = [v38 value];

            uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            Swift::String v42 = v41;

            v43._countAndFlagsBits = v40;
            v43._object = v42;
            String.append(_:)(v43);
            swift_bridgeObjectRelease();
            v44._countAndFlagsBits = 8236;
            v44._object = (void *)0xE200000000000000;
            String.append(_:)(v44);
            id v45 = [v37 messagingDestination];
            if (v45)
            {
              uint64_t v29 = v45;
              id v30 = [v45 value];

              uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v33 = v32;
            }
            else
            {
              uint64_t v31 = 0x6974736564206F4ELL;
              uint64_t v33 = (void *)0xEE006E6F6974616ELL;
            }
            ++v28;
            v34._countAndFlagsBits = v31;
            v34._object = v33;
            String.append(_:)(v34);
            swift_bridgeObjectRelease();
            v35._countAndFlagsBits = 0x203A7265657020;
            v35._object = (void *)0xE700000000000000;
            String.append(_:)(v35);

            swift_bridgeObjectRelease();
          }
          while (v27 != v28);
        }
        swift_bridgeObjectRelease();
        Swift::String v1 = 0;
        id v9 = [v123 circleRecord];
        id v10 = [v9 value];

        uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v13 = v12;

        id v14 = [v123 beaconRecord];
        id v15 = [v14 value];

        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        v19._countAndFlagsBits = 44;
        v19._object = (void *)0xE100000000000000;
        String.append(_:)(v19);
        swift_bridgeObjectRetain();
        v20._countAndFlagsBits = 0;
        v20._object = (void *)0xE000000000000000;
        String.append(_:)(v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_10016C0FC(v16, v18, v11, v13, isUniquelyReferenced_nonNull_native);
        Swift::String v8 = v127;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v5 = v120;
        unint64_t v7 = v125;
        if (v125 == v119) {
          goto LABEL_31;
        }
      }
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    Swift::String v8 = _swiftEmptyDictionarySingleton;
LABEL_31:
    swift_bridgeObjectRelease();
    Swift::String v3 = _swiftEmptyDictionarySingleton;
    Swift::String v1 = i;
  }
  else
  {
    Swift::String v8 = _swiftEmptyDictionarySingleton;
  }
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016CFF0((uint64_t)v8, 0x72694364656E776FLL, 0xEC00000073656C63, v46);
  unint64_t v47 = (char **)_swiftEmptyDictionarySingleton;
  swift_bridgeObjectRelease();
  id v48 = [v1 memberCircles];
  if (v48)
  {
    uint64_t v49 = v48;
    sub_10001D4B0(0, &qword_10163A090);
    unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v50 >> 62) {
      goto LABEL_72;
    }
    uint64_t v51 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_35:
    uint64_t v111 = v47;
    if (v51)
    {
      unint64_t v52 = 0;
      unint64_t v118 = v50 & 0xC000000000000001;
      uint64_t v113 = v50 & 0xFFFFFFFFFFFFFF8;
      Swift::String v3 = _swiftEmptyDictionarySingleton;
      unint64_t v112 = v50 + 32;
      unint64_t v47 = &selRef_fetchEncryptedPayloadForUnknownBeacon_completion_;
      uint64_t v116 = v51;
      while (1)
      {
        if (v118)
        {
          id v67 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v52 >= *(void *)(v113 + 16)) {
            goto LABEL_71;
          }
          id v67 = *(id *)(v112 + 8 * v52);
        }
        id v68 = v67;
        BOOL v23 = __OFADD__(v52, 1);
        unint64_t v69 = v52 + 1;
        if (v23)
        {
          __break(1u);
LABEL_69:
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          swift_bridgeObjectRetain();
          uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        unint64_t v126 = v3;
        id v70 = [v67 peerTrusts];
        sub_10001D4B0(0, &qword_10163A0E8);
        unint64_t v71 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v128 = v68;
        unint64_t v124 = v69;
        if (v71 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v72 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v72) {
            goto LABEL_55;
          }
        }
        else
        {
          uint64_t v72 = *(void *)((v71 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (!v72) {
            goto LABEL_55;
          }
        }
        if (v72 < 1) {
          goto LABEL_69;
        }
        uint64_t v73 = 0;
        do
        {
          if ((v71 & 0xC000000000000001) != 0) {
            id v81 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v81 = *(id *)(v71 + 8 * v73 + 32);
          }
          long long v82 = v81;
          id v83 = [v81 peerTrustRecord:v111];
          id v84 = [v83 value];

          uint64_t v85 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v87 = v86;

          v129._countAndFlagsBits = v85;
          v129._object = v87;
          v88._countAndFlagsBits = 8236;
          v88._object = (void *)0xE200000000000000;
          String.append(_:)(v88);
          id v89 = [v82 messagingDestination];
          if (v89)
          {
            uint64_t v74 = v89;
            id v75 = [v89 value];

            uint64_t v76 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v78 = v77;
          }
          else
          {
            uint64_t v76 = 0x6974736564206F4ELL;
            uint64_t v78 = (void *)0xEE006E6F6974616ELL;
          }
          ++v73;
          v79._countAndFlagsBits = v76;
          v79._object = v78;
          String.append(_:)(v79);
          swift_bridgeObjectRelease();
          v80._countAndFlagsBits = 32;
          v80._object = (void *)0xE100000000000000;
          String.append(_:)(v80);
          String.append(_:)(v129);

          swift_bridgeObjectRelease();
        }
        while (v72 != v73);
LABEL_55:
        swift_bridgeObjectRelease();
        id v90 = [v128 sharedBeaconOwnerName];
        id v91 = [v90 value];

        uint64_t v92 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v94 = v93;

        v95._countAndFlagsBits = 32;
        v95._object = (void *)0xE100000000000000;
        String.append(_:)(v95);
        uint64_t v96 = v92;
        long long v97 = v94;
        id v98 = [v128 itemSharingKey];
        sub_10001D4B0(0, &qword_10163A0F0);
        unint64_t v50 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v50 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          uint64_t v122 = v96;
          if (!v99) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v99 = *(void *)((v50 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v122 = v96;
          if (!v99) {
            goto LABEL_37;
          }
        }
        if (v99 < 1) {
          goto LABEL_70;
        }
        uint64_t v100 = 0;
        do
        {
          if ((v50 & 0xC000000000000001) != 0) {
            id v101 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v101 = *(id *)(v50 + 8 * v100 + 32);
          }
          uint64_t v102 = v101;
          ++v100;
          id v103 = [v101 value:v111];
          uint64_t v104 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v106 = v105;

          v107._countAndFlagsBits = 32;
          v107._object = (void *)0xE100000000000000;
          String.append(_:)(v107);
          v108._countAndFlagsBits = v104;
          v108._object = v106;
          String.append(_:)(v108);

          swift_bridgeObjectRelease();
        }
        while (v99 != v100);
LABEL_37:
        swift_bridgeObjectRelease();
        id v53 = [v128 circleRecord:v111];
        id v54 = [v53 value];

        uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v50 = v56;

        id v57 = [v128 sharedBeaconRecord];
        id v58 = [v57 value];

        uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v61 = v60;

        v62._countAndFlagsBits = 32;
        v62._object = (void *)0xE100000000000000;
        String.append(_:)(v62);
        swift_bridgeObjectRetain();
        v63._countAndFlagsBits = v122;
        v63._object = v97;
        String.append(_:)(v63);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v64._countAndFlagsBits = 0;
        v64._object = (void *)0xE000000000000000;
        String.append(_:)(v64);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v65._countAndFlagsBits = 0;
        v65._object = (void *)0xE000000000000000;
        String.append(_:)(v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v66 = swift_isUniquelyReferenced_nonNull_native();
        sub_10016C0FC(v59, v61, v55, v50, v66);
        Swift::String v3 = v126;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v52 = v124;
        if (v124 == v116) {
          goto LABEL_66;
        }
      }
    }
    Swift::String v3 = _swiftEmptyDictionarySingleton;
LABEL_66:
    swift_bridgeObjectRelease();
    unint64_t v47 = v111;
  }
  char v109 = swift_isUniquelyReferenced_nonNull_native();
  sub_10016CFF0((uint64_t)v3, 0x69437265626D656DLL, 0xED000073656C6372, v109);
  swift_bridgeObjectRelease();
  return v47;
}

uint64_t sub_100C04F08()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EAC8);
  sub_100010324(v0, (uint64_t)qword_10170EAC8);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100C04F8C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v14 = a4;
  uint64_t v8 = sub_10000588C(&qword_10165B508);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100C05C4C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v15 = a2;
  uint64_t v16 = a3;
  char v17 = 0;
  sub_100037BB4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v4)
  {
    BYTE4(v15) = BYTE4(v14);
    LODWORD(v15) = v14;
    char v17 = 1;
    sub_100C05CF4();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_100C05130()
{
  if (*v0) {
    return 0x6F666E49766461;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_100C05174@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100C05928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100C0519C(uint64_t a1)
{
  unint64_t v2 = sub_100C05C4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C051D8(uint64_t a1)
{
  unint64_t v2 = sub_100C05C4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C05214@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100C05A34(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(_DWORD *)(a2 + 16) = v6;
    *(unsigned char *)(a2 + 20) = BYTE4(v6);
  }
  return result;
}

uint64_t sub_100C0524C(void *a1)
{
  return sub_100C04F8C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned int *)(v1 + 16) | ((unint64_t)*(unsigned __int8 *)(v1 + 20) << 32));
}

void *sub_100C05274(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    uint64_t v3 = *(void *)(a2 + 16);
    int64_t v4 = *(void *)(a1 + 16);
    if (v3 == v4)
    {
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
      uint64_t v5 = a2 + 32;
      uint64_t v6 = (unint64_t *)(a1 + 40);
      unint64_t v7 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v8 = *(v6 - 1);
        unint64_t v9 = *v6;
        uint64_t v10 = *(void *)(*(void *)v5 + 16);
        sub_1000361E0(v8, *v6);
        sub_1000361E0(v8, v9);
        if (v10)
        {
          sub_1000361E0(v8, v9);
          uint64_t v11 = swift_bridgeObjectRetain();
          uint64_t v12 = sub_100ED0270(v11);
          sub_10001CFB8(v8, v9);
        }
        else
        {
          uint64_t v12 = 3;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_100A721D8(0, v7[2] + 1, 1, v7);
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        if (v14 >= v13 >> 1) {
          unint64_t v7 = sub_100A721D8((void *)(v13 > 1), v14 + 1, 1, v7);
        }
        v6 += 2;
        v7[2] = v14 + 1;
        uint64_t v15 = &v7[3 * v14];
        v15[4] = v8;
        v15[5] = v9;
        *((unsigned char *)v15 + 52) = BYTE4(v12);
        *((_DWORD *)v15 + 12) = v12;
        sub_10001CFB8(v8, v9);
        v5 += 8;
        --v3;
      }
      while (v3);
      return v7;
    }
    if (qword_101636FF8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100010324(v16, (uint64_t)qword_10170EAC8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 134349312;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2050;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Ambiguous hint response from server!\npayload %{public}ld != tlvPackets %{public}ld", (uint8_t *)v19, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    int64_t v4 = *(void *)(a1 + 16);
  }
  unint64_t v7 = _swiftEmptyArrayStorage;
  if (v4)
  {
    sub_1000B8508(0, v4, 0);
    unint64_t v7 = _swiftEmptyArrayStorage;
    Swift::String v20 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v21 = *(v20 - 1);
      unint64_t v22 = *v20;
      sub_1000361E0(v21, *v20);
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      unint64_t v23 = _swiftEmptyArrayStorage[3];
      if (v24 >= v23 >> 1) {
        sub_1000B8508(v23 > 1, v24 + 1, 1);
      }
      v20 += 2;
      _swiftEmptyArrayStorage[2] = v24 + 1;
      id v25 = &_swiftEmptyArrayStorage[3 * v24];
      v25[4] = v21;
      v25[5] = v22;
      *((unsigned char *)v25 + 52) = 0;
      *((_DWORD *)v25 + 12) = 3;
      --v4;
    }
    while (v4);
  }
  return v7;
}

uint64_t sub_100C05758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t assignWithCopy for FetchedLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  int v8 = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  *(_DWORD *)(a1 + 16) = v8;
  return a1;
}

__n128 initializeWithTake for FetchedLocation(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(void *)(a1 + 13) = *(void *)(a2 + 13);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FetchedLocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchedLocation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 21)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchedLocation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 20) = 0;
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 21) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 21) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchedLocation()
{
  return &type metadata for FetchedLocation;
}

uint64_t sub_100C05928(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEC00000061746144;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F666E49766461 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100C05A34(void *a1)
{
  uint64_t v3 = sub_10000588C(&qword_10165B4F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[3];
  sub_10001CD44(a1, v7);
  sub_100C05C4C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    sub_100037AA0();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v7 = v12;
    unint64_t v9 = v13;
    char v11 = 1;
    sub_1000361E0(v12, v13);
    sub_100C05CA0();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
    sub_10001CFB8(v7, v9);
  }
  return v7;
}

unint64_t sub_100C05C4C()
{
  unint64_t result = qword_10165B4F8;
  if (!qword_10165B4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B4F8);
  }
  return result;
}

unint64_t sub_100C05CA0()
{
  unint64_t result = qword_10165B500;
  if (!qword_10165B500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B500);
  }
  return result;
}

unint64_t sub_100C05CF4()
{
  unint64_t result = qword_10165B510;
  if (!qword_10165B510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B510);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FetchedLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C05E14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchedLocation.CodingKeys()
{
  return &type metadata for FetchedLocation.CodingKeys;
}

unint64_t sub_100C05E50()
{
  unint64_t result = qword_10165B518;
  if (!qword_10165B518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B518);
  }
  return result;
}

unint64_t sub_100C05EA8()
{
  unint64_t result = qword_10165B520;
  if (!qword_10165B520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B520);
  }
  return result;
}

unint64_t sub_100C05F00()
{
  unint64_t result = qword_10165B528;
  if (!qword_10165B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B528);
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryBatteryLevelResponsePayload()
{
  return &type metadata for AccessoryBatteryLevelResponsePayload;
}

uint64_t sub_100C05F64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100C06014(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

unint64_t sub_100C05F90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_100C05FC0();
  unint64_t result = sub_100573D80();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_100C05FC0()
{
  unint64_t result = qword_10165B530;
  if (!qword_10165B530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165B530);
  }
  return result;
}

uint64_t sub_100C06014(void *a1)
{
  uint64_t v3 = type metadata accessor for Endianness();
  __chkstk_darwin(v3 - 8);
  sub_10001CD44(a1, a1[3]);
  dispatch thunk of BinaryDecoding.container()();
  uint64_t v4 = sub_1000BD078((uint64_t)v13, v14);
  uint64_t v5 = dispatch thunk of BinaryDecodingContaining.decode(length:)();
  if (!v1)
  {
    uint64_t v7 = v5;
    unint64_t v8 = v6;
    sub_1000361E0(v5, v6);
    static Endianness.current.getter();
    sub_10006145C();
    FixedWidthInteger.init(data:ofEndianness:)();
    if (v12 != 1)
    {
      uint64_t v4 = v11;
      sub_10001CFB8(v7, v8);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
      return v4;
    }
    uint64_t v4 = type metadata accessor for BinaryEncodingError();
    sub_10017986C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v4 - 8) + 104))(v9, enum case for BinaryEncodingError.encodingError(_:), v4);
    swift_willThrow();
    sub_10001CFB8(v7, v8);
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v13);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  return v4;
}

unint64_t sub_100C061E4(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000014;
    }
    else
    {
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000021;
    }
  }
  else
  {
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    unint64_t v4 = 0xD00000000000001ELL;
  }
  v1._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 41;
  v2._object = (void *)0xE100000000000000;
  String.append(_:)(v2);
  return v4;
}

BOOL sub_100C06324(char *a1, char *a2)
{
  return qword_10137A640[*a1] == qword_10137A640[*a2];
}

Swift::Int sub_100C06348()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10137A640[v1]);
  return Hasher._finalize()();
}

void sub_100C06398()
{
  Hasher._combine(_:)(qword_10137A640[*v0]);
}

Swift::Int sub_100C063D0()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10137A640[v1]);
  return Hasher._finalize()();
}

uint64_t *sub_100C0641C@<X0>(uint64_t *result@<X0>, char *a2@<X8>)
{
  uint64_t v2 = *result;
  if (*result == 200) {
    char v3 = 0;
  }
  else {
    char v3 = 3;
  }
  if (v2 == 204) {
    char v4 = 1;
  }
  else {
    char v4 = v3;
  }
  if (v2 == 409) {
    char v5 = 2;
  }
  else {
    char v5 = v4;
  }
  *a2 = v5;
  return result;
}

void sub_100C0644C(void *a1@<X8>)
{
  *a1 = qword_10137A640[*v1];
}

unint64_t sub_100C06464()
{
  return sub_100C061E4(*v0);
}

unint64_t sub_100C0646C(char a1)
{
  switch(a1)
  {
    case 1:
      _StringGuts.grow(_:)(45);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000002ALL;
      break;
    case 2:
      unint64_t v5 = 0;
      _StringGuts.grow(_:)(51);
      v1._countAndFlagsBits = 0xD000000000000030;
      v1._object = (void *)0x8000000101416820;
      String.append(_:)(v1);
      break;
    case 3:
      _StringGuts.grow(_:)(33);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD00000000000001ELL;
      break;
    case 4:
      _StringGuts.grow(_:)(23);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000014;
      break;
    case 5:
      _StringGuts.grow(_:)(36);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000021;
      break;
    default:
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000012;
      break;
  }
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return v5;
}

BOOL sub_100C066A4(char *a1, char *a2)
{
  return qword_10137A658[*a1] == qword_10137A658[*a2];
}

Swift::Int sub_100C066C8()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10137A658[v1]);
  return Hasher._finalize()();
}

void sub_100C06718()
{
  Hasher._combine(_:)(qword_10137A658[*v0]);
}

Swift::Int sub_100C06750()
{
  uint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(qword_10137A658[v1]);
  return Hasher._finalize()();
}

uint64_t sub_100C0679C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100C07DFC(*a1);
  *a2 = result;
  return result;
}

void sub_100C067C8(void *a1@<X8>)
{
  *a1 = qword_10137A658[*v1];
}

unint64_t sub_100C067E0()
{
  return sub_100C0646C(*v0);
}

uint64_t sub_100C067E8(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  sub_10000588C((uint64_t *)&unk_101649E20);
  v2[12] = swift_task_alloc();
  type metadata accessor for AccountCheckEndpoint();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_100C068B8, 0, 0);
}

uint64_t sub_100C068B8()
{
  uint64_t v28 = v0;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 120) = sub_100010324(v2, (uint64_t)qword_10170F068);
  sub_100061E54(v1);
  sub_100061E54(v1);
  Swift::String v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = *(long long **)(v0 + 80);
  if (v5)
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446466;
    *(void *)(v0 + 64) = sub_1008FA0F0(0xD000000000000013, 0x80000001014168B0, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    long long v8 = *v6;
    long long v9 = v6[1];
    *(_OWORD *)(v0 + 41) = *(long long *)((char *)v6 + 25);
    *(_OWORD *)(v0 + 16) = v8;
    *(_OWORD *)(v0 + 32) = v9;
    sub_100061E54((uint64_t)v6);
    uint64_t v10 = String.init<A>(describing:)();
    *(void *)(v0 + 72) = sub_1008FA0F0(v10, v11, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000CE9DC((uint64_t)v6);
    sub_1000CE9DC((uint64_t)v6);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000CE9DC(*(void *)(v0 + 80));
    sub_1000CE9DC((uint64_t)v6);
  }

  uint64_t v12 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 80);
  uint64_t v17 = enum case for FMNAccountType.w2Accessory(_:);
  uint64_t v18 = type metadata accessor for FMNAccountType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v13, v17, v18);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v19 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 1, 1, v19);
  uint64_t v20 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v21 = swift_allocObject();
  sub_100C07D98(v13, v12);
  *(void *)(v0 + 128) = sub_1004A8578(v12, v20, v21);
  uint64_t v22 = *(void *)(v15 + 16);
  sub_100061E54(v16);
  unint64_t v26 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10166A158 + dword_10166A158);
  swift_retain();
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v23;
  *unint64_t v23 = v0;
  v23[1] = sub_100C06C80;
  uint64_t v24 = *(void *)(v0 + 80);
  return v26(v24, v22);
}

uint64_t sub_100C06C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v4 = (void *)*v3;
  v4[18] = a1;
  v4[19] = a2;
  v4[20] = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C06D84, 0, 0);
}

uint64_t sub_100C06D84()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    uint64_t v3 = v0[19];
    uint64_t v2 = v0[20];
    uint64_t v4 = v0[16];
    BOOL v5 = (void *)swift_task_alloc();
    v0[21] = v5;
    v5[2] = v4;
    v5[3] = v1;
    v5[4] = v3;
    v5[5] = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[22] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100C06FB0;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)((char *)v0 + 57, 0, 0, 0xD000000000000013, 0x80000001014168B0, sub_100C07F10, v5, &type metadata for AccountCheckResult.ServerStatus);
  }
  else
  {
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      long long v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Could not create pairing lock request", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v10 = v0[14];

    sub_100C07E60();
    swift_allocError();
    *unint64_t v11 = 2;
    swift_willThrow();
    swift_release();
    sub_100C07EB4(v10);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_100C06FB0()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100C071A0;
  }
  else {
    uint64_t v2 = sub_100C070E4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100C070E4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  unint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 112);
  swift_release();
  sub_1001D7860(v3, v1, v2);
  sub_100C07EB4(v4);
  uint64_t v5 = *(unsigned __int8 *)(v0 + 57);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v6(v5);
}

uint64_t sub_100C071A0()
{
  uint64_t v1 = v0[19];
  unint64_t v2 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[14];
  swift_release();
  sub_1001D7860(v3, v1, v2);
  sub_100C07EB4(v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100C0724C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v22 = a1;
  uint64_t v10 = sub_10000588C(&qword_10165B548);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1000361E0(a4, a5);
  sub_1004AD960(a3, a4, a5, 0, a2);
  swift_bridgeObjectRelease();
  sub_10001CFB8(a4, a5);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v21(v13, a1, v10);
  uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = (v14 + 16) & ~v14;
  v20[1] = v14 | 7;
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
  v17(v16 + v15, v13, v10);
  Future.addFailure(block:)();
  swift_release();
  swift_release();
  v21(v13, v22, v10);
  uint64_t v18 = swift_allocObject();
  v17(v18 + v15, v13, v10);
  Future.addSuccess(block:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100C07484()
{
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100010324(v0, (uint64_t)qword_10170F068);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138543362;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error in verify pairing request. %{public}@", v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_100C07E60();
  swift_allocError();
  *uint64_t v5 = 1;
  sub_10000588C(&qword_10165B548);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100C07680(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v3 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v46 - v10;
  if (qword_101637310 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  uint64_t v13 = sub_100010324(v12, (uint64_t)qword_10170F068);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v50 = v7 + 16;
  v49(v11, a1, v6);
  uint64_t v53 = v13;
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v47 = a1;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v18 = swift_slowAlloc();
    char v46 = v5;
    uint64_t v55 = v18;
    *(_DWORD *)uint64_t v17 = 136446210;
    sub_100C080A0();
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v54 = sub_1008FA0F0(v19, v20, &v55);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v48 = *(void (**)(char *, uint64_t))(v7 + 8);
    v48(v11, v6);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Account check response: %{public}s", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v47;
    swift_slowDealloc();
  }
  else
  {
    id v48 = *(void (**)(char *, uint64_t))(v7 + 8);
    v48(v11, v6);
  }

  uint64_t v21 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v23 = v22;
  static String.Encoding.utf8.getter();
  uint64_t v24 = String.init(data:encoding:)();
  unint64_t v26 = v25;
  sub_10001CFB8(v21, v23);
  if (v26)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v47 = v7;
      uint64_t v55 = v30;
      *(_DWORD *)uint64_t v29 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v54 = sub_1008FA0F0(v24, v26, &v55);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Account check response data: %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  uint64_t v31 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
  switch(v31)
  {
    case 200:
      char v32 = 0;
      goto LABEL_16;
    case 409:
      char v32 = 2;
      goto LABEL_16;
    case 204:
      char v32 = 1;
LABEL_16:
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v33, v34))
      {
        Swift::String v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v55 = swift_slowAlloc();
        *(_DWORD *)Swift::String v35 = 136446210;
        unint64_t v36 = sub_100C061E4(v32);
        uint64_t v54 = sub_1008FA0F0(v36, v37, &v55);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v33, v34, "AccountCheckResult: %{public}s", v35, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      LOBYTE(v55) = v32;
      sub_10000588C(&qword_10165B548);
      return CheckedContinuation.resume(returning:)();
  }
  id v39 = v51;
  v49(v51, a1, v6);
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, v41))
  {
    Swift::String v42 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)Swift::String v42 = 134217984;
    uint64_t v43 = FMNServerInteractionController.FMNResponseFields.statusCode.getter();
    v48(v39, v6);
    uint64_t v55 = v43;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "Invalid AccountCheckResult %ld!", v42, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    v48(v39, v6);
  }

  sub_100C07E60();
  uint64_t v44 = swift_allocError();
  *id v45 = 2;
  uint64_t v55 = v44;
  sub_10000588C(&qword_10165B548);
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_100C07D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccountCheckEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C07DFC(uint64_t result)
{
  if (result > 199)
  {
    switch(result)
    {
      case 200:
        return 3;
      case 204:
        return 4;
      case 409:
        return 5;
    }
    return 6;
  }
  if (result == -1) {
    return 0;
  }
  if (result != 1 && result != 2) {
    return 6;
  }
  return result;
}

unint64_t sub_100C07E60()
{
  unint64_t result = qword_10165B540;
  if (!qword_10165B540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B540);
  }
  return result;
}

uint64_t sub_100C07EB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AccountCheckEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C07F10(uint64_t a1)
{
  return sub_100C0724C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_100C07F20()
{
  sub_10000588C(&qword_10165B548);

  return sub_100C07484();
}

uint64_t sub_100C07F98()
{
  uint64_t v1 = sub_10000588C(&qword_10165B548);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C0802C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10000588C(&qword_10165B548) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100C07680(a1, v4);
}

unint64_t sub_100C080A0()
{
  unint64_t result = qword_101649E30;
  if (!qword_101649E30)
  {
    type metadata accessor for FMNServerInteractionController.FMNResponseFields();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_101649E30);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocalAccountCheckResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C081C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalAccountCheckResult()
{
  return &type metadata for LocalAccountCheckResult;
}

unsigned char *storeEnumTagSinglePayload for AccountCheckResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C082C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountCheckResult()
{
  return &type metadata for AccountCheckResult;
}

uint64_t initializeWithCopy for AccountCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for AccountCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  sub_1000361E0(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  sub_10001CFB8(v6, v7);
  uint64_t v8 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v8;
  uint64_t v9 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v9;
  return a1;
}

uint64_t assignWithTake for AccountCheckData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_10001CFB8(v4, v5);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for AccountCheckData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AccountCheckData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 13;
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountCheckData()
{
  return &type metadata for AccountCheckData;
}

unsigned char *storeEnumTagSinglePayload for AccountCheckResult.ServerStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C085B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccountCheckResult.ServerStatus()
{
  return &type metadata for AccountCheckResult.ServerStatus;
}

unint64_t sub_100C085F4()
{
  unint64_t result = qword_10165B550;
  if (!qword_10165B550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B550);
  }
  return result;
}

unint64_t sub_100C0864C()
{
  unint64_t result = qword_10165B558;
  if (!qword_10165B558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B558);
  }
  return result;
}

unint64_t sub_100C086A4()
{
  unint64_t result = qword_10165B560;
  if (!qword_10165B560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B560);
  }
  return result;
}

uint64_t sub_100C086F8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EAE0);
  sub_100010324(v0, (uint64_t)qword_10170EAE0);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100C0877C()
{
  *(void *)(v1 + 48) = v0;
  *(void *)(v1 + 56) = *v0;
  return _swift_task_switch(sub_100C087C4, v0, 0);
}

uint64_t sub_100C087C4()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 64) = qword_10170E390;
  return _swift_task_switch(sub_100C08860, 0, 0);
}

uint64_t sub_100C08860()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C08928;
  uint64_t v2 = *(void *)(v0 + 64);
  return unsafeBlocking<A>(_:)(v0 + 16, sub_10001D704, v2, &type metadata for Configuration);
}

uint64_t sub_100C08928()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C08A40, 0, 0);
}

uint64_t sub_100C08A40()
{
  uint64_t v1 = v0[6];
  v0[10] = v0[2];
  return _swift_task_switch(sub_100C08A64, v1, 0);
}

uint64_t sub_100C08A64()
{
  if (qword_101637000 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EAE0);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = v0[10];
  if (v4)
  {
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218240;
    sub_1010AC424(v5);
    v0[4] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2048;
    sub_1010AC430(v5);
    v0[5] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Startup with interval = %f, minimum delay = %f", (uint8_t *)v6, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v9 = v0[6];
  uint64_t v10 = *(void *)(v9 + 144);
  v0[11] = v10;
  if (v10)
  {
    swift_retain_n();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[12] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100C08D40;
    uint64_t v12 = (char *)&type metadata for () + 8;
    uint64_t v13 = sub_100715110;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = v0[7];
    uint64_t v16 = swift_allocObject();
    v0[13] = v16;
    *(void *)(v16 + 16) = v9;
    *(void *)(v16 + 24) = v15;
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[14] = v17;
    uint64_t v12 = (char *)type metadata accessor for XPCActivity();
    *uint64_t v17 = v0;
    v17[1] = sub_100C08ECC;
    uint64_t v13 = sub_100C0D218;
    uint64_t v11 = v0 + 3;
    uint64_t v14 = v16;
  }
  return unsafeBlocking<A>(_:)(v11, v13, v14, v12);
}

uint64_t sub_100C08D40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C08E6C, v1, 0);
}

uint64_t sub_100C08E6C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C08ECC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C08FF8, v1, 0);
}

uint64_t sub_100C08FF8()
{
  uint64_t v1 = v0[3];
  v0[15] = v1;
  swift_retain();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100C090C0;
  return unsafeBlocking<A>(_:)(v2, sub_100715110, v1, (char *)&type metadata for () + 8);
}

uint64_t sub_100C090C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C091EC, v1, 0);
}

uint64_t sub_100C091EC()
{
  *(void *)(v0[6] + 144) = v0[15];
  swift_release();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100C09258@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static DispatchQoS.default.getter();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for XPCActivity();
  swift_allocObject();
  uint64_t v6 = sub_1009D9B34(0xD000000000000041, (void *)0x8000000101416940, (uint64_t)v4, (uint64_t)sub_100C0FED0, 0, (uint64_t)sub_100C10110, v5);
  uint64_t result = swift_release();
  *a1 = v6;
  return result;
}

uint64_t sub_100C09370(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    Transaction.capture()();
    if (a3 == 3)
    {
      sub_1009D7368();
    }
    else if (a3 == 2)
    {
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(void *)(v7 + 24) = a2;
      swift_retain();
      swift_retain();
      unsafeFromAsyncTask<A>(_:)();
      swift_release();
      sub_1009D7390();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100C09460()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001D2E4;
  return sub_100C094F0();
}

uint64_t sub_100C094F0()
{
  v1[34] = v0;
  sub_10000588C((uint64_t *)&unk_101649E20);
  v1[35] = swift_task_alloc();
  v1[36] = type metadata accessor for SubmitUTInfoEndpoint(0);
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for FMNServerInteractionController.FMNResponseFields();
  v1[39] = v2;
  v1[40] = *(void *)(v2 - 8);
  v1[41] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for HashAlgorithm();
  v1[42] = v3;
  v1[43] = *(void *)(v3 - 8);
  v1[44] = swift_task_alloc();
  sub_10000588C(&qword_10165B690);
  v1[45] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UTInfoPublishRequestBody.State(0);
  v1[46] = v4;
  v1[47] = *(void *)(v4 - 8);
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = sub_10000588C(&qword_10165F480);
  v1[51] = swift_task_alloc();
  v1[52] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v1[53] = swift_task_alloc();
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for WildModeAssociationRecord(0);
  v1[56] = v5;
  v1[57] = *(void *)(v5 - 8);
  v1[58] = swift_task_alloc();
  v1[59] = swift_task_alloc();
  v1[60] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v1[61] = v6;
  v1[62] = *(void *)(v6 - 8);
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  return _swift_task_switch(sub_100C098A4, v0, 0);
}

uint64_t sub_100C098A4()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C099E0;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C099E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 272);
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C09AF8, v2, 0);
}

uint64_t sub_100C09AF8()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[68])
  {
    uint64_t v2 = v0[66];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    static Date.trustedNow.getter(v2);
    uint64_t v3 = v0[68];
    return _swift_task_switch(sub_100C09D10, v3, 0);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v4 = 0xD000000000000010;
    v4[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100C09D10()
{
  *(void *)(v0 + 552) = *(void *)(*(void *)(v0 + 544) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C09D84, 0, 0);
}

uint64_t sub_100C09D84()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[68];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[70] = v3;
  v3[2] = v1;
  v3[3] = sub_100075250;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[71] = v4;
  uint64_t v5 = sub_10000588C(&qword_10163B8C0);
  *uint64_t v4 = v0;
  v4[1] = sub_100C09EA0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 27, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100075258, v3, v5);
}

uint64_t sub_100C09EA0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 272);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 576) = *(void *)(v1 + 216);
  return _swift_task_switch(sub_100C0A010, v2, 0);
}

uint64_t sub_100C0A010()
{
  v0[73] = *(void *)(v0[72] + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[68];
  return _swift_task_switch(sub_100C0A080, v1, 0);
}

uint64_t sub_100C0A080()
{
  *(void *)(v0 + 592) = *(void *)(*(void *)(v0 + 544) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C0A0F4, 0, 0);
}

uint64_t sub_100C0A0F4()
{
  uint64_t v1 = v0[74];
  uint64_t v2 = v0[68];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[75] = v3;
  v3[2] = v1;
  v3[3] = sub_1000730D8;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[76] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DF0);
  *uint64_t v4 = v0;
  v4[1] = sub_100C0A210;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 25, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000730E0, v3, v5);
}

uint64_t sub_100C0A210()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 272);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 616) = *(void *)(v1 + 200);
  return _swift_task_switch(sub_100C0A380, v2, 0);
}

uint64_t sub_100C0A380()
{
  v0[78] = *(void *)(v0[77] + 16);
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[68];
  return _swift_task_switch(sub_100C0A3F0, v1, 0);
}

uint64_t sub_100C0A3F0()
{
  *(void *)(v0 + 632) = *(void *)(*(void *)(v0 + 544) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C0A464, 0, 0);
}

uint64_t sub_100C0A464()
{
  uint64_t v1 = v0[79];
  uint64_t v2 = v0[68];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[80] = v3;
  v3[2] = v1;
  v3[3] = sub_100C108E8;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[81] = v4;
  uint64_t v5 = sub_10000588C(&qword_10165B698);
  *uint64_t v4 = v0;
  v4[1] = sub_100C0A580;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 26, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100C108F0, v3, v5);
}

uint64_t sub_100C0A580()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 272);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 656) = *(void *)(v1 + 208);
  return _swift_task_switch(sub_100C0A6F0, v2, 0);
}

uint64_t sub_100C0A6F0()
{
  uint64_t v1 = *(void *)(v0[82] + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v124 = v2;
  uint64_t v147 = v1;
  if (!v1)
  {
    unint64_t v120 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
LABEL_19:
    uint64_t v6 = v120;
    v0[83] = v120;
    swift_bridgeObjectRelease();
    int64_t v28 = *((void *)v120 + 2);
    int64_t v119 = v28;
    if (!v28)
    {
      uint64_t v6 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
      goto LABEL_84;
    }
    uint64_t v29 = v0[62];
    uint64_t v30 = v0[57];
    uint64_t v146 = (int *)v0[56];
    uint64_t v139 = v0[50];
    uint64_t v31 = v0[47];
    uint64_t v134 = v0[45];
    uint64_t v135 = v0[46];
    uint64_t v32 = v0[43];
    sub_1000B8558(0, v28, 0);
    uint64_t v33 = 0;
    unint64_t v118 = (char *)v120 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    uint64_t v117 = *(void *)(v30 + 72);
    Swift::String v129 = (void (**)(void, void, void))(v29 + 32);
    uint64_t v141 = v29;
    id v128 = (void (**)(void, uint64_t))(v29 + 8);
    uint64_t v125 = v31;
    int v136 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48);
    uint64_t v137 = (void (**)(uint64_t *, void, uint64_t, uint64_t))(v31 + 56);
    unsigned int v123 = enum case for HashAlgorithm.sha256(_:);
    unint64_t v121 = (void (**)(uint64_t, uint64_t))(v32 + 8);
    uint64_t v122 = (void (**)(uint64_t, void, uint64_t))(v32 + 104);
LABEL_21:
    uint64_t v34 = v0[58];
    uint64_t v126 = v33;
    sub_100C10964((uint64_t)&v118[v33 * v117], v34, type metadata accessor for WildModeAssociationRecord);
    uint64_t v35 = *(void *)(v34 + v146[17]);
    uint64_t v130 = v35 + 64;
    uint64_t v36 = -1 << *(unsigned char *)(v35 + 32);
    if (-v36 < 64) {
      uint64_t v37 = ~(-1 << -(char)v36);
    }
    else {
      uint64_t v37 = -1;
    }
    unint64_t v38 = v37 & *(void *)(v35 + 64);
    int64_t v132 = (unint64_t)(63 - v36) >> 6;
    uint64_t v143 = v35;
    swift_bridgeObjectRetain_n();
    int64_t v39 = 0;
    uint64_t v127 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v38)
      {
        uint64_t v149 = (v38 - 1) & v38;
        int64_t v152 = v39;
        unint64_t v46 = __clz(__rbit64(v38)) | (v39 << 6);
      }
      else
      {
        int64_t v47 = v39 + 1;
        if (__OFADD__(v39, 1))
        {
          __break(1u);
LABEL_99:
          __break(1u);
          goto LABEL_100;
        }
        if (v47 >= v132) {
          goto LABEL_72;
        }
        unint64_t v48 = *(void *)(v130 + 8 * v47);
        int64_t v49 = v39 + 1;
        if (!v48)
        {
          int64_t v49 = v39 + 2;
          if (v39 + 2 >= v132) {
            goto LABEL_72;
          }
          unint64_t v48 = *(void *)(v130 + 8 * v49);
          if (!v48)
          {
            int64_t v49 = v39 + 3;
            if (v39 + 3 >= v132) {
              goto LABEL_72;
            }
            unint64_t v48 = *(void *)(v130 + 8 * v49);
            if (!v48)
            {
              int64_t v49 = v39 + 4;
              if (v39 + 4 >= v132) {
                goto LABEL_72;
              }
              unint64_t v48 = *(void *)(v130 + 8 * v49);
              if (!v48)
              {
                uint64_t v50 = v39 + 5;
                if (v39 + 5 >= v132)
                {
LABEL_72:
                  uint64_t v71 = v0[58];
                  uint64_t v72 = v0[44];
                  uint64_t v73 = v0[42];
                  swift_release();
                  swift_bridgeObjectRelease();
                  uint64_t v153 = *(unsigned __int8 *)(v71 + v146[13]);
                  uint64_t v74 = (unsigned __int8 *)(v71 + v146[22]);
                  uint64_t v75 = *v74;
                  int v150 = v74[1];
                  uint64_t v76 = MACAddress.data.getter();
                  unint64_t v78 = v77;
                  Swift::String v79 = *v122;
                  (*v122)(v72, v123, v73);
                  uint64_t v144 = Data.hash(algorithm:)();
                  uint64_t v133 = v80;
                  sub_10001CFB8(v76, v78);
                  id v81 = *v121;
                  (*v121)(v72, v73);
                  char v82 = *(unsigned char *)(v71 + v146[21]);
                  id v83 = (uint64_t *)(v71 + v146[20]);
                  unint64_t v84 = v83[1];
                  if (((v84 >> 60) | 4) == 0xF)
                  {
                    uint64_t v85 = 0;
                    uint64_t v131 = 0;
                  }
                  else
                  {
                    uint64_t v86 = v0[44];
                    uint64_t v87 = v0[42];
                    uint64_t v88 = *v83;
                    v79(v86, v123, v87);
                    sub_1000361E0(v88, v84);
                    uint64_t v89 = Data.hash(algorithm:)();
                    unint64_t v91 = v90;
                    v81(v86, v87);
                    sub_100293254(v88, v84);
                    v0[23] = v89;
                    v0[24] = v91;
                    unint64_t v92 = v91;
                    sub_1001D780C();
                    uint64_t v85 = RawRepresentable<>.base64EncodedString(options:)();
                    uint64_t v131 = v93;
                    sub_10001CFB8(v89, v92);
                  }
                  uint64_t v94 = v0[58];
                  uint64_t v95 = UUID.uuidString.getter();
                  uint64_t v97 = v96;
                  sub_100C109CC(v94, type metadata accessor for WildModeAssociationRecord);
                  uint64_t v6 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1000B8558(0, _swiftEmptyArrayStorage[2] + 1, 1);
                    uint64_t v6 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
                  }
                  uint64_t v98 = v126;
                  unint64_t v100 = _swiftEmptyArrayStorage[2];
                  unint64_t v99 = _swiftEmptyArrayStorage[3];
                  if (v100 >= v99 >> 1)
                  {
                    sub_1000B8558(v99 > 1, v100 + 1, 1);
                    uint64_t v98 = v126;
                    uint64_t v6 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
                  }
                  uint64_t v33 = v98 + 1;
                  _swiftEmptyArrayStorage[2] = v100 + 1;
                  id v101 = &_swiftEmptyArrayStorage[9 * v100];
                  v101[4] = v85;
                  v101[5] = v131;
                  uint64_t v102 = 0x10000000000;
                  if (!v150) {
                    uint64_t v102 = 0;
                  }
                  v101[6] = v127;
                  v101[7] = v95;
                  v101[8] = v97;
                  v101[9] = (v75 << 32) | (v153 << 24) | v102 | 0x40202;
                  v101[10] = v144;
                  v101[11] = v133;
                  *((unsigned char *)v101 + 96) = v82;
                  if (v33 == v119)
                  {
LABEL_84:
                    if (qword_101637000 == -1) {
                      goto LABEL_85;
                    }
                    goto LABEL_101;
                  }
                  goto LABEL_21;
                }
                unint64_t v48 = *(void *)(v130 + 8 * v50);
                if (!v48)
                {
                  while (1)
                  {
                    int64_t v49 = v50 + 1;
                    if (__OFADD__(v50, 1)) {
                      goto LABEL_99;
                    }
                    if (v49 >= v132) {
                      goto LABEL_72;
                    }
                    unint64_t v48 = *(void *)(v130 + 8 * v49);
                    ++v50;
                    if (v48) {
                      goto LABEL_47;
                    }
                  }
                }
                int64_t v49 = v39 + 5;
              }
            }
          }
        }
LABEL_47:
        uint64_t v149 = (v48 - 1) & v48;
        int64_t v152 = v49;
        unint64_t v46 = __clz(__rbit64(v48)) + (v49 << 6);
      }
      uint64_t v51 = v0[61];
      uint64_t v52 = v0[58];
      uint64_t v53 = (unsigned char *)v0[52];
      uint64_t v54 = v0[53];
      char v55 = *(unsigned char *)(*(void *)(v143 + 48) + v46);
      unint64_t v56 = (unsigned __int8 *)v0[51];
      id v57 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v141 + 16);
      v57(&v53[*(int *)(v139 + 48)], *(void *)(v143 + 56) + *(void *)(v141 + 72) * v46, v51);
      *uint64_t v53 = v55;
      sub_10001D608((uint64_t)v53, (uint64_t)v56, &qword_10165F480);
      uint64_t v58 = *v56;
      uint64_t v6 = (uint64_t (*)(uint64_t))&v56[*(int *)(v139 + 48)];
      sub_10001D074(v52 + v146[19], v54, (uint64_t *)&unk_10163AC90);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v141 + 48))(v54, 1, v51) == 1)
      {
        sub_10001DAB4(v0[53], (uint64_t *)&unk_10163AC90);
        unint64_t v41 = 0xE700000000000000;
        uint64_t v40 = 0x6E776F6E6B6E75;
        switch(v58)
        {
          case 1:
            unint64_t v41 = 0xE600000000000000;
            uint64_t v40 = 0x646567617473;
            break;
          case 2:
            unint64_t v41 = 0xE600000000000000;
            uint64_t v40 = 0x796669746F6ELL;
            break;
          case 3:
            unint64_t v41 = 0xE600000000000000;
            uint64_t v40 = 0x657461647075;
            break;
          case 4:
            unint64_t v41 = 0xE800000000000000;
            uint64_t v40 = 0x6465676174736E75;
            break;
          case 5:
            unint64_t v41 = 0xE800000000000000;
            uint64_t v40 = 0x7761726468746977;
            break;
          case 6:
            uint64_t v40 = 0x6465726F6E6769;
            break;
          case 7:
            uint64_t v40 = 0x7265766F63736964;
            unint64_t v41 = 0xEA00000000006465;
            break;
          default:
            break;
        }
        uint64_t v43 = (uint64_t *)v0[45];
        uint64_t v42 = v0[46];
        v57((unsigned char *)v43 + *(int *)(v135 + 20), (unint64_t)v6, v0[61]);
        uint64_t *v43 = v40;
        *(void *)(v134 + 8) = v41;
        (*v137)(v43, 0, 1, v42);
      }
      else
      {
        (*v129)(v0[63], v0[53], v0[61]);
        if (static Date.< infix(_:_:)())
        {
          unint64_t v59 = 0xE700000000000000;
          uint64_t v60 = 0x6E776F6E6B6E75;
          switch(v58)
          {
            case 1:
              unint64_t v59 = 0xE600000000000000;
              uint64_t v60 = 0x646567617473;
              break;
            case 2:
              unint64_t v59 = 0xE600000000000000;
              uint64_t v60 = 0x796669746F6ELL;
              break;
            case 3:
              unint64_t v59 = 0xE600000000000000;
              uint64_t v60 = 0x657461647075;
              break;
            case 4:
              unint64_t v59 = 0xE800000000000000;
              uint64_t v60 = 0x6465676174736E75;
              break;
            case 5:
              unint64_t v59 = 0xE800000000000000;
              uint64_t v60 = 0x7761726468746977;
              break;
            case 6:
              uint64_t v60 = 0x6465726F6E6769;
              break;
            case 7:
              uint64_t v60 = 0x7265766F63736964;
              unint64_t v59 = 0xEA00000000006465;
              break;
            default:
              break;
          }
          uint64_t v68 = v0[61];
          id v70 = (uint64_t *)v0[45];
          uint64_t v69 = v0[46];
          (*v128)(v0[63], v68);
          v57((unsigned char *)v70 + *(int *)(v135 + 20), (unint64_t)v6, v68);
          *id v70 = v60;
          *(void *)(v134 + 8) = v59;
          (*v137)(v70, 0, 1, v69);
        }
        else
        {
          Swift::String v62 = v0[45];
          uint64_t v61 = v0[46];
          (*v128)(v0[63], v0[61]);
          (*v137)((uint64_t *)v62, 1, 1, v61);
        }
      }
      uint64_t v45 = v0[45];
      uint64_t v44 = v0[46];
      sub_10001DAB4(v0[51], &qword_10165F480);
      if ((*v136)(v45, 1, v44) == 1)
      {
        sub_10001DAB4(v0[45], &qword_10165B690);
      }
      else
      {
        uint64_t v64 = v0[48];
        uint64_t v63 = v0[49];
        uint64_t v6 = type metadata accessor for UTInfoPublishRequestBody.State;
        sub_100C108FC(v0[45], v63, type metadata accessor for UTInfoPublishRequestBody.State);
        sub_100C108FC(v63, v64, type metadata accessor for UTInfoPublishRequestBody.State);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v127 = (void *)sub_100A72344(0, v127[2] + 1, 1, (unint64_t)v127);
        }
        unint64_t v66 = v127[2];
        unint64_t v65 = v127[3];
        if (v66 >= v65 >> 1) {
          uint64_t v127 = (void *)sub_100A72344(v65 > 1, v66 + 1, 1, (unint64_t)v127);
        }
        uint64_t v67 = v0[48];
        v127[2] = v66 + 1;
        sub_100C108FC(v67, (uint64_t)v127+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(void *)(v125 + 72) * v66, type metadata accessor for UTInfoPublishRequestBody.State);
      }
      unint64_t v38 = v149;
      int64_t v39 = v152;
    }
  }
  unint64_t v3 = 0;
  uint64_t v4 = v0[62];
  uint64_t v5 = v0[56];
  uint64_t v145 = v0[57];
  uint64_t v6 = (uint64_t (*)(uint64_t))(v4 + 48);
  uint64_t v7 = (void (**)(void, void, uint64_t))(v4 + 32);
  uint64_t v138 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  unint64_t v120 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
  uint64_t v142 = v5;
  while (v3 < *(void *)(v2 + 16))
  {
    uint64_t v8 = v7;
    uint64_t v9 = v0[60];
    uint64_t v10 = v0[61];
    uint64_t v11 = v0[55];
    unint64_t v148 = (*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80);
    uint64_t v151 = *(void *)(v145 + 72);
    sub_100C10964(v0[82] + v148 + v151 * v3, v9, type metadata accessor for WildModeAssociationRecord);
    sub_10001D074(v9 + *(int *)(v5 + 72), v11, (uint64_t *)&unk_10163AC90);
    uint64_t v12 = v5;
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))v6;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v6)(v11, 1, v10) == 1)
    {
      sub_10001DAB4(v0[55], (uint64_t *)&unk_10163AC90);
      uint64_t v7 = v8;
    }
    else
    {
      uint64_t v15 = v0[60];
      uint64_t v14 = v0[61];
      uint64_t v16 = v0[54];
      int v140 = *v8;
      (*v8)(v0[65], v0[55], v14);
      sub_10001D074(v15 + *(int *)(v12 + 76), v16, (uint64_t *)&unk_10163AC90);
      int v17 = v13(v16, 1, v14);
      uint64_t v18 = v0[65];
      if (v17 == 1)
      {
        uint64_t v19 = v0[61];
        sub_10001DAB4(v0[54], (uint64_t *)&unk_10163AC90);
        (*v138)(v18, v19);
        uint64_t v7 = v8;
LABEL_11:
        sub_100C108FC(v0[60], v0[59], type metadata accessor for WildModeAssociationRecord);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v24 = v120;
        }
        else
        {
          sub_1000B7CB0(0, *((void *)v120 + 2) + 1, 1);
          uint64_t v24 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
        }
        unint64_t v26 = *((void *)v24 + 2);
        unint64_t v25 = *((void *)v24 + 3);
        uint64_t v5 = v142;
        if (v26 >= v25 >> 1)
        {
          sub_1000B7CB0(v25 > 1, v26 + 1, 1);
          uint64_t v24 = (uint64_t (*)(uint64_t))_swiftEmptyArrayStorage;
        }
        uint64_t v27 = v0[59];
        *((void *)v24 + 2) = v26 + 1;
        unint64_t v120 = v24;
        sub_100C108FC(v27, (uint64_t)v24 + v148 + v26 * v151, type metadata accessor for WildModeAssociationRecord);
        goto LABEL_5;
      }
      uint64_t v20 = v0[64];
      uint64_t v21 = v0[61];
      v140(v20, v0[54], v21);
      char v22 = static Date.< infix(_:_:)();
      unint64_t v23 = *v138;
      (*v138)(v20, v21);
      v23(v18, v21);
      uint64_t v7 = v8;
      if (v22) {
        goto LABEL_11;
      }
    }
    sub_100C109CC(v0[60], type metadata accessor for WildModeAssociationRecord);
    uint64_t v5 = v142;
LABEL_5:
    ++v3;
    uint64_t v2 = v124;
    if (v147 == v3) {
      goto LABEL_19;
    }
  }
LABEL_100:
  __break(1u);
LABEL_101:
  swift_once();
LABEL_85:
  uint64_t v103 = type metadata accessor for Logger();
  v0[84] = sub_100010324(v103, (uint64_t)qword_10170EAE0);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v104 = Logger.logObject.getter();
  os_log_type_t v105 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v104, v105))
  {
    uint64_t v106 = swift_slowAlloc();
    *(_DWORD *)uint64_t v106 = 134218240;
    uint64_t v107 = *(void *)(v124 + 16);
    swift_bridgeObjectRelease();
    v0[31] = v107;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v106 + 12) = 2048;
    swift_release();
    v0[32] = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v104, v105, "Count of wild records is %ld, count of records to publish is %ld", (uint8_t *)v106, 0x16u);
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();
  }

  if (*((void *)v6 + 2))
  {
    uint64_t v108 = v0[78];
    uint64_t v109 = v0[73];
    uint64_t v110 = *(void *)(v0[34] + 128);
    uint64_t v154 = (uint64_t (*)(BOOL, uint64_t (*)(uint64_t), uint64_t))((char *)&dword_10164DCD0
                                                                                  + dword_10164DCD0);
    swift_retain();
    uint64_t v111 = (void *)swift_task_alloc();
    v0[85] = v111;
    *uint64_t v111 = v0;
    v111[1] = sub_100C0B844;
    return v154((v109 | v108) != 0, v6, v110);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v113, v114))
    {
      unint64_t v115 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v115 = 0;
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "No records to publish, skip publishing.", v115, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(void, void))(v0[62] + 8))(v0[66], v0[61]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v116 = (uint64_t (*)(void))v0[1];
    return v116();
  }
}

uint64_t sub_100C0B844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[86] = a1;
  v5[87] = a2;
  v5[88] = a3;
  v5[89] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v6 = v5[34];
    swift_release();
    uint64_t v7 = sub_100C0BCF0;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v8 = v5[34];
    uint64_t v7 = sub_100C0B978;
  }
  return _swift_task_switch(v7, v8, 0);
}

uint64_t sub_100C0B978()
{
  unint64_t v1 = v0[88];
  uint64_t v2 = v0[87];
  uint64_t v3 = v0[86];
  uint64_t v5 = v0[37];
  uint64_t v4 = (uint64_t *)v0[38];
  uint64_t v6 = v0[35];
  uint64_t v7 = v0[36];
  type metadata accessor for AnonymousCrowdSourceNetworkURLComponents();
  swift_allocObject();
  *uint64_t v4 = sub_1001E3CA8();
  uint64_t v8 = (char *)v4 + *(int *)(v7 + 20);
  uint64_t v9 = enum case for FMNAccountType.none(_:);
  uint64_t v10 = type metadata accessor for FMNAccountType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
  type metadata accessor for SearchPartyURLSessionFactory(0);
  swift_allocObject();
  uint64_t v11 = type metadata accessor for FMNMockingPreferences();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  uint64_t v12 = FMNURLSessionFactory.init(mockSessionCreationBlock:preferences:)();
  type metadata accessor for ServerInteractionController(0);
  uint64_t v13 = swift_allocObject();
  sub_100C10964((uint64_t)v4, v5, type metadata accessor for SubmitUTInfoEndpoint);
  v0[90] = sub_1004A8990(v5, v12, v13);
  sub_100C109CC((uint64_t)v4, type metadata accessor for SubmitUTInfoEndpoint);
  v0[15] = &type metadata for SubmitUTInfo;
  v0[16] = sub_100C10A2C();
  v0[12] = v3;
  v0[13] = v2;
  v0[14] = v1;
  swift_bridgeObjectRetain();
  sub_1000361E0(v2, v1);
  uint64_t v14 = (void *)swift_task_alloc();
  v0[91] = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_100C0BBAC;
  uint64_t v15 = v0[41];
  return sub_100487CFC(v15, (uint64_t)(v0 + 12));
}

uint64_t sub_100C0BBAC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 736) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 272);
    swift_release();
    swift_release();
    uint64_t v4 = sub_100C0C994;
  }
  else
  {
    uint64_t v5 = v2 + 96;
    uint64_t v3 = *(void *)(v2 + 272);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v5);
    uint64_t v4 = sub_100C0BE8C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C0BCF0()
{
  uint64_t v1 = v0[66];
  uint64_t v2 = v0[61];
  uint64_t v3 = v0[62];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100C0BE8C()
{
  if ((unint64_t)(FMNServerInteractionController.FMNResponseFields.statusCode.getter() - 300) >= 0xFFFFFFFFFFFFFF9CLL)
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    v0[93] = JSONDecoder.init()();
    uint64_t v12 = (void *)swift_task_alloc();
    v0[94] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100C0C1C4;
    uint64_t v13 = v0[83];
    uint64_t v14 = v0[66];
    return sub_100C0F140(v13, v14);
  }
  else
  {
    swift_release();
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to publish wild associated records.", v3, 2u);
      swift_slowDealloc();
    }
    uint64_t v4 = v0[87];
    uint64_t v17 = v0[66];
    uint64_t v5 = v0[62];
    unint64_t v15 = v0[88];
    uint64_t v16 = v0[61];
    uint64_t v6 = v0[40];
    uint64_t v7 = v0[41];
    uint64_t v8 = v0[39];

    sub_100C10A80();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    sub_10001CFB8(v4, v15);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100C0C1C4()
{
  os_log_type_t v2 = (void *)*v1;
  v2[95] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[34];
    swift_release();
    return _swift_task_switch(sub_100C0CB5C, v3, 0);
  }
  else
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v2[96] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_100C0C344;
    uint64_t v5 = v2[83];
    return sub_100C0D344(v5);
  }
}

uint64_t sub_100C0C344()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 272);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C0C470, v1, 0);
}

uint64_t sub_100C0C470()
{
  int64_t v28 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[95];
  uint64_t v3 = FMNServerInteractionController.FMNResponseFields.data.getter();
  unint64_t v5 = v4;
  sub_100C10AD4();
  dispatch thunk of JSONDecoder.decode<A>(_:from:)();
  if (v2)
  {
    unint64_t v6 = v0[88];
    uint64_t v7 = v0[87];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_10001CFB8(v7, v6);
    swift_errorRelease();
    sub_10001CFB8(v3, v5);
  }
  else
  {
    sub_10001CFB8(v3, v5);
    uint64_t v8 = v0[29];
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 134217984;
      v0[30] = *(void *)(v8 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Got %ld records in response.", v11, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v12 = *(void *)(v8 + 16);
    if (v12)
    {
      uint64_t v13 = (unsigned __int8 *)(v8 + 64);
      unint64_t v26 = v0;
      do
      {
        uint64_t v14 = *((void *)v13 - 4);
        unint64_t v15 = *((void *)v13 - 3);
        int v16 = *v13;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = swift_slowAlloc();
          v27[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = 141558531;
          *(void *)(v19 + 4) = 1752392040;
          *(_WORD *)(v19 + 12) = 2081;
          swift_bridgeObjectRetain();
          *(void *)(v19 + 14) = sub_1008FA0F0(v14, v15, v27);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v19 + 22) = 2080;
          if (v16) {
            uint64_t v20 = 0x657669746361;
          }
          else {
            uint64_t v20 = 0x7472656E69;
          }
          if (v16) {
            unint64_t v21 = 0xE600000000000000;
          }
          else {
            unint64_t v21 = 0xE500000000000000;
          }
          *(void *)(v19 + 24) = sub_1008FA0F0(v20, v21, v27);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Subscription %{private,mask.hash}s, uint64_t result = %s.", (uint8_t *)v19, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v1 = v26;
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }

        v13 += 40;
        --v12;
      }
      while (v12);
    }
    unint64_t v22 = v1[88];
    uint64_t v23 = v1[87];
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_10001CFB8(v23, v22);
    swift_bridgeObjectRelease();
  }
  (*(void (**)(void, void))(v1[40] + 8))(v1[41], v1[39]);
  (*(void (**)(void, void))(v1[62] + 8))(v1[66], v1[61]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v1[1];
  return v24();
}

uint64_t sub_100C0C994()
{
  unint64_t v1 = v0[88];
  uint64_t v2 = v0[87];
  uint64_t v3 = v0[66];
  uint64_t v4 = v0[61];
  uint64_t v5 = v0[62];
  swift_bridgeObjectRelease();
  swift_release();
  sub_10001CFB8(v2, v1);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 12));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100C0CB5C()
{
  os_log_type_t v18 = v0;
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.localizedDescription.getter();
    v0[28] = sub_1008FA0F0(v4, v5, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to decode wild associated records %s.", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v6 = v0[87];
  uint64_t v16 = v0[66];
  uint64_t v7 = v0[62];
  unint64_t v14 = v0[88];
  uint64_t v15 = v0[61];
  uint64_t v8 = v0[40];
  uint64_t v13 = v0[41];
  uint64_t v9 = v0[39];
  sub_100C10A80();
  swift_allocError();
  *os_log_type_t v10 = 1;
  swift_willThrow();
  swift_release();
  swift_release();
  swift_errorRelease();
  swift_bridgeObjectRelease();
  sub_10001CFB8(v6, v14);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v13, v9);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100C0CED8()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for WildModeAssociationRecordsPublisher()
{
  return self;
}

void *sub_100C0CF4C()
{
  uint64_t v1 = type metadata accessor for UUID();
  __chkstk_darwin(v1 - 8);
  swift_defaultActor_initialize();
  v0[14] = 0xD000000000000023;
  v0[15] = 0x800000010137A690;
  type metadata accessor for DeviceIdentityUtility();
  uint64_t v2 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v3 = v2 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certExpiryDate;
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v2 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_refKey) = 0;
  *(void *)(v2 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_certs) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC12searchpartyd21DeviceIdentityUtility_signingType) = 11;
  v0[16] = v2;
  type metadata accessor for WorkItemQueue();
  UUID.init()();
  v0[17] = WorkItemQueue.__allocating_init(name:identifier:)();
  v0[18] = 0;
  return v0;
}

uint64_t sub_100C0D0B8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100033F68;
  v2[6] = v0;
  v2[7] = *v0;
  return _swift_task_switch(sub_100C087C4, v0, 0);
}

uint64_t sub_100C0D188(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100C10C70(&qword_10165B660, a2, (void (*)(uint64_t))type metadata accessor for WildModeAssociationRecordsPublisher);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100C0D1E0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C0D218@<X0>(uint64_t *a1@<X8>)
{
  return sub_100C09258(a1);
}

uint64_t sub_100C0D220(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100033F68;
  v4[7] = a2;
  return _swift_task_switch(sub_100C10224, a2, 0);
}

uint64_t sub_100C0D2CC@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2 = result;
  if (result) {
    uint64_t result = OSAllocatedUnfairLock.callAsFunction<A>(_:)();
  }
  *a2 = v2 == 0;
  return result;
}

uint64_t sub_100C0D344(uint64_t a1)
{
  v2[20] = a1;
  v2[21] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[22] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[23] = v4;
  v2[24] = *(void *)(v4 + 64);
  v2[25] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for WildModeAssociationRecord(0);
  v2[26] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v2[27] = v6;
  v2[28] = *(void *)(v6 + 64);
  v2[29] = swift_task_alloc();
  v2[30] = swift_task_alloc();
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return _swift_task_switch(sub_100C0D498, v1, 0);
}

uint64_t sub_100C0D498()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C0D5D4;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C0D5D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 168);
  *(void *)(*(void *)v1 + 272) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C0D6EC, v2, 0);
}

uint64_t sub_100C0D6EC()
{
  uint64_t v1 = v0 + 16;
  if (!*(void *)(v0 + 272))
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101637000 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100010324(v9, (uint64_t)qword_10170EAE0);
    os_log_type_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Cleanup unstaged records failure: Missing BeaconStoreActor!", v12, 2u);
      swift_slowDealloc();
    }
LABEL_16:

    goto LABEL_18;
  }
  uint64_t v2 = *(void *)(v0 + 160);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 280) = v3;
  if (!v3) {
    goto LABEL_12;
  }
  uint64_t v4 = *(void *)(v0 + 216);
  *(_DWORD *)(v0 + 384) = *(_DWORD *)(v4 + 80);
  *(void *)(v0 + 288) = *(void *)(v4 + 72);
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  while (2)
  {
    *(void *)(v0 + 296) = 0;
    *(void *)(v0 + 304) = v5;
    uint64_t v7 = *(void *)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 208);
    sub_100C10964(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(void *)(v0 + 288) * v5, v7, type metadata accessor for WildModeAssociationRecord);
    switch(*(unsigned char *)(v7 + *(int *)(v8 + 64)))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_22;
      case 8:
        goto LABEL_5;
      default:
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v6)
        {
LABEL_22:
          uint64_t v18 = *(void *)(v0 + 272);
          return _swift_task_switch(sub_100C0DB44, v18, 0);
        }
LABEL_5:
        sub_100C109CC(*(void *)(v0 + 256), type metadata accessor for WildModeAssociationRecord);
        uint64_t v5 = *(void *)(v0 + 304) + 1;
        if (v5 != *(void *)(v0 + 280)) {
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_12:
        if (qword_101637000 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_100010324(v13, (uint64_t)qword_10170EAE0);
        os_log_type_t v10 = Logger.logObject.getter();
        os_log_type_t v14 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v10, v14))
        {
          uint64_t v15 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v15 = 134349056;
          *(void *)(v0 + 144) = 0;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v10, v14, "Removed %{public}ld unstaged records.", v15, 0xCu);
          swift_slowDealloc();
          swift_release();
          goto LABEL_16;
        }

        swift_release();
LABEL_18:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
        return v16();
    }
  }
}

uint64_t sub_100C0DB44()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[22];
  uint64_t v5 = v0[23];
  v0[39] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  v0[40] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v7 + v6, v3, v4);
  swift_retain();
  return _swift_task_switch(sub_100C0DC38, 0, 0);
}

uint64_t sub_100C0DC38()
{
  uint64_t v2 = v0[39];
  uint64_t v1 = v0[40];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[41] = v3;
  v3[2] = v2;
  v3[3] = sub_100C10BF4;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[42] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C0DD40;
  uint64_t v5 = v0[31];
  uint64_t v6 = v0[26];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100C10C64, v3, v6);
}

uint64_t sub_100C0DD40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100C0EA6C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 168);
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = sub_100C0DE70;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_100C0DE70()
{
  uint64_t v1 = *(void *)(v0 + 248);
  switch(*(unsigned char *)(v1 + *(int *)(*(void *)(v0 + 208) + 64)))
  {
    case 4:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    case 8:
      goto LABEL_6;
    default:
      char v2 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v2)
      {
LABEL_4:
        uint64_t v3 = *(void *)(v0 + 272);
        uint64_t v4 = sub_100C0E354;
LABEL_21:
        return _swift_task_switch(v4, v3, 0);
      }
      uint64_t v1 = *(void *)(v0 + 248);
LABEL_6:
      uint64_t v5 = *(void *)(v0 + 256);
      sub_100C109CC(v1, type metadata accessor for WildModeAssociationRecord);
      sub_100C109CC(v5, type metadata accessor for WildModeAssociationRecord);
      uint64_t v6 = *(void *)(v0 + 296);
      while (1)
      {
        uint64_t v8 = *(void *)(v0 + 304) + 1;
        if (v8 == *(void *)(v0 + 280)) {
          break;
        }
        *(void *)(v0 + 296) = v6;
        *(void *)(v0 + 304) = v8;
        uint64_t v9 = *(void *)(v0 + 256);
        uint64_t v10 = *(void *)(v0 + 208);
        sub_100C10964(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(void *)(v0 + 288) * v8, v9, type metadata accessor for WildModeAssociationRecord);
        switch(*(unsigned char *)(v9 + *(int *)(v10 + 64)))
        {
          case 4:
            swift_bridgeObjectRelease();
            goto LABEL_20;
          case 8:
            goto LABEL_8;
          default:
            char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v7)
            {
LABEL_20:
              uint64_t v3 = *(void *)(v0 + 272);
              uint64_t v4 = sub_100C0DB44;
              goto LABEL_21;
            }
LABEL_8:
            sub_100C109CC(*(void *)(v0 + 256), type metadata accessor for WildModeAssociationRecord);
            break;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_101637000 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100010324(v11, (uint64_t)qword_10170EAE0);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v14 = 134349056;
        *(void *)(v0 + 144) = v6;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Removed %{public}ld unstaged records.", v14, 0xCu);
        swift_slowDealloc();
        swift_release();
      }
      else
      {

        swift_release();
      }
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
  }
}

uint64_t sub_100C0E354()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 240);
  unint64_t v4 = (*(unsigned __int8 *)(v0 + 384) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384);
  *(void *)(v0 + 352) = *(void *)(v1 + 136);
  sub_100C10964(v2, v3, type metadata accessor for WildModeAssociationRecord);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 360) = v5;
  *(void *)(v5 + 16) = v1;
  sub_100C108FC(v3, v5 + v4, type metadata accessor for WildModeAssociationRecord);
  swift_retain();
  return _swift_task_switch(sub_100C0E454, 0, 0);
}

uint64_t sub_100C0E454()
{
  uint64_t v2 = v0[44];
  uint64_t v1 = v0[45];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[46] = v3;
  v3[2] = v2;
  v3[3] = sub_100C11510;
  v3[4] = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[47] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_100C0E55C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D74C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100C0E55C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 272);
  return _swift_task_switch(sub_100C0E6AC, v2, 0);
}

uint64_t sub_100C0E6AC()
{
  return _swift_task_switch(sub_100C0E6C8, *(void *)(v0 + 168), 0);
}

uint64_t sub_100C0E6C8()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 256);
  sub_100C109CC(*(void *)(v0 + 248), type metadata accessor for WildModeAssociationRecord);
  sub_100C109CC(v2, type metadata accessor for WildModeAssociationRecord);
  uint64_t v3 = v1 + 1;
  if (__OFADD__(v1, 1))
  {
    __break(1u);
LABEL_4:
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v4)
    {
LABEL_17:
      uint64_t v14 = *(void *)(v0 + 272);
      return _swift_task_switch(sub_100C0DB44, v14, 0);
    }
LABEL_5:
    sub_100C109CC(*(void *)(v0 + 256), type metadata accessor for WildModeAssociationRecord);
  }
  uint64_t v5 = *(void *)(v0 + 304) + 1;
  if (v5 != *(void *)(v0 + 280))
  {
    *(void *)(v0 + 296) = v3;
    *(void *)(v0 + 304) = v5;
    uint64_t v6 = *(void *)(v0 + 256);
    uint64_t v7 = *(void *)(v0 + 208);
    sub_100C10964(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(void *)(v0 + 288) * v5, v6, type metadata accessor for WildModeAssociationRecord);
    switch(*(unsigned char *)(v6 + *(int *)(v7 + 64)))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_17;
      case 8:
        goto LABEL_5;
      default:
        goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_101637000 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100010324(v8, (uint64_t)qword_10170EAE0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134349056;
    *(void *)(v0 + 144) = v3;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Removed %{public}ld unstaged records.", v11, 0xCu);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_100C0EA6C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 272);
  return _swift_task_switch(sub_100C0EAD4, v1, 0);
}

uint64_t sub_100C0EAD4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_release();
  return _swift_task_switch(sub_100C0EB40, v1, 0);
}

uint64_t sub_100C0EB40()
{
  uint64_t v27 = v0;
  uint64_t v1 = &qword_101637000;
  if (qword_101637000 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = type metadata accessor for Logger();
  sub_100010324(v4, (uint64_t)qword_10170EAE0);
  sub_100C10964(v2, v3, type metadata accessor for WildModeAssociationRecord);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v9 = *(void *)(v0 + 232);
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 141558531;
    *(void *)(v10 + 4) = 1752392040;
    *(_WORD *)(v10 + 12) = 2081;
    sub_100C10C70((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v10 + 14) = sub_1008FA0F0(v11, v12, &v26);
    swift_bridgeObjectRelease();
    sub_100C109CC(v9, type metadata accessor for WildModeAssociationRecord);
    *(_WORD *)(v10 + 22) = 2082;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    *(void *)(v10 + 24) = sub_1008FA0F0(v13, v14, &v26);
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "    Failed to get wild mode beacon for identifier %{private,mask.hash}s\n    Error: %{public}s", (uint8_t *)v10, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = &qword_101637000;
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    sub_100C109CC(v9, type metadata accessor for WildModeAssociationRecord);
  }
  swift_errorRelease();
  sub_100C109CC(v8, type metadata accessor for WildModeAssociationRecord);
  uint64_t v15 = *(void *)(v0 + 296);
  while (1)
  {
    uint64_t v17 = *(void *)(v0 + 304) + 1;
    if (v17 == *(void *)(v0 + 280)) {
      break;
    }
    *(void *)(v0 + 296) = v15;
    *(void *)(v0 + 304) = v17;
    uint64_t v18 = *(void *)(v0 + 256);
    uint64_t v19 = *(void *)(v0 + 208);
    sub_100C10964(*(void *)(v0 + 160)+ ((*(unsigned __int8 *)(v0 + 384) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 384))+ *(void *)(v0 + 288) * v17, v18, type metadata accessor for WildModeAssociationRecord);
    switch(*(unsigned char *)(v18 + *(int *)(v19 + 64)))
    {
      case 4:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      case 8:
        goto LABEL_8;
      default:
        char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_20:
          uint64_t v25 = *(void *)(v0 + 272);
          return _swift_task_switch(sub_100C0DB44, v25, 0);
        }
LABEL_8:
        sub_100C109CC(*(void *)(v0 + 256), type metadata accessor for WildModeAssociationRecord);
        break;
    }
  }
  swift_bridgeObjectRelease();
  if (*v1 != -1) {
    swift_once();
  }
  sub_100010324(v4, (uint64_t)qword_10170EAE0);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    unint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)unint64_t v22 = 134349056;
    *(void *)(v0 + 144) = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Removed %{public}ld unstaged records.", v22, 0xCu);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_100C0F140(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[18] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[19] = v5;
  v3[20] = *(void *)(v5 + 64);
  v3[21] = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for WildModeAssociationRecord(0) - 8);
  v3[22] = v6;
  v3[23] = *(void *)(v6 + 64);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  return _swift_task_switch(sub_100C0F27C, v2, 0);
}

uint64_t sub_100C0F27C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C0F3B8;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C0F3B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 216) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C0F4D0, v2, 0);
}

uint64_t sub_100C0F4D0()
{
  uint64_t v1 = v0 + 16;
  if (*(void *)(v0 + 216))
  {
    uint64_t v2 = *(void *)(v0 + 120);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = *(void *)(v2 + 16);
    *(void *)(v0 + 224) = v3;
    if (v3)
    {
      uint64_t v5 = *(void *)(v0 + 168);
      uint64_t v4 = *(void *)(v0 + 176);
      int v6 = *(_DWORD *)(v4 + 80);
      *(_DWORD *)(v0 + 288) = v6;
      *(void *)(v0 + 232) = *(void *)(v4 + 72);
      *(void *)(v0 + 240) = 0;
      uint64_t v7 = *(void *)(v0 + 200);
      uint64_t v8 = *(void *)(v0 + 152);
      uint64_t v9 = *(void *)(v0 + 144);
      uint64_t v10 = *(void *)(v0 + 128);
      uint64_t v11 = *(void *)(v0 + 120) + ((v6 + 32) & ~(unint64_t)v6);
      swift_bridgeObjectRetain();
      sub_100C10964(v11, v7, type metadata accessor for WildModeAssociationRecord);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v5, v10, v9);
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = swift_allocObject();
      *(void *)(v0 + 248) = v13;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v8 + 32))(v13 + v12, v5, v9);
      uint64_t v14 = *(void *)(v0 + 216);
      return _swift_task_switch(sub_100C0F6FC, v14, 0);
    }
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    sub_10001CEC8();
    swift_allocError();
    *uint64_t v15 = 0xD000000000000010;
    v15[1] = 0x80000001013F23D0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v16 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v16();
}

uint64_t sub_100C0F6FC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 248);
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 200);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 288) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 288);
  unint64_t v6 = (*(void *)(v0 + 184) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v0 + 256) = *(void *)(v2 + 136);
  sub_100C10964(v3, v4, type metadata accessor for WildModeAssociationRecord);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 264) = v7;
  *(void *)(v7 + 16) = v2;
  sub_100C108FC(v4, v7 + v5, type metadata accessor for WildModeAssociationRecord);
  uint64_t v8 = (uint64_t (**)(uint64_t))(v7 + v6);
  *uint64_t v8 = sub_100C11614;
  v8[1] = v1;
  uint64_t v9 = (void *)(v7 + ((v6 + 23) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v9 = SharingCircleWildAdvertisementKey.init(key:);
  v9[1] = 0;
  swift_retain();
  swift_retain();
  return _swift_task_switch(sub_100C0F854, 0, 0);
}

uint64_t sub_100C0F854()
{
  uint64_t v2 = v0[32];
  uint64_t v1 = v0[33];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[34] = v3;
  v3[2] = v2;
  v3[3] = sub_100C11F14;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[35] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C0F95C;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1002F7348, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100C0F95C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 216);
  return _swift_task_switch(sub_100C0FAAC, v2, 0);
}

uint64_t sub_100C0FAAC()
{
  uint64_t v1 = *(void *)(v0 + 136);
  swift_release();
  return _swift_task_switch(sub_100C0FB18, v1, 0);
}

uint64_t sub_100C0FB18()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 240) + 1;
  sub_100C109CC(*(void *)(v0 + 200), type metadata accessor for WildModeAssociationRecord);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 240) + 1;
    *(void *)(v0 + 240) = v6;
    uint64_t v7 = *(void *)(v0 + 168);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    uint64_t v10 = *(void *)(v0 + 128);
    sub_100C10964(*(void *)(v0 + 120)+ ((*(unsigned __int8 *)(v0 + 288) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 288))+ v5 * v6, *(void *)(v0 + 200), type metadata accessor for WildModeAssociationRecord);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v10, v8);
    unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v12 = swift_allocObject();
    *(void *)(v0 + 248) = v12;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v12 + v11, v7, v8);
    uint64_t v13 = *(void *)(v0 + 216);
    return _swift_task_switch(sub_100C0F6FC, v13, 0);
  }
}

uint64_t sub_100C0FCCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v18 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, a2, v13);
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56);
  v15(v12, 0, 1, v13);
  sub_10001D074((uint64_t)v12, (uint64_t)v7, (uint64_t *)&unk_10163AC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v7, 1, v13) == 1)
  {
    static Date.trustedNow.getter((uint64_t)v10);
    sub_10001DAB4((uint64_t)v7, (uint64_t *)&unk_10163AC90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v10, v7, v13);
  }
  v15(v10, 0, 1, v13);
  uint64_t v16 = type metadata accessor for WildModeAssociationRecord(0);
  sub_100C11FB8((uint64_t)v10, a1 + *(int *)(v16 + 76));
  return sub_10001DAB4((uint64_t)v12, (uint64_t *)&unk_10163AC90);
}

uint64_t sub_100C0FED0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10001D608(a1, (uint64_t)v17, &qword_1016549D0);
  uint64_t v5 = v17[0];
  uint64_t v4 = v17[1];
  uint64_t v6 = v17[2];
  uint64_t v7 = v17[3];
  uint64_t v8 = v17[4];
  uint64_t result = sub_10001D608(a1, (uint64_t)v18, &qword_1016549D0);
  if (v18[0] != 2) {
    goto LABEL_14;
  }
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  uint64_t result = sub_1010AC430(v16);
  double v11 = v10;
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = sub_1010AC424(v16);
  double v13 = v12 * 0.5;
  if ((~COERCE__INT64(v12 * 0.5) & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_1010AC424(v16);
  double v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((~*(void *)&v15 & 0x7FF0000000000000) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v15 <= -9.22337204e18)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v15 < 9.22337204e18)
  {
    uint64_t v4 = (uint64_t)v11;
    uint64_t v6 = (uint64_t)v13;
    uint64_t v8 = 707;
    uint64_t v5 = 256;
    uint64_t v7 = (uint64_t)v15;
LABEL_14:
    *a2 = v5;
    a2[1] = v4;
    a2[2] = v6;
    a2[3] = v7;
    a2[4] = v8;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_100C100D8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C10110(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100C09370(a1, a2, a3);
}

uint64_t sub_100C10118()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C10158(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001D2E4;
  return sub_100C0D220(a1, v4);
}

uint64_t sub_100C10204()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_100C10224, v0, 0);
}

uint64_t sub_100C10224()
{
  uint64_t v1 = *(void *)(v0[7] + 144);
  v0[8] = v1;
  uint64_t v2 = swift_allocObject();
  v0[9] = v2;
  *(void *)(v2 + 16) = v1;
  swift_retain_n();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_101638DC0);
  *uint64_t v3 = v0;
  v3[1] = sub_100C1032C;
  return unsafeBlocking<A>(_:)(v0 + 13, sub_100C108E0, v2, v4);
}

uint64_t sub_100C1032C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C10458, v1, 0);
}

uint64_t sub_100C10458()
{
  uint64_t v4 = (uint64_t (*)(void *, uint64_t))((char *)&async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:)
                                               + async function pointer to dispatch thunk of WorkItemQueue.enqueueAndAwaitResult(_:));
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C10524;
  uint64_t v2 = *(void *)(v0 + 56);
  return v4(&unk_10164B3F0, v2);
}

uint64_t sub_100C10524()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0)
  {
    uint64_t v4 = sub_100C1065C;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_1000F0C28;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C1065C()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_101637000 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EAE0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 48) = sub_1008FA0F0(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Records Publish error: %{public}s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    swift_release();
  }
  else
  {
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100C108A8()
{
  swift_release();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100C108E0@<X0>(BOOL *a1@<X8>)
{
  return sub_100C0D2CC(*(void *)(v1 + 16), a1);
}

void *sub_100C108E8@<X0>(void *a1@<X8>)
{
  return sub_100E5FB24(a1);
}

uint64_t sub_100C108F0(uint64_t a1)
{
  return sub_10012A25C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100C108FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C10964(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C109CC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100C10A2C()
{
  unint64_t result = qword_10165B6A0;
  if (!qword_10165B6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165B6A0);
  }
  return result;
}

unint64_t sub_100C10A80()
{
  unint64_t result = qword_10165B6B0;
  if (!qword_10165B6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165B6B0);
  }
  return result;
}

unint64_t sub_100C10AD4()
{
  unint64_t result = qword_10165B6C0;
  if (!qword_10165B6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B6C0);
  }
  return result;
}

uint64_t sub_100C10B28()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C10BF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  return sub_100E6004C(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_100C10C64(uint64_t a1)
{
  return sub_100E5724C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100C10C70(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C10CB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v45 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v43 = *(void *)(*((void *)v2 - 1) + 64);
  swift_release();
  uint64_t v44 = (v45 + 24) & ~v45;
  uint64_t v3 = v0 + v44;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v3, v4);
  uint64_t v7 = v3 + v2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = v3 + v2[7];
  uint64_t v9 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v3 + v2[10];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v46 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v46(v10, v11);
  uint64_t v13 = v3 + v2[11];
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v42(v13, 1, v11)) {
    v46(v13, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v3 + v2[14];
  uint64_t v15 = type metadata accessor for AccessoryMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v6(v14, v4);
    sub_10001CFB8(*(void *)(v14 + *(int *)(v15 + 20)), *(void *)(v14 + *(int *)(v15 + 20) + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v3 + v2[15];
  uint64_t v17 = (int *)type metadata accessor for AccessoryProductInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v17 - 1) + 48))(v16, 1, v17))
  {
    uint64_t v40 = v11;
    uint64_t v41 = v1;
    uint64_t v18 = v16 + v17[5];
    uint64_t v19 = type metadata accessor for ServerStatusCode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v16 + v17[16];
    uint64_t v21 = type metadata accessor for URL();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(void))(v22 + 48);
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v23)(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v24 = v16 + v17[17];
    int64_t v39 = v23;
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v23)(v24, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = v16 + v17[20];
    uint64_t v26 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v25 + *(int *)(v26 + 40);
      if (!v39()) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v37, v21);
      }
      uint64_t v38 = v25 + *(int *)(v26 + 44);
      if (!v39()) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v38, v21);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t *)(v16 + v17[23]);
    unint64_t v28 = v27[1];
    if (v28 >> 60 != 15) {
      sub_10001CFB8(*v27, v28);
    }
    uint64_t v29 = (uint64_t *)(v16 + v17[24]);
    unint64_t v30 = v29[1];
    if (v30 >> 60 != 15) {
      sub_10001CFB8(*v29, v30);
    }
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v31(v16 + v17[25], v21);
    v31(v16 + v17[26], v21);
    v31(v16 + v17[27], v21);
    v31(v16 + v17[28], v21);
    v31(v16 + v17[29], v21);
    v31(v16 + v17[30], v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31(v16 + v17[37], v21);
    v31(v16 + v17[38], v21);
    v31(v16 + v17[39], v21);
    v31(v16 + v17[40], v21);
    v31(v16 + v17[41], v21);
    v31(v16 + v17[42], v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = v40;
    uint64_t v1 = v41;
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = v3 + v2[18];
  if (!v42(v32, 1, v11)) {
    v46(v32, v11);
  }
  uint64_t v33 = v3 + v2[19];
  if (!v42(v33, 1, v11)) {
    v46(v33, v11);
  }
  uint64_t v34 = (uint64_t *)(v3 + v2[20]);
  unint64_t v35 = v34[1];
  if (((v35 >> 60) | 4) != 0xF) {
    sub_10001CFB8(*v34, v35);
  }

  return _swift_deallocObject(v1, v44 + v43, v45 | 7);
}

uint64_t sub_100C11510()
{
  uint64_t v1 = *(void *)(type metadata accessor for WildModeAssociationRecord(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100E60344(v2, v3);
}

uint64_t sub_100C11584()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C11614(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100C0FCCC(a1, v4);
}

uint64_t sub_100C11684()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for WildModeAssociationRecord(0);
  uint64_t v44 = *(unsigned __int8 *)(*((void *)v2 - 1) + 80);
  uint64_t v42 = *(void *)(*((void *)v2 - 1) + 64);
  swift_release();
  uint64_t v43 = (v44 + 24) & ~v44;
  uint64_t v3 = v0 + v43;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(v0 + v43, v4);
  uint64_t v7 = v0 + v43 + v2[5];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v4)) {
    v6(v7, v4);
  }
  uint64_t v8 = v3 + v2[7];
  uint64_t v9 = type metadata accessor for MACAddress();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v3 + v2[10];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v45(v10, v11);
  uint64_t v13 = v3 + v2[11];
  uint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (!v41(v13, 1, v11)) {
    v45(v13, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = v3 + v2[14];
  uint64_t v15 = type metadata accessor for AccessoryMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v6(v14, v4);
    sub_10001CFB8(*(void *)(v14 + *(int *)(v15 + 20)), *(void *)(v14 + *(int *)(v15 + 20) + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = v3 + v2[15];
  uint64_t v17 = (int *)type metadata accessor for AccessoryProductInfo();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v17 - 1) + 48))(v16, 1, v17))
  {
    uint64_t v40 = v0;
    uint64_t v18 = v16 + v17[5];
    uint64_t v19 = type metadata accessor for ServerStatusCode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v16 + v17[16];
    uint64_t v21 = type metadata accessor for URL();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(unsigned int (**)(void))(v22 + 48);
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v23)(v20, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
    }
    uint64_t v24 = v16 + v17[17];
    int64_t v39 = v23;
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v23)(v24, 1, v21)) {
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v21);
    }
    swift_bridgeObjectRelease();
    uint64_t v25 = v16 + v17[20];
    uint64_t v26 = type metadata accessor for AccessoryInfoResponseContent.Configuration(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v25 + *(int *)(v26 + 40);
      if (!v39()) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v37, v21);
      }
      uint64_t v38 = v25 + *(int *)(v26 + 44);
      if (!v39()) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v38, v21);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = (uint64_t *)(v16 + v17[23]);
    unint64_t v28 = v27[1];
    uint64_t v1 = v40;
    if (v28 >> 60 != 15) {
      sub_10001CFB8(*v27, v28);
    }
    uint64_t v29 = (uint64_t *)(v16 + v17[24]);
    unint64_t v30 = v29[1];
    if (v30 >> 60 != 15) {
      sub_10001CFB8(*v29, v30);
    }
    uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v31(v16 + v17[25], v21);
    v31(v16 + v17[26], v21);
    v31(v16 + v17[27], v21);
    v31(v16 + v17[28], v21);
    v31(v16 + v17[29], v21);
    v31(v16 + v17[30], v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31(v16 + v17[37], v21);
    v31(v16 + v17[38], v21);
    v31(v16 + v17[39], v21);
    v31(v16 + v17[40], v21);
    v31(v16 + v17[41], v21);
    v31(v16 + v17[42], v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = v3 + v2[18];
  if (!v41(v32, 1, v11)) {
    v45(v32, v11);
  }
  uint64_t v33 = v3 + v2[19];
  if (!v41(v33, 1, v11)) {
    v45(v33, v11);
  }
  uint64_t v34 = (uint64_t *)(v3 + v2[20]);
  unint64_t v35 = v34[1];
  if (((v35 >> 60) | 4) != 0xF) {
    sub_10001CFB8(*v34, v35);
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v1, ((((v42 + v43 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16, v44 | 7);
}

uint64_t sub_100C11F14()
{
  uint64_t v1 = *(void *)(type metadata accessor for WildModeAssociationRecord(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_10111645C(v0 + v2, *(void (**)(char *))(v0 + v3), *(void *)(v0 + v3 + 8), *(void (**)(char *))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100C11FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C((uint64_t *)&unk_10163AC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for WildModeAssociationRecordsPublisherError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100C120ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WildModeAssociationRecordsPublisherError()
{
  return &type metadata for WildModeAssociationRecordsPublisherError;
}

unint64_t sub_100C12128()
{
  unint64_t result = qword_10165B6C8;
  if (!qword_10165B6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165B6C8);
  }
  return result;
}

unint64_t sub_100C1217C(uint64_t a1)
{
  uint64_t v60 = sub_10000588C(&qword_10165B958);
  uint64_t v3 = __chkstk_darwin(v60);
  char v55 = (void **)((char *)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v54 = (void *)((char *)v44 - v6);
  __chkstk_darwin(v5);
  uint64_t v53 = (char *)v44 - v7;
  uint64_t v52 = type metadata accessor for CloudKitCoordinator.Deletion();
  uint64_t v8 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v10 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (!v11) {
    return (unint64_t)v12;
  }
  v44[1] = v1;
  uint64_t v61 = _swiftEmptyArrayStorage;
  sub_1000B8578(0, v11, 0);
  unint64_t result = sub_100803228(a1);
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  uint64_t v48 = v8 + 32;
  int64_t v49 = v10;
  uint64_t v56 = a1 + 80;
  uint64_t v50 = v8;
  uint64_t v51 = a1;
  int64_t v45 = v11;
  uint64_t v46 = v14;
  uint64_t v47 = a1 + 64;
  uint64_t v17 = v53;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = result >> 6;
    if ((*(void *)(v16 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v14) {
      goto LABEL_26;
    }
    uint64_t v57 = v15;
    uint64_t v58 = 1 << result;
    uint64_t v21 = (char *)v17 + *(int *)(v60 + 48);
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v23 = *(void **)(*(void *)(a1 + 48) + 8 * result);
    unint64_t v24 = result;
    uint64_t v25 = type metadata accessor for CloudKitChangeSet.TombstoneInfo();
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
    uint64_t v28 = *(void *)(v26 + 72);
    int64_t v59 = v24;
    v27(v21, v22 + v28 * v24, v25);
    *uint64_t v17 = v23;
    uint64_t v29 = (uint64_t)v54;
    void *v54 = v23;
    v27((char *)(v29 + *(int *)(v60 + 48)), (unint64_t)v21, v25);
    unint64_t v30 = v55;
    sub_10001D608(v29, (uint64_t)v55, &qword_10165B958);
    id v31 = v23;
    uint64_t v32 = v49;
    id v33 = v31;
    sub_10001DAB4((uint64_t)v17, &qword_10165B958);
    uint64_t v34 = *v30;
    CloudKitChangeSet.TombstoneInfo.recordType.getter();
    id v35 = v34;
    CloudKitCoordinator.Deletion.init(recordType:recordID:)();
    sub_10001DAB4((uint64_t)v30, &qword_10165B958);
    uint64_t v12 = v61;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1000B8578(0, v12[2] + 1, 1);
      uint64_t v12 = v61;
    }
    uint64_t v36 = v50;
    a1 = v51;
    unint64_t v38 = v12[2];
    unint64_t v37 = v12[3];
    if (v38 >= v37 >> 1)
    {
      sub_1000B8578(v37 > 1, v38 + 1, 1);
      uint64_t v12 = v61;
    }
    v12[2] = v38 + 1;
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v36 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v38, v32, v52);
    uint64_t v61 = v12;
    int64_t v18 = 1 << *(unsigned char *)(a1 + 32);
    if (v59 >= v18) {
      goto LABEL_27;
    }
    uint64_t v16 = v47;
    uint64_t v39 = *(void *)(v47 + 8 * v20);
    if ((v39 & v58) == 0) {
      goto LABEL_28;
    }
    LODWORD(v14) = v46;
    if (*(_DWORD *)(a1 + 36) != v46) {
      goto LABEL_29;
    }
    unint64_t v40 = v39 & (-2 << (v59 & 0x3F));
    if (v40)
    {
      int64_t v18 = __clz(__rbit64(v40)) | v59 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v45;
    }
    else
    {
      unint64_t v41 = v20 + 1;
      unint64_t v42 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v45;
      if (v20 + 1 < v42)
      {
        unint64_t v43 = *(void *)(v47 + 8 * v41);
        if (v43)
        {
LABEL_22:
          int64_t v18 = __clz(__rbit64(v43)) + (v41 << 6);
        }
        else
        {
          while (v42 - 2 != v20)
          {
            unint64_t v43 = *(void *)(v56 + 8 * v20++);
            if (v43)
            {
              unint64_t v41 = v20 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v15 = v57 + 1;
    unint64_t result = v18;
    if (v57 + 1 == v19) {
      return (unint64_t)v12;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_100C125FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t result = (void *)sub_100803228(a1);
    uint64_t v4 = (uint64_t)result;
    int v6 = v5;
    uint64_t v7 = 0;
    uint64_t v8 = a1 + 64;
    uint64_t v19 = v2;
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v11 = (unint64_t)v4 >> 6;
      if ((*(void *)(v8 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
        goto LABEL_24;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_25;
      }
      uint64_t v12 = *(void *)(a1 + 56) + 16 * v4;
      uint64_t v13 = *(void **)v12;
      if (*(unsigned char *)(v12 + 8))
      {
        sub_100C1E464(v13, 1);
        sub_10000588C(&qword_101638D40);
        swift_willThrowTypedImpl();
        return (void *)swift_release();
      }
      uint64_t v20 = v7;
      sub_100C1E464(v13, 0);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t result = (void *)specialized ContiguousArray._endMutation()();
      int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
      if (v4 >= v9) {
        goto LABEL_26;
      }
      uint64_t v14 = *(void *)(v8 + 8 * v11);
      if ((v14 & (1 << v4)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_28;
      }
      unint64_t v15 = v14 & (-2 << (v4 & 0x3F));
      if (v15)
      {
        int64_t v9 = __clz(__rbit64(v15)) | v4 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v10 = v19;
      }
      else
      {
        unint64_t v16 = v11 + 1;
        unint64_t v17 = (unint64_t)(v9 + 63) >> 6;
        uint64_t v10 = v19;
        if (v11 + 1 < v17)
        {
          unint64_t v18 = *(void *)(v8 + 8 * v16);
          if (v18)
          {
LABEL_19:
            int64_t v9 = __clz(__rbit64(v18)) + (v16 << 6);
          }
          else
          {
            while (v17 - 2 != v11)
            {
              unint64_t v18 = *(void *)(a1 + 80 + 8 * v11++);
              if (v18)
              {
                unint64_t v16 = v11 + 1;
                goto LABEL_19;
              }
            }
          }
        }
      }
      uint64_t v7 = v20 + 1;
      uint64_t v4 = v9;
      if (v20 + 1 == v10) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  return result;
}

uint64_t sub_100C12834(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = sub_10000588C(&qword_10163CE68);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Table();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return _swift_task_switch(sub_100C12968, v2, 0);
}

uint64_t sub_100C12968()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 136) = v1;
  return _swift_task_switch(sub_100C1298C, v1, 0);
}

uint64_t sub_100C1298C()
{
  v0[18] = type metadata accessor for CloudStorageDatabase();
  v0[19] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[20] = v1;
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[17];
    return _swift_task_switch(sub_100C12AAC, v4, 0);
  }
}

uint64_t sub_100C12AAC()
{
  *(void *)(v0 + 168) = Database.readConnection.getter();
  return _swift_task_switch(sub_100C12B1C, 0, 0);
}

uint64_t sub_100C12B1C()
{
  if (!v0[21])
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 2;
    *(unsigned char *)(v15 + 4) = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_101636C18 != -1) {
    swift_once();
  }
  uint64_t v22 = v0 + 2;
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_100010324(v3, (uint64_t)qword_10170E158);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v21(v1, v4, v3);
  if (qword_101636C28 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[12];
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[20];
  uint64_t v11 = sub_10000588C(&qword_10163CE70);
  sub_100010324(v11, (uint64_t)qword_10170E188);
  type metadata accessor for UUID();
  == infix<A>(_:_:)();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v19);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v5, v8);
  v0[5] = v8;
  v0[6] = &protocol witness table for Table;
  uint64_t v13 = sub_10001D958(v22);
  v21((uint64_t)v13, v6, v8);
  sub_100C1DAD0();
  uint64_t v14 = v0[16];
  if (v20)
  {
    v12(v0[16], v0[13]);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  uint64_t v17 = v0[13];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
  dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  swift_release();
  swift_release();
  v12(v14, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return v16();
}

uint64_t sub_100C12E34(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_10000588C(&qword_10163CE68);
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Table();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100C12F68, v2, 0);
}

uint64_t sub_100C12F68()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 112);
  *(void *)(v0 + 152) = v1;
  return _swift_task_switch(sub_100C12F8C, v1, 0);
}

uint64_t sub_100C12F8C()
{
  v0[20] = type metadata accessor for CloudStorageDatabase();
  v0[21] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[22] = v1;
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[19];
    return _swift_task_switch(sub_100C130AC, v4, 0);
  }
}

uint64_t sub_100C130AC()
{
  *(void *)(v0 + 184) = Database.readConnection.getter();
  return _swift_task_switch(sub_100C1311C, 0, 0);
}

uint64_t sub_100C1311C()
{
  if (!v0[23])
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 2;
    *(unsigned char *)(v16 + 4) = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_101636C18 != -1) {
    swift_once();
  }
  uint64_t v27 = v0 + 2;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = sub_100010324(v3, (uint64_t)qword_10170E158);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v26(v1, v4, v3);
  if (qword_101636C40 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[17];
  uint64_t v23 = v0[18];
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v24 = v0[12];
  uint64_t v25 = v0[22];
  uint64_t v11 = v0[9];
  uint64_t v10 = v0[10];
  uint64_t v12 = sub_10000588C(&qword_10163CF58);
  sub_100010324(v12, (uint64_t)qword_10170E1D0);
  v0[7] = v11;
  v0[8] = v10;
  sub_100C1D6B8((unint64_t *)&qword_10163CFE8, (void (*)(uint64_t))&type metadata accessor for Blob);
  == infix<A>(_:_:)();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v24);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v5, v7);
  v0[5] = v7;
  v0[6] = &protocol witness table for Table;
  uint64_t v14 = sub_10001D958(v27);
  v26((uint64_t)v14, v23, v7);
  sub_100C1DAD0();
  uint64_t v15 = v0[18];
  if (v25)
  {
    v13(v0[18], v0[15]);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v27);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v19 = v0[15];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v27);
  uint64_t v20 = dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  size_t v21 = sub_100B76560(v20);
  swift_release();
  swift_release();
  v13(v15, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(size_t))v0[1];
  return v22(v21);
}

uint64_t sub_100C134B0()
{
  *(void *)(v1 + 56) = v0;
  return _swift_task_switch(sub_100C134D0, v0, 0);
}

uint64_t sub_100C134D0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 112);
  *(void *)(v0 + 64) = v1;
  return _swift_task_switch(sub_100C134F4, v1, 0);
}

uint64_t sub_100C134F4()
{
  v0[9] = type metadata accessor for CloudStorageDatabase();
  v0[10] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[8];
    return _swift_task_switch(sub_100C135F8, v4, 0);
  }
}

uint64_t sub_100C135F8()
{
  *(void *)(v0 + 96) = Database.readConnection.getter();
  return _swift_task_switch(sub_100C13668, 0, 0);
}

uint64_t sub_100C13668()
{
  if (!v0[12])
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v5 = 2;
    *(unsigned char *)(v5 + 4) = 1;
    swift_willThrow();
    goto LABEL_7;
  }
  if (qword_101636C18 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[11];
  uint64_t v2 = type metadata accessor for Table();
  uint64_t v3 = sub_100010324(v2, (uint64_t)qword_10170E158);
  v0[5] = v2;
  v0[6] = &protocol witness table for Table;
  uint64_t v4 = sub_10001D958(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v4, v3, v2);
  sub_100C1DAD0();
  if (v1)
  {
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
LABEL_7:
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 2));
  uint64_t v8 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  swift_release();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t sub_100C1383C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[20] = a3;
  v4[21] = v3;
  v4[18] = a1;
  v4[19] = a2;
  uint64_t v5 = type metadata accessor for OnConflict();
  v4[22] = v5;
  v4[23] = *(void *)(v5 - 8);
  v4[24] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Insert();
  v4[25] = v6;
  v4[26] = *(void *)(v6 - 8);
  v4[27] = swift_task_alloc();
  sub_10000588C(&qword_10163CEA8);
  v4[28] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Row();
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v8 = sub_10000588C(&qword_10163CE68);
  v4[32] = v8;
  v4[33] = *(void *)(v8 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Table();
  v4[35] = v9;
  v4[36] = *(void *)(v9 - 8);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v4[39] = v10;
  v4[40] = *(void *)(v10 - 8);
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  return _swift_task_switch(sub_100C13B20, 0, 0);
}

uint64_t sub_100C13B20()
{
  uint64_t v1 = v0[42];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[43] = v6;
  v0[44] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v4, v2);
  return _swift_task_switch(sub_100C13BA8, v5, 0);
}

uint64_t sub_100C13BA8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 168) + 112);
  *(void *)(v0 + 360) = v1;
  return _swift_task_switch(sub_100C13BCC, v1, 0);
}

uint64_t sub_100C13BCC()
{
  v0[46] = type metadata accessor for CloudStorageDatabase();
  v0[47] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[48] = v1;
  if (v1)
  {
    uint64_t v2 = sub_100C149B4;
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = v0[45];
    uint64_t v2 = sub_100C13CB0;
  }
  return _swift_task_switch(v2, v3, 0);
}

uint64_t sub_100C13CB0()
{
  *(void *)(v0 + 392) = Database.writeConnection.getter();
  return _swift_task_switch(sub_100C13D20, 0, 0);
}

uint64_t sub_100C13D20()
{
  uint64_t v89 = v0;
  if (!v0[49])
  {
    uint64_t v17 = v0[42];
    uint64_t v18 = v0[39];
    uint64_t v19 = v0[40];
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v20 = 2;
    *(unsigned char *)(v20 + 4) = 1;
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
    goto LABEL_37;
  }
  if (qword_101636C20 != -1) {
    swift_once();
  }
  uint64_t v86 = v0 + 2;
  uint64_t v2 = v0[36];
  uint64_t v1 = v0[37];
  uint64_t v79 = sub_100010324(v0[35], (uint64_t)qword_10170E170);
  unint64_t v84 = *(void (**)(uint64_t))(v2 + 16);
  v84(v1);
  if (qword_101636C28 != -1) {
    swift_once();
  }
  uint64_t v3 = v0[38];
  uint64_t v5 = v0[36];
  uint64_t v4 = v0[37];
  uint64_t v7 = v0[34];
  uint64_t v6 = v0[35];
  uint64_t v8 = v0[33];
  uint64_t v80 = v0[32];
  uint64_t v82 = v0[48];
  uint64_t v9 = sub_10000588C(&qword_10163CE70);
  sub_100010324(v9, (uint64_t)qword_10170E188);
  == infix<A>(_:_:)();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v80);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v0[5] = v6;
  v0[6] = &protocol witness table for Table;
  uint64_t v11 = sub_10001D958(v86);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v84)(v11, v3, v6);
  Connection.prepare(_:)();
  if (v82)
  {
    uint64_t v12 = v0[42];
    uint64_t v13 = v0[39];
    uint64_t v14 = v0[40];
    uint64_t v15 = v0[38];
    uint64_t v16 = v0[35];
    swift_release();
    v10(v15, v16);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v86);
LABEL_37:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v73 = (uint64_t (*)(void))v0[1];
    goto LABEL_38;
  }
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v86);
  uint64_t v21 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  if (*(void *)(v21 + 16))
  {
    (*(void (**)(void, unint64_t, void))(v0[30] + 16))(v0[28], v21 + ((*(unsigned __int8 *)(v0[30] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[30] + 80)), v0[29]);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  uint64_t v23 = v0[29];
  uint64_t v24 = v0[30];
  uint64_t v25 = v0[28];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v25, v22, 1, v23);
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23) == 1)
  {
    sub_10001DAB4(v0[28], &qword_10163CEA8);
    LOBYTE(v26) = 0;
    uint64_t v83 = 0;
    unint64_t v87 = 0xF000000000000000;
  }
  else
  {
    (*(void (**)(void, void, void))(v0[30] + 32))(v0[31], v0[28], v0[29]);
    if (qword_101636C90 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_10000588C(&qword_101640C10);
    sub_100010324(v27, (uint64_t)qword_10170E2C0);
    Row.subscript.getter();
    uint64_t v83 = v0[9];
    unint64_t v87 = v0[10];
    if (qword_101636C88 != -1) {
      swift_once();
    }
    uint64_t v29 = v0[30];
    uint64_t v28 = v0[31];
    uint64_t v30 = v0[29];
    uint64_t v31 = sub_10000588C(&qword_10163CF78);
    sub_100010324(v31, (uint64_t)qword_10170E2A8);
    Row.subscript.getter();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
    uint64_t v26 = v0[17];
    if (v26 != 2 && v26 != 1) {
      LOBYTE(v26) = 0;
    }
  }
  unint64_t v32 = v0[19];
  uint64_t v33 = (v32 >> 60) & 3;
  if (!v33)
  {
    sub_100037A24(v83, v87);
    uint64_t v34 = v0[18];
    unint64_t v32 = v0[19];
    uint64_t v83 = v34;
    unint64_t v87 = v32;
LABEL_26:
    sub_100C1E0A8(v34, v32);
    goto LABEL_27;
  }
  if (v33 != 1)
  {
    uint64_t v34 = v0[18];
    goto LABEL_26;
  }
  LOBYTE(v26) = *((unsigned char *)v0 + 144);
LABEL_27:
  uint64_t v76 = v10;
  uint64_t v81 = v26;
  if (qword_101637008 != -1) {
    swift_once();
  }
  id v35 = (void (*)(uint64_t, uint64_t, uint64_t))v0[43];
  uint64_t v36 = v0[41];
  uint64_t v37 = v0[39];
  unint64_t v39 = v0[19];
  uint64_t v38 = v0[20];
  uint64_t v40 = v0[18];
  uint64_t v41 = type metadata accessor for Logger();
  sub_100010324(v41, (uint64_t)qword_10170EAF8);
  v35(v36, v38, v37);
  sub_100C1E0A8(v40, v39);
  sub_100C1E0A8(v40, v39);
  unint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.default.getter();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v46 = v0[40];
  uint64_t v45 = v0[41];
  uint64_t v47 = v0[39];
  uint64_t v48 = v0[18];
  unint64_t v49 = v0[19];
  if (v44)
  {
    uint64_t v77 = v0[41];
    uint64_t v50 = swift_slowAlloc();
    v88[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 141559043;
    v0[11] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 12) = 2081;
    sub_100C1E0A8(v48, v49);
    uint64_t v51 = sub_10121E858(v48, v49);
    uint64_t v74 = v47;
    unint64_t v53 = v52;
    sub_100C1E0B8(v48, v49);
    v0[12] = sub_1008FA0F0(v51, v53, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100C1E0B8(v48, v49);
    sub_100C1E0B8(v48, v49);
    *(_WORD *)(v50 + 22) = 2160;
    v0[13] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v50 + 32) = 2081;
    sub_100C1D6B8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = v77;
    uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[14] = sub_1008FA0F0(v55, v56, v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    unint64_t v78 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v78(v54, v74);
    *(_WORD *)(v50 + 42) = 2050;
    v0[15] = v81;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Saving %{private,mask.hash}s for %{private,mask.hash}s\nrawFindMyPairingState %{public}ld", (uint8_t *)v50, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100C1E0B8(v0[18], v0[19]);
    sub_100C1E0B8(v48, v49);
    unint64_t v78 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v78(v45, v47);
  }
  uint64_t v58 = v0[23];
  uint64_t v57 = v0[24];
  uint64_t v59 = v0[22];
  ((void (*)(void, uint64_t, void))v84)(v0[37], v79, v0[35]);
  (*(void (**)(uint64_t, void, uint64_t))(v58 + 104))(v57, enum case for OnConflict.replace(_:), v59);
  sub_10000588C(&qword_10163CF10);
  type metadata accessor for Setter();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_101347500;
  <- infix<A>(_:_:)();
  if (qword_101636C90 != -1) {
    swift_once();
  }
  uint64_t v60 = sub_10000588C(&qword_101640C10);
  sub_100010324(v60, (uint64_t)qword_10170E2C0);
  v0[7] = v83;
  v0[8] = v87;
  <- infix<A>(_:_:)();
  if (qword_101636C88 != -1) {
    swift_once();
  }
  uint64_t v61 = v0[37];
  uint64_t v62 = v0[35];
  uint64_t v64 = v0[23];
  uint64_t v63 = v0[24];
  uint64_t v65 = v0[22];
  uint64_t v66 = sub_10000588C(&qword_10163CF78);
  sub_100010324(v66, (uint64_t)qword_10170E2A8);
  v0[16] = v81;
  <- infix<A>(_:_:)();
  QueryType.insert(or:_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v63, v65);
  v76(v61, v62);
  Connection.run(_:)();
  uint64_t v85 = v0[42];
  uint64_t v68 = v0[38];
  *(void *)type = v0[39];
  uint64_t v69 = v0[35];
  uint64_t v70 = v0[27];
  uint64_t v71 = v0[25];
  uint64_t v72 = v0[26];
  swift_release();
  sub_100037A24(v83, v87);
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  v76(v68, v69);
  v78(v85, *(void *)type);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v73 = (uint64_t (*)(void))v0[1];
LABEL_38:
  return v73();
}

uint64_t sub_100C149B4()
{
  (*(void (**)(void, void))(v0[40] + 8))(v0[42], v0[39]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100C14AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  uint64_t v5 = sub_10000588C(&qword_10163CFF8);
  v4[10] = v5;
  v4[11] = *(void *)(v5 - 8);
  v4[12] = swift_task_alloc();
  type metadata accessor for String.Encoding();
  v4[13] = swift_task_alloc();
  uint64_t v6 = sub_10000588C(&qword_10163CE68);
  v4[14] = v6;
  v4[15] = *(void *)(v6 - 8);
  v4[16] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Table();
  v4[17] = v7;
  v4[18] = *(void *)(v7 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Delete();
  v4[21] = v8;
  v4[22] = *(void *)(v8 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return _swift_task_switch(sub_100C14CD0, 0, 0);
}

uint64_t sub_100C14CD0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 200) = v1;
  return _swift_task_switch(sub_100C14CF4, v1, 0);
}

uint64_t sub_100C14CF4()
{
  type metadata accessor for CloudStorageDatabase();
  sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  *(void *)(v0 + 208) = Database.writeConnection.getter();
  return _swift_task_switch(sub_100C14DA8, 0, 0);
}

uint64_t sub_100C14DA8()
{
  uint64_t v55 = v0;
  if (v0[26])
  {
    if (qword_101636C20 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[18];
    uint64_t v2 = v0[19];
    uint64_t v51 = sub_100010324(v0[17], (uint64_t)qword_10170E170);
    uint64_t v50 = *(void (**)(uint64_t))(v1 + 16);
    v50(v2);
    if (qword_101636C28 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[19];
    uint64_t v3 = v0[20];
    uint64_t v6 = v0[17];
    uint64_t v5 = v0[18];
    uint64_t v7 = v0[15];
    uint64_t v8 = v0[16];
    uint64_t v53 = v0[14];
    uint64_t v9 = sub_10000588C(&qword_10163CE70);
    sub_100010324(v9, (uint64_t)qword_10170E188);
    type metadata accessor for UUID();
    == infix<A>(_:_:)();
    QueryType.filter(_:)();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v53);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v10(v4, v6);
    QueryType.delete()();
    v10(v3, v6);
    Connection.run(_:)();
    unint64_t v14 = v0[8];
    if (v14 >> 60 == 15)
    {
      (*(void (**)(void, void))(v0[22] + 8))(v0[24], v0[21]);
      swift_release();
    }
    else
    {
      sub_1000361E0(v0[7], v14);
      if (qword_101637008 != -1) {
        swift_once();
      }
      uint64_t v15 = v0[7];
      unint64_t v16 = v0[8];
      uint64_t v17 = type metadata accessor for Logger();
      sub_100010324(v17, (uint64_t)qword_10170EAF8);
      sub_100037A38(v15, v16);
      sub_1000361E0(v15, v16);
      uint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v18, v19))
      {
        os_log_type_t v48 = v19;
        log = v18;
        uint64_t v21 = v0[7];
        unint64_t v20 = v0[8];
        uint64_t v22 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 141558275;
        v0[4] = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v22 + 12) = 2081;
        sub_1000361E0(v21, v20);
        static String.Encoding.utf8.getter();
        uint64_t v23 = String.init(data:encoding:)();
        uint64_t v25 = v0[7];
        unint64_t v26 = v0[8];
        if (!v24) {
          uint64_t v23 = Data.hexString.getter();
        }
        uint64_t v27 = v23;
        unint64_t v28 = v24;
        sub_100037A24(v25, v26);
        uint64_t v30 = v0[7];
        unint64_t v29 = v0[8];
        v0[5] = sub_1008FA0F0(v27, v28, &v54);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100037A24(v30, v29);
        sub_100037A24(v30, v29);
        uint64_t v18 = log;
        _os_log_impl((void *)&_mh_execute_header, log, v48, "Deleting preferences for %{private,mask.hash}s", (uint8_t *)v22, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v32 = v0[7];
        unint64_t v31 = v0[8];
        sub_100037A24(v32, v31);
        sub_100037A24(v32, v31);
      }

      ((void (*)(void, uint64_t, void))v50)(v0[19], v51, v0[17]);
      if (qword_101636C90 != -1) {
        swift_once();
      }
      uint64_t v33 = v0[19];
      uint64_t v34 = v0[20];
      uint64_t v35 = v0[17];
      uint64_t v37 = v0[11];
      uint64_t v36 = v0[12];
      uint64_t v52 = v0[10];
      uint64_t v39 = v0[7];
      uint64_t v38 = v0[8];
      uint64_t v40 = sub_10000588C(&qword_101640C10);
      sub_100010324(v40, (uint64_t)qword_10170E2C0);
      v0[2] = v39;
      v0[3] = v38;
      sub_100C1D6B8((unint64_t *)&qword_10163CFE8, (void (*)(uint64_t))&type metadata accessor for Blob);
      == infix<A>(_:_:)();
      QueryType.filter(_:)();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v52);
      v10(v33, v35);
      QueryType.delete()();
      v10(v34, v35);
      Connection.run(_:)();
      uint64_t v42 = v0[23];
      uint64_t v41 = v0[24];
      uint64_t v43 = v0[21];
      uint64_t v44 = v0[22];
      uint64_t v46 = v0[7];
      unint64_t v45 = v0[8];
      swift_release();
      sub_100037A24(v46, v45);
      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v47(v42, v43);
      v47(v41, v43);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v11 = 2;
    *(unsigned char *)(v11 + 4) = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
  }
  return v12();
}

uint64_t sub_100C154E8(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  uint64_t v4 = sub_10000588C(&qword_10163CE68);
  v3[10] = v4;
  v3[11] = *(void *)(v4 - 8);
  v3[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Table();
  v3[13] = v5;
  v3[14] = *(void *)(v5 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  return _swift_task_switch(sub_100C1561C, v2, 0);
}

uint64_t sub_100C1561C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 72) + 112);
  *(void *)(v0 + 136) = v1;
  return _swift_task_switch(sub_100C15640, v1, 0);
}

uint64_t sub_100C15640()
{
  v0[18] = type metadata accessor for CloudStorageDatabase();
  v0[19] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[20] = v1;
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[17];
    return _swift_task_switch(sub_100C15760, v4, 0);
  }
}

uint64_t sub_100C15760()
{
  *(void *)(v0 + 168) = Database.readConnection.getter();
  return _swift_task_switch(sub_100C157D0, 0, 0);
}

uint64_t sub_100C157D0()
{
  if (!v0[21])
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v15 = 2;
    *(unsigned char *)(v15 + 4) = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_101636C20 != -1) {
    swift_once();
  }
  uint64_t v22 = v0 + 2;
  uint64_t v2 = v0[14];
  uint64_t v1 = v0[15];
  uint64_t v3 = v0[13];
  uint64_t v4 = sub_100010324(v3, (uint64_t)qword_10170E170);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v21(v1, v4, v3);
  if (qword_101636C28 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v9 = v0[11];
  uint64_t v10 = v0[12];
  uint64_t v19 = v0[10];
  uint64_t v20 = v0[20];
  uint64_t v11 = sub_10000588C(&qword_10163CE70);
  sub_100010324(v11, (uint64_t)qword_10170E188);
  type metadata accessor for UUID();
  == infix<A>(_:_:)();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v19);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v12(v5, v8);
  v0[5] = v8;
  v0[6] = &protocol witness table for Table;
  uint64_t v13 = sub_10001D958(v22);
  v21((uint64_t)v13, v6, v8);
  sub_100C1E964();
  uint64_t v14 = v0[16];
  if (v20)
  {
    v12(v0[16], v0[13]);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = (uint64_t (*)(void))v0[1];
    goto LABEL_11;
  }
  uint64_t v17 = v0[13];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v22);
  dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  swift_release();
  swift_release();
  v12(v14, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
LABEL_11:
  return v16();
}

uint64_t sub_100C15AE8(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_10000588C(&qword_10163CFF8);
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Table();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = swift_task_alloc();
  return _swift_task_switch(sub_100C15C1C, v2, 0);
}

uint64_t sub_100C15C1C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 88) + 112);
  *(void *)(v0 + 152) = v1;
  return _swift_task_switch(sub_100C15C40, v1, 0);
}

uint64_t sub_100C15C40()
{
  v0[20] = type metadata accessor for CloudStorageDatabase();
  v0[21] = sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  v0[22] = v1;
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = v0[19];
    return _swift_task_switch(sub_100C15D60, v4, 0);
  }
}

uint64_t sub_100C15D60()
{
  *(void *)(v0 + 184) = Database.readConnection.getter();
  return _swift_task_switch(sub_100C15DD0, 0, 0);
}

uint64_t sub_100C15DD0()
{
  if (!v0[23])
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v16 = 2;
    *(unsigned char *)(v16 + 4) = 1;
    swift_willThrow();
    goto LABEL_9;
  }
  if (qword_101636C20 != -1) {
    swift_once();
  }
  unint64_t v26 = v0 + 2;
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = sub_100010324(v3, (uint64_t)qword_10170E170);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v25(v1, v4, v3);
  if (qword_101636C90 != -1) {
    swift_once();
  }
  uint64_t v5 = v0[17];
  uint64_t v22 = v0[18];
  uint64_t v7 = v0[15];
  uint64_t v6 = v0[16];
  uint64_t v8 = v0[13];
  uint64_t v9 = v0[14];
  uint64_t v23 = v0[12];
  uint64_t v24 = v0[22];
  uint64_t v11 = v0[9];
  uint64_t v10 = v0[10];
  uint64_t v12 = sub_10000588C(&qword_101640C10);
  sub_100010324(v12, (uint64_t)qword_10170E2C0);
  v0[7] = v11;
  v0[8] = v10;
  sub_100C1D6B8((unint64_t *)&qword_10163CFE8, (void (*)(uint64_t))&type metadata accessor for Blob);
  == infix<A>(_:_:)();
  QueryType.filter(_:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v23);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v13(v5, v7);
  v0[5] = v7;
  v0[6] = &protocol witness table for Table;
  uint64_t v14 = sub_10001D958(v26);
  v25((uint64_t)v14, v22, v7);
  sub_100C1E964();
  uint64_t v15 = v0[18];
  if (v24)
  {
    v13(v0[18], v0[15]);
    swift_release();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v26);
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
  uint64_t v19 = v0[15];
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v26);
  uint64_t v20 = dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
  swift_release();
  swift_release();
  v13(v15, v19);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(uint64_t))v0[1];
  return v21(v20);
}

uint64_t sub_100C16150()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EAF8);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10170EAF8);
  if (qword_101636C98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170E2D8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100C16218()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CloudStorageStore.State(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (long long *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100C1E334(v1, (uint64_t)v8);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(char *, long long *, uint64_t))(v3 + 32))(v5, v8, v2);
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      _StringGuts.grow(_:)(25);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD00000000000002ELL;
      unint64_t v19 = 0x8000000101416A30;
      sub_100C1D6B8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v10);
      swift_bridgeObjectRelease();
      unint64_t v11 = v18;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    else
    {
      return 0x6E776F6E6B6E752ELL;
    }
  }
  else
  {
    sub_10001CEB0(v8, (uint64_t)&v18);
    unint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    v12._countAndFlagsBits = 0x65696669646F6D2ELL;
    v12._object = (void *)0xEA00000000002864;
    String.append(_:)(v12);
    sub_10000588C(&qword_10164E8D0);
    _print_unlocked<A, B>(_:_:)();
    v13._countAndFlagsBits = 41;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    unint64_t v11 = v16;
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)&v18);
  }
  return v11;
}

uint64_t sub_100C164A8()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_100C1DFF4(v0 + OBJC_IVAR____TtC12searchpartyd17CloudStorageStore_state, type metadata accessor for CloudStorageStore.State);
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_100C1651C()
{
  return type metadata accessor for CloudStorageStore(0);
}

uint64_t type metadata accessor for CloudStorageStore(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10165B708);
}

uint64_t sub_100C16544()
{
  uint64_t result = type metadata accessor for CloudStorageStore.State(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CloudStorageStore.State(uint64_t a1)
{
  return sub_1000F4EA4(a1, qword_10165B850);
}

uint64_t *sub_100C16624(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 3) = v8;
      (**(void (***)(uint64_t *, uint64_t *))(v8 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100C16774(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for UUID();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  else if (!result)
  {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(a1);
  }
  return result;
}

uint64_t sub_100C16814(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100C16920(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100C1DFF4((uint64_t)a1, type metadata accessor for CloudStorageStore.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for UUID();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = a2[3];
      a1[3] = v7;
      a1[4] = a2[4];
      (**(void (***)(void *, void *))(v7 - 8))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_100C16A54(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100C1DFF4((uint64_t)a1, type metadata accessor for CloudStorageStore.State);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100C16B30()
{
  v2[4] = "(";
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_100C16BDC(uint64_t a1)
{
  uint64_t v36 = a1;
  uint64_t v1 = sub_10000588C(&qword_1016609B0);
  uint64_t v38 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v37 = v2;
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)&v28 - v12;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    uint64_t v40 = v13;
    UUID.init()();
    uint64_t v30 = v3;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v32(v11, v13, v7);
    uint64_t v28 = v1;
    unint64_t v29 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v35 = v8;
    uint64_t v39 = v6;
    uint64_t v31 = v16 | 7;
    uint64_t v17 = swift_allocObject();
    uint64_t v18 = v38;
    *(void *)(v17 + 16) = v15;
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v33 = v8 + 32;
    uint64_t v34 = v19;
    v19((char *)(v17 + ((v16 + 24) & ~v16)), v11, v7);
    swift_retain();
    uint64_t v20 = v28;
    uint64_t v21 = v36;
    AsyncStream.Continuation.onTermination.setter();
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v39, 1, 1, v22);
    uint64_t v23 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v30, v21, v20);
    uint64_t v24 = v29;
    v32(v29, v40, v7);
    unint64_t v25 = (*(unsigned __int8 *)(v18 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    unint64_t v26 = (v37 + v16 + v25) & ~v16;
    uint64_t v27 = (char *)swift_allocObject();
    *((void *)v27 + 2) = 0;
    *((void *)v27 + 3) = 0;
    *((void *)v27 + 4) = v15;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v27[v25], v23, v20);
    v34(&v27[v26], v24, v7);
    swift_retain();
    sub_1008F5E44((uint64_t)v39, (uint64_t)&unk_10165B988, (uint64_t)v27);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v40, v7);
  }
  return result;
}

uint64_t sub_100C16FC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_10000588C(&qword_10164DBB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
  unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  Swift::String v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = 0;
  *((void *)v13 + 3) = 0;
  *((void *)v13 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v13[v12], (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_retain();
  sub_1008F5E44((uint64_t)v10, (uint64_t)&unk_10165B998, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_100C1719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_100C171BC, a4, 0);
}

uint64_t sub_100C171BC()
{
  sub_100C1721C(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1721C(uint64_t a1)
{
  uint64_t v3 = sub_10000588C(&qword_10163CB98);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v28 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v23 - v10;
  if (qword_101637008 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100010324(v12, (uint64_t)qword_10170EAF8);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v27(v11, a1, v6);
  Swift::String v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    unint64_t v25 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = v1;
    v30[0] = v17;
    uint64_t v24 = a1;
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v23 = v16 + 4;
    sub_100C1D6B8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v29 = sub_1008FA0F0(v18, v19, v30);
    a1 = v24;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Removing stateContinuation for %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v25;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  }

  uint64_t v20 = (uint64_t)v28;
  v27(v28, a1, v6);
  uint64_t v21 = sub_10000588C(&qword_1016609B0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
  swift_beginAccess();
  sub_10015FE1C((uint64_t)v5, v20);
  return swift_endAccess();
}

uint64_t sub_100C175C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  void v6[5] = a4;
  uint64_t v8 = sub_10000588C(&qword_10165B940);
  v6[8] = v8;
  v6[9] = *(void *)(v8 - 8);
  v6[10] = swift_task_alloc();
  type metadata accessor for CloudStorageStore.State(0);
  v6[11] = swift_task_alloc();
  v6[12] = swift_task_alloc();
  return _swift_task_switch(sub_100C176D0, a4, 0);
}

uint64_t sub_100C176D0()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[5];
  sub_100C17864(v0[6], v0[7]);
  uint64_t v3 = v2 + OBJC_IVAR____TtC12searchpartyd17CloudStorageStore_state;
  swift_beginAccess();
  sub_100C1E334(v3, v1);
  return _swift_task_switch(sub_100C17778, 0, 0);
}

uint64_t sub_100C17778()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[9];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[8];
  sub_100C1E334(v1, v0[11]);
  sub_10000588C(&qword_1016609B0);
  AsyncStream.Continuation.yield(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100C1DFF4(v1, type metadata accessor for CloudStorageStore.State);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100C17864(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000588C(&qword_10163CB98);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v32 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  Swift::String v13 = (char *)v26 - v12;
  if (qword_101637008 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100010324(v14, (uint64_t)qword_10170EAF8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v31 = a2;
  v30(v13, a2, v8);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v7;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = v2;
    v34[0] = v19;
    uint64_t v27 = a1;
    *(_DWORD *)uint64_t v18 = 136446210;
    v26[1] = v18 + 4;
    sub_100C1D6B8((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v33 = sub_1008FA0F0(v20, v21, v34);
    a1 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Storing stateContinuation for %{public}s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v7 = v28;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }

  uint64_t v22 = (uint64_t)v32;
  v30(v32, v31, v8);
  uint64_t v23 = sub_10000588C(&qword_1016609B0);
  uint64_t v24 = *(void *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v7, a1, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v7, 0, 1, v23);
  swift_beginAccess();
  sub_10015FE1C((uint64_t)v7, v22);
  return swift_endAccess();
}

uint64_t sub_100C17C4C(uint64_t a1)
{
  v2[14] = a1;
  v2[15] = v1;
  uint64_t v3 = sub_10000588C(&qword_10165B940);
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v4 = sub_10000588C(&qword_1016609B0);
  v2[19] = v4;
  v2[20] = *(void *)(v4 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  type metadata accessor for CloudStorageStore.State(0);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  return _swift_task_switch(sub_100C17DBC, v1, 0);
}

uint64_t sub_100C17DBC()
{
  uint64_t v53 = v0;
  uint64_t v1 = v0 + 14;
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[24];
  uint64_t v4 = v0[15] + OBJC_IVAR____TtC12searchpartyd17CloudStorageStore_state;
  swift_beginAccess();
  sub_100C1E334(v4, v3);
  LOBYTE(v2) = sub_100C1D700(v3, v2);
  sub_100C1DFF4(v3, type metadata accessor for CloudStorageStore.State);
  if ((v2 & 1) == 0)
  {
    if (qword_101637008 != -1) {
LABEL_38:
    }
      swift_once();
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[14];
    uint64_t v7 = type metadata accessor for Logger();
    sub_100010324(v7, (uint64_t)qword_10170EAF8);
    sub_100C1E334(v6, v5);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      os_log_type_t type = v9;
      uint64_t v10 = v0[24];
      uint64_t v44 = v0[23];
      log = v8;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315394;
      uint64_t v52 = v47;
      sub_100C1E334(v4, v10);
      uint64_t v12 = sub_100C16218();
      unint64_t v14 = v13;
      sub_100C1DFF4(v10, type metadata accessor for CloudStorageStore.State);
      v0[12] = sub_1008FA0F0(v12, v14, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      uint64_t v15 = sub_100C16218();
      v0[13] = sub_1008FA0F0(v15, v16, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100C1DFF4(v44, type metadata accessor for CloudStorageStore.State);
      _os_log_impl((void *)&_mh_execute_header, log, type, "State: %s -> %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v17 = v0[23];
      swift_release_n();
      sub_100C1DFF4(v17, type metadata accessor for CloudStorageStore.State);
    }
    uint64_t v18 = v0;
    uint64_t v19 = v0[15];
    uint64_t v51 = v18;
    uint64_t v20 = v18[14];
    swift_beginAccess();
    sub_100C1E398(v20, v4);
    swift_endAccess();
    unint64_t v21 = (uint64_t *)(v19 + OBJC_IVAR____TtC12searchpartyd17CloudStorageStore_stateContinuations);
    swift_beginAccess();
    uint64_t v22 = *v21;
    uint64_t v23 = *(void *)(*v21 + 16);
    if (v23)
    {
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 134217984;
        *(v1 - 3) = v23;
        v1 -= 3;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Publishing State change event to %ld subscribers", v26, 0xCu);
        swift_slowDealloc();
      }

      uint64_t v22 = *v21;
    }
    uint64_t v0 = (void *)v51[20];
    uint64_t v43 = v22 + 64;
    uint64_t v27 = -1;
    uint64_t v28 = -1 << *(unsigned char *)(v22 + 32);
    if (-v28 < 64) {
      uint64_t v27 = ~(-1 << -(char)v28);
    }
    unint64_t v29 = v27 & *(void *)(v22 + 64);
    os_log_type_t v48 = (void (**)(uint64_t, uint64_t))(v51[17] + 8);
    int64_t v45 = (unint64_t)(63 - v28) >> 6;
    uint64_t v50 = v22;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      if (v29)
      {
        unint64_t v30 = __clz(__rbit64(v29));
        v29 &= v29 - 1;
        unint64_t v31 = v30 | (v4 << 6);
      }
      else
      {
        int64_t v38 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        if (v38 >= v45) {
          goto LABEL_32;
        }
        unint64_t v39 = *(void *)(v43 + 8 * v38);
        ++v4;
        if (!v39)
        {
          uint64_t v4 = v38 + 1;
          if (v38 + 1 >= v45) {
            goto LABEL_32;
          }
          unint64_t v39 = *(void *)(v43 + 8 * v4);
          if (!v39)
          {
            uint64_t v4 = v38 + 2;
            if (v38 + 2 >= v45) {
              goto LABEL_32;
            }
            unint64_t v39 = *(void *)(v43 + 8 * v4);
            if (!v39)
            {
              uint64_t v4 = v38 + 3;
              if (v38 + 3 >= v45) {
                goto LABEL_32;
              }
              unint64_t v39 = *(void *)(v43 + 8 * v4);
              if (!v39)
              {
                int64_t v40 = v38 + 4;
                if (v40 >= v45)
                {
LABEL_32:
                  swift_release();
                  uint64_t v0 = v51;
                  break;
                }
                unint64_t v39 = *(void *)(v43 + 8 * v40);
                if (!v39)
                {
                  while (1)
                  {
                    uint64_t v4 = v40 + 1;
                    if (__OFADD__(v40, 1)) {
                      goto LABEL_37;
                    }
                    if (v4 >= v45) {
                      goto LABEL_32;
                    }
                    unint64_t v39 = *(void *)(v43 + 8 * v4);
                    ++v40;
                    if (v39) {
                      goto LABEL_31;
                    }
                  }
                }
                uint64_t v4 = v40;
              }
            }
          }
        }
LABEL_31:
        unint64_t v29 = (v39 - 1) & v39;
        unint64_t v31 = __clz(__rbit64(v39)) + (v4 << 6);
      }
      uint64_t v32 = v51[24];
      uint64_t v33 = v51[21];
      uint64_t v1 = (void *)v51[22];
      uint64_t v35 = v51[18];
      uint64_t v34 = v51[19];
      uint64_t v36 = v51[16];
      uint64_t v37 = v51[14];
      ((void (*)(void *, unint64_t, uint64_t))v0[2])(v1, *(void *)(v50 + 56) + v0[9] * v31, v34);
      ((void (*)(uint64_t, void *, uint64_t))v0[4])(v33, v1, v34);
      sub_100C1E334(v37, v32);
      AsyncStream.Continuation.yield(_:)();
      (*v48)(v35, v36);
      ((void (*)(uint64_t, uint64_t))v0[1])(v33, v34);
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_100C18450()
{
  return _swift_task_switch(sub_100C1846C, v0, 0);
}

uint64_t sub_100C1846C()
{
  sub_1000B6ED0(0, 1, 0);
  unint64_t v2 = _swiftEmptyArrayStorage[2];
  unint64_t v1 = _swiftEmptyArrayStorage[3];
  if (v2 >= v1 >> 1) {
    sub_1000B6ED0(v1 > 1, v2 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v2 + 1;
  uint64_t v3 = &_swiftEmptyArrayStorage[2 * v2];
  v3[4] = 0xD000000000000016;
  v3[5] = 0x80000001013F36F0;
  uint64_t v4 = sub_101158614((uint64_t)_swiftEmptyArrayStorage);
  swift_release();
  uint64_t v5 = sub_100711450(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(uint64_t (**)(void *))(v0 + 8);
  return v6(v5);
}

uint64_t sub_100C18570(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for CloudKitCoordinator.Deletion();
  v2[5] = v3;
  void v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CloudKitStateChange();
  v2[9] = v4;
  v2[10] = *(void *)(v4 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_100C1869C, v1, 0);
}

uint64_t sub_100C1869C()
{
  int64_t v38 = v0;
  if (qword_101637008 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[9];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170EAF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[10];
  uint64_t v9 = v0[11];
  uint64_t v11 = v0[9];
  uint64_t v36 = v0;
  if (v8)
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v37 = (char *)swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136315138;
    sub_100C1D6B8(&qword_10165B968, (void (*)(uint64_t))&type metadata accessor for CloudKitStateChange);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[2] = sub_1008FA0F0(v13, v14, (uint64_t *)&v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "ingest:stateChange %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }

  uint64_t v15 = CloudKitStateChange.deleted.getter();
  int64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = v36;
    uint64_t v18 = v36[6];
    uint64_t v37 = (char *)_swiftEmptyArrayStorage;
    sub_1000B8578(0, v16, 0);
    uint64_t v19 = *(void (**)(uint64_t, unint64_t, uint64_t))(v18 + 16);
    v18 += 16;
    unint64_t v34 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    uint64_t v35 = v19;
    unint64_t v20 = v15 + v34;
    uint64_t v33 = *(void *)(v18 + 56);
    unint64_t v21 = (void (**)(uint64_t, uint64_t))(v18 - 8);
    uint64_t v22 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v23 = v37;
    do
    {
      uint64_t v24 = v17[7];
      uint64_t v25 = v17[5];
      v35(v24, v20, v25);
      CloudKitCoordinator.Deletion.recordType.getter();
      CloudKitCoordinator.Deletion.recordID.getter();
      CloudKitCoordinator.Deletion.init(recordType:recordID:)();
      (*v21)(v24, v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B8578(0, *((void *)v23 + 2) + 1, 1);
        uint64_t v23 = v37;
      }
      unint64_t v27 = *((void *)v23 + 2);
      unint64_t v26 = *((void *)v23 + 3);
      uint64_t v17 = v36;
      if (v27 >= v26 >> 1)
      {
        sub_1000B8578(v26 > 1, v27 + 1, 1);
        uint64_t v23 = v37;
      }
      uint64_t v28 = v36[8];
      uint64_t v29 = v36[5];
      *((void *)v23 + 2) = v27 + 1;
      (*v22)(&v23[v34 + v27 * v33], v28, v29);
      uint64_t v37 = v23;
      v20 += v33;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = (char *)_swiftEmptyArrayStorage;
    uint64_t v17 = v36;
  }
  v17[12] = v23;
  uint64_t v30 = CloudKitStateChange.modified.getter();
  v17[13] = v30;
  unint64_t v31 = (void *)swift_task_alloc();
  v17[14] = v31;
  *unint64_t v31 = v17;
  v31[1] = sub_100C18AD8;
  return sub_100C18D2C((uint64_t)v23, v30);
}

uint64_t sub_100C18AD8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_100C18C98;
  }
  else {
    uint64_t v4 = sub_100C18C04;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C18C04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C18C98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C18D2C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  v3[5] = *v2;
  uint64_t v4 = type metadata accessor for Connection.TransactionMode();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100C18E18, v2, 0);
}

uint64_t sub_100C18E18()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 112);
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_100C18E3C, v1, 0);
}

uint64_t sub_100C18E3C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  type metadata accessor for CloudStorageDatabase();
  sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  *(void *)(v0 + 80) = Database.writeConnection.getter();
  return _swift_task_switch(sub_100C18EFC, v1, 0);
}

uint64_t sub_100C18EFC()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v3 = v0[7];
    uint64_t v2 = v0[8];
    uint64_t v4 = v0[4];
    uint64_t v12 = v0[5];
    uint64_t v13 = v0[6];
    uint64_t v6 = v0[2];
    uint64_t v5 = v0[3];
    uint64_t v7 = sub_101158614((uint64_t)&off_1015A59C0);
    swift_arrayDestroy();
    BOOL v8 = (void *)swift_task_alloc();
    v8[2] = v6;
    v8[3] = v4;
    v8[4] = v7;
    v8[5] = v1;
    v8[6] = v5;
    v8[7] = v12;
    (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for Connection.TransactionMode.deferred(_:), v13);
    Connection.transaction(_:block:)();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    sub_1001A149C();
    swift_allocError();
    *(_DWORD *)uint64_t v10 = 2;
    *(unsigned char *)(v10 + 4) = 1;
    swift_willThrow();
  }
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C190B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v166 = a6;
  unint64_t v148 = a5;
  uint64_t v177 = a4;
  uint64_t v178 = a3;
  uint64_t v188 = a2;
  uint64_t v167 = type metadata accessor for Insert();
  uint64_t v145 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v168 = (uint64_t)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10000588C(&qword_10164DBB0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  char v165 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v144 - v11;
  uint64_t v164 = sub_10000588C(&qword_10163CE68);
  unint64_t v199 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  unint64_t v163 = (char *)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = type metadata accessor for Delete();
  int v196 = *(void (***)(uint64_t, char *, uint64_t))(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v184 = (char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10000588C(&qword_101638CF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  v159 = (char *)&v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = v21;
  __chkstk_darwin(v20);
  unint64_t v176 = (char *)&v144 - v22;
  uint64_t v23 = sub_10000588C(&qword_10165B908);
  __chkstk_darwin(v23 - 8);
  v185 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Table();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v169 = (char *)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v190 = (uint64_t)&v144 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v162 = (void (**)(char *, uint64_t, uint64_t))((char *)&v144 - v32);
  __chkstk_darwin(v31);
  v197 = (void (**)(char *, uint64_t, uint64_t))((char *)&v144 - v33);
  uint64_t v195 = type metadata accessor for CloudKitCoordinator.Deletion();
  uint64_t v34 = __chkstk_darwin(a1);
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v36 = __chkstk_darwin(v35);
  v200 = (char *)&v144 - v40;
  uint64_t v41 = *(void *)(a1 + 16);
  uint64_t v187 = v25;
  uint64_t v146 = v26;
  if (v41)
  {
    v156 = v39;
    uint64_t v157 = v38;
    uint64_t v151 = v12;
    uint64_t v43 = *(void (**)(const char *, unint64_t, uint64_t))(v37 + 16);
    unint64_t v42 = v37 + 16;
    uint64_t v198 = v43;
    unint64_t v44 = v36 + ((*(unsigned __int8 *)(v42 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 64));
    uint64_t v194 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
    uint64_t v183 = (void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16);
    unint64_t v193 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    v174 = (void (**)(char *, uint64_t, uint64_t))(v26 + 32);
    uint64_t v173 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
    int v172 = (void (**)(void, void, void))(v19 + 32);
    uint64_t v155 = (void (**)(char *, uint64_t))(v199 + 8);
    uint64_t v181 = (void (**)(void (**)(char *, uint64_t, uint64_t), uint64_t))(v26 + 8);
    uint64_t v150 = v19 + 16;
    int64_t v152 = (void (**)(char *, uint64_t))(v196 + 1);
    uint64_t v153 = (void (**)(char *, uint64_t))(v19 + 8);
    unint64_t v199 = v42;
    v191 = *(char **)(v42 + 56);
    *(void *)&long long v192 = v42 - 8;
    uint64_t v144 = v36;
    swift_bridgeObjectRetain();
    unint64_t v186 = (unint64_t)"stateContinuations";
    unint64_t v182 = 0x8000000101416A10;
    *(void *)&long long v45 = 136315138;
    long long v154 = v45;
    uint64_t v147 = (char *)&type metadata for Any + 8;
    uint64_t v149 = (char *)&type metadata for () + 8;
    uint64_t v189 = v18;
    uint64_t v175 = v17;
    uint64_t v158 = v19;
    uint64_t v46 = v195;
    uint64_t v47 = (uint64_t)v185;
    os_log_type_t v48 = v200;
    do
    {
      v198(v48, v44, v46);
      if (CloudKitCoordinator.Deletion.recordType.getter() == 0xD00000000000001CLL && v49 == v182
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        if (qword_101636C18 != -1) {
          swift_once();
        }
        uint64_t v50 = sub_100010324(v25, (uint64_t)qword_10170E158);
        (*v183)(v47, v50, v25);
        uint64_t v51 = 0;
      }
      else
      {
        uint64_t v51 = 1;
      }
      os_log_type_t v48 = v200;
      (*v194)(v47, v51, 1, v25);
      swift_bridgeObjectRelease();
      if ((*v193)(v47, 1, v25) == 1)
      {
        sub_10001DAB4(v47, &qword_10165B908);
        uint64_t v52 = CloudKitCoordinator.Deletion.recordType.getter();
        char v54 = sub_100DC6054(v52, v53, v178);
        swift_bridgeObjectRelease();
        if (v54)
        {
          uint64_t v46 = v195;
          (*(void (**)(const char *, uint64_t))v192)(v48, v195);
        }
        else
        {
          uint64_t v46 = v195;
          if (qword_101637008 != -1) {
            swift_once();
          }
          uint64_t v55 = type metadata accessor for Logger();
          sub_100010324(v55, (uint64_t)qword_10170EAF8);
          uint64_t v56 = v157;
          os_log_type_t v48 = v200;
          v198(v157, (unint64_t)v200, v46);
          uint64_t v57 = Logger.logObject.getter();
          os_log_type_t v58 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v57, v58))
          {
            uint64_t v59 = swift_slowAlloc();
            uint64_t v205 = (void (*)(void, void, void))swift_slowAlloc();
            *(_DWORD *)uint64_t v59 = v154;
            uint64_t v60 = CloudKitCoordinator.Deletion.recordType.getter();
            *(void *)(v59 + 4) = sub_1008FA0F0(v60, v61, (uint64_t *)&v205);
            swift_bridgeObjectRelease();
            int v196 = (void (**)(uint64_t, char *, uint64_t))v44;
            uint64_t v62 = *(void (**)(const char *, uint64_t))v192;
            (*(void (**)(const char *, uint64_t))v192)(v56, v46);
            _os_log_impl((void *)&_mh_execute_header, v57, v58, "Unable to find table for %s", (uint8_t *)v59, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v25 = v187;
            swift_slowDealloc();

            os_log_type_t v48 = v200;
            v62(v200, v46);
            unint64_t v44 = (unint64_t)v196;
          }
          else
          {

            unint64_t v100 = *(void (**)(const char *, uint64_t))v192;
            (*(void (**)(const char *, uint64_t))v192)(v56, v46);
            v100(v48, v46);
          }
          uint64_t v47 = (uint64_t)v185;
          uint64_t v18 = v189;
        }
      }
      else
      {
        (*v174)((char *)v197, v47, v25);
        uint64_t v63 = (void *)CloudKitCoordinator.Deletion.recordID.getter();
        id v64 = [v63 recordName];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v65 = (uint64_t)v175;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        int v66 = (*v173)(v65, 1, v18);
        int v196 = (void (**)(uint64_t, char *, uint64_t))v44;
        if (v66 == 1)
        {
          sub_10001DAB4(v65, &qword_101638CF0);
          uint64_t v46 = v195;
          if (qword_101637008 != -1) {
            swift_once();
          }
          uint64_t v67 = type metadata accessor for Logger();
          sub_100010324(v67, (uint64_t)qword_10170EAF8);
          uint64_t v68 = v156;
          os_log_type_t v48 = v200;
          v198(v156, (unint64_t)v200, v46);
          uint64_t v69 = Logger.logObject.getter();
          os_log_type_t v70 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = swift_slowAlloc();
            uint64_t v171 = (void (*)(void, void, void))swift_slowAlloc();
            uint64_t v205 = v171;
            *(_DWORD *)uint64_t v71 = v154;
            uint64_t v72 = (void *)CloudKitCoordinator.Deletion.recordID.getter();
            id v73 = [v72 recordName];

            uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v180 = v41;
            unint64_t v76 = v75;

            uint64_t v25 = v187;
            *(void *)(v71 + 4) = sub_1008FA0F0(v74, v76, (uint64_t *)&v205);
            swift_bridgeObjectRelease();
            uint64_t v77 = *(void (**)(const char *, uint64_t))v192;
            (*(void (**)(const char *, uint64_t))v192)(v68, v46);
            _os_log_impl((void *)&_mh_execute_header, v69, v70, "Record name is not a UUID: %s", (uint8_t *)v71, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v18 = v189;
            swift_slowDealloc();

            (*v181)(v197, v25);
            v77(v48, v46);
            uint64_t v41 = v180;
          }
          else
          {

            id v101 = *(void (**)(const char *, uint64_t))v192;
            (*(void (**)(const char *, uint64_t))v192)(v68, v46);
            (*v181)(v197, v25);
            v101(v48, v46);
          }
          uint64_t v47 = (uint64_t)v185;
          unint64_t v44 = (unint64_t)v196;
        }
        else
        {
          unint64_t v78 = v176;
          uint64_t v171 = *v172;
          v171(v176, v65, v18);
          uint64_t v79 = v158;
          if (qword_101636C28 != -1) {
            swift_once();
          }
          uint64_t v80 = sub_10000588C(&qword_10163CE70);
          sub_100010324(v80, (uint64_t)qword_10170E188);
          uint64_t v81 = v163;
          == infix<A>(_:_:)();
          uint64_t v82 = v162;
          QueryType.filter(_:)();
          (*v155)(v81, v164);
          QueryType.delete()();
          uint64_t v83 = *v181;
          (*v181)(v82, v25);
          uint64_t v85 = CloudKitCoordinator.Deletion.recordType.getter();
          uint64_t v86 = v84;
          if ((v85 != 0xD00000000000001CLL || v84 != (v186 | 0x8000000000000000))
            && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            sub_100C1E054();
            swift_allocError();
            *uint64_t v143 = v85;
            v143[1] = v86;
            swift_willThrow();
            (*v152)(v184, v161);
            (*v153)(v78, v189);
            v83(v197, v25);
            (*(void (**)(const char *, uint64_t))v192)(v200, v195);
            return swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          unint64_t v87 = v184;
          uint64_t v88 = v179;
          Connection.run(_:)();
          uint64_t v179 = v88;
          if (v88)
          {
            (*v152)(v87, v161);
            (*v153)(v78, v189);
            v83(v197, v25);
            (*(void (**)(const char *, uint64_t))v192)(v200, v195);
            return swift_bridgeObjectRelease();
          }
          char v170 = v83;
          uint64_t v180 = v41;
          uint64_t v89 = type metadata accessor for TaskPriority();
          uint64_t v90 = v189;
          unint64_t v91 = v78;
          uint64_t v92 = *(void *)(v89 - 8);
          uint64_t v93 = (uint64_t)v151;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v151, 1, 1, v89);
          uint64_t v94 = v159;
          (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v159, v91, v90);
          uint64_t v95 = sub_100C1D6B8(&qword_10165B918, (void (*)(uint64_t))type metadata accessor for CloudStorageStore);
          unint64_t v96 = (*(unsigned __int8 *)(v79 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
          uint64_t v97 = (void *)swift_allocObject();
          uint64_t v98 = v188;
          v97[2] = v188;
          v97[3] = v95;
          v97[4] = v98;
          v171((char *)v97 + v96, v94, v90);
          int v99 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v93, 1, v89);
          swift_retain_n();
          if (v99 == 1)
          {
            sub_10001DAB4(v93, &qword_10164DBB0);
          }
          else
          {
            TaskPriority.rawValue.getter();
            (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v89);
          }
          unint64_t v44 = (unint64_t)v196;
          uint64_t v25 = v187;
          uint64_t v102 = v184;
          uint64_t v103 = v176;
          if (v97[2])
          {
            swift_getObjectType();
            swift_unknownObjectRetain();
            uint64_t v104 = dispatch thunk of Actor.unownedExecutor.getter();
            uint64_t v106 = v105;
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v104 = 0;
            uint64_t v106 = 0;
          }
          uint64_t v107 = swift_allocObject();
          *(void *)(v107 + 16) = &unk_10165B930;
          *(void *)(v107 + 24) = v97;
          if (v106 | v104)
          {
            uint64_t v201 = 0;
            uint64_t v202 = 0;
            uint64_t v203 = v104;
            uint64_t v204 = v106;
          }
          uint64_t v47 = (uint64_t)v185;
          swift_task_create();
          swift_release();
          (*v152)(v102, v161);
          uint64_t v18 = v189;
          (*v153)(v103, v189);
          v170(v197, v25);
          os_log_type_t v48 = v200;
          uint64_t v46 = v195;
          (*(void (**)(const char *, uint64_t))v192)(v200, v195);
          uint64_t v41 = v180;
        }
      }
      v44 += (unint64_t)v191;
      --v41;
    }
    while (v41);
    swift_bridgeObjectRelease();
  }
  unint64_t v108 = v148;
  uint64_t v109 = v179;
  if (v148 >> 62) {
    goto LABEL_79;
  }
  uint64_t v110 = *(void *)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_45:
  if (v110)
  {
    unint64_t v199 = v108 & 0xC000000000000001;
    v197 = (void (**)(char *, uint64_t, uint64_t))(v146 + 16);
    int v196 = (void (**)(uint64_t, char *, uint64_t))(v146 + 32);
    unint64_t v193 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 8);
    uint64_t v194 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v146 + 8);
    uint64_t v112 = 4;
    v200 = "stateContinuations";
    uint64_t v195 = 0x8000000101416A10;
    *(void *)&long long v111 = 136315138;
    long long v192 = v111;
    v191 = (char *)&type metadata for Any + 8;
    uint64_t v198 = (void (*)(const char *, unint64_t, uint64_t))v110;
    while (1)
    {
      if (v199) {
        id v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v113 = *(id *)(v108 + 8 * v112);
      }
      os_log_type_t v114 = v113;
      uint64_t v115 = v112 - 3;
      if (__OFADD__(v112 - 4, 1))
      {
        __break(1u);
LABEL_79:
        swift_bridgeObjectRetain();
        uint64_t v110 = _CocoaArrayWrapper.endIndex.getter();
        goto LABEL_45;
      }
      if (CKRecord.recordType.getter() == 0xD00000000000001CLL && v116 == v195) {
        break;
      }
      char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v117) {
        goto LABEL_55;
      }
      uint64_t v131 = CKRecord.recordType.getter();
      char v133 = sub_100DC6054(v131, v132, v178);
      swift_bridgeObjectRelease();
      if (v133)
      {

        goto LABEL_63;
      }
      uint64_t v179 = v109;
      if (qword_101637008 != -1) {
        swift_once();
      }
      uint64_t v134 = type metadata accessor for Logger();
      sub_100010324(v134, (uint64_t)qword_10170EAF8);
      id v135 = v114;
      int v136 = Logger.logObject.getter();
      os_log_type_t v137 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v136, v137))
      {
        uint64_t v138 = swift_slowAlloc();
        uint64_t v205 = (void (*)(void, void, void))swift_slowAlloc();
        *(_DWORD *)uint64_t v138 = v192;
        uint64_t v139 = CKRecord.recordType.getter();
        *(void *)(v138 + 4) = sub_1008FA0F0(v139, v140, (uint64_t *)&v205);

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v136, v137, "Unable to find table for %s", (uint8_t *)v138, 0xCu);
        swift_arrayDestroy();
        uint64_t v25 = v187;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v109 = v179;
      unint64_t v108 = v148;
LABEL_62:
      uint64_t v110 = (uint64_t)v198;
LABEL_63:
      ++v112;
      if (v115 == v110) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
LABEL_55:
    if (qword_101636C18 != -1) {
      swift_once();
    }
    uint64_t v118 = sub_100010324(v25, (uint64_t)qword_10170E158);
    int64_t v119 = v169;
    (*v197)(v169, v118, v25);
    (*v196)(v190, v119, v25);
    uint64_t v121 = CKRecord.recordType.getter();
    uint64_t v122 = v120;
    if ((v121 != 0xD00000000000001CLL || v120 != ((unint64_t)v200 | 0x8000000000000000))
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      sub_100C1E054();
      swift_allocError();
      *uint64_t v141 = v121;
      v141[1] = v122;
      swift_willThrow();
LABEL_75:

      ((void (*)(uint64_t, uint64_t))*v194)(v190, v25);
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v123 = v168;
    sub_100C1ACDC(v190, v114, v168);
    if (v109) {
      goto LABEL_75;
    }
    Connection.run(_:)();
    uint64_t v109 = 0;
    uint64_t v124 = type metadata accessor for TaskPriority();
    uint64_t v125 = v165;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v165, 1, 1, v124);
    uint64_t v126 = sub_100C1D6B8(&qword_10165B918, (void (*)(uint64_t))type metadata accessor for CloudStorageStore);
    uint64_t v127 = (void *)swift_allocObject();
    uint64_t v128 = v188;
    v127[2] = v188;
    v127[3] = v126;
    v127[4] = v114;
    v127[5] = v128;
    v127[6] = v166;
    swift_retain_n();
    id v129 = v114;
    uint64_t v130 = (uint64_t)v125;
    uint64_t v25 = v187;
    sub_100885EBC(v130, (uint64_t)&unk_10165B920, (uint64_t)v127);

    swift_release();
    ((void (*)(uint64_t, uint64_t))*v193)(v123, v167);
    ((void (*)(uint64_t, uint64_t))*v194)(v190, v25);
    goto LABEL_62;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100C1AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for CloudStorageStore.State(0);
  v5[5] = swift_task_alloc();
  return _swift_task_switch(sub_100C1AABC, a4, 0);
}

uint64_t sub_100C1AABC()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[3];
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v1, v2, v3);
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C1ABB0;
  uint64_t v5 = v0[5];
  return sub_100C17C4C(v5);
}

uint64_t sub_100C1ABB0()
{
  uint64_t v1 = *(void *)(*v0 + 40);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_100C1DFF4(v1, type metadata accessor for CloudStorageStore.State);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void sub_100C1ACDC(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for OnConflict();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for LocalFindableAccessoryRecord();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C95CC(a2, v13);
  if (!v3)
  {
    uint64_t v49 = a3;
    uint64_t v51 = v10;
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    type metadata accessor for PeripheralConnectionMaterial(0);
    sub_100C1D6B8((unint64_t *)&unk_10163AFE0, (void (*)(uint64_t))type metadata accessor for PeripheralConnectionMaterial);
    *(void *)&long long v48 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    *((void *)&v48 + 1) = v14;
    uint64_t v44 = 0;
    uint64_t v45 = a1;
    swift_release();
    uint64_t v15 = (uint64_t *)&v13[v11[8]];
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    if (v17 >> 60 == 15) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = *v15;
    }
    unint64_t v19 = 0xF000000000000000;
    if (v17 >> 60 != 15) {
      unint64_t v19 = v17;
    }
    unint64_t v39 = v19;
    uint64_t v40 = v18;
    uint64_t v46 = v8;
    uint64_t v47 = v7;
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v51, enum case for OnConflict.replace(_:), v7);
    sub_10000588C(&qword_10163CF10);
    type metadata accessor for Setter();
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_10137A810;
    uint64_t v41 = v20;
    unint64_t v42 = v17;
    uint64_t v43 = v16;
    sub_100037A38(v16, v17);
    if (qword_101636C28 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_10000588C(&qword_10163CE70);
    sub_100010324(v21, (uint64_t)qword_10170E188);
    type metadata accessor for UUID();
    <- infix<A>(_:_:)();
    if (qword_101636C30 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_10000588C(&qword_101640BE8);
    sub_100010324(v22, (uint64_t)qword_10170E1A0);
    uint64_t v23 = &v13[v11[5]];
    uint64_t v25 = *(void *)v23;
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)&long long v50 = v25;
    *((void *)&v50 + 1) = v24;
    <- infix<A>(_:_:)();
    if (qword_101636C38 != -1) {
      swift_once();
    }
    sub_100010324(v22, (uint64_t)qword_10170E1B8);
    uint64_t v26 = &v13[v11[6]];
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)&long long v50 = v28;
    *((void *)&v50 + 1) = v27;
    <- infix<A>(_:_:)();
    if (qword_101636C40 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_10000588C(&qword_10163CF58);
    sub_100010324(v29, (uint64_t)qword_10170E1D0);
    long long v50 = *(_OWORD *)&v13[v11[7]];
    <- infix<A>(_:_:)();
    if (qword_101636C48 != -1) {
      swift_once();
    }
    uint64_t v30 = sub_10000588C(&qword_101640C10);
    sub_100010324(v30, (uint64_t)qword_10170E1E8);
    *(void *)&long long v50 = v40;
    *((void *)&v50 + 1) = v39;
    <- infix<A>(_:_:)();
    if (qword_101636C50 != -1) {
      swift_once();
    }
    sub_100010324(v21, (uint64_t)qword_10170E200);
    <- infix<A>(_:_:)();
    if (qword_101636C60 != -1) {
      swift_once();
    }
    uint64_t v31 = sub_10000588C(&qword_10163CF00);
    sub_100010324(v31, (uint64_t)qword_10170E230);
    *(void *)&long long v50 = *(void *)&v13[v11[10]];
    <- infix<A>(_:_:)();
    if (qword_101636C58 != -1) {
      swift_once();
    }
    sub_100010324(v31, (uint64_t)qword_10170E218);
    *(void *)&long long v50 = *(void *)&v13[v11[11]];
    <- infix<A>(_:_:)();
    if (qword_101636C68 != -1) {
      swift_once();
    }
    sub_100010324(v31, (uint64_t)qword_10170E248);
    *(void *)&long long v50 = *(void *)&v13[v11[12]];
    <- infix<A>(_:_:)();
    if (qword_101636C70 != -1) {
      swift_once();
    }
    sub_100010324(v29, (uint64_t)qword_10170E260);
    long long v50 = v48;
    <- infix<A>(_:_:)();
    if (qword_101636C78 != -1) {
      swift_once();
    }
    sub_100010324(v29, (uint64_t)qword_10170E278);
    uint64_t v32 = P256PrivateKey.data.getter();
    unint64_t v34 = v33;
    *(void *)&long long v50 = v32;
    *((void *)&v50 + 1) = v33;
    <- infix<A>(_:_:)();
    sub_10001CFB8(v32, v34);
    if (qword_101636C80 != -1) {
      swift_once();
    }
    sub_100010324(v29, (uint64_t)qword_10170E290);
    uint64_t v35 = SymmetricKey256.data.getter();
    unint64_t v37 = v36;
    *(void *)&long long v50 = v35;
    *((void *)&v50 + 1) = v36;
    <- infix<A>(_:_:)();
    sub_10001CFB8(v35, v37);
    type metadata accessor for Table();
    int64_t v38 = v51;
    QueryType.insert(or:_:)();
    swift_bridgeObjectRelease();
    sub_100037A24(v43, v42);
    sub_10001CFB8(v48, *((unint64_t *)&v48 + 1));
    (*(void (**)(char *, uint64_t))(v46 + 8))(v38, v47);
    sub_100C1DFF4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
}

uint64_t sub_100C1B5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[23] = a4;
  v5[24] = a5;
  v5[25] = type metadata accessor for CloudStorageStore.State(0);
  v5[26] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163B1D0);
  v5[27] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for LocalFindableAccessoryRecord();
  v5[28] = v7;
  v5[29] = *(void *)(v7 - 8);
  v5[30] = swift_task_alloc();
  return _swift_task_switch(sub_100C1B708, a5, 0);
}

uint64_t sub_100C1B708()
{
  sub_1000C95CC(*(id *)(v0 + 184), *(char **)(v0 + 240));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C1B81C;
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 216);
  return sub_100C12834(v3, v2);
}

uint64_t sub_100C1B81C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  if (v0) {
    uint64_t v4 = sub_100C1BEE4;
  }
  else {
    uint64_t v4 = sub_100C1B948;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C1B948()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 216);
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 232) + 48))(v2, 1, v1);
  uint64_t v4 = *(void *)(v0 + 240);
  if (v3 == 1)
  {
    sub_100C1DFF4(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    sub_10001DAB4(v2, (uint64_t *)&unk_10163B1D0);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(void *)(v0 + 88) = 0;
  }
  else
  {
    *(void *)(v0 + 80) = v1;
    *(void *)(v0 + 88) = sub_100C1D6B8(&qword_10165B8F0, (void (*)(uint64_t))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v5 = sub_10001D958((uint64_t *)(v0 + 56));
    sub_100C1F0AC(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
    sub_100C1DFF4(v4, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  }
  sub_10001D608(v0 + 56, v0 + 16, &qword_10165B950);
  sub_100C1E3FC(v0 + 16, v0 + 136);
  if (*(void *)(v0 + 160))
  {
    uint64_t v6 = *(void *)(v0 + 208);
    sub_10001CEB0((long long *)(v0 + 136), v0 + 96);
    sub_10001D010(v0 + 96, v6);
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100C1BD10;
    uint64_t v8 = *(void *)(v0 + 208);
    return sub_100C17C4C(v8);
  }
  else
  {
    sub_10001DAB4(v0 + 136, &qword_10165B950);
    if (qword_101637008 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100010324(v10, (uint64_t)qword_10170EAF8);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      *(void *)(v0 + 176) = sub_1008FA0F0(0xD000000000000019, 0x8000000101410B20, &v15);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to convert %s to CloudBacked!", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10001DAB4(v0 + 16, &qword_10165B950);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_100C1BD10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 208);
  uint64_t v2 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  sub_100C1DFF4(v1, type metadata accessor for CloudStorageStore.State);
  return _swift_task_switch(sub_100C1BE50, v2, 0);
}

uint64_t sub_100C1BE50()
{
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 96);
  sub_10001DAB4(v0 + 16, &qword_10165B950);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1BEE4()
{
  sub_100C1DFF4(*(void *)(v0 + 240), (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1BF80()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100C1BFA0, v0, 0);
}

uint64_t sub_100C1BFA0()
{
  if (qword_101637008 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EAF8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Purging DB", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void *)(v0 + 16);

  uint64_t v6 = *(void *)(v5 + 112);
  *(void *)(v0 + 24) = v6;
  return _swift_task_switch(sub_100C1C0C4, v6, 0);
}

uint64_t sub_100C1C0C4()
{
  type metadata accessor for CloudStorageDatabase();
  sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.purge()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100C1C188(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = CKRecord.recordType.getter();
  uint64_t v7 = v6;
  sub_10000588C(&qword_10165B8E8);
  *(_OWORD *)(swift_initStackObject() + 16) = xmmword_101342130;
  if (v5 == 0xD00000000000001CLL && v7 == 0x8000000101416A10)
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_5;
  }
  char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_release();
  if (v8)
  {
LABEL_5:
    *(void *)(a2 + 24) = type metadata accessor for LocalFindableAccessoryRecord();
    *(void *)(a2 + 32) = sub_100C1D6B8(&qword_10165B8F0, (void (*)(uint64_t))type metadata accessor for LocalFindableAccessoryRecord);
    uint64_t v9 = sub_10001D958((uint64_t *)a2);
    sub_1000C95CC(a1, (char *)v9);
    if (v2) {
      sub_10005FE98(a2);
    }
    return;
  }
  if (qword_101637008 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100010324(v10, (uint64_t)qword_10170EAF8);
  id v11 = a1;
  os_log_type_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v15 = CKRecord.recordType.getter();
    sub_1008FA0F0(v15, v16, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unexpected recordType: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
}

uint64_t sub_100C1C464()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10013067C;
  return _swift_task_switch(sub_100C1846C, v0, 0);
}

uint64_t sub_100C1C508()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_100C1C538(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100033F68;
  return sub_100C18570(a1);
}

uint64_t sub_100C1C5CC(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_100C1C5F0, v2, 0);
}

uint64_t sub_100C1C5F0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = CloudKitChangeSet.recordIDsToDelete.getter();
  unint64_t v3 = sub_100C1217C(v2);
  v0[6] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_100C125FC(v1);
  v0[7] = v4;
  uint64_t v5 = (uint64_t)v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[8] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100C1C728;
  return sub_100C18D2C(v3, v5);
}

uint64_t sub_100C1C728()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v4 = sub_100C1C8C0;
  }
  else {
    uint64_t v4 = sub_100C1C854;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C1C854()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1C8C0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1C92C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100033F68;
  return sub_100C18D2C(a1, a2);
}

uint64_t sub_100C1C9D0()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_100C1C9F0, v0, 0);
}

uint64_t sub_100C1C9F0()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + 112);
  *(void *)(v0 + 24) = v1;
  return _swift_task_switch(sub_100C1CA14, v1, 0);
}

uint64_t sub_100C1CA14()
{
  type metadata accessor for CloudStorageDatabase();
  sub_100C1D6B8(&qword_10164CB10, (void (*)(uint64_t))type metadata accessor for CloudStorageDatabase);
  Database.startup()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C1CAD8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10001D2E4;
  v2[2] = v0;
  return _swift_task_switch(sub_100C1BFA0, v0, 0);
}

void sub_100C1CB7C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_100C1CB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SymmetricKey256();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for P256PrivateKey();
  uint64_t v56 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for PeripheralConnectionMaterial(0);
  __chkstk_darwin(v54);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101636C28 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_10000588C(&qword_10163CE70);
  sub_100010324(v10, (uint64_t)qword_10170E188);
  uint64_t v11 = type metadata accessor for UUID();
  Row.subscript.getter();
  if (qword_101636C50 != -1) {
    swift_once();
  }
  sub_100010324(v10, (uint64_t)qword_10170E200);
  os_log_type_t v12 = (int *)type metadata accessor for LocalFindableAccessoryRecord();
  uint64_t v60 = a2 + v12[9];
  uint64_t v65 = v11;
  Row.subscript.getter();
  if (qword_101636C40 != -1) {
    swift_once();
  }
  uint64_t v58 = sub_10000588C(&qword_10163CF58);
  sub_100010324(v58, (uint64_t)qword_10170E1D0);
  Row.subscript.getter();
  uint64_t v13 = v63;
  unint64_t v14 = v64;
  uint64_t v61 = v63;
  unint64_t v62 = v64;
  sub_1000362FC();
  int v59 = DataProtocol.isNull.getter();
  if (v59)
  {
    sub_10001CFB8(v13, v14);
    sub_100C1E054();
    swift_allocError();
    *uint64_t v15 = 0;
    v15[1] = 0;
    swift_willThrow();
    uint64_t v16 = type metadata accessor for Row();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
LABEL_31:
    uint64_t v41 = v65;
    unint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8);
    v42(a2, v65);
    if ((v59 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001CFB8(*(void *)(a2 + v12[7]), *(void *)(a2 + v12[7] + 8));
      sub_100037A24(*(void *)(a2 + v12[8]), *(void *)(a2 + v12[8] + 8));
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v42)(v60, v41);
  }
  uint64_t v17 = Data.trimmed.getter();
  unint64_t v19 = v18;
  sub_10001CFB8(v13, v14);
  uint64_t v20 = (uint64_t *)(a2 + v12[7]);
  *uint64_t v20 = v17;
  v20[1] = v19;
  uint64_t v48 = v17;
  unint64_t v49 = v19;
  sub_1000361E0(v17, v19);
  if (qword_101636C48 != -1) {
    swift_once();
  }
  uint64_t v21 = sub_10000588C(&qword_101640C10);
  sub_100010324(v21, (uint64_t)qword_10170E1E8);
  Row.subscript.getter();
  unint64_t v22 = v64;
  uint64_t v23 = (uint64_t)v9;
  if (v64 >> 60 == 15)
  {
    uint64_t v24 = 0;
    unint64_t v25 = 0xF000000000000000;
    uint64_t v26 = v58;
  }
  else
  {
    uint64_t v27 = v63;
    char v28 = DataProtocol.isNull.getter();
    uint64_t v26 = v58;
    if (v28)
    {
      uint64_t v24 = 0;
      unint64_t v25 = 0xF000000000000000;
    }
    else
    {
      uint64_t v24 = Data.trimmed.getter();
      unint64_t v25 = v29;
    }
    sub_100037A24(v27, v22);
  }
  uint64_t v30 = (uint64_t *)(a2 + v12[8]);
  *uint64_t v30 = v24;
  v30[1] = v25;
  if (qword_101636C30 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_10000588C(&qword_101640BE8);
  sub_100010324(v31, (uint64_t)qword_10170E1A0);
  Row.subscript.getter();
  unint64_t v32 = v64;
  unint64_t v33 = (uint64_t *)(a2 + v12[5]);
  *unint64_t v33 = v63;
  v33[1] = v32;
  if (qword_101636C38 != -1) {
    swift_once();
  }
  sub_100010324(v31, (uint64_t)qword_10170E1B8);
  Row.subscript.getter();
  unint64_t v34 = v64;
  uint64_t v35 = (uint64_t *)(a2 + v12[6]);
  *uint64_t v35 = v63;
  v35[1] = v34;
  if (qword_101636C60 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_10000588C(&qword_10163CF00);
  sub_100010324(v36, (uint64_t)qword_10170E230);
  Row.subscript.getter();
  *(void *)(a2 + v12[10]) = v63;
  if (qword_101636C58 != -1) {
    swift_once();
  }
  sub_100010324(v36, (uint64_t)qword_10170E218);
  Row.subscript.getter();
  *(void *)(a2 + v12[11]) = v63;
  if (qword_101636C68 != -1) {
    swift_once();
  }
  sub_100010324(v36, (uint64_t)qword_10170E248);
  Row.subscript.getter();
  *(void *)(a2 + v12[12]) = v63;
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  if (qword_101636C70 != -1) {
    swift_once();
  }
  sub_100010324(v26, (uint64_t)qword_10170E260);
  Row.subscript.getter();
  uint64_t v38 = v63;
  unint64_t v37 = v64;
  sub_100C1D6B8(&qword_10163B020, (void (*)(uint64_t))type metadata accessor for PeripheralConnectionMaterial);
  uint64_t v39 = v55;
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v39)
  {
    uint64_t v40 = type metadata accessor for Row();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(a1, v40);
    sub_10001CFB8(v48, v49);
    sub_10001CFB8(v38, v37);
    swift_release();
    goto LABEL_31;
  }
  swift_release();
  sub_10001CFB8(v38, v37);
  sub_100C1F0AC(v23, a2 + v12[13], type metadata accessor for PeripheralConnectionMaterial);
  if (qword_101636C78 != -1) {
    swift_once();
  }
  sub_100010324(v26, (uint64_t)qword_10170E278);
  Row.subscript.getter();
  uint64_t v44 = v53;
  P256PrivateKey.init(data:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 32))(a2 + v12[14], v44, v57);
  if (qword_101636C80 != -1) {
    swift_once();
  }
  sub_100010324(v58, (uint64_t)qword_10170E290);
  Row.subscript.getter();
  uint64_t v45 = v52;
  SymmetricKey256.init(data:)();
  uint64_t v46 = type metadata accessor for Row();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8))(a1, v46);
  sub_10001CFB8(v48, v49);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v50 + 32))(a2 + v12[15], v45, v51);
}

uint64_t sub_100C1D6B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C1D700(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for CloudStorageStore.State(0);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (long long *)((char *)&v28 - v14);
  uint64_t v16 = sub_10000588C(&qword_10165B948);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  unint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (long long *)&v19[*(int *)(v17 + 56)];
  sub_100C1E334(a1, (uint64_t)v19);
  sub_100C1E334(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_100C1E334((uint64_t)v19, (uint64_t)v15);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_10001CEB0(v15, (uint64_t)v31);
      sub_10001CEB0(v20, (uint64_t)v30);
      sub_10001CD44(v31, v31[3]);
      dispatch thunk of CloudBacked.id.getter();
      sub_10001CD44(v30, v30[3]);
      dispatch thunk of CloudBacked.id.getter();
      char v24 = static UUID.== infix(_:_:)();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v29 + 8);
      v26(v7, v4);
      v26(v9, v4);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v30);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v31);
      goto LABEL_12;
    }
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v15);
    goto LABEL_10;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100C1E334((uint64_t)v19, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = v29;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
      v23(v9, v13, v4);
      v23(v7, (char *)v20, v4);
      char v24 = static UUID.== infix(_:_:)();
      unint64_t v25 = *(void (**)(char *, uint64_t))(v22 + 8);
      v25(v7, v4);
      v25(v9, v4);
LABEL_12:
      sub_100C1DFF4((uint64_t)v19, type metadata accessor for CloudStorageStore.State);
      return v24 & 1;
    }
    (*(void (**)(char *, uint64_t))(v29 + 8))(v13, v4);
    goto LABEL_10;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
LABEL_10:
    sub_10001DAB4((uint64_t)v19, &qword_10165B948);
    char v24 = 0;
    return v24 & 1;
  }
  sub_100C1DFF4((uint64_t)v19, type metadata accessor for CloudStorageStore.State);
  char v24 = 1;
  return v24 & 1;
}

uint64_t sub_100C1DAD0()
{
  uint64_t v0 = sub_10000588C((uint64_t *)&unk_10163B1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalFindableAccessoryRecord();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v35 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t v8 = type metadata accessor for Row();
  uint64_t v45 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = sub_10000588C(&qword_10163CEA8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v46;
  uint64_t result = Connection.prepare(_:)();
  if (!v17)
  {
    uint64_t v44 = v11;
    unint64_t v34 = v7;
    uint64_t v32 = swift_retain();
    uint64_t v46 = dispatch thunk of _AnySequenceBox._makeIterator()();
    dispatch thunk of _AnyIteratorBoxBase.next()();
    unint64_t v19 = v45;
    unint64_t v42 = (unsigned int (*)(char *, uint64_t, uint64_t))v45[6];
    uint64_t v43 = v45 + 6;
    if (v42(v16, 1, v8) == 1)
    {
      uint64_t v45 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v21 = (void (*)(char *, char *, uint64_t))v19[4];
      uint64_t v20 = v19 + 4;
      uint64_t v22 = v35;
      uint64_t v38 = (void (**)(char *, void, uint64_t, uint64_t))(v36 + 56);
      uint64_t v39 = (void (**)(char *, char *, uint64_t))(v20 - 2);
      uint64_t v40 = (void (**)(char *, uint64_t))(v20 - 3);
      uint64_t v41 = v21;
      unint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
      uint64_t v45 = _swiftEmptyArrayStorage;
      uint64_t v33 = v3;
      v21(v13, v16, v8);
      while (1)
      {
        uint64_t v23 = (uint64_t)v44;
        (*v39)(v44, v13, v8);
        sub_100C1CB94(v23, (uint64_t)v2);
        (*v38)(v2, 0, 1, v3);
        (*v40)(v13, v8);
        if ((*v37)(v2, 1, v3) == 1)
        {
          sub_10001DAB4((uint64_t)v2, (uint64_t *)&unk_10163B1D0);
        }
        else
        {
          uint64_t v24 = (uint64_t)v34;
          sub_100C1F0AC((uint64_t)v2, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
          sub_100C1F0AC(v24, v22, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
          unint64_t v25 = (unint64_t)v45;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v25 = sub_100A706F8(0, *(void *)(v25 + 16) + 1, 1, v25);
          }
          unint64_t v27 = *(void *)(v25 + 16);
          unint64_t v26 = *(void *)(v25 + 24);
          uint64_t v28 = v36;
          if (v27 >= v26 >> 1)
          {
            uint64_t v31 = sub_100A706F8(v26 > 1, v27 + 1, 1, v25);
            uint64_t v28 = v36;
            unint64_t v25 = v31;
          }
          *(void *)(v25 + 16) = v27 + 1;
          unint64_t v29 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
          uint64_t v45 = (void *)v25;
          uint64_t v30 = v25 + v29 + *(void *)(v28 + 72) * v27;
          uint64_t v22 = v35;
          sub_100C1F0AC(v35, v30, (uint64_t (*)(void))type metadata accessor for LocalFindableAccessoryRecord);
          uint64_t v3 = v33;
        }
        dispatch thunk of _AnyIteratorBoxBase.next()();
        if (v42(v16, 1, v8) == 1) {
          break;
        }
        v41(v13, v16, v8);
      }
    }
    swift_release_n();
    swift_release();
    sub_10000588C(&qword_10165B8C8);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v45;
  }
  return result;
}

uint64_t sub_100C1DFF4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100C1E054()
{
  unint64_t result = qword_10165B8D0;
  if (!qword_10165B8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165B8D0);
  }
  return result;
}

uint64_t sub_100C1E0A8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x3000000000000000) == 0) {
    return sub_1000361E0(a1, a2);
  }
  return a1;
}

uint64_t sub_100C1E0B8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x3000000000000000) == 0) {
    return sub_10001CFB8(a1, a2);
  }
  return a1;
}

uint64_t sub_100C1E0C8()
{
  return sub_100C190B8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_100C1E0EC()
{
  swift_unknownObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100C1E134(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10001D2E4;
  return sub_100C1B5E4(a1, v4, v5, v6, v7);
}

uint64_t sub_100C1E200(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100033F68;
  return sub_100C1AA24(a1, v5, v6, v7, v8);
}

uint64_t sub_100C1E2FC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C1E334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudStorageStore.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C1E398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudStorageStore.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100C1E3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10000588C(&qword_10165B950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100C1E464(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_100C1E470()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C1E53C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100C16FC8(a1, v4, v5);
}

uint64_t sub_100C1E5B0()
{
  uint64_t v1 = sub_10000588C(&qword_1016609B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v9 + *(void *)(v7 + 64);
  uint64_t v11 = v3 | v8 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v10, v11);
}

uint64_t sub_100C1E714(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_10000588C(&qword_1016609B0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for UUID() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  *uint64_t v15 = v3;
  v15[1] = sub_100033F68;
  return sub_100C175C8(a1, v10, v11, v12, v13, v14);
}

uint64_t sub_100C1E87C()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_10001D2E4;
  return _swift_task_switch(sub_100C171BC, v3, 0);
}

uint64_t sub_100C1E964()
{
  uint64_t v0 = sub_10000588C(&qword_10165B9A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v61 = (uint64_t)v49 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for LocalFindablePreferences();
  uint64_t v51 = *(void *)(v62 - 8);
  uint64_t v2 = __chkstk_darwin(v62);
  uint64_t v4 = (char *)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)v49 - v6;
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)v49 - v8;
  uint64_t v10 = type metadata accessor for Row();
  uint64_t v63 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v49 - v14;
  uint64_t v16 = sub_10000588C(&qword_10163CEA8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = v68;
  uint64_t result = Connection.prepare(_:)();
  if (!v19)
  {
    uint64_t v68 = v15;
    uint64_t v50 = v9;
    v49[1] = swift_retain();
    uint64_t v60 = dispatch thunk of _AnySequenceBox._makeIterator()();
    dispatch thunk of _AnyIteratorBoxBase.next()();
    uint64_t v21 = v63;
    uint64_t v22 = v63 + 48;
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48);
    unsigned int v24 = v23(v18, 1, v10);
    uint64_t v49[2] = 0;
    if (v24 == 1)
    {
      uint64_t v65 = _swiftEmptyArrayStorage;
    }
    else
    {
      unint64_t v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      uint64_t v25 = v21 + 32;
      uint64_t v56 = v26;
      uint64_t v57 = v23;
      unint64_t v64 = (void (**)(char *, uint64_t))(v25 - 24);
      uint64_t v54 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56);
      uint64_t v55 = (void (**)(char *, char *, uint64_t))(v25 - 16);
      uint64_t v52 = v7 + 8;
      uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
      uint64_t v65 = _swiftEmptyArrayStorage;
      uint64_t v27 = v62;
      uint64_t v28 = v68;
      uint64_t v58 = v22;
      int v59 = v18;
      uint64_t v63 = v25;
      v26(v68, v18, v10);
      while (1)
      {
        (*v55)(v13, v28, v10);
        if (qword_101636C28 != -1) {
          swift_once();
        }
        uint64_t v30 = sub_10000588C(&qword_10163CE70);
        sub_100010324(v30, (uint64_t)qword_10170E188);
        type metadata accessor for UUID();
        Row.subscript.getter();
        if (qword_101636C88 != -1) {
          swift_once();
        }
        uint64_t v31 = sub_10000588C(&qword_10163CF78);
        sub_100010324(v31, (uint64_t)qword_10170E2A8);
        Row.subscript.getter();
        if (v66 == 2) {
          char v32 = 2;
        }
        else {
          char v32 = v66 == 1;
        }
        v7[*(int *)(v27 + 20)] = v32;
        if (qword_101636C90 != -1) {
          swift_once();
        }
        uint64_t v33 = (uint64_t)v4;
        uint64_t v34 = sub_10000588C(&qword_101640C10);
        sub_100010324(v34, (uint64_t)qword_10170E2C0);
        Row.subscript.getter();
        unint64_t v35 = v67;
        if (v67 >> 60 == 15)
        {
          uint64_t v36 = *v64;
          (*v64)(v13, v10);
          uint64_t v37 = 0;
          unint64_t v38 = 0xF000000000000000;
        }
        else
        {
          uint64_t v39 = v66;
          sub_1000362FC();
          if (DataProtocol.isNull.getter())
          {
            uint64_t v37 = 0;
            unint64_t v38 = 0xF000000000000000;
          }
          else
          {
            uint64_t v37 = Data.trimmed.getter();
            unint64_t v38 = v40;
          }
          sub_100037A24(v39, v35);
          uint64_t v36 = *v64;
          (*v64)(v13, v10);
        }
        uint64_t v27 = v62;
        uint64_t v41 = *(int *)(v62 + 24);
        *(void *)&v7[v41] = v37;
        *(void *)&v52[v41] = v38;
        uint64_t v42 = v61;
        sub_100C1F0AC((uint64_t)v7, v61, (uint64_t (*)(void))type metadata accessor for LocalFindablePreferences);
        (*v54)(v42, 0, 1, v27);
        v36(v68, v10);
        if ((*v53)(v42, 1, v27) == 1)
        {
          sub_10001DAB4(v42, &qword_10165B9A8);
          uint64_t v4 = (char *)v33;
          uint64_t v28 = v68;
          unint64_t v29 = v59;
        }
        else
        {
          uint64_t v43 = (uint64_t)v50;
          sub_100C1F0AC(v42, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for LocalFindablePreferences);
          uint64_t v4 = (char *)v33;
          sub_100C1F0AC(v43, v33, (uint64_t (*)(void))type metadata accessor for LocalFindablePreferences);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v65 = (void *)sub_100A717A0(0, v65[2] + 1, 1, (unint64_t)v65);
          }
          uint64_t v28 = v68;
          unint64_t v29 = v59;
          unint64_t v45 = v65[2];
          unint64_t v44 = v65[3];
          uint64_t v46 = v51;
          if (v45 >= v44 >> 1)
          {
            uint64_t v48 = (void *)sub_100A717A0(v44 > 1, v45 + 1, 1, (unint64_t)v65);
            uint64_t v46 = v51;
            uint64_t v65 = v48;
          }
          uint64_t v47 = v65;
          v65[2] = v45 + 1;
          sub_100C1F0AC((uint64_t)v4, (uint64_t)v47+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v45, (uint64_t (*)(void))type metadata accessor for LocalFindablePreferences);
        }
        dispatch thunk of _AnyIteratorBoxBase.next()();
        if (v57(v29, 1, v10) == 1) {
          break;
        }
        v56(v28, v29, v10);
      }
    }
    swift_release_n();
    swift_release();
    sub_10000588C(&qword_10165B9B0);
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v65;
  }
  return result;
}

uint64_t sub_100C1F0AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for CloudStorageStore.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CloudStorageStore.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudStorageStore.Error()
{
  return &type metadata for CloudStorageStore.Error;
}

uint64_t sub_100C1F1C8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EB10);
  uint64_t v1 = sub_100010324(v0, (uint64_t)qword_10170EB10);
  if (qword_101637018 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100010324(v0, (uint64_t)qword_10170EB28);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100C1F290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for StandaloneBeaconService.BeaconStreamChange();
  v5[5] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100C1F354;
  return sub_100C20C34();
}

uint64_t sub_100C1F354()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    return _swift_task_switch(sub_100C1F4A4, v6, 0);
  }
}

uint64_t sub_100C1F4A4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  sub_100C26E84(v0[3], v1, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Transaction();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  static Transaction.named<A>(_:with:)();
  swift_task_dealloc();
  sub_100C26EEC(v1, (uint64_t (*)(void))type metadata accessor for StandaloneBeaconService.BeaconStreamChange);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100C1F5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for StandaloneBeaconService.BeaconStreamChange();
  v5[5] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100C1F68C;
  return sub_100C20C34();
}

uint64_t sub_100C1F68C()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 16);
    return _swift_task_switch(sub_100C1F7DC, v6, 0);
  }
}

uint64_t sub_100C1F7DC()
{
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1, v2, v4);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for Transaction();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v1;
  static Transaction.named<A>(_:with:)();
  swift_task_dealloc();
  sub_100C26EEC(v1, (uint64_t (*)(void))type metadata accessor for StandaloneBeaconService.BeaconStreamChange);
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100C1F920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StandaloneBeaconService.BeaconStreamChange();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000588C(&qword_10165BC28);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10165BC30);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(a2 + 152);
  uint64_t v18 = *(void *)(result + 16);
  if (v18)
  {
    void v26[2] = v3;
    uint64_t v27 = a3;
    uint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v14 + 16);
    uint64_t v19 = v14 + 16;
    uint64_t v30 = v20;
    uint64_t v21 = v10;
    unint64_t v22 = result + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v23 = *(void *)(v19 + 56);
    uint64_t v28 = v9;
    uint64_t v29 = v23;
    unsigned int v24 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v25 = (void (**)(char *, uint64_t))(v19 - 8);
    v26[1] = result;
    swift_bridgeObjectRetain();
    do
    {
      v30(v16, v22, v13);
      sub_100C26E84(v27, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StandaloneBeaconService.BeaconStreamChange);
      AsyncStream.Continuation.yield(_:)();
      (*v24)(v12, v28);
      (*v25)(v16, v13);
      v22 += v29;
      --v18;
    }
    while (v18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100C1FB90()
{
  *(void *)(v1 + 136) = v0;
  *(void *)(v1 + 144) = *v0;
  return _swift_task_switch(sub_100C1FBD8, v0, 0);
}

uint64_t sub_100C1FBD8()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 152) = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = qword_1016375E8;
  swift_retain();
  if (v4 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 56);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v7 = (uint64_t (*)(void))((char *)&dword_1016391B0 + dword_1016391B0);
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100C1FD38;
    return v7();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C1FD38(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C1FE50, v2, 0);
}

uint64_t sub_100C1FE50()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  uint64_t v2 = v0[21];
  if (v2)
  {
    uint64_t v3 = v0[19];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v4 = (void *)swift_allocObject();
    v0[22] = v4;
    v4[2] = v2;
    v4[3] = sub_100C26F84;
    v4[4] = v3;
    swift_retain();
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[23] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100C20070;
    return unsafeBlocking<A>(_:)(v5, sub_100C26FEC, v4, (char *)&type metadata for () + 8);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101637010 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170EB10);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing BeaconStore!", v9, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100C20070()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C2019C, v1, 0);
}

uint64_t sub_100C2019C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v10 = v0[18];
  uint64_t v3 = v0[17];
  v0[15] = sub_100AB2C40();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_100C26F84;
  *(void *)(v4 + 24) = v2;
  swift_retain();
  sub_10000588C((uint64_t *)&unk_101653E90);
  sub_100062734(&qword_10163BD20, (uint64_t *)&unk_101653E90);
  uint64_t v5 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v3 + 136) = v5;
  swift_release();
  v0[16] = *(void *)(v1 + OBJC_IVAR____TtC12searchpartyd11BeaconStore_recordDeletedPublisher);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100C26F84;
  *(void *)(v6 + 24) = v2;
  swift_retain();
  swift_retain();
  sub_10000588C((uint64_t *)&unk_10163BD30);
  sub_100062734(&qword_101656740, (uint64_t *)&unk_10163BD30);
  uint64_t v7 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(v3 + 144) = v7;
  swift_release();
  sub_100C203B8(v3, v10);
  swift_release();
  swift_release();
  os_log_type_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100C203B8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for Transaction();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  swift_retain();
  static Transaction.asyncTask(name:block:)();

  return swift_release();
}

uint64_t sub_100C20458(uint64_t a1)
{
  *(void *)(v1 + 56) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100C204EC;
  return sub_100C20C34();
}

uint64_t sub_100C204EC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100C2074C, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v2 + 80) = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_100C20658;
    return sub_100C23DA4();
  }
}

uint64_t sub_100C20658()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100C2074C()
{
  uint64_t v10 = v0;
  if (qword_101637010 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EB10);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    swift_getErrorValue();
    uint64_t v5 = Error.localizedDescription.getter();
    *(void *)(v0 + 48) = sub_1008FA0F0(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to publish beacons to key store: %{public}s.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100C20658;
  return sub_100C23DA4();
}

uint64_t sub_100C209AC(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t *a4, void (*a5)(unsigned char *, unsigned char *))
{
  uint64_t v9 = type metadata accessor for SharedBeaconRecord(0);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for OwnedBeaconRecord();
  __chkstk_darwin(v12);
  uint64_t v14 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10001D010(a1, (uint64_t)v18);
  sub_10000588C(a4);
  if (swift_dynamicCast())
  {
    sub_100C26EEC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    sub_10001D010(a1, (uint64_t)v18);
    uint64_t v15 = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)v18);
  }
  else
  {
    sub_10001D010(a1, (uint64_t)v18);
    a5(v18, v17);
    uint64_t result = swift_dynamicCast();
    if (!result) {
      return result;
    }
    uint64_t v15 = sub_100C26EEC((uint64_t)v11, type metadata accessor for SharedBeaconRecord);
  }
  return a2(v15);
}

uint64_t sub_100C20B60(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *unint64_t v6 = v4;
  v6[1] = sub_100033F68;
  v6[17] = a4;
  v6[18] = *a4;
  return _swift_task_switch(sub_100C1FBD8, a4, 0);
}

uint64_t sub_100C20C34()
{
  v1[41] = v0;
  v1[42] = *v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[43] = v2;
  v1[44] = *(void *)(v2 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = *(void *)(type metadata accessor for SharedBeaconRecord(0) - 8);
  v1[48] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for KeyGenerationBeaconInfo();
  v1[49] = v3;
  v1[50] = *(void *)(v3 - 8);
  v1[51] = swift_task_alloc();
  return _swift_task_switch(sub_100C20DE0, v0, 0);
}

uint64_t sub_100C20DE0()
{
  if (qword_1016371D8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 240) = 0x7365547265646E75;
  *(void *)(v0 + 248) = 0xE900000000000074;
  SynchronousCache.cachedValue<A>(key:computeBlock:)();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + 640))
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    *(void *)(v0 + 280) = _swiftEmptyArrayStorage;
    uint64_t v3 = qword_1016375E8;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 176);
    if (*(void *)(v0 + 200))
    {
      sub_10001CEB0((long long *)(v0 + 176), v0 + 136);
      swift_release();
      sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 416) = v4;
      *uint64_t v4 = v0;
      v4[1] = sub_100C2102C;
      return v5();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100C2102C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 328);
  *(void *)(*(void *)v1 + 424) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C21144, v2, 0);
}

uint64_t sub_100C21144()
{
  if (v0[53])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    if (qword_101636EA8 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    v0[54] = v1;
    sub_100010324(v1, (uint64_t)qword_10170E790);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Flushing beacon cache on beacon added/removed.", v4, 2u);
      swift_slowDealloc();
    }

    uint64_t v5 = v0[53];
    return _swift_task_switch(sub_100C213A0, v5, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 17));
    if (qword_101637010 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100010324(v6, (uint64_t)qword_10170EB10);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Missing BeaconStoreActor!", v9, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100C213A0()
{
  *(void *)(v0 + 440) = *(void *)(*(void *)(v0 + 424) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C21414, 0, 0);
}

uint64_t sub_100C21414()
{
  uint64_t v1 = v0[55];
  uint64_t v2 = v0[53];
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[56] = v3;
  v3[2] = v1;
  v3[3] = sub_1001BD728;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[57] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C21520;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D74C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100C21520()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 424);
  return _swift_task_switch(sub_100C2165C, v2, 0);
}

uint64_t sub_100C2165C()
{
  *(void *)(v0 + 464) = *(void *)(*(void *)(v0 + 424) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C216D0, 0, 0);
}

uint64_t sub_100C216D0()
{
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[53];
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[59] = v3;
  v3[2] = v1;
  v3[3] = sub_1000909A4;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[60] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101660AA0);
  v0[61] = v5;
  *uint64_t v4 = v0;
  v4[1] = sub_100C217F0;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 34, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1000909AC, v3, v5);
}

uint64_t sub_100C217F0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 328);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 496) = *(void *)(v1 + 272);
  return _swift_task_switch(sub_100C21960, v2, 0);
}

uint64_t sub_100C21960()
{
  uint64_t v1 = v0[42];
  v0[32] = v0[62];
  uint64_t v2 = swift_task_alloc();
  v0[63] = v2;
  *(void *)(v2 + 16) = v1;
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[64] = v3;
  uint64_t v4 = sub_100062734(&qword_1016427C8, (uint64_t *)&unk_101660AA0);
  *os_log_type_t v3 = v0;
  v3[1] = sub_100C21A6C;
  uint64_t v5 = v0[61];
  uint64_t v6 = v0[49];
  return Sequence.asyncMap<A>(_:)(&unk_10165BC40, v2, v5, v6, v4);
}

uint64_t sub_100C21A6C(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 328);
  *(void *)(v3 + 520) = a1;
  *(void *)(v3 + 528) = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C21BD0, v4, 0);
}

uint64_t sub_100C21BD0()
{
  uint64_t v1 = *(void *)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 328);
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_100446C30(v3);
  sub_100FBDD80(*(void *)(v2 + 128));
  if (v1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = sub_100C26D14;
  *(void *)(v8 + 24) = v7;
  *(void *)(v0 + 536) = dispatch thunk of _AnySequenceBox._map<A>(_:)();
  *(void *)(v0 + 544) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = swift_bridgeObjectRetain();
  sub_100446C30(v9);
  uint64_t My = type metadata accessor for Feature.FindMy();
  *(void *)(v0 + 80) = My;
  *(void *)(v0 + 88) = sub_100C26DD4((unint64_t *)&qword_101653E00, 255, (void (*)(uint64_t))&type metadata accessor for Feature.FindMy);
  uint64_t v11 = sub_10001D958((uint64_t *)(v0 + 56));
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(My - 8) + 104))(v11, enum case for Feature.FindMy.itemSharing(_:), My);
  LOBYTE(My) = isFeatureEnabled(_:)();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
  if (My)
  {
    uint64_t v12 = *(void *)(v0 + 424);
    uint64_t v13 = (uint64_t)sub_100C21F68;
    uint64_t v14 = 0;
    return _swift_task_switch(v13, v12, v14);
  }
  uint64_t v13 = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 16);
  if (!*(void *)(v0 + 40))
  {
    __break(1u);
    return _swift_task_switch(v13, v12, v14);
  }
  sub_10001CEB0((long long *)(v0 + 16), v0 + 96);
  sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
  uint64_t v16 = (uint64_t (__cdecl *)())((char *)&dword_101639198 + dword_101639198);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 584) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100C22604;
  return v16();
}

uint64_t sub_100C21F68()
{
  *(void *)(v0 + 552) = *(void *)(*(void *)(v0 + 424) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C21FDC, 0, 0);
}

uint64_t sub_100C21FDC()
{
  uint64_t v1 = v0[69];
  uint64_t v2 = v0[53];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[70] = v3;
  v3[2] = v1;
  v3[3] = sub_10008FD44;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[71] = v4;
  uint64_t v5 = sub_10000588C(&qword_10163A040);
  *uint64_t v4 = v0;
  v4[1] = sub_100C220F8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 33, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10008FD4C, v3, v5);
}

uint64_t sub_100C220F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 328);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 576) = *(void *)(v1 + 264);
  return _swift_task_switch(sub_100C22268, v2, 0);
}

uint64_t sub_100C22268()
{
  uint64_t v1 = *(void *)(v0 + 576);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 400);
    uint64_t v4 = *(void *)(v0 + 376);
    sub_1000B782C(0, v2, 0);
    unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v6 = *(void *)(v4 + 72);
    uint64_t v7 = *(void *)(v0 + 544);
    uint64_t v8 = *(void *)(v0 + 408);
    uint64_t v9 = *(void *)(v0 + 384);
    sub_100C26E84(v1 + v5, v9, type metadata accessor for SharedBeaconRecord);
    sub_100C23908(v9, v8);
    sub_100C26EEC(v9, type metadata accessor for SharedBeaconRecord);
    if (v7)
    {
      return swift_release();
    }
    unint64_t v24 = v5;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_1000B782C(0, _swiftEmptyArrayStorage[2] + 1, 1);
    }
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    unint64_t v11 = _swiftEmptyArrayStorage[3];
    if (v12 >= v11 >> 1) {
      sub_1000B782C(v11 > 1, v12 + 1, 1);
    }
    uint64_t v13 = *(void *)(v0 + 408);
    _swiftEmptyArrayStorage[2] = v12 + 1;
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v15 = *(void *)(v3 + 72);
    sub_100C26E1C(v13, (uint64_t)_swiftEmptyArrayStorage + v14 + v15 * v12, (uint64_t (*)(void))type metadata accessor for KeyGenerationBeaconInfo);
    int64_t v16 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v18 = v1 + v6 + v24;
      do
      {
        uint64_t v19 = *(void *)(v0 + 408);
        uint64_t v20 = *(void *)(v0 + 384);
        sub_100C26E84(v18, v20, type metadata accessor for SharedBeaconRecord);
        sub_100C23908(v20, v19);
        sub_100C26EEC(v20, type metadata accessor for SharedBeaconRecord);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1000B782C(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v22 = _swiftEmptyArrayStorage[2];
        unint64_t v21 = _swiftEmptyArrayStorage[3];
        if (v22 >= v21 >> 1) {
          sub_1000B782C(v21 > 1, v22 + 1, 1);
        }
        uint64_t v23 = *(void *)(v0 + 408);
        _swiftEmptyArrayStorage[2] = v22 + 1;
        sub_100C26E1C(v23, (uint64_t)_swiftEmptyArrayStorage + v14 + v22 * v15, (uint64_t (*)(void))type metadata accessor for KeyGenerationBeaconInfo);
        v18 += v6;
        --v16;
      }
      while (v16);
    }
  }
  swift_bridgeObjectRelease();
  sub_100446C30((uint64_t)_swiftEmptyArrayStorage);
  uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 16);
  if (*(void *)(v0 + 40))
  {
    sub_10001CEB0((long long *)(v0 + 16), v0 + 96);
    sub_10001CD44((void *)(v0 + 96), *(void *)(v0 + 120));
    uint64_t v25 = (uint64_t (__cdecl *)())((char *)&dword_101639198 + dword_101639198);
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100C22604;
    return v25();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C22604(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 328);
  *(void *)(*(void *)v1 + 592) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C2271C, v2, 0);
}

uint64_t sub_100C2271C()
{
  if (v0[74])
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 12));
    uid_t v1 = getuid();
    sub_100DC5FC0(v1);
    uint64_t v2 = v0[35];
    v0[75] = v2;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[76] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100C228AC;
    uint64_t v4 = v0[46];
    return sub_1009CF3A0(v4, v2);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 12));
    sub_100C26D80();
    swift_allocError();
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100C228AC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 616) = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[46];
  uint64_t v4 = v2[43];
  uint64_t v5 = v2[44];
  if (v0)
  {
    uint64_t v6 = v2[41];
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100C22E14;
    uint64_t v8 = v6;
  }
  else
  {
    uint64_t v9 = v2[41];
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v2[78] = v10;
    v2[79] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v10(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v7 = sub_100C22A58;
    uint64_t v8 = v9;
  }
  return _swift_task_switch(v7, v8, 0);
}

uint64_t sub_100C22A58()
{
  unint64_t v22 = v0;
  if (qword_101637010 != -1) {
    swift_once();
  }
  sub_100010324(v0[54], (uint64_t)qword_10170EB10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[78];
    uint64_t v3 = v0[67];
    uint64_t v4 = v0[65];
    os_log_type_t type = v2;
    uint64_t v5 = v0[45];
    uint64_t v18 = v0[43];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218755;
    uint64_t v7 = *(void *)(v4 + 16);
    swift_bridgeObjectRelease();
    v0[37] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    uint64_t v8 = *(void *)(v3 + 16);
    swift_bridgeObjectRelease();
    v0[38] = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2160;
    v0[39] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 32) = 2081;
    uid_t v9 = getuid();
    sub_100DC5FC0(v9);
    sub_100C26DD4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v12 = v11;
    v19(v5, v18);
    v0[40] = sub_1008FA0F0(v10, v12, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, type, "Added %ld owned and %ld standalone beacon to key store for user: %{private,mask.hash}s.", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v13 = v0[77];
  unint64_t v14 = (void *)SPManagedCBPeripheralChangedNotification;
  type metadata accessor for DarwinNotificationHelper();
  swift_allocObject();
  id v15 = v14;
  DarwinNotificationHelper.init(notificationName:rateLimit:)();
  dispatch thunk of DarwinNotificationHelper.post(bypassRateLimit:)();
  if (v13) {
    swift_errorRelease();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100C22E14()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C22EB4(uint64_t a1, uint64_t a2)
{
  v2[4] = a1;
  v2[5] = a2;
  uint64_t v3 = type metadata accessor for Date();
  void v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for BeaconIdentifier();
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for OwnedBeaconRecord();
  v2[12] = swift_task_alloc();
  return _swift_task_switch(sub_100C22FD4, 0, 0);
}

uint64_t sub_100C22FD4()
{
  unint64_t v14 = v0;
  if (qword_101637010 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[5];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170EB10);
  sub_100C26E84(v2, v1, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[12];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100C26DD4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_1008FA0F0(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100C26EEC(v7, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Adding owned beacon to key store: %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100C26EEC(v0[12], (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }

  unint64_t v11 = (void *)swift_task_alloc();
  v0[13] = v11;
  *unint64_t v11 = v0;
  v11[1] = sub_100C232A4;
  return sub_100D1B4D0();
}

uint64_t sub_100C232A4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C233A4, 0, 0);
}

uint64_t sub_100C233A4()
{
  int v18 = *(unsigned __int8 *)(v0 + 112);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v8 = *(void *)(v0 + 32);
  uid_t v9 = getuid();
  sub_100DC5FC0(v9);
  uint64_t v10 = v7 + *(int *)(v1 + 20);
  uint64_t v11 = v2 + *(int *)(v3 + 20);
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7 + *(int *)(v1 + 32), v6);
  if (v18) {
    char v13 = 2;
  }
  else {
    char v13 = 0;
  }
  sub_100C26E1C(v2, v8, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  unint64_t v14 = (int *)type metadata accessor for KeyGenerationBeaconInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8 + v14[5], v4, v6);
  uint64_t v15 = (_OWORD *)(v8 + v14[6]);
  *uint64_t v15 = xmmword_101347BB0;
  v15[1] = 0u;
  v15[2] = 0u;
  *(unsigned char *)(v8 + v14[7]) = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100C23554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = type metadata accessor for StandaloneBeacon();
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637010 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100010324(v7, (uint64_t)qword_10170EB10);
  sub_100C26E84(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v31 = v2;
    uint64_t v11 = v10;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v34 = v30;
    *(_DWORD *)uint64_t v11 = 141558275;
    uint64_t v33 = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2081;
    v29[1] = v11 + 14;
    type metadata accessor for UUID();
    sub_100C26DD4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v33 = sub_1008FA0F0(v12, v13, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100C26EEC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Adding standalone beacon to key store: %{private,mask.hash}s.", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100C26EEC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StandaloneBeacon);
  }

  uid_t v14 = getuid();
  sub_100DC5FC0(v14);
  uint64_t v15 = a2 + *(int *)(type metadata accessor for BeaconIdentifier() + 20);
  uint64_t v16 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v15, a1, v16);
  uint64_t v17 = v32;
  uint64_t v18 = a1 + *(int *)(v32 + 32);
  uint64_t v19 = (int *)type metadata accessor for KeyGenerationBeaconInfo();
  uint64_t v20 = a2 + v19[5];
  uint64_t v21 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v20, v18, v21);
  unint64_t v22 = (void *)(a1 + *(int *)(v17 + 40));
  uint64_t v23 = v22[2];
  unint64_t v24 = v22[3];
  uint64_t v25 = v22[4];
  unint64_t v26 = v22[5];
  uint64_t v27 = a2 + v19[6];
  *(void *)uint64_t v27 = v23;
  *(void *)(v27 + 8) = v24;
  *(void *)(v27 + 16) = v25;
  *(void *)(v27 + 24) = v26;
  *(_OWORD *)(v27 + 32) = xmmword_101347BB0;
  *(unsigned char *)(a2 + v19[7]) = 1;
  sub_1000361E0(v23, v24);
  return sub_1000361E0(v25, v26);
}

double sub_100C23908@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for BeaconIdentifier();
  __chkstk_darwin(v35);
  os_log_type_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SharedBeaconRecord(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_101637010 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100010324(v13, (uint64_t)qword_10170EB10);
  sub_100C26E84(a1, (uint64_t)v12, type metadata accessor for SharedBeaconRecord);
  uid_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  int v34 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = v4;
    uint64_t v17 = v16;
    uint64_t v32 = swift_slowAlloc();
    uint64_t v38 = v32;
    *(_DWORD *)uint64_t v17 = 141558275;
    uint64_t v36 = 1752392040;
    uint64_t v30 = &v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v17 + 12) = 2081;
    uint64_t v28 = v17 + 14;
    uint64_t v29 = v10;
    os_log_t v31 = v14;
    type metadata accessor for UUID();
    sub_100C26DD4((unint64_t *)&qword_101638B10, 255, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v36 = sub_1008FA0F0(v18, v19, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v10 = v29;
    swift_bridgeObjectRelease();
    sub_100C26EEC((uint64_t)v12, type metadata accessor for SharedBeaconRecord);
    uid_t v14 = v31;
    _os_log_impl((void *)&_mh_execute_header, v31, (os_log_type_t)v34, "Adding shared beacon to key store: %{private,mask.hash}s.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v33;
    swift_slowDealloc();
  }
  else
  {
    sub_100C26EEC((uint64_t)v12, type metadata accessor for SharedBeaconRecord);
  }

  uid_t v20 = getuid();
  sub_100DC5FC0(v20);
  uint64_t v21 = a1 + *(int *)(v10 + 20);
  unint64_t v22 = &v9[*(int *)(v35 + 20)];
  uint64_t v23 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v22, v21, v23);
  sub_10120DE1C((uint64_t)v7);
  if (sub_10120E010()) {
    char v24 = 2;
  }
  else {
    char v24 = 0;
  }
  sub_100C26E1C((uint64_t)v9, a2, (uint64_t (*)(void))type metadata accessor for BeaconIdentifier);
  uint64_t v25 = (int *)type metadata accessor for KeyGenerationBeaconInfo();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2 + v25[5], v7, v4);
  unint64_t v26 = (_OWORD *)(a2 + v25[6]);
  double result = 0.0;
  *unint64_t v26 = xmmword_101347BB0;
  v26[1] = 0u;
  void v26[2] = 0u;
  *(unsigned char *)(a2 + v25[7]) = v24;
  return result;
}

uint64_t sub_100C23DA4()
{
  v1[31] = v0;
  v1[32] = type metadata accessor for KeySyncMetadata();
  v1[33] = swift_task_alloc();
  v1[34] = sub_10000588C(&qword_10163BB80);
  v1[35] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for KeyAlignmentRecord();
  v1[36] = v2;
  v1[37] = *(void *)(v2 - 8);
  v1[38] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v1[39] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v1[40] = v4;
  v1[41] = *(void *)(v4 + 64);
  v1[42] = swift_task_alloc();
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v1[45] = swift_task_alloc();
  return _swift_task_switch(sub_100C23F78, v0, 0);
}

uint64_t sub_100C23F78()
{
  uint64_t v1 = qword_1016375E8;
  swift_retain();
  if (v1 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 96);
  if (*(void *)(v0 + 120))
  {
    sub_10001CEB0((long long *)(v0 + 96), v0 + 16);
    swift_release();
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100C240C0;
    return v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C240C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 376) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C241D8, v2, 0);
}

uint64_t sub_100C241D8()
{
  uint64_t v1 = *(void *)(v0 + 376);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  if (v1)
  {
    uint64_t result = sub_1000977C4((uint64_t)&xmmword_10166E8F0, v0 + 176);
    if (*(void *)(v0 + 200))
    {
      sub_10001CEB0((long long *)(v0 + 176), v0 + 136);
      sub_10001CD44((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v5 = (uint64_t (*)(void))((char *)&dword_1016390D8 + dword_1016390D8);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_100C24360;
      return v5();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_100C24360(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 248);
  *(void *)(*(void *)v1 + 392) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C24478, v2, 0);
}

uint64_t sub_100C24478()
{
  uint64_t v1 = *(void *)(v0 + 392);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 136);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 392);
    return _swift_task_switch(sub_100C24648, v2, 0);
  }
  else
  {
    if (qword_101637010 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100010324(v3, (uint64_t)qword_10170EB10);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Missing BeaconStoreActor!", v6, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_100C24648()
{
  *(void *)(v0 + 400) = *(void *)(*(void *)(v0 + 392) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C246BC, 0, 0);
}

uint64_t sub_100C246BC()
{
  uint64_t v2 = v0[49];
  uint64_t v1 = v0[50];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[51] = v3;
  v3[2] = v1;
  v3[3] = sub_1001D4090;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[52] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_101653DD0);
  *uint64_t v4 = v0;
  v4[1] = sub_100C247D4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 30, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1001D4098, v3, v5);
}

uint64_t sub_100C247D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 424) = *(void *)(v1 + 240);
  return _swift_task_switch(sub_100C24944, v2, 0);
}

uint64_t sub_100C24944()
{
  uint64_t v1 = *(void *)(v0 + 424);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v27 = _swiftEmptyArrayStorage;
    sub_1000B7034(0, v2, 0);
    uint64_t v4 = v1 + 32;
    uint64_t v5 = _swiftEmptyArrayStorage;
    do
    {
      sub_10001D010(v4, v0 + 56);
      uint64_t v6 = *(void *)(v0 + 80);
      uint64_t v7 = *(void *)(v0 + 88);
      sub_10001CD44((void *)(v0 + 56), v6);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v7 + 8) + 8) + 32))(v6);
      _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 56);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1000B7034(0, v5[2] + 1, 1);
        uint64_t v5 = v27;
      }
      unint64_t v9 = v5[2];
      unint64_t v8 = v5[3];
      if (v9 >= v8 >> 1)
      {
        sub_1000B7034(v8 > 1, v9 + 1, 1);
        uint64_t v5 = v27;
      }
      uint64_t v10 = *(void *)(v0 + 352);
      uint64_t v11 = *(void *)(v0 + 312);
      v5[2] = v9 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v5+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v9, v10, v11);
      uint64_t v27 = v5;
      v4 += 40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 432) = v5;
  uint64_t v12 = v5[2];
  *(void *)(v0 + 440) = v12;
  uint64_t v13 = *(void *)(v0 + 320);
  if (v12)
  {
    int v14 = *(_DWORD *)(v13 + 80);
    *(_DWORD *)(v0 + 560) = v14;
    *(void *)(v0 + 448) = *(void *)(v13 + 72);
    os_log_type_t v15 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 16);
    *(void *)(v0 + 456) = v15;
    *(void *)(v0 + 464) = 0;
    uint64_t v16 = *(void *)(v0 + 360);
    uint64_t v17 = *(void *)(v0 + 312);
    *(void *)(v0 + 472) = 0;
    *(void *)(v0 + 480) = (v13 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v15(v16, (char *)v5 + ((v14 + 32) & ~(unint64_t)v14), v17);
    uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    *(void *)(v0 + 488) = v18;
    v18(v16, 0, 1, v17);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v16, 1, v17) != 1)
    {
      uint64_t v19 = *(void *)(v0 + 360);
      uint64_t v20 = *(void *)(v0 + 344);
      uint64_t v21 = *(void *)(v0 + 312);
      uint64_t v22 = *(void *)(v0 + 320);
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32);
      *(void *)(v0 + 496) = v23;
      *(void *)(v0 + 504) = (v22 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      v23(v20, v19, v21);
      uint64_t v24 = *(void *)(v0 + 392);
      return _swift_task_switch(sub_100C24CB4, v24, 0);
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v13 + 56))(*(void *)(v0 + 360), 1, 1, *(void *)(v0 + 312));
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100C24CB4()
{
  uint64_t v1 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 496);
  int64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v5 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 344);
  uint64_t v6 = *(void *)(v0 + 312);
  unint64_t v7 = (*(unsigned __int8 *)(v0 + 560) + 24) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560);
  *(void *)(v0 + 512) = *(void *)(v3 + 136);
  v2(v5, v4, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 520) = v8;
  *(void *)(v8 + 16) = v3;
  v1(v8 + v7, v5, v6);
  swift_retain();
  return _swift_task_switch(sub_100C24DA8, 0, 0);
}

uint64_t sub_100C24DA8()
{
  uint64_t v1 = v0[65];
  uint64_t v2 = v0[64];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[66] = v3;
  v3[2] = v2;
  v3[3] = sub_100C26B84;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[67] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C24EB0;
  uint64_t v6 = v0[34];
  uint64_t v5 = v0[35];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100C26BF8, v3, v6);
}

uint64_t sub_100C24EB0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C25000, v1, 0);
}

uint64_t sub_100C25000()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 280);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 296) + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 320) + 8))(*(void *)(v0 + 344), *(void *)(v0 + 312));
    sub_100C26C04(v2);
    uint64_t v3 = *(void *)(v0 + 472) + 1;
    if (v3 == *(void *)(v0 + 440))
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 488))(*(void *)(v0 + 360), 1, 1, *(void *)(v0 + 312));
LABEL_6:
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
      return v23();
    }
    uint64_t v17 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 456);
    uint64_t v18 = *(void *)(v0 + 360);
    uint64_t v19 = *(void *)(v0 + 312);
    uint64_t v20 = *(void *)(v0 + 320);
    unint64_t v21 = *(void *)(v0 + 432)
        + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560))
        + *(void *)(v0 + 448) * v3;
    *(void *)(v0 + 472) = v3;
    *(void *)(v0 + 480) = (v20 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v17(v18, v21, v19);
    uint64_t v22 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56);
    *(void *)(v0 + 488) = v22;
    v22(v18, 0, 1, v19);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1) {
      goto LABEL_6;
    }
    uint64_t v25 = *(void *)(v0 + 360);
    uint64_t v26 = *(void *)(v0 + 344);
    uint64_t v27 = *(void *)(v0 + 312);
    uint64_t v28 = *(void *)(v0 + 320);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32);
    *(void *)(v0 + 496) = v29;
    *(void *)(v0 + 504) = (v28 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v29(v26, v25, v27);
    uint64_t v15 = *(void *)(v0 + 392);
    uint64_t v16 = sub_100C24CB4;
  }
  else
  {
    uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 456);
    uint64_t v5 = *(void *)(v0 + 344);
    uint64_t v7 = *(void *)(v0 + 304);
    uint64_t v6 = *(void *)(v0 + 312);
    unint64_t v9 = *(int **)(v0 + 256);
    uint64_t v8 = *(void *)(v0 + 264);
    sub_100C26E1C(v2, v7, (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
    v4(v8, v5, v6);
    uint64_t v10 = *(void *)(v7 + *(int *)(v1 + 28));
    uint64_t v11 = (void *)(v8 + v9[6]);
    v11[3] = &type metadata for PrimaryIndex;
    v11[4] = sub_1001A1640();
    *uint64_t v11 = v10;
    uint64_t v12 = v7 + *(int *)(v1 + 32);
    uint64_t v13 = v8 + v9[7];
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v12, v14);
    *(unsigned char *)(v8 + v9[5]) = 8;
    uint64_t v15 = *(void *)(v0 + 376);
    uint64_t v16 = sub_100C25344;
  }
  return _swift_task_switch(v16, v15, 0);
}

uint64_t sub_100C25344()
{
  uint64_t v1 = *(void *)(v0[47] + 128);
  if (!v1)
  {
    if (qword_101637480 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100010324(v5, (uint64_t)qword_10166B720);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "No observation store on this platform!", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v4 = v0[58];
    goto LABEL_9;
  }
  uint64_t v2 = v0[58];
  uint64_t v3 = v0[33];
  swift_retain();
  sub_100192F74(v3, v1);
  v0[68] = v2;
  if (v2)
  {
    swift_release();
    swift_errorRelease();
    uint64_t v4 = 0;
LABEL_9:
    v0[69] = v4;
    uint64_t v9 = v0[31];
    sub_100C26EEC(v0[33], (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
    uint64_t v10 = sub_100C25760;
    uint64_t v11 = v9;
    goto LABEL_11;
  }
  uint64_t v12 = v0[33];
  uint64_t v13 = v0[31];
  swift_release();
  sub_100C26EEC(v12, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
  uint64_t v10 = sub_100C25514;
  uint64_t v11 = v13;
LABEL_11:
  return _swift_task_switch(v10, v11, 0);
}

uint64_t sub_100C25514()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  sub_100C26EEC(*(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void *)(v0 + 472) + 1;
  if (v4 == *(void *)(v0 + 440))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 488))(*(void *)(v0 + 360), 1, 1, *(void *)(v0 + 312));
LABEL_4:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  *(void *)(v0 + 464) = *(void *)(v0 + 544);
  *(void *)(v0 + 472) = v4;
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 456);
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 320);
  unint64_t v9 = *(void *)(v0 + 432)
     + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560))
     + *(void *)(v0 + 448) * v4;
  *(void *)(v0 + 480) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v6, v9, v7);
  uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  *(void *)(v0 + 488) = v10;
  v10(v6, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  *(void *)(v0 + 496) = v17;
  *(void *)(v0 + 504) = (v16 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v17(v14, v13, v15);
  uint64_t v18 = *(void *)(v0 + 392);
  return _swift_task_switch(sub_100C24CB4, v18, 0);
}

uint64_t sub_100C25760()
{
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 320);
  sub_100C26EEC(*(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for KeyAlignmentRecord);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = *(void *)(v0 + 472) + 1;
  if (v4 == *(void *)(v0 + 440))
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 488))(*(void *)(v0 + 360), 1, 1, *(void *)(v0 + 312));
LABEL_4:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  *(void *)(v0 + 464) = *(void *)(v0 + 552);
  *(void *)(v0 + 472) = v4;
  uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 456);
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 312);
  uint64_t v8 = *(void *)(v0 + 320);
  unint64_t v9 = *(void *)(v0 + 432)
     + ((*(unsigned __int8 *)(v0 + 560) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 560))
     + *(void *)(v0 + 448) * v4;
  *(void *)(v0 + 480) = (v8 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v6, v9, v7);
  uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  *(void *)(v0 + 488) = v10;
  v10(v6, 0, 1, v7);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    goto LABEL_4;
  }
  uint64_t v13 = *(void *)(v0 + 360);
  uint64_t v14 = *(void *)(v0 + 344);
  uint64_t v15 = *(void *)(v0 + 312);
  uint64_t v16 = *(void *)(v0 + 320);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  *(void *)(v0 + 496) = v17;
  *(void *)(v0 + 504) = (v16 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v17(v14, v13, v15);
  uint64_t v18 = *(void *)(v0 + 392);
  return _swift_task_switch(sub_100C24CB4, v18, 0);
}

uint64_t sub_100C259AC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for StandaloneBeaconService()
{
  return self;
}

char *sub_100C25A28(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      unint64_t v9 = (int *)type metadata accessor for StandaloneBeacon();
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for MACAddress();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      v14(&a1[v9[6]], &a2[v9[6]], v13);
      uint64_t v15 = v9[7];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v19 = v9[8];
      uint64_t v20 = &a1[v19];
      unint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for Date();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      uint64_t v24 = v9[9];
      uint64_t v25 = (uint64_t *)&a1[v24];
      uint64_t v26 = (uint64_t *)&a2[v24];
      uint64_t v27 = *v26;
      unint64_t v28 = v26[1];
      sub_1000361E0(*v26, v28);
      uint64_t *v25 = v27;
      v25[1] = v28;
      uint64_t v29 = v9[10];
      uint64_t v30 = (uint64_t *)&a1[v29];
      os_log_t v31 = &a2[v29];
      uint64_t v32 = *(void *)&a2[v29];
      unint64_t v33 = *(void *)&a2[v29 + 8];
      sub_1000361E0(v32, v33);
      *uint64_t v30 = v32;
      v30[1] = v33;
      uint64_t v34 = *((void *)v31 + 2);
      unint64_t v35 = *((void *)v31 + 3);
      sub_1000361E0(v34, v35);
      void v30[2] = v34;
      uint64_t v30[3] = v35;
      uint64_t v36 = *((void *)v31 + 4);
      unint64_t v37 = *((void *)v31 + 5);
      sub_1000361E0(v36, v37);
      void v30[4] = v36;
      v30[5] = v37;
      uint64_t v38 = v9[11];
      uint64_t v39 = (uint64_t *)&a1[v38];
      unint64_t v40 = (uint64_t *)&a2[v38];
      uint64_t v41 = *v40;
      unint64_t v42 = v40[1];
      sub_1000361E0(*v40, v42);
      *uint64_t v39 = v41;
      v39[1] = v42;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100C25C9C(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    int v5 = (int *)type metadata accessor for StandaloneBeacon();
    uint64_t v6 = a1 + v5[5];
    uint64_t v7 = type metadata accessor for MACAddress();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    v8(v6, v7);
    v8(a1 + v5[6], v7);
    swift_bridgeObjectRelease();
    uint64_t v9 = a1 + v5[8];
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    sub_10001CFB8(*(void *)(a1 + v5[9]), *(void *)(a1 + v5[9] + 8));
    uint64_t v11 = a1 + v5[10];
    sub_10001CFB8(*(void *)v11, *(void *)(v11 + 8));
    sub_10001CFB8(*(void *)(v11 + 16), *(void *)(v11 + 24));
    sub_10001CFB8(*(void *)(v11 + 32), *(void *)(v11 + 40));
    uint64_t v12 = (uint64_t *)(a1 + v5[11]);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    return sub_10001CFB8(v13, v14);
  }
  return result;
}

uint64_t sub_100C25E2C(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = (int *)type metadata accessor for StandaloneBeacon();
    uint64_t v7 = v6[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = type metadata accessor for MACAddress();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v11(a1 + v6[6], a2 + v6[6], v10);
    uint64_t v12 = v6[7];
    uint64_t v13 = (void *)(a1 + v12);
    unint64_t v14 = (void *)(a2 + v12);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = v6[8];
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    uint64_t v21 = v6[9];
    uint64_t v22 = (uint64_t *)(a1 + v21);
    uint64_t v23 = (uint64_t *)(a2 + v21);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    sub_1000361E0(*v23, v25);
    *uint64_t v22 = v24;
    v22[1] = v25;
    uint64_t v26 = v6[10];
    uint64_t v27 = (uint64_t *)(a1 + v26);
    unint64_t v28 = (void *)(a2 + v26);
    uint64_t v29 = *(void *)(a2 + v26);
    unint64_t v30 = *(void *)(a2 + v26 + 8);
    sub_1000361E0(v29, v30);
    *uint64_t v27 = v29;
    v27[1] = v30;
    uint64_t v31 = v28[2];
    unint64_t v32 = v28[3];
    sub_1000361E0(v31, v32);
    uint64_t v27[2] = v31;
    v27[3] = v32;
    uint64_t v33 = v28[4];
    unint64_t v34 = v28[5];
    sub_1000361E0(v33, v34);
    v27[4] = v33;
    v27[5] = v34;
    uint64_t v35 = v6[11];
    uint64_t v36 = (uint64_t *)(a1 + v35);
    unint64_t v37 = (uint64_t *)(a2 + v35);
    uint64_t v38 = *v37;
    unint64_t v39 = v37[1];
    sub_1000361E0(*v37, v39);
    uint64_t *v36 = v38;
    v36[1] = v39;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100C26048(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100C26EEC(a1, (uint64_t (*)(void))type metadata accessor for StandaloneBeaconService.BeaconStreamChange);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = (int *)type metadata accessor for StandaloneBeacon();
      uint64_t v7 = v6[5];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = type metadata accessor for MACAddress();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
      v11(v8, v9, v10);
      v11(a1 + v6[6], a2 + v6[6], v10);
      uint64_t v12 = v6[7];
      uint64_t v13 = (void *)(a1 + v12);
      unint64_t v14 = (void *)(a2 + v12);
      *uint64_t v13 = *v14;
      v13[1] = v14[1];
      uint64_t v15 = v6[8];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = type metadata accessor for Date();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      uint64_t v20 = v6[9];
      uint64_t v21 = (uint64_t *)(a1 + v20);
      uint64_t v22 = (uint64_t *)(a2 + v20);
      uint64_t v23 = *v22;
      unint64_t v24 = v22[1];
      sub_1000361E0(*v22, v24);
      *uint64_t v21 = v23;
      v21[1] = v24;
      uint64_t v25 = v6[10];
      uint64_t v26 = (uint64_t *)(a1 + v25);
      uint64_t v27 = (void *)(a2 + v25);
      uint64_t v28 = *(void *)(a2 + v25);
      unint64_t v29 = *(void *)(a2 + v25 + 8);
      sub_1000361E0(v28, v29);
      *uint64_t v26 = v28;
      v26[1] = v29;
      uint64_t v30 = v27[2];
      unint64_t v31 = v27[3];
      sub_1000361E0(v30, v31);
      void v26[2] = v30;
      void v26[3] = v31;
      uint64_t v32 = v27[4];
      unint64_t v33 = v27[5];
      sub_1000361E0(v32, v33);
      v26[4] = v32;
      v26[5] = v33;
      uint64_t v34 = v6[11];
      uint64_t v35 = (uint64_t *)(a1 + v34);
      uint64_t v36 = (uint64_t *)(a2 + v34);
      uint64_t v37 = *v36;
      unint64_t v38 = v36[1];
      sub_1000361E0(*v36, v38);
      *uint64_t v35 = v37;
      v35[1] = v38;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for StandaloneBeaconService.BeaconStreamChange()
{
  uint64_t result = qword_10165BBD0;
  if (!qword_10165BBD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100C262DC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = (int *)type metadata accessor for StandaloneBeacon();
    uint64_t v7 = v6[5];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    uint64_t v10 = type metadata accessor for MACAddress();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v11(a1 + v6[6], a2 + v6[6], v10);
    *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
    uint64_t v12 = v6[8];
    uint64_t v13 = a1 + v12;
    uint64_t v14 = a2 + v12;
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
    uint64_t v16 = v6[10];
    uint64_t v17 = (_OWORD *)(a1 + v16);
    uint64_t v18 = (_OWORD *)(a2 + v16);
    long long v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    void v17[2] = v18[2];
    *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100C26490(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100C26EEC(a1, (uint64_t (*)(void))type metadata accessor for StandaloneBeaconService.BeaconStreamChange);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = (int *)type metadata accessor for StandaloneBeacon();
      uint64_t v7 = v6[5];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      uint64_t v10 = type metadata accessor for MACAddress();
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v11(a1 + v6[6], a2 + v6[6], v10);
      *(_OWORD *)(a1 + v6[7]) = *(_OWORD *)(a2 + v6[7]);
      uint64_t v12 = v6[8];
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)(a1 + v6[9]) = *(_OWORD *)(a2 + v6[9]);
      uint64_t v16 = v6[10];
      uint64_t v17 = (_OWORD *)(a1 + v16);
      uint64_t v18 = (_OWORD *)(a2 + v16);
      long long v19 = v18[1];
      *uint64_t v17 = *v18;
      v17[1] = v19;
      void v17[2] = v18[2];
      *(_OWORD *)(a1 + v6[11]) = *(_OWORD *)(a2 + v6[11]);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100C26668()
{
  uint64_t result = type metadata accessor for StandaloneBeacon();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100C2672C()
{
  *(void *)(v1 + 16) = v0;
  sub_10000588C(&qword_10164DBB0);
  *(void *)(v1 + 24) = swift_task_alloc();
  return _swift_task_switch(sub_100C267C0, v0, 0);
}

uint64_t sub_100C267C0()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v5 = sub_100C26DD4(&qword_10165B250, v4, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconService);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v1;
  v6[3] = v5;
  v6[4] = v1;
  swift_retain_n();
  sub_1008F5E44(v2, (uint64_t)&unk_10165BC18, (uint64_t)v6);
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100C268F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100C26DD4(&qword_10165B250, a2, (void (*)(uint64_t))type metadata accessor for StandaloneBeaconService);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100C2694C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EB28);
  sub_100010324(v0, (uint64_t)qword_10170EB28);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100C269D0()
{
  return sub_100C26FA4((void (*)(void))&_swift_unknownObjectRelease);
}

uint64_t sub_100C269E8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100033F68;
  return sub_100C20B60(a1, v4, v5, v6);
}

uint64_t sub_100C26A9C(uint64_t a1)
{
  return sub_100C1F920(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100C26AB8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100C26B84@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for UUID();

  return sub_100E62D74(a1);
}

uint64_t sub_100C26BF8(uint64_t a1)
{
  return sub_10012A4FC(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_100C26C04(uint64_t a1)
{
  uint64_t v2 = sub_10000588C(&qword_10163BB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100C26C64(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10001D2E4;
  return sub_100C22EB4(a1, a2);
}

uint64_t sub_100C26D14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100C23554(a1, a2);
}

uint64_t sub_100C26D34()
{
  uint64_t result = (*(uint64_t (**)(void))(v0 + 16))();
  if (v1) {
    return swift_allocError();
  }
  return result;
}

unint64_t sub_100C26D80()
{
  unint64_t result = qword_10165BC48;
  if (!qword_10165BC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10165BC48);
  }
  return result;
}

uint64_t sub_100C26DD4(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100C26E1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C26E84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100C26EEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100C26F4C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C26F84()
{
  return sub_100C203B8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100C26F8C()
{
  return sub_100C26FA4((void (*)(void))&_swift_release);
}

uint64_t sub_100C26FA4(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return _swift_deallocObject(v1, 40, 7);
}

uint64_t sub_100C26FEC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void (*)(uint64_t))v0[3];
  uint64_t v3 = v0[4];
  swift_retain();
  sub_100B505EC(v1, v2, v3);

  return swift_release();
}

uint64_t sub_100C27044()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100C2707C(uint64_t a1)
{
  return sub_100C209AC(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_10163BCC8, (void (*)(unsigned char *, unsigned char *))sub_10001CEB0);
}

uint64_t sub_100C270B4(uint64_t a1)
{
  return sub_100C209AC(a1, *(uint64_t (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), &qword_10163BCC0, (void (*)(unsigned char *, unsigned char *))sub_10001CEB0);
}

uint64_t sub_100C270EC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001D2E4;
  return sub_100C20458(v2);
}

unsigned char *storeEnumTagSinglePayload for StandaloneBeaconService.StandaloneBeaconServiceError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100C27220);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StandaloneBeaconService.StandaloneBeaconServiceError()
{
  return &type metadata for StandaloneBeaconService.StandaloneBeaconServiceError;
}

unint64_t sub_100C2725C()
{
  unint64_t result = qword_10165BC68;
  if (!qword_10165BC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10165BC68);
  }
  return result;
}

uint64_t sub_100C272B8(uint64_t a1)
{
  return sub_100C26A9C(a1);
}

uint64_t sub_100C272D0(uint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100A6F328(0, *(void *)(v3 + 16) + 1, 1, v3);
  }
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v4 = *(void *)(v3 + 24);
  if (v5 >= v4 >> 1) {
    unint64_t v3 = sub_100A6F328(v4 > 1, v5 + 1, 1, v3);
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = *(void *)(type metadata accessor for KeyDropInterface.KeyPackage(0) - 8);
  uint64_t result = sub_100CBD1B4(a1, v3+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v5, type metadata accessor for KeyDropInterface.KeyPackage);
  *uint64_t v1 = v3;
  return result;
}

void *sub_100C273E0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_1000B6ED0(0, v1, 0);
  uint64_t result = (void *)sub_10115FE18(a1);
  uint64_t v4 = (uint64_t)result;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_14;
    }
    char v17 = v8;
    unint64_t v9 = sub_1012638E4(*(unsigned char *)(*(void *)(a1 + 48) + v4));
    uint64_t v11 = v10;
    unint64_t v13 = _swiftEmptyArrayStorage[2];
    unint64_t v12 = _swiftEmptyArrayStorage[3];
    if (v13 >= v12 >> 1) {
      sub_1000B6ED0(v12 > 1, v13 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v13 + 1;
    uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
    void v14[4] = v9;
    v14[5] = v11;
    uint64_t result = (void *)sub_10052CB9C(v4, v6, v17 & 1, a1);
    uint64_t v4 = (uint64_t)result;
    uint64_t v6 = v15;
    char v8 = v16 & 1;
    if (!--v1)
    {
      sub_1001A1CB8((uint64_t)result, v15, v8);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void sub_100C27558(uint64_t a1@<X8>)
{
  sub_100CB3370(v1, a1);
}

uint64_t sub_100C275B4(uint64_t a1)
{
  uint64_t v4 = a1;
  swift_bridgeObjectRetain();
  sub_100C27A44(&v4);
  uint64_t v2 = v4;
  if (v1) {
    swift_release();
  }
  return v2;
}

uint64_t sub_100C27604(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_10000588C(&qword_101638D40);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    uint64_t v11 = a2;
    uint64_t v8 = *(void *)(*(void *)(v3 + 64) + 40);
    id v9 = a2;
    sub_10001D608((uint64_t)&v11, v8, &qword_10165C120);
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100C276D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for P256.Signing.PublicKey();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for P256.Signing.PrivateKey();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(type metadata accessor for KeyDropJoinToken(0) + 20));
  unint64_t v12 = v11[1];
  uint64_t v18 = *v11;
  unint64_t v19 = v12;
  sub_1000361E0(v18, v12);
  uint64_t result = P256.Signing.PrivateKey.init<A>(rawRepresentation:)();
  if (!v1)
  {
    P256.Signing.PrivateKey.publicKey.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v14 = P256.Signing.PublicKey.compactRepresentation.getter();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v16 >> 60 == 15)
    {
      sub_100130078();
      swift_allocError();
      *char v17 = 18;
      return swift_willThrow();
    }
    else
    {
      uint64_t v18 = v14;
      unint64_t v19 = v16;
      sub_1000362FC();
      DataProtocol.stableUUID.getter();
      return sub_100037A24(v14, v16);
    }
  }
  return result;
}

Swift::Int sub_100C27910(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, void (*a4)(void, void, void))
{
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a2(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  Swift::Int result = sub_100CB3678(v11, a3, a4);
  *a1 = v8;
  return result;
}

Swift::Int sub_100C2799C(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for OwnerSharingCircle() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100B735FC(v3);
  }
  uint64_t v4 = (void *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100CB3D94(v6);
  *a1 = v3;
  return result;
}

Swift::Int sub_100C27A44(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100B73610(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_100CB5EA8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_100C27AB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_10001E384(v0, qword_10170EB40);
  sub_100010324(v0, (uint64_t)qword_10170EB40);
  return Logger.init(subsystem:category:)();
}

uint64_t sub_100C27B34()
{
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();

  return sub_100010324(v0, (uint64_t)qword_10170EB40);
}

uint64_t sub_100C27B98@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4 = sub_100CB881C(a1, a2);
  uint64_t v5 = sub_1008AB3D0(v4);
  uint64_t v7 = v6;
  uint64_t result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

uint64_t sub_100C27BF0()
{
  if (*(void *)(*(void *)(v0 + *(int *)(type metadata accessor for SharingCircleKeyManager.Instruction(0) + 32))
                 + 16) < 4uLL)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_100C273E0(v4);
    swift_bridgeObjectRelease();
    sub_10000588C(&qword_101654A30);
    sub_100062734((unint64_t *)&qword_10163A100, &qword_101654A30);
    uint64_t v5 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = v5;
    v8._object = v7;
    String.append(_:)(v8);
    swift_bridgeObjectRelease();
    v9._countAndFlagsBits = 93;
    v9._object = (void *)0xE100000000000000;
    String.append(_:)(v9);
    uint64_t v1 = 91;
    uint64_t v3 = (void *)0xE100000000000000;
  }
  else
  {
    uint64_t v1 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v3 = v2;
  }
  _StringGuts.grow(_:)(45);
  v10._object = (void *)0x8000000101416B70;
  v10._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v10);
  type metadata accessor for UUID();
  sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0x3A7365707974202CLL;
  v12._object = (void *)0xE900000000000020;
  String.append(_:)(v12);
  v13._countAndFlagsBits = v1;
  v13._object = v3;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x69726F697270202CLL;
  v14._object = (void *)0xEC000000203A7974;
  String.append(_:)(v14);
  _print_unlocked<A, B>(_:_:)();
  v15._countAndFlagsBits = 93;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return 0;
}

uint64_t sub_100C27E6C()
{
  *(void *)(v1 + 32) = v0;
  return _swift_task_switch(sub_100C27E8C, 0, 0);
}

uint64_t sub_100C27E8C()
{
  uint64_t v1 = v0[4];
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for SharingCircleKeyManager.Instruction(0) + 40)) == 1)
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v2 = v0 + 3;
    uint64_t v3 = qword_10170E390;
    v0[5] = qword_10170E390;
    swift_retain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[6] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100C2805C;
  }
  else
  {
    if (qword_101636CD8 != -1) {
      swift_once();
    }
    uint64_t v2 = v0 + 2;
    uint64_t v3 = qword_10170E390;
    v0[7] = qword_10170E390;
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[8] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100C281F8;
  }
  return unsafeBlocking<A>(_:)(v2, sub_10001D704, v3, &type metadata for Configuration);
}

uint64_t sub_100C2805C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C28174, 0, 0);
}

uint64_t sub_100C28174()
{
  uint64_t v1 = sub_1010AC24C(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(__n128))(v0 + 8);
  v2.n128_f64[0] = (double)(unint64_t)v1 * 86400.0;
  return v3(v2);
}

uint64_t sub_100C281F8()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C28310, 0, 0);
}

uint64_t sub_100C28310()
{
  uint64_t v1 = sub_1010AC238(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(__n128))(v0 + 8);
  v2.n128_f64[0] = (double)(unint64_t)v1 * 86400.0;
  return v3(v2);
}

uint64_t sub_100C28394()
{
  __n128 v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *__n128 v2 = v1;
  v2[1] = sub_100C2843C;
  v2[4] = v0;
  return _swift_task_switch(sub_100C27E8C, 0, 0);
}

uint64_t sub_100C2843C(double a1)
{
  *(double *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C2853C, 0, 0);
}

uint64_t sub_100C2853C()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  OS_dispatch_queue.sync<A>(execute:)();
  unint64_t v1 = sub_1010AB688(*(void *)(v0 + 16));
  uint64_t result = swift_bridgeObjectRelease();
  if ((v1 & 0x8000000000000000) != 0) {
    return _assertionFailure(_:_:file:line:flags:)();
  }
  if (!is_mul_ok(v1, 0x3CuLL))
  {
    __break(1u);
    goto LABEL_13;
  }
  double v3 = *(double *)(v0 + 32) / (double)(60 * v1);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v3 <= -1.0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3 >= 1.84467441e19)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v4 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v4((unint64_t)v3);
}

uint64_t sub_100C286DC()
{
  return _swift_task_switch(sub_100C286F8, 0, 0);
}

uint64_t sub_100C286F8()
{
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10170E390;
  *(void *)(v0 + 24) = qword_10170E390;
  swift_retain();
  __n128 v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *__n128 v2 = v0;
  v2[1] = sub_100C28804;
  return unsafeBlocking<A>(_:)(v0 + 16, sub_10001D704, v1, &type metadata for Configuration);
}

uint64_t sub_100C28804()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C2891C, 0, 0);
}

uint64_t sub_100C2891C()
{
  uint64_t v1 = sub_1010AC260(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  double v3 = *(uint64_t (**)(__n128))(v0 + 8);
  v2.n128_f64[0] = (double)(unint64_t)v1 * 86400.0;
  return v3(v2);
}

uint64_t sub_100C289A0(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Date();
  v2[5] = v3;
  void v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_100C28A60, 0, 0);
}

uint64_t sub_100C28A60()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4 + *(int *)(v5 + 48), v3);
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10170E390;
  v0[8] = qword_10170E390;
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  v0[9] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100C28B9C;
  return unsafeBlocking<A>(_:)(v0 + 2, sub_10001D704, v6, &type metadata for Configuration);
}

uint64_t sub_100C28B9C()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C28CB4, 0, 0);
}

uint64_t sub_100C28CB4()
{
  sub_1010AC274(*(void *)(v0 + 16));
  swift_bridgeObjectRelease();
  DateInterval.init(start:duration:)();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100C28D5C()
{
  return 0xD000000000000011;
}

uint64_t sub_100C28D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100CC282C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100C28DA4(uint64_t a1)
{
  unint64_t v2 = sub_100CC25FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100C28DE0(uint64_t a1)
{
  unint64_t v2 = sub_100CC25FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100C28E1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_10000588C(&qword_10165C508);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100CC25FC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_100C28F94(void *a1)
{
  uint64_t v2 = sub_10000588C(&qword_10165C4F8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001CD44(a1, a1[3]);
  sub_100CC25FC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100C290CC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = type metadata accessor for KeyDropJoinToken(0);
  uint64_t v82 = *(void *)(v3 - 8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)&v68 - v7;
  uint64_t v78 = type metadata accessor for HashAlgorithm();
  uint64_t v90 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SharingCircleSecretValue();
  uint64_t v89 = *(void **)(v10 - 8);
  __chkstk_darwin(v10);
  Swift::String v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10000588C(&qword_10163B070);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SymmetricKey256();
  unint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v84 = v15;
  unint64_t v80 = v17 + 56;
  uint64_t v81 = v16;
  uint64_t v79 = v18;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v15, 1, 1);
  if (qword_101636B18 != -1) {
    goto LABEL_41;
  }
  while (2)
  {
    uint64_t v19 = type metadata accessor for Logger();
    sub_100010324(v19, (uint64_t)qword_10170DED0);
    swift_bridgeObjectRetain();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    uint64_t v83 = v10;
    if (v22)
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 134217984;
      uint64_t v10 = v83;
      unint64_t v91 = *(char **)(a1 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Initializing DelegatedKeychain with %ld secretValues.", v23, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v24 = a1;
    a1 = *(void *)(a1 + 16);
    if (!a1)
    {
      swift_bridgeObjectRelease();
      uint64_t v52 = _swiftEmptyArrayStorage;
      unint64_t v17 = 0xF000000000000000;
      goto LABEL_36;
    }
    uint64_t v87 = 0;
    unint64_t v25 = (*((unsigned __int8 *)v89 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v89 + 80);
    uint64_t v68 = v24;
    uint64_t v26 = v24 + v25;
    unsigned int v73 = enum case for HashAlgorithm.sha256(_:);
    uint64_t v72 = (void (**)(char *, void, uint64_t))(v90 + 104);
    uint64_t v71 = (void (**)(char *, uint64_t))(v90 + 8);
    unint64_t v76 = (void (**)(uint64_t, char *, uint64_t))(v17 + 32);
    uint64_t v90 = v89[9];
    uint64_t v89 = _swiftEmptyArrayStorage;
    unint64_t v17 = 0xF000000000000000;
    os_log_type_t v70 = v12;
    uint64_t v74 = v8;
    unint64_t v75 = v6;
LABEL_9:
    sub_100CBD0EC(v26, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        sub_10001CFB8(*(void *)v12, *((void *)v12 + 1));
        goto LABEL_8;
      case 4u:
        sub_100CBD1B4((uint64_t)v12, (uint64_t)v8, type metadata accessor for KeyDropJoinToken);
        sub_100CBD0EC((uint64_t)v8, (uint64_t)v6, type metadata accessor for KeyDropJoinToken);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v29 = (unint64_t)v89;
        }
        else {
          unint64_t v29 = sub_100A6E62C(0, v89[2] + 1, 1, (unint64_t)v89);
        }
        unint64_t v31 = *(void *)(v29 + 16);
        unint64_t v30 = *(void *)(v29 + 24);
        if (v31 >= v30 >> 1) {
          unint64_t v29 = sub_100A6E62C(v30 > 1, v31 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v31 + 1;
        unint64_t v32 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
        uint64_t v89 = (void *)v29;
        sub_100CBD1B4((uint64_t)v6, v29 + v32 + *(void *)(v82 + 72) * v31, type metadata accessor for KeyDropJoinToken);
        sub_100CBD154((uint64_t)v8, type metadata accessor for KeyDropJoinToken);
        goto LABEL_8;
      case 5u:
        uint64_t v27 = (uint64_t)v84;
        sub_10001DAB4((uint64_t)v84, &qword_10163B070);
        uint64_t v28 = v81;
        (*v76)(v27, v12, v81);
        v79(v27, 0, 1, v28);
        goto LABEL_8;
      case 6u:
        uint64_t v6 = *(char **)v12;
        Swift::String v12 = (char *)*((void *)v12 + 1);
        sub_1000361E0((uint64_t)v6, (unint64_t)v12);
        sub_100435A9C(57, (uint64_t)v6, (unint64_t)v12, (uint64_t *)&v91);
        Swift::String v8 = v91;
        unint64_t v33 = v92;
        switch(v92 >> 62)
        {
          case 1uLL:
            LODWORD(v34) = HIDWORD(v91) - v91;
            if (__OFSUB__(HIDWORD(v91), v91))
            {
              __break(1u);
LABEL_38:
              __break(1u);
LABEL_39:
              __break(1u);
LABEL_40:
              __break(1u);
LABEL_41:
              swift_once();
              continue;
            }
            uint64_t v34 = (int)v34;
LABEL_22:
            if (v34 != 57) {
              goto LABEL_50;
            }
            unint64_t v86 = v17;
            sub_1000361E0((uint64_t)v91, v92);
            uint64_t v38 = v88;
            uint64_t v39 = sub_100A948F8((uint64_t)v8, v33);
            if (v38)
            {
              uint64_t v88 = v38;
              static os_log_type_t.error.getter();
              if (qword_101636F48 != -1) {
                swift_once();
              }
              sub_10000588C((uint64_t *)&unk_10163AD00);
              uint64_t v60 = swift_allocObject();
              *(_OWORD *)(v60 + 16) = xmmword_101342130;
              unint64_t v91 = (char *)v88;
              swift_errorRetain();
              sub_10000588C(&qword_101638D40);
              uint64_t v61 = String.init<A>(describing:)();
              uint64_t v63 = v62;
              *(void *)(v60 + 56) = &type metadata for String;
              *(void *)(v60 + 64) = sub_10000B4CC();
              *(void *)(v60 + 32) = v61;
              *(void *)(v60 + 40) = v63;
              os_log(_:dso:log:_:_:)();
              swift_bridgeObjectRelease();
              sub_100130148();
              uint64_t v64 = swift_allocError();
              *uint64_t v65 = 0;
              swift_willThrow();
              swift_errorRelease();
              unint64_t v17 = v33;
              uint64_t v10 = (uint64_t)v8;
              goto LABEL_56;
            }
            uint64_t v40 = sub_100A90C58(v39, 0);
            uint64_t v88 = 0;
            uint64_t v10 = v40;
            unint64_t v17 = v41;
            CCECCryptorRelease();
            sub_10001CFB8((uint64_t)v8, v33);
            unint64_t v42 = v17 >> 62;
            uint64_t v85 = v12;
            switch(v17 >> 62)
            {
              case 1uLL:
                LODWORD(v43) = HIDWORD(v10) - v10;
                if (__OFSUB__(HIDWORD(v10), v10)) {
                  goto LABEL_40;
                }
                uint64_t v43 = (int)v43;
LABEL_31:
                if (v43 != 28)
                {
                  if (v42 == 1)
                  {
                    LODWORD(v42) = HIDWORD(v10) - v10;
                    if (!__OFSUB__(HIDWORD(v10), v10))
                    {
                      while (1)
                      {
                        uint64_t v59 = (int)v42;
LABEL_55:
                        sub_10013019C();
                        uint64_t v64 = swift_allocError();
                        *(void *)uint64_t v66 = 28;
                        *(void *)(v66 + 8) = v59;
                        *(unsigned char *)(v66 + 16) = 0;
                        swift_willThrow();
LABEL_56:
                        sub_10001CFB8(v10, v17);
                        unint64_t v91 = 0;
                        unint64_t v92 = 0xE000000000000000;
                        _StringGuts.grow(_:)(35);
                        v67._countAndFlagsBits = 0xD000000000000021;
                        v67._object = (void *)0x80000001013F3B70;
                        String.append(_:)(v67);
                        uint64_t v93 = v64;
                        sub_10000588C(&qword_101638D40);
                        _print_unlocked<A, B>(_:_:)();
LABEL_57:
                        _assertionFailure(_:_:file:line:flags:)();
                        __break(1u);
                      }
                    }
                    __break(1u);
                  }
                  if (v42 != 2)
                  {
                    uint64_t v59 = BYTE6(v17);
                    goto LABEL_55;
                  }
                  uint64_t v58 = *(void *)(v10 + 16);
                  uint64_t v57 = *(void *)(v10 + 24);
                  uint64_t v59 = v57 - v58;
                  if (!__OFSUB__(v57, v58)) {
                    goto LABEL_55;
                  }
                  __break(1u);
LABEL_50:
                  sub_10001CFB8((uint64_t)v8, v33);
                  goto LABEL_57;
                }
                uint64_t v46 = (uint64_t)v6;
                sub_10001CFB8((uint64_t)v8, v33);
                uint64_t v48 = v77;
                uint64_t v47 = v78;
                (*v72)(v77, v73, v78);
                uint64_t v49 = Data.hash(algorithm:)();
                unint64_t v51 = v50;
                (*v71)(v48, v47);
                sub_100037A24(v87, v86);
                sub_10001CFB8(v10, v17);
                sub_10001CFB8(v46, (unint64_t)v85);
                uint64_t v87 = v49;
                unint64_t v17 = v51;
                Swift::String v8 = v74;
                uint64_t v6 = v75;
                uint64_t v10 = v83;
                Swift::String v12 = v70;
LABEL_8:
                v26 += v90;
                if (--a1) {
                  goto LABEL_9;
                }
                swift_bridgeObjectRelease();
                a1 = v87;
                uint64_t v52 = v89;
                break;
              case 2uLL:
                uint64_t v45 = *(void *)(v10 + 16);
                uint64_t v44 = *(void *)(v10 + 24);
                BOOL v37 = __OFSUB__(v44, v45);
                uint64_t v43 = v44 - v45;
                if (!v37) {
                  goto LABEL_31;
                }
                goto LABEL_39;
              case 3uLL:
                uint64_t v59 = 0;
                goto LABEL_55;
              default:
                uint64_t v43 = BYTE6(v17);
                goto LABEL_31;
            }
LABEL_36:
            uint64_t v53 = v69;
            *uint64_t v69 = v52;
            uint64_t v54 = type metadata accessor for SharingCircleKeyManager.DelegatedKeychain(0);
            uint64_t result = sub_10001D608((uint64_t)v84, (uint64_t)v53 + *(int *)(v54 + 20), &qword_10163B070);
            uint64_t v56 = (void *)((char *)v53 + *(int *)(v54 + 24));
            *uint64_t v56 = a1;
            v56[1] = v17;
            return result;
          case 2uLL:
            uint64_t v36 = *((void *)v91 + 2);
            uint64_t v35 = *((void *)v91 + 3);
            BOOL v37 = __OFSUB__(v35, v36);
            uint64_t v34 = v35 - v36;
            if (!v37) {
              goto LABEL_22;
            }
            goto LABEL_38;
          case 3uLL:
            goto LABEL_50;
          default:
            uint64_t v34 = BYTE6(v92);
            goto LABEL_22;
        }
      default:
        sub_100CBD154((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
        goto LABEL_8;
    }
  }
}

uint64_t sub_100C29C0C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 24) = a3;
  *(void *)(v5 + 32) = v4;
  *(unsigned char *)(v5 + 133) = a4;
  *(unsigned char *)(v5 + 132) = a2;
  *(void *)(v5 + 16) = a1;
  uint64_t v6 = type metadata accessor for UUID();
  *(void *)(v5 + 40) = v6;
  *(void *)(v5 + 48) = *(void *)(v6 - 8);
  *(void *)(v5 + 56) = swift_task_alloc();
  *(void *)(v5 + 64) = swift_task_alloc();
  *(void *)(v5 + 72) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 - 8);
  *(void *)(v5 + 96) = swift_task_alloc();
  return _swift_task_switch(sub_100C29D50, v4, 0);
}

uint64_t sub_100C29D50()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 16);
  unint64_t v31 = sub_100CBC3A4(v5, *(unsigned char *)(v0 + 132));
  uint64_t v6 = (int *)type metadata accessor for OwnerSharingCircle();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v1, v5 + v6[5], v3);
  v7(v2, v5 + v6[6], v3);
  if (qword_101636950 != -1) {
    swift_once();
  }
  uint64_t v8 = *(void *)(v0 + 56);
  uint64_t v9 = *(void *)(v0 + 40);
  uint64_t v10 = *(void *)(v0 + 16);
  uint64_t v11 = sub_100010324(v9, (uint64_t)qword_10170DAA0);
  v7(v8, v11, v9);
  unsigned int v12 = 0x4000201u >> (8 * *(unsigned char *)(v10 + v6[7]));
  uint64_t v14 = *(void *)(v0 + 88);
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v16 = *(void *)(v0 + 72);
  Swift::String v15 = *(int **)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 64);
  uint64_t v28 = *(void *)(v0 + 56);
  uint64_t v18 = *(void *)(v0 + 40);
  uint64_t v19 = *(void *)(v0 + 48);
  uint64_t v20 = *(void *)(v0 + 24);
  char v29 = *(unsigned char *)(v0 + 132);
  char v30 = v12;
  swift_bridgeObjectRetain();
  UUID.init()();
  os_log_type_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  v21(v13 + v15[5], v16, v18);
  v21(v13 + v15[6], v17, v18);
  v21(v13 + v15[7], v28, v18);
  *(void *)(v13 + v15[8]) = v31;
  *(unsigned char *)(v13 + v15[9]) = v30;
  *(unsigned char *)(v13 + v15[10]) = v29;
  *(void *)(v13 + v15[11]) = v20;
  static Date.trustedNow.getter(v13 + v15[12]);
  sub_10000588C(&qword_10165C268);
  int v22 = *(_DWORD *)(v14 + 80);
  *(_DWORD *)(v0 + 128) = v22;
  unint64_t v23 = (v22 + 32) & ~(unint64_t)v22;
  uint64_t v24 = swift_allocObject();
  *(void *)(v0 + 104) = v24;
  *(_OWORD *)(v24 + 16) = xmmword_101342130;
  sub_100CBD0EC(v13, v24 + v23, type metadata accessor for SharingCircleKeyManager.Instruction);
  unint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v25;
  void *v25 = v0;
  v25[1] = sub_100C2A00C;
  char v26 = *(unsigned char *)(v0 + 133);
  return sub_100C33228(v24, v26);
}

uint64_t sub_100C2A00C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v3 = *(void *)(v2 + 32);
  if (v0) {
    uint64_t v4 = sub_100C2A250;
  }
  else {
    uint64_t v4 = sub_100C2A1A4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2A1A4()
{
  sub_100CBD154(*(void *)(v0 + 96), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2A250()
{
  sub_100CBD154(*(void *)(v0 + 96), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2A2FC(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for MemberSharingCircle();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100C2A408, v1, 0);
}

uint64_t sub_100C2A408()
{
  Swift::String v15 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[15];
  uint64_t v3 = type metadata accessor for Logger();
  v0[16] = sub_100010324(v3, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[15];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[5] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Restore member sharing circle keys: share-id: %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(v0[15], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v11 = (void *)swift_task_alloc();
  v0[17] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100C2A6E4;
  uint64_t v12 = v0[7];
  return sub_100C57E74(v12);
}

uint64_t sub_100C2A6E4(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(unsigned char *)(*(void *)v1 + 196) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C2A7FC, v2, 0);
}

uint64_t sub_100C2A7FC()
{
  uint64_t v23 = v0;
  if (*(unsigned char *)(v0 + 196) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100C2AC8C;
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_100C56A48(v2, v3, 0);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 56);
    sub_100CBD0EC(v6, *(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_100CBD0EC(v6, v5, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 112);
    if (v9)
    {
      uint64_t v11 = *(void *)(v0 + 96);
      uint64_t v12 = swift_slowAlloc();
      v22[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446723;
      unint64_t v13 = 0xEB00000000646574;
      uint64_t v14 = 0x70656363616E752ELL;
      switch(*(unsigned char *)(v10 + *(int *)(v11 + 40)))
      {
        case 1:
          unint64_t v13 = 0xE900000000000064;
          uint64_t v14 = 0x657470656363612ELL;
          break;
        case 2:
          unint64_t v13 = 0xEA00000000006465;
          uint64_t v14 = 0x747365757165722ELL;
          break;
        case 3:
          unint64_t v13 = 0xE500000000000000;
          uint64_t v14 = 0x746E65732ELL;
          break;
        case 4:
          unint64_t v13 = 0x80000001013F2860;
          uint64_t v14 = 0xD000000000000013;
          break;
        case 5:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v14 = 0x64656C6961662ELL;
          break;
        default:
          break;
      }
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 112);
      *(void *)(v0 + 16) = sub_1008FA0F0(v14, v13, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v16, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      *(_WORD *)(v12 + 12) = 2160;
      *(void *)(v0 + 24) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 32) = sub_1008FA0F0(v18, v19, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v17, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Member circle to restore is not allowed to restore keys, state: %{public}s, Share-id: %{private,mask.hash}s.", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 104);
      sub_100CBD154(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      sub_100CBD154(v15, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    sub_100130078();
    swift_allocError();
    *uint64_t v20 = 19;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_100C2AC8C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_100C2B1F8;
  }
  else {
    uint64_t v4 = sub_100C2ADB8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2ADB8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  sub_10000588C(&qword_10165C268);
  int v3 = *(_DWORD *)(v1 + 80);
  *(_DWORD *)(v0 + 192) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 160) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  sub_100CBD0EC(v2, v5 + v4, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100C2AEBC;
  return sub_100C362B0(v5);
}

uint64_t sub_100C2AEBC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 176) = a1;
  *(void *)(v4 + 184) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v1) {
    uint64_t v6 = sub_100C2B284;
  }
  else {
    uint64_t v6 = sub_100C2B05C;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100C2B05C()
{
  uint64_t v1 = v0[22];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = v0[11];
    uint64_t v3 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_100CBD154(v2, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    uint64_t v6 = v0[11];
    swift_bridgeObjectRelease();
    sub_100130078();
    swift_allocError();
    *uint64_t v7 = 16;
    swift_willThrow();
    sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_100C2B1F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2B284()
{
  sub_100CBD154(*(void *)(v0 + 88), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2B32C(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  uint64_t v3 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = type metadata accessor for MemberSharingCircle();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_100C2B438, v1, 0);
}

uint64_t sub_100C2B438()
{
  uint64_t v15 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[15];
  uint64_t v3 = type metadata accessor for Logger();
  v0[16] = sub_100010324(v3, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = v0[15];
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558275;
    v0[5] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_1008FA0F0(v9, v10, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Download keys: share-id: %{private,mask.hash}s.", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(v0[15], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  }

  uint64_t v11 = (void *)swift_task_alloc();
  v0[17] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100C2B714;
  uint64_t v12 = v0[7];
  return sub_100C57E74(v12);
}

uint64_t sub_100C2B714(char a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(unsigned char *)(*(void *)v1 + 196) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C2B82C, v2, 0);
}

uint64_t sub_100C2B82C()
{
  uint64_t v23 = v0;
  if (*(unsigned char *)(v0 + 196) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_100C2BCBC;
    uint64_t v2 = *(void *)(v0 + 88);
    uint64_t v3 = *(void *)(v0 + 56);
    return sub_100C56A48(v2, v3, 1);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v6 = *(void *)(v0 + 56);
    sub_100CBD0EC(v6, *(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_100CBD0EC(v6, v5, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 112);
    if (v9)
    {
      uint64_t v11 = *(void *)(v0 + 96);
      uint64_t v12 = swift_slowAlloc();
      v22[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446723;
      unint64_t v13 = 0xEB00000000646574;
      uint64_t v14 = 0x70656363616E752ELL;
      switch(*(unsigned char *)(v10 + *(int *)(v11 + 40)))
      {
        case 1:
          unint64_t v13 = 0xE900000000000064;
          uint64_t v14 = 0x657470656363612ELL;
          break;
        case 2:
          unint64_t v13 = 0xEA00000000006465;
          uint64_t v14 = 0x747365757165722ELL;
          break;
        case 3:
          unint64_t v13 = 0xE500000000000000;
          uint64_t v14 = 0x746E65732ELL;
          break;
        case 4:
          unint64_t v13 = 0x80000001013F2860;
          uint64_t v14 = 0xD000000000000013;
          break;
        case 5:
          unint64_t v13 = 0xE700000000000000;
          uint64_t v14 = 0x64656C6961662ELL;
          break;
        default:
          break;
      }
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 112);
      *(void *)(v0 + 16) = sub_1008FA0F0(v14, v13, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v16, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      *(_WORD *)(v12 + 12) = 2160;
      *(void *)(v0 + 24) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v12 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 32) = sub_1008FA0F0(v18, v19, v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v17, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Member circle to restore is not allowed to download keys, state: %{public}s, Share-id: %{private,mask.hash}s.", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 104);
      sub_100CBD154(*(void *)(v0 + 112), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
      sub_100CBD154(v15, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    }

    sub_100130078();
    swift_allocError();
    *uint64_t v20 = 19;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
}

uint64_t sub_100C2BCBC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  if (v0) {
    uint64_t v4 = sub_100CC2A68;
  }
  else {
    uint64_t v4 = sub_100C2BDE8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2BDE8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  sub_10000588C(&qword_10165C268);
  int v3 = *(_DWORD *)(v1 + 80);
  *(_DWORD *)(v0 + 192) = v3;
  unint64_t v4 = (v3 + 32) & ~(unint64_t)v3;
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 160) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_101342130;
  sub_100CBD0EC(v2, v5 + v4, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100C2BEEC;
  return sub_100C362B0(v5);
}

uint64_t sub_100C2BEEC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 176) = a1;
  *(void *)(v4 + 184) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v1) {
    uint64_t v6 = sub_100CC2A5C;
  }
  else {
    uint64_t v6 = sub_100CC28C4;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100C2C08C(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  v2[9] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_100C2C198, v1, 0);
}

uint64_t sub_100C2C198()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (int *)type metadata accessor for OwnerSharingCircle();
  uint64_t v3 = v2[7];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v28 = sub_100DF214C((uint64_t)(&off_1015F0928)[*(char *)(v1 + v3)]);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(v4, v1 + v2[5], v6);
  v8(v5, v1 + v2[6], v6);
  if (qword_101636950 != -1) {
    swift_once();
  }
  uint64_t v9 = v0[6];
  uint64_t v10 = v0[4];
  uint64_t v11 = sub_100010324(v10, (uint64_t)qword_10170DAA0);
  v8(v9, v11, v10);
  unsigned int v27 = 0x4000201u >> (8 * *(unsigned char *)(v1 + v3));
  unint64_t v13 = (int *)v0[9];
  uint64_t v12 = v0[10];
  uint64_t v15 = v0[7];
  uint64_t v14 = v0[8];
  uint64_t v16 = v0[5];
  uint64_t v17 = v0[6];
  uint64_t v18 = v0[4];
  unint64_t v19 = sub_10092DA1C((uint64_t)_swiftEmptyArrayStorage);
  UUID.init()();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);
  v20(v12 + v13[5], v14, v18);
  v20(v12 + v13[6], v15, v18);
  v20(v12 + v13[7], v17, v18);
  *(void *)(v12 + v13[8]) = v28;
  uint64_t v21 = v13[9];
  *(unsigned char *)(v12 + v21) = v27;
  *(unsigned char *)(v12 + v13[10]) = 1;
  *(void *)(v12 + v13[11]) = v19;
  static Date.trustedNow.getter(v12 + v13[12]);
  if (*(unsigned char *)(v12 + v21) == 4)
  {
    int v22 = (void *)swift_task_alloc();
    v0[11] = v22;
    *int v22 = v0;
    v22[1] = sub_100C2C480;
    uint64_t v23 = v0[10];
    return sub_100C58AF4(v23);
  }
  else
  {
    unint64_t v25 = (void *)swift_task_alloc();
    v0[12] = v25;
    void *v25 = v0;
    v25[1] = sub_100C2C5AC;
    uint64_t v26 = v0[10];
    return sub_100C5DDC0(v26, 0);
  }
}

uint64_t sub_100C2C480(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[14] = v1;
    uint64_t v5 = v4[3];
    uint64_t v6 = sub_100C2C788;
  }
  else
  {
    uint64_t v5 = v4[3];
    v4[13] = a1;
    uint64_t v6 = sub_100C2C6D8;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100C2C5AC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[14] = v1;
    uint64_t v5 = v4[3];
    uint64_t v6 = sub_100C2C788;
  }
  else
  {
    uint64_t v5 = v4[3];
    v4[13] = a1;
    uint64_t v6 = sub_100C2C6D8;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100C2C6D8()
{
  sub_100CBD154(v0[10], type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[13];
  return v1(v2);
}

uint64_t sub_100C2C788()
{
  sub_100CBD154(*(void *)(v0 + 80), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2C834(uint64_t a1)
{
  v2[12] = a1;
  v2[13] = v1;
  type metadata accessor for SharingCircleKeyManager.DelegatedKeychain(0);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_100C2C8C4, v1, 0);
}

uint64_t sub_100C2C8C4()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = type metadata accessor for OwnerSharingCircle();
  v0[15] = v2;
  uint64_t v3 = v1 + *(int *)(v2 + 20);
  if (*(unsigned char *)(v1 + *(int *)(v2 + 28)) == 3)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100C2CA10;
    uint64_t v5 = v0[14];
    return sub_100C32964(v5, v3);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[21] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100C2CEA0;
    uint64_t v8 = v0[13];
    v7[12] = v3;
    v7[13] = v8;
    v7[11] = v0 + 2;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
}

uint64_t sub_100C2CA10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v4 = sub_10035CF04;
  }
  else {
    uint64_t v4 = sub_100C2CB3C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2CB3C()
{
  v0[11] = *(void *)(v0[12] + *(int *)(v0[15] + 32));
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[18] = v1;
  uint64_t v2 = sub_10000588C(&qword_10165C248);
  uint64_t v3 = type metadata accessor for OwnerPeerTrust();
  uint64_t v4 = sub_100062734(&qword_10165C250, &qword_10165C248);
  *uint64_t v1 = v0;
  v1[1] = sub_100C2CC68;
  uint64_t v5 = v0[13];
  return Sequence.asyncCompactMap<A>(_:)(&unk_10165C260, v5, v2, v3, v4);
}

uint64_t sub_100C2CC68(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 104);
  *(void *)(v3 + 152) = a1;
  *(void *)(v3 + 160) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C2CDA4, v4, 0);
}

uint64_t sub_100C2CDA4()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v4 = swift_task_alloc();
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 104);
  *(void *)(v4 + 32) = v3;
  uint64_t v5 = sub_100F47E10((void (*)(uint64_t))sub_100CBFCBC, v4, v1);
  uint64_t v6 = *(void *)(v0 + 112);
  swift_task_dealloc();
  sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  if (!v2) {
    uint64_t v7 = (uint64_t)v5;
  }
  return v8(v7);
}

uint64_t sub_100C2CEA0()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 104);
    return _swift_task_switch(sub_100C2CFEC, v6, 0);
  }
}

uint64_t sub_100C2CFEC()
{
  v0[10] = *(void *)(v0[12] + *(int *)(v0[15] + 32));
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[22] = v1;
  uint64_t v2 = sub_10000588C(&qword_10165C248);
  uint64_t v3 = type metadata accessor for OwnerPeerTrust();
  uint64_t v4 = sub_100062734(&qword_10165C250, &qword_10165C248);
  *uint64_t v1 = v0;
  v1[1] = sub_100C2D118;
  uint64_t v5 = v0[13];
  return Sequence.asyncCompactMap<A>(_:)(&unk_10165C240, v5, v2, v3, v4);
}

uint64_t sub_100C2D118(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 104);
  *(void *)(v3 + 184) = a1;
  *(void *)(v3 + 192) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C2D254, v4, 0);
}

uint64_t sub_100C2D254()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[24];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = (void *)swift_task_alloc();
  void v5[2] = v3;
  v5[3] = v0 + 2;
  v5[4] = v4;
  uint64_t v6 = sub_100F47E10((void (*)(uint64_t))sub_100CBFBF0, (uint64_t)v5, v1);
  sub_1001300CC(v0 + 2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  if (!v2) {
    uint64_t v7 = (uint64_t)v6;
  }
  return v8(v7);
}

uint64_t sub_100C2D340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100C2D40C, 0, 0);
}

uint64_t sub_100C2D40C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 120);
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_100C2D430, v1, 0);
}

uint64_t sub_100C2D430()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  v0[10] = *(void *)(v2 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[11] = v7;
  *(void *)(v7 + 16) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v1, v4);
  swift_retain();
  return _swift_task_switch(sub_100C2D524, 0, 0);
}

uint64_t sub_100C2D524()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBDF14;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_1016607D0);
  *uint64_t v4 = v0;
  v4[1] = sub_100CC2A60;
  uint64_t v6 = v0[2];
  return withCheckedContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1005545F4, v3, v5);
}

uint64_t sub_100C2D638@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for OwnerSharingCircle();
  uint64_t result = sub_100C4FAF4(a1, a2, (char *)(a3 + *(int *)(v9 + 20)), a4);
  if (!v4)
  {
    uint64_t v11 = type metadata accessor for KeyDropCreateRequest.Member(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 0, 1, v11);
  }
  return result;
}

uint64_t sub_100C2D6F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100C2D7BC, 0, 0);
}

uint64_t sub_100C2D7BC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 120);
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_100C2D7E0, v1, 0);
}

uint64_t sub_100C2D7E0()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  v0[10] = *(void *)(v2 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[11] = v7;
  *(void *)(v7 + 16) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v1, v4);
  swift_retain();
  return _swift_task_switch(sub_100C2D8D4, 0, 0);
}

uint64_t sub_100C2D8D4()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[12] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBDF14;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[13] = v4;
  uint64_t v5 = sub_10000588C((uint64_t *)&unk_1016607D0);
  *uint64_t v4 = v0;
  v4[1] = sub_100B825BC;
  uint64_t v6 = v0[2];
  return withCheckedContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_1005545F4, v3, v5);
}

uint64_t sub_100C2D9E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for OwnerSharingCircle();
  uint64_t result = sub_100C506F4(a1, a2, (char *)(a3 + *(int *)(v9 + 20)), a4);
  if (!v4)
  {
    uint64_t v11 = type metadata accessor for KeyDropCreateRequest.Member(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a4, 0, 1, v11);
  }
  return result;
}

uint64_t sub_100C2DAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 136) = a4;
  *(void *)(v6 + 144) = v5;
  *(unsigned char *)(v6 + 308) = a5;
  *(void *)(v6 + 120) = a2;
  *(void *)(v6 + 128) = a3;
  *(void *)(v6 + 112) = a1;
  uint64_t v7 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  *(void *)(v6 + 152) = v7;
  *(void *)(v6 + 160) = *(void *)(v7 - 8);
  *(void *)(v6 + 168) = swift_task_alloc();
  *(void *)(v6 + 176) = swift_task_alloc();
  *(void *)(v6 + 184) = swift_task_alloc();
  *(void *)(v6 + 192) = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  *(void *)(v6 + 200) = swift_task_alloc();
  *(void *)(v6 + 208) = swift_task_alloc();
  *(void *)(v6 + 216) = swift_task_alloc();
  *(void *)(v6 + 224) = swift_task_alloc();
  return _swift_task_switch(sub_100C2DBE0, v5, 0);
}

uint64_t sub_100C2DBE0()
{
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  PropertyListDecoder.init()();
  sub_10000588C(&qword_10163FBC0);
  sub_100CBFA58();
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(int **)(v0 + 192);
  char v30 = *(unsigned char *)(v0 + 308);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v32 = *(void *)(v0 + 136);
  swift_release();
  uint64_t v31 = *(void *)(v0 + 96);
  *(void *)(v0 + 232) = v31;
  uint64_t v29 = sub_101158FBC((uint64_t)&off_1015A10F0);
  uint64_t v4 = (int *)type metadata accessor for MemberSharingCircle();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = v1 + v2[5];
  uint64_t v7 = type metadata accessor for UUID();
  *(void *)(v0 + 240) = v7;
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(v6, v5, v7);
  v8(v1 + v2[6], v3 + v4[6], v7);
  v8(v1 + v2[7], v3 + v4[8], v7);
  unint64_t v9 = sub_10092DA1C((uint64_t)_swiftEmptyArrayStorage);
  UUID.init()();
  *(void *)(v1 + v2[8]) = v29;
  *(unsigned char *)(v1 + v2[9]) = v30;
  *(unsigned char *)(v1 + v2[10]) = 1;
  *(void *)(v1 + v2[11]) = v9;
  static Date.trustedNow.getter(v1 + v2[12]);
  uint64_t v10 = (void *)(v32 + *(int *)(type metadata accessor for MemberPeerTrust() + 36));
  *(void *)(v0 + 248) = *v10;
  *(void *)(v0 + 256) = v10[1];
  uint64_t v11 = *(void *)(v31 + 16);
  *(void *)(v0 + 264) = v11;
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 160);
    *(_DWORD *)(v0 + 304) = *(_DWORD *)(v12 + 80);
    *(void *)(v0 + 272) = *(void *)(v12 + 72);
    *(void *)(v0 + 280) = 0;
    uint64_t v14 = *(void *)(v0 + 248);
    unint64_t v13 = *(void *)(v0 + 256);
    sub_100CBD0EC(*(void *)(v0 + 232)+ ((*(unsigned __int8 *)(v0 + 304) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 304)), *(void *)(v0 + 184), type metadata accessor for KeyDropInterface.KeyPackage);
    swift_retain();
    sub_1000361E0(v14, v13);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_100CB98EC(v15, v14, v13);
    uint64_t v18 = *(void *)(v0 + 248);
    unint64_t v17 = *(void *)(v0 + 256);
    unint64_t v19 = v16;
    uint64_t v21 = *(unsigned char **)(v0 + 176);
    uint64_t v20 = *(char **)(v0 + 184);
    uint64_t v22 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    swift_release();
    char v23 = *v20;
    sub_100CBD0EC((uint64_t)&v20[*(int *)(v22 + 20)], (uint64_t)&v21[*(int *)(v22 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_10001CFB8(v18, v17);
    *uint64_t v21 = v23;
    *(void *)&v21[*(int *)(v22 + 24)] = v19;
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v24;
    void *v24 = v0;
    v24[1] = sub_100C2E5D0;
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 176);
    return sub_100C3C794(v26, v25);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_100CBD154(*(void *)(v0 + 224), type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
}

uint64_t sub_100C2E5D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_100C2EEDC;
  }
  else {
    uint64_t v4 = sub_100C2E6FC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2E6FC()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void *)(v0 + 184);
  sub_100CBD154(*(void *)(v0 + 176), type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD154(v1, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v2 = *(void *)(v0 + 280) + 1;
  if (v2 == *(void *)(v0 + 264))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    sub_100CBD154(*(void *)(v0 + 224), type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 296);
    while (1)
    {
      *(void *)(v0 + 280) = v2;
      uint64_t v20 = *(void *)(v0 + 248);
      unint64_t v21 = *(void *)(v0 + 256);
      sub_100CBD0EC(*(void *)(v0 + 232)+ ((*(unsigned __int8 *)(v0 + 304) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 304))+ *(void *)(v0 + 272) * v2, *(void *)(v0 + 184), type metadata accessor for KeyDropInterface.KeyPackage);
      swift_retain();
      sub_1000361E0(v20, v21);
      uint64_t v22 = swift_bridgeObjectRetain();
      char v23 = sub_100CB98EC(v22, v20, v21);
      uint64_t v24 = *(void *)(v0 + 248);
      unint64_t v25 = *(void *)(v0 + 256);
      if (!v5) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_release();
      sub_10001CFB8(v24, v25);
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v26 = *(void *)(v0 + 216);
      uint64_t v27 = *(void *)(v0 + 224);
      uint64_t v29 = *(void *)(v0 + 200);
      uint64_t v28 = *(void *)(v0 + 208);
      uint64_t v30 = *(void *)(v0 + 184);
      uint64_t v31 = *(void *)(v0 + 168);
      uint64_t v32 = type metadata accessor for Logger();
      sub_100010324(v32, (uint64_t)qword_10170EB40);
      sub_100CBD0EC(v27, v26, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v27, v28, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v27, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v30, v31, type metadata accessor for KeyDropInterface.KeyPackage);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v33 = Logger.logObject.getter();
      os_log_type_t v34 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v33, v34))
      {
        log = v33;
        os_log_type_t v51 = v34;
        uint64_t v7 = *(void *)(v0 + 208);
        uint64_t v6 = *(void *)(v0 + 216);
        uint64_t v48 = *(void *)(v0 + 200);
        uint64_t v52 = *(void *)(v0 + 184);
        unint64_t v50 = *(char **)(v0 + 168);
        uint64_t v8 = swift_slowAlloc();
        v53[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v8 = 136447747;
        uint64_t v9 = sub_100C27BF0();
        *(void *)(v0 + 40) = sub_1008FA0F0(v9, v10, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v8 + 12) = 2160;
        *(void *)(v0 + 48) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v8 + 22) = 2081;
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 56) = sub_1008FA0F0(v11, v12, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v7, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v8 + 32) = 2160;
        *(void *)(v0 + 64) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v8 + 42) = 2081;
        uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 72) = sub_1008FA0F0(v13, v14, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v48, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v8 + 52) = 2080;
        unint64_t v15 = sub_1012638E4(*v50);
        *(void *)(v0 + 80) = sub_1008FA0F0(v15, v16, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154((uint64_t)v50, type metadata accessor for KeyDropInterface.KeyPackage);
        *(_WORD *)(v8 + 62) = 2082;
        swift_getErrorValue();
        uint64_t v17 = Error.localizedDescription.getter();
        *(void *)(v0 + 104) = sub_1008FA0F0(v17, v18, v53);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v51, "Failed to save key initial key package %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s,\n packageType: %s, error: %{public}s.", (uint8_t *)v8, 0x48u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        uint64_t v19 = v52;
      }
      else
      {
        uint64_t v35 = *(void *)(v0 + 208);
        uint64_t v36 = *(void *)(v0 + 216);
        uint64_t v37 = *(void *)(v0 + 200);
        uint64_t v38 = *(void *)(v0 + 184);
        uint64_t v39 = *(void *)(v0 + 168);

        swift_errorRelease();
        swift_errorRelease();
        sub_100CBD154(v39, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100CBD154(v37, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v35, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v36, type metadata accessor for SharingCircleKeyManager.Instruction);
        swift_errorRelease();
        uint64_t v19 = v38;
      }
      sub_100CBD154(v19, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v5 = 0;
      uint64_t v2 = *(void *)(v0 + 280) + 1;
      if (v2 == *(void *)(v0 + 264)) {
        goto LABEL_2;
      }
    }
    uint64_t v40 = v23;
    unint64_t v42 = *(unsigned char **)(v0 + 176);
    unint64_t v41 = *(unsigned __int8 **)(v0 + 184);
    uint64_t v43 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v44 = *v41;
    sub_100CBD0EC((uint64_t)&v41[*(int *)(v43 + 20)], (uint64_t)&v42[*(int *)(v43 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_10001CFB8(v24, v25);
    unsigned char *v42 = v44;
    *(void *)&v42[*(int *)(v43 + 24)] = v40;
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_100C2E5D0;
    uint64_t v46 = *(void *)(v0 + 224);
    uint64_t v47 = *(void *)(v0 + 176);
    return sub_100C3C794(v47, v46);
  }
}

uint64_t sub_100C2EEDC()
{
  uint64_t v52 = v0;
  sub_100CBD154(*(void *)(v0 + 176), type metadata accessor for KeyDropInterface.KeyPackage);
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 168);
  uint64_t v7 = type metadata accessor for Logger();
  sub_100010324(v7, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v2, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v2, v4, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v5, v6, type metadata accessor for KeyDropInterface.KeyPackage);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v8, v9))
  {
    log = v8;
    os_log_type_t v49 = v9;
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v46 = *(void *)(v0 + 200);
    uint64_t v50 = *(void *)(v0 + 184);
    uint64_t v48 = *(char **)(v0 + 168);
    uint64_t v12 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136447747;
    uint64_t v13 = sub_100C27BF0();
    *(void *)(v0 + 40) = sub_1008FA0F0(v13, v14, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 12) = 2160;
    *(void *)(v0 + 48) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 56) = sub_1008FA0F0(v15, v16, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 32) = 2160;
    *(void *)(v0 + 64) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 42) = 2081;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 72) = sub_1008FA0F0(v17, v18, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v46, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 52) = 2080;
    unint64_t v19 = sub_1012638E4(*v48);
    *(void *)(v0 + 80) = sub_1008FA0F0(v19, v20, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154((uint64_t)v48, type metadata accessor for KeyDropInterface.KeyPackage);
    *(_WORD *)(v12 + 62) = 2082;
    swift_getErrorValue();
    uint64_t v21 = Error.localizedDescription.getter();
    *(void *)(v0 + 104) = sub_1008FA0F0(v21, v22, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v49, "Failed to save key initial key package %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s,\n packageType: %s, error: %{public}s.", (uint8_t *)v12, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v23 = v50;
  }
  else
  {
    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 216);
    uint64_t v26 = *(void *)(v0 + 200);
    uint64_t v27 = *(void *)(v0 + 184);
    uint64_t v28 = *(void *)(v0 + 168);

    swift_errorRelease();
    swift_errorRelease();
    sub_100CBD154(v28, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v26, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v24, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v25, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    uint64_t v23 = v27;
  }
  sub_100CBD154(v23, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v29 = *(void *)(v0 + 280) + 1;
  if (v29 == *(void *)(v0 + 264))
  {
    swift_bridgeObjectRelease();
    sub_100CBD154(*(void *)(v0 + 224), type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
    return v36();
  }
  else
  {
    *(void *)(v0 + 280) = v29;
    uint64_t v31 = *(void *)(v0 + 248);
    unint64_t v30 = *(void *)(v0 + 256);
    sub_100CBD0EC(*(void *)(v0 + 232)+ ((*(unsigned __int8 *)(v0 + 304) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 304))+ *(void *)(v0 + 272) * v29, *(void *)(v0 + 184), type metadata accessor for KeyDropInterface.KeyPackage);
    swift_retain();
    sub_1000361E0(v31, v30);
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = sub_100CB98EC(v32, v31, v30);
    uint64_t v35 = *(void *)(v0 + 248);
    unint64_t v34 = *(void *)(v0 + 256);
    uint64_t v38 = v33;
    uint64_t v40 = *(unsigned char **)(v0 + 176);
    uint64_t v39 = *(char **)(v0 + 184);
    uint64_t v41 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    swift_release();
    char v42 = *v39;
    sub_100CBD0EC((uint64_t)&v39[*(int *)(v41 + 20)], (uint64_t)&v40[*(int *)(v41 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_10001CFB8(v35, v34);
    *uint64_t v40 = v42;
    *(void *)&v40[*(int *)(v41 + 24)] = v38;
    uint64_t v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v43;
    void *v43 = v0;
    v43[1] = sub_100C2E5D0;
    uint64_t v44 = *(void *)(v0 + 224);
    uint64_t v45 = *(void *)(v0 + 176);
    return sub_100C3C794(v45, v44);
  }
}

uint64_t sub_100C2F69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a2;
  v4[13] = v3;
  v4[11] = a1;
  v4[14] = *v3;
  sub_10000588C(&qword_10163F778);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for KeyDropJoinToken(0);
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[20] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_100C2F824;
  v7[12] = a3;
  v7[13] = v3;
  v7[11] = v4 + 2;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C2F824()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v4 = sub_100C2FC1C;
  }
  else {
    uint64_t v4 = sub_100C2F950;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C2F950()
{
  uint64_t v1 = v0[6];
  v0[10] = v1;
  swift_bridgeObjectRetain();
  sub_1001300CC(v0 + 2);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[17];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    type metadata accessor for OwnerPeerTrust();
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v4, v0[18], type metadata accessor for KeyDropJoinToken);
      char v6 = static UUID.== infix(_:_:)();
      uint64_t v7 = v0[18];
      if (v6) {
        break;
      }
      sub_100CBD154(v0[18], type metadata accessor for KeyDropJoinToken);
      v4 += v5;
      if (!--v2)
      {
        sub_10025C634((uint64_t)(v0 + 10));
        goto LABEL_6;
      }
    }
    uint64_t v9 = v0[15];
    sub_10025C634((uint64_t)(v0 + 10));
    sub_100CBD1B4(v7, v9, type metadata accessor for KeyDropJoinToken);
    uint64_t v8 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v8 = 1;
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v12 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, v8, 1, v10);
  sub_10025C634((uint64_t)(v0 + 10));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1)
  {
    sub_10001DAB4(v0[15], &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v13 = 13;
    swift_willThrow();
LABEL_12:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = (uint64_t (*)(void))v0[1];
    goto LABEL_14;
  }
  uint64_t v14 = v0[21];
  uint64_t v15 = v0[19];
  sub_100CBD1B4(v0[15], v15, type metadata accessor for KeyDropJoinToken);
  sub_100C276D0(v15);
  if (v14)
  {
    sub_100CBD154(v0[19], type metadata accessor for KeyDropJoinToken);
    goto LABEL_12;
  }
  sub_100CBD154(v0[19], type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = (uint64_t (*)(void))v0[1];
LABEL_14:
  return v16();
}

uint64_t sub_100C2FC1C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C2FC9C(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for P256.Signing.PrivateKey();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  sub_10000588C(&qword_10163B070);
  v3[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SymmetricKey256();
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  sub_10000588C(&qword_10163F778);
  v3[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for KeyDropJoinToken(0);
  v3[16] = v6;
  v3[17] = *(void *)(v6 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = type metadata accessor for PeerCommunicationIdentifier();
  v3[21] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_1016607D0);
  v3[22] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for OwnerPeerTrust();
  v3[23] = v7;
  v3[24] = *(void *)(v7 - 8);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v3[27] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v3[28] = v9;
  v3[29] = *(void *)(v9 + 64);
  v3[30] = swift_task_alloc();
  v3[31] = sub_10000588C((uint64_t *)&unk_101638D10);
  v3[32] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for OwnerSharingCircle();
  v3[33] = v10;
  v3[34] = *(void *)(v10 - 8);
  v3[35] = swift_task_alloc();
  v3[36] = type metadata accessor for SharingCircleKeyManager.DelegatedKeychain(0);
  v3[37] = swift_task_alloc();
  return _swift_task_switch(sub_100C30078, v2, 0);
}

uint64_t sub_100C30078()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 48);
  URLComponents.init()();
  uint64_t v3 = *(int *)(v1 + 20);
  *(_DWORD *)(v0 + 384) = v3;
  uint64_t v4 = v2 + v3;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100C3012C;
  uint64_t v6 = *(void *)(v0 + 296);
  return sub_100C32964(v6, v4);
}

uint64_t sub_100C3012C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_100C313D4;
  }
  else {
    uint64_t v4 = sub_100C30258;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C30258()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 56) + 120);
  *(void *)(v0 + 320) = v1;
  return _swift_task_switch(sub_100C3027C, v1, 0);
}

uint64_t sub_100C3027C()
{
  uint64_t v1 = *(void *)(v0 + 320);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 48) + *(int *)(v0 + 384);
  *(void *)(v0 + 328) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 336) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_100C30378, 0, 0);
}

uint64_t sub_100C30378()
{
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[43] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBDE4C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[44] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C3047C;
  uint64_t v6 = v0[31];
  uint64_t v5 = v0[32];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10059EE48, v3, v6);
}

uint64_t sub_100C3047C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C305CC, v1, 0);
}

uint64_t sub_100C305CC()
{
  uint64_t v1 = v0[32];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[34] + 48))(v1, 1, v0[33]) == 1)
  {
    uint64_t v2 = v0[37];
    uint64_t v3 = v0[5];
    sub_10001DAB4(v1, (uint64_t *)&unk_101638D10);
    sub_100130078();
    swift_allocError();
    *uint64_t v4 = 2;
    swift_willThrow();
    sub_100CBD154(v2, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    uint64_t v5 = type metadata accessor for URLComponents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_100CBD1B4(v1, v0[35], (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_10070FB1C(v8);
    swift_bridgeObjectRelease();
    v0[4] = v9;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[45] = v10;
    uint64_t v11 = sub_10000588C((uint64_t *)&unk_1016636E0);
    uint64_t v12 = sub_100062734((unint64_t *)&qword_10163FBF0, (uint64_t *)&unk_1016636E0);
    *uint64_t v10 = v0;
    v10[1] = sub_100C308D4;
    uint64_t v13 = v0[23];
    uint64_t v14 = v0[7];
    return Sequence.asyncCompactMap<A>(_:)(&unk_10165C220, v14, v11, v13, v12);
  }
}

uint64_t sub_100C308D4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 56);
  *(void *)(v3 + 368) = a1;
  *(void *)(v3 + 376) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C30A10, v4, 0);
}

uint64_t sub_100C30A10()
{
  uint64_t v1 = v0[46];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v4 = v0[23];
    uint64_t v3 = v0[24];
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v7 = v0[25];
      uint64_t v8 = v0[21];
      sub_100CBD0EC(v5, v7, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
      uint64_t v9 = v7 + *(int *)(v4 + 28);
      swift_storeEnumTagMultiPayload();
      LOBYTE(v9) = sub_1009CA754(v9, v8);
      sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for PeerCommunicationIdentifier);
      if (v9) {
        break;
      }
      sub_100CBD154(v0[25], (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
      v5 += v6;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    uint64_t v11 = v0[25];
    uint64_t v12 = v0[22];
    swift_bridgeObjectRelease();
    sub_100CBD1B4(v11, v12, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
    uint64_t v10 = 0;
  }
  else
  {
LABEL_6:
    uint64_t v10 = 1;
  }
  uint64_t v13 = v0[23];
  uint64_t v14 = v0[24];
  uint64_t v15 = v0[22];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v15, v10, 1, v13);
  swift_bridgeObjectRelease();
  int v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
  uint64_t v17 = v0[37];
  uint64_t v18 = v0[22];
  if (v16 == 1)
  {
    uint64_t v19 = v0[35];
    uint64_t v20 = v0[5];
    sub_10001DAB4(v18, (uint64_t *)&unk_1016607D0);
    sub_100130078();
    swift_allocError();
    *uint64_t v21 = 14;
    swift_willThrow();
    sub_100CBD154(v19, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    uint64_t v22 = type metadata accessor for URLComponents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
LABEL_25:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v49 = (uint64_t (*)(void))v0[1];
    goto LABEL_26;
  }
  sub_100CBD1B4(v18, v0[26], (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  uint64_t v23 = *(void *)(*(void *)v17 + 16);
  if (v23)
  {
    uint64_t v24 = v0[17];
    uint64_t v25 = *(void *)v17 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    uint64_t v26 = *(void *)(v24 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v25, v0[18], type metadata accessor for KeyDropJoinToken);
      char v27 = static UUID.== infix(_:_:)();
      uint64_t v28 = v0[18];
      if (v27) {
        break;
      }
      sub_100CBD154(v28, type metadata accessor for KeyDropJoinToken);
      v25 += v26;
      if (!--v23)
      {
        uint64_t v29 = 1;
        goto LABEL_17;
      }
    }
    sub_100CBD1B4(v28, v0[15], type metadata accessor for KeyDropJoinToken);
    uint64_t v29 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = 1;
  }
LABEL_17:
  uint64_t v30 = v0[16];
  uint64_t v31 = v0[17];
  uint64_t v32 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v32, v29, 1, v30);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v32, 1, v30) == 1)
  {
    sub_10001DAB4(v0[15], &qword_10163F778);
LABEL_23:
    uint64_t v42 = v0[37];
    uint64_t v43 = v0[35];
    uint64_t v44 = v0[26];
    uint64_t v45 = v0[5];
    sub_100130078();
    swift_allocError();
    *uint64_t v46 = 21;
    swift_willThrow();
    sub_100CBD154(v43, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_100CBD154(v42, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    uint64_t v47 = type metadata accessor for URLComponents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v45, v47);
    uint64_t v48 = v44;
LABEL_24:
    sub_100CBD154(v48, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
    goto LABEL_25;
  }
  uint64_t v34 = v0[36];
  uint64_t v33 = v0[37];
  uint64_t v35 = v0[12];
  uint64_t v36 = v0[13];
  uint64_t v37 = v0[11];
  sub_100CBD1B4(v0[15], v0[19], type metadata accessor for KeyDropJoinToken);
  sub_10001D074(v33 + *(int *)(v34 + 20), v37, &qword_10163B070);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v37, 1, v35) == 1)
  {
    uint64_t v38 = v0[11];
    sub_100CBD154(v0[19], type metadata accessor for KeyDropJoinToken);
    sub_10001DAB4(v38, &qword_10163B070);
    goto LABEL_23;
  }
  uint64_t v39 = v0[36];
  uint64_t v40 = v0[37];
  (*(void (**)(void, void, void))(v0[13] + 32))(v0[14], v0[11], v0[12]);
  if (*(void *)(v40 + *(int *)(v39 + 24) + 8) >> 60 == 15)
  {
    uint64_t v41 = v0[19];
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    sub_100CBD154(v41, type metadata accessor for KeyDropJoinToken);
    goto LABEL_23;
  }
  uint64_t v51 = v0[47];
  uint64_t v52 = (uint64_t *)(v0[19] + *(int *)(v0[16] + 20));
  uint64_t v53 = *v52;
  unint64_t v54 = v52[1];
  v0[2] = *v52;
  v0[3] = v54;
  sub_1000361E0(v53, v54);
  P256.Signing.PrivateKey.init<A>(rawRepresentation:)();
  uint64_t v55 = v0[37];
  uint64_t v56 = v0[35];
  if (v51)
  {
    uint64_t v57 = v0[26];
    uint64_t v58 = v0[19];
    uint64_t v59 = v0[5];
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    sub_100CBD154(v58, type metadata accessor for KeyDropJoinToken);
    sub_100CBD154(v56, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    sub_100CBD154(v55, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    uint64_t v60 = type metadata accessor for URLComponents();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
    uint64_t v48 = v57;
    goto LABEL_24;
  }
  uint64_t v76 = v0[19];
  uint64_t v77 = v0[26];
  uint64_t v61 = v0[13];
  uint64_t v75 = v0[12];
  uint64_t v62 = v0[10];
  uint64_t v64 = v0[8];
  uint64_t v63 = v0[9];
  uint64_t v74 = v0[14];
  uint64_t v65 = P256.Signing.PrivateKey.rawRepresentation.getter();
  unint64_t v67 = v66;
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  Swift::String v68 = Data.base64EncodedString(options:)(0);
  sub_10001CFB8(v65, v67);
  uint64_t v69 = SymmetricKey256.data.getter();
  unint64_t v71 = v70;
  Swift::String v72 = Data.base64EncodedString(options:)(0);
  sub_10001CFB8(v69, v71);
  String.append(_:)(v68);
  swift_bridgeObjectRelease();
  v73._countAndFlagsBits = 3828524;
  v73._object = (void *)0xE300000000000000;
  String.append(_:)(v73);
  String.append(_:)(v72);
  swift_bridgeObjectRelease();
  URLComponents.fragment.setter();
  (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v74, v75);
  sub_100CBD154(v76, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v56, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
  sub_100CBD154(v55, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  sub_100CBD154(v77, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v49 = (uint64_t (*)(void))v0[1];
LABEL_26:
  return v49();
}

uint64_t sub_100C313D4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = type metadata accessor for URLComponents();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100C31534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  return _swift_task_switch(sub_100C31600, 0, 0);
}

uint64_t sub_100C31600()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + 120);
  *(void *)(v0 + 72) = v1;
  return _swift_task_switch(sub_100C31624, v1, 0);
}

uint64_t sub_100C31624()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  v0[10] = *(void *)(v2 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  v0[11] = v7;
  *(void *)(v7 + 16) = v2;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v1, v4);
  swift_retain();
  return _swift_task_switch(sub_100C2D524, 0, 0);
}

uint64_t sub_100C31718(uint64_t a1, uint64_t a2)
{
  v3[60] = a2;
  v3[61] = v2;
  v3[59] = a1;
  sub_10000588C(&qword_10163F778);
  v3[62] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for KeyDropJoinToken(0);
  v3[63] = v5;
  v3[64] = *(void *)(v5 - 8);
  v3[65] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for OwnerSharingCircle();
  v3[66] = v6;
  v3[67] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  v3[68] = v7;
  v3[69] = *(void *)(v7 - 8);
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  sub_10000588C(&qword_10165C0B8);
  v3[72] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v3[73] = v8;
  v3[74] = *(void *)(v8 - 8);
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = type metadata accessor for KeyDropInterface.KeyAlignment(0);
  v3[78] = swift_task_alloc();
  uint64_t v9 = a1 + *(int *)(v6 + 20);
  uint64_t v10 = (void *)swift_task_alloc();
  v3[79] = v10;
  *uint64_t v10 = v3;
  v10[1] = sub_100C319E8;
  v10[12] = v9;
  v10[13] = v2;
  v10[11] = v3 + 46;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C319E8()
{
  uint64_t v2 = (void *)*v1;
  v2[80] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[61];
    return _swift_task_switch(sub_100C31BB4, v5, 0);
  }
}

void sub_100C31BB4()
{
  uint64_t v89 = v0;
  unint64_t v1 = *(void *)(v0 + 376);
  if (v1 >> 60 == 15)
  {
    sub_100130078();
    swift_allocError();
    *uint64_t v2 = 15;
    swift_willThrow();
    sub_1001300CC((uint64_t *)(v0 + 368));
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(void (**)(void))(v0 + 8);
    v3();
    return;
  }
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 640);
  uint64_t v6 = *(void *)(v0 + 608);
  uint64_t v7 = *(uint64_t **)(v0 + 472);
  sub_1000361E0(v4, *(void *)(v0 + 376));
  sub_100B23648(v7, v6);
  if (v5) {
    return;
  }
  uint64_t v9 = *(void *)(v0 + 600);
  uint64_t v10 = *(uint64_t **)(v0 + 472);
  sub_100B23648(v10, v9);
  unint64_t v86 = (uint64_t *)(v0 + 368);
  uint64_t v87 = v4;
  uint64_t v12 = *(void *)(v0 + 624);
  uint64_t v13 = *(void *)(v0 + 616);
  uint64_t v14 = *(void *)(v0 + 600);
  uint64_t v15 = *(void *)(v0 + 584);
  int v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 592) + 32);
  v16(v12, *(void *)(v0 + 608), v15);
  *(void *)(v12 + *(int *)(v13 + 20)) = 0;
  v16(v12 + *(int *)(v13 + 24), v14, v15);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  *(void *)(v0 + 432) = v4;
  *(void *)(v0 + 440) = v1;
  sub_1002A89B4();
  uint64_t v17 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v19 = v18;
  uint64_t v20 = *(void *)(v0 + 576);
  uint64_t v21 = *(void *)(v0 + 480);
  swift_release();
  sub_10000588C(&qword_101657A00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_101342130;
  uint64_t v23 = type metadata accessor for EncryptedData();
  uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  v82(v20, 1, 1, v23);
  sub_1000361E0(v17, v19);
  sub_101268234(0, v17, v19, v20, (void *)(v0 + 296));
  *(_OWORD *)(inited + 32) = *(_OWORD *)(v0 + 296);
  long long v24 = *(_OWORD *)(v0 + 312);
  long long v25 = *(_OWORD *)(v0 + 328);
  long long v26 = *(_OWORD *)(v0 + 344);
  *(void *)(inited + 96) = *(void *)(v0 + 360);
  *(_OWORD *)(inited + 64) = v25;
  *(_OWORD *)(inited + 80) = v26;
  *(_OWORD *)(inited + 48) = v24;
  char v27 = (uint64_t *)(v21 + *(int *)(type metadata accessor for OwnerPeerTrust() + 36));
  uint64_t v84 = v17;
  uint64_t v28 = *v27;
  unint64_t v29 = v27[1];
  sub_1000361E0(*v27, v29);
  uint64_t v30 = sub_100CBCA7C(inited, v28, v29);
  uint64_t v31 = *(void *)(v0 + 624);
  uint64_t v76 = v27;
  uint64_t v78 = v23;
  unint64_t v80 = v19;
  uint64_t v32 = *(unsigned char **)(v0 + 568);
  uint64_t v33 = *(void *)(v0 + 544);
  *(void *)os_log_type_t type = *(void *)(v0 + 480);
  uint64_t v34 = v30;
  sub_10001CFB8(v28, v29);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_100CBD0EC(v31, (uint64_t)&v32[*(int *)(v33 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  *uint64_t v32 = 7;
  uint64_t v75 = v33;
  *(void *)&v32[*(int *)(v33 + 24)] = v34;
  uint64_t v35 = *(void *)(v0 + 400);
  uint64_t v36 = (void *)swift_task_alloc();
  void v36[2] = *(void *)type;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1000A41AC((uint64_t (*)(char *))sub_100CBF954, v36, v35);
  swift_task_dealloc();
  unint64_t v38 = *(void *)(v37 + 16);
  if (v38 > 1)
  {
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v39 = *(void *)(v0 + 536);
    uint64_t v40 = *(void *)(v0 + 472);
    uint64_t v41 = type metadata accessor for Logger();
    sub_100010324(v41, (uint64_t)qword_10170EB40);
    sub_100CBD0EC(v40, v39, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
    swift_bridgeObjectRetain_n();
    uint64_t v42 = Logger.logObject.getter();
    os_log_type_t v43 = static os_log_type_t.error.getter();
    BOOL v44 = os_log_type_enabled(v42, v43);
    uint64_t v45 = *(void *)(v0 + 536);
    if (v44)
    {
      uint64_t v46 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 141558531;
      *(void *)(v0 + 448) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v46 + 12) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 456) = sub_1008FA0F0(v47, v48, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v45, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);
      *(_WORD *)(v46 + 22) = 2048;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 464) = v38;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Multiple join tokens found for ownerCircle: %{private,mask.hash}s, count: %ld.", (uint8_t *)v46, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100CBD154(v45, (uint64_t (*)(void))type metadata accessor for OwnerSharingCircle);

      swift_bridgeObjectRelease();
    }
    unint64_t v38 = *(void *)(v37 + 16);
  }
  if (v38)
  {
    uint64_t v49 = *(unsigned __int8 *)(*(void *)(v0 + 512) + 80);
    sub_100CBD0EC(v37 + ((v49 + 32) & ~v49), *(void *)(v0 + 496), type metadata accessor for KeyDropJoinToken);
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v50 = 1;
  }
  uint64_t v52 = *(void *)(v0 + 504);
  uint64_t v51 = *(void *)(v0 + 512);
  uint64_t v53 = *(void *)(v0 + 496);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v53, v50, 1, v52);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v53, 1, v52) == 1)
  {
    uint64_t v54 = *(void *)(v0 + 624);
    uint64_t v55 = *(void *)(v0 + 568);
    sub_10001DAB4(*(void *)(v0 + 496), &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v56 = 13;
    swift_willThrow();
    sub_100037A24(v87, v1);
    sub_1001300CC(v86);
    sub_10001CFB8(v84, v80);
    sub_100CBD154(v55, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v54, type metadata accessor for KeyDropInterface.KeyAlignment);
    goto LABEL_3;
  }
  sub_100CBD1B4(*(void *)(v0 + 496), *(void *)(v0 + 520), type metadata accessor for KeyDropJoinToken);
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_100CBFAFC(&qword_10165C210, (void (*)(uint64_t))type metadata accessor for KeyDropJoinToken);
  uint64_t v57 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  unint64_t v59 = v58;
  uint64_t v60 = *(void *)(v0 + 576);
  swift_release();
  uint64_t v61 = swift_initStackObject();
  *(_OWORD *)(v61 + 16) = xmmword_101342130;
  v82(v60, 1, 1, v78);
  sub_1000361E0(v57, v59);
  sub_101268234(0, v57, v59, v60, (void *)(v0 + 224));
  *(_OWORD *)(v61 + 32) = *(_OWORD *)(v0 + 224);
  long long v62 = *(_OWORD *)(v0 + 240);
  long long v63 = *(_OWORD *)(v0 + 256);
  long long v64 = *(_OWORD *)(v0 + 272);
  *(void *)(v61 + 96) = *(void *)(v0 + 288);
  *(_OWORD *)(v61 + 64) = v63;
  *(_OWORD *)(v61 + 80) = v64;
  *(_OWORD *)(v61 + 48) = v62;
  uint64_t v65 = *v76;
  unint64_t v66 = v76[1];
  sub_1000361E0(*v76, v66);
  unint64_t v67 = sub_100CBCA7C(v61, v65, v66);
  uint64_t v85 = *(void *)(v0 + 624);
  Swift::String v73 = v67;
  os_log_t log = *(os_log_t *)(v0 + 568);
  Swift::String v68 = *(unsigned char **)(v0 + 560);
  unint64_t v77 = v59;
  uint64_t v69 = *(void *)(v0 + 552);
  uint64_t v79 = *(void *)(v0 + 520);
  sub_10001CFB8(v65, v66);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_100CBD0EC(v85, (uint64_t)&v68[*(int *)(v75 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  *Swift::String v68 = 11;
  *(void *)&v68[*(int *)(v75 + 24)] = v73;
  sub_10000588C(&qword_101657A08);
  uint64_t v70 = *(void *)(v69 + 72);
  unint64_t v71 = (*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = xmmword_101347BA0;
  sub_100CBD0EC((uint64_t)log, v83 + v71, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD1B4((uint64_t)v68, v83 + v71 + v70, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100037A24(v87, v1);
  sub_1001300CC(v86);
  sub_10001CFB8(v57, v77);
  sub_10001CFB8(v84, v80);
  sub_100CBD154(v79, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154((uint64_t)log, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD154(v85, type metadata accessor for KeyDropInterface.KeyAlignment);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v72 = *(void (**)(uint64_t))(v0 + 8);
  v72(v83);
}

uint64_t sub_100C32964(uint64_t a1, uint64_t a2)
{
  v3[6] = a2;
  v3[7] = v2;
  v3[5] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[8] = v4;
  v3[9] = *(void *)(v4 - 8);
  v3[10] = swift_task_alloc();
  return _swift_task_switch(sub_100C32A28, 0, 0);
}

uint64_t sub_100C32A28()
{
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_100C32AC4;
  uint64_t v2 = *(void *)(v0 + 48);
  return sub_100E5D3C8(v2);
}

uint64_t sub_100C32AC4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C32BC4, 0, 0);
}

uint64_t sub_100C32BC4()
{
  uint64_t v19 = v0;
  if (qword_101636B18 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170DED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 96);
  uint64_t v11 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v12 = *(void *)(v0 + 64);
  if (v8)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 134218499;
    *(void *)(v0 + 16) = *(void *)(v9 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2160;
    *(void *)(v0 + 24) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v13 + 22) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 32) = sub_1008FA0F0(v14, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Got %ld keys in the delegated keychain for %{private,mask.hash}s.", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }

  sub_100C290CC(*(void *)(v0 + 96), *(void **)(v0 + 40));
  swift_task_dealloc();
  int v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_100C32EB4(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C32ED8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C32F74;
  uint64_t v2 = *(void *)(v0 + 96);
  return sub_100E5D3C8(v2);
}

uint64_t sub_100C32F74(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C33074, 0, 0);
}

uint64_t sub_100C33074()
{
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100010324(v1, (uint64_t)qword_10170EB40);
  swift_bridgeObjectRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 120);
  if (v4)
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    *(void *)(v0 + 80) = *(void *)(v5 + 16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Got %ld keys in the sharing circle secrets keychain.", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  sub_100CB9100(*(void *)(v0 + 120), (uint64_t *)(v0 + 16));
  os_log_type_t v7 = *(_OWORD **)(v0 + 88);
  long long v8 = *(_OWORD *)(v0 + 16);
  long long v9 = *(_OWORD *)(v0 + 32);
  long long v10 = *(_OWORD *)(v0 + 64);
  v7[2] = *(_OWORD *)(v0 + 48);
  v7[3] = v10;
  *os_log_type_t v7 = v8;
  v7[1] = v9;
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_100C33228(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 304) = a2;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = v2;
  uint64_t v4 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  *(void *)(v3 + 136) = v4;
  *(void *)(v3 + 144) = *(void *)(v4 - 8);
  *(void *)(v3 + 152) = swift_task_alloc();
  *(void *)(v3 + 160) = swift_task_alloc();
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = swift_task_alloc();
  *(void *)(v3 + 184) = swift_task_alloc();
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  return _swift_task_switch(sub_100C33344, v2, 0);
}

uint64_t sub_100C33344()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 216) = v2;
  if (v2)
  {
    int v3 = *(_DWORD *)(*(void *)(v0 + 144) + 80);
    *(_DWORD *)(v0 + 296) = v3;
    *(unsigned char *)(v0 + 305) = 0;
    *(void *)(v0 + 224) = v2;
    *(void *)(v0 + 232) = 0;
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v5 = v1 + ((v3 + 32) & ~(unint64_t)v3);
    swift_bridgeObjectRetain();
    sub_100CBD0EC(v5, v4, type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 192);
    uint64_t v10 = type metadata accessor for Logger();
    *(void *)(v0 + 240) = sub_100010324(v10, (uint64_t)qword_10170EB40);
    sub_100CBD0EC(v6, v7, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v6, v8, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v6, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    uint64_t v34 = v11;
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v15 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v16 = *(void *)(v0 + 184);
    if (v13)
    {
      uint64_t v17 = swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136447235;
      uint64_t v18 = sub_100C27BF0();
      *(void *)(v0 + 80) = sub_1008FA0F0(v18, v19, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v17 + 12) = 2160;
      *(void *)(v0 + 88) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 96) = sub_1008FA0F0(v20, v21, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v15, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v17 + 32) = 2160;
      *(void *)(v0 + 104) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v17 + 42) = 2081;
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 112) = sub_1008FA0F0(v22, v23, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v16, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v34, v12, "Upload keys: %{public}s, share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v17, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100CBD154(*(void *)(v0 + 200), type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v15, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v16, type metadata accessor for SharingCircleKeyManager.Instruction);
    }
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v28 = *(int *)(*(void *)(v0 + 136) + 36);
    *(_DWORD *)(v0 + 300) = v28;
    if (*(unsigned char *)(v27 + v28) == 4)
    {
      unint64_t v29 = (void *)swift_task_alloc();
      *(void *)(v0 + 248) = v29;
      *unint64_t v29 = v0;
      v29[1] = sub_100C3393C;
      uint64_t v30 = *(void *)(v0 + 208);
      return sub_100C58AF4(v30);
    }
    else
    {
      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 256) = v31;
      *uint64_t v31 = v0;
      v31[1] = sub_100C33A78;
      uint64_t v32 = *(void *)(v0 + 208);
      char v33 = *(unsigned char *)(v0 + 304);
      return sub_100C5DDC0(v32, v33);
    }
  }
  else
  {
    sub_100130078();
    swift_allocError();
    unsigned char *v24 = 20;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    long long v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_100C3393C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[34] = v1;
    uint64_t v5 = v4[16];
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_100C34598;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = v4[16];
    v4[33] = a1;
    uint64_t v6 = sub_100C33BB4;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100C33A78(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  swift_task_dealloc();
  if (v1)
  {
    v4[34] = v1;
    uint64_t v5 = v4[16];
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_100C34598;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v7 = v4[16];
    v4[33] = a1;
    uint64_t v6 = sub_100C33BB4;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100C33BB4()
{
  uint64_t v52 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  if (*(void *)(*(void *)(v0 + 264) + 16))
  {
    uint64_t v2 = v1 + *(int *)(*(void *)(v0 + 136) + 20);
    char v3 = *(unsigned char *)(v1 + *(int *)(v0 + 300));
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100C34674;
    uint64_t v5 = *(void *)(v0 + 264);
    return sub_10109EF38(v2, v3, v5);
  }
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v7 = *(void *)(v0 + 160);
  swift_bridgeObjectRelease();
  sub_100CBD0EC(v1, v7, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v8, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = *(void *)(v0 + 208);
  uint64_t v13 = *(void *)(v0 + 152);
  uint64_t v14 = *(void *)(v0 + 160);
  if (v11)
  {
    uint64_t v15 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 141558787;
    *(void *)(v0 + 48) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 56) = sub_1008FA0F0(v16, v17, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v15 + 22) = 2160;
    *(void *)(v0 + 64) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 32) = 2081;
    uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 72) = sub_1008FA0F0(v18, v19, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v13, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "No keys to upload for share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v15, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100CBD154(v13, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
  }
  sub_100CBD154(v12, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v20 = (char *)(v0 + 304);
  uint64_t v21 = *(void *)(v0 + 232) + 1;
  if (v21 == *(void *)(v0 + 216))
  {
    char v22 = *(unsigned char *)(v0 + 305);
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      sub_100130078();
      swift_allocError();
      unsigned char *v42 = 20;
      swift_willThrow();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  *(void *)(v0 + 232) = v21;
  if (v21 == *(void *)(v0 + 224))
  {
    __break(1u);
  }
  else
  {
    sub_100CBD0EC(*(void *)(v0 + 120)+ ((*(unsigned __int8 *)(v0 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296))+ *(void *)(*(void *)(v0 + 144) + 72) * v21, *(void *)(v0 + 208), type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 == -1) {
      goto LABEL_13;
    }
  }
  swift_once();
LABEL_13:
  uint64_t v24 = *(void *)(v0 + 200);
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v27 = *(void *)(v0 + 184);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v28 = type metadata accessor for Logger();
  *(void *)(v0 + 240) = sub_100010324(v28, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v25, v24, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v25, v26, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v25, v27, type metadata accessor for SharingCircleKeyManager.Instruction);
  unint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v32 = *(void *)(v0 + 192);
  uint64_t v33 = *(void *)(v0 + 200);
  uint64_t v34 = *(void *)(v0 + 184);
  if (v31)
  {
    uint64_t v50 = *(void *)(v0 + 192);
    uint64_t v35 = swift_slowAlloc();
    v51[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136447235;
    uint64_t v36 = sub_100C27BF0();
    *(void *)(v0 + 80) = sub_1008FA0F0(v36, v37, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v33, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v35 + 12) = 2160;
    *(void *)(v0 + 88) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 96) = sub_1008FA0F0(v38, v39, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v50, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v35 + 32) = 2160;
    *(void *)(v0 + 104) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v35 + 42) = 2081;
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 112) = sub_1008FA0F0(v40, v41, v51);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v20 = (char *)(v0 + 304);
    sub_100CBD154(v34, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Upload keys: %{public}s, share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v35, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v0 + 200), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v34, type metadata accessor for SharingCircleKeyManager.Instruction);
  }

  uint64_t v43 = *(void *)(v0 + 208);
  uint64_t v44 = *(int *)(*(void *)(v0 + 136) + 36);
  *(_DWORD *)(v0 + 300) = v44;
  if (*(unsigned char *)(v43 + v44) == 4)
  {
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_100C3393C;
    uint64_t v46 = *(void *)(v0 + 208);
    return sub_100C58AF4(v46);
  }
  else
  {
    uint64_t v47 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v47;
    *uint64_t v47 = v0;
    v47[1] = sub_100C33A78;
    uint64_t v48 = *(void *)(v0 + 208);
    char v49 = *v20;
    return sub_100C5DDC0(v48, v49);
  }
}

uint64_t sub_100C34598()
{
  sub_100CBD154(*(void *)(v0 + 208), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C34674()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 288) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C35088;
  }
  else
  {
    uint64_t v4 = sub_100C347CC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C347CC()
{
  uint64_t v50 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void *)(v0 + 168);
  sub_100CBD0EC(v1, *(void *)(v0 + 176), type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v47 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 176);
    uint64_t v45 = *(void *)(v0 + 168);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    *(void *)(v0 + 16) = 1752392040;
    uint64_t v49 = v46;
    *(_DWORD *)uint64_t v6 = 141558787;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v7 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 24) = sub_1008FA0F0(v7, v8, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v5, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v6 + 22) = 2160;
    *(void *)(v0 + 32) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 32) = 2081;
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 40) = sub_1008FA0F0(v9, v10, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v45, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Received key upload result for circle %{private,mask.hash}s beacon: %{private,mask.hash}s.", (uint8_t *)v6, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v11 = v47;
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 208);
    uint64_t v14 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);

    sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v13, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v11 = v12;
  }
  sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  unint64_t v15 = *(void *)(v0 + 216);
  unint64_t v16 = *(void *)(v0 + 232) + 1;
  BOOL v17 = v16 >= v15;
  if (v16 == v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
  *(unsigned char *)(v0 + 305) = 1;
  if (v16 > v15) {
    unint64_t v15 = v16;
  }
  *(void *)(v0 + 224) = v15;
  *(void *)(v0 + 232) = v16;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    sub_100CBD0EC(*(void *)(v0 + 120)+ ((*(unsigned __int8 *)(v0 + 296) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 296))+ *(void *)(*(void *)(v0 + 144) + 72) * v16, *(void *)(v0 + 208), type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 == -1) {
      goto LABEL_12;
    }
  }
  swift_once();
LABEL_12:
  uint64_t v21 = *(void *)(v0 + 200);
  uint64_t v20 = *(void *)(v0 + 208);
  uint64_t v23 = *(void *)(v0 + 184);
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v24 = type metadata accessor for Logger();
  *(void *)(v0 + 240) = sub_100010324(v24, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v20, v21, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v20, v22, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v20, v23, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  uint64_t v48 = v25;
  BOOL v27 = os_log_type_enabled(v25, v26);
  uint64_t v29 = *(void *)(v0 + 192);
  uint64_t v28 = *(void *)(v0 + 200);
  uint64_t v30 = *(void *)(v0 + 184);
  if (v27)
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 136447235;
    uint64_t v32 = sub_100C27BF0();
    *(void *)(v0 + 80) = sub_1008FA0F0(v32, v33, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v28, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v31 + 12) = 2160;
    *(void *)(v0 + 88) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 96) = sub_1008FA0F0(v34, v35, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v31 + 32) = 2160;
    *(void *)(v0 + 104) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 42) = 2081;
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 112) = sub_1008FA0F0(v36, v37, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v48, v26, "Upload keys: %{public}s, share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v31, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v0 + 200), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v30, type metadata accessor for SharingCircleKeyManager.Instruction);
  }

  uint64_t v38 = *(void *)(v0 + 208);
  uint64_t v39 = *(int *)(*(void *)(v0 + 136) + 36);
  *(_DWORD *)(v0 + 300) = v39;
  if (*(unsigned char *)(v38 + v39) == 4)
  {
    uint64_t v40 = (void *)swift_task_alloc();
    *(void *)(v0 + 248) = v40;
    *uint64_t v40 = v0;
    v40[1] = sub_100C3393C;
    uint64_t v41 = *(void *)(v0 + 208);
    return sub_100C58AF4(v41);
  }
  else
  {
    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 256) = v42;
    void *v42 = v0;
    v42[1] = sub_100C33A78;
    uint64_t v43 = *(void *)(v0 + 208);
    char v44 = *(unsigned char *)(v0 + 304);
    return sub_100C5DDC0(v43, v44);
  }
}

uint64_t sub_100C35088()
{
  sub_100CBD154(*(void *)(v0 + 208), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C35164(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return _swift_task_switch(sub_100C35214, v1, 0);
}

uint64_t sub_100C35214()
{
  uint64_t v22 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[11];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100010324(v5, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v4, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  uint64_t v20 = v6;
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[12];
  uint64_t v9 = v0[13];
  uint64_t v11 = v0[11];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136447235;
    uint64_t v13 = sub_100C27BF0();
    v0[3] = sub_1008FA0F0(v13, v14, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 12) = 2160;
    v0[4] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_1008FA0F0(v15, v16, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 32) = 2160;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 42) = 2081;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v17, v18, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v20, v7, "Generate package requests: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v12, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(v0[13], type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  }
  if (qword_101636CD8 != -1) {
    swift_once();
  }
  v0[14] = qword_10170E390;
  return _swift_task_switch(sub_100C3564C, 0, 0);
}

uint64_t sub_100C3564C()
{
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C35714;
  uint64_t v2 = *(void *)(v0 + 112);
  return unsafeBlocking<A>(_:)(v0 + 16, sub_10001D704, v2, &type metadata for Configuration);
}

uint64_t sub_100C35714()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100C3582C, 0, 0);
}

uint64_t sub_100C3582C()
{
  uint64_t v1 = v0[9];
  v0[16] = v0[2];
  return _swift_task_switch(sub_100C35850, v1, 0);
}

uint64_t sub_100C35850()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = sub_1010AC288(v0[16]);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + *(int *)(v1 + 44));
  uint64_t v5 = *(void *)(v2 + *(int *)(v1 + 32));
  uint64_t v6 = (void *)swift_task_alloc();
  v6[2] = v4;
  v6[3] = v2;
  v6[4] = v3;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100F47B98((void *(*)(void *__return_ptr, void))sub_100CBF934, (uint64_t)v6, v5);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v7);
}

void sub_100C3596C(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v46 = a4;
  uint64_t v45 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  uint64_t v10 = __chkstk_darwin(v45);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for BookmarkMetaData();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15 - 8);
  unint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  if (*(void *)(a2 + 16) && (unint64_t v20 = sub_100724268(v19), (v21 & 1) != 0))
  {
    sub_100CBD0EC(*(void *)(a2 + 56) + *(void *)(v16 + 72) * v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    uint64_t v22 = *((void *)v18 + 1);
    sub_100CBD154((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    if (((v19 - 10) < 7 || (v19 - 7) <= 1) && v22)
    {
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100010324(v23, (uint64_t)qword_10170EB40);
      sub_100CBD0EC(a3, (uint64_t)v12, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v48 = v46;
        *(_DWORD *)uint64_t v26 = 136315651;
        unint64_t v27 = sub_1012638E4(v19);
        uint64_t v44 = v5;
        uint64_t v47 = sub_1008FA0F0(v27, v28, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2160;
        uint64_t v47 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v26 + 22) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v47 = sub_1008FA0F0(v29, v30, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154((uint64_t)v12, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "Already downloaded key type %s (Skipped),\nnot including in request for circle %{private,mask.hash}s.", (uint8_t *)v26, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100CBD154((uint64_t)v12, type metadata accessor for SharingCircleKeyManager.Instruction);
      }

      uint64_t v41 = 0;
      *a5 = 0;
      a5[1] = 0;
      a5[2] = 2;
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v22 = 0;
  }
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for Logger();
  sub_100010324(v31, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(a3, (uint64_t)v14, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  int v34 = v33;
  if (!os_log_type_enabled(v32, v33)) {
    goto LABEL_17;
  }
  uint64_t v35 = swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  uint64_t v48 = v42;
  *(_DWORD *)uint64_t v35 = 136315907;
  unint64_t v36 = sub_1012638E4(v19);
  uint64_t v44 = v5;
  uint64_t v47 = sub_1008FA0F0(v36, v37, &v48);
  uint64_t v43 = a5;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v35 + 12) = 2048;
  uint64_t v47 = v22;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v35 + 22) = 2160;
  uint64_t v47 = 1752392040;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  *(_WORD *)(v35 + 32) = 2081;
  type metadata accessor for UUID();
  LODWORD(v45) = v34;
  sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v47 = sub_1008FA0F0(v38, v39, &v48);
  a5 = v43;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  sub_100CBD154((uint64_t)v14, type metadata accessor for SharingCircleKeyManager.Instruction);
  _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v45, "Downloading key type %s starting from last downloaded index %llu,\nfor circle %{private,mask.hash}s.", (uint8_t *)v35, 0x2Au);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  if (v22)
  {
    while (1)
    {
      uint64_t v40 = v22 + 1;
      if (v22 != -1) {
        break;
      }
      __break(1u);
LABEL_17:
      sub_100CBD154((uint64_t)v14, type metadata accessor for SharingCircleKeyManager.Instruction);

      if (!v22) {
        goto LABEL_18;
      }
    }
  }
  else
  {
LABEL_18:
    uint64_t v40 = 0;
  }
  *a5 = v19;
  a5[1] = v40;
  a5[2] = 0;
  uint64_t v41 = v46;
LABEL_20:
  a5[3] = v41;
}

unint64_t sub_100C36054(char a1)
{
  unint64_t result = 0x7972616D697270;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0x646E7542646C6977;
      break;
    case 5:
      unint64_t result = 0x417972616D697270;
      break;
    case 6:
    case 13:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0x697463656E6E6F63;
      break;
    case 10:
      unint64_t result = 0x656E774F7261656ELL;
      break;
    case 11:
      unint64_t result = 0x656B6F546E696F6ALL;
      break;
    case 12:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0x7461636F4C626577;
      break;
    case 15:
      unint64_t result = 0x646174654D626577;
      break;
    case 16:
      unint64_t result = 0x6D65744974736F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100C362B0(uint64_t a1)
{
  v2[47] = a1;
  v2[48] = v1;
  uint64_t v3 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  v2[49] = v3;
  v2[50] = *(void *)(v3 - 8);
  v2[51] = swift_task_alloc();
  v2[52] = swift_task_alloc();
  v2[53] = swift_task_alloc();
  v2[54] = swift_task_alloc();
  v2[55] = type metadata accessor for KeyDropDownloadResponse(0);
  v2[56] = swift_task_alloc();
  sub_10000588C(&qword_10163F778);
  v2[57] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for KeyDropJoinToken(0);
  v2[58] = v4;
  v2[59] = *(void *)(v4 - 8);
  v2[60] = swift_task_alloc();
  v2[61] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[62] = v5;
  v2[63] = *(void *)(v5 - 8);
  v2[64] = swift_task_alloc();
  v2[65] = swift_task_alloc();
  v2[66] = swift_task_alloc();
  v2[67] = swift_task_alloc();
  v2[68] = swift_task_alloc();
  v2[69] = swift_task_alloc();
  v2[70] = swift_task_alloc();
  v2[71] = swift_task_alloc();
  v2[72] = swift_task_alloc();
  v2[73] = swift_task_alloc();
  v2[74] = swift_task_alloc();
  v2[75] = swift_task_alloc();
  v2[76] = swift_task_alloc();
  v2[77] = swift_task_alloc();
  return _swift_task_switch(sub_100C36560, v1, 0);
}

uint64_t sub_100C36560()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 376);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 624) = v2;
  if (v2)
  {
    uint64_t v3 = v0 + 16;
    uint64_t v4 = *(void *)(v0 + 504);
    int v5 = *(_DWORD *)(v4 + 80);
    *(_DWORD *)(v0 + 776) = v5;
    *(void *)(v0 + 632) = *(void *)(v4 + 72);
    *(void *)(v0 + 648) = _swiftEmptyArrayStorage;
    *(void *)(v0 + 640) = 0;
    uint64_t v6 = *(void *)(v0 + 616);
    uint64_t v7 = v1 + ((v5 + 32) & ~(unint64_t)v5);
    swift_bridgeObjectRetain();
    sub_100CBD0EC(v7, v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v8 = *(void *)(v0 + 616);
    uint64_t v9 = *(void *)(v0 + 608);
    uint64_t v10 = *(void *)(v0 + 600);
    uint64_t v11 = *(void *)(v0 + 592);
    uint64_t v12 = type metadata accessor for Logger();
    *(void *)(v0 + 656) = sub_100010324(v12, (uint64_t)qword_10170EB40);
    sub_100CBD0EC(v8, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v8, v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v8, v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void *)(v0 + 608);
    uint64_t v17 = *(void *)(v0 + 600);
    uint64_t v18 = *(void *)(v0 + 592);
    if (v15)
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136447235;
      uint64_t v20 = sub_100C27BF0();
      *(void *)(v0 + 336) = sub_1008FA0F0(v20, v21, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v16, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v19 + 12) = 2160;
      *(void *)(v0 + 344) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 352) = sub_1008FA0F0(v22, v23, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v19 + 32) = 2160;
      *(void *)(v0 + 360) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 42) = 2081;
      uint64_t v3 = v0 + 16;
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 368) = sub_1008FA0F0(v24, v25, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v19, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
    }

    uint64_t v28 = *(void *)(v0 + 616);
    uint64_t v29 = *(int *)(*(void *)(v0 + 496) + 20);
    *(_DWORD *)(v0 + 780) = v29;
    uint64_t v30 = v28 + v29;
    uint64_t v31 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v31;
    *uint64_t v31 = v0;
    v31[1] = sub_100C36BA0;
    uint64_t v32 = *(void *)(v0 + 384);
    v31[12] = v30;
    v31[13] = v32;
    v31[11] = v3;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void *))(v0 + 8);
    return v26(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_100C36BA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 672) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 384);
  if (v0) {
    uint64_t v4 = sub_100C3A698;
  }
  else {
    uint64_t v4 = sub_100C36CCC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C36CCC()
{
  uint64_t v67 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 16);
  sub_10001D608(v0 + 16, v0 + 144, &qword_10163A138);
  sub_10001D608(v0 + 144, v0 + 128, &qword_10163A138);
  unint64_t v2 = *(void *)(v0 + 136);
  *(void *)(v0 + 680) = v2;
  if (v2 >> 60 == 15)
  {
    sub_100CBD0EC(*(void *)(v0 + 616), *(void *)(v0 + 584), type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    uint64_t v6 = *(void *)(v0 + 584);
    if (!v5)
    {
      sub_100CBD154(*(void *)(v0 + 584), type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_1001300CC((uint64_t *)(v0 + 16));

      goto LABEL_21;
    }
    uint64_t v7 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558275;
    *(void *)(v7 + 4) = 1752392040;
    *(_WORD *)(v7 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v7 + 14) = sub_1008FA0F0(v8, v9, &v66);
    swift_bridgeObjectRelease();
    sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "No circleSharedSecret found for shareId: %{private,mask.hash}s.", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_16;
  }
  *(void *)(v0 + 688) = *(void *)(v0 + 128);
  uint64_t v10 = *(void *)(v0 + 48);
  *(void *)(v0 + 312) = v10;
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 472);
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    sub_100091B38(v0 + 144);
    sub_100091B38(v0 + 144);
    sub_10048307C(v0 + 312);
    uint64_t v14 = *(void *)(v12 + 72);
    while (1)
    {
      sub_100CBD0EC(v13, *(void *)(v0 + 480), type metadata accessor for KeyDropJoinToken);
      char v15 = static UUID.== infix(_:_:)();
      uint64_t v16 = *(void *)(v0 + 480);
      if (v15) {
        break;
      }
      sub_100CBD154(v16, type metadata accessor for KeyDropJoinToken);
      v13 += v14;
      if (!--v11) {
        goto LABEL_11;
      }
    }
    sub_100CBD1B4(v16, *(void *)(v0 + 456), type metadata accessor for KeyDropJoinToken);
    uint64_t v17 = 0;
  }
  else
  {
    sub_100091B38(v0 + 144);
    sub_100091B38(v0 + 144);
    sub_10048307C(v0 + 312);
LABEL_11:
    uint64_t v17 = 1;
  }
  uint64_t v18 = *(void *)(v0 + 464);
  uint64_t v19 = *(void *)(v0 + 472);
  uint64_t v20 = *(void *)(v0 + 456);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v20, v17, 1, v18);
  sub_10025C634(v0 + 312);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v20, 1, v18) == 1)
  {
    uint64_t v21 = *(void *)(v0 + 616);
    uint64_t v22 = *(void *)(v0 + 568);
    uint64_t v23 = *(void *)(v0 + 560);
    uint64_t v24 = *(void *)(v0 + 456);
    sub_1003DD160(v0 + 144);
    sub_10001DAB4(v24, &qword_10163F778);
    sub_100CBD0EC(v21, v22, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v21, v23, type metadata accessor for SharingCircleKeyManager.Instruction);
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    BOOL v27 = os_log_type_enabled(v25, v26);
    uint64_t v28 = *(void *)(v0 + 568);
    uint64_t v29 = *(void *)(v0 + 560);
    if (!v27)
    {
      sub_1001300CC((uint64_t *)(v0 + 16));
      sub_1003DD160(v0 + 144);
      sub_100CBD154(v28, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);

LABEL_21:
      sub_100CBD154(*(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v40 = *(void *)(v0 + 640) + 1;
      if (v40 == *(void *)(v0 + 624))
      {
        uint64_t v65 = *(void *)(v0 + 648);
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v41 = *(uint64_t (**)(uint64_t))(v0 + 8);
        return v41(v65);
      }
      else
      {
        *(void *)(v0 + 640) = v40;
        sub_100CBD0EC(*(void *)(v0 + 376)+ ((*(unsigned __int8 *)(v0 + 776) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 776))+ *(void *)(v0 + 632) * v40, *(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
        if (qword_101637020 != -1) {
          swift_once();
        }
        uint64_t v42 = *(void *)(v0 + 616);
        uint64_t v43 = *(void *)(v0 + 608);
        uint64_t v44 = *(void *)(v0 + 600);
        uint64_t v45 = *(void *)(v0 + 592);
        uint64_t v46 = type metadata accessor for Logger();
        *(void *)(v0 + 656) = sub_100010324(v46, (uint64_t)qword_10170EB40);
        sub_100CBD0EC(v42, v43, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD0EC(v42, v44, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD0EC(v42, v45, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.default.getter();
        BOOL v49 = os_log_type_enabled(v47, v48);
        uint64_t v50 = *(void *)(v0 + 608);
        uint64_t v51 = *(void *)(v0 + 600);
        uint64_t v52 = *(void *)(v0 + 592);
        if (v49)
        {
          uint64_t v53 = swift_slowAlloc();
          uint64_t v66 = swift_slowAlloc();
          *(_DWORD *)uint64_t v53 = 136447235;
          uint64_t v54 = sub_100C27BF0();
          *(void *)(v0 + 336) = sub_1008FA0F0(v54, v55, &v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v50, type metadata accessor for SharingCircleKeyManager.Instruction);
          *(_WORD *)(v53 + 12) = 2160;
          *(void *)(v0 + 344) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v53 + 22) = 2081;
          type metadata accessor for UUID();
          sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 352) = sub_1008FA0F0(v56, v57, &v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v51, type metadata accessor for SharingCircleKeyManager.Instruction);
          *(_WORD *)(v53 + 32) = 2160;
          *(void *)(v0 + 360) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v53 + 42) = 2081;
          uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 368) = sub_1008FA0F0(v58, v59, &v66);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v52, type metadata accessor for SharingCircleKeyManager.Instruction);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v53, 0x34u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
          sub_100CBD154(v51, type metadata accessor for SharingCircleKeyManager.Instruction);
          sub_100CBD154(v52, type metadata accessor for SharingCircleKeyManager.Instruction);
        }

        uint64_t v60 = *(void *)(v0 + 616);
        uint64_t v61 = *(int *)(*(void *)(v0 + 496) + 20);
        *(_DWORD *)(v0 + 780) = v61;
        uint64_t v62 = v60 + v61;
        long long v63 = (void *)swift_task_alloc();
        *(void *)(v0 + 664) = v63;
        *long long v63 = v0;
        v63[1] = sub_100C36BA0;
        uint64_t v64 = *(void *)(v0 + 384);
        v63[12] = v62;
        v63[13] = v64;
        v63[11] = v1;
        return _swift_task_switch(sub_100C32ED8, 0, 0);
      }
    }
    uint64_t v30 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 141558787;
    *(void *)(v0 + 232) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 160) = sub_1008FA0F0(v31, v32, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v28, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v30 + 22) = 2160;
    *(void *)(v0 + 168) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 32) = 2081;
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 176) = sub_1008FA0F0(v33, v34, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v1 = (uint64_t *)(v0 + 16);
    sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "No joinTokens found for shareId: %{private,mask.hash}s,\nmemberId: %{private,mask.hash}s.", (uint8_t *)v30, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_1003DD160(v0 + 144);

LABEL_16:
    sub_1001300CC(v1);
    goto LABEL_21;
  }
  uint64_t v35 = *(void *)(v0 + 488);
  uint64_t v36 = *(void *)(v0 + 456);
  sub_1001300CC((uint64_t *)(v0 + 16));
  sub_100CBD1B4(v36, v35, type metadata accessor for KeyDropJoinToken);
  unint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 696) = v37;
  *unint64_t v37 = v0;
  v37[1] = sub_100C37A10;
  uint64_t v38 = *(void *)(v0 + 616);
  return sub_100C35164(v38);
}

uint64_t sub_100C37A10(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 384);
  *(void *)(*(void *)v1 + 704) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C37B28, v2, 0);
}

uint64_t sub_100C37B28()
{
  uint64_t v1 = *(int *)(v0 + 780);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 496);
  uint64_t v4 = v2 + *(int *)(v3 + 28);
  char v5 = *(unsigned char *)(v2 + *(int *)(v3 + 36));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 712) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100C37C04;
  uint64_t v7 = *(void *)(v0 + 704);
  uint64_t v8 = *(void *)(v0 + 488);
  uint64_t v9 = *(void *)(v0 + 448);
  return sub_1011EF4F8(v9, v2 + v1, v4, v5, v8, v7);
}

uint64_t sub_100C37C04()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 720) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 384);
    swift_bridgeObjectRelease();
    sub_1003DD160(v2 + 144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C3ADFC;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 384);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C37D60;
    uint64_t v5 = v6;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100C37D60()
{
  uint64_t v113 = v0;
  uint64_t v1 = v0 + 144;
  uint64_t v2 = *(void *)(*(void *)(v0 + 448) + *(int *)(*(void *)(v0 + 440) + 28));
  *(void *)(v0 + 728) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 736) = v3;
  if (!v3)
  {
LABEL_32:
    uint64_t v59 = *(void *)(v0 + 688);
    unint64_t v60 = *(void *)(v0 + 680);
    uint64_t v61 = *(void *)(v0 + 616);
    uint64_t v62 = swift_bridgeObjectRetain();
    long long v63 = sub_100CBB248(v62, v59, v60, v61);
    sub_1003DD160(v1);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v65 = *(void **)(v0 + 648);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v65 = sub_100A6ECE8(0, v65[2] + 1, 1, *(void **)(v0 + 648));
    }
    unint64_t v67 = v65[2];
    unint64_t v66 = v65[3];
    if (v67 >= v66 >> 1) {
      uint64_t v65 = sub_100A6ECE8((void *)(v66 > 1), v67 + 1, 1, v65);
    }
    uint64_t v68 = *(void *)(v0 + 616);
    uint64_t v69 = *(void *)(v0 + 488);
    uint64_t v70 = *(void *)(v0 + 448);
    v65[2] = v67 + 1;
    v65[v67 + 4] = v63;
    sub_1003DD160(v1);
    sub_100CBD154(v70, type metadata accessor for KeyDropDownloadResponse);
    sub_100CBD154(v69, type metadata accessor for KeyDropJoinToken);
    sub_100CBD154(v68, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v71 = *(void *)(v0 + 640) + 1;
    if (v71 == *(void *)(v0 + 624))
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      Swift::String v72 = *(uint64_t (**)(void *))(v0 + 8);
      return v72(v65);
    }
    else
    {
      uint64_t v74 = v0 + 16;
      *(void *)(v0 + 648) = v65;
      *(void *)(v0 + 640) = v71;
      sub_100CBD0EC(*(void *)(v0 + 376)+ ((*(unsigned __int8 *)(v0 + 776) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 776))+ *(void *)(v0 + 632) * v71, *(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v75 = *(void *)(v0 + 616);
      uint64_t v76 = *(void *)(v0 + 608);
      uint64_t v77 = *(void *)(v0 + 600);
      uint64_t v78 = *(void *)(v0 + 592);
      uint64_t v79 = type metadata accessor for Logger();
      *(void *)(v0 + 656) = sub_100010324(v79, (uint64_t)qword_10170EB40);
      sub_100CBD0EC(v75, v76, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v75, v77, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v75, v78, type metadata accessor for SharingCircleKeyManager.Instruction);
      unint64_t v80 = Logger.logObject.getter();
      os_log_type_t v81 = static os_log_type_t.default.getter();
      BOOL v82 = os_log_type_enabled(v80, v81);
      uint64_t v83 = *(void *)(v0 + 608);
      uint64_t v84 = *(void *)(v0 + 600);
      uint64_t v85 = *(void *)(v0 + 592);
      if (v82)
      {
        uint64_t v86 = swift_slowAlloc();
        v112[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v86 = 136447235;
        uint64_t v87 = sub_100C27BF0();
        *(void *)(v0 + 336) = sub_1008FA0F0(v87, v88, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v83, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v86 + 12) = 2160;
        *(void *)(v0 + 344) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v86 + 22) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 352) = sub_1008FA0F0(v89, v90, v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v84, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v86 + 32) = 2160;
        *(void *)(v0 + 360) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v86 + 42) = 2081;
        uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 368) = sub_1008FA0F0(v91, v92, v112);
        uint64_t v74 = v0 + 16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v85, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v86, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v84, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v85, type metadata accessor for SharingCircleKeyManager.Instruction);
      }

      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = *(int *)(*(void *)(v0 + 496) + 20);
      *(_DWORD *)(v0 + 780) = v101;
      uint64_t v102 = v100 + v101;
      uint64_t v103 = (void *)swift_task_alloc();
      *(void *)(v0 + 664) = v103;
      *uint64_t v103 = v0;
      v103[1] = sub_100C36BA0;
      uint64_t v104 = *(void *)(v0 + 384);
      v103[12] = v102;
      v103[13] = v104;
      v103[11] = v74;
      return _swift_task_switch(sub_100C32ED8, 0, 0);
    }
  }
  uint64_t v105 = (uint64_t *)(v0 + 248);
  uint64_t v4 = *(void *)(v0 + 400);
  *(_DWORD *)(v0 + 784) = *(_DWORD *)(*(void *)(v0 + 496) + 32);
  *(_DWORD *)(v0 + 788) = *(_DWORD *)(v4 + 80);
  *(void *)(v0 + 744) = *(void *)(v4 + 72);
  uint64_t v5 = *(void *)(v0 + 720);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while (1)
  {
    *(void *)(v0 + 752) = v6;
    uint64_t v10 = *(int *)(v0 + 784);
    uint64_t v11 = *(void *)(v0 + 616);
    uint64_t v12 = *(unsigned __int8 **)(v0 + 432);
    sub_100CBD0EC(*(void *)(v0 + 728)+ ((*(unsigned __int8 *)(v0 + 788) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 788))+ *(void *)(v0 + 744) * v6, (uint64_t)v12, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v13 = *(void *)(v11 + v10);
    unsigned __int8 v14 = *v12;
    swift_bridgeObjectRetain();
    LOBYTE(v11) = sub_100DC6BD8(v14, v13);
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v43 = *(void *)(v0 + 616);
      uint64_t v44 = *(void *)(v0 + 576);
      sub_100CBD0EC(*(void *)(v0 + 432), *(void *)(v0 + 416), type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD0EC(v43, v44, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = *(unsigned __int8 **)(v0 + 416);
        uint64_t v48 = swift_slowAlloc();
        *(void *)(v0 + 248) = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136446723;
        uint64_t v49 = *v47;
        unint64_t v50 = 0xE700000000000000;
        uint64_t v51 = 0x7972616D697270;
        switch(v49)
        {
          case 1:
            unint64_t v50 = 0xE900000000000079;
            uint64_t v51 = 0x7261646E6F636573;
            break;
          case 2:
            uint64_t v51 = 0xD000000000000019;
            unint64_t v50 = 0x80000001013EF280;
            break;
          case 3:
            uint64_t v51 = 0xD00000000000001BLL;
            unint64_t v50 = 0x80000001013EF2A0;
            break;
          case 4:
            unint64_t v50 = 0xEA0000000000656CLL;
            uint64_t v51 = 0x646E7542646C6977;
            break;
          case 5:
            unint64_t v50 = 0xEE00737365726464;
            uint64_t v51 = 0x417972616D697270;
            break;
          case 6:
            uint64_t v54 = "Bundle";
            goto LABEL_26;
          case 7:
            uint64_t v51 = 0xD000000000000012;
            unint64_t v50 = 0x80000001013EE1F0;
            break;
          case 8:
            uint64_t v51 = 0xD000000000000011;
            unint64_t v50 = 0x80000001013EE210;
            break;
          case 9:
            unint64_t v50 = 0xED000079654B6E6FLL;
            uint64_t v51 = 0x697463656E6E6F63;
            break;
          case 10:
            unint64_t v50 = 0xEC00000079654B72;
            uint64_t v51 = 0x656E774F7261656ELL;
            break;
          case 11:
            uint64_t v51 = 0x656B6F546E696F6ALL;
            unint64_t v50 = 0xE90000000000006ELL;
            break;
          case 12:
            uint64_t v51 = 0xD000000000000015;
            unint64_t v50 = 0x80000001013EF310;
            break;
          case 13:
            uint64_t v54 = "beaconGroupAttributes";
LABEL_26:
            unint64_t v50 = (unint64_t)v54 | 0x8000000000000000;
            uint64_t v51 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v50 = 0xEE0079654B6E6F69;
            uint64_t v51 = 0x7461636F4C626577;
            break;
          case 15:
            unint64_t v50 = 0xEB00000000617461;
            uint64_t v51 = 0x646174654D626577;
            break;
          case 16:
            unint64_t v50 = 0xED00007365746144;
            uint64_t v51 = 0x6D65744974736F6CLL;
            break;
          default:
            break;
        }
        uint64_t v55 = *(void *)(v0 + 576);
        uint64_t v110 = *(void *)(v0 + 432);
        uint64_t v56 = *(void *)(v0 + 416);
        *(void *)(v48 + 4) = sub_1008FA0F0(v51, v50, v105);
        swift_bridgeObjectRelease();
        sub_100CBD154(v56, type metadata accessor for KeyDropInterface.KeyPackage);
        *(_WORD *)(v48 + 12) = 2160;
        *(void *)(v48 + 14) = 1752392040;
        *(_WORD *)(v48 + 22) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v48 + 24) = sub_1008FA0F0(v57, v58, v105);
        swift_bridgeObjectRelease();
        sub_100CBD154(v55, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "Received package of type %{public}s\nfor shareId: %{private,mask.hash}s - ignoring unrequested package.", (uint8_t *)v48, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_100CBD154(v110, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v1 = v0 + 144;
      }
      else
      {
        uint64_t v7 = *(void *)(v0 + 576);
        uint64_t v8 = *(void *)(v0 + 432);
        uint64_t v9 = *(void *)(v0 + 416);

        sub_100CBD154(v7, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v9, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100CBD154(v8, type metadata accessor for KeyDropInterface.KeyPackage);
      }
      goto LABEL_4;
    }
    uint64_t v15 = *(void *)(v0 + 688);
    uint64_t v16 = *(void *)(v0 + 680);
    sub_100091B38(v1);
    swift_retain();
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = sub_100CB98EC(v17, v15, v16);
    if (!v5) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_1003DD160(v1);
    uint64_t v19 = *(void *)(v0 + 616);
    uint64_t v20 = *(void *)(v0 + 520);
    uint64_t v21 = *(void *)(v0 + 512);
    uint64_t v22 = *(void *)(v0 + 432);
    uint64_t v23 = *(void *)(v0 + 408);
    sub_100CBD0EC(v19, *(void *)(v0 + 528), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v19, v20, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v19, v21, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v22, v23, type metadata accessor for KeyDropInterface.KeyPackage);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    BOOL v26 = os_log_type_enabled(v24, v25);
    uint64_t v27 = *(void *)(v0 + 528);
    uint64_t v28 = *(void *)(v0 + 520);
    uint64_t v29 = *(void *)(v0 + 512);
    if (v26)
    {
      uint64_t v111 = *(void *)(v0 + 432);
      uint64_t v107 = *(char **)(v0 + 408);
      uint64_t v106 = *(void *)(v0 + 512);
      uint64_t v30 = swift_slowAlloc();
      uint64_t v109 = (void *)swift_slowAlloc();
      v112[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 136448003;
      uint64_t v31 = sub_100C27BF0();
      *(void *)(v0 + 256) = sub_1008FA0F0(v31, v32, v112);
      os_log_type_t v108 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v27, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v30 + 12) = 2160;
      *(void *)(v0 + 264) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 272) = sub_1008FA0F0(v33, v34, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v28, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v30 + 32) = 2160;
      *(void *)(v0 + 280) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v30 + 42) = 2081;
      uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 288) = sub_1008FA0F0(v35, v36, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v106, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v30 + 52) = 2080;
      unint64_t v37 = sub_1012638E4(*v107);
      *(void *)(v0 + 296) = sub_1008FA0F0(v37, v38, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154((uint64_t)v107, type metadata accessor for KeyDropInterface.KeyPackage);
      *(_WORD *)(v30 + 62) = 2082;
      swift_getErrorValue();
      uint64_t v39 = Error.localizedDescription.getter();
      *(void *)(v0 + 320) = sub_1008FA0F0(v39, v40, v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v30 + 72) = 2112;
      swift_errorRetain();
      uint64_t v41 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 328) = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v109 = v41;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, v108, "Failed to save key package %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s,\npackageType: %s, error: %{public}s. %@.", (uint8_t *)v30, 0x52u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      uint64_t v42 = v111;
    }
    else
    {
      uint64_t v52 = *(void *)(v0 + 432);
      uint64_t v53 = *(void *)(v0 + 408);

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_100CBD154(v53, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v28, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v27, type metadata accessor for SharingCircleKeyManager.Instruction);
      swift_errorRelease();
      uint64_t v42 = v52;
    }
    sub_100CBD154(v42, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v5 = 0;
    uint64_t v1 = v0 + 144;
LABEL_4:
    uint64_t v6 = *(void *)(v0 + 752) + 1;
    if (v6 == *(void *)(v0 + 736))
    {
      swift_bridgeObjectRelease();
      goto LABEL_32;
    }
  }
  uint64_t v93 = v18;
  uint64_t v95 = *(unsigned __int8 **)(v0 + 424);
  uint64_t v94 = *(void *)(v0 + 432);
  uint64_t v96 = *(void *)(v0 + 392);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100CBD0EC(v94 + *(int *)(v96 + 20), (uint64_t)&v95[*(int *)(v96 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_1003DD160(v1);
  *uint64_t v95 = v14;
  *(void *)&v95[*(int *)(v96 + 24)] = v93;
  uint64_t v97 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v97;
  *uint64_t v97 = v0;
  v97[1] = sub_100C39168;
  uint64_t v98 = *(void *)(v0 + 616);
  uint64_t v99 = *(void *)(v0 + 424);
  return sub_100C3C794(v99, v98);
}

uint64_t sub_100C39168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 768) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 384);
  if (v0) {
    uint64_t v4 = sub_100C3B3C0;
  }
  else {
    uint64_t v4 = sub_100C39294;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C39294()
{
  uint64_t v112 = v0;
  uint64_t v107 = v0 + 144;
  uint64_t v1 = *(void *)(v0 + 432);
  sub_100CBD154(*(void *)(v0 + 424), type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD154(v1, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v2 = *(void *)(v0 + 752) + 1;
  if (v2 == *(void *)(v0 + 736))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 688);
    unint64_t v4 = *(void *)(v0 + 680);
    uint64_t v5 = *(void *)(v0 + 616);
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_100CBB248(v6, v3, v4, v5);
    sub_1003DD160(v107);
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *(void **)(v0 + 648);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v9 = sub_100A6ECE8(0, v9[2] + 1, 1, *(void **)(v0 + 648));
    }
    unint64_t v11 = v9[2];
    unint64_t v10 = v9[3];
    if (v11 >= v10 >> 1) {
      uint64_t v9 = sub_100A6ECE8((void *)(v10 > 1), v11 + 1, 1, v9);
    }
    uint64_t v12 = *(void *)(v0 + 616);
    uint64_t v13 = *(void *)(v0 + 488);
    uint64_t v14 = *(void *)(v0 + 448);
    v9[2] = v11 + 1;
    v9[v11 + 4] = v7;
    sub_1003DD160(v107);
    sub_100CBD154(v14, type metadata accessor for KeyDropDownloadResponse);
    sub_100CBD154(v13, type metadata accessor for KeyDropJoinToken);
    sub_100CBD154(v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v15 = *(void *)(v0 + 640) + 1;
    if (v15 == *(void *)(v0 + 624))
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v16 = *(uint64_t (**)(void *))(v0 + 8);
      return v16(v9);
    }
    else
    {
      uint64_t v72 = v0 + 16;
      *(void *)(v0 + 648) = v9;
      *(void *)(v0 + 640) = v15;
      sub_100CBD0EC(*(void *)(v0 + 376)+ ((*(unsigned __int8 *)(v0 + 776) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 776))+ *(void *)(v0 + 632) * v15, *(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v73 = *(void *)(v0 + 616);
      uint64_t v74 = *(void *)(v0 + 608);
      uint64_t v75 = *(void *)(v0 + 600);
      uint64_t v76 = *(void *)(v0 + 592);
      uint64_t v77 = type metadata accessor for Logger();
      *(void *)(v0 + 656) = sub_100010324(v77, (uint64_t)qword_10170EB40);
      sub_100CBD0EC(v73, v74, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v73, v75, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v73, v76, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v78 = Logger.logObject.getter();
      os_log_type_t v79 = static os_log_type_t.default.getter();
      BOOL v80 = os_log_type_enabled(v78, v79);
      uint64_t v81 = *(void *)(v0 + 608);
      uint64_t v82 = *(void *)(v0 + 600);
      uint64_t v83 = *(void *)(v0 + 592);
      if (v80)
      {
        uint64_t v84 = swift_slowAlloc();
        v111[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 136447235;
        uint64_t v85 = sub_100C27BF0();
        *(void *)(v0 + 336) = sub_1008FA0F0(v85, v86, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v81, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v84 + 12) = 2160;
        *(void *)(v0 + 344) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v84 + 22) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 352) = sub_1008FA0F0(v87, v88, v111);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v82, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v84 + 32) = 2160;
        *(void *)(v0 + 360) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v84 + 42) = 2081;
        uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 368) = sub_1008FA0F0(v89, v90, v111);
        uint64_t v72 = v0 + 16;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v83, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v78, v79, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v84, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v82, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v83, type metadata accessor for SharingCircleKeyManager.Instruction);
      }

      uint64_t v91 = *(void *)(v0 + 616);
      uint64_t v92 = *(int *)(*(void *)(v0 + 496) + 20);
      *(_DWORD *)(v0 + 780) = v92;
      uint64_t v93 = v91 + v92;
      uint64_t v94 = (void *)swift_task_alloc();
      *(void *)(v0 + 664) = v94;
      *uint64_t v94 = v0;
      v94[1] = sub_100C36BA0;
      uint64_t v95 = *(void *)(v0 + 384);
      v94[12] = v93;
      v94[13] = v95;
      v94[11] = v72;
      return _swift_task_switch(sub_100C32ED8, 0, 0);
    }
  }
  os_log_type_t v108 = (uint64_t *)(v0 + 248);
  uint64_t v105 = *(void *)(v0 + 768);
  while (1)
  {
    *(void *)(v0 + 752) = v2;
    uint64_t v18 = *(int *)(v0 + 784);
    uint64_t v19 = *(void *)(v0 + 616);
    uint64_t v20 = *(unsigned __int8 **)(v0 + 432);
    sub_100CBD0EC(*(void *)(v0 + 728)+ ((*(unsigned __int8 *)(v0 + 788) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 788))+ *(void *)(v0 + 744) * v2, (uint64_t)v20, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v21 = *(void *)(v19 + v18);
    unsigned __int8 v22 = *v20;
    swift_bridgeObjectRetain();
    char v23 = sub_100DC6BD8(v22, v21);
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      uint64_t v24 = *(void *)(v0 + 616);
      uint64_t v25 = *(void *)(v0 + 576);
      sub_100CBD0EC(*(void *)(v0 + 432), *(void *)(v0 + 416), type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD0EC(v24, v25, type metadata accessor for SharingCircleKeyManager.Instruction);
      BOOL v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = *(unsigned __int8 **)(v0 + 416);
        uint64_t v29 = swift_slowAlloc();
        *(void *)(v0 + 248) = swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 136446723;
        uint64_t v30 = *v28;
        unint64_t v31 = 0xE700000000000000;
        uint64_t v32 = 0x7972616D697270;
        switch(v30)
        {
          case 1:
            unint64_t v31 = 0xE900000000000079;
            uint64_t v32 = 0x7261646E6F636573;
            break;
          case 2:
            uint64_t v32 = 0xD000000000000019;
            unint64_t v31 = 0x80000001013EF280;
            break;
          case 3:
            uint64_t v32 = 0xD00000000000001BLL;
            unint64_t v31 = 0x80000001013EF2A0;
            break;
          case 4:
            unint64_t v31 = 0xEA0000000000656CLL;
            uint64_t v32 = 0x646E7542646C6977;
            break;
          case 5:
            unint64_t v31 = 0xEE00737365726464;
            uint64_t v32 = 0x417972616D697270;
            break;
          case 6:
            uint64_t v65 = "Bundle";
            goto LABEL_31;
          case 7:
            uint64_t v32 = 0xD000000000000012;
            unint64_t v31 = 0x80000001013EE1F0;
            break;
          case 8:
            uint64_t v32 = 0xD000000000000011;
            unint64_t v31 = 0x80000001013EE210;
            break;
          case 9:
            unint64_t v31 = 0xED000079654B6E6FLL;
            uint64_t v32 = 0x697463656E6E6F63;
            break;
          case 10:
            unint64_t v31 = 0xEC00000079654B72;
            uint64_t v32 = 0x656E774F7261656ELL;
            break;
          case 11:
            uint64_t v32 = 0x656B6F546E696F6ALL;
            unint64_t v31 = 0xE90000000000006ELL;
            break;
          case 12:
            uint64_t v32 = 0xD000000000000015;
            unint64_t v31 = 0x80000001013EF310;
            break;
          case 13:
            uint64_t v65 = "beaconGroupAttributes";
LABEL_31:
            unint64_t v31 = (unint64_t)v65 | 0x8000000000000000;
            uint64_t v32 = 0xD000000000000010;
            break;
          case 14:
            unint64_t v31 = 0xEE0079654B6E6F69;
            uint64_t v32 = 0x7461636F4C626577;
            break;
          case 15:
            unint64_t v31 = 0xEB00000000617461;
            uint64_t v32 = 0x646174654D626577;
            break;
          case 16:
            unint64_t v31 = 0xED00007365746144;
            uint64_t v32 = 0x6D65744974736F6CLL;
            break;
          default:
            break;
        }
        uint64_t v66 = *(void *)(v0 + 576);
        uint64_t v109 = *(void *)(v0 + 432);
        uint64_t v67 = *(void *)(v0 + 416);
        *(void *)(v29 + 4) = sub_1008FA0F0(v32, v31, v108);
        swift_bridgeObjectRelease();
        sub_100CBD154(v67, type metadata accessor for KeyDropInterface.KeyPackage);
        *(_WORD *)(v29 + 12) = 2160;
        *(void *)(v29 + 14) = 1752392040;
        *(_WORD *)(v29 + 22) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v29 + 24) = sub_1008FA0F0(v68, v69, v108);
        swift_bridgeObjectRelease();
        sub_100CBD154(v66, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Received package of type %{public}s\nfor shareId: %{private,mask.hash}s - ignoring unrequested package.", (uint8_t *)v29, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v36 = v109;
      }
      else
      {
        uint64_t v33 = *(void *)(v0 + 576);
        uint64_t v34 = *(void *)(v0 + 432);
        uint64_t v35 = *(void *)(v0 + 416);

        sub_100CBD154(v33, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD154(v35, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v36 = v34;
      }
      sub_100CBD154(v36, type metadata accessor for KeyDropInterface.KeyPackage);
      goto LABEL_37;
    }
    uint64_t v37 = *(void *)(v0 + 688);
    uint64_t v38 = *(void *)(v0 + 680);
    sub_100091B38(v107);
    swift_retain();
    uint64_t v39 = swift_bridgeObjectRetain();
    unint64_t v40 = sub_100CB98EC(v39, v37, v38);
    if (!v105) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_release();
    sub_1003DD160(v107);
    uint64_t v41 = *(void *)(v0 + 616);
    uint64_t v42 = *(void *)(v0 + 520);
    uint64_t v43 = *(void *)(v0 + 512);
    uint64_t v44 = *(void *)(v0 + 432);
    uint64_t v45 = *(void *)(v0 + 408);
    sub_100CBD0EC(v41, *(void *)(v0 + 528), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v41, v42, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v41, v43, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v44, v45, type metadata accessor for KeyDropInterface.KeyPackage);
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    os_log_type_t v46 = Logger.logObject.getter();
    os_log_type_t v47 = static os_log_type_t.error.getter();
    BOOL v48 = os_log_type_enabled(v46, v47);
    uint64_t v49 = *(void *)(v0 + 528);
    uint64_t v50 = *(void *)(v0 + 520);
    uint64_t v51 = *(void *)(v0 + 512);
    if (v48)
    {
      uint64_t v110 = *(void *)(v0 + 432);
      uint64_t v103 = *(char **)(v0 + 408);
      os_log_type_t v106 = v47;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v104 = (void *)swift_slowAlloc();
      v111[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136448003;
      uint64_t v53 = sub_100C27BF0();
      *(void *)(v0 + 256) = sub_1008FA0F0(v53, v54, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v49, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v52 + 12) = 2160;
      *(void *)(v0 + 264) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 272) = sub_1008FA0F0(v55, v56, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v50, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v52 + 32) = 2160;
      *(void *)(v0 + 280) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 42) = 2081;
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 288) = sub_1008FA0F0(v57, v58, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v51, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v52 + 52) = 2080;
      unint64_t v59 = sub_1012638E4(*v103);
      *(void *)(v0 + 296) = sub_1008FA0F0(v59, v60, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154((uint64_t)v103, type metadata accessor for KeyDropInterface.KeyPackage);
      *(_WORD *)(v52 + 62) = 2082;
      swift_getErrorValue();
      uint64_t v61 = Error.localizedDescription.getter();
      *(void *)(v0 + 320) = sub_1008FA0F0(v61, v62, v111);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v52 + 72) = 2112;
      swift_errorRetain();
      uint64_t v63 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 328) = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v104 = v63;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v46, v106, "Failed to save key package %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s,\npackageType: %s, error: %{public}s. %@.", (uint8_t *)v52, 0x52u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      uint64_t v64 = v110;
    }
    else
    {
      uint64_t v70 = *(void *)(v0 + 432);
      uint64_t v71 = *(void *)(v0 + 408);

      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      sub_100CBD154(v71, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD154(v51, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v50, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v49, type metadata accessor for SharingCircleKeyManager.Instruction);
      swift_errorRelease();
      uint64_t v64 = v70;
    }
    sub_100CBD154(v64, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v105 = 0;
LABEL_37:
    uint64_t v2 = *(void *)(v0 + 752) + 1;
    if (v2 == *(void *)(v0 + 736)) {
      goto LABEL_2;
    }
  }
  uint64_t v96 = v40;
  uint64_t v98 = *(unsigned __int8 **)(v0 + 424);
  uint64_t v97 = *(void *)(v0 + 432);
  uint64_t v99 = *(void *)(v0 + 392);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100CBD0EC(v97 + *(int *)(v99 + 20), (uint64_t)&v98[*(int *)(v99 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_1003DD160(v107);
  *uint64_t v98 = v22;
  *(void *)&v98[*(int *)(v99 + 24)] = v96;
  uint64_t v100 = (void *)swift_task_alloc();
  *(void *)(v0 + 760) = v100;
  void *v100 = v0;
  v100[1] = sub_100C39168;
  uint64_t v101 = *(void *)(v0 + 616);
  uint64_t v102 = *(void *)(v0 + 424);
  return sub_100C3C794(v102, v101);
}

uint64_t sub_100C3A698()
{
  uint64_t v35 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    unint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *unint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed to read circleSharedSecret %@.", (uint8_t *)v3, 0xCu);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100CBD154(*(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = *(void *)(v0 + 640) + 1;
  if (v6 == *(void *)(v0 + 624))
  {
    uint64_t v33 = *(void *)(v0 + 648);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v7(v33);
  }
  else
  {
    *(void *)(v0 + 640) = v6;
    sub_100CBD0EC(*(void *)(v0 + 376)+ ((*(unsigned __int8 *)(v0 + 776) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 776))+ *(void *)(v0 + 632) * v6, *(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 616);
    uint64_t v10 = *(void *)(v0 + 608);
    uint64_t v11 = *(void *)(v0 + 600);
    uint64_t v12 = *(void *)(v0 + 592);
    uint64_t v13 = type metadata accessor for Logger();
    *(void *)(v0 + 656) = sub_100010324(v13, (uint64_t)qword_10170EB40);
    sub_100CBD0EC(v9, v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v9, v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v9, v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 608);
    uint64_t v18 = *(void *)(v0 + 600);
    uint64_t v19 = *(void *)(v0 + 592);
    if (v16)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136447235;
      uint64_t v34 = v32;
      uint64_t v21 = sub_100C27BF0();
      *(void *)(v0 + 336) = sub_1008FA0F0(v21, v22, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v20 + 12) = 2160;
      *(void *)(v0 + 344) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 352) = sub_1008FA0F0(v23, v24, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v20 + 32) = 2160;
      *(void *)(v0 + 360) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v20 + 42) = 2081;
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 368) = sub_1008FA0F0(v25, v26, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v19, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v20, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v19, type metadata accessor for SharingCircleKeyManager.Instruction);
    }

    uint64_t v27 = *(void *)(v0 + 616);
    uint64_t v28 = *(int *)(*(void *)(v0 + 496) + 20);
    *(_DWORD *)(v0 + 780) = v28;
    uint64_t v29 = v27 + v28;
    uint64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v30;
    *uint64_t v30 = v0;
    v30[1] = sub_100C36BA0;
    uint64_t v31 = *(void *)(v0 + 384);
    v30[12] = v29;
    v30[13] = v31;
    v30[11] = v0 + 16;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
}

uint64_t sub_100C3ADFC()
{
  unint64_t v26 = v0;
  uint64_t v1 = v0[77];
  uint64_t v2 = v0[68];
  uint64_t v3 = v0[67];
  sub_100CBD0EC(v1, v0[69], type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v24 = v5;
    uint64_t v6 = v0[69];
    uint64_t v7 = v0[68];
    uint64_t v23 = v0[67];
    uint64_t v8 = swift_slowAlloc();
    v25[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136447491;
    uint64_t v9 = sub_100C27BF0();
    v0[23] = sub_1008FA0F0(v9, v10, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v8 + 12) = 2160;
    v0[24] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[25] = sub_1008FA0F0(v11, v12, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v7, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v8 + 32) = 2160;
    v0[26] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 42) = 2081;
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[27] = sub_1008FA0F0(v13, v14, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v23, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v8 + 52) = 2082;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    v0[30] = sub_1008FA0F0(v15, v16, v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v24, "Failed to process downloaded keys %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s, error: %{public}s.", (uint8_t *)v8, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v17 = v0[68];
    uint64_t v18 = v0[67];
    sub_100CBD154(v0[69], type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v19 = v0[77];
  uint64_t v20 = v0[61];
  swift_willThrow();
  sub_1003DD160((uint64_t)(v0 + 18));
  sub_100CBD154(v20, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v19, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100C3B3C0()
{
  uint64_t v108 = v0;
  uint64_t v102 = v0 + 144;
  uint64_t v104 = (uint64_t *)(v0 + 248);
  sub_100CBD154(*(void *)(v0 + 424), type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v1 = *(void *)(v0 + 616);
  uint64_t v2 = *(void *)(v0 + 520);
  uint64_t v3 = *(void *)(v0 + 512);
  uint64_t v4 = *(void *)(v0 + 432);
  uint64_t v5 = *(void *)(v0 + 408);
  sub_100CBD0EC(v1, *(void *)(v0 + 528), type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v4, v5, type metadata accessor for KeyDropInterface.KeyPackage);
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 528);
  uint64_t v10 = *(void *)(v0 + 520);
  uint64_t v11 = *(void *)(v0 + 512);
  if (v8)
  {
    uint64_t v105 = *(void *)(v0 + 432);
    uint64_t v99 = *(char **)(v0 + 408);
    uint64_t v12 = swift_slowAlloc();
    uint64_t v100 = (void *)swift_slowAlloc();
    v107[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136448003;
    os_log_type_t type = v7;
    uint64_t v13 = sub_100C27BF0();
    *(void *)(v0 + 256) = sub_1008FA0F0(v13, v14, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 12) = 2160;
    *(void *)(v0 + 264) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 272) = sub_1008FA0F0(v15, v16, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 32) = 2160;
    *(void *)(v0 + 280) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 42) = 2081;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 288) = sub_1008FA0F0(v17, v18, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 52) = 2080;
    unint64_t v19 = sub_1012638E4(*v99);
    *(void *)(v0 + 296) = sub_1008FA0F0(v19, v20, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154((uint64_t)v99, type metadata accessor for KeyDropInterface.KeyPackage);
    *(_WORD *)(v12 + 62) = 2082;
    swift_getErrorValue();
    uint64_t v21 = Error.localizedDescription.getter();
    *(void *)(v0 + 320) = sub_1008FA0F0(v21, v22, v107);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v12 + 72) = 2112;
    swift_errorRetain();
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 328) = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v100 = v23;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Failed to save key package %{public}s,\nsharing-id: %{private,mask.hash}s,\n beacon-id: %{private,mask.hash}s,\npackageType: %s, error: %{public}s. %@.", (uint8_t *)v12, 0x52u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v24 = v105;
  }
  else
  {
    uint64_t v25 = *(void *)(v0 + 432);
    uint64_t v26 = *(void *)(v0 + 408);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    sub_100CBD154(v26, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    uint64_t v24 = v25;
  }
  while (1)
  {
    sub_100CBD154(v24, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v30 = *(void *)(v0 + 752) + 1;
    if (v30 == *(void *)(v0 + 736)) {
      break;
    }
    *(void *)(v0 + 752) = v30;
    uint64_t v31 = *(int *)(v0 + 784);
    uint64_t v32 = *(void *)(v0 + 616);
    uint64_t v33 = *(unsigned __int8 **)(v0 + 432);
    sub_100CBD0EC(*(void *)(v0 + 728)+ ((*(unsigned __int8 *)(v0 + 788) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 788))+ *(void *)(v0 + 744) * v30, (uint64_t)v33, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v34 = *(void *)(v32 + v31);
    unsigned __int8 v35 = *v33;
    swift_bridgeObjectRetain();
    char v36 = sub_100DC6BD8(v35, v34);
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t v51 = *(void *)(v0 + 688);
      uint64_t v52 = *(void *)(v0 + 680);
      sub_100091B38(v102);
      swift_retain();
      uint64_t v53 = swift_bridgeObjectRetain();
      uint64_t v92 = sub_100CB98EC(v53, v51, v52);
      uint64_t v94 = *(unsigned __int8 **)(v0 + 424);
      uint64_t v93 = *(void *)(v0 + 432);
      uint64_t v95 = *(void *)(v0 + 392);
      swift_bridgeObjectRelease();
      swift_release();
      sub_100CBD0EC(v93 + *(int *)(v95 + 20), (uint64_t)&v94[*(int *)(v95 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_1003DD160(v102);
      *uint64_t v94 = v35;
      *(void *)&v94[*(int *)(v95 + 24)] = v92;
      uint64_t v96 = (void *)swift_task_alloc();
      *(void *)(v0 + 760) = v96;
      *uint64_t v96 = v0;
      v96[1] = sub_100C39168;
      uint64_t v97 = *(void *)(v0 + 616);
      uint64_t v98 = *(void *)(v0 + 424);
      return sub_100C3C794(v98, v97);
    }
    uint64_t v37 = *(void *)(v0 + 616);
    uint64_t v38 = *(void *)(v0 + 576);
    sub_100CBD0EC(*(void *)(v0 + 432), *(void *)(v0 + 416), type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v37, v38, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = *(unsigned __int8 **)(v0 + 416);
      uint64_t v42 = swift_slowAlloc();
      *(void *)(v0 + 248) = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136446723;
      uint64_t v43 = *v41;
      unint64_t v44 = 0xE700000000000000;
      uint64_t v45 = 0x7972616D697270;
      switch(v43)
      {
        case 1:
          unint64_t v44 = 0xE900000000000079;
          uint64_t v45 = 0x7261646E6F636573;
          break;
        case 2:
          uint64_t v45 = 0xD000000000000019;
          unint64_t v44 = 0x80000001013EF280;
          break;
        case 3:
          uint64_t v45 = 0xD00000000000001BLL;
          unint64_t v44 = 0x80000001013EF2A0;
          break;
        case 4:
          unint64_t v44 = 0xEA0000000000656CLL;
          uint64_t v45 = 0x646E7542646C6977;
          break;
        case 5:
          unint64_t v44 = 0xEE00737365726464;
          uint64_t v45 = 0x417972616D697270;
          break;
        case 6:
          os_log_type_t v46 = "Bundle";
          goto LABEL_22;
        case 7:
          uint64_t v45 = 0xD000000000000012;
          unint64_t v44 = 0x80000001013EE1F0;
          break;
        case 8:
          uint64_t v45 = 0xD000000000000011;
          unint64_t v44 = 0x80000001013EE210;
          break;
        case 9:
          unint64_t v44 = 0xED000079654B6E6FLL;
          uint64_t v45 = 0x697463656E6E6F63;
          break;
        case 10:
          unint64_t v44 = 0xEC00000079654B72;
          uint64_t v45 = 0x656E774F7261656ELL;
          break;
        case 11:
          uint64_t v45 = 0x656B6F546E696F6ALL;
          unint64_t v44 = 0xE90000000000006ELL;
          break;
        case 12:
          uint64_t v45 = 0xD000000000000015;
          unint64_t v44 = 0x80000001013EF310;
          break;
        case 13:
          os_log_type_t v46 = "beaconGroupAttributes";
LABEL_22:
          unint64_t v44 = (unint64_t)v46 | 0x8000000000000000;
          uint64_t v45 = 0xD000000000000010;
          break;
        case 14:
          unint64_t v44 = 0xEE0079654B6E6F69;
          uint64_t v45 = 0x7461636F4C626577;
          break;
        case 15:
          unint64_t v44 = 0xEB00000000617461;
          uint64_t v45 = 0x646174654D626577;
          break;
        case 16:
          unint64_t v44 = 0xED00007365746144;
          uint64_t v45 = 0x6D65744974736F6CLL;
          break;
        default:
          break;
      }
      uint64_t v47 = *(void *)(v0 + 576);
      uint64_t v106 = *(void *)(v0 + 432);
      uint64_t v48 = *(void *)(v0 + 416);
      *(void *)(v42 + 4) = sub_1008FA0F0(v45, v44, v104);
      swift_bridgeObjectRelease();
      sub_100CBD154(v48, type metadata accessor for KeyDropInterface.KeyPackage);
      *(_WORD *)(v42 + 12) = 2160;
      *(void *)(v42 + 14) = 1752392040;
      *(_WORD *)(v42 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v42 + 24) = sub_1008FA0F0(v49, v50, v104);
      swift_bridgeObjectRelease();
      sub_100CBD154(v47, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Received package of type %{public}s\nfor shareId: %{private,mask.hash}s - ignoring unrequested package.", (uint8_t *)v42, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v24 = v106;
    }
    else
    {
      uint64_t v27 = *(void *)(v0 + 576);
      uint64_t v28 = *(void *)(v0 + 432);
      uint64_t v29 = *(void *)(v0 + 416);

      sub_100CBD154(v27, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v29, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v24 = v28;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void *)(v0 + 688);
  unint64_t v55 = *(void *)(v0 + 680);
  uint64_t v56 = *(void *)(v0 + 616);
  uint64_t v57 = swift_bridgeObjectRetain();
  unint64_t v58 = sub_100CBB248(v57, v54, v55, v56);
  sub_1003DD160(v102);
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v60 = *(void **)(v0 + 648);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    unint64_t v60 = sub_100A6ECE8(0, v60[2] + 1, 1, *(void **)(v0 + 648));
  }
  unint64_t v62 = v60[2];
  unint64_t v61 = v60[3];
  if (v62 >= v61 >> 1) {
    unint64_t v60 = sub_100A6ECE8((void *)(v61 > 1), v62 + 1, 1, v60);
  }
  uint64_t v63 = *(void *)(v0 + 616);
  uint64_t v64 = *(void *)(v0 + 488);
  uint64_t v65 = *(void *)(v0 + 448);
  v60[2] = v62 + 1;
  v60[v62 + 4] = v58;
  sub_1003DD160(v102);
  sub_100CBD154(v65, type metadata accessor for KeyDropDownloadResponse);
  sub_100CBD154(v64, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v63, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v66 = *(void *)(v0 + 640) + 1;
  if (v66 == *(void *)(v0 + 624))
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void *))(v0 + 8);
    return v67(v60);
  }
  else
  {
    *(void *)(v0 + 648) = v60;
    *(void *)(v0 + 640) = v66;
    sub_100CBD0EC(*(void *)(v0 + 376)+ ((*(unsigned __int8 *)(v0 + 776) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 776))+ *(void *)(v0 + 632) * v66, *(void *)(v0 + 616), type metadata accessor for SharingCircleKeyManager.Instruction);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v69 = *(void *)(v0 + 616);
    uint64_t v70 = *(void *)(v0 + 608);
    uint64_t v71 = *(void *)(v0 + 600);
    uint64_t v72 = *(void *)(v0 + 592);
    uint64_t v73 = type metadata accessor for Logger();
    *(void *)(v0 + 656) = sub_100010324(v73, (uint64_t)qword_10170EB40);
    sub_100CBD0EC(v69, v70, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v69, v71, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v69, v72, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.default.getter();
    BOOL v76 = os_log_type_enabled(v74, v75);
    uint64_t v77 = *(void *)(v0 + 608);
    uint64_t v78 = *(void *)(v0 + 600);
    uint64_t v79 = *(void *)(v0 + 592);
    if (v76)
    {
      uint64_t v103 = *(void *)(v0 + 592);
      uint64_t v80 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v80 = 136447235;
      uint64_t v81 = sub_100C27BF0();
      *(void *)(v0 + 336) = sub_1008FA0F0(v81, v82, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v77, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v80 + 12) = 2160;
      *(void *)(v0 + 344) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v80 + 22) = 2081;
      type metadata accessor for UUID();
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 352) = sub_1008FA0F0(v83, v84, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v78, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v80 + 32) = 2160;
      *(void *)(v0 + 360) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v80 + 42) = 2081;
      uint64_t v85 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 368) = sub_1008FA0F0(v85, v86, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v103, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v74, v75, "Download keys: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v80, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100CBD154(*(void *)(v0 + 608), type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v78, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v79, type metadata accessor for SharingCircleKeyManager.Instruction);
    }

    uint64_t v87 = *(void *)(v0 + 616);
    uint64_t v88 = *(int *)(*(void *)(v0 + 496) + 20);
    *(_DWORD *)(v0 + 780) = v88;
    uint64_t v89 = v87 + v88;
    unint64_t v90 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v90;
    *unint64_t v90 = v0;
    v90[1] = sub_100C36BA0;
    uint64_t v91 = *(void *)(v0 + 384);
    v90[12] = v89;
    v90[13] = v91;
    v90[11] = v0 + 16;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
}

uint64_t sub_100C3C794(uint64_t a1, uint64_t a2)
{
  v3[100] = v2;
  v3[99] = a2;
  v3[98] = a1;
  v3[101] = sub_10000588C((uint64_t *)&unk_10165C700);
  v3[102] = swift_task_alloc();
  sub_10000588C(&qword_10163B8A8);
  v3[103] = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  v3[104] = swift_task_alloc();
  v3[105] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for KeyDropLostItemDates(0);
  v3[106] = v4;
  v3[107] = *(void *)(v4 - 8);
  v3[108] = swift_task_alloc();
  v3[109] = type metadata accessor for KeyDropBeaconGroupAttributes();
  v3[110] = swift_task_alloc();
  v3[111] = swift_task_alloc();
  v3[112] = swift_task_alloc();
  v3[113] = type metadata accessor for KeyDropJoinToken(0);
  v3[114] = swift_task_alloc();
  v3[115] = type metadata accessor for KeySyncMetadata();
  v3[116] = swift_task_alloc();
  v3[117] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[118] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[119] = v6;
  v3[120] = *(void *)(v6 + 64);
  v3[121] = swift_task_alloc();
  v3[122] = swift_task_alloc();
  v3[123] = swift_task_alloc();
  v3[124] = swift_task_alloc();
  v3[125] = sub_10000588C((uint64_t *)&unk_101653D50);
  v3[126] = swift_task_alloc();
  v3[127] = swift_task_alloc();
  v3[128] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SharedBeaconRecord(0);
  v3[129] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v3[130] = v8;
  v3[131] = *(void *)(v8 + 64);
  v3[132] = swift_task_alloc();
  v3[133] = swift_task_alloc();
  v3[134] = swift_task_alloc();
  v3[135] = swift_task_alloc();
  v3[136] = type metadata accessor for SharingCircleSecretValue();
  v3[137] = swift_task_alloc();
  v3[138] = swift_task_alloc();
  v3[139] = swift_task_alloc();
  v3[140] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Date();
  v3[141] = v9;
  v3[142] = *(void *)(v9 - 8);
  v3[143] = swift_task_alloc();
  v3[144] = swift_task_alloc();
  v3[145] = swift_task_alloc();
  v3[146] = type metadata accessor for KeyDropInterface.KeyPackage(0);
  v3[147] = swift_task_alloc();
  v3[148] = swift_task_alloc();
  v3[149] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v3[150] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v3[151] = v11;
  v3[152] = *(void *)(v11 + 64);
  v3[153] = swift_task_alloc();
  v3[154] = swift_task_alloc();
  v3[155] = swift_task_alloc();
  v3[156] = swift_task_alloc();
  v3[157] = swift_task_alloc();
  v3[158] = swift_task_alloc();
  v3[159] = swift_task_alloc();
  v3[160] = swift_task_alloc();
  v3[161] = swift_task_alloc();
  v3[162] = swift_task_alloc();
  v3[163] = swift_task_alloc();
  v3[164] = swift_task_alloc();
  return _swift_task_switch(sub_100C3CD2C, v2, 0);
}

uint64_t sub_100C3CD2C()
{
  uint64_t v34 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[164];
  uint64_t v2 = v0[163];
  uint64_t v3 = v0[162];
  uint64_t v4 = v0[149];
  uint64_t v5 = v0[148];
  uint64_t v6 = v0[99];
  uint64_t v7 = v0[98];
  uint64_t v8 = type metadata accessor for Logger();
  v0[165] = sub_100010324(v8, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v6, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v7, v4, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD0EC(v6, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v6, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v7, v5, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v12 = v0[164];
  uint64_t v13 = v0[163];
  uint64_t v14 = v0[162];
  if (v11)
  {
    uint64_t v15 = (char *)v0[149];
    uint64_t v30 = v0[146];
    uint64_t v31 = v0[148];
    os_log_t log = v9;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136447747;
    uint64_t v17 = sub_100C27BF0();
    os_log_type_t type = v10;
    v0[94] = sub_1008FA0F0(v17, v18, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v16 + 12) = 2080;
    unint64_t v19 = sub_1012638E4(*v15);
    v0[95] = sub_1008FA0F0(v19, v20, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154((uint64_t)v15, type metadata accessor for KeyDropInterface.KeyPackage);
    *(_WORD *)(v16 + 22) = 2160;
    v0[96] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 32) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[97] = sub_1008FA0F0(v21, v22, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v13, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v16 + 42) = 2160;
    v0[87] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 52) = 2081;
    uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[73] = sub_1008FA0F0(v23, v24, &v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v16 + 62) = 2048;
    uint64_t v25 = *(void *)(*(void *)(v31 + *(int *)(v30 + 24)) + 16);
    sub_100CBD154(v31, type metadata accessor for KeyDropInterface.KeyPackage);
    v0[79] = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Save key package: %{public}s,\ntype: %s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nkeys: %ld.", (uint8_t *)v16, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v26 = v0[149];
    sub_100CBD154(v0[148], type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v26, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v13, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
  }
  uint64_t v27 = *(void *)(v0[100] + 120);
  v0[166] = v27;
  return _swift_task_switch(sub_100C3D258, v27, 0);
}

uint64_t sub_100C3D258()
{
  *(void *)(v0 + 1336) = *(void *)(*(void *)(v0 + 1328) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C3D2CC, 0, 0);
}

uint64_t sub_100C3D2CC()
{
  uint64_t v1 = v0[167];
  uint64_t v2 = v0[166];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[168] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[169] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  v0[170] = v5;
  *uint64_t v4 = v0;
  v4[1] = sub_100C3D3E8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 68, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DD1C, v3, v5);
}

uint64_t sub_100C3D3E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 800);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 1368) = *(void *)(v1 + 544);
  return _swift_task_switch(sub_100C3D558, v2, 0);
}

uint64_t sub_100C3D558()
{
  uint64_t v140 = v0;
  uint64_t v1 = *(void *)(v0 + 1168);
  uint64_t v2 = *(unsigned char **)(v0 + 784);
  uint64_t v3 = *(void **)&v2[*(int *)(v1 + 24)];
  if (v3[2])
  {
    uint64_t v124 = (_OWORD *)(v0 + 16);
    uint64_t v4 = *(void *)(v0 + 1160);
    uint64_t v5 = *(void *)(v0 + 1136);
    uint64_t v6 = *(void *)(v0 + 1128);
    uint64_t v131 = v3[5];
    *(void *)(v0 + 1376) = v131;
    unint64_t v129 = v3[6];
    *(void *)(v0 + 1384) = v129;
    uint64_t v135 = v3[7];
    *(void *)(v0 + 1392) = v135;
    unint64_t v137 = v3[8];
    *(void *)(v0 + 1400) = v137;
    uint64_t v134 = v3[9];
    *(void *)(v0 + 1408) = v134;
    unint64_t v133 = v3[10];
    *(void *)(v0 + 1416) = v133;
    uint64_t v130 = v3[11];
    *(void *)(v0 + 1424) = v130;
    unint64_t v132 = v3[12];
    *(void *)(v0 + 1432) = v132;
    uint64_t v7 = &v2[*(int *)(v1 + 20)];
    uint64_t v8 = type metadata accessor for KeyDropInterface.KeyAlignment(0);
    *(void *)(v0 + 1440) = *(void *)&v7[*(int *)(v8 + 20)];
    uint64_t v9 = &v7[*(int *)(v8 + 24)];
    os_log_type_t v10 = *(void (**)(uint64_t, unsigned char *, uint64_t))(v5 + 16);
    *(void *)(v0 + 1448) = v10;
    *(void *)(v0 + 1456) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v4, v9, v6);
    switch(*v2)
    {
      case 1:
        uint64_t v25 = *(void *)(v0 + 784);
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        uint64_t v26 = sub_100CBAF2C(v25);
        *(void *)(v0 + 1792) = v26;
        unint64_t v50 = v26;
        uint64_t v51 = v26[2];
        *(void *)(v0 + 1800) = v51;
        if (!v51)
        {
          unint64_t v114 = *(void *)(v0 + 1432);
          uint64_t v115 = *(void *)(v0 + 1424);
          unint64_t v116 = *(void *)(v0 + 1416);
          uint64_t v117 = *(void *)(v0 + 1408);
          unint64_t v118 = *(void *)(v0 + 1400);
          uint64_t v119 = *(void *)(v0 + 1392);
          uint64_t v120 = *(void *)(v0 + 1136);
          uint64_t v136 = *(void *)(v0 + 1128);
          uint64_t v138 = *(void *)(v0 + 1160);
          sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
          sub_100037A24(v119, v118);
          sub_100037A24(v117, v116);
          sub_100037A24(v115, v114);
          swift_release();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v138, v136);
          goto LABEL_8;
        }
        *(_DWORD *)(v0 + 2028) = *(_DWORD *)(*(void *)(v0 + 1200) + 24);
        *(void *)(v0 + 1808) = 0;
        uint64_t v34 = *(void *)(v0 + 1328);
        *(void *)(v0 + 1816) = v26[4];
        uint64_t v52 = v26[5];
        *(void *)(v0 + 1824) = v52;
        unint64_t v53 = v50[6];
        *(void *)(v0 + 1832) = v53;
        sub_1000361E0(v52, v53);
        char v36 = sub_100C43D54;
LABEL_18:
        uint64_t v29 = v36;
        uint64_t v30 = v34;
LABEL_45:
        uint64_t result = _swift_task_switch(v29, v30, 0);
        break;
      case 5:
        uint64_t v27 = *(void *)(v0 + 1328);
        *(_DWORD *)(v0 + 2016) = *(_DWORD *)(*(void *)(v0 + 1200) + 24);
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        uint64_t v28 = sub_100C3F8EC;
        goto LABEL_12;
      case 6:
        uint64_t v27 = *(void *)(v0 + 1328);
        *(_DWORD *)(v0 + 2020) = *(_DWORD *)(*(void *)(v0 + 1200) + 24);
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        uint64_t v28 = sub_100C40DE0;
LABEL_12:
        uint64_t v29 = v28;
        uint64_t v30 = v27;
        goto LABEL_45;
      case 7:
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        *(void *)(v0 + 1728) = PropertyListDecoder.init()();
        sub_1002A87F4();
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v54 = *(uint64_t **)(v0 + 1104);
        uint64_t v55 = *(void *)(v0 + 528);
        *(void *)(v0 + 1736) = v55;
        unint64_t v56 = *(void *)(v0 + 536);
        *(void *)(v0 + 1744) = v56;
        uint64_t *v54 = v55;
        v54[1] = v56;
        swift_storeEnumTagMultiPayload();
        sub_1000361E0(v55, v56);
        uint64_t v57 = (void *)swift_task_alloc();
        *(void *)(v0 + 1752) = v57;
        *uint64_t v57 = v0;
        v57[1] = sub_100C433CC;
        uint64_t v58 = *(void *)(v0 + 1104);
        goto LABEL_32;
      case 8:
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        sub_1000361E0(v131, v129);
        sub_100434DF4(v131, v129, v139);
        unint64_t v59 = *(uint64_t **)(v0 + 1112);
        uint64_t v61 = v139[0];
        unint64_t v60 = v139[1];
        *(void *)(v0 + 1696) = v139[0];
        *(void *)(v0 + 1704) = v60;
        uint64_t *v59 = v61;
        v59[1] = v60;
        swift_storeEnumTagMultiPayload();
        sub_1000361E0(v61, v60);
        unint64_t v62 = (void *)swift_task_alloc();
        *(void *)(v0 + 1712) = v62;
        *unint64_t v62 = v0;
        v62[1] = sub_100C42F28;
        uint64_t v58 = *(void *)(v0 + 1112);
        goto LABEL_32;
      case 9:
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v33 = 0;
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "Processing connection keys.", v33, 2u);
          swift_slowDealloc();
        }
        uint64_t v34 = *(void *)(v0 + 1328);
        uint64_t v35 = *(void *)(v0 + 1200);

        *(_DWORD *)(v0 + 2024) = *(_DWORD *)(v35 + 24);
        char v36 = sub_100C422D4;
        goto LABEL_18;
      case 0xA:
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        *(void *)(v0 + 1464) = PropertyListDecoder.init()();
        sub_10043C110();
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v63 = *(uint64_t **)(v0 + 1120);
        uint64_t v64 = *(void *)(v0 + 512);
        *(void *)(v0 + 1472) = v64;
        unint64_t v65 = *(void *)(v0 + 520);
        *(void *)(v0 + 1480) = v65;
        *uint64_t v63 = v64;
        v63[1] = v65;
        swift_storeEnumTagMultiPayload();
        sub_1000361E0(v64, v65);
        uint64_t v66 = (void *)swift_task_alloc();
        *(void *)(v0 + 1488) = v66;
        void *v66 = v0;
        v66[1] = sub_100C3F434;
        uint64_t v58 = *(void *)(v0 + 1120);
        goto LABEL_32;
      case 0xB:
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        *(void *)(v0 + 1768) = PropertyListDecoder.init()();
        sub_100CBFAFC(&qword_10165C1D0, (void (*)(uint64_t))type metadata accessor for KeyDropJoinToken);
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v67 = *(void *)(v0 + 1096);
        uint64_t v68 = *(void *)(v0 + 912);
        uint64_t v69 = *(void *)(v0 + 904);
        (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 952) + 16))(v67, *(void *)(v0 + 792) + *(int *)(*(void *)(v0 + 1200) + 28), *(void *)(v0 + 944));
        uint64_t v70 = *(int *)(v69 + 20);
        uint64_t v71 = v68 + v70;
        uint64_t v72 = *(void *)(v68 + v70);
        unint64_t v73 = *(void *)(v71 + 8);
        uint64_t v74 = (uint64_t *)(v67 + v70);
        *uint64_t v74 = v72;
        v74[1] = v73;
        swift_storeEnumTagMultiPayload();
        sub_1000361E0(v72, v73);
        os_log_type_t v75 = (void *)swift_task_alloc();
        *(void *)(v0 + 1776) = v75;
        void *v75 = v0;
        v75[1] = sub_100C4388C;
        uint64_t v58 = *(void *)(v0 + 1096);
LABEL_32:
        uint64_t v76 = *(void *)(v0 + 792);
        return sub_100C4B8A8(v58, v76);
      case 0xC:
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        PropertyListDecoder.init()();
        sub_100CBFAFC(&qword_10165C1C0, (void (*)(uint64_t))type metadata accessor for KeyDropBeaconGroupAttributes);
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v77 = *(void *)(v0 + 896);
        uint64_t v78 = *(void *)(v0 + 888);
        uint64_t v79 = *(void *)(v0 + 880);
        swift_release();
        sub_100CBD0EC(v77, v78, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
        sub_100CBD0EC(v77, v79, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
        uint64_t v80 = Logger.logObject.getter();
        os_log_type_t v81 = static os_log_type_t.default.getter();
        BOOL v82 = os_log_type_enabled(v80, v81);
        uint64_t v83 = *(void *)(v0 + 1160);
        uint64_t v84 = *(void *)(v0 + 1136);
        uint64_t v85 = *(void *)(v0 + 1128);
        if (v82)
        {
          uint64_t v127 = *(void *)(v0 + 896);
          uint64_t v128 = *(void *)(v0 + 1128);
          uint64_t v86 = *(void *)(v0 + 888);
          uint64_t v121 = *(void *)(v0 + 872);
          uint64_t v122 = *(void *)(v0 + 880);
          uint64_t v87 = swift_slowAlloc();
          v139[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v87 = 141558531;
          *(void *)(v0 + 600) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v87 + 12) = 2081;
          sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v88 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 592) = sub_1008FA0F0(v88, v89, v139);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v86, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
          *(_WORD *)(v87 + 22) = 256;
          LOBYTE(v86) = *(unsigned char *)(v122 + *(int *)(v121 + 20));
          sub_100CBD154(v122, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
          *(unsigned char *)(v0 + 2041) = v86;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v80, v81, "Received and logging group attributes: %{private,mask.hash}s, partId: %hhu.", (uint8_t *)v87, 0x19u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_10001CFB8(v131, v129);
          sub_100037A24(v135, v137);
          sub_100037A24(v134, v133);
          sub_100037A24(v130, v132);
          swift_release();
          sub_100CBD154(v127, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v128);
        }
        else
        {
          uint64_t v111 = *(void *)(v0 + 896);
          uint64_t v112 = *(void *)(v0 + 888);
          sub_100CBD154(*(void *)(v0 + 880), (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);

          sub_10001CFB8(v131, v129);
          sub_100037A24(v135, v137);
          sub_100037A24(v134, v133);
          sub_100037A24(v130, v132);
          swift_release();
          sub_100CBD154(v112, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
          sub_100CBD154(v111, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
          (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
        }
        goto LABEL_8;
      case 0xD:
        uint64_t v37 = *(void *)(v0 + 1272);
        uint64_t v38 = *(void *)(v0 + 792);
        sub_100CBD0EC(v38, *(void *)(v0 + 1280), type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD0EC(v38, v37, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        uint64_t v39 = Logger.logObject.getter();
        os_log_type_t v40 = static os_log_type_t.default.getter();
        BOOL v41 = os_log_type_enabled(v39, v40);
        uint64_t v42 = *(void *)(v0 + 1280);
        uint64_t v43 = *(void *)(v0 + 1272);
        if (v41)
        {
          uint64_t v123 = *(void *)(v0 + 1272);
          uint64_t v44 = swift_slowAlloc();
          v139[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v44 = 141558531;
          *(void *)(v0 + 552) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v44 + 12) = 2081;
          sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 560) = sub_1008FA0F0(v45, v46, v139);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v42, type metadata accessor for SharingCircleKeyManager.Instruction);
          *(_WORD *)(v44 + 22) = 2080;
          uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 568) = sub_1008FA0F0(v47, v48, v139);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v123, type metadata accessor for SharingCircleKeyManager.Instruction);
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Updating beacon attributes for beacon: %{private,mask.hash}s, shareId: %s.", (uint8_t *)v44, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100CBD154(*(void *)(v0 + 1280), type metadata accessor for SharingCircleKeyManager.Instruction);
          sub_100CBD154(v43, type metadata accessor for SharingCircleKeyManager.Instruction);
        }

        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        PropertyListDecoder.init()();
        sub_100CBEFC4();
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v103 = *(void *)(v0 + 1200);
        uint64_t v104 = *(void *)(v0 + 792);
        swift_release();
        long long v105 = *(_OWORD *)(v0 + 136);
        *(_OWORD *)(v0 + 48) = *(_OWORD *)(v0 + 120);
        *(_OWORD *)(v0 + 64) = v105;
        *(void *)(v0 + 80) = *(void *)(v0 + 152);
        long long v106 = *(_OWORD *)(v0 + 104);
        _OWORD *v124 = *(_OWORD *)(v0 + 88);
        *(_OWORD *)(v0 + 32) = v106;
        uint64_t v107 = v104 + *(int *)(v103 + 24);
        uid_t v108 = getuid();
        sub_100DC5FC0(v108);
        uint64_t v109 = (void *)swift_task_alloc();
        *(void *)(v0 + 1888) = v109;
        void *v109 = v0;
        v109[1] = sub_100C446EC;
        uint64_t v110 = *(void *)(v0 + 976);
        return sub_1012DF504((uint64_t)v124, v107, v110);
      case 0x10:
        type metadata accessor for PropertyListDecoder();
        swift_allocObject();
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        PropertyListDecoder.init()();
        sub_100CBFAFC(&qword_10165C1B8, (void (*)(uint64_t))type metadata accessor for KeyDropLostItemDates);
        dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
        uint64_t v90 = *(void *)(v0 + 1264);
        uint64_t v91 = *(void *)(v0 + 1256);
        uint64_t v92 = *(void *)(v0 + 792);
        swift_release();
        sub_100CBD0EC(v92, v90, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_100CBD0EC(v92, v91, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v93 = Logger.logObject.getter();
        os_log_type_t v94 = static os_log_type_t.default.getter();
        BOOL v95 = os_log_type_enabled(v93, v94);
        uint64_t v96 = *(void *)(v0 + 1264);
        uint64_t v97 = *(void *)(v0 + 1256);
        if (v95)
        {
          uint64_t v98 = swift_slowAlloc();
          v139[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v98 = 141558531;
          *(void *)(v0 + 664) = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v98 + 12) = 2081;
          sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v99 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 616) = sub_1008FA0F0(v99, v100, v139);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v96, type metadata accessor for SharingCircleKeyManager.Instruction);
          *(_WORD *)(v98 + 22) = 2080;
          uint64_t v101 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v0 + 608) = sub_1008FA0F0(v101, v102, v139);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_100CBD154(v97, type metadata accessor for SharingCircleKeyManager.Instruction);
          _os_log_impl((void *)&_mh_execute_header, v93, v94, "Updating lost item dates for beacon: %{private,mask.hash}s, shareId: %s.", (uint8_t *)v98, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          sub_100CBD154(*(void *)(v0 + 1264), type metadata accessor for SharingCircleKeyManager.Instruction);
          sub_100CBD154(v97, type metadata accessor for SharingCircleKeyManager.Instruction);
        }

        *(_DWORD *)(v0 + 2032) = *(_DWORD *)(*(void *)(v0 + 1200) + 24);
        uid_t v113 = getuid();
        sub_100DC5FC0(v113);
        uint64_t v29 = sub_100C44EB8;
        uint64_t v30 = 0;
        goto LABEL_45;
      default:
        uint64_t v126 = *(void *)(v0 + 1160);
        uint64_t v11 = *(void *)(v0 + 1136);
        uint64_t v125 = *(void *)(v0 + 1128);
        sub_1000361E0(v131, v129);
        sub_100037A38(v135, v137);
        sub_100037A38(v134, v133);
        sub_100037A38(v130, v132);
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v126, v125);
        swift_release();
        sub_10001CFB8(v131, v129);
        sub_100037A24(v135, v137);
        sub_100037A24(v134, v133);
        sub_100037A24(v130, v132);
        goto LABEL_8;
    }
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 1248);
    uint64_t v13 = *(void *)(v0 + 792);
    sub_100CBD0EC(*(void *)(v0 + 784), *(void *)(v0 + 1176), type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v13, v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.error.getter();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 1248);
    uint64_t v18 = *(void *)(v0 + 1176);
    if (v16)
    {
      uint64_t v19 = swift_slowAlloc();
      v139[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v20 = sub_101264DA0();
      *(void *)(v0 + 736) = sub_1008FA0F0(v20, v21, v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v18, type metadata accessor for KeyDropInterface.KeyPackage);
      *(_WORD *)(v19 + 12) = 2080;
      uint64_t v22 = sub_100C27BF0();
      *(void *)(v0 + 744) = sub_1008FA0F0(v22, v23, v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "There are no keys to save in the package: %s, instruction: %s.", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      swift_release();
      sub_100CBD154(v18, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD154(v17, type metadata accessor for SharingCircleKeyManager.Instruction);
    }

LABEL_8:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
    return v24();
  }
  return result;
}

uint64_t sub_100C3F434()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1496) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    uint64_t v4 = sub_100C46C10;
  }
  else {
    uint64_t v4 = sub_100C3F560;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C3F560()
{
  uint64_t v13 = v0[184];
  unint64_t v14 = v0[185];
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  unint64_t v7 = v0[173];
  uint64_t v8 = v0[172];
  uint64_t v9 = v0[142];
  uint64_t v15 = v0[141];
  uint64_t v16 = v0[145];
  uint64_t v12 = v0[140];
  swift_release();
  sub_10001CFB8(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_10001CFB8(v13, v14);
  swift_release();
  sub_100CBD154(v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100C3F8EC()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 992);
  uint64_t v3 = *(void *)(v0 + 952);
  uint64_t v4 = *(void *)(v0 + 944);
  uint64_t v5 = *(void *)(v0 + 792) + *(int *)(v0 + 2016);
  *(void *)(v0 + 1504) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 1512) = v6;
  *(void *)(v0 + 1520) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1528) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_100C3FA00, 0, 0);
}

uint64_t sub_100C3FA00()
{
  uint64_t v1 = v0[191];
  uint64_t v2 = v0[188];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[192] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[193] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C3FB0C;
  uint64_t v5 = v0[128];
  uint64_t v6 = v0[125];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100091084, v3, v6);
}

uint64_t sub_100C3FB0C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 800);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C3FC5C, v1, 0);
}

uint64_t sub_100C3FC5C()
{
  uint64_t v1 = v0[128];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[130] + 48))(v1, 1, v0[129]) == 1)
  {
    unint64_t v2 = v0[177];
    uint64_t v3 = v0[176];
    unint64_t v4 = v0[175];
    uint64_t v5 = v0[174];
    unint64_t v6 = v0[173];
    uint64_t v7 = v0[172];
    uint64_t v31 = v0[178];
    unint64_t v35 = v0[179];
    uint64_t v36 = v0[145];
    uint64_t v8 = v0[142];
    uint64_t v33 = v0[141];
    sub_10001DAB4(v1, (uint64_t *)&unk_101653D50);
    sub_100130078();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    sub_10001CFB8(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v3, v2);
    sub_100037A24(v31, v35);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v36, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v10 = v0[98];
    sub_100CBD1B4(v1, v0[135], type metadata accessor for SharedBeaconRecord);
    unint64_t v13 = sub_100CB9F80(v10);
    unint64_t v15 = v14;
    unint64_t v17 = v16;
    uint64_t v37 = (long long *)(v0 + 40);
    uint64_t v18 = v0[161];
    uint64_t v32 = v18;
    uint64_t v34 = v0[171];
    uint64_t v30 = v0[151];
    uint64_t v19 = v0[135];
    uint64_t v20 = v0[134];
    uint64_t v21 = v0[131];
    uint64_t v22 = v0[130];
    uint64_t v23 = v0[99];
    type metadata accessor for Transaction();
    sub_100CBD0EC(v19, v20, type metadata accessor for SharedBeaconRecord);
    sub_100CBD0EC(v23, v18, type metadata accessor for SharingCircleKeyManager.Instruction);
    unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + v25 + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v34;
    sub_100CBD1B4(v20, v27 + v24, type metadata accessor for SharedBeaconRecord);
    uint64_t v28 = (unint64_t *)(v27 + v25);
    unint64_t *v28 = v13;
    v28[1] = v15;
    v28[2] = v17;
    sub_100CBD1B4(v32, v27 + v26, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v37, (uint64_t *)&unk_101638D30);
    if (v0[43])
    {
      sub_10001CEB0(v37, (uint64_t)(v0 + 25));
      sub_10001CD44(v0 + 25, v0[28]);
      uint64_t v38 = (uint64_t (*)(void))((char *)&dword_101639138 + dword_101639138);
      uint64_t v29 = (void *)swift_task_alloc();
      v0[194] = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_100C40378;
      return v38();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100C40378(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 800);
  *(void *)(*(void *)v1 + 1560) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C40490, v2, 0);
}

uint64_t sub_100C40490()
{
  if (v0[195])
  {
    uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[189];
    unint64_t v24 = (void (*)(uint64_t, uint64_t, uint64_t))v0[181];
    uint64_t v2 = v0[180];
    uint64_t v21 = v0[141];
    uint64_t v22 = v0[145];
    uint64_t v3 = v0[135];
    uint64_t v4 = v0[129];
    uint64_t v5 = v0[118];
    uint64_t v6 = v0[117];
    uint64_t v7 = (int *)v0[115];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 25));
    v1(v6, v3 + *(int *)(v4 + 20), v5);
    uint64_t v8 = (void *)(v6 + v7[6]);
    v8[3] = &type metadata for PrimaryIndex;
    v8[4] = sub_1001A1640();
    *uint64_t v8 = v2;
    v24(v6 + v7[7], v22, v21);
    *(unsigned char *)(v6 + v7[5]) = 7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[196] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100C4091C;
    uint64_t v10 = v0[117];
    return sub_101104A5C(v10);
  }
  else
  {
    unint64_t v12 = v0[179];
    uint64_t v13 = v0[178];
    unint64_t v14 = v0[177];
    uint64_t v15 = v0[176];
    unint64_t v16 = v0[175];
    uint64_t v17 = v0[174];
    uint64_t v18 = v0[142];
    uint64_t v23 = v0[141];
    uint64_t v25 = v0[145];
    uint64_t v19 = v0[135];
    sub_10001CFB8(v0[172], v0[173]);
    sub_100037A24(v17, v16);
    sub_100037A24(v15, v14);
    sub_100037A24(v13, v12);
    swift_release();
    sub_100CBD154(v19, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v23);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 25));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_100C4091C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1576) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    uint64_t v4 = sub_100C46FA8;
  }
  else {
    uint64_t v4 = sub_100C40A48;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C40A48()
{
  uint64_t v11 = v0[178];
  unint64_t v12 = v0[179];
  unint64_t v1 = v0[177];
  uint64_t v2 = v0[176];
  unint64_t v3 = v0[175];
  uint64_t v4 = v0[174];
  unint64_t v5 = v0[173];
  uint64_t v6 = v0[172];
  uint64_t v7 = v0[142];
  uint64_t v14 = v0[141];
  uint64_t v15 = v0[145];
  uint64_t v13 = v0[135];
  uint64_t v8 = v0[117];
  swift_release();
  sub_10001CFB8(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v11, v12);
  swift_release();
  sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
  sub_100CBD154(v13, type metadata accessor for SharedBeaconRecord);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C40DE0()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 992);
  uint64_t v3 = *(void *)(v0 + 952);
  uint64_t v4 = *(void *)(v0 + 944);
  uint64_t v5 = *(void *)(v0 + 792) + *(int *)(v0 + 2020);
  *(void *)(v0 + 1584) = *(void *)(v1 + 136);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(void *)(v0 + 1592) = v6;
  *(void *)(v0 + 1600) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v5, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v0 + 1608) = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v8 + v7, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_100C40EF4, 0, 0);
}

uint64_t sub_100C40EF4()
{
  uint64_t v1 = v0[201];
  uint64_t v2 = v0[198];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[202] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[203] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C41000;
  uint64_t v5 = v0[127];
  uint64_t v6 = v0[125];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100091084, v3, v6);
}

uint64_t sub_100C41000()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 800);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C41150, v1, 0);
}

uint64_t sub_100C41150()
{
  uint64_t v1 = v0[127];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[130] + 48))(v1, 1, v0[129]) == 1)
  {
    unint64_t v2 = v0[177];
    uint64_t v3 = v0[176];
    unint64_t v4 = v0[175];
    uint64_t v5 = v0[174];
    unint64_t v6 = v0[173];
    uint64_t v7 = v0[172];
    uint64_t v31 = v0[178];
    unint64_t v35 = v0[179];
    uint64_t v36 = v0[145];
    uint64_t v8 = v0[142];
    uint64_t v33 = v0[141];
    sub_10001DAB4(v1, (uint64_t *)&unk_101653D50);
    sub_100130078();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    sub_10001CFB8(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v3, v2);
    sub_100037A24(v31, v35);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v36, v33);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
  else
  {
    uint64_t v10 = v0[98];
    sub_100CBD1B4(v1, v0[133], type metadata accessor for SharedBeaconRecord);
    unint64_t v13 = sub_100CB9F80(v10);
    unint64_t v15 = v14;
    unint64_t v17 = v16;
    uint64_t v37 = (long long *)(v0 + 45);
    uint64_t v18 = v0[161];
    uint64_t v32 = v18;
    uint64_t v34 = v0[171];
    uint64_t v30 = v0[151];
    uint64_t v19 = v0[134];
    uint64_t v20 = v0[133];
    uint64_t v21 = v0[131];
    uint64_t v22 = v0[130];
    uint64_t v23 = v0[99];
    type metadata accessor for Transaction();
    sub_100CBD0EC(v20, v19, type metadata accessor for SharedBeaconRecord);
    sub_100CBD0EC(v23, v18, type metadata accessor for SharingCircleKeyManager.Instruction);
    unint64_t v24 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v25 = (v21 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (*(unsigned __int8 *)(v30 + 80) + v25 + 24) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v34;
    sub_100CBD1B4(v19, v27 + v24, type metadata accessor for SharedBeaconRecord);
    uint64_t v28 = (unint64_t *)(v27 + v25);
    unint64_t *v28 = v13;
    v28[1] = v15;
    v28[2] = v17;
    sub_100CBD1B4(v32, v27 + v26, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    if (qword_1016375E8 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, (uint64_t)v37, (uint64_t *)&unk_101638D30);
    if (v0[48])
    {
      sub_10001CEB0(v37, (uint64_t)(v0 + 35));
      sub_10001CD44(v0 + 35, v0[38]);
      uint64_t v38 = (uint64_t (*)(void))((char *)&dword_101639138 + dword_101639138);
      uint64_t v29 = (void *)swift_task_alloc();
      v0[204] = v29;
      *uint64_t v29 = v0;
      v29[1] = sub_100C4186C;
      return v38();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100C4186C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 800);
  *(void *)(*(void *)v1 + 1640) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C41984, v2, 0);
}

uint64_t sub_100C41984()
{
  if (v0[205])
  {
    uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[199];
    unint64_t v24 = (void (*)(uint64_t, uint64_t, uint64_t))v0[181];
    uint64_t v2 = v0[180];
    uint64_t v21 = v0[141];
    uint64_t v22 = v0[145];
    uint64_t v3 = v0[133];
    uint64_t v4 = v0[129];
    uint64_t v5 = v0[118];
    uint64_t v6 = v0[116];
    uint64_t v7 = (int *)v0[115];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 35));
    v1(v6, v3 + *(int *)(v4 + 20), v5);
    uint64_t v8 = (void *)(v6 + v7[6]);
    v8[3] = &type metadata for PrimaryIndex;
    v8[4] = sub_1001A1640();
    *uint64_t v8 = v2;
    v24(v6 + v7[7], v22, v21);
    *(unsigned char *)(v6 + v7[5]) = 7;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[206] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100C41E10;
    uint64_t v10 = v0[116];
    return sub_101104A5C(v10);
  }
  else
  {
    unint64_t v12 = v0[179];
    uint64_t v13 = v0[178];
    unint64_t v14 = v0[177];
    uint64_t v15 = v0[176];
    unint64_t v16 = v0[175];
    uint64_t v17 = v0[174];
    uint64_t v18 = v0[142];
    uint64_t v23 = v0[141];
    uint64_t v25 = v0[145];
    uint64_t v19 = v0[133];
    sub_10001CFB8(v0[172], v0[173]);
    sub_100037A24(v17, v16);
    sub_100037A24(v15, v14);
    sub_100037A24(v13, v12);
    swift_release();
    sub_100CBD154(v19, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v25, v23);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 35));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_100C41E10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1656) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    uint64_t v4 = sub_100C477CC;
  }
  else {
    uint64_t v4 = sub_100C41F3C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C41F3C()
{
  uint64_t v11 = v0[178];
  unint64_t v12 = v0[179];
  unint64_t v1 = v0[177];
  uint64_t v2 = v0[176];
  unint64_t v3 = v0[175];
  uint64_t v4 = v0[174];
  unint64_t v5 = v0[173];
  uint64_t v6 = v0[172];
  uint64_t v7 = v0[142];
  uint64_t v14 = v0[141];
  uint64_t v15 = v0[145];
  uint64_t v13 = v0[133];
  uint64_t v8 = v0[116];
  swift_release();
  sub_10001CFB8(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_100037A24(v11, v12);
  swift_release();
  sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
  sub_100CBD154(v13, type metadata accessor for SharedBeaconRecord);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C422D4()
{
  uint64_t v1 = *(void *)(v0 + 1328);
  uint64_t v2 = *(void *)(v0 + 992);
  uint64_t v3 = *(void *)(v0 + 952);
  uint64_t v4 = *(void *)(v0 + 944);
  uint64_t v5 = *(void *)(v0 + 792) + *(int *)(v0 + 2024);
  *(void *)(v0 + 1664) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1672) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_100C423D8, 0, 0);
}

uint64_t sub_100C423D8()
{
  uint64_t v1 = v0[209];
  uint64_t v2 = v0[208];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[210] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[211] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C424E4;
  uint64_t v5 = v0[126];
  uint64_t v6 = v0[125];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100091084, v3, v6);
}

uint64_t sub_100C424E4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 800);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C42634, v1, 0);
}

uint64_t sub_100C42634()
{
  uint64_t v1 = v0[126];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[130] + 48))(v1, 1, v0[129]) == 1)
  {
    unint64_t v2 = v0[177];
    uint64_t v3 = v0[176];
    unint64_t v4 = v0[175];
    uint64_t v5 = v0[174];
    unint64_t v6 = v0[173];
    uint64_t v7 = v0[172];
    uint64_t v40 = v0[178];
    unint64_t v44 = v0[179];
    uint64_t v46 = v0[145];
    uint64_t v8 = v0[142];
    uint64_t v42 = v0[141];
    sub_10001DAB4(v1, (uint64_t *)&unk_101653D50);
    sub_100130078();
    swift_allocError();
    *uint64_t v9 = 0;
    swift_willThrow();
    sub_10001CFB8(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v3, v2);
    sub_100037A24(v40, v44);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v46, v42);
  }
  else
  {
    uint64_t v10 = v0[98];
    sub_100CBD1B4(v1, v0[132], type metadata accessor for SharedBeaconRecord);
    unint64_t v11 = sub_100CBAB98(v10);
    unint64_t v12 = v0[179];
    unint64_t v45 = v0[177];
    uint64_t v47 = v0[178];
    unint64_t v41 = v0[175];
    uint64_t v43 = v0[176];
    uint64_t v13 = v0[172];
    uint64_t v14 = v0[171];
    uint64_t v16 = v0[161];
    uint64_t v35 = v0[151];
    unint64_t v34 = v0[173];
    uint64_t v48 = v0[145];
    uint64_t v38 = v0[142];
    uint64_t v39 = v0[141];
    uint64_t v17 = v0[134];
    uint64_t v37 = v0[174];
    uint64_t v18 = v0[132];
    uint64_t v19 = v0[131];
    uint64_t v20 = v0[130];
    uint64_t v21 = v0[99];
    unint64_t v31 = v22;
    unint64_t v32 = v11;
    unint64_t v33 = v23;
    type metadata accessor for Transaction();
    sub_100CBD0EC(v18, v17, type metadata accessor for SharedBeaconRecord);
    sub_100CBD0EC(v21, v16, type metadata accessor for SharingCircleKeyManager.Instruction);
    unint64_t v24 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v25 = (v19 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = *(unsigned __int8 *)(v35 + 80);
    unint64_t v36 = v12;
    uint64_t v27 = (v26 + v25 + 24) & ~v26;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v14;
    sub_100CBD1B4(v17, v28 + v24, type metadata accessor for SharedBeaconRecord);
    uint64_t v29 = (unint64_t *)(v28 + v25);
    *uint64_t v29 = v32;
    v29[1] = v31;
    void v29[2] = v33;
    sub_100CBD1B4(v16, v28 + v27, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_retain();
    static Transaction.asyncTask(name:block:)();
    swift_release();
    sub_10001CFB8(v13, v34);
    sub_100037A24(v37, v41);
    sub_100037A24(v43, v45);
    sub_100037A24(v47, v36);
    swift_release();
    sub_100CBD154(v18, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v48, v39);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_100C42F28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1720) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    unint64_t v4 = sub_100C47FF0;
  }
  else {
    unint64_t v4 = sub_100C43054;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C43054()
{
  uint64_t v11 = v0[212];
  unint64_t v12 = v0[213];
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[142];
  uint64_t v13 = v0[141];
  uint64_t v14 = v0[145];
  uint64_t v8 = v0[139];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  sub_10001CFB8(v11, v12);
  sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C433CC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1760) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    uint64_t v4 = sub_100C48374;
  }
  else {
    uint64_t v4 = sub_100C434F8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C434F8()
{
  uint64_t v1 = v0[178];
  unint64_t v2 = v0[177];
  uint64_t v3 = v0[176];
  unint64_t v4 = v0[175];
  uint64_t v5 = v0[174];
  unint64_t v6 = v0[173];
  uint64_t v7 = v0[172];
  unint64_t v15 = v0[218];
  uint64_t v16 = v0[145];
  uint64_t v8 = v0[142];
  uint64_t v13 = v0[217];
  uint64_t v14 = v0[141];
  unint64_t v11 = v0[179];
  uint64_t v12 = v0[138];
  swift_release();
  sub_10001CFB8(v7, v6);
  sub_100037A24(v5, v4);
  sub_100037A24(v3, v2);
  sub_100037A24(v1, v11);
  swift_release();
  sub_10001CFB8(v13, v15);
  sub_100CBD154(v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C4388C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1784) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    unint64_t v4 = sub_100C48714;
  }
  else {
    unint64_t v4 = sub_100C439B8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C439B8()
{
  uint64_t v1 = v0[178];
  unint64_t v2 = v0[177];
  uint64_t v3 = v0[176];
  unint64_t v4 = v0[175];
  uint64_t v5 = v0[174];
  unint64_t v6 = v0[173];
  uint64_t v7 = v0[172];
  uint64_t v8 = v0[142];
  uint64_t v14 = v0[141];
  uint64_t v15 = v0[145];
  uint64_t v11 = v0[137];
  unint64_t v12 = v0[179];
  uint64_t v13 = v0[114];
  swift_release();
  sub_10001CFB8(v7, v6);
  sub_100037A24(v5, v4);
  sub_100037A24(v3, v2);
  sub_100037A24(v1, v12);
  swift_release();
  sub_100CBD154(v11, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  sub_100CBD154(v13, type metadata accessor for KeyDropJoinToken);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C43D54()
{
  *(void *)(v0 + 1840) = *(void *)(*(void *)(v0 + 1328) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C43DC8, 0, 0);
}

uint64_t sub_100C43DC8()
{
  uint64_t v1 = v0[230];
  uint64_t v2 = v0[166];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[231] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[232] = v4;
  *unint64_t v4 = v0;
  v4[1] = sub_100C43ED8;
  uint64_t v5 = v0[170];
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 72, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DD1C, v3, v5);
}

uint64_t sub_100C43ED8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 800);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 1864) = *(void *)(v1 + 576);
  return _swift_task_switch(sub_100C44048, v2, 0);
}

uint64_t sub_100C44048()
{
  uint64_t v1 = *(void *)(v0 + 1816);
  uint64_t v2 = *(int *)(v0 + 2028);
  uint64_t v3 = *(void *)(v0 + 792);
  *(void *)(v0 + 1872) = *(void *)(*(void *)(v0 + 1864) + OBJC_IVAR____TtC12searchpartyd16BeaconKeyManager_keyStore);
  swift_retain();
  swift_release();
  *(void *)(v0 + 424) = &type metadata for SecondaryIndex;
  *(void *)(v0 + 432) = sub_1001A15EC();
  *(void *)(v0 + 400) = v1;
  uid_t v4 = getuid();
  sub_100DC5FC0(v4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 1880) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100C44168;
  uint64_t v6 = *(void *)(v0 + 1832);
  uint64_t v7 = *(void *)(v0 + 1824);
  uint64_t v8 = *(void *)(v0 + 984);
  return sub_1006442A8(v8, v3 + v2, v0 + 400, v7, v6);
}

uint64_t sub_100C44168()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[123];
    uint64_t v4 = v2[119];
    uint64_t v5 = v2[118];
    uint64_t v6 = v2[100];
    swift_release();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v7 = sub_100C48ABC;
  }
  else
  {
    uint64_t v8 = (uint64_t)(v2 + 50);
    uint64_t v9 = v2[123];
    uint64_t v10 = v2[119];
    uint64_t v11 = v2[118];
    uint64_t v6 = v2[100];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v8);
    uint64_t v7 = sub_100C442FC;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100C442FC()
{
  sub_10001CFB8(v0[228], v0[229]);
  uint64_t v1 = v0[226] + 1;
  if (v1 == v0[225])
  {
    unint64_t v2 = v0[179];
    uint64_t v3 = v0[178];
    unint64_t v4 = v0[177];
    uint64_t v5 = v0[176];
    unint64_t v6 = v0[175];
    uint64_t v7 = v0[174];
    uint64_t v16 = v0[145];
    uint64_t v8 = v0[142];
    uint64_t v9 = v0[141];
    sub_10001CFB8(v0[172], v0[173]);
    sub_100037A24(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v3, v2);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    v0[226] = v1;
    uint64_t v12 = v0[166];
    uint64_t v13 = (void *)(v0[224] + 24 * v1);
    v0[227] = v13[4];
    uint64_t v14 = v13[5];
    v0[228] = v14;
    unint64_t v15 = v13[6];
    v0[229] = v15;
    sub_1000361E0(v14, v15);
    return _swift_task_switch(sub_100C43D54, v12, 0);
  }
}

uint64_t sub_100C446EC()
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 1896) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[100];
    (*(void (**)(void, void))(v2[119] + 8))(v2[122], v2[118]);
    sub_100CBF018(v3);
    uint64_t v5 = sub_100C48EB8;
  }
  else
  {
    uint64_t v4 = v2[166];
    (*(void (**)(void, void))(v2[119] + 8))(v2[122], v2[118]);
    sub_100CBF018(v3);
    uint64_t v5 = sub_100C4485C;
  }
  return _swift_task_switch(v5, v4, 0);
}

uint64_t sub_100C4485C()
{
  uint64_t v1 = v0[166];
  v0[238] = *(void *)(v1 + 136);
  uint64_t v2 = swift_allocObject();
  v0[239] = v2;
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 15;
  swift_retain();
  return _swift_task_switch(sub_100C448F8, 0, 0);
}

uint64_t sub_100C448F8()
{
  uint64_t v1 = v0[239];
  uint64_t v2 = v0[238];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[240] = v3;
  v3[2] = v2;
  v3[3] = sub_10012E28C;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[241] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C44A04;
  return withCheckedContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D74C, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100C44A04()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1328);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C44B54, v1, 0);
}

uint64_t sub_100C44B54()
{
  return _swift_task_switch(sub_100C44B70, *(void *)(v0 + 800), 0);
}

uint64_t sub_100C44B70()
{
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v11 = v0[145];
  uint64_t v7 = v0[142];
  uint64_t v8 = v0[141];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C44EB8()
{
  uint64_t v1 = *(int *)(v0 + 2032);
  uint64_t v2 = *(void *)(v0 + 792);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 1936) = v3;
  *unint64_t v3 = v0;
  v3[1] = sub_100C44F78;
  uint64_t v4 = *(void *)(v0 + 824);
  return sub_10064DC78(v4, v2 + v1);
}

uint64_t sub_100C44F78()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1944) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v3 = sub_100C45210;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v5 = v2[100];
    (*(void (**)(void, void))(v2[119] + 8))(v2[121], v2[118]);
    unint64_t v3 = sub_100C450B4;
    uint64_t v4 = v5;
  }
  return _swift_task_switch(v3, v4, 0);
}

uint64_t sub_100C450B4()
{
  uint64_t v1 = *(void *)(v0 + 824);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 856) + 48))(v1, 1, *(void *)(v0 + 848)) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 1136);
    uint64_t v3 = *(void *)(v0 + 1128);
    uint64_t v4 = *(void *)(v0 + 840);
    sub_10001DAB4(v1, &qword_10163B8A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, 1, 1, v3);
  }
  else
  {
    sub_10001D074(v1, *(void *)(v0 + 840), (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v1, type metadata accessor for KeyDropLostItemDates);
  }
  uint64_t v5 = *(int *)(v0 + 2032);
  uint64_t v6 = *(void *)(v0 + 792);
  sub_10001D074(*(void *)(v0 + 864), *(void *)(v0 + 832), (uint64_t *)&unk_10163AC90);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 1952) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100C45600;
  uint64_t v8 = *(void *)(v0 + 864);
  return sub_1012E096C(v6 + v5, v8);
}

uint64_t sub_100C45210()
{
  uint64_t v1 = v0[100];
  (*(void (**)(void, void))(v0[119] + 8))(v0[121], v0[118]);
  return _swift_task_switch(sub_100C45290, v1, 0);
}

uint64_t sub_100C45290()
{
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[142];
  uint64_t v11 = v0[141];
  uint64_t v12 = v0[145];
  uint64_t v8 = v0[108];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  sub_100CBD154(v8, type metadata accessor for KeyDropLostItemDates);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v12, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C45600()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1960) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  if (v0) {
    uint64_t v4 = sub_100C4920C;
  }
  else {
    uint64_t v4 = sub_100C4572C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C4572C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 240, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 264))
  {
    sub_10001CEB0((long long *)(v0 + 240), v0 + 160);
    sub_10001CD44((void *)(v0 + 160), *(void *)(v0 + 184));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1016391F8 + dword_1016391F8);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 1968) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C45868;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C45868(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 800);
  *(void *)(*(void *)v1 + 1976) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C45980, v2, 0);
}

uint64_t sub_100C45980()
{
  uint64_t v1 = *(void *)(v0 + 1136);
  uint64_t v2 = *(void *)(v0 + 1128);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v4 = *(void *)(v0 + 832);
  uint64_t v5 = *(void *)(v0 + 816);
  uint64_t v6 = *(void *)(v0 + 808);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 160);
  uint64_t v7 = *(int *)(v6 + 48);
  *(_DWORD *)(v0 + 2036) = v7;
  uint64_t v8 = v5 + v7;
  sub_10001D074(v3, v5, (uint64_t *)&unk_10163AC90);
  sub_10001D074(v4, v8, (uint64_t *)&unk_10163AC90);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  LODWORD(v3) = v9(v5, 1, v2);
  int v10 = v9(v8, 1, v2);
  if (v3 != 1)
  {
    if (v10 == 1)
    {
      unint64_t v18 = *(void *)(v0 + 1432);
      uint64_t v19 = *(void *)(v0 + 1424);
      unint64_t v20 = *(void *)(v0 + 1416);
      uint64_t v21 = *(void *)(v0 + 1408);
      unint64_t v22 = *(void *)(v0 + 1400);
      uint64_t v23 = *(void *)(v0 + 1392);
      uint64_t v24 = *(void *)(v0 + 1136);
      uint64_t v25 = *(void *)(v0 + 1128);
      uint64_t v73 = *(void *)(v0 + 864);
      uint64_t v68 = *(void *)(v0 + 832);
      uint64_t v70 = *(void *)(v0 + 840);
      uint64_t v75 = *(void *)(v0 + 816);
      uint64_t v77 = *(void *)(v0 + 1160);
      sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
      sub_100037A24(v23, v22);
      sub_100037A24(v21, v20);
      sub_100037A24(v19, v18);
      swift_release();
      swift_release();
      sub_10001DAB4(v68, (uint64_t *)&unk_10163AC90);
      sub_10001DAB4(v70, (uint64_t *)&unk_10163AC90);
      sub_100CBD154(v73, type metadata accessor for KeyDropLostItemDates);
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v26(v77, v25);
      v26(v75, v25);
      goto LABEL_18;
    }
    uint64_t v30 = *(void *)(v0 + 1144);
    uint64_t v31 = *(void *)(v0 + 1128);
    unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 1136) + 32);
    v32(*(void *)(v0 + 1152), *(void *)(v0 + 816), v31);
    v32(v30, v8, v31);
    if (static Date.> infix(_:_:)())
    {
      if (*(void *)(v0 + 1976))
      {
        uint64_t v27 = *(void *)(v0 + 792) + *(int *)(*(void *)(v0 + 1200) + 20);
        swift_retain();
        uint64_t v28 = (void *)swift_task_alloc();
        *(void *)(v0 + 2000) = v28;
        void *v28 = v0;
        uint64_t v29 = sub_100C46704;
        goto LABEL_11;
      }
      unint64_t v54 = *(void *)(v0 + 1432);
      uint64_t v55 = *(void *)(v0 + 1424);
      unint64_t v56 = *(void *)(v0 + 1416);
      uint64_t v57 = *(void *)(v0 + 1408);
      unint64_t v58 = *(void *)(v0 + 1400);
      uint64_t v59 = *(void *)(v0 + 1392);
      sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
      sub_100037A24(v59, v58);
      sub_100037A24(v57, v56);
      sub_100037A24(v55, v54);
    }
    else
    {
      unint64_t v34 = *(void *)(v0 + 1432);
      uint64_t v35 = *(void *)(v0 + 1424);
      unint64_t v36 = *(void *)(v0 + 1416);
      uint64_t v37 = *(void *)(v0 + 1408);
      unint64_t v38 = *(void *)(v0 + 1400);
      uint64_t v39 = *(void *)(v0 + 1392);
      sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
      sub_100037A24(v39, v38);
      sub_100037A24(v37, v36);
      sub_100037A24(v35, v34);
      swift_release();
    }
    swift_release();
    uint64_t v60 = *(void *)(v0 + 1160);
    uint64_t v61 = *(void *)(v0 + 1152);
    uint64_t v62 = *(void *)(v0 + 1128);
    uint64_t v63 = *(void *)(v0 + 864);
    uint64_t v64 = *(void *)(v0 + 840);
    uint64_t v65 = *(void *)(v0 + 832);
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1136) + 8);
    v66(*(void *)(v0 + 1144), v62);
    v66(v61, v62);
    sub_10001DAB4(v65, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v64, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v63, type metadata accessor for KeyDropLostItemDates);
    v66(v60, v62);
    goto LABEL_18;
  }
  if (v10 == 1)
  {
    uint64_t v11 = *(void *)(v0 + 1424);
    unint64_t v12 = *(void *)(v0 + 1416);
    uint64_t v13 = *(void *)(v0 + 1408);
    unint64_t v14 = *(void *)(v0 + 1400);
    uint64_t v15 = *(void *)(v0 + 1392);
    uint64_t v16 = *(void *)(v0 + 1136);
    uint64_t v74 = *(void *)(v0 + 1128);
    uint64_t v76 = *(void *)(v0 + 1160);
    uint64_t v72 = *(void *)(v0 + 864);
    unint64_t v69 = *(void *)(v0 + 1432);
    uint64_t v71 = *(void *)(v0 + 840);
    uint64_t v17 = *(void *)(v0 + 832);
    sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
    sub_100037A24(v15, v14);
    sub_100037A24(v13, v12);
    sub_100037A24(v11, v69);
    swift_release();
    swift_release();
    sub_10001DAB4(v17, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v71, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v72, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v76, v74);
LABEL_18:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v67 = *(uint64_t (**)(void))(v0 + 8);
    return v67();
  }
  if (!*(void *)(v0 + 1976))
  {
    unint64_t v40 = *(void *)(v0 + 1432);
    uint64_t v41 = *(void *)(v0 + 1424);
    unint64_t v42 = *(void *)(v0 + 1416);
    uint64_t v43 = *(void *)(v0 + 1408);
    unint64_t v44 = *(void *)(v0 + 1400);
    uint64_t v45 = *(void *)(v0 + 1392);
    sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
    sub_100037A24(v45, v44);
    sub_100037A24(v43, v42);
    sub_100037A24(v41, v40);
    uint64_t v46 = *(int *)(v0 + 2036);
    uint64_t v47 = *(void *)(v0 + 1160);
    uint64_t v48 = *(void *)(v0 + 1136);
    uint64_t v49 = *(void *)(v0 + 1128);
    uint64_t v50 = *(void *)(v0 + 864);
    uint64_t v51 = *(void *)(v0 + 840);
    uint64_t v52 = *(void *)(v0 + 832);
    uint64_t v53 = *(void *)(v0 + 816);
    swift_release();
    sub_10001DAB4(v52, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v51, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v50, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
    sub_10001DAB4(v53 + v46, (uint64_t *)&unk_10163AC90);
    goto LABEL_18;
  }
  uint64_t v27 = *(void *)(v0 + 792) + *(int *)(*(void *)(v0 + 1200) + 20);
  swift_retain();
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 1984) = v28;
  void *v28 = v0;
  uint64_t v29 = sub_100C46230;
LABEL_11:
  v28[1] = v29;
  return sub_100B8FD24(v27);
}

uint64_t sub_100C46230()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1992) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 800);
    uint64_t v4 = sub_100C495A8;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 800);
    swift_release();
    uint64_t v4 = sub_100C46358;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C46358()
{
  unint64_t v1 = *(void *)(v0 + 1432);
  uint64_t v2 = *(void *)(v0 + 1424);
  unint64_t v3 = *(void *)(v0 + 1416);
  uint64_t v4 = *(void *)(v0 + 1408);
  unint64_t v5 = *(void *)(v0 + 1400);
  uint64_t v6 = *(void *)(v0 + 1392);
  sub_10001CFB8(*(void *)(v0 + 1376), *(void *)(v0 + 1384));
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  uint64_t v7 = *(int *)(v0 + 2036);
  uint64_t v8 = *(void *)(v0 + 1160);
  uint64_t v9 = *(void *)(v0 + 1136);
  uint64_t v10 = *(void *)(v0 + 1128);
  uint64_t v11 = *(void *)(v0 + 864);
  uint64_t v12 = *(void *)(v0 + 840);
  uint64_t v13 = *(void *)(v0 + 832);
  uint64_t v14 = *(void *)(v0 + 816);
  swift_release();
  sub_10001DAB4(v13, (uint64_t *)&unk_10163AC90);
  sub_10001DAB4(v12, (uint64_t *)&unk_10163AC90);
  sub_100CBD154(v11, type metadata accessor for KeyDropLostItemDates);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  sub_10001DAB4(v14 + v7, (uint64_t *)&unk_10163AC90);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100C46704()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2008) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 800);
  swift_release();
  if (v0) {
    uint64_t v4 = sub_100C49D14;
  }
  else {
    uint64_t v4 = sub_100C4684C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C4684C()
{
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  swift_release();
  uint64_t v7 = v0[145];
  uint64_t v8 = v0[144];
  uint64_t v9 = v0[141];
  uint64_t v10 = v0[108];
  uint64_t v11 = v0[105];
  uint64_t v12 = v0[104];
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0[142] + 8);
  v13(v0[143], v9);
  v13(v8, v9);
  sub_10001DAB4(v12, (uint64_t *)&unk_10163AC90);
  sub_10001DAB4(v11, (uint64_t *)&unk_10163AC90);
  sub_100CBD154(v10, type metadata accessor for KeyDropLostItemDates);
  v13(v7, v9);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_100C46C10()
{
  uint64_t v13 = v0[184];
  unint64_t v14 = v0[185];
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  unint64_t v7 = v0[173];
  uint64_t v8 = v0[172];
  uint64_t v9 = v0[142];
  uint64_t v15 = v0[141];
  uint64_t v16 = v0[145];
  uint64_t v12 = v0[140];
  swift_release();
  sub_10001CFB8(v8, v7);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  sub_10001CFB8(v13, v14);
  swift_release();
  sub_100CBD154(v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100C46FA8()
{
  uint64_t v49 = v0;
  *(void *)(v0 + 688) = *(void *)(v0 + 1576);
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 2040) == 1)
  {
    unint64_t v1 = *(void *)(v0 + 1432);
    uint64_t v2 = *(void *)(v0 + 1424);
    unint64_t v3 = *(void *)(v0 + 1416);
    uint64_t v4 = *(void *)(v0 + 1408);
    unint64_t v5 = *(void *)(v0 + 1400);
    uint64_t v6 = *(void *)(v0 + 1392);
    unint64_t v7 = *(void *)(v0 + 1384);
    uint64_t v8 = *(void *)(v0 + 1376);
    uint64_t v9 = *(void *)(v0 + 1136);
    uint64_t v45 = *(void *)(v0 + 1128);
    uint64_t v47 = *(void *)(v0 + 1160);
    uint64_t v43 = *(void *)(v0 + 1080);
    uint64_t v40 = *(void *)(v0 + 936);
    swift_release();
    sub_10001CFB8(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v3);
    sub_100037A24(v2, v1);
    swift_errorRelease();
    swift_release();
    sub_100CBD154(v40, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
    sub_100CBD154(v43, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v47, v45);
    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 1240);
    uint64_t v11 = *(void *)(v0 + 792);
    swift_errorRelease();
    sub_100CBD0EC(v11, v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 1424);
    unint64_t v16 = *(void *)(v0 + 1400);
    uint64_t v17 = *(void *)(v0 + 1392);
    unint64_t v46 = *(void *)(v0 + 1432);
    if (v14)
    {
      uint64_t v18 = *(void *)(v0 + 1240);
      uint64_t v41 = *(void *)(v0 + 1136);
      uint64_t v42 = *(void *)(v0 + 1128);
      uint64_t v44 = *(void *)(v0 + 1160);
      uint64_t v39 = *(void *)(v0 + 1080);
      uint64_t v38 = *(void *)(v0 + 936);
      unint64_t v36 = *(void *)(v0 + 1416);
      unint64_t v34 = *(void *)(v0 + 1400);
      unint64_t v32 = *(void *)(v0 + 1384);
      uint64_t v35 = *(void *)(v0 + 1408);
      uint64_t v33 = *(void *)(v0 + 1392);
      uint64_t v31 = *(void *)(v0 + 1376);
      uint64_t v19 = swift_slowAlloc();
      unint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 141558531;
      *(void *)(v0 + 704) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2081;
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 712) = sub_1008FA0F0(v21, v22, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v19 + 22) = 2114;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 720) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v20 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to update key sync beacon %{private,mask.hash}s %{public}@.", (uint8_t *)v19, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      sub_10001CFB8(v31, v32);
      sub_100037A24(v33, v34);
      sub_100037A24(v35, v36);
      sub_100037A24(v15, v46);
    }
    else
    {
      uint64_t v41 = *(void *)(v0 + 1136);
      uint64_t v42 = *(void *)(v0 + 1128);
      uint64_t v44 = *(void *)(v0 + 1160);
      uint64_t v38 = *(void *)(v0 + 936);
      uint64_t v39 = *(void *)(v0 + 1080);
      uint64_t v37 = *(void *)(v0 + 1240);
      uint64_t v24 = v12;
      unint64_t v25 = *(void *)(v0 + 1416);
      uint64_t v26 = *(void *)(v0 + 1408);
      unint64_t v27 = *(void *)(v0 + 1384);
      uint64_t v28 = *(void *)(v0 + 1376);

      swift_release();
      sub_10001CFB8(v28, v27);
      sub_100037A24(v17, v16);
      sub_100037A24(v26, v25);
      sub_100037A24(v15, v46);
      swift_errorRelease();
      swift_errorRelease();
      sub_100CBD154(v37, type metadata accessor for SharingCircleKeyManager.Instruction);
    }
    swift_errorRelease();
    swift_release();
    sub_100CBD154(v38, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
    sub_100CBD154(v39, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v42);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100C477CC()
{
  uint64_t v49 = v0;
  *(void *)(v0 + 624) = *(void *)(v0 + 1656);
  swift_errorRetain();
  sub_10000588C(&qword_101638D40);
  if ((swift_dynamicCast() & 1) != 0 && *(unsigned char *)(v0 + 2042) == 1)
  {
    unint64_t v1 = *(void *)(v0 + 1432);
    uint64_t v2 = *(void *)(v0 + 1424);
    unint64_t v3 = *(void *)(v0 + 1416);
    uint64_t v4 = *(void *)(v0 + 1408);
    unint64_t v5 = *(void *)(v0 + 1400);
    uint64_t v6 = *(void *)(v0 + 1392);
    unint64_t v7 = *(void *)(v0 + 1384);
    uint64_t v8 = *(void *)(v0 + 1376);
    uint64_t v9 = *(void *)(v0 + 1136);
    uint64_t v45 = *(void *)(v0 + 1128);
    uint64_t v47 = *(void *)(v0 + 1160);
    uint64_t v43 = *(void *)(v0 + 1064);
    uint64_t v40 = *(void *)(v0 + 928);
    swift_release();
    sub_10001CFB8(v8, v7);
    sub_100037A24(v6, v5);
    sub_100037A24(v4, v3);
    sub_100037A24(v2, v1);
    swift_errorRelease();
    swift_release();
    sub_100CBD154(v40, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
    sub_100CBD154(v43, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v47, v45);
    swift_errorRelease();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 1232);
    uint64_t v11 = *(void *)(v0 + 792);
    swift_errorRelease();
    sub_100CBD0EC(v11, v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    BOOL v14 = os_log_type_enabled(v12, v13);
    uint64_t v15 = *(void *)(v0 + 1424);
    unint64_t v16 = *(void *)(v0 + 1400);
    uint64_t v17 = *(void *)(v0 + 1392);
    unint64_t v46 = *(void *)(v0 + 1432);
    if (v14)
    {
      uint64_t v18 = *(void *)(v0 + 1232);
      uint64_t v41 = *(void *)(v0 + 1136);
      uint64_t v42 = *(void *)(v0 + 1128);
      uint64_t v44 = *(void *)(v0 + 1160);
      uint64_t v39 = *(void *)(v0 + 1064);
      uint64_t v38 = *(void *)(v0 + 928);
      unint64_t v36 = *(void *)(v0 + 1416);
      unint64_t v34 = *(void *)(v0 + 1400);
      unint64_t v32 = *(void *)(v0 + 1384);
      uint64_t v35 = *(void *)(v0 + 1408);
      uint64_t v33 = *(void *)(v0 + 1392);
      uint64_t v31 = *(void *)(v0 + 1376);
      uint64_t v19 = swift_slowAlloc();
      unint64_t v20 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 141558531;
      *(void *)(v0 + 640) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v19 + 12) = 2081;
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 648) = sub_1008FA0F0(v21, v22, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v19 + 22) = 2114;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v0 + 656) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v20 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to update key sync beacon %{private,mask.hash}s %{public}@.", (uint8_t *)v19, 0x20u);
      sub_10000588C((uint64_t *)&unk_101638EA0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_release();
      sub_10001CFB8(v31, v32);
      sub_100037A24(v33, v34);
      sub_100037A24(v35, v36);
      sub_100037A24(v15, v46);
    }
    else
    {
      uint64_t v41 = *(void *)(v0 + 1136);
      uint64_t v42 = *(void *)(v0 + 1128);
      uint64_t v44 = *(void *)(v0 + 1160);
      uint64_t v38 = *(void *)(v0 + 928);
      uint64_t v39 = *(void *)(v0 + 1064);
      uint64_t v37 = *(void *)(v0 + 1232);
      uint64_t v24 = v12;
      unint64_t v25 = *(void *)(v0 + 1416);
      uint64_t v26 = *(void *)(v0 + 1408);
      unint64_t v27 = *(void *)(v0 + 1384);
      uint64_t v28 = *(void *)(v0 + 1376);

      swift_release();
      sub_10001CFB8(v28, v27);
      sub_100037A24(v17, v16);
      sub_100037A24(v26, v25);
      sub_100037A24(v15, v46);
      swift_errorRelease();
      swift_errorRelease();
      sub_100CBD154(v37, type metadata accessor for SharingCircleKeyManager.Instruction);
    }
    swift_errorRelease();
    swift_release();
    sub_100CBD154(v38, (uint64_t (*)(void))type metadata accessor for KeySyncMetadata);
    sub_100CBD154(v39, type metadata accessor for SharedBeaconRecord);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v44, v42);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
  return v29();
}

uint64_t sub_100C47FF0()
{
  uint64_t v11 = v0[212];
  unint64_t v12 = v0[213];
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[142];
  uint64_t v13 = v0[141];
  uint64_t v14 = v0[145];
  uint64_t v8 = v0[139];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  sub_10001CFB8(v11, v12);
  sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C48374()
{
  uint64_t v1 = v0[178];
  unint64_t v2 = v0[177];
  uint64_t v3 = v0[176];
  unint64_t v4 = v0[175];
  uint64_t v5 = v0[174];
  unint64_t v6 = v0[173];
  uint64_t v7 = v0[172];
  unint64_t v15 = v0[218];
  uint64_t v16 = v0[145];
  uint64_t v8 = v0[142];
  uint64_t v13 = v0[217];
  uint64_t v14 = v0[141];
  unint64_t v11 = v0[179];
  uint64_t v12 = v0[138];
  swift_release();
  sub_10001CFB8(v7, v6);
  sub_100037A24(v5, v4);
  sub_100037A24(v3, v2);
  sub_100037A24(v1, v11);
  swift_release();
  sub_10001CFB8(v13, v15);
  sub_100CBD154(v12, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C48714()
{
  uint64_t v1 = v0[178];
  unint64_t v2 = v0[177];
  uint64_t v3 = v0[176];
  unint64_t v4 = v0[175];
  uint64_t v5 = v0[174];
  unint64_t v6 = v0[173];
  uint64_t v7 = v0[172];
  uint64_t v8 = v0[142];
  uint64_t v14 = v0[141];
  uint64_t v15 = v0[145];
  uint64_t v11 = v0[137];
  unint64_t v12 = v0[179];
  uint64_t v13 = v0[114];
  swift_release();
  sub_10001CFB8(v7, v6);
  sub_100037A24(v5, v4);
  sub_100037A24(v3, v2);
  sub_100037A24(v1, v12);
  swift_release();
  sub_100CBD154(v11, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  sub_100CBD154(v13, type metadata accessor for KeyDropJoinToken);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C48ABC()
{
  sub_10001CFB8(v0[228], v0[229]);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0((uint64_t)(v0 + 50));
  uint64_t v1 = v0[226] + 1;
  if (v1 == v0[225])
  {
    unint64_t v2 = v0[179];
    uint64_t v3 = v0[178];
    unint64_t v4 = v0[177];
    uint64_t v5 = v0[176];
    unint64_t v6 = v0[175];
    uint64_t v7 = v0[174];
    uint64_t v16 = v0[145];
    uint64_t v8 = v0[142];
    uint64_t v9 = v0[141];
    sub_10001CFB8(v0[172], v0[173]);
    sub_100037A24(v7, v6);
    sub_100037A24(v5, v4);
    sub_100037A24(v3, v2);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v16, v9);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    v0[226] = v1;
    uint64_t v12 = v0[166];
    uint64_t v13 = (void *)(v0[224] + 24 * v1);
    v0[227] = v13[4];
    uint64_t v14 = v13[5];
    v0[228] = v14;
    unint64_t v15 = v13[6];
    v0[229] = v15;
    sub_1000361E0(v14, v15);
    return _swift_task_switch(sub_100C43D54, v12, 0);
  }
}

uint64_t sub_100C48EB8()
{
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v11 = v0[145];
  uint64_t v7 = v0[142];
  uint64_t v8 = v0[141];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C4920C()
{
  unint64_t v1 = v0[179];
  uint64_t v2 = v0[178];
  unint64_t v3 = v0[177];
  uint64_t v4 = v0[176];
  unint64_t v5 = v0[175];
  uint64_t v6 = v0[174];
  uint64_t v7 = v0[142];
  uint64_t v13 = v0[141];
  uint64_t v14 = v0[145];
  uint64_t v11 = v0[105];
  uint64_t v12 = v0[108];
  uint64_t v8 = v0[104];
  sub_10001CFB8(v0[172], v0[173]);
  sub_100037A24(v6, v5);
  sub_100037A24(v4, v3);
  sub_100037A24(v2, v1);
  swift_release();
  sub_10001DAB4(v8, (uint64_t *)&unk_10163AC90);
  sub_10001DAB4(v11, (uint64_t *)&unk_10163AC90);
  sub_100CBD154(v12, type metadata accessor for KeyDropLostItemDates);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v14, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100C495A8()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(int *)(v0 + 2036);
  uint64_t v2 = *(void *)(v0 + 816);
  swift_release();
  sub_10001DAB4(v2 + v1, (uint64_t *)&unk_10163AC90);
  sub_100CBD0EC(*(void *)(v0 + 792), *(void *)(v0 + 1224), type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  uint64_t v42 = v3;
  if (os_log_type_enabled(v3, v4))
  {
    unint64_t v30 = *(void *)(v0 + 1432);
    uint64_t v26 = *(void *)(v0 + 1424);
    uint64_t v24 = *(void *)(v0 + 1408);
    unint64_t v25 = *(void *)(v0 + 1416);
    uint64_t v22 = *(void *)(v0 + 1392);
    unint64_t v23 = *(void *)(v0 + 1400);
    uint64_t v20 = *(void *)(v0 + 1376);
    unint64_t v21 = *(void *)(v0 + 1384);
    uint64_t v5 = *(void *)(v0 + 1224);
    uint64_t v36 = *(void *)(v0 + 1136);
    uint64_t v38 = *(void *)(v0 + 1128);
    uint64_t v40 = *(void *)(v0 + 1160);
    uint64_t v35 = *(void *)(v0 + 864);
    uint64_t v32 = *(void *)(v0 + 840);
    uint64_t v28 = *(void *)(v0 + 832);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 141558531;
    *(void *)(v0 + 728) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v6 + 12) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 680) = sub_1008FA0F0(v8, v9, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v5, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v6 + 22) = 2114;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 672) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v7 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to post notification for circle %{private,mask.hash}s, %{public}@.", (uint8_t *)v6, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001CFB8(v20, v21);
    sub_100037A24(v22, v23);
    sub_100037A24(v24, v25);
    sub_100037A24(v26, v30);
    swift_release();
    swift_errorRelease();
    swift_release();
    sub_10001DAB4(v28, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v32, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v35, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v40, v38);
  }
  else
  {
    uint64_t v27 = *(void *)(v0 + 1424);
    unint64_t v29 = *(void *)(v0 + 1432);
    unint64_t v11 = *(void *)(v0 + 1416);
    uint64_t v12 = *(void *)(v0 + 1408);
    unint64_t v13 = *(void *)(v0 + 1400);
    uint64_t v14 = *(void *)(v0 + 1392);
    unint64_t v15 = *(void *)(v0 + 1384);
    uint64_t v16 = *(void *)(v0 + 1376);
    uint64_t v17 = *(void *)(v0 + 1136);
    uint64_t v39 = *(void *)(v0 + 1128);
    uint64_t v41 = *(void *)(v0 + 1160);
    uint64_t v37 = *(void *)(v0 + 864);
    uint64_t v34 = *(void *)(v0 + 840);
    uint64_t v31 = *(void *)(v0 + 1224);
    uint64_t v33 = *(void *)(v0 + 832);

    sub_10001CFB8(v16, v15);
    sub_100037A24(v14, v13);
    sub_100037A24(v12, v11);
    sub_100037A24(v27, v29);
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    sub_100CBD154(v31, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_release();
    sub_10001DAB4(v33, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v34, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v37, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v41, v39);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_100C49D14()
{
  uint64_t v45 = v0;
  uint64_t v1 = v0[144];
  uint64_t v2 = v0[141];
  unint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0[142] + 8);
  v3(v0[143], v2);
  v3(v1, v2);
  sub_100CBD0EC(v0[99], v0[153], type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  uint64_t v43 = v4;
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v31 = v0[179];
    uint64_t v27 = v0[178];
    uint64_t v25 = v0[176];
    unint64_t v26 = v0[177];
    uint64_t v23 = v0[174];
    unint64_t v24 = v0[175];
    uint64_t v21 = v0[172];
    unint64_t v22 = v0[173];
    uint64_t v6 = v0[153];
    uint64_t v37 = v0[142];
    uint64_t v39 = v0[141];
    uint64_t v41 = v0[145];
    uint64_t v36 = v0[108];
    uint64_t v33 = v0[105];
    uint64_t v29 = v0[104];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558531;
    v0[91] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[85] = sub_1008FA0F0(v9, v10, &v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v7 + 22) = 2114;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[84] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to post notification for circle %{private,mask.hash}s, %{public}@.", (uint8_t *)v7, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001CFB8(v21, v22);
    sub_100037A24(v23, v24);
    sub_100037A24(v25, v26);
    sub_100037A24(v27, v31);
    swift_release();
    swift_errorRelease();
    swift_release();
    sub_10001DAB4(v29, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v33, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v36, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v41, v39);
  }
  else
  {
    uint64_t v28 = v0[178];
    unint64_t v30 = v0[179];
    unint64_t v12 = v0[177];
    uint64_t v13 = v0[176];
    unint64_t v14 = v0[175];
    uint64_t v15 = v0[174];
    unint64_t v16 = v0[173];
    uint64_t v17 = v0[172];
    uint64_t v18 = v0[142];
    uint64_t v40 = v0[141];
    uint64_t v42 = v0[145];
    uint64_t v38 = v0[108];
    uint64_t v35 = v0[105];
    uint64_t v32 = v0[153];
    uint64_t v34 = v0[104];

    sub_10001CFB8(v17, v16);
    sub_100037A24(v15, v14);
    sub_100037A24(v13, v12);
    sub_100037A24(v28, v30);
    swift_release();
    swift_errorRelease();
    swift_errorRelease();
    sub_100CBD154(v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_release();
    sub_10001DAB4(v34, (uint64_t *)&unk_10163AC90);
    sub_10001DAB4(v35, (uint64_t *)&unk_10163AC90);
    sub_100CBD154(v38, type metadata accessor for KeyDropLostItemDates);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v42, v40);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100C4A498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a6;
  v6[11] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v6[14] = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_100C4A5AC;
  return sub_1012DDE28(a2, a3, a4, a5, 0, 0, 0);
}

uint64_t sub_100C4A5AC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100C4A6F0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100C4A6F0()
{
  uint64_t v20 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = type metadata accessor for Logger();
  sub_100010324(v4, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446979;
    uint64_t v11 = sub_100C27BF0();
    v0[5] = sub_1008FA0F0(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v8, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 12) = 2160;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 32) = 2082;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    v0[9] = sub_1008FA0F0(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to save primaryAddress keys %{public}s,\nbeacon-id: %{private,mask.hash}s, error: %{public}s.", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_100CBD154(v8, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100C4AADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a6;
  v6[11] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v6[12] = swift_task_alloc();
  v6[13] = swift_task_alloc();
  uint64_t v11 = (void *)swift_task_alloc();
  v6[14] = v11;
  *uint64_t v11 = v6;
  v11[1] = sub_100C4ABF0;
  return sub_1012DDE28(a2, 0, 0, 0, a3, a4, a5);
}

uint64_t sub_100C4ABF0()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100C4AD34, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100C4AD34()
{
  uint64_t v20 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = type metadata accessor for Logger();
  sub_100010324(v4, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v1, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v9 = v0[12];
  uint64_t v8 = v0[13];
  if (v7)
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446979;
    uint64_t v11 = sub_100C27BF0();
    v0[5] = sub_1008FA0F0(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v8, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 12) = 2160;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v10 + 22) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 32) = 2082;
    swift_getErrorValue();
    uint64_t v15 = Error.localizedDescription.getter();
    v0[9] = sub_1008FA0F0(v15, v16, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to save secondaryAddress keys %{public}s,\n                                         beacon-id: %{private,mask.hash}s,\n                                         error: %{public}s.", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    sub_100CBD154(v8, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100C4B120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a3;
  v6[13] = a4;
  v6[10] = a1;
  v6[11] = a2;
  v6[16] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v6[17] = swift_task_alloc();
  v6[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v6[19] = v7;
  v6[20] = *(void *)(v7 - 8);
  v6[21] = swift_task_alloc();
  return _swift_task_switch(sub_100C4B228, 0, 0);
}

uint64_t sub_100C4B228()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for SharedBeaconRecord(0) + 20);
  uid_t v3 = getuid();
  sub_100DC5FC0(v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C4B304;
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[13];
  uint64_t v7 = v0[14];
  uint64_t v8 = v0[12];
  return sub_100644A80(v5, v2, v8, v6, v7);
}

uint64_t sub_100C4B304()
{
  uint64_t v2 = *(void *)(*v1 + 168);
  uint64_t v3 = *(void *)(*v1 + 160);
  uint64_t v4 = *(void *)(*v1 + 152);
  uint64_t v5 = *v1;
  *(void *)(v5 + 184) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  if (v0)
  {
    return _swift_task_switch(sub_100C4B4C0, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
}

uint64_t sub_100C4B4C0()
{
  uint64_t v21 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[17];
  uint64_t v1 = v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = type metadata accessor for Logger();
  sub_100010324(v4, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v3, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v3, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[18];
    uint64_t v19 = v0[17];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446979;
    uint64_t v9 = sub_100C27BF0();
    v0[5] = sub_1008FA0F0(v9, v10, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v7, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v8 + 12) = 2160;
    v0[6] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 22) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v11, v12, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v19, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v8 + 32) = 2082;
    swift_getErrorValue();
    uint64_t v13 = Error.localizedDescription.getter();
    v0[9] = sub_1008FA0F0(v13, v14, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to save connectionKeys %{public}s,\nbeacon-id: %{private,mask.hash}s, error: %{public}s.", (uint8_t *)v8, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    uint64_t v16 = v0[17];
    uint64_t v15 = v0[18];
    swift_errorRelease();
    sub_100CBD154(v15, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v16, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100C4B8A8(uint64_t a1, uint64_t a2)
{
  v3[32] = a2;
  v3[33] = v2;
  v3[31] = a1;
  sub_10000588C(&qword_101639E88);
  v3[34] = swift_task_alloc();
  sub_10000588C(&qword_101639EF8);
  v3[35] = swift_task_alloc();
  v3[36] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  v3[39] = swift_task_alloc();
  v3[40] = swift_task_alloc();
  v3[41] = swift_task_alloc();
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  v3[45] = swift_task_alloc();
  v3[46] = swift_task_alloc();
  v3[47] = swift_task_alloc();
  v3[48] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for SharingCircleSecret();
  v3[49] = v4;
  v3[50] = *(void *)(v4 - 8);
  v3[51] = swift_task_alloc();
  v3[52] = swift_task_alloc();
  v3[53] = swift_task_alloc();
  v3[54] = swift_task_alloc();
  v3[55] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SharingCircleSecretValue();
  v3[56] = v5;
  v3[57] = *(void *)(v5 - 8);
  v3[58] = swift_task_alloc();
  v3[59] = swift_task_alloc();
  v3[60] = swift_task_alloc();
  v3[61] = swift_task_alloc();
  v3[62] = swift_task_alloc();
  v3[63] = swift_task_alloc();
  v3[64] = swift_task_alloc();
  v3[65] = swift_task_alloc();
  sub_10000588C(&qword_1016593B8);
  v3[66] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v3[67] = v6;
  v3[68] = *(void *)(v6 - 8);
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  return _swift_task_switch(sub_100C4BC20, v2, 0);
}

uint64_t sub_100C4BC20()
{
  unint64_t v58 = v0;
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[71];
  uint64_t v3 = v0[68];
  uint64_t v4 = v0[67];
  uint64_t v49 = v3;
  uint64_t v50 = v0[66];
  uint64_t v48 = (_OWORD *)v0[55];
  uint64_t v52 = v0[50];
  uint64_t v46 = v0[65];
  uint64_t v47 = (int *)v0[49];
  uint64_t v5 = v0[36];
  uint64_t v53 = v0[32];
  *(void *)os_log_type_t type = v0[70];
  uint64_t v45 = v0[31];
  uint64_t v6 = sub_10131C9DC();
  unint64_t v8 = v7;
  v0[2] = v6;
  v0[3] = v7;
  sub_1000362FC();
  DataProtocol.stableUUID.getter();
  sub_10001CFB8(v6, v8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[73] = v9;
  v0[74] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v2, v1, v4);
  uint64_t v54 = v53 + *(int *)(v5 + 20);
  ((void (*)(void))v9)(*(void *)type);
  sub_100CBD0EC(v45, v46, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  *uint64_t v48 = xmmword_101348180;
  v9((uint64_t)v48 + v47[5], v2, v4);
  v9((uint64_t)v48 + v47[6], *(void *)type, v4);
  uint64_t v10 = sub_10131C9DC();
  uint64_t v11 = (uint64_t *)((char *)v48 + v47[8]);
  *uint64_t v11 = v10;
  v11[1] = v12;
  unint64_t v13 = sub_10131C800();
  unint64_t v15 = v14;
  sub_100CBD154(v46, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
  v0[75] = v16;
  v0[76] = (v49 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(*(void *)type, v4);
  v16(v2, v4);
  uint64_t v17 = (unint64_t *)((char *)v48 + v47[7]);
  *uint64_t v17 = v13;
  v17[1] = v15;
  sub_100CBD1B4((uint64_t)v48, v50, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
  uint64_t v18 = *(void (**)(uint64_t, void, uint64_t, int *))(v52 + 56);
  v0[77] = v18;
  v0[78] = (v52 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v18(v50, 0, 1, v47);
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[64];
  uint64_t v21 = v0[47];
  uint64_t v20 = v0[48];
  uint64_t v22 = v0[46];
  uint64_t v24 = v0[31];
  uint64_t v23 = v0[32];
  uint64_t v25 = type metadata accessor for Logger();
  v0[79] = sub_100010324(v25, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v23, v20, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v24, v19, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  sub_100CBD0EC(v23, v21, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v23, v22, type metadata accessor for SharingCircleKeyManager.Instruction);
  unint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = v0[64];
    os_log_type_t typea = v27;
    uint64_t v29 = v0[48];
    uint64_t v44 = v0[47];
    uint64_t v51 = v0[46];
    uint64_t v30 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136447491;
    uint64_t v31 = sub_100C27BF0();
    v0[25] = sub_1008FA0F0(v31, v32, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v30 + 12) = 2080;
    unint64_t v33 = sub_10131C800();
    v0[26] = sub_1008FA0F0(v33, v34, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v28, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
    *(_WORD *)(v30 + 22) = 2160;
    v0[27] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 32) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[28] = sub_1008FA0F0(v35, v36, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v44, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v30 + 42) = 2160;
    v0[29] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 52) = 2081;
    uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[30] = sub_1008FA0F0(v37, v38, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v51, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v26, typea, "Save secret value: %{public}s,\ntype: %s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v30, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v39 = v0[64];
    uint64_t v40 = v0[47];
    uint64_t v41 = v0[46];
    sub_100CBD154(v0[48], type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v39, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
    sub_100CBD154(v40, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v41, type metadata accessor for SharingCircleKeyManager.Instruction);
  }

  v0[80] = *(void *)(v0[33] + 120);
  uint64_t v42 = (void *)swift_task_alloc();
  v0[81] = v42;
  void *v42 = v0;
  v42[1] = sub_100C4C330;
  return sub_100E5CB14(v54);
}

uint64_t sub_100C4C330(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 264);
  *(void *)(*(void *)v1 + 656) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C4C448, v2, 0);
}

uint64_t sub_100C4C448()
{
  uint64_t v123 = v0;
  *(void *)(v0 + 32) = _swiftEmptyArrayStorage;
  uint64_t v1 = *(void *)(v0 + 656);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v116 = *(void *)(v0 + 504);
    uint64_t v3 = *(void *)(v0 + 456);
    uint64_t v4 = *(void *)(v0 + 400);
    unint64_t v110 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v5 = v1 + v110;
    uint64_t v121 = *(void *)(v4 + 72);
    uint64_t v119 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    uint64_t v120 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56);
    while (1)
    {
      uint64_t v9 = *(void *)(v0 + 432);
      uint64_t v10 = *(void *)(v0 + 392);
      uint64_t v11 = *(_OWORD **)(v0 + 280);
      sub_100CBD0EC(v5, v9, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
      uint64_t v12 = *(int *)(v10 + 28);
      unint64_t v13 = (uint64_t *)(v9 + *(int *)(v10 + 32));
      uint64_t v14 = *v13;
      unint64_t v15 = v13[1];
      uint64_t v16 = v9 + v12;
      uint64_t v17 = *(void *)(v9 + v12);
      uint64_t v18 = *(void **)(v16 + 8);
      sub_1000361E0(v14, v15);
      swift_bridgeObjectRetain();
      sub_10131CEC8(v14, v15, v17, v18, v11);
      uint64_t v19 = *(void *)(v0 + 448);
      uint64_t v21 = *(void *)(v0 + 424);
      uint64_t v20 = *(void *)(v0 + 432);
      uint64_t v22 = *(void *)(v0 + 280);
      (*v120)(v22, 0, 1, v19);
      sub_100CBD0EC(v20, v21, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
      int v23 = (*v119)(v22, 1, v19);
      uint64_t v24 = *(uint64_t **)(v0 + 504);
      if (v23 == 1)
      {
        uint64_t v25 = *(void *)(v0 + 424);
        uint64_t v26 = *(void *)(v0 + 280);
        os_log_type_t v27 = (uint64_t *)(v25 + *(int *)(*(void *)(v0 + 392) + 32));
        uint64_t v28 = *v27;
        unint64_t v29 = v27[1];
        sub_1000361E0(*v27, v29);
        sub_100CBD154(v25, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
        uint64_t *v24 = v28;
        *(void *)(v116 + 8) = v29;
        swift_storeEnumTagMultiPayload();
        sub_10001DAB4(v26, &qword_101639EF8);
      }
      else
      {
        uint64_t v30 = *(void *)(v0 + 280);
        sub_100CBD154(*(void *)(v0 + 424), (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
        sub_100CBD1B4(v30, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
      }
      sub_100CBD0EC(*(void *)(v0 + 504), *(void *)(v0 + 496), (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
      int v31 = 7;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          goto LABEL_16;
        case 2u:
          int v31 = 8;
          goto LABEL_16;
        case 3u:
          int v31 = 10;
          goto LABEL_16;
        case 4u:
          int v31 = 11;
          goto LABEL_16;
        case 6u:
          int v31 = 14;
LABEL_16:
          uint64_t v33 = *(void *)(v0 + 504);
          uint64_t v34 = *(void *)(v0 + 488);
          uint64_t v35 = *(void *)(v0 + 248);
          sub_100CBD154(*(void *)(v0 + 496), (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
          sub_100CBD154(v33, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
          sub_100CBD0EC(v35, v34, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          int v37 = 7;
          unint64_t v32 = (uint64_t *)(v0 + 488);
          switch(EnumCaseMultiPayload)
          {
            case 1:
              goto LABEL_22;
            case 2:
              int v37 = 8;
              goto LABEL_22;
            case 3:
              int v37 = 10;
              goto LABEL_22;
            case 4:
              int v37 = 11;
              goto LABEL_22;
            case 6:
              int v37 = 14;
LABEL_22:
              sub_100CBD154(*(void *)(v0 + 488), (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
              unint64_t v38 = 0xD000000000000012;
              unint64_t v39 = 0x80000001013EE1F0;
              switch(v31)
              {
                case 8:
                  unint64_t v38 = 0xD000000000000011;
                  unint64_t v39 = 0x80000001013EE210;
                  break;
                case 9:
                  unint64_t v38 = 0x697463656E6E6F63;
                  unint64_t v39 = 0xED000079654B6E6FLL;
                  break;
                case 10:
                  unint64_t v38 = 0x656E774F7261656ELL;
                  unint64_t v39 = 0xEC00000079654B72;
                  break;
                case 11:
                  unint64_t v38 = 0x656B6F546E696F6ALL;
                  unint64_t v39 = 0xE90000000000006ELL;
                  break;
                case 12:
                  unint64_t v38 = 0xD000000000000015;
                  unint64_t v39 = 0x80000001013EF310;
                  break;
                case 13:
                  unint64_t v39 = 0x80000001013EF330;
                  unint64_t v38 = 0xD000000000000010;
                  break;
                case 14:
                  unint64_t v38 = 0x7461636F4C626577;
                  unint64_t v39 = 0xEE0079654B6E6F69;
                  break;
                default:
                  goto LABEL_30;
              }
              break;
            default:
              goto LABEL_17;
          }
          break;
        default:
          sub_100CBD154(*(void *)(v0 + 496), (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
          unint64_t v32 = (uint64_t *)(v0 + 504);
LABEL_17:
          sub_100CBD154(*v32, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
          goto LABEL_57;
      }
LABEL_30:
      unint64_t v40 = 0xD000000000000012;
      unint64_t v41 = 0x80000001013EE1F0;
      switch(v37)
      {
        case 8:
          unint64_t v42 = 0xD000000000000011;
          uint64_t v43 = "circleSharedSecret";
          goto LABEL_39;
        case 9:
          unint64_t v41 = 0xED000079654B6E6FLL;
          if (v38 != 0x697463656E6E6F63) {
            goto LABEL_46;
          }
          goto LABEL_43;
        case 10:
          unint64_t v41 = 0xEC00000079654B72;
          if (v38 != 0x656E774F7261656ELL) {
            goto LABEL_46;
          }
          goto LABEL_43;
        case 11:
          unint64_t v41 = 0xE90000000000006ELL;
          if (v38 != 0x656B6F546E696F6ALL) {
            goto LABEL_46;
          }
          goto LABEL_43;
        case 12:
          unint64_t v42 = 0xD000000000000015;
          uint64_t v43 = "";
LABEL_39:
          unint64_t v41 = (unint64_t)v43 | 0x8000000000000000;
          if (v38 != v42) {
            goto LABEL_46;
          }
          goto LABEL_43;
        case 13:
          unint64_t v41 = 0x80000001013EF330;
          unint64_t v40 = 0xD000000000000010;
          goto LABEL_42;
        case 14:
          unint64_t v41 = 0xEE0079654B6E6F69;
          if (v38 != 0x7461636F4C626577) {
            goto LABEL_46;
          }
          goto LABEL_43;
        default:
LABEL_42:
          if (v38 != v40) {
            goto LABEL_46;
          }
LABEL_43:
          if (v39 == v41)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
LABEL_46:
            char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v44 & 1) == 0) {
              goto LABEL_57;
            }
          }
          sub_100CBFAFC((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v117 = v5;
          uint64_t v118 = v2;
          if (dispatch thunk of static Equatable.== infix(_:_:)())
          {
            uint64_t v45 = *(void *)(v0 + 472);
            uint64_t v47 = *(void *)(v0 + 328);
            uint64_t v46 = *(void *)(v0 + 336);
            uint64_t v48 = *(void *)(v0 + 320);
            uint64_t v50 = *(void *)(v0 + 248);
            uint64_t v49 = *(void *)(v0 + 256);
            (*(void (**)(void, void, void))(v0 + 584))(*(void *)(v0 + 552), *(void *)(v0 + 576), *(void *)(v0 + 536));
            sub_100CBD0EC(v49, v46, type metadata accessor for SharingCircleKeyManager.Instruction);
            sub_100CBD0EC(v50, v45, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
            sub_100CBD0EC(v49, v47, type metadata accessor for SharingCircleKeyManager.Instruction);
            sub_100CBD0EC(v49, v48, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v51 = Logger.logObject.getter();
            os_log_type_t v52 = static os_log_type_t.default.getter();
            BOOL v53 = os_log_type_enabled(v51, v52);
            uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v0 + 600);
            uint64_t v55 = *(void *)(v0 + 552);
            uint64_t v56 = *(void *)(v0 + 536);
            uint64_t v57 = *(void *)(v0 + 472);
            uint64_t v58 = *(void *)(v0 + 432);
            uint64_t v59 = *(void *)(v0 + 336);
            uint64_t v112 = *(void *)(v0 + 328);
            uint64_t v114 = *(void *)(v0 + 320);
            if (v53)
            {
              os_log_type_t type = v52;
              uint64_t v60 = swift_slowAlloc();
              v122[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v60 = 141559811;
              *(void *)(v0 + 136) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v60 + 12) = 2081;
              sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 144) = sub_1008FA0F0(v61, v62, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              v54(v55, v56);
              *(_WORD *)(v60 + 22) = 2082;
              uint64_t v63 = sub_100C27BF0();
              *(void *)(v0 + 152) = sub_1008FA0F0(v63, v64, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v59, type metadata accessor for SharingCircleKeyManager.Instruction);
              *(_WORD *)(v60 + 32) = 2080;
              unint64_t v65 = sub_10131C800();
              *(void *)(v0 + 160) = sub_1008FA0F0(v65, v66, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v57, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
              *(_WORD *)(v60 + 42) = 2160;
              *(void *)(v0 + 168) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v60 + 52) = 2081;
              uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 176) = sub_1008FA0F0(v67, v68, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v112, type metadata accessor for SharingCircleKeyManager.Instruction);
              *(_WORD *)(v60 + 62) = 2160;
              *(void *)(v0 + 184) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v60 + 72) = 2081;
              uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 192) = sub_1008FA0F0(v69, v70, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v114, type metadata accessor for SharingCircleKeyManager.Instruction);
              _os_log_impl((void *)&_mh_execute_header, v51, type, "Keeping existing key %{private,mask.hash}s: %{public}s,\ntype: %s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v60, 0x52u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              sub_100CBD154(v114, type metadata accessor for SharingCircleKeyManager.Instruction);
              sub_100CBD154(v112, type metadata accessor for SharingCircleKeyManager.Instruction);
              sub_100CBD154(v57, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
              sub_100CBD154(v59, type metadata accessor for SharingCircleKeyManager.Instruction);
              v54(v55, v56);
            }
            sub_100CBD154(v58, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
            uint64_t v2 = v118;
            uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 616);
            uint64_t v7 = *(void *)(v0 + 528);
            uint64_t v8 = *(void *)(v0 + 392);
            sub_10001DAB4(v7, &qword_1016593B8);
            v6(v7, 1, 1, v8);
LABEL_5:
            uint64_t v5 = v117;
            goto LABEL_6;
          }
          if (((1 << v31) & 0x7D80) != 0)
          {
            sub_100CBD0EC(*(void *)(v0 + 432), *(void *)(v0 + 416), (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
            unint64_t v71 = *(void *)(v0 + 32);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v71 = sub_100A6EC80(0, *(void *)(v71 + 16) + 1, 1, v71);
            }
            unint64_t v73 = *(void *)(v71 + 16);
            unint64_t v72 = *(void *)(v71 + 24);
            if (v73 >= v72 >> 1) {
              unint64_t v71 = sub_100A6EC80(v72 > 1, v73 + 1, 1, v71);
            }
            uint64_t v74 = *(void *)(v0 + 480);
            uint64_t v75 = *(void *)(v0 + 432);
            uint64_t v77 = *(void *)(v0 + 408);
            uint64_t v76 = *(void *)(v0 + 416);
            uint64_t v78 = *(void *)(v0 + 360);
            uint64_t v111 = *(void *)(v0 + 352);
            uint64_t v113 = *(void *)(v0 + 344);
            uint64_t v80 = *(void *)(v0 + 248);
            uint64_t v79 = *(void *)(v0 + 256);
            *(void *)(v71 + 16) = v73 + 1;
            sub_100CBD1B4(v76, v71 + v110 + v73 * v121, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
            *(void *)(v0 + 32) = v71;
            sub_100CBD0EC(v75, v77, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
            sub_100CBD0EC(v79, v78, type metadata accessor for SharingCircleKeyManager.Instruction);
            sub_100CBD0EC(v80, v74, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
            sub_100CBD0EC(v79, v111, type metadata accessor for SharingCircleKeyManager.Instruction);
            sub_100CBD0EC(v79, v113, type metadata accessor for SharingCircleKeyManager.Instruction);
            os_log_type_t v81 = Logger.logObject.getter();
            os_log_type_t v82 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v81, v82))
            {
              uint64_t v83 = *(void *)(v0 + 480);
              uint64_t v115 = *(void *)(v0 + 432);
              uint64_t v84 = *(void *)(v0 + 408);
              uint64_t v85 = *(void *)(v0 + 360);
              uint64_t typea = *(void *)(v0 + 344);
              uint64_t v107 = *(void *)(v0 + 352);
              uint64_t v86 = swift_slowAlloc();
              v122[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v86 = 141559811;
              *(void *)(v0 + 72) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v86 + 12) = 2081;
              sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 80) = sub_1008FA0F0(v87, v88, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v84, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
              *(_WORD *)(v86 + 22) = 2082;
              uint64_t v89 = sub_100C27BF0();
              *(void *)(v0 + 88) = sub_1008FA0F0(v89, v90, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v85, type metadata accessor for SharingCircleKeyManager.Instruction);
              *(_WORD *)(v86 + 32) = 2080;
              unint64_t v91 = sub_10131C800();
              *(void *)(v0 + 96) = sub_1008FA0F0(v91, v92, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v83, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
              *(_WORD *)(v86 + 42) = 2160;
              *(void *)(v0 + 104) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v86 + 52) = 2081;
              uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 112) = sub_1008FA0F0(v93, v94, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(v107, type metadata accessor for SharingCircleKeyManager.Instruction);
              *(_WORD *)(v86 + 62) = 2160;
              *(void *)(v0 + 120) = 1752392040;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              *(_WORD *)(v86 + 72) = 2081;
              uint64_t v95 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)(v0 + 128) = sub_1008FA0F0(v95, v96, v122);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100CBD154(typea, type metadata accessor for SharingCircleKeyManager.Instruction);
              _os_log_impl((void *)&_mh_execute_header, v81, v82, "Deleting existing key %{private,mask.hash}s: %{public}s,\ntype: %s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v86, 0x52u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              uint64_t v97 = v115;
            }
            else
            {
              uint64_t v98 = *(void *)(v0 + 480);
              uint64_t v99 = *(void *)(v0 + 432);
              uint64_t v100 = *(void *)(v0 + 408);
              uint64_t v102 = *(void *)(v0 + 352);
              uint64_t v101 = *(void *)(v0 + 360);
              uint64_t v103 = *(void *)(v0 + 344);

              sub_100CBD154(v103, type metadata accessor for SharingCircleKeyManager.Instruction);
              sub_100CBD154(v102, type metadata accessor for SharingCircleKeyManager.Instruction);
              sub_100CBD154(v98, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
              sub_100CBD154(v101, type metadata accessor for SharingCircleKeyManager.Instruction);
              sub_100CBD154(v100, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
              uint64_t v97 = v99;
            }
            sub_100CBD154(v97, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
            uint64_t v2 = v118;
            goto LABEL_5;
          }
LABEL_57:
          sub_100CBD154(*(void *)(v0 + 432), (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
LABEL_6:
          v5 += v121;
          if (!--v2)
          {
            swift_bridgeObjectRelease();
            uint64_t v104 = (uint64_t *)(v0 + 32);
            goto LABEL_62;
          }
          break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v104 = (uint64_t *)(v0 + 32);
LABEL_62:
  sub_100EDEA90(*(void *)(v0 + 528), v104, *(void *)(v0 + 272));
  uint64_t v105 = *(void *)(v0 + 640);
  return _swift_task_switch(sub_100C4D984, v105, 0);
}

uint64_t sub_100C4D984()
{
  *(void *)(v0 + 664) = *(void *)(*(void *)(v0 + 640) + 128);
  return _swift_task_switch(sub_100C4D9AC, 0, 0);
}

uint64_t sub_100C4D9AC()
{
  uint64_t v1 = v0[83];
  uint64_t v2 = v0[34];
  uint64_t v3 = swift_task_alloc();
  v0[84] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[85] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C4DAA4;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v4, 0, 0, 0xD000000000000011, 0x80000001013F27F0, sub_100074FFC, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_100C4DAA4()
{
  *(void *)(*(void *)v1 + 688) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_100C4DBC0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_100C4DE9C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100C4DBC0()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C4DC2C, v1, 0);
}

uint64_t sub_100C4DC2C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[75];
  uint64_t v2 = v0[72];
  uint64_t v3 = v0[67];
  sub_10001DAB4(v0[34], &qword_101639E88);
  v1(v2, v3);
  uint64_t v4 = v0[66];
  swift_bridgeObjectRelease();
  sub_10001DAB4(v4, &qword_1016593B8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100C4DE9C()
{
  return _swift_task_switch(sub_100C4DEB8, *(void *)(v0 + 264), 0);
}

uint64_t sub_100C4DEB8()
{
  unint64_t v38 = v0;
  uint64_t v1 = v0[58];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[37];
  uint64_t v5 = v0[31];
  uint64_t v4 = v0[32];
  sub_100CBD0EC(v4, v0[39], type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v5, v1, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
  sub_100CBD0EC(v4, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v4, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v36 = (void (*)(uint64_t, uint64_t))v0[75];
    uint64_t v35 = v0[72];
    uint64_t v8 = v0[58];
    os_log_type_t type = v7;
    uint64_t v9 = v0[39];
    uint64_t v30 = v0[38];
    uint64_t v31 = v0[67];
    uint64_t v32 = v0[37];
    uint64_t v34 = v0[34];
    uint64_t v10 = swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446978;
    uint64_t v11 = sub_100C27BF0();
    v0[5] = sub_1008FA0F0(v11, v12, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 12) = 2080;
    unint64_t v13 = sub_10131C800();
    v0[6] = sub_1008FA0F0(v13, v14, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v8, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
    *(_WORD *)(v10 + 22) = 2080;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[7] = sub_1008FA0F0(v15, v16, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v10 + 32) = 2080;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[8] = sub_1008FA0F0(v17, v18, v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v6, type, "Saved key : %{public}s, type: %s,\nshare-id: %s, beacon-id: %s.", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_10001DAB4(v34, &qword_101639E88);
    v36(v35, v31);
  }
  else
  {
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[75];
    uint64_t v20 = v0[72];
    uint64_t v21 = v0[67];
    uint64_t v22 = v0[58];
    uint64_t v24 = v0[38];
    uint64_t v23 = v0[39];
    uint64_t v25 = v0[37];
    uint64_t v26 = v0[34];

    sub_100CBD154(v25, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v24, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v22, (uint64_t (*)(void))type metadata accessor for SharingCircleSecretValue);
    sub_100CBD154(v23, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_10001DAB4(v26, &qword_101639E88);
    v19(v20, v21);
  }
  uint64_t v27 = v0[66];
  swift_bridgeObjectRelease();
  sub_10001DAB4(v27, &qword_1016593B8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_100C4E4EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10000588C(&qword_1016593B8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SharingCircleSecret();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (void *)((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10001D074(a3, (uint64_t)v9, &qword_1016593B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t result = sub_10001DAB4((uint64_t)v9, &qword_1016593B8);
  }
  else
  {
    sub_100CBD1B4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
    sub_100EE1F84(v13);
    uint64_t result = sub_100CBD154((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for SharingCircleSecret);
    if (v4) {
      return result;
    }
  }
  uint64_t v15 = *a4;
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = (uint64_t *)(v15 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)));
    uint64_t v18 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_100EE5828(v17);
      if (v4) {
        break;
      }
      uint64_t v17 = (uint64_t *)((char *)v17 + v18);
      --v16;
    }
    while (v16);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100C4E6F0(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_100C4E810, v2, 0);
}

uint64_t sub_100C4E810()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C4E94C;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C4E94C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C4EA64, v2, 0);
}

uint64_t sub_100C4EA64()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[25])
  {
    uint64_t v2 = (void *)v0[16];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    sub_10001CD44(v2, v3);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    sub_10001CD44(v2, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 184))(v5, v6);
    uint64_t v7 = v2[3];
    uint64_t v8 = v2[4];
    sub_10001CD44(v2, v7);
    char v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 112))(v7, v8);
    uint64_t v10 = (void *)swift_task_alloc();
    v0[26] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100C4ED2C;
    uint64_t v11 = v0[23];
    uint64_t v12 = v0[20];
    uint64_t v13 = v0[15];
    return sub_101103F50(v13, v11, v12, v9 & 1);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100010324(v15, (uint64_t)qword_10170EB40);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "No ObservationStoreService available!", v18, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    void *v19 = 0xD000000000000017;
    v19[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_100C4ED2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 184);
  uint64_t v2 = *(void *)(*(void *)v0 + 176);
  uint64_t v3 = *(void *)(*(void *)v0 + 168);
  uint64_t v4 = *(void *)(*(void *)v0 + 160);
  uint64_t v5 = *(void *)(*(void *)v0 + 152);
  uint64_t v6 = *(void *)(*(void *)v0 + 144);
  uint64_t v7 = *(void *)(*(void *)v0 + 136);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100CC28B4, v7, 0);
}

uint64_t sub_100C4EEFC(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = type metadata accessor for Date();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[21] = v5;
  v3[22] = *(void *)(v5 - 8);
  v3[23] = swift_task_alloc();
  return _swift_task_switch(sub_100C4F01C, v2, 0);
}

uint64_t sub_100C4F01C()
{
  if (qword_1016375E8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10001D074((uint64_t)&xmmword_10166E8F0, v0 + 56, (uint64_t *)&unk_101638D30);
  if (*(void *)(v0 + 80))
  {
    sub_10001CEB0((long long *)(v0 + 56), v0 + 16);
    sub_10001CD44((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_101639138 + dword_101639138);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 192) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C4F158;
    return v3();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100C4F158(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 136);
  *(void *)(*(void *)v1 + 200) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C4F270, v2, 0);
}

uint64_t sub_100C4F270()
{
  uint64_t v1 = (uint64_t)(v0 + 2);
  if (v0[25])
  {
    uint64_t v2 = (void *)v0[16];
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    uint64_t v3 = v2[3];
    uint64_t v4 = v2[4];
    sub_10001CD44(v2, v3);
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 8) + 8) + 32))(v3);
    uint64_t v5 = v2[3];
    uint64_t v6 = v2[4];
    sub_10001CD44(v2, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 184))(v5, v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[26] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1009B2E4C;
    uint64_t v8 = v0[23];
    uint64_t v9 = v0[20];
    uint64_t v10 = v0[15];
    return sub_1011044F4(v10, v8, v9);
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v1);
    if (qword_101637020 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100010324(v12, (uint64_t)qword_10170EB40);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "No ObservationStoreService available!", v15, 2u);
      swift_slowDealloc();
    }

    sub_10001CEC8();
    swift_allocError();
    *uint64_t v16 = 0xD000000000000017;
    v16[1] = 0x80000001013FB7A0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_100C4F500()
{
  SymmetricKey.withUnsafeBytes<A>(_:)();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_100CBEF70();
  uint64_t v1 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (!v0)
  {
    uint64_t v3 = v1;
    unint64_t v4 = v2;
    Data.spEncrypt(key:ivLength:)();
    sub_10001CFB8(v3, v4);
  }
  swift_release();
  return sub_10001CFB8(v6, v7);
}

uint64_t sub_100C4F614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[11] = a2;
  v4[12] = v3;
  v4[10] = a1;
  uint64_t v6 = type metadata accessor for EncryptedData();
  v4[13] = v6;
  v4[14] = *(void *)(v6 - 8);
  v4[15] = swift_task_alloc();
  unint64_t v7 = (void *)swift_task_alloc();
  v4[16] = v7;
  *unint64_t v7 = v4;
  v7[1] = sub_100C4F734;
  v7[12] = a3;
  v7[13] = v3;
  v7[11] = v4 + 2;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C4F734()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    unint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 96);
    return _swift_task_switch(sub_100C4F884, v6, 0);
  }
}

uint64_t sub_100C4F884()
{
  uint64_t v2 = v0[2];
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15)
  {
    sub_100130078();
    swift_allocError();
    *uint64_t v3 = 9;
    swift_willThrow();
LABEL_6:
    sub_1001300CC(v0 + 2);
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
  uint64_t v11 = v0[17];
  type metadata accessor for PropertyListDecoder();
  swift_allocObject();
  sub_1000361E0(v2, v1);
  sub_1000361E0(v2, v1);
  PropertyListDecoder.init()();
  sub_100CBFAFC(&qword_10163F750, (void (*)(uint64_t))&type metadata accessor for EncryptedData);
  dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
  if (v11)
  {
    swift_release();
    sub_100037A24(v2, v1);
    sub_100037A24(v2, v1);
    goto LABEL_6;
  }
  uint64_t v4 = EncryptedData.decrypt(key:)();
  uint64_t v6 = v5;
  uint64_t v9 = v4;
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  swift_release();
  sub_100037A24(v2, v1);
  sub_100037A24(v2, v1);
  sub_1001300CC(v0 + 2);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v10(v9, v6);
}

uint64_t sub_100C4FAF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v69 = a1;
  uint64_t v61 = a4;
  uint64_t v5 = type metadata accessor for OwnerPeerTrust();
  __chkstk_darwin(v5);
  unint64_t v70 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  unint64_t v64 = (char *)&v58 - v11;
  __chkstk_darwin(v10);
  uint64_t v67 = (char *)&v58 - v12;
  uint64_t v13 = sub_10000588C(&qword_10163F778);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for KeyDropJoinToken(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v60 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v58 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v58 - v23;
  uint64_t v25 = *a2;
  uint64_t v26 = *(void *)(v25 + 16);
  uint64_t v58 = v5;
  if (v26)
  {
    unint64_t v68 = (char *)&v58 - v23;
    uint64_t v62 = v7;
    uint64_t v27 = v25 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v28 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v27, (uint64_t)v22, type metadata accessor for KeyDropJoinToken);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      sub_100CBD154((uint64_t)v22, type metadata accessor for KeyDropJoinToken);
      v27 += v28;
      if (!--v26)
      {
        uint64_t v29 = 1;
        goto LABEL_8;
      }
    }
    sub_100CBD1B4((uint64_t)v22, (uint64_t)v15, type metadata accessor for KeyDropJoinToken);
    uint64_t v29 = 0;
LABEL_8:
    uint64_t v30 = v62;
    uint64_t v24 = v68;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = 1;
    uint64_t v30 = v7;
  }
  uint64_t v31 = (uint64_t)v70;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v29, 1, v16);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10001DAB4((uint64_t)v15, &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v32 = 13;
    return swift_willThrow();
  }
  else
  {
    sub_100CBD1B4((uint64_t)v15, (uint64_t)v24, type metadata accessor for KeyDropJoinToken);
    os_log_t v34 = v66;
    uint64_t v35 = v67;
    sub_100C276D0((uint64_t)v24);
    if (v34)
    {
      uint64_t v36 = (uint64_t)v24;
    }
    else
    {
      unint64_t v68 = v24;
      if (qword_101636B18 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_100010324(v37, (uint64_t)qword_10170DED0);
      uint64_t v38 = v65;
      uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v65 + 16);
      v39(v64, v35, v30);
      sub_100CBD0EC(v69, v31, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
      unint64_t v40 = v63;
      v39(v63, v59, v30);
      unint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.default.getter();
      int v43 = v42;
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v44 = swift_slowAlloc();
        unint64_t v70 = (char *)swift_slowAlloc();
        unint64_t v72 = v70;
        *(_DWORD *)uint64_t v44 = 141559043;
        uint64_t v71 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v44 + 12) = 2081;
        LODWORD(v69) = v43;
        uint64_t v62 = sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        os_log_t v66 = v41;
        uint64_t v45 = v64;
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v71 = sub_1008FA0F0(v46, v47, (uint64_t *)&v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v48 = *(void (**)(char *, uint64_t))(v65 + 8);
        v48(v45, v30);
        *(_WORD *)(v44 + 22) = 2080;
        uint64_t v49 = (uint64_t *)(v31 + *(int *)(v58 + 32));
        uint64_t v51 = *v49;
        unint64_t v50 = v49[1];
        swift_bridgeObjectRetain();
        uint64_t v71 = sub_1008FA0F0(v51, v50, (uint64_t *)&v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v31, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
        *(_WORD *)(v44 + 32) = 2160;
        uint64_t v71 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v44 + 42) = 2081;
        os_log_type_t v52 = v63;
        uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v71 = sub_1008FA0F0(v53, v54, (uint64_t *)&v72);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v48(v52, v30);
        uint64_t v55 = v48;
        unint64_t v41 = v66;
        _os_log_impl((void *)&_mh_execute_header, v66, (os_log_type_t)v69, "New Member Created: memberId: %{private,mask.hash}s,\ndisplayIdentifier: %s for\nownerSharingCircleIdentifier: %{private,mask.hash}s.", (uint8_t *)v44, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v35 = v67;
        swift_slowDealloc();
      }
      else
      {
        uint64_t v55 = *(void (**)(char *, uint64_t))(v38 + 8);
        v55(v64, v30);
        sub_100CBD154(v31, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
        v55(v40, v30);
      }

      uint64_t v56 = (uint64_t)v68;
      uint64_t v57 = v60;
      sub_100CBD0EC((uint64_t)v68, v60, type metadata accessor for KeyDropJoinToken);
      sub_100C5032C(0, v57, 0, 0xC000000000000000, v61);
      v55(v35, v30);
      uint64_t v36 = v56;
    }
    return sub_100CBD154(v36, type metadata accessor for KeyDropJoinToken);
  }
}

uint64_t sub_100C5032C@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v43 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = a3;
  LODWORD(v38) = a1;
  uint64_t v7 = type metadata accessor for P256.Signing.PublicKey();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for P256.Signing.PrivateKey();
  uint64_t v36 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SharingCircleKeyManager();
  sub_100C276D0(a2);
  if (v5)
  {
    sub_10001CFB8(v40, v43);
    return sub_100CBD154(a2, type metadata accessor for KeyDropJoinToken);
  }
  else
  {
    uint64_t v33 = v10;
    os_log_t v34 = v9;
    uint64_t v35 = v7;
    uint64_t v18 = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v39, v16, v13);
    uint64_t v19 = type metadata accessor for KeyDropCreateRequest.Member(0);
    *(unsigned char *)(v18 + *(int *)(v19 + 20)) = v38 & 1;
    uint64_t v20 = (uint64_t *)(a2 + *(int *)(type metadata accessor for KeyDropJoinToken(0) + 20));
    unint64_t v21 = v20[1];
    uint64_t v41 = *v20;
    unint64_t v42 = v21;
    sub_1000361E0(v41, v21);
    P256.Signing.PrivateKey.init<A>(rawRepresentation:)();
    uint64_t v38 = v19;
    uint64_t v22 = v14;
    uint64_t v23 = v34;
    P256.Signing.PrivateKey.publicKey.getter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v33);
    uint64_t v24 = P256.Signing.PublicKey.compactRepresentation.getter();
    unint64_t v26 = v25;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v35);
    unint64_t v27 = v43;
    uint64_t v28 = v40;
    if (v26 >> 60 == 15)
    {
      sub_100130078();
      swift_allocError();
      *uint64_t v29 = 18;
      swift_willThrow();
      sub_10001CFB8(v28, v27);
      sub_100CBD154(a2, type metadata accessor for KeyDropJoinToken);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v18, v13);
    }
    else
    {
      uint64_t result = sub_100CBD154(a2, type metadata accessor for KeyDropJoinToken);
      uint64_t v30 = v38;
      uint64_t v31 = (uint64_t *)(v18 + *(int *)(v38 + 24));
      *uint64_t v31 = v24;
      v31[1] = v26;
      uint64_t v32 = (uint64_t *)(v18 + *(int *)(v30 + 28));
      *uint64_t v32 = v28;
      v32[1] = v27;
    }
  }
  return result;
}

uint64_t sub_100C506F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v83 = a1;
  uint64_t v74 = a4;
  uint64_t v5 = type metadata accessor for OwnerPeerTrust();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v75 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v72 = (char *)v69 - v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v69 - v13;
  uint64_t v15 = sub_10000588C(&qword_10163F778);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for KeyDropJoinToken(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v73 = (uint64_t)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)v69 - v23;
  __chkstk_darwin(v22);
  uint64_t v81 = (uint64_t)v69 - v25;
  uint64_t v76 = a2;
  uint64_t v77 = v5;
  uint64_t v26 = a2[4];
  uint64_t v86 = v26;
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v78 = v7;
    uint64_t v79 = v14;
    uint64_t v28 = v26 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v29 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v28, (uint64_t)v24, type metadata accessor for KeyDropJoinToken);
      if (static UUID.== infix(_:_:)()) {
        break;
      }
      sub_100CBD154((uint64_t)v24, type metadata accessor for KeyDropJoinToken);
      v28 += v29;
      if (!--v27)
      {
        uint64_t v30 = 1;
        goto LABEL_8;
      }
    }
    sub_100CBD1B4((uint64_t)v24, (uint64_t)v17, type metadata accessor for KeyDropJoinToken);
    uint64_t v30 = 0;
LABEL_8:
    uint64_t v32 = v8;
    uint64_t v31 = v82;
    uint64_t v7 = v78;
    uint64_t v14 = v79;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = 1;
    uint64_t v31 = v82;
    uint64_t v32 = v8;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, v30, 1, v18);
  sub_10025C634((uint64_t)&v86);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  uint64_t v34 = v83;
  if (v33 == 1)
  {
    sub_10001DAB4((uint64_t)v17, &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v35 = 13;
    return swift_willThrow();
  }
  else
  {
    uint64_t v37 = (uint64_t)v17;
    uint64_t v38 = v81;
    sub_100CBD1B4(v37, v81, type metadata accessor for KeyDropJoinToken);
    uint64_t v39 = v80;
    sub_100C276D0(v38);
    if (!v39)
    {
      uint64_t v40 = (uint64_t)v7;
      uint64_t v41 = (uint64_t *)(v34 + *(int *)(v77 + 32));
      uint64_t v43 = *v41;
      uint64_t v42 = v41[1];
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_100CBDB68(v43, v42, v76);
      uint64_t v76 = v45;
      uint64_t v79 = v14;
      uint64_t v80 = v44;
      swift_bridgeObjectRelease();
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_100010324(v46, (uint64_t)qword_10170EB40);
      unint64_t v47 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
      uint64_t v48 = v72;
      v47(v72, v79, v32);
      uint64_t v78 = (char *)v40;
      sub_100CBD0EC(v83, v40, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
      uint64_t v49 = v75;
      v47(v75, v71, v32);
      unint64_t v50 = Logger.logObject.getter();
      os_log_type_t v51 = static os_log_type_t.default.getter();
      int v52 = v51;
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v53 = swift_slowAlloc();
        LODWORD(v71) = v52;
        uint64_t v54 = v53;
        uint64_t v55 = swift_slowAlloc();
        uint64_t v83 = v55;
        *(_DWORD *)uint64_t v54 = 141559043;
        uint64_t v84 = 1752392040;
        uint64_t v85 = v55;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v54 + 12) = 2081;
        v69[1] = sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        os_log_t v70 = v50;
        uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v84 = sub_1008FA0F0(v56, v57, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v58 = *(void (**)(char *, uint64_t))(v82 + 8);
        v58(v48, v32);
        *(_WORD *)(v54 + 22) = 2080;
        uint64_t v59 = (uint64_t)v78;
        uint64_t v60 = (uint64_t *)&v78[*(int *)(v77 + 32)];
        uint64_t v61 = *v60;
        unint64_t v62 = v60[1];
        swift_bridgeObjectRetain();
        uint64_t v84 = sub_1008FA0F0(v61, v62, &v85);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v59, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
        *(_WORD *)(v54 + 32) = 2160;
        uint64_t v84 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v54 + 42) = 2081;
        uint64_t v63 = v75;
        uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v84 = sub_1008FA0F0(v64, v65, &v85);
        uint64_t v38 = v81;
        os_log_t v66 = v58;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v58(v63, v32);
        os_log_t v67 = v70;
        _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v71, "New Member Created: memberId: %{private,mask.hash}s,\ndisplayIdentifier: %s for\nownerSharingCircleIdentifier: %{private,mask.hash}s.", (uint8_t *)v54, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        os_log_t v66 = *(void (**)(char *, uint64_t))(v31 + 8);
        v66(v48, v32);
        sub_100CBD154((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for OwnerPeerTrust);
        v66(v49, v32);
      }
      uint64_t v68 = v73;
      sub_100CBD0EC(v38, v73, type metadata accessor for KeyDropJoinToken);
      sub_100C5032C(0, v68, v80, (unint64_t)v76, v74);
      v66(v79, v32);
    }
    return sub_100CBD154(v38, type metadata accessor for KeyDropJoinToken);
  }
}

uint64_t sub_100C50F78(uint64_t a1, uint64_t a2)
{
  v3[12] = a2;
  v3[13] = v2;
  v3[11] = a1;
  sub_10000588C(&qword_10163F778);
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for KeyDropJoinToken(0);
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  type metadata accessor for SharingCircleKeyManager.DelegatedKeychain(0);
  v3[24] = swift_task_alloc();
  return _swift_task_switch(sub_100C510E8, v2, 0);
}

uint64_t sub_100C510E8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = type metadata accessor for OwnerSharingCircle();
  uint64_t v3 = v1 + *(int *)(v2 + 20);
  if (*(unsigned char *)(v1 + *(int *)(v2 + 28)) == 3)
  {
    uint64_t v4 = (void *)swift_task_alloc();
    v0[25] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100C51234;
    uint64_t v5 = v0[24];
    return sub_100C32964(v5, v3);
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[27] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100C51708;
    uint64_t v8 = v0[13];
    v7[12] = v3;
    v7[13] = v8;
    v7[11] = v0 + 2;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
}

uint64_t sub_100C51234()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v4 = sub_100C51CD8;
  }
  else {
    uint64_t v4 = sub_100C51360;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C51360()
{
  uint64_t v1 = (uint64_t *)v0[24];
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    uint64_t v4 = v0[17];
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v5, v0[22], type metadata accessor for KeyDropJoinToken);
      if (qword_101636950 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for UUID();
      sub_100010324(v7, (uint64_t)qword_10170DAA0);
      char v8 = static UUID.== infix(_:_:)();
      uint64_t v9 = v0[22];
      if (v8) {
        break;
      }
      sub_100CBD154(v9, type metadata accessor for KeyDropJoinToken);
      v5 += v6;
      if (!--v3) {
        goto LABEL_9;
      }
    }
    sub_100CBD1B4(v9, v0[15], type metadata accessor for KeyDropJoinToken);
    uint64_t v10 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v10 = 1;
  }
  uint64_t v11 = v0[16];
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(v13, v10, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
  {
    uint64_t v14 = v0[24];
    sub_10001DAB4(v0[15], &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v15 = 13;
    swift_willThrow();
  }
  else
  {
    uint64_t v16 = v0[23];
    uint64_t v17 = v0[21];
    uint64_t v18 = v0[11];
    sub_100CBD1B4(v0[15], v16, type metadata accessor for KeyDropJoinToken);
    sub_100CBD0EC(v16, v17, type metadata accessor for KeyDropJoinToken);
    sub_100C5032C(1, v17, 0, 0xC000000000000000, v18);
    uint64_t v14 = v0[24];
    sub_100CBD154(v0[23], type metadata accessor for KeyDropJoinToken);
  }
  sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
  return v19();
}

uint64_t sub_100C51708()
{
  uint64_t v2 = (void *)*v1;
  v2[28] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[13];
    return _swift_task_switch(sub_100C518C4, v5, 0);
  }
}

uint64_t sub_100C518C4()
{
  uint64_t v1 = v0[6];
  v0[10] = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[17];
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v4, v0[19], type metadata accessor for KeyDropJoinToken);
      if (qword_101636950 != -1) {
        swift_once();
      }
      uint64_t v6 = type metadata accessor for UUID();
      sub_100010324(v6, (uint64_t)qword_10170DAA0);
      char v7 = static UUID.== infix(_:_:)();
      uint64_t v8 = v0[19];
      if (v7) {
        break;
      }
      sub_100CBD154(v8, type metadata accessor for KeyDropJoinToken);
      v4 += v5;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    sub_100CBD1B4(v8, v0[14], type metadata accessor for KeyDropJoinToken);
    uint64_t v9 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v9 = 1;
  }
  uint64_t v10 = v0[16];
  uint64_t v11 = v0[17];
  uint64_t v12 = v0[14];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v12, v9, 1, v10);
  sub_10025C634((uint64_t)(v0 + 10));
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1)
  {
    sub_10001DAB4(v0[14], &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v13 = 13;
    swift_willThrow();
LABEL_17:
    sub_1001300CC(v0 + 2);
    goto LABEL_18;
  }
  sub_100CBD1B4(v0[14], v0[20], type metadata accessor for KeyDropJoinToken);
  if (qword_101636948 != -1) {
    swift_once();
  }
  uint64_t v14 = v0[28];
  uint64_t v15 = qword_10170DA90;
  uint64_t v16 = qword_10170DA98;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100CBDB68(v15, v16, v0 + 2);
  uint64_t v19 = v14;
  uint64_t v20 = v0[20];
  if (v19)
  {
    sub_100CBD154(v0[20], type metadata accessor for KeyDropJoinToken);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  uint64_t v23 = v17;
  unint64_t v24 = v18;
  uint64_t v25 = v0[18];
  uint64_t v26 = v0[11];
  swift_bridgeObjectRelease();
  sub_100CBD0EC(v20, v25, type metadata accessor for KeyDropJoinToken);
  sub_100C5032C(1, v25, v23, v24, v26);
  sub_100CBD154(v0[20], type metadata accessor for KeyDropJoinToken);
  sub_1001300CC(v0 + 2);
LABEL_18:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_100C51CD8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C51DAC(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  *(void *)(v5 + 168) = a4;
  *(void *)(v5 + 176) = v4;
  *(unsigned char *)(v5 + 89) = a3;
  *(void *)(v5 + 152) = a1;
  *(void *)(v5 + 160) = a2;
  uint64_t v7 = type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData(0);
  *(void *)(v5 + 184) = v7;
  *(void *)(v5 + 192) = *(void *)(v7 - 8);
  *(void *)(v5 + 200) = swift_task_alloc();
  *(void *)(v5 + 208) = swift_task_alloc();
  *(void *)(v5 + 216) = swift_task_alloc();
  *(void *)(v5 + 224) = swift_task_alloc();
  *(void *)(v5 + 232) = type metadata accessor for KeyDropShareMetaDataResponse(0);
  *(void *)(v5 + 240) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  *(void *)(v5 + 248) = v8;
  *(void *)(v5 + 256) = *(void *)(v8 - 8);
  *(void *)(v5 + 264) = swift_task_alloc();
  sub_10000588C(&qword_10163F778);
  *(void *)(v5 + 272) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for KeyDropJoinToken(0);
  *(void *)(v5 + 280) = v9;
  *(void *)(v5 + 288) = *(void *)(v9 - 8);
  *(void *)(v5 + 296) = swift_task_alloc();
  *(void *)(v5 + 304) = swift_task_alloc();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 312) = v10;
  *uint64_t v10 = v5;
  v10[1] = sub_100C52020;
  v10[12] = a2;
  v10[13] = v4;
  v10[11] = v5 + 16;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C52020()
{
  uint64_t v2 = (void *)*v1;
  v2[40] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[22];
    return _swift_task_switch(sub_100C521DC, v5, 0);
  }
}

uint64_t sub_100C521DC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  *(void *)(v0 + 112) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 288);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v4, *(void *)(v0 + 296), type metadata accessor for KeyDropJoinToken);
      if (qword_101636950 != -1) {
        swift_once();
      }
      sub_100010324(*(void *)(v0 + 248), (uint64_t)qword_10170DAA0);
      char v6 = static UUID.== infix(_:_:)();
      uint64_t v7 = *(void *)(v0 + 296);
      if (v6) {
        break;
      }
      sub_100CBD154(v7, type metadata accessor for KeyDropJoinToken);
      v4 += v5;
      if (!--v2) {
        goto LABEL_9;
      }
    }
    sub_100CBD1B4(v7, *(void *)(v0 + 272), type metadata accessor for KeyDropJoinToken);
    uint64_t v8 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v8 = 1;
  }
  uint64_t v9 = *(void *)(v0 + 280);
  uint64_t v10 = *(void *)(v0 + 288);
  uint64_t v11 = *(void *)(v0 + 272);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v11, v8, 1, v9);
  sub_10025C634(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v11, 1, v9) == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 272), &qword_10163F778);
    sub_100130078();
    swift_allocError();
    *uint64_t v12 = 13;
    swift_willThrow();
LABEL_15:
    sub_1001300CC((uint64_t *)(v0 + 16));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  uint64_t v13 = *(void *)(v0 + 320);
  uint64_t v14 = *(void *)(v0 + 304);
  sub_100CBD1B4(*(void *)(v0 + 272), v14, type metadata accessor for KeyDropJoinToken);
  type metadata accessor for SharingCircleKeyManager();
  sub_100C276D0(v14);
  if (v13)
  {
    sub_100CBD154(*(void *)(v0 + 304), type metadata accessor for KeyDropJoinToken);
    goto LABEL_15;
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  unint64_t v18 = sub_10070FD70(v17);
  *(void *)(v0 + 328) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v19;
  void *v19 = v0;
  v19[1] = sub_100C52560;
  uint64_t v20 = *(void *)(v0 + 304);
  uint64_t v21 = *(void *)(v0 + 264);
  uint64_t v22 = *(void *)(v0 + 152);
  uint64_t v23 = *(void *)(v0 + 160);
  char v24 = *(unsigned char *)(v0 + 89);
  return sub_10109FC58(v22, v23, v21, v24, v20, (uint64_t)v18);
}

uint64_t sub_100C52560()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  swift_release();
  if (v0) {
    uint64_t v4 = sub_100C52D58;
  }
  else {
    uint64_t v4 = sub_100C526A8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C526A8()
{
  uint64_t v43 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v37 = (uint64_t *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v1, v2, type metadata accessor for KeyDropShareMetaDataResponse);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v42 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 141558275;
    *(void *)(v0 + 136) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 144) = sub_1008FA0F0(v8, v9, &v42);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v6, type metadata accessor for KeyDropShareMetaDataResponse);
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Got existing metadata info for %{private,mask.hash}s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v0 + 240), type metadata accessor for KeyDropShareMetaDataResponse);
  }

  uint64_t v10 = *(void *)(*(void *)(v0 + 152) + *(int *)(*(void *)(v0 + 232) + 24));
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v39 = *(void *)(v0 + 184);
    uint64_t v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    uint64_t v38 = v14;
    do
    {
      uint64_t v15 = *(void *)(v0 + 216);
      uint64_t v17 = *(void *)(v0 + 200);
      uint64_t v16 = *(void *)(v0 + 208);
      sub_100CBD0EC(v13, *(void *)(v0 + 224), type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
      sub_100CBD0EC(v13, v15, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
      sub_100CBD0EC(v13, v16, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
      sub_100CBD0EC(v13, v17, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
      unint64_t v18 = Logger.logObject.getter();
      os_log_type_t v19 = static os_log_type_t.default.getter();
      BOOL v20 = os_log_type_enabled(v18, v19);
      uint64_t v22 = *(void *)(v0 + 216);
      uint64_t v21 = *(char **)(v0 + 224);
      uint64_t v23 = *(void *)(v0 + 208);
      if (v20)
      {
        uint64_t v40 = *(void *)(v0 + 200);
        os_log_type_t v41 = v19;
        uint64_t v24 = swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        *(_DWORD *)uint64_t v24 = 136446978;
        unint64_t v25 = sub_1012638E4(*v21);
        *(void *)(v0 + 96) = sub_1008FA0F0(v25, v26, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154((uint64_t)v21, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        *(_WORD *)(v24 + 12) = 2082;
        uint64_t v27 = sub_101263FBC();
        *(void *)(v0 + 104) = sub_1008FA0F0(v27, v28, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v22, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        *(_WORD *)(v24 + 22) = 2082;
        uint64_t v29 = v23 + *(int *)(v39 + 24);
        uint64_t v30 = *(void *)v29;
        LOBYTE(v29) = *(unsigned char *)(v29 + 8);
        *(void *)(v0 + 80) = v30;
        *(unsigned char *)(v0 + 88) = v29;
        sub_10000588C(&qword_10163D328);
        uint64_t v31 = String.init<A>(describing:)();
        *(void *)(v0 + 120) = sub_1008FA0F0(v31, v32, &v42);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v23, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        *(_WORD *)(v24 + 32) = 2050;
        uint64_t v33 = *(void *)(v40 + *(int *)(v39 + 28));
        uint64_t v14 = v38;
        sub_100CBD154(v40, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        *(void *)(v0 + 128) = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v18, v41, "Package of %{public}s type,\nalignment: %{public}s,\nrange: %{public}s...%{public}llu", (uint8_t *)v24, 0x2Au);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100CBD154(*(void *)(v0 + 200), type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);

        sub_100CBD154(v23, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        sub_100CBD154(v22, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
        sub_100CBD154((uint64_t)v21, type metadata accessor for KeyDropShareMetaDataResponse.ShareMetaData);
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    sub_1001300CC(v37);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1001300CC(v37);
  }
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v0 + 304);
  (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
  sub_100CBD154(v34, type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = *(uint64_t (**)(void))(v0 + 8);
  return v35();
}

uint64_t sub_100C52D58()
{
  uint64_t v1 = v0[38];
  uint64_t v3 = v0[32];
  uint64_t v2 = v0[33];
  uint64_t v4 = v0[31];
  sub_1001300CC(v0 + 2);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100CBD154(v1, type metadata accessor for KeyDropJoinToken);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100C52E74(uint64_t a1, uint64_t a2)
{
  v3[11] = a1;
  v3[12] = v2;
  v3[13] = *v2;
  v3[14] = *(void *)(type metadata accessor for KeyDropJoinToken(0) - 8);
  v3[15] = swift_task_alloc();
  sub_10000588C(&qword_101638CF0);
  v3[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v3[21] = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100C53050;
  v6[12] = a2;
  v6[13] = v2;
  v6[11] = v3 + 2;
  return _swift_task_switch(sub_100C32ED8, 0, 0);
}

uint64_t sub_100C53050()
{
  uint64_t v2 = (void *)*v1;
  v2[22] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v2[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v2[12];
    return _swift_task_switch(sub_100C531B4, v5, 0);
  }
}

uint64_t sub_100C531B4()
{
  uint64_t v60 = v0;
  uint64_t v1 = v0[6];
  v0[10] = v1;
  uint64_t v2 = (uint64_t)(v0 + 10);
  uint64_t v3 = _swiftEmptyDictionarySingleton;
  v59[0] = _swiftEmptyDictionarySingleton;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v0[14];
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v7 = *(void *)(v5 + 72);
    uint64_t v8 = v0[22];
    uint64_t v9 = v0[15];
    swift_bridgeObjectRetain_n();
    sub_100CBD0EC(v1 + v6, v9, type metadata accessor for KeyDropJoinToken);
    sub_100C53788((uint64_t)v59, v9);
    if (v8)
    {
      uint64_t v10 = v0[15];
      swift_bridgeObjectRelease();
      sub_100CBD154(v10, type metadata accessor for KeyDropJoinToken);
      return sub_10025C634(v2);
    }
    sub_100CBD154(v0[15], type metadata accessor for KeyDropJoinToken);
    uint64_t v12 = v4 - 1;
    if (v4 != 1)
    {
      uint64_t v13 = v1 + v7 + v6;
      do
      {
        uint64_t v14 = v0[15];
        sub_100CBD0EC(v13, v14, type metadata accessor for KeyDropJoinToken);
        sub_100C53788((uint64_t)v59, v14);
        sub_100CBD154(v0[15], type metadata accessor for KeyDropJoinToken);
        v13 += v7;
        --v12;
      }
      while (v12);
    }
    sub_10025C634((uint64_t)(v0 + 10));
    sub_10025C634((uint64_t)(v0 + 10));
    uint64_t v3 = (void *)v59[0];
  }
  uint64_t v15 = v0[11];
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = v0[18];
    uint64_t v55 = type metadata accessor for KeyDropShareMetaDataResponse.Member(0);
    uint64_t v18 = v15
        + ((*(unsigned __int8 *)(*(void *)(v55 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v55 - 8) + 80));
    os_log_type_t v19 = (void (**)(void, uint64_t, uint64_t, void))(v17 + 56);
    uint64_t v20 = *(void *)(*(void *)(v55 - 8) + 72);
    uint64_t v54 = (void (**)(uint64_t, void, uint64_t))(v17 + 32);
    os_log_type_t v51 = (void (**)(uint64_t, uint64_t))(v17 + 8);
    swift_bridgeObjectRetain();
    unint64_t v57 = v3;
    uint64_t v58 = _swiftEmptyDictionarySingleton;
    unint64_t v50 = (void (**)(void, uint64_t, uint64_t, void))(v17 + 56);
    uint64_t v52 = v20;
    uint64_t v53 = v17;
    while (1)
    {
      if (v3[2] && (unint64_t v21 = sub_1007240CC(v18), (v22 & 1) != 0))
      {
        uint64_t v24 = v0[16];
        uint64_t v23 = v0[17];
        uint64_t v56 = *(void *)(v17 + 72);
        unint64_t v25 = *(void (**)(uint64_t, unint64_t, uint64_t))(v17 + 16);
        v25(v24, v57[7] + v56 * v21, v23);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v23);
        uint64_t v3 = v57;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v24, 1, v23) != 1)
        {
          uint64_t v27 = v0[19];
          unint64_t v26 = v0[20];
          uint64_t v28 = v0[17];
          (*v54)(v26, v0[16], v28);
          v25(v27, v26, v28);
          BOOL v29 = *(void *)(v18 + *(int *)(v55 + 24) + 8) >> 60 != 15;
          int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v59[0] = v58;
          unint64_t v32 = sub_1007240CC(v27);
          uint64_t v33 = v58[2];
          BOOL v34 = (v31 & 1) == 0;
          uint64_t result = v33 + v34;
          if (__OFADD__(v33, v34))
          {
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
          char v35 = v31;
          if (v58[3] >= result)
          {
            if (isUniquelyReferenced_nonNull_native)
            {
              if ((v31 & 1) == 0) {
                goto LABEL_27;
              }
            }
            else
            {
              sub_100E7F8E0();
              uint64_t v58 = (void *)v59[0];
              if ((v35 & 1) == 0) {
                goto LABEL_27;
              }
            }
          }
          else
          {
            uint64_t v36 = v0[19];
            sub_100E67CB8(result, isUniquelyReferenced_nonNull_native);
            uint64_t v58 = (void *)v59[0];
            unint64_t v37 = sub_1007240CC(v36);
            if ((v35 & 1) != (v38 & 1))
            {
              return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
            }
            unint64_t v32 = v37;
            if ((v35 & 1) == 0)
            {
LABEL_27:
              uint64_t v40 = v0[19];
              uint64_t v41 = v0[17];
              v58[(v32 >> 6) + 8] |= 1 << v32;
              uint64_t result = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v25)(v58[6] + v32 * v56, v40, v41);
              *(unsigned char *)(v58[7] + v32) = v29;
              uint64_t v42 = v58[2];
              BOOL v43 = __OFADD__(v42, 1);
              uint64_t v44 = v42 + 1;
              if (v43) {
                goto LABEL_39;
              }
              uint64_t v39 = v58;
              v58[2] = v44;
              goto LABEL_29;
            }
          }
          uint64_t v39 = v58;
          *(unsigned char *)(v58[7] + v32) = v29;
LABEL_29:
          uint64_t v58 = v39;
          uint64_t v46 = v0[19];
          uint64_t v45 = v0[20];
          uint64_t v47 = v0[17];
          swift_bridgeObjectRelease();
          uint64_t v48 = *v51;
          (*v51)(v46, v47);
          v48(v45, v47);
          uint64_t v20 = v52;
          uint64_t v17 = v53;
          os_log_type_t v19 = v50;
          uint64_t v3 = v57;
          goto LABEL_14;
        }
      }
      else
      {
        (*v19)(v0[16], 1, 1, v0[17]);
      }
      sub_10001DAB4(v0[16], &qword_101638CF0);
LABEL_14:
      v18 += v20;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
  }
  uint64_t v58 = _swiftEmptyDictionarySingleton;
LABEL_32:
  sub_1001300CC(v0 + 2);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v49 = (uint64_t (*)(void *))v0[1];
  return v49(v58);
}

uint64_t sub_100C53788(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10000588C(&qword_101638CF0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v21 - v9;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v21 - v16;
  sub_100C276D0(a2);
  if (v2)
  {
    swift_errorRelease();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_10001DAB4((uint64_t)v10, &qword_101638CF0);
  }
  uint64_t v25 = a1;
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56);
  v24(v10, 0, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10001DAB4((uint64_t)v10, &qword_101638CF0);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
  os_log_type_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v21 = v12 + 16;
  uint64_t v23 = v19;
  v19(v15, (char *)a2, v11);
  if (qword_101636950 != -1) {
    swift_once();
  }
  sub_100010324(v11, (uint64_t)qword_10170DAA0);
  sub_100CBFAFC((unint64_t *)&qword_10163B8F0, (void (*)(uint64_t))&type metadata accessor for UUID);
  char v20 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v15, v11);
  if ((v20 & 1) == 0)
  {
    v23(v15, v17, v11);
    v23(v8, (char *)a2, v11);
    v24(v8, 0, 1, v11);
    sub_10015D7D8((uint64_t)v8, (uint64_t)v15);
  }
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v11);
}

uint64_t sub_100C53B0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[32] = a3;
  v4[33] = v3;
  v4[30] = a1;
  v4[31] = a2;
  v4[34] = type metadata accessor for BookmarkMetaData();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for KeyDropInterface.KeyAlignment(0);
  v4[38] = v5;
  v4[39] = *(void *)(v5 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = sub_10000588C(&qword_10163F7B0);
  v4[42] = swift_task_alloc();
  v4[43] = sub_10000588C((uint64_t *)&unk_101653D50);
  v4[44] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for SharedBeaconRecord(0);
  v4[45] = v6;
  v4[46] = *(void *)(v6 - 8);
  v4[47] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[48] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[49] = v8;
  v4[50] = *(void *)(v8 + 64);
  v4[51] = swift_task_alloc();
  v4[52] = swift_task_alloc();
  v4[53] = swift_task_alloc();
  v4[54] = swift_task_alloc();
  v4[55] = swift_task_alloc();
  v4[56] = swift_task_alloc();
  v4[57] = swift_task_alloc();
  return _swift_task_switch(sub_100C53D90, v3, 0);
}

uint64_t sub_100C53D90()
{
  uint64_t v27 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[56];
  uint64_t v2 = v0[57];
  uint64_t v4 = v0[48];
  uint64_t v5 = v0[49];
  uint64_t v6 = v0[31];
  uint64_t v7 = type metadata accessor for Logger();
  v0[58] = sub_100010324(v7, (uint64_t)qword_10170EB40);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[59] = v8;
  v0[60] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v8(v2, v6, v4);
  v8(v3, v1, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  BOOL v11 = os_log_type_enabled(v9, v10);
  uint64_t v13 = v0[56];
  uint64_t v12 = v0[57];
  uint64_t v14 = v0[48];
  uint64_t v15 = v0[49];
  if (v11)
  {
    uint64_t v25 = v0[56];
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 141558787;
    v0[26] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 12) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[27] = sub_1008FA0F0(v17, v18, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_log_type_t v19 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v19(v12, v14);
    *(_WORD *)(v16 + 22) = 2160;
    v0[28] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v16 + 32) = 2081;
    uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[29] = sub_1008FA0F0(v20, v21, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v19(v25, v14);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Downloaded key instructions for share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v16, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    char v22 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
    v22(v0[57], v0[48]);
    v22(v13, v14);
  }
  uint64_t v23 = *(void *)(v0[33] + 120);
  v0[61] = v23;
  return _swift_task_switch(sub_100C54110, v23, 0);
}

uint64_t sub_100C54110()
{
  *(void *)(v0 + 496) = *(void *)(*(void *)(v0 + 488) + 136);
  swift_retain();
  return _swift_task_switch(sub_100C54184, 0, 0);
}

uint64_t sub_100C54184()
{
  uint64_t v2 = v0[61];
  uint64_t v1 = v0[62];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[63] = v3;
  v3[2] = v1;
  v3[3] = sub_10001DAA0;
  v3[4] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[64] = v4;
  uint64_t v5 = type metadata accessor for BeaconKeyManager(0);
  *uint64_t v4 = v0;
  v4[1] = sub_100C54298;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 20, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001DD1C, v3, v5);
}

uint64_t sub_100C54298()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 488);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  *(void *)(v1 + 520) = *(void *)(v1 + 160);
  return _swift_task_switch(sub_100C543F4, v2, 0);
}

uint64_t sub_100C543F4()
{
  uint64_t v1 = v0[61];
  uint64_t v2 = (void (*)(uint64_t, uint64_t, uint64_t))v0[59];
  uint64_t v3 = v0[55];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[48];
  uint64_t v6 = v0[30];
  v0[66] = *(void *)(v1 + 136);
  v2(v3, v6, v5);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  v0[67] = v8;
  *(void *)(v8 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v8 + v7, v3, v5);
  swift_retain();
  return _swift_task_switch(sub_100C544E0, 0, 0);
}

uint64_t sub_100C544E0()
{
  uint64_t v1 = v0[67];
  uint64_t v2 = v0[66];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[68] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[69] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C545E8;
  uint64_t v6 = v0[43];
  uint64_t v5 = v0[44];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100091084, v3, v6);
}

uint64_t sub_100C545E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 264);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C54738, v1, 0);
}

uint64_t sub_100C54738()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 352);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 368) + 48))(v1, 1, *(void *)(v0 + 360)) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10001DAB4(v1, (uint64_t *)&unk_101653D50);
    sub_100130078();
    swift_allocError();
    *uint64_t v2 = 0;
    swift_willThrow();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 256);
  sub_100CBD1B4(v1, *(void *)(v0 + 376), type metadata accessor for SharedBeaconRecord);
  char v6 = *(unsigned char *)(v5 + 32);
  *(unsigned char *)(v0 + 728) = v6;
  uint64_t v7 = 1 << v6;
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(v5 + 56);
  *(void *)(v0 + 560) = OBJC_IVAR____TtC12searchpartyd16BeaconKeyManager_keyStore;
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    *(void *)(v0 + 568) = _swiftEmptyDictionarySingleton;
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      uint64_t v11 = *(void *)(v0 + 256);
      goto LABEL_24;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return _swift_task_switch(v11, v12, v13);
    }
    uint64_t v11 = *(void *)(v0 + 256);
    if (v17 >= v10) {
      goto LABEL_27;
    }
    uint64_t v18 = v11 + 56;
    unint64_t v19 = *(void *)(v11 + 56 + 8 * v17);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v10) {
        goto LABEL_27;
      }
      unint64_t v19 = *(void *)(v18 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v10) {
          goto LABEL_27;
        }
        unint64_t v19 = *(void *)(v18 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    *(void *)(v0 + 584) = v9;
    *(void *)(v0 + 576) = v14;
    int v21 = *(unsigned __int8 *)(*(void *)(v11 + 48) + v16);
    *(unsigned char *)(v0 + 729) = v21;
    if ((v21 - 7) >= 0xA && ((1 << v21) & 0x1C) == 0)
    {
      *(unsigned char *)(v0 + 730) = ((1 << v21) & 0x21) == 0;
      *(_DWORD *)(v0 + 720) = *(_DWORD *)(*(void *)(v0 + 360) + 20);
      char v22 = sub_100C54B98;
      goto LABEL_28;
    }
  }
  int64_t v20 = v17 + 3;
  if (v20 < v10)
  {
    unint64_t v19 = *(void *)(v18 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v14 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          goto LABEL_32;
        }
        if (v14 >= v10) {
          goto LABEL_27;
        }
        unint64_t v19 = *(void *)(v18 + 8 * v14);
        ++v20;
        if (v19) {
          goto LABEL_23;
        }
      }
    }
    int64_t v14 = v20;
    goto LABEL_23;
  }
LABEL_27:
  swift_release();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = _swiftEmptyDictionarySingleton;
  sub_100CB7FC4((uint64_t)_swiftEmptyDictionarySingleton, (uint64_t)sub_100CB7F4C, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v26);
  *(void *)(v0 + 656) = v26;
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 664) = v24;
  void *v24 = v0;
  v24[1] = sub_100C55C6C;
  uint64_t v25 = *(void *)(v0 + 264);
  v24[12] = *(void *)(v0 + 248);
  v24[13] = v25;
  v24[11] = v0 + 16;
  char v22 = sub_100C32ED8;
LABEL_28:
  uint64_t v11 = (uint64_t)v22;
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  return _swift_task_switch(v11, v12, v13);
}

uint64_t sub_100C54B98()
{
  uint64_t v1 = *(int *)(v0 + 720);
  uint64_t v2 = *(void *)(v0 + 376);
  uid_t v3 = getuid();
  sub_100DC5FC0(v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 592) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C54C60;
  uint64_t v5 = *(void *)(v0 + 432);
  char v6 = *(unsigned char *)(v0 + 730);
  return sub_100647ED8(v5, v2 + v1, v6);
}

uint64_t sub_100C54C60(uint64_t a1, uint64_t a2, char a3)
{
  char v6 = (void *)*v4;
  uint64_t v7 = (void *)*v4;
  v7[75] = a1;
  v7[76] = a2;
  v7[77] = v3;
  swift_task_dealloc();
  uint64_t v8 = v6[54];
  uint64_t v9 = v6[49];
  uint64_t v10 = v6[48];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v11 = sub_100C55198;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v13 = v7[33];
    *((unsigned char *)v7 + 731) = a3;
    int64_t v14 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v7[78] = v14;
    v7[79] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v14(v8, v10);
    uint64_t v11 = sub_100C54E18;
    uint64_t v12 = v13;
  }
  return _swift_task_switch(v11, v12, 0);
}

uint64_t sub_100C54E18(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = v3;
  if ((*(unsigned char *)(v3 + 731) & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 376);
    *(void *)(v3 + 104) = *(void *)(v3 + 360);
    *(void *)(v3 + 112) = sub_100CBFAFC(&qword_101639EA0, (void (*)(uint64_t))type metadata accessor for SharedBeaconRecord);
    uint64_t v5 = sub_10001D958((uint64_t *)(v3 + 80));
    sub_100CBD0EC(v4, (uint64_t)v5, type metadata accessor for SharedBeaconRecord);
    char v6 = (void *)swift_task_alloc();
    *(void *)(v3 + 640) = v6;
    *char v6 = v3;
    v6[1] = sub_100C55368;
    uint64_t v7 = *(void *)(v3 + 336);
    return sub_100C4EEFC(v7, v3 + 80);
  }
  uint64_t v9 = *(void *)(v3 + 616);
  uint64_t v10 = *(void *)(v3 + 568);
  unint64_t v11 = *(void *)(v3 + 584);
  int64_t v12 = *(void *)(v3 + 576);
  while (1)
  {
    *(void *)(v3 + 568) = v10;
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      a1 = *(uint64_t (**)())(v3 + 256);
      goto LABEL_22;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return _swift_task_switch(a1, a2, a3);
    }
    int64_t v16 = (unint64_t)((1 << *(unsigned char *)(v3 + 728)) + 63) >> 6;
    a1 = *(uint64_t (**)())(v3 + 256);
    if (v15 >= v16) {
      goto LABEL_25;
    }
    int64_t v17 = (char *)a1 + 56;
    unint64_t v18 = *((void *)a1 + v15 + 7);
    ++v12;
    if (!v18)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v16) {
        goto LABEL_25;
      }
      unint64_t v18 = *(void *)&v17[8 * v12];
      if (!v18)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v16) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)&v17[8 * v12];
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
    *(void *)(v3 + 584) = v11;
    *(void *)(v3 + 576) = v12;
    int v20 = *(unsigned __int8 *)(*((void *)a1 + 6) + v14);
    *(unsigned char *)(v3 + 729) = v20;
    if ((v20 - 7) >= 0xA && ((1 << v20) & 0x1C) == 0)
    {
      *(unsigned char *)(v3 + 730) = ((1 << v20) & 0x21) == 0;
      *(_DWORD *)(v3 + 720) = *(_DWORD *)(*(void *)(v3 + 360) + 20);
      int v21 = sub_100C54B98;
LABEL_30:
      a1 = v21;
      a2 = 0;
      a3 = 0;
      return _swift_task_switch(a1, a2, a3);
    }
  }
  int64_t v19 = v15 + 3;
  if (v19 < v16)
  {
    unint64_t v18 = *(void *)&v17[8 * v19];
    if (!v18)
    {
      while (1)
      {
        int64_t v12 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          goto LABEL_34;
        }
        if (v12 >= v16) {
          goto LABEL_25;
        }
        unint64_t v18 = *(void *)&v17[8 * v12];
        ++v19;
        if (v18) {
          goto LABEL_21;
        }
      }
    }
    int64_t v12 = v19;
    goto LABEL_21;
  }
LABEL_25:
  swift_release();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v25 = _swiftEmptyDictionarySingleton;
  sub_100CB7FC4(v10, (uint64_t)sub_100CB7F4C, 0, isUniquelyReferenced_nonNull_native, (uint64_t *)&v25);
  if (!v9)
  {
    *(void *)(v3 + 656) = v25;
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v3 + 664) = v23;
    *uint64_t v23 = v3;
    v23[1] = sub_100C55C6C;
    uint64_t v24 = *(void *)(v3 + 264);
    v23[12] = *(void *)(v3 + 248);
    v23[13] = v24;
    v23[11] = v3 + 16;
    int v21 = sub_100C32ED8;
    goto LABEL_30;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100C55198()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C55210, v1, 0);
}

uint64_t sub_100C55210()
{
  uint64_t v1 = *(void *)(v0 + 376);
  swift_release();
  swift_release();
  sub_100CBD154(v1, type metadata accessor for SharedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100C55368()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 648) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 264);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C56798;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 264);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 80);
    uint64_t v4 = sub_100C554A0;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C554A0()
{
  uint64_t v65 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 472);
  uint64_t v2 = *(void *)(v0 + 416);
  uint64_t v3 = *(void *)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 240);
  v1(*(void *)(v0 + 424), *(void *)(v0 + 248), v3);
  v1(v2, v4, v3);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  os_log_t log = v5;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v7 = *(void *)(v0 + 608);
    uint64_t v8 = *(void *)(v0 + 600);
    uint64_t v9 = *(void *)(v0 + 424);
    uint64_t v58 = *(void *)(v0 + 416);
    uint64_t v53 = *(void *)(v0 + 384);
    char v10 = *(unsigned char *)(v0 + 729);
    uint64_t v11 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136447491;
    unint64_t v12 = sub_1012638E4(v10);
    *(void *)(v0 + 136) = sub_1008FA0F0(v12, v13, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    *(void *)(v0 + 152) = v7;
    *(void *)(v0 + 144) = v8;
    *(void *)(v0 + 120) = 0;
    *(void *)(v0 + 128) = 0xE000000000000000;
    _print_unlocked<A, B>(_:_:)();
    v14._countAndFlagsBits = 3026478;
    v14._object = (void *)0xE300000000000000;
    String.append(_:)(v14);
    _print_unlocked<A, B>(_:_:)();
    *(void *)(v0 + 168) = sub_1008FA0F0(*(void *)(v0 + 120), *(void *)(v0 + 128), v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 22) = 2160;
    *(void *)(v0 + 176) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 32) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 184) = sub_1008FA0F0(v15, v16, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v55(v9, v53);
    *(_WORD *)(v11 + 42) = 2160;
    *(void *)(v0 + 192) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 52) = 2081;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 200) = sub_1008FA0F0(v17, v18, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v55(v58, v53);
    _os_log_impl((void *)&_mh_execute_header, log, v6, "Downloaded keys of type: %{public}s,\nfound %{public}s.\nShare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v11, 0x3Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    int64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 624);
    uint64_t v20 = *(void *)(v0 + 416);
    uint64_t v21 = *(void *)(v0 + 384);
    v19(*(void *)(v0 + 424), v21);
    v19(v20, v21);
  }
  uint64_t v59 = *(void *)(v0 + 600);
  uint64_t v60 = *(void *)(v0 + 608);
  char v22 = *(NSObject **)(v0 + 336);
  uint64_t v23 = *(void *)(v0 + 320);
  uint64_t v24 = *(void **)(v0 + 296);
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v57 = *(void *)(v0 + 288);
  uint64_t v52 = *(void *)(v0 + 272);
  uint64_t v54 = *(void *)(v0 + 312);
  uint64_t v26 = (char *)v22 + *(int *)(*(void *)(v0 + 328) + 36);
  *(void *)os_log_type_t type = *(void *)(v0 + 568);
  os_log_t loga = v22;
  char v56 = *(unsigned char *)(v0 + 729);
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 16);
  v28(v23, v26, v27);
  v29.uint64_t isa = v22->isa;
  v28(v23 + *(int *)(v25 + 24), v26, v27);
  *(v23 + *(int *)(v25 + 20)) = v29;
  uint64_t v30 = (uint64_t)v24 + *(int *)(v52 + 20);
  sub_100CBD0EC(v23, v30, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v30, 0, 1, v25);
  void *v24 = v59;
  v24[1] = v60;
  *((unsigned char *)v24 + *(int *)(v52 + 24)) = v56;
  sub_100CBD1B4((uint64_t)v24, v57, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v64[0] = *(void *)type;
  sub_10016C3C0(v57, v56, isUniquelyReferenced_nonNull_native);
  uint64_t v32 = v64[0];
  swift_bridgeObjectRelease();
  sub_100CBD154(v23, type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v33 = sub_10001DAB4((uint64_t)loga, &qword_10163F7B0);
  uint64_t v36 = *(void *)(v0 + 648);
  unint64_t v37 = *(void *)(v0 + 584);
  int64_t v38 = *(void *)(v0 + 576);
  while (1)
  {
    *(void *)(v0 + 568) = v32;
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v38 << 6);
      uint64_t v33 = *(void *)(v0 + 256);
      goto LABEL_21;
    }
    int64_t v41 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return _swift_task_switch(v33, v34, v35);
    }
    int64_t v42 = (unint64_t)((1 << *(unsigned char *)(v0 + 728)) + 63) >> 6;
    uint64_t v33 = *(void *)(v0 + 256);
    if (v41 >= v42) {
      goto LABEL_24;
    }
    uint64_t v43 = v33 + 56;
    unint64_t v44 = *(void *)(v33 + 56 + 8 * v41);
    ++v38;
    if (!v44)
    {
      int64_t v38 = v41 + 1;
      if (v41 + 1 >= v42) {
        goto LABEL_24;
      }
      unint64_t v44 = *(void *)(v43 + 8 * v38);
      if (!v44)
      {
        int64_t v38 = v41 + 2;
        if (v41 + 2 >= v42) {
          goto LABEL_24;
        }
        unint64_t v44 = *(void *)(v43 + 8 * v38);
        if (!v44) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v37 = (v44 - 1) & v44;
    unint64_t v40 = __clz(__rbit64(v44)) + (v38 << 6);
LABEL_21:
    *(void *)(v0 + 584) = v37;
    *(void *)(v0 + 576) = v38;
    int v46 = *(unsigned __int8 *)(*(void *)(v33 + 48) + v40);
    *(unsigned char *)(v0 + 729) = v46;
    if ((v46 - 7) >= 0xA && ((1 << v46) & 0x1C) == 0)
    {
      *(unsigned char *)(v0 + 730) = ((1 << v46) & 0x21) == 0;
      *(_DWORD *)(v0 + 720) = *(_DWORD *)(*(void *)(v0 + 360) + 20);
      uint64_t v47 = sub_100C54B98;
LABEL_29:
      uint64_t v33 = (uint64_t)v47;
      uint64_t v34 = 0;
      uint64_t v35 = 0;
      return _swift_task_switch(v33, v34, v35);
    }
  }
  int64_t v45 = v41 + 3;
  if (v45 < v42)
  {
    unint64_t v44 = *(void *)(v43 + 8 * v45);
    if (!v44)
    {
      while (1)
      {
        int64_t v38 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          goto LABEL_33;
        }
        if (v38 >= v42) {
          goto LABEL_24;
        }
        unint64_t v44 = *(void *)(v43 + 8 * v38);
        ++v45;
        if (v44) {
          goto LABEL_20;
        }
      }
    }
    int64_t v38 = v45;
    goto LABEL_20;
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRetain();
  char v48 = swift_isUniquelyReferenced_nonNull_native();
  v64[0] = (uint64_t)_swiftEmptyDictionarySingleton;
  sub_100CB7FC4(v32, (uint64_t)sub_100CB7F4C, 0, v48, v64);
  if (!v36)
  {
    *(void *)(v0 + 656) = v64[0];
    swift_bridgeObjectRelease();
    unint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 664) = v50;
    void *v50 = v0;
    v50[1] = sub_100C55C6C;
    uint64_t v51 = *(void *)(v0 + 264);
    v50[12] = *(void *)(v0 + 248);
    v50[13] = v51;
    v50[11] = v0 + 16;
    uint64_t v47 = sub_100C32ED8;
    goto LABEL_29;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100C55C6C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 672) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 264);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C568FC;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 264);
    uint64_t v4 = sub_100C55DA0;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100C55DA0()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 672);
  uint64_t v2 = *(void *)(v0 + 656);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100CB8CE0(_swiftEmptyDictionarySingleton, v4, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = v2;
  sub_100CB7FC4(v5, (uint64_t)sub_100CB7F4C, 0, isUniquelyReferenced_nonNull_native, &v12);
  if (v1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 256);
    uint64_t v9 = v12;
    *(void *)(v0 + 680) = v12;
    swift_bridgeObjectRelease();
    if (sub_100DC6BD8(9u, v8))
    {
      *(_DWORD *)(v0 + 724) = *(_DWORD *)(*(void *)(v0 + 360) + 20);
      return _swift_task_switch(sub_100C5602C, 0, 0);
    }
    else
    {
      swift_release();
      sub_1001300CC((uint64_t *)(v0 + 16));
      uint64_t v10 = *(void *)(v0 + 376);
      swift_bridgeObjectRelease();
      sub_100CBD154(v10, type metadata accessor for SharedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v11(v9);
    }
  }
}

uint64_t sub_100C5602C()
{
  uint64_t v1 = *(int *)(v0 + 724);
  uint64_t v2 = *(void *)(v0 + 376);
  uid_t v3 = getuid();
  sub_100DC5FC0(v3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 688) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C560F0;
  uint64_t v5 = *(void *)(v0 + 408);
  return sub_10064ACB8(v5, v2 + v1);
}

uint64_t sub_100C560F0(uint64_t a1, uint64_t a2, char a3)
{
  os_log_type_t v6 = (void *)*v4;
  uint64_t v7 = (void *)*v4;
  v7[87] = a1;
  v7[88] = a2;
  v7[89] = v3;
  swift_task_dealloc();
  uint64_t v8 = v6[51];
  uint64_t v9 = v6[49];
  uint64_t v10 = v6[48];
  if (v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v11 = sub_100C565C8;
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v13 = v7[33];
    *((unsigned char *)v7 + 732) = a3;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v11 = sub_100C56298;
    uint64_t v12 = v13;
  }
  return _swift_task_switch(v11, v12, 0);
}

uint64_t sub_100C56298()
{
  uint64_t v19 = v0;
  if (*(unsigned char *)(v0 + 732))
  {
    swift_release();
    sub_1001300CC((uint64_t *)(v0 + 16));
    uint64_t v17 = *(void *)(v0 + 680);
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 712);
    uint64_t v2 = *(void *)(v0 + 704);
    uint64_t v3 = *(void *)(v0 + 696);
    uint64_t v4 = *(void *)(v0 + 680);
    uint64_t v6 = *(void *)(v0 + 272);
    uint64_t v5 = *(char **)(v0 + 280);
    (*(void (**)(char *, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(&v5[*(int *)(v6 + 20)], 1, 1, *(void *)(v0 + 304));
    *(void *)uint64_t v5 = v3;
    *((void *)v5 + 1) = v2;
    v5[*(int *)(v6 + 24)] = 9;
    sub_10000588C(&qword_10165C198);
    uint64_t v7 = (int *)(sub_10000588C(&qword_101652468) - 8);
    unint64_t v8 = (*(unsigned __int8 *)(*(void *)v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_101342130;
    uint64_t v10 = v9 + v8 + v7[14];
    *(unsigned char *)(v9 + v8) = 9;
    sub_100CBD0EC((uint64_t)v5, v10, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    unint64_t v11 = sub_10092DA1C(v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = v4;
    sub_100CB7FC4(v11, (uint64_t)sub_100CB7F4C, 0, isUniquelyReferenced_nonNull_native, &v18);
    if (v1)
    {
      return swift_bridgeObjectRelease();
    }
    uint64_t v14 = *(void *)(v0 + 280);
    uint64_t v17 = v18;
    swift_bridgeObjectRelease();
    swift_release();
    sub_1001300CC((uint64_t *)(v0 + 16));
    sub_100CBD154(v14, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
  }
  uint64_t v15 = *(void *)(v0 + 376);
  swift_bridgeObjectRelease();
  sub_100CBD154(v15, type metadata accessor for SharedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v16(v17);
}

uint64_t sub_100C565C8()
{
  uint64_t v1 = *(void *)(v0 + 264);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100C56640, v1, 0);
}

uint64_t sub_100C56640()
{
  uint64_t v1 = v0[47];
  swift_release();
  sub_1001300CC(v0 + 2);
  sub_100CBD154(v1, type metadata accessor for SharedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100C56798()
{
  uint64_t v1 = *(void *)(v0 + 376);
  swift_release();
  swift_release();
  sub_100CBD154(v1, type metadata accessor for SharedBeaconRecord);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 80);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100C568FC()
{
  uint64_t v1 = *(void *)(v0 + 376);
  swift_release();
  sub_100CBD154(v1, type metadata accessor for SharedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100C56A48(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 72) = a2;
  *(void *)(v4 + 80) = v3;
  *(unsigned char *)(v4 + 148) = a3;
  *(void *)(v4 + 64) = a1;
  uint64_t v6 = type metadata accessor for MemberSharingCircle();
  *(void *)(v4 + 88) = v6;
  *(void *)(v4 + 96) = swift_task_alloc();
  uint64_t v7 = *(int *)(v6 + 24);
  *(_DWORD *)(v4 + 144) = v7;
  uint64_t v8 = a2 + v7;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 104) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_100C56B34;
  return sub_100C57618(v8);
}

uint64_t sub_100C56B34(char a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 32) = v1;
  *(unsigned char *)(v3 + 24) = a1;
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    uint64_t v7 = *(void *)(v3 + 80);
    return _swift_task_switch(sub_100C56C8C, v7, 0);
  }
}

uint64_t sub_100C56C8C()
{
  int v1 = *(unsigned __int8 *)(v0 + 148);
  uint64_t v2 = sub_100DF214C((uint64_t)&off_10159F900);
  *(void *)(v0 + 112) = v2;
  if (v1 == 1)
  {
    uint64_t v3 = (uint64_t)v2;
    uint64_t v4 = *(int *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v6 = v5 + *(int *)(*(void *)(v0 + 88) + 28);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100C56ED8;
    return sub_100C53B0C(v5 + v4, v6, v3);
  }
  else
  {
    unint64_t v9 = sub_10092DA1C((uint64_t)_swiftEmptyArrayStorage);
    char v21 = *(unsigned char *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 88);
    unint64_t v22 = v9;
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    uint64_t v19 = v11 + *(int *)(v0 + 144);
    uint64_t v20 = *(void *)(v0 + 112);
    uint64_t v13 = v11 + *(int *)(v10 + 28);
    uint64_t v14 = (int *)type metadata accessor for SharingCircleKeyManager.Instruction(0);
    uint64_t v15 = v12 + v14[5];
    uint64_t v16 = type metadata accessor for UUID();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
    v17(v15, v13, v16);
    v17(v12 + v14[6], v19, v16);
    v17(v12 + v14[7], v11 + *(int *)(v10 + 32), v16);
    UUID.init()();
    *(void *)(v12 + v14[8]) = v20;
    *(unsigned char *)(v12 + v14[9]) = v21;
    *(unsigned char *)(v12 + v14[10]) = 1;
    *(void *)(v12 + v14[11]) = v22;
    static Date.trustedNow.getter(v12 + v14[12]);
    swift_task_dealloc();
    uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18();
  }
}

uint64_t sub_100C56ED8(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[16] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[10];
  if (v1)
  {
    uint64_t v6 = sub_100C5719C;
  }
  else
  {
    v4[17] = a1;
    uint64_t v6 = sub_100C57014;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_100C57014()
{
  char v13 = *(unsigned char *)(v0 + 24);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 136);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v11 = v3 + *(int *)(v0 + 144);
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v4 = v3 + *(int *)(v1 + 28);
  uint64_t v5 = (int *)type metadata accessor for SharingCircleKeyManager.Instruction(0);
  uint64_t v6 = v2 + v5[5];
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(v6, v4, v7);
  v8(v2 + v5[6], v11, v7);
  v8(v2 + v5[7], v3 + *(int *)(v1 + 32), v7);
  UUID.init()();
  *(void *)(v2 + v5[8]) = v12;
  *(unsigned char *)(v2 + v5[9]) = v13;
  *(unsigned char *)(v2 + v5[10]) = 1;
  *(void *)(v2 + v5[11]) = v14;
  static Date.trustedNow.getter(v2 + v5[12]);
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100C5719C()
{
  uint64_t v28 = v0;
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = type metadata accessor for Logger();
  sub_100010324(v3, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v2, v1, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 96);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 141558531;
    *(void *)(v0 + 40) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v8 + 12) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 48) = sub_1008FA0F0(v9, v10, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v7, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v8 + 22) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 56) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v25 = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to retrieve existing keys for circle %{private,mask.hash}s, error: %@.", (uint8_t *)v8, 0x20u);
    sub_10000588C((uint64_t *)&unk_101638EA0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v0 + 96), (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    swift_errorRelease();
    swift_errorRelease();
  }

  unint64_t v26 = sub_10092DA1C((uint64_t)_swiftEmptyArrayStorage);
  swift_errorRelease();
  char v24 = *(unsigned char *)(v0 + 24);
  uint64_t v12 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 64);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v22 = v13 + *(int *)(v0 + 144);
  uint64_t v23 = *(void *)(v0 + 112);
  uint64_t v15 = v13 + *(int *)(v12 + 28);
  uint64_t v16 = (int *)type metadata accessor for SharingCircleKeyManager.Instruction(0);
  uint64_t v17 = v14 + v16[5];
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  v19(v17, v15, v18);
  v19(v14 + v16[6], v22, v18);
  v19(v14 + v16[7], v13 + *(int *)(v12 + 32), v18);
  UUID.init()();
  *(void *)(v14 + v16[8]) = v23;
  *(unsigned char *)(v14 + v16[9]) = v24;
  *(unsigned char *)(v14 + v16[10]) = 1;
  *(void *)(v14 + v16[11]) = v26;
  static Date.trustedNow.getter(v14 + v16[12]);
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_100C57618(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for SharedBeaconRecord(0);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  void v2[6] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v2[8] = v5;
  v2[9] = *(void *)(v5 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = sub_10000588C((uint64_t *)&unk_101653D50);
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_100C5778C, v1, 0);
}

uint64_t sub_100C5778C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 120);
  *(void *)(v0 + 120) = v1;
  return _swift_task_switch(sub_100C577B0, v1, 0);
}

uint64_t sub_100C577B0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v5 = v0[2];
  v0[16] = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  v0[17] = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_100C578A4, 0, 0);
}

uint64_t sub_100C578A4()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[18] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[19] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C579AC;
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100091084, v3, v6);
}

uint64_t sub_100C579AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C57AFC, v1, 0);
}

uint64_t sub_100C57AFC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[5];
  sub_10001D074(v0[14], v1, (uint64_t *)&unk_101653D50);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  int v5 = v4(v1, 1, v2);
  uint64_t v6 = v0[13];
  if (v5 == 1)
  {
    sub_10001DAB4(v6, (uint64_t *)&unk_101653D50);
LABEL_3:
    uint64_t v7 = v0[14];
    sub_100130078();
    swift_allocError();
    *uint64_t v8 = 17;
    swift_willThrow();
    sub_10001DAB4(v7, (uint64_t *)&unk_101653D50);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  uint64_t v11 = *(unsigned __int8 *)(v6 + *(int *)(v0[4] + 64));
  sub_100CBD154(v6, type metadata accessor for SharedBeaconRecord);
  switch(v11)
  {
    case 1:
    case 4:
      uint64_t v12 = v0[12];
      uint64_t v13 = v0[4];
      sub_10001D074(v0[14], v12, (uint64_t *)&unk_101653D50);
      if (v4(v12, 1, v13) == 1)
      {
        uint64_t v14 = v0[12];
        sub_10001DAB4(v0[14], (uint64_t *)&unk_101653D50);
        sub_10001DAB4(v14, (uint64_t *)&unk_101653D50);
LABEL_14:
        uint64_t v15 = 1;
        goto LABEL_15;
      }
      uint64_t v16 = v0[12];
      uint64_t v17 = *(void *)(v16 + *(int *)(v0[4] + 44));
      sub_100CBD0EC(v16, v0[6], type metadata accessor for SharedBeaconRecord);
      uint64_t v18 = v0[14];
      uint64_t v19 = v0[12];
      uint64_t v20 = v0[6];
      if (v17 != -1)
      {
        sub_100CBD154(v20, type metadata accessor for SharedBeaconRecord);
        sub_10001DAB4(v18, (uint64_t *)&unk_101653D50);
        sub_100CBD154(v19, type metadata accessor for SharedBeaconRecord);
        goto LABEL_14;
      }
      uint64_t v21 = *(void *)(v20 + *(int *)(v0[4] + 48));
      sub_100CBD154(v20, type metadata accessor for SharedBeaconRecord);
      sub_10001DAB4(v18, (uint64_t *)&unk_101653D50);
      sub_100CBD154(v19, type metadata accessor for SharedBeaconRecord);
      if (v21 != -1) {
        goto LABEL_14;
      }
      uint64_t v15 = 2;
LABEL_15:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
      return v22(v15);
    case 2:
      sub_10001DAB4(v0[14], (uint64_t *)&unk_101653D50);
      uint64_t v15 = 0;
      goto LABEL_15;
    case 3:
      sub_10001DAB4(v0[14], (uint64_t *)&unk_101653D50);
      uint64_t v15 = 3;
      goto LABEL_15;
    default:
      goto LABEL_3;
  }
}

uint64_t sub_100C57E74(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  v2[9] = type metadata accessor for MemberSharingCircle();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for UUID();
  v2[15] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[16] = v4;
  v2[17] = *(void *)(v4 + 64);
  v2[18] = swift_task_alloc();
  v2[19] = sub_10000588C((uint64_t *)&unk_101653D50);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  return _swift_task_switch(sub_100C57FF0, v1, 0);
}

uint64_t sub_100C57FF0()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(*(void *)(v0 + 64) + 120);
  *(void *)(v0 + 184) = v2;
  *(_DWORD *)(v0 + 224) = *(_DWORD *)(v1 + 24);
  return _swift_task_switch(sub_100C5801C, v2, 0);
}

uint64_t sub_100C5801C()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 56) + *(int *)(v0 + 224);
  *(void *)(v0 + 192) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 200) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v7 + v6, v2, v3);
  swift_retain();
  return _swift_task_switch(sub_100C58118, 0, 0);
}

uint64_t sub_100C58118()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[26] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBEEFC;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[27] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C58220;
  uint64_t v5 = v0[22];
  uint64_t v6 = v0[19];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_100075048, v3, v6);
}

uint64_t sub_100C58220()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C58370, v1, 0);
}

uint64_t sub_100C58370()
{
  unint64_t v50 = v0;
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[9];
  BOOL v6 = sub_100272E58(*(unsigned __int8 *)(v1 + *(int *)(v5 + 40)), (uint64_t)&off_10159F8B0);
  sub_10001D074(v2, v3, (uint64_t *)&unk_101653D50);
  sub_100CBD0EC(v1, v4, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v7 = v0[21];
  if (v6)
  {
    sub_100CBD154(v0[14], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_10001DAB4(v7, (uint64_t *)&unk_101653D50);
LABEL_3:
    sub_10001DAB4(v0[22], (uint64_t *)&unk_101653D50);
    uint64_t v8 = 1;
    goto LABEL_22;
  }
  uint64_t v9 = v0[20];
  sub_10001D074(v0[21], v9, (uint64_t *)&unk_101653D50);
  uint64_t v10 = type metadata accessor for SharedBeaconRecord(0);
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10);
  uint64_t v12 = v0[20];
  uint64_t v14 = v0[13];
  uint64_t v13 = v0[14];
  if (v11 == 1)
  {
    sub_10001DAB4(v12, (uint64_t *)&unk_101653D50);
    sub_100CBD0EC(v13, v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
LABEL_9:
    uint64_t v20 = v0[21];
    uint64_t v21 = v0[14];
    sub_100CBD154(v0[13], (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_100CBD154(v21, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_10001DAB4(v20, (uint64_t *)&unk_101653D50);
    goto LABEL_10;
  }
  int v15 = *(unsigned __int8 *)(v12 + *(int *)(v10 + 64));
  sub_100CBD154(v12, type metadata accessor for SharedBeaconRecord);
  sub_100CBD0EC(v13, v14, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  if (v15 != 4) {
    goto LABEL_9;
  }
  uint64_t v16 = v0[21];
  uint64_t v17 = v0[13];
  uint64_t v18 = v0[14];
  int v19 = *(unsigned __int8 *)(v17 + *(int *)(v5 + 40));
  sub_100CBD154(v17, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_100CBD154(v18, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_10001DAB4(v16, (uint64_t *)&unk_101653D50);
  if (v19 == 4) {
    goto LABEL_3;
  }
LABEL_10:
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v23 = v0[11];
  uint64_t v22 = v0[12];
  uint64_t v24 = v0[10];
  uint64_t v25 = v0[7];
  uint64_t v26 = type metadata accessor for Logger();
  sub_100010324(v26, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v25, v22, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_100CBD0EC(v25, v23, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  sub_100CBD0EC(v25, v24, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    os_log_type_t v48 = v28;
    uint64_t v29 = v0[12];
    uint64_t v46 = v0[11];
    uint64_t v30 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 141559043;
    v0[2] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 12) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_1008FA0F0(v31, v32, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v29, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v30 + 22) = 2082;
    unint64_t v33 = 0xEB00000000646574;
    uint64_t v34 = 0x70656363616E752ELL;
    switch(*(unsigned char *)(v46 + *(int *)(v5 + 40)))
    {
      case 1:
        unint64_t v33 = 0xE900000000000064;
        uint64_t v34 = 0x657470656363612ELL;
        break;
      case 2:
        unint64_t v33 = 0xEA00000000006465;
        uint64_t v34 = 0x747365757165722ELL;
        break;
      case 3:
        unint64_t v33 = 0xE500000000000000;
        uint64_t v34 = 0x746E65732ELL;
        break;
      case 4:
        unint64_t v33 = 0x80000001013F2860;
        uint64_t v34 = 0xD000000000000013;
        break;
      case 5:
        unint64_t v33 = 0xE700000000000000;
        uint64_t v34 = 0x64656C6961662ELL;
        break;
      default:
        break;
    }
    uint64_t v47 = v0[22];
    uint64_t v41 = v0[10];
    uint64_t v40 = v0[11];
    v0[4] = sub_1008FA0F0(v34, v33, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v40, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    *(_WORD *)(v30 + 32) = 2160;
    v0[5] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v30 + 42) = 2081;
    uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[6] = sub_1008FA0F0(v42, v43, &v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v41, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    _os_log_impl((void *)&_mh_execute_header, v27, v48, "Not allowed to download keys for circle: %{private,mask.hash}s, acceptanceState: %{public}s, beacon-id: %{private,mask.hash}s.", (uint8_t *)v30, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v39 = v47;
  }
  else
  {
    uint64_t v35 = v0[22];
    uint64_t v37 = v0[11];
    uint64_t v36 = v0[12];
    uint64_t v38 = v0[10];

    sub_100CBD154(v38, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_100CBD154(v37, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    sub_100CBD154(v36, (uint64_t (*)(void))type metadata accessor for MemberSharingCircle);
    uint64_t v39 = v35;
  }
  sub_10001DAB4(v39, (uint64_t *)&unk_101653D50);
  uint64_t v8 = 0;
LABEL_22:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v44 = (uint64_t (*)(uint64_t))v0[1];
  return v44(v8);
}

uint64_t sub_100C58AF4(uint64_t a1)
{
  v2[76] = v1;
  v2[75] = a1;
  uint64_t v3 = type metadata accessor for AES.GCM.Nonce();
  v2[77] = v3;
  v2[78] = *(void *)(v3 - 8);
  v2[79] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for P256.Signing.ECDSASignature();
  v2[80] = v4;
  v2[81] = *(void *)(v4 - 8);
  v2[82] = swift_task_alloc();
  sub_10000588C(&qword_10165C0E0);
  v2[83] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SymmetricKey();
  v2[84] = v5;
  v2[85] = *(void *)(v5 - 8);
  v2[86] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AES.GCM.SealedBox();
  v2[87] = v6;
  v2[88] = *(void *)(v6 - 8);
  v2[89] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for P256.Signing.PrivateKey();
  v2[90] = v7;
  v2[91] = *(void *)(v7 - 8);
  v2[92] = swift_task_alloc();
  v2[93] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for P256PrivateKey();
  v2[94] = v8;
  v2[95] = *(void *)(v8 - 8);
  v2[96] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  v2[97] = v9;
  v2[98] = *(void *)(v9 - 8);
  v2[99] = swift_task_alloc();
  v2[100] = swift_task_alloc();
  v2[101] = swift_task_alloc();
  v2[102] = swift_task_alloc();
  v2[103] = swift_task_alloc();
  v2[104] = swift_task_alloc();
  sub_10000588C(&qword_10165C0B8);
  v2[105] = swift_task_alloc();
  v2[106] = swift_task_alloc();
  v2[107] = swift_task_alloc();
  v2[108] = swift_task_alloc();
  v2[109] = swift_task_alloc();
  v2[110] = type metadata accessor for KeyDropInterface.KeyAlignment(0);
  v2[111] = swift_task_alloc();
  sub_10000588C(&qword_10163B070);
  v2[112] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SymmetricKey256();
  v2[113] = v10;
  v2[114] = *(void *)(v10 - 8);
  v2[115] = swift_task_alloc();
  sub_10000588C(&qword_10163F778);
  v2[116] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for KeyDropJoinToken(0);
  v2[117] = v11;
  v2[118] = *(void *)(v11 - 8);
  v2[119] = swift_task_alloc();
  v2[120] = swift_task_alloc();
  v2[121] = type metadata accessor for SharingCircleKeyManager.DelegatedKeychain(0);
  v2[122] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v2[123] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v2[124] = v13;
  v2[125] = *(void *)(v13 + 64);
  v2[126] = swift_task_alloc();
  v2[127] = sub_10000588C(&qword_10163B9F0);
  v2[128] = swift_task_alloc();
  uint64_t v14 = type metadata accessor for OwnedBeaconRecord();
  v2[129] = v14;
  v2[130] = *(void *)(v14 - 8);
  v2[131] = swift_task_alloc();
  v2[132] = swift_task_alloc();
  v2[133] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v2[134] = swift_task_alloc();
  v2[135] = swift_task_alloc();
  v2[136] = swift_task_alloc();
  v2[137] = swift_task_alloc();
  v2[138] = swift_task_alloc();
  v2[139] = swift_task_alloc();
  v2[140] = swift_task_alloc();
  v2[141] = swift_task_alloc();
  return _swift_task_switch(sub_100C591D8, v1, 0);
}

uint64_t sub_100C591D8()
{
  uint64_t v23 = v0;
  if (qword_101636B18 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 1128);
  uint64_t v2 = *(void *)(v0 + 1120);
  uint64_t v3 = *(void *)(v0 + 1112);
  uint64_t v4 = *(void *)(v0 + 600);
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v0 + 1136) = sub_100010324(v5, (uint64_t)qword_10170DED0);
  sub_100CBD0EC(v4, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v4, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v4, v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v9 = *(void *)(v0 + 1128);
  uint64_t v10 = *(void *)(v0 + 1120);
  uint64_t v11 = *(void *)(v0 + 1112);
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136447235;
    uint64_t v13 = sub_100C27BF0();
    *(void *)(v0 + 560) = sub_1008FA0F0(v13, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 12) = 2160;
    *(void *)(v0 + 568) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 22) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 576) = sub_1008FA0F0(v15, v16, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v12 + 32) = 2160;
    *(void *)(v0 + 584) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v12 + 42) = 2081;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 592) = sub_1008FA0F0(v17, v18, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Delegated keys to upload: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", (uint8_t *)v12, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v0 + 1128), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v10, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  }

  uint64_t v19 = *(void *)(v0 + 1064);
  uint64_t v20 = *(void *)(*(void *)(v0 + 608) + 120);
  *(void *)(v0 + 1144) = v20;
  *(_DWORD *)(v0 + 1264) = *(_DWORD *)(v19 + 24);
  return _swift_task_switch(sub_100C595E0, v20, 0);
}

uint64_t sub_100C595E0()
{
  uint64_t v1 = *(void *)(v0 + 1144);
  uint64_t v2 = *(void *)(v0 + 1008);
  uint64_t v3 = *(void *)(v0 + 992);
  uint64_t v4 = *(void *)(v0 + 984);
  uint64_t v5 = *(void *)(v0 + 600) + *(int *)(v0 + 1264);
  *(void *)(v0 + 1152) = *(void *)(v1 + 136);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 1160) = v7;
  *(void *)(v7 + 16) = v1;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  swift_retain();
  return _swift_task_switch(sub_100C596E4, 0, 0);
}

uint64_t sub_100C596E4()
{
  uint64_t v1 = v0[145];
  uint64_t v2 = v0[144];
  uint64_t v3 = (void *)swift_task_alloc();
  v0[146] = v3;
  v3[2] = v2;
  v3[3] = sub_100CBED88;
  v3[4] = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[147] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100C597F0;
  uint64_t v5 = v0[128];
  uint64_t v6 = v0[127];
  return withCheckedContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000012, 0x80000001013F1870, sub_10001D89C, v3, v6);
}

uint64_t sub_100C597F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 608);
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  return _swift_task_switch(sub_100C59940, v1, 0);
}

uint64_t sub_100C59940()
{
  uint64_t v1 = v0[128];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[130] + 48))(v1, 1, v0[129]) == 1)
  {
    sub_10001DAB4(v1, &qword_10163B9F0);
    sub_100130078();
    swift_allocError();
    *uint64_t v2 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[133];
    uint64_t v6 = v0[75];
    sub_100CBD1B4(v1, v0[132], (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v7 = v6 + *(int *)(v5 + 20);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[148] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100C59CDC;
    uint64_t v9 = v0[122];
    return sub_100C32964(v9, v7);
  }
}

uint64_t sub_100C59CDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 608);
  if (v0) {
    uint64_t v4 = sub_100C5D3A8;
  }
  else {
    uint64_t v4 = sub_100C59E08;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C59E08()
{
  uint64_t v129 = v0;
  uint64_t v1 = *(uint64_t **)(v0 + 976);
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 944);
    uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_100CBD0EC(v5, *(void *)(v0 + 952), type metadata accessor for KeyDropJoinToken);
      if (qword_101636950 != -1) {
        swift_once();
      }
      sub_100010324(*(void *)(v0 + 984), (uint64_t)qword_10170DAA0);
      char v7 = static UUID.== infix(_:_:)();
      uint64_t v8 = *(void *)(v0 + 952);
      if (v7) {
        break;
      }
      sub_100CBD154(v8, type metadata accessor for KeyDropJoinToken);
      v5 += v6;
      if (!--v3) {
        goto LABEL_9;
      }
    }
    sub_100CBD1B4(v8, *(void *)(v0 + 928), type metadata accessor for KeyDropJoinToken);
    uint64_t v9 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v9 = 1;
  }
  uint64_t v10 = *(void *)(v0 + 944);
  uint64_t v11 = *(void *)(v0 + 936);
  uint64_t v12 = *(void *)(v0 + 928);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v12, v9, 1, v11);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 928), &qword_10163F778);
LABEL_17:
    uint64_t v25 = *(void *)(v0 + 1056);
    uint64_t v26 = *(void *)(v0 + 976);
    sub_100130078();
    swift_allocError();
    *uint64_t v27 = 21;
    swift_willThrow();
    sub_100CBD154(v26, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    sub_100CBD154(v25, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v28 = *(uint64_t (**)(void))(v0 + 8);
    return v28();
  }
  uint64_t v13 = *(void *)(v0 + 976);
  uint64_t v14 = *(void *)(v0 + 968);
  uint64_t v15 = *(void *)(v0 + 912);
  uint64_t v16 = *(void *)(v0 + 904);
  uint64_t v17 = *(void *)(v0 + 896);
  sub_100CBD1B4(*(void *)(v0 + 928), *(void *)(v0 + 960), type metadata accessor for KeyDropJoinToken);
  sub_10001D074(v13 + *(int *)(v14 + 20), v17, &qword_10163B070);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v17, 1, v16) == 1)
  {
    uint64_t v18 = *(void *)(v0 + 896);
    sub_100CBD154(*(void *)(v0 + 960), type metadata accessor for KeyDropJoinToken);
    sub_10001DAB4(v18, &qword_10163B070);
    goto LABEL_17;
  }
  uint64_t v19 = *(void *)(v0 + 976);
  uint64_t v20 = *(void *)(v0 + 968);
  (*(void (**)(void, void, void))(*(void *)(v0 + 912) + 32))(*(void *)(v0 + 920), *(void *)(v0 + 896), *(void *)(v0 + 904));
  uint64_t v21 = (uint64_t *)(v19 + *(int *)(v20 + 24));
  uint64_t v22 = *v21;
  *(void *)(v0 + 1200) = *v21;
  unint64_t v23 = v21[1];
  *(void *)(v0 + 1208) = v23;
  if (v23 >> 60 == 15)
  {
    uint64_t v24 = *(void *)(v0 + 960);
    (*(void (**)(void, void))(*(void *)(v0 + 912) + 8))(*(void *)(v0 + 920), *(void *)(v0 + 904));
    sub_100CBD154(v24, type metadata accessor for KeyDropJoinToken);
    goto LABEL_17;
  }
  uint64_t v30 = v0 + 88;
  uint64_t v31 = *(void *)(v0 + 1064);
  uint64_t v32 = *(void *)(v0 + 888);
  uint64_t v33 = *(void *)(v0 + 880);
  uint64_t v34 = *(void *)(v0 + 600);
  sub_1000361E0(v22, v23);
  static Date.trustedNow.getter(v32);
  static Date.trustedNow.getter(v32 + *(int *)(v33 + 24));
  *(void *)(v32 + *(int *)(v33 + 20)) = 1;
  uint64_t v35 = *(void *)(v34 + *(int *)(v31 + 32));
  *(void *)(v0 + 1216) = v35;
  char v36 = *(unsigned char *)(v35 + 32);
  *(unsigned char *)(v0 + 1268) = v36;
  uint64_t v37 = 1 << v36;
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  else {
    uint64_t v38 = -1;
  }
  unint64_t v39 = v38 & *(void *)(v35 + 56);
  uint64_t v40 = v0 + 560;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v41 = 0;
  uint64_t v42 = _swiftEmptyArrayStorage;
  unint64_t v43 = (char *)&type metadata for Any + 8;
LABEL_24:
  *(void *)(v0 + 1224) = v42;
  while (v39)
  {
    unint64_t v44 = __clz(__rbit64(v39));
    v39 &= v39 - 1;
    unint64_t v45 = v44 | (v41 << 6);
    uint64_t v46 = *(void *)(v0 + 1216);
LABEL_38:
    *(void *)(v0 + 1240) = v39;
    *(void *)(v0 + 1232) = v41;
    int v52 = *(unsigned __int8 *)(*(void *)(v46 + 48) + v45);
    if (v52 == 15)
    {
      uint64_t v101 = (void *)swift_task_alloc();
      *(void *)(v0 + 1248) = v101;
      void *v101 = v0;
      v101[1] = sub_100C5AF28;
      uint64_t v102 = *(void *)(v0 + 1056);
      return sub_100CA24D0(v30, v102);
    }
    if (v52 == 14)
    {
      uint64_t v116 = v43;
      uint64_t v117 = v40;
      uint64_t v118 = v30;
      unint64_t v125 = (unint64_t)v42;
      unint64_t v53 = *(void *)(v0 + 1208);
      uint64_t v54 = *(void *)(v0 + 1200);
      uint64_t v55 = *(void *)(v0 + 872);
      uint64_t v56 = *(void *)(v0 + 864);
      uint64_t v57 = type metadata accessor for EncryptedData();
      uint64_t v58 = *(void *)(v57 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v55, 1, 1, v57);
      sub_10001D074(v55, v56, &qword_10165C0B8);
      uint64_t v59 = v56;
      uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
      int v61 = v60(v59, 1, v57);
      sub_100037A38(v54, v53);
      sub_1000361E0(v54, v53);
      uint64_t v62 = *(void *)(v0 + 864);
      if (v61 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 864), &qword_10165C0B8);
        uint64_t v123 = 0;
        unint64_t v124 = 0xF000000000000000;
      }
      else
      {
        uint64_t v123 = EncryptedData.cipherText.getter();
        unint64_t v124 = v63;
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v62, v57);
      }
      uint64_t v64 = *(void *)(v0 + 856);
      sub_10001D074(*(void *)(v0 + 872), v64, &qword_10165C0B8);
      int v65 = v60(v64, 1, v57);
      uint64_t v66 = *(void *)(v0 + 856);
      if (v65 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 856), &qword_10165C0B8);
        uint64_t v121 = 0;
        unint64_t v122 = 0xF000000000000000;
      }
      else
      {
        uint64_t v121 = EncryptedData.initializationVector.getter();
        unint64_t v122 = v67;
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v66, v57);
      }
      uint64_t v68 = *(void *)(v0 + 848);
      sub_10001D074(*(void *)(v0 + 872), v68, &qword_10165C0B8);
      int v69 = v60(v68, 1, v57);
      unint64_t v70 = *(void *)(v0 + 1208);
      uint64_t v71 = *(void *)(v0 + 1200);
      uint64_t v72 = *(void *)(v0 + 872);
      uint64_t v73 = *(void *)(v0 + 848);
      if (v69 == 1)
      {
        sub_100037A24(*(void *)(v0 + 1200), *(void *)(v0 + 1208));
        sub_10001DAB4(v72, &qword_10165C0B8);
        sub_10001DAB4(v73, &qword_10165C0B8);
        uint64_t v119 = 0;
        unint64_t v120 = 0xF000000000000000;
      }
      else
      {
        uint64_t v119 = EncryptedData.tag.getter();
        unint64_t v120 = v74;
        sub_100037A24(v71, v70);
        sub_10001DAB4(v72, &qword_10165C0B8);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v73, v57);
      }
      unint64_t v75 = *(void *)(v0 + 1208);
      uint64_t v76 = *(void *)(v0 + 1200);
      uint64_t v77 = *(unsigned char **)(v0 + 832);
      uint64_t v112 = *(void *)(v0 + 776);
      uint64_t v114 = *(void *)(v0 + 824);
      sub_100CBD0EC(*(void *)(v0 + 888), (uint64_t)&v77[*(int *)(v112 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_10000588C(&qword_101657A00);
      uint64_t v78 = swift_allocObject();
      *(_OWORD *)(v78 + 16) = xmmword_101342130;
      *(void *)(v78 + 32) = 1;
      *(void *)(v78 + 40) = v76;
      *(void *)(v78 + 48) = v75;
      *(void *)(v78 + 56) = v123;
      *(void *)(v78 + 64) = v124;
      *(void *)(v78 + 72) = v121;
      *(void *)(v78 + 80) = v122;
      *(void *)(v78 + 88) = v119;
      *(void *)(v78 + 96) = v120;
      unsigned char *v77 = 14;
      *(void *)&v77[*(int *)(v112 + 24)] = v78;
      sub_100CBD0EC((uint64_t)v77, v114, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_1000361E0(v76, v75);
      sub_100037A38(v123, v124);
      sub_100037A38(v121, v122);
      sub_100037A38(v119, v120);
      unint64_t v79 = v125;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v79 = sub_100A6F328(0, *(void *)(v125 + 16) + 1, 1, v125);
      }
      unint64_t v81 = *(void *)(v79 + 16);
      unint64_t v80 = *(void *)(v79 + 24);
      if (v81 >= v80 >> 1) {
        uint64_t v126 = sub_100A6F328(v80 > 1, v81 + 1, 1, v79);
      }
      else {
        uint64_t v126 = v79;
      }
      uint64_t v82 = *(void *)(v0 + 1104);
      uint64_t v83 = *(void *)(v0 + 832);
      uint64_t v84 = *(void *)(v0 + 824);
      uint64_t v85 = *(void *)(v0 + 816);
      uint64_t v86 = *(void *)(v0 + 784);
      uint64_t v87 = *(void *)(v0 + 600);
      *(void *)(v126 + 16) = v81 + 1;
      sub_100CBD1B4(v84, v126+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v81, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD0EC(v87, v82, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v83, v85, type metadata accessor for KeyDropInterface.KeyPackage);
      unint64_t v88 = Logger.logObject.getter();
      os_log_type_t v89 = static os_log_type_t.default.getter();
      BOOL v90 = os_log_type_enabled(v88, v89);
      unint64_t v91 = *(void *)(v0 + 1208);
      uint64_t v92 = *(void *)(v0 + 1200);
      uint64_t v93 = *(void *)(v0 + 1104);
      uint64_t v94 = *(void *)(v0 + 832);
      uint64_t v95 = *(void *)(v0 + 816);
      if (v90)
      {
        uint64_t v115 = *(void *)(v0 + 832);
        uint64_t v96 = swift_slowAlloc();
        v128[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v96 = 136446466;
        unint64_t v113 = v91;
        uint64_t v97 = sub_100C27BF0();
        *(void *)(v0 + 544) = sub_1008FA0F0(v97, v98, v128);
        os_log_type_t type = v89;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v93, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v96 + 12) = 2082;
        uint64_t v99 = sub_101264DA0();
        *(void *)(v0 + 552) = sub_1008FA0F0(v99, v100, v128);
        uint64_t v40 = v117;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v95, type metadata accessor for KeyDropInterface.KeyPackage);
        _os_log_impl((void *)&_mh_execute_header, v88, type, "Keys to upload: %{public}s,\nadded: %{public}s.", (uint8_t *)v96, 0x16u);
        unint64_t v43 = v116;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_10001CFB8(v92, v113);
        sub_100037A24(v123, v124);
        sub_100037A24(v121, v122);
        sub_100037A24(v119, v120);
        uint64_t result = sub_100CBD154(v115, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v42 = (void *)v126;
        uint64_t v30 = v118;
      }
      else
      {

        sub_100CBD154(v95, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100CBD154(v93, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_10001CFB8(v92, v91);
        sub_100037A24(v123, v124);
        sub_100037A24(v121, v122);
        sub_100037A24(v119, v120);
        uint64_t result = sub_100CBD154(v94, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v42 = (void *)v126;
        uint64_t v40 = v117;
        uint64_t v30 = v118;
        unint64_t v43 = v116;
      }
      goto LABEL_24;
    }
  }
  if (__OFADD__(v41++, 1))
  {
    __break(1u);
LABEL_69:
    __break(1u);
    return result;
  }
  int64_t v48 = (unint64_t)((1 << *(unsigned char *)(v0 + 1268)) + 63) >> 6;
  uint64_t v46 = *(void *)(v0 + 1216);
  if (v41 >= v48) {
    goto LABEL_65;
  }
  uint64_t v49 = v46 + 56;
  unint64_t v50 = *(void *)(v46 + 56 + 8 * v41);
  if (v50)
  {
LABEL_37:
    unint64_t v39 = (v50 - 1) & v50;
    unint64_t v45 = __clz(__rbit64(v50)) + (v41 << 6);
    goto LABEL_38;
  }
  int64_t v51 = v41 + 1;
  if (v41 + 1 >= v48) {
    goto LABEL_65;
  }
  unint64_t v50 = *(void *)(v49 + 8 * v51);
  if (v50) {
    goto LABEL_36;
  }
  int64_t v51 = v41 + 2;
  if (v41 + 2 >= v48) {
    goto LABEL_65;
  }
  unint64_t v50 = *(void *)(v49 + 8 * v51);
  if (v50)
  {
LABEL_36:
    int64_t v41 = v51;
    goto LABEL_37;
  }
  int64_t v51 = v41 + 3;
  if (v41 + 3 < v48)
  {
    unint64_t v50 = *(void *)(v49 + 8 * v51);
    if (!v50)
    {
      while (1)
      {
        int64_t v41 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_69;
        }
        if (v41 >= v48) {
          goto LABEL_65;
        }
        unint64_t v50 = *(void *)(v49 + 8 * v41);
        ++v51;
        if (v50) {
          goto LABEL_37;
        }
      }
    }
    goto LABEL_36;
  }
LABEL_65:
  uint64_t v127 = v42;
  uint64_t v103 = *(void *)(v0 + 1056);
  uint64_t v104 = *(void *)(v0 + 976);
  uint64_t v105 = *(void *)(v0 + 960);
  uint64_t v106 = *(void *)(v0 + 920);
  uint64_t v107 = *(void *)(v0 + 912);
  uint64_t v108 = *(void *)(v0 + 904);
  uint64_t v109 = *(void *)(v0 + 888);
  sub_100037A24(*(void *)(v0 + 1200), *(void *)(v0 + 1208));
  swift_release();
  sub_100CBD154(v109, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v106, v108);
  sub_100CBD154(v105, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v104, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  sub_100CBD154(v103, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v110 = *(uint64_t (**)(void *))(v0 + 8);
  return v110(v127);
}

uint64_t sub_100C5AF28()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 608);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_100C5D644;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 608);
    uint64_t v4 = sub_100C5B050;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_100C5B050()
{
  uint64_t v239 = v0;
  uint64_t v1 = (_OWORD *)(v0 + 88);
  sub_100CBD0EC(*(void *)(v0 + 1056), *(void *)(v0 + 1048), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_100CBEDA0(v0 + 88);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v229 = *(void *)(v0 + 1048);
    uint64_t v4 = swift_slowAlloc();
    v238[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315651;
    uint64_t v5 = *(void *)(v0 + 104);
    unint64_t v6 = *(void *)(v0 + 112);
    swift_bridgeObjectRetain();
    uint64_t v7 = v5;
    uint64_t v1 = (_OWORD *)(v0 + 88);
    *(void *)(v0 + 520) = sub_1008FA0F0(v7, v6, v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBEDF8(v0 + 88);
    *(_WORD *)(v4 + 12) = 2160;
    *(void *)(v0 + 528) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 22) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 536) = sub_1008FA0F0(v8, v9, v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v229, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sending product data %s for beacon id %{private,mask.hash}s", (uint8_t *)v4, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 1048);
    sub_100CBEDF8(v0 + 88);
    sub_100CBD154(v10, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }

  uint64_t v11 = *(void *)(v0 + 1256);
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  long long v12 = v1[1];
  *(_OWORD *)(v0 + 216) = *v1;
  *(_OWORD *)(v0 + 232) = v12;
  long long v13 = v1[3];
  *(_OWORD *)(v0 + 248) = v1[2];
  *(_OWORD *)(v0 + 264) = v13;
  sub_100CBEE50();
  uint64_t v14 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  if (v11)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_100CBEDF8((uint64_t)v1);
LABEL_7:
    uint64_t v28 = *(void *)(v0 + 1080);
    uint64_t v29 = *(void *)(v0 + 1072);
    uint64_t v30 = *(void *)(v0 + 600);
    sub_100CBD0EC(v30, *(void *)(v0 + 1088), type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v30, v28, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    uint64_t v235 = v31;
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v34 = *(void *)(v0 + 1088);
    uint64_t v35 = *(void *)(v0 + 1080);
    uint64_t v36 = *(void *)(v0 + 1072);
    if (v33)
    {
      uint64_t v37 = swift_slowAlloc();
      v238[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 136447747;
      uint64_t v38 = sub_100C27BF0();
      *(void *)(v0 + 496) = sub_1008FA0F0(v38, v39, v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v34, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v37 + 12) = 2082;
      unint64_t v40 = sub_1012638E4(15);
      *(void *)(v0 + 480) = sub_1008FA0F0(v40, v41, v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2160;
      *(void *)(v0 + 440) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 32) = 2081;
      sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 456) = sub_1008FA0F0(v42, v43, v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v35, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v37 + 42) = 2160;
      *(void *)(v0 + 472) = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v37 + 52) = 2081;
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 488) = sub_1008FA0F0(v44, v45, v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100CBD154(v36, type metadata accessor for SharingCircleKeyManager.Instruction);
      *(_WORD *)(v37 + 62) = 2082;
      swift_getErrorValue();
      uint64_t v46 = Error.localizedDescription.getter();
      *(void *)(v0 + 448) = sub_1008FA0F0(v46, v47, v238);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v235, v32, "Delegated keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", (uint8_t *)v37, 0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100CBD154(v34, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v35, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD154(v36, type metadata accessor for SharingCircleKeyManager.Instruction);
      swift_errorRelease();
      swift_errorRelease();
    }

    unint64_t v48 = *(void *)(v0 + 1208);
    uint64_t v49 = *(void *)(v0 + 1200);
    uint64_t v232 = *(void *)(v0 + 976);
    uint64_t v236 = *(void *)(v0 + 1056);
    uint64_t v50 = *(void *)(v0 + 960);
    uint64_t v51 = *(void *)(v0 + 920);
    uint64_t v52 = *(void *)(v0 + 912);
    uint64_t v53 = *(void *)(v0 + 904);
    uint64_t v54 = *(void *)(v0 + 888);
    swift_willThrow();
    sub_100037A24(v49, v48);
    swift_release();
    sub_100CBD154(v54, type metadata accessor for KeyDropInterface.KeyAlignment);
    (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v51, v53);
    sub_100CBD154(v50, type metadata accessor for KeyDropJoinToken);
    sub_100CBD154(v232, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
    sub_100CBD154(v236, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v55 = *(uint64_t (**)(void))(v0 + 8);
    return v55();
  }
  uint64_t v16 = v14;
  unint64_t v17 = v15;
  uint64_t v18 = *(void *)(v0 + 960);
  uint64_t v19 = *(void *)(v0 + 936);
  sub_100CBEDF8((uint64_t)v1);
  uint64_t v20 = (uint64_t *)(v18 + *(int *)(v19 + 20));
  uint64_t v21 = *v20;
  unint64_t v22 = v20[1];
  *(void *)(v0 + 424) = *v20;
  *(void *)(v0 + 432) = v22;
  sub_1000361E0(v21, v22);
  P256.Signing.PrivateKey.init<A>(rawRepresentation:)();
  v230 = v1;
  uint64_t v23 = v16;
  uint64_t v24 = *(void *)(v0 + 744);
  uint64_t v25 = *(void *)(v0 + 728);
  uint64_t v26 = *(void *)(v0 + 720);
  P256.Signing.PrivateKey.rawRepresentation.getter();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
  v27(v24, v26);
  P256PrivateKey.init(data:)();
  long long v225 = v27;
  uint64_t v57 = *(void *)(v0 + 664);
  uint64_t v58 = *(void *)(v0 + 624);
  uint64_t v59 = *(void *)(v0 + 616);
  uint64_t v60 = v23;
  *(void *)(v0 + 408) = v23;
  *(void *)(v0 + 416) = v17;
  sub_100CBFAFC(&qword_10163AFF8, (void (*)(uint64_t))&type metadata accessor for SymmetricKey256);
  *(void *)(v0 + 392) = KeyRepresenting.rawValue.getter();
  *(void *)(v0 + 400) = v61;
  SymmetricKey.init<A>(data:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v57, 1, 1, v59);
  sub_1000362FC();
  static AES.GCM.seal<A>(_:using:nonce:)();
  unint64_t v228 = v17;
  uint64_t v62 = *(void *)(v0 + 688);
  uint64_t v63 = *(void *)(v0 + 680);
  uint64_t v64 = *(void *)(v0 + 672);
  sub_10001DAB4(*(void *)(v0 + 664), &qword_10165C0E0);
  (*(void (**)(uint64_t, uint64_t))(v63 + 8))(v62, v64);
  uint64_t v65 = AES.GCM.SealedBox.combined.getter();
  if (v66 >> 60 == 15)
  {
    uint64_t v237 = *(void *)(v0 + 768);
    uint64_t v67 = *(void *)(v0 + 760);
    uint64_t v68 = *(void *)(v0 + 752);
    uint64_t v69 = *(void *)(v0 + 712);
    uint64_t v70 = *(void *)(v0 + 704);
    uint64_t v71 = *(void *)(v0 + 696);
    swift_bridgeObjectRelease();
    sub_100130078();
    swift_allocError();
    unsigned char *v72 = 22;
    swift_willThrow();
    sub_10001CFB8(v23, v228);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v237, v68);
    goto LABEL_7;
  }
  unint64_t v73 = v66;
  uint64_t v227 = v65;
  sub_100CBFAFC(&qword_10163AFF0, (void (*)(uint64_t))&type metadata accessor for P256PrivateKey);
  *(void *)(v0 + 376) = KeyRepresenting.rawValue.getter();
  *(void *)(v0 + 384) = v74;
  P256.Signing.PrivateKey.init<A>(rawRepresentation:)();
  uint64_t result = AES.GCM.SealedBox.combined.getter();
  if (v75 >> 60 == 15)
  {
    __break(1u);
    return result;
  }
  uint64_t v76 = result;
  unint64_t v77 = v75;
  unint64_t v224 = v73;
  *(void *)(v0 + 344) = result;
  *(void *)(v0 + 352) = v75;
  P256.Signing.PrivateKey.signature<A>(for:)();
  uint64_t v78 = *(void *)(v0 + 656);
  uint64_t v79 = *(void *)(v0 + 648);
  uint64_t v80 = *(void *)(v0 + 640);
  uint64_t v208 = *(void *)(v0 + 632);
  uint64_t v211 = *(void *)(v0 + 624);
  uint64_t v81 = *(void *)(v0 + 616);
  sub_100037A24(v76, v77);
  uint64_t v223 = P256.Signing.ECDSASignature.rawRepresentation.getter();
  unint64_t v83 = v82;
  (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v80);
  unint64_t v218 = v83;
  sub_1000361E0(v223, v83);
  uint64_t v219 = AES.GCM.SealedBox.ciphertext.getter();
  unint64_t v220 = v84;
  uint64_t v221 = AES.GCM.SealedBox.tag.getter();
  v222 = v85;
  AES.GCM.SealedBox.nonce.getter();
  *(void *)(v0 + 304) = v81;
  *(void *)(v0 + 312) = sub_100CBFAFC(&qword_10165C0E8, (void (*)(uint64_t))&type metadata accessor for AES.GCM.Nonce);
  uint64_t v86 = sub_10001D958((uint64_t *)(v0 + 280));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v211 + 16))(v86, v208, v81);
  sub_10001CD44((void *)(v0 + 280), *(void *)(v0 + 304));
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v208, v81);
  uint64_t v87 = *(void *)(v0 + 360);
  unint64_t v88 = *(void *)(v0 + 368);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 280);
  *(void *)(v0 + 152) = v223;
  *(void *)(v0 + 160) = v218;
  *(void *)(v0 + 168) = v219;
  *(void *)(v0 + 176) = v220;
  *(void *)(v0 + 184) = v221;
  *(void *)(v0 + 192) = v222;
  *(void *)(v0 + 200) = v87;
  *(void *)(v0 + 208) = v88;
  sub_100CBEEA4();
  uint64_t v89 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  uint64_t v212 = v87;
  unint64_t type = v88;
  uint64_t v90 = *(void *)(v0 + 840);
  unint64_t v91 = *(unsigned char **)(v0 + 808);
  uint64_t v203 = *(void *)(v0 + 888);
  uint64_t v205 = *(void *)(v0 + 800);
  uint64_t v92 = *(void *)(v0 + 776);
  uint64_t v93 = v89;
  unint64_t v95 = v94;
  uint64_t v96 = type metadata accessor for EncryptedData();
  uint64_t v209 = *(char **)(v96 - 8);
  uint64_t v210 = v96;
  uint64_t v194 = (void (*)(uint64_t, uint64_t, uint64_t))*((void *)v209 + 7);
  v194(v90, 1, 1);
  sub_1000361E0(v93, v95);
  uint64_t v206 = v93;
  unint64_t v207 = v95;
  sub_101268234(1, v93, v95, v90, (void *)(v0 + 16));
  sub_100CBD0EC(v203, (uint64_t)&v91[*(int *)(v92 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_10000588C(&qword_101657A00);
  uint64_t v97 = swift_allocObject();
  long long v98 = *(_OWORD *)(v0 + 48);
  long long v99 = *(_OWORD *)(v0 + 64);
  long long v100 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v97 + 48) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v97 + 64) = v98;
  *(_OWORD *)(v97 + 80) = v99;
  *(void *)(v97 + 96) = *(void *)(v0 + 80);
  *(_OWORD *)(v97 + 16) = xmmword_101342130;
  *(_OWORD *)(v97 + 32) = v100;
  *unint64_t v91 = 15;
  *(void *)&v91[*(int *)(v92 + 24)] = v97;
  sub_100CBD0EC((uint64_t)v91, v205, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBE5B0((void *)(v0 + 16), (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v102 = *(void *)(v0 + 1224);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
LABEL_68:
  }
    unint64_t v102 = sub_100A6F328(0, *(void *)(v102 + 16) + 1, 1, v102);
  unint64_t v104 = *(void *)(v102 + 16);
  unint64_t v103 = *(void *)(v102 + 24);
  if (v104 >= v103 >> 1) {
    unint64_t v102 = sub_100A6F328(v103 > 1, v104 + 1, 1, v102);
  }
  uint64_t v105 = *(void *)(v0 + 1096);
  uint64_t v106 = *(void *)(v0 + 808);
  uint64_t v107 = *(void *)(v0 + 800);
  uint64_t v108 = *(void *)(v0 + 792);
  uint64_t v109 = *(void *)(v0 + 784);
  uint64_t v110 = *(void *)(v0 + 600);
  *(void *)(v102 + 16) = v104 + 1;
  unint64_t v214 = v102;
  sub_100CBD1B4(v107, v102+ ((*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80))+ *(void *)(v109 + 72) * v104, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD0EC(v110, v105, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v106, v108, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v111 = Logger.logObject.getter();
  os_log_type_t v112 = static os_log_type_t.default.getter();
  BOOL v113 = os_log_type_enabled(v111, v112);
  uint64_t v114 = *(void *)(v0 + 1096);
  uint64_t v115 = *(void *)(v0 + 768);
  uint64_t v195 = *(void *)(v0 + 792);
  uint64_t v196 = *(void *)(v0 + 760);
  uint64_t v198 = *(void *)(v0 + 736);
  uint64_t v199 = *(void *)(v0 + 808);
  uint64_t v197 = *(void *)(v0 + 720);
  uint64_t v202 = *(void *)(v0 + 704);
  uint64_t v204 = *(void *)(v0 + 752);
  uint64_t v200 = *(void *)(v0 + 696);
  uint64_t v201 = *(void *)(v0 + 712);
  if (v113)
  {
    os_log_t log = v111;
    uint64_t v116 = swift_slowAlloc();
    v238[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v116 = 136446466;
    uint64_t v117 = sub_100C27BF0();
    *(void *)(v0 + 504) = sub_1008FA0F0(v117, v118, v238);
    os_log_type_t v233 = v112;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v114, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v116 + 12) = 2082;
    uint64_t v119 = sub_101264DA0();
    *(void *)(v0 + 512) = sub_1008FA0F0(v119, v120, v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v195, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v121 = "Code";
    _os_log_impl((void *)&_mh_execute_header, log, v233, "Keys to upload: %{public}s,\nadded: %{public}s.", (uint8_t *)v116, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    sub_10001CFB8(v223, v218);
    sub_10001CFB8(v219, v220);
    sub_10001CFB8(v221, (unint64_t)v222);
    sub_10001CFB8(v212, type);
    sub_100037A24(v227, v224);
    sub_10001CFB8(v60, v228);

    swift_release();
  }
  else
  {
    uint64_t v121 = "Code";
    sub_10001CFB8(v223, v218);
    sub_10001CFB8(v219, v220);
    sub_10001CFB8(v221, (unint64_t)v222);
    sub_10001CFB8(v212, type);
    sub_100037A24(v227, v224);
    sub_10001CFB8(v60, v228);

    swift_release();
    sub_100CBD154(v195, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v114, type metadata accessor for SharingCircleKeyManager.Instruction);
  }
  sub_100CBE5B0((void *)(v0 + 16), (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
  sub_10001CFB8(v206, v207);
  sub_10001CFB8(v223, v218);
  sub_100CBD154(v199, type metadata accessor for KeyDropInterface.KeyPackage);
  v225(v198, v197);
  (*(void (**)(uint64_t, uint64_t))(v202 + 8))(v201, v200);
  (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v115, v204);
  uint64_t v122 = (uint64_t)v230;
  v222 = (uint64_t *)(v0 + 552);
  unint64_t v123 = *(void *)(v0 + 1240);
  int64_t v124 = *(void *)(v0 + 1232);
  uint64_t v231 = (void (**)(uint64_t, uint64_t))(v209 + 8);
  unint64_t v234 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v209 + 48);
  uint64_t v125 = v0 + 560;
  uint64_t v221 = *((void *)v121 + 174);
  uint64_t v126 = (char *)&type metadata for Any + 8;
  unint64_t v127 = v214;
  uint64_t v60 = v210;
LABEL_23:
  *(void *)(v0 + 1224) = v127;
  while (1)
  {
    if (v123)
    {
      unint64_t v128 = __clz(__rbit64(v123));
      v123 &= v123 - 1;
      unint64_t v129 = v128 | (v124 << 6);
      uint64_t v130 = *(void *)(v0 + 1216);
      goto LABEL_37;
    }
    if (__OFADD__(v124++, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    int64_t v132 = (unint64_t)((1 << *(unsigned char *)(v0 + 1268)) + 63) >> 6;
    uint64_t v130 = *(void *)(v0 + 1216);
    if (v124 >= v132) {
      goto LABEL_63;
    }
    uint64_t v133 = v130 + 56;
    unint64_t v134 = *(void *)(v130 + 56 + 8 * v124);
    if (!v134) {
      break;
    }
LABEL_36:
    unint64_t v123 = (v134 - 1) & v134;
    unint64_t v129 = __clz(__rbit64(v134)) + (v124 << 6);
LABEL_37:
    *(void *)(v0 + 1240) = v123;
    *(void *)(v0 + 1232) = v124;
    int v136 = *(unsigned __int8 *)(*(void *)(v130 + 48) + v129);
    if (v136 == 15)
    {
      uint64_t v183 = (void *)swift_task_alloc();
      *(void *)(v0 + 1248) = v183;
      *uint64_t v183 = v0;
      v183[1] = sub_100C5AF28;
      uint64_t v184 = *(void *)(v0 + 1056);
      return sub_100CA24D0(v122, v184);
    }
    if (v136 == 14)
    {
      uint64_t v209 = v126;
      uint64_t v212 = v125;
      unint64_t v215 = v127;
      unint64_t v137 = *(void *)(v0 + 1208);
      uint64_t v138 = *(void *)(v0 + 1200);
      uint64_t v139 = *(void *)(v0 + 872);
      uint64_t v140 = *(void *)(v0 + 864);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v194)(v139, 1, 1, v60);
      sub_10001D074(v139, v140, &qword_10165C0B8);
      uint64_t v141 = *v234;
      int v142 = (*v234)(v140, 1, v60);
      sub_100037A38(v138, v137);
      sub_1000361E0(v138, v137);
      uint64_t v143 = *(void *)(v0 + 864);
      if (v142 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 864), &qword_10165C0B8);
        uint64_t v227 = 0;
        unint64_t v228 = 0xF000000000000000;
      }
      else
      {
        uint64_t v227 = EncryptedData.cipherText.getter();
        unint64_t v228 = v144;
        (*v231)(v143, v60);
      }
      uint64_t v145 = *(void *)(v0 + 856);
      sub_10001D074(*(void *)(v0 + 872), v145, &qword_10165C0B8);
      int v146 = v141(v145, 1, v60);
      uint64_t v147 = *(void *)(v0 + 856);
      if (v146 == 1)
      {
        sub_10001DAB4(*(void *)(v0 + 856), &qword_10165C0B8);
        long long v225 = 0;
        unint64_t v226 = 0xF000000000000000;
      }
      else
      {
        long long v225 = (void (*)(uint64_t, uint64_t))EncryptedData.initializationVector.getter();
        unint64_t v226 = v148;
        (*v231)(v147, v60);
      }
      uint64_t v149 = *(void *)(v0 + 848);
      sub_10001D074(*(void *)(v0 + 872), v149, &qword_10165C0B8);
      int v150 = v141(v149, 1, v60);
      unint64_t v151 = *(void *)(v0 + 1208);
      uint64_t v152 = *(void *)(v0 + 1200);
      uint64_t v153 = *(void *)(v0 + 872);
      uint64_t v154 = *(void *)(v0 + 848);
      if (v150 == 1)
      {
        sub_100037A24(*(void *)(v0 + 1200), *(void *)(v0 + 1208));
        sub_10001DAB4(v153, &qword_10165C0B8);
        sub_10001DAB4(v154, &qword_10165C0B8);
        uint64_t v223 = 0;
        unint64_t v224 = 0xF000000000000000;
      }
      else
      {
        uint64_t v223 = EncryptedData.tag.getter();
        unint64_t v224 = v155;
        sub_100037A24(v152, v151);
        sub_10001DAB4(v153, &qword_10165C0B8);
        (*v231)(v154, v60);
      }
      unint64_t v156 = *(void *)(v0 + 1208);
      uint64_t v157 = *(void *)(v0 + 1200);
      unint64_t type = v157;
      uint64_t v158 = *(unsigned char **)(v0 + 832);
      unint64_t v220 = *(void *)(v0 + 824);
      unint64_t v218 = v156;
      uint64_t v219 = *(void *)(v0 + 776);
      sub_100CBD0EC(*(void *)(v0 + 888), (uint64_t)&v158[*(int *)(v219 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_10000588C(&qword_101657A00);
      uint64_t v159 = swift_allocObject();
      *(_OWORD *)(v159 + 16) = xmmword_101342130;
      *(void *)(v159 + 32) = 1;
      *(void *)(v159 + 40) = v157;
      *(void *)(v159 + 48) = v156;
      *(void *)(v159 + 56) = v227;
      *(void *)(v159 + 64) = v228;
      *(void *)(v159 + 72) = v225;
      *(void *)(v159 + 80) = v226;
      *(void *)(v159 + 88) = v223;
      *(void *)(v159 + 96) = v224;
      *uint64_t v158 = 14;
      *(void *)&v158[*(int *)(v219 + 24)] = v159;
      sub_100CBD0EC((uint64_t)v158, v220, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_1000361E0(v157, v156);
      sub_100037A38(v227, v228);
      sub_100037A38((uint64_t)v225, v226);
      sub_100037A38(v223, v224);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v215 = sub_100A6F328(0, *(void *)(v215 + 16) + 1, 1, v215);
      }
      uint64_t v160 = v215;
      unint64_t v162 = *(void *)(v215 + 16);
      unint64_t v161 = *(void *)(v215 + 24);
      if (v162 >= v161 >> 1) {
        uint64_t v160 = sub_100A6F328(v161 > 1, v162 + 1, 1, v215);
      }
      uint64_t v163 = *(void *)(v0 + 1104);
      uint64_t v164 = *(void *)(v0 + 832);
      uint64_t v165 = *(void *)(v0 + 824);
      uint64_t v166 = *(void *)(v0 + 816);
      uint64_t v167 = *(void *)(v0 + 784);
      uint64_t v168 = *(void *)(v0 + 600);
      *(void *)(v160 + 16) = v162 + 1;
      uint64_t v216 = v160;
      sub_100CBD1B4(v165, v160+ ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80))+ *(void *)(v167 + 72) * v162, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD0EC(v168, v163, type metadata accessor for SharingCircleKeyManager.Instruction);
      sub_100CBD0EC(v164, v166, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v169 = Logger.logObject.getter();
      os_log_type_t v170 = static os_log_type_t.default.getter();
      int v171 = v170;
      BOOL v172 = os_log_type_enabled(v169, v170);
      unint64_t v173 = *(void *)(v0 + 1208);
      uint64_t v174 = *(void *)(v0 + 1200);
      uint64_t v175 = *(void *)(v0 + 1104);
      uint64_t v176 = *(void *)(v0 + 832);
      uint64_t v177 = *(void *)(v0 + 816);
      if (v172)
      {
        LODWORD(type) = v171;
        uint64_t v178 = swift_slowAlloc();
        unint64_t v207 = swift_slowAlloc();
        v238[0] = v207;
        *(_DWORD *)uint64_t v178 = v221;
        unint64_t v220 = v176;
        uint64_t v179 = sub_100C27BF0();
        uint64_t v219 = v174;
        *(void *)(v0 + 544) = sub_1008FA0F0(v179, v180, v238);
        unint64_t v218 = v173;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v175, type metadata accessor for SharingCircleKeyManager.Instruction);
        *(_WORD *)(v178 + 12) = 2082;
        uint64_t v181 = sub_101264DA0();
        uint64_t *v222 = sub_1008FA0F0(v181, v182, v238);
        uint64_t v125 = v212;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v177, type metadata accessor for KeyDropInterface.KeyPackage);
        _os_log_impl((void *)&_mh_execute_header, v169, (os_log_type_t)type, "Keys to upload: %{public}s,\nadded: %{public}s.", (uint8_t *)v178, 0x16u);
        uint64_t v126 = v209;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_10001CFB8(v174, v218);
        sub_100037A24(v227, v228);
        sub_100037A24((uint64_t)v225, v226);
        sub_100037A24(v223, v224);
        sub_100CBD154(v220, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v122 = (uint64_t)v230;
        unint64_t v127 = v216;
        uint64_t v60 = v210;
      }
      else
      {

        sub_100CBD154(v177, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100CBD154(v175, type metadata accessor for SharingCircleKeyManager.Instruction);
        sub_10001CFB8(v174, v173);
        sub_100037A24(v227, v228);
        sub_100037A24((uint64_t)v225, v226);
        sub_100037A24(v223, v224);
        sub_100CBD154(v176, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v122 = (uint64_t)v230;
        unint64_t v127 = v216;
        uint64_t v60 = v210;
        uint64_t v125 = v212;
        uint64_t v126 = v209;
      }
      goto LABEL_23;
    }
  }
  int64_t v135 = v124 + 1;
  if (v124 + 1 >= v132) {
    goto LABEL_63;
  }
  unint64_t v134 = *(void *)(v133 + 8 * v135);
  if (v134) {
    goto LABEL_35;
  }
  int64_t v135 = v124 + 2;
  if (v124 + 2 >= v132) {
    goto LABEL_63;
  }
  unint64_t v134 = *(void *)(v133 + 8 * v135);
  if (v134)
  {
LABEL_35:
    int64_t v124 = v135;
    goto LABEL_36;
  }
  int64_t v135 = v124 + 3;
  if (v124 + 3 < v132)
  {
    unint64_t v134 = *(void *)(v133 + 8 * v135);
    if (!v134)
    {
      while (1)
      {
        int64_t v124 = v135 + 1;
        if (__OFADD__(v135, 1)) {
          goto LABEL_67;
        }
        if (v124 >= v132) {
          goto LABEL_63;
        }
        unint64_t v134 = *(void *)(v133 + 8 * v124);
        ++v135;
        if (v134) {
          goto LABEL_36;
        }
      }
    }
    goto LABEL_35;
  }
LABEL_63:
  uint64_t v185 = *(void *)(v0 + 1056);
  uint64_t v186 = *(void *)(v0 + 976);
  uint64_t v187 = *(void *)(v0 + 960);
  uint64_t v188 = *(void *)(v0 + 920);
  uint64_t v189 = *(void *)(v0 + 912);
  uint64_t v190 = *(void *)(v0 + 904);
  uint64_t v191 = *(void *)(v0 + 888);
  unint64_t v217 = v127;
  sub_100037A24(*(void *)(v0 + 1200), *(void *)(v0 + 1208));
  swift_release();
  sub_100CBD154(v191, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v188, v190);
  sub_100CBD154(v187, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v186, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  sub_100CBD154(v185, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v192 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v192(v217);
}

uint64_t sub_100C5D3A8()
{
  sub_100CBD154(*(void *)(v0 + 1056), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C5D644()
{
  uint64_t v35 = v0;
  uint64_t v1 = v0[135];
  uint64_t v2 = v0[134];
  uint64_t v3 = v0[75];
  sub_100CBD0EC(v3, v0[136], type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v3, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  sub_100CBD0EC(v3, v2, type metadata accessor for SharingCircleKeyManager.Instruction);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v31 = v5;
    uint64_t v6 = v0[136];
    uint64_t v29 = v0[135];
    uint64_t v30 = v0[134];
    uint64_t v7 = swift_slowAlloc();
    v34[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136447747;
    uint64_t v8 = sub_100C27BF0();
    v0[62] = sub_1008FA0F0(v8, v9, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v6, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v7 + 12) = 2082;
    unint64_t v10 = sub_1012638E4(15);
    v0[60] = sub_1008FA0F0(v10, v11, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2160;
    v0[55] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 32) = 2081;
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[57] = sub_1008FA0F0(v12, v13, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v29, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v7 + 42) = 2160;
    v0[59] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 52) = 2081;
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[61] = sub_1008FA0F0(v14, v15, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    *(_WORD *)(v7 + 62) = 2082;
    swift_getErrorValue();
    uint64_t v16 = Error.localizedDescription.getter();
    v0[56] = sub_1008FA0F0(v16, v17, v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v31, "Delegated keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", (uint8_t *)v7, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v18 = v0[135];
    uint64_t v19 = v0[134];
    sub_100CBD154(v0[136], type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v18, type metadata accessor for SharingCircleKeyManager.Instruction);
    sub_100CBD154(v19, type metadata accessor for SharingCircleKeyManager.Instruction);
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v20 = v0[151];
  uint64_t v21 = v0[150];
  uint64_t v32 = v0[122];
  uint64_t v33 = v0[132];
  uint64_t v22 = v0[120];
  uint64_t v23 = v0[115];
  uint64_t v24 = v0[114];
  uint64_t v25 = v0[113];
  uint64_t v26 = v0[111];
  swift_willThrow();
  sub_100037A24(v21, v20);
  swift_release();
  sub_100CBD154(v26, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  sub_100CBD154(v22, type metadata accessor for KeyDropJoinToken);
  sub_100CBD154(v32, type metadata accessor for SharingCircleKeyManager.DelegatedKeychain);
  sub_100CBD154(v33, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_100C5DDC0(uint64_t a1, char a2)
{
  *(void *)(v3 + 1144) = v2;
  *(unsigned char *)(v3 + 2232) = a2;
  *(void *)(v3 + 1136) = a1;
  *(void *)(v3 + 1152) = type metadata accessor for KeyDropLostItemDates(0);
  *(void *)(v3 + 1160) = swift_task_alloc();
  sub_10000588C(&qword_10165C138);
  *(void *)(v3 + 1168) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for KeyDropBeaconGroupAttributes();
  *(void *)(v3 + 1176) = v4;
  *(void *)(v3 + 1184) = *(void *)(v4 - 8);
  *(void *)(v3 + 1192) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163AC90);
  *(void *)(v3 + 1200) = swift_task_alloc();
  *(void *)(v3 + 1208) = swift_task_alloc();
  *(void *)(v3 + 1216) = swift_task_alloc();
  sub_10000588C(&qword_10165C140);
  *(void *)(v3 + 1224) = swift_task_alloc();
  sub_10000588C(&qword_10165C148);
  *(void *)(v3 + 1232) = swift_task_alloc();
  *(void *)(v3 + 1240) = swift_task_alloc();
  *(void *)(v3 + 1248) = swift_task_alloc();
  *(void *)(v3 + 1256) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  *(void *)(v3 + 1264) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v3 + 1272) = v6;
  *(void *)(v3 + 1280) = *(void *)(v6 + 64);
  *(void *)(v3 + 1288) = swift_task_alloc();
  *(void *)(v3 + 1296) = swift_task_alloc();
  *(void *)(v3 + 1304) = swift_task_alloc();
  *(void *)(v3 + 1312) = swift_task_alloc();
  *(void *)(v3 + 1320) = swift_task_alloc();
  *(void *)(v3 + 1328) = swift_task_alloc();
  *(void *)(v3 + 1336) = swift_task_alloc();
  *(void *)(v3 + 1344) = swift_task_alloc();
  *(void *)(v3 + 1352) = swift_task_alloc();
  *(void *)(v3 + 1360) = swift_task_alloc();
  sub_10000588C(&qword_10165C0B8);
  *(void *)(v3 + 1368) = swift_task_alloc();
  *(void *)(v3 + 1376) = sub_10000588C(&qword_10163F7B0);
  *(void *)(v3 + 1384) = swift_task_alloc();
  sub_10000588C((uint64_t *)&unk_10163EB40);
  *(void *)(v3 + 1392) = swift_task_alloc();
  sub_10000588C(&qword_10164B638);
  *(void *)(v3 + 1400) = swift_task_alloc();
  *(void *)(v3 + 1408) = swift_task_alloc();
  *(void *)(v3 + 1416) = swift_task_alloc();
  *(void *)(v3 + 1424) = swift_task_alloc();
  sub_10000588C(&qword_101654A38);
  *(void *)(v3 + 1432) = swift_task_alloc();
  *(void *)(v3 + 1440) = swift_task_alloc();
  *(void *)(v3 + 1448) = swift_task_alloc();
  *(void *)(v3 + 1456) = swift_task_alloc();
  *(void *)(v3 + 1464) = swift_task_alloc();
  *(void *)(v3 + 1472) = swift_task_alloc();
  *(void *)(v3 + 1480) = swift_task_alloc();
  *(void *)(v3 + 1488) = swift_task_alloc();
  *(void *)(v3 + 1496) = swift_task_alloc();
  *(void *)(v3 + 1504) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  *(void *)(v3 + 1512) = v7;
  *(void *)(v3 + 1520) = *(void *)(v7 - 8);
  *(void *)(v3 + 1528) = swift_task_alloc();
  *(void *)(v3 + 1536) = swift_task_alloc();
  *(void *)(v3 + 1544) = swift_task_alloc();
  *(void *)(v3 + 1552) = swift_task_alloc();
  *(void *)(v3 + 1560) = swift_task_alloc();
  *(void *)(v3 + 1568) = swift_task_alloc();
  *(void *)(v3 + 1576) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for KeyDropInterface.KeyAlignment(0);
  *(void *)(v3 + 1584) = v8;
  *(void *)(v3 + 1592) = *(void *)(v8 - 8);
  *(void *)(v3 + 1600) = swift_task_alloc();
  *(void *)(v3 + 1608) = swift_task_alloc();
  *(void *)(v3 + 1616) = swift_task_alloc();
  *(void *)(v3 + 1624) = swift_task_alloc();
  *(void *)(v3 + 1632) = swift_task_alloc();
  *(void *)(v3 + 1640) = swift_task_alloc();
  sub_10000588C(&qword_10163B9F0);
  *(void *)(v3 + 1648) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OwnedBeaconRecord();
  *(void *)(v3 + 1656) = v9;
  *(void *)(v3 + 1664) = *(void *)(v9 - 8);
  *(void *)(v3 + 1672) = swift_task_alloc();
  *(void *)(v3 + 1680) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  *(void *)(v3 + 1688) = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  *(void *)(v3 + 1696) = v11;
  *(void *)(v3 + 1704) = *(void *)(v11 + 64);
  *(void *)(v3 + 1712) = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  *(void *)(v3 + 1720) = v12;
  *(void *)(v3 + 1728) = *(void *)(v12 - 8);
  *(void *)(v3 + 1736) = swift_task_alloc();
  *(void *)(v3 + 1744) = swift_task_alloc();
  *(void *)(v3 + 1752) = swift_task_alloc();
  *(void *)(v3 + 1760) = swift_task_alloc();
  *(void *)(v3 + 1768) = swift_task_alloc();
  *(void *)(v3 + 1776) = swift_task_alloc();
  *(void *)(v3 + 1784) = swift_task_alloc();
  *(void *)(v3 + 1792) = swift_task_alloc();
  *(void *)(v3 + 1800) = swift_task_alloc();
  *(void *)(v3 + 1808) = swift_task_alloc();
  *(void *)(v3 + 1816) = swift_task_alloc();
  *(void *)(v3 + 1824) = swift_task_alloc();
  *(void *)(v3 + 1832) = swift_task_alloc();
  return _swift_task_switch(sub_100C5E550, v2, 0);
}

uint64_t sub_100C5E550()
{
  uint64_t v72 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[229];
  uint64_t v3 = v0[216];
  uint64_t v4 = v0[215];
  uint64_t v5 = v0[214];
  uint64_t v6 = v0[212];
  uint64_t v7 = v1[142];
  uint64_t v8 = sub_100C27B34();
  v1[230] = v8;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v1[231] = v9;
  v1[232] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v9(v2, v8, v4);
  sub_100CBD0EC(v7, v5, type metadata accessor for SharingCircleKeyManager.Instruction);
  int v10 = *(_DWORD *)(v6 + 80);
  *((_DWORD *)v1 + 556) = v10;
  unint64_t v11 = (v10 + 16) & ~(unint64_t)v10;
  uint64_t v12 = swift_allocObject();
  sub_100CBD1B4(v5, v12 + v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100CBE0E4;
  *(void *)(v13 + 24) = v12;
  sub_100CBD0EC(v7, v5, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v14 = swift_allocObject();
  sub_100CBD1B4(v5, v14 + v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_100CBE2E4;
  *(void *)(v59 + 24) = v14;
  sub_100CBD0EC(v7, v5, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v15 = swift_allocObject();
  sub_100CBD1B4(v5, v15 + v11, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_100CBE300;
  *(void *)(v55 + 24) = v15;
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v53 = static os_log_type_t.default.getter();
  uint64_t v66 = swift_allocObject();
  *(unsigned char *)(v66 + 16) = 34;
  uint64_t v65 = swift_allocObject();
  *(unsigned char *)(v65 + 16) = 8;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100CBE148;
  *(void *)(v16 + 24) = v13;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_10005F790;
  *(void *)(v64 + 24) = v16;
  uint64_t v63 = swift_allocObject();
  *(unsigned char *)(v63 + 16) = 112;
  uint64_t v62 = swift_allocObject();
  *(unsigned char *)(v62 + 16) = 8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 1752392040;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_100060540;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = v18;
  uint64_t v61 = v18;
  uint64_t v57 = swift_allocObject();
  *(unsigned char *)(v57 + 16) = 33;
  uint64_t v20 = swift_allocObject();
  *(unsigned char *)(v20 + 16) = 8;
  uint64_t v21 = v20;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1000604E8;
  *(void *)(v22 + 24) = v59;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_1000654EC;
  *(void *)(v23 + 24) = v22;
  uint64_t v24 = v23;
  uint64_t v56 = v23;
  uint64_t v25 = swift_allocObject();
  *(unsigned char *)(v25 + 16) = 112;
  uint64_t v26 = v25;
  uint64_t v52 = swift_allocObject();
  *(unsigned char *)(v52 + 16) = 8;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = 1752392040;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_10006550C;
  *(void *)(v28 + 24) = v27;
  uint64_t v29 = v28;
  uint64_t v48 = v28;
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 16) = 33;
  uint64_t v60 = swift_allocObject();
  *(unsigned char *)(v60 + 16) = 8;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_1000654F4;
  *(void *)(v30 + 24) = v55;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_1000654EC;
  *(void *)(v31 + 24) = v30;
  v1[233] = sub_10000588C(&qword_101639B60);
  uint64_t v49 = v21;
  uint64_t v32 = swift_allocObject();
  sub_1004B810C(v32, 15);
  *uint64_t v33 = sub_10005F778;
  v33[1] = v66;
  void v33[2] = sub_100065514;
  uint64_t v33[3] = v65;
  v33[4] = sub_10005F7D0;
  v33[5] = v64;
  v33[6] = sub_100065514;
  v33[7] = v63;
  v33[8] = sub_100065514;
  v33[9] = v62;
  v33[10] = sub_10006000C;
  v33[11] = v19;
  v33[12] = sub_100065514;
  v33[13] = v57;
  v33[14] = sub_100065514;
  v33[15] = v21;
  v33[16] = sub_100065500;
  v33[17] = v24;
  v33[18] = sub_100065514;
  v33[19] = v26;
  v33[20] = sub_100065514;
  v33[21] = v52;
  v33[22] = sub_100065504;
  v33[23] = v29;
  v33[24] = sub_100065514;
  v33[25] = v50;
  v33[26] = sub_100065514;
  v33[27] = v60;
  v33[28] = sub_100065500;
  v33[29] = v31;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v53))
  {
    uint64_t v51 = v31;
    uint64_t v34 = (uint8_t *)sub_1008F9FAC();
    uint64_t v68 = 0;
    uint64_t v69 = swift_slowAlloc();
    uint64_t v35 = v34;
    *(_WORD *)uint64_t v34 = 1283;
    uint64_t v67 = v34 + 2;
    uint64_t v70 = (uint64_t (*)())sub_10005F778;
    uint64_t v71 = v66;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v65;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = (uint64_t (*)())sub_10005F7D0;
    uint64_t v71 = v64;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v63;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v62;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = (uint64_t (*)())sub_10006000C;
    uint64_t v71 = v61;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v57;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v49;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065500;
    uint64_t v71 = v56;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v26;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v52;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = (uint64_t (*)())sub_100065504;
    uint64_t v71 = v48;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v50;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065514;
    uint64_t v71 = v60;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    swift_release();
    uint64_t v70 = sub_100065500;
    uint64_t v71 = v51;
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v70, (uint64_t)&v67, (uint64_t)&v68, (uint64_t)&v69);
    uint64_t v44 = v1[229];
    uint64_t v45 = v1[216];
    uint64_t v46 = v1[215];
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v53, "Keys to upload: %{public}s,\nshare-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s.", v35, 0x34u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v47(v44, v46);
  }
  else
  {
    uint64_t v36 = v1[229];
    uint64_t v37 = v1[216];
    uint64_t v54 = v1[215];

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unint64_t v47 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v47(v36, v54);
  }
  v1[234] = v47;
  uint64_t v38 = v1[142];
  uint64_t v39 = *(int *)(v1[211] + 24);
  *((_DWORD *)v1 + 557) = v39;
  uint64_t v40 = v38 + v39;
  unint64_t v41 = (void *)swift_task_alloc();
  v1[235] = v41;
  *unint64_t v41 = v1;
  v41[1] = sub_100C5F1F0;
  uint64_t v42 = v1[206];
  return sub_100E5EEE0(v42, v40);
}

uint64_t sub_100C5F1F0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1144);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C5F300, v1, 0);
}

uint64_t sub_100C5F300()
{
  uint64_t v1 = v0[206];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[208] + 48))(v1, 1, v0[207]) == 1)
  {
    sub_10001DAB4(v1, &qword_10163B9F0);
    sub_100130078();
    swift_allocError();
    *uint64_t v2 = 1;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    uint64_t v5 = v0[211];
    uint64_t v6 = v0[142];
    sub_100CBD1B4(v1, v0[210], (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v7 = v6 + *(int *)(v5 + 20);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[236] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100C5F860;
    uint64_t v9 = v0[143];
    v8[12] = v7;
    v8[13] = v9;
    v8[11] = v0 + 56;
    return _swift_task_switch(sub_100C32ED8, 0, 0);
  }
}

uint64_t sub_100C5F860()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1896) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C873EC;
  }
  else {
    uint64_t v4 = sub_100C5F98C;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C5F98C()
{
  uint64_t v2 = *(void *)(v0 + 448);
  unint64_t v1 = *(void *)(v0 + 456);
  *(void *)(v0 + 1904) = v2;
  *(void *)(v0 + 1912) = v1;
  if (v1 >> 60 == 15)
  {
    uint64_t v3 = *(void *)(v0 + 1680);
    sub_100130078();
    swift_allocError();
    *uint64_t v4 = 9;
    swift_willThrow();
    sub_1001300CC((uint64_t *)(v0 + 448));
    sub_100CBD154(v3, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  uint64_t v153 = (uint64_t *)(v0 + 448);
  uint64_t v163 = *(void *)(v0 + 1896);
  uint64_t v157 = *(void *)(v0 + 1672);
  uint64_t v159 = *(void *)(v0 + 1680);
  uint64_t v7 = *(void *)(v0 + 1640);
  uint64_t v8 = *(void *)(v0 + 1592);
  uint64_t v9 = *(void *)(v0 + 1584);
  uint64_t v10 = *(void *)(v0 + 1576);
  uint64_t v11 = *(void *)(v0 + 1568);
  uint64_t v12 = *(void *)(v0 + 1504);
  sub_1000361E0(v2, v1);
  static Date.trustedNow.getter(v10);
  static Date.trustedNow.getter(v11);
  uint64_t v13 = v7;
  uint64_t v14 = v0 + 1064;
  sub_101263B40(v10, 1, v11, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v9);
  swift_weakInit();
  sub_100CBD0EC(v159, v157, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  *(void *)(v0 + 856) = _swiftEmptyArrayStorage;
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_10070FD70(v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_100C275B4((uint64_t)v16);
  *(void *)(v0 + 1920) = v17;
  if (v163)
  {
    uint64_t v18 = *(void *)(v0 + 1672);
    uint64_t v19 = *(void *)(v0 + 1504);
    swift_errorRelease();
    sub_100CBD154(v18, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    return sub_10001DAB4(v19, &qword_101654A38);
  }
  uint64_t v20 = v17;
  swift_release();
  uint64_t v21 = sub_1001340BC(v20);
  *(void *)(v0 + 1928) = v21;
  if (!v21)
  {
    sub_100037A24(v2, v1);
    sub_1001300CC(v153);
    swift_bridgeObjectRelease();
    unint64_t v95 = _swiftEmptyArrayStorage;
    goto LABEL_30;
  }
  uint64_t v22 = v0 + 304;
  uint64_t v23 = (uint64_t *)(v0 + 784);
  uint64_t v145 = v0 + 872;
  int v146 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v143 = v0 + 1128;
  uint64_t v144 = v0 + 880;
  swift_beginAccess();
  uint64_t v24 = 0;
  uint64_t v25 = *(void (**)(void, void))(v0 + 1872);
  uint64_t v26 = v25;
  uint64_t v147 = (void *)(v0 + 304);
  while (2)
  {
    *(void *)(v0 + 1952) = v26;
    *(void *)(v0 + 1944) = v25;
    *(void *)(v0 + 1936) = 0;
    uint64_t v27 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v24 + 32);
    *(unsigned char *)(v0 + 2233) = v27;
    *(void *)(v0 + 1960) = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      JUMPOUT(0x100C62640);
    }
    switch(v27)
    {
      case 1:
        uint64_t v100 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v100);
        uint64_t v101 = type metadata accessor for BookmarkMetaData();
        int v102 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v100, 1, v101);
        uint64_t v103 = *(void *)(v0 + 1424);
        if (v102 == 1)
        {
          sub_10001DAB4(v103, &qword_10164B638);
          uint64_t v104 = 0;
        }
        else
        {
          uint64_t v104 = *(void *)(v103 + 8);
          sub_100CBD154(v103, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v104;
        uint64_t v139 = *(int *)(v0 + 2228);
        uint64_t v140 = *(void *)(v0 + 1136);
        uint64_t v141 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v141;
        *uint64_t v141 = v0;
        v141[1] = sub_100C62684;
        uint64_t v142 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v142, v140 + v139);
      case 4:
        uint64_t v105 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v105;
        void *v105 = v0;
        v105[1] = sub_100C691B0;
        uint64_t v106 = *(void *)(v0 + 1680);
        uint64_t v107 = *(void *)(v0 + 1256);
        uint64_t v108 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v107, v108, v106, (uint64_t)v153);
      case 5:
        uint64_t v42 = *(void *)(v0 + 1592);
        uint64_t v43 = *(void *)(v0 + 1584);
        uint64_t v44 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v44, &qword_101654A38);
        uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
        *(void *)(v0 + 2056) = v45;
        *(void *)(v0 + 2064) = (v42 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v43) = v45(v44, 1, v43);
        sub_10001DAB4(v44, &qword_101654A38);
        if (v43 != 1)
        {
          uint64_t v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v47 = *(void *)(v0 + 1584);
          uint64_t v48 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v48, &qword_101654A38);
          if (v46(v48, 1, v47) == 1)
          {
            uint64_t v49 = *(void *)(v0 + 1488);
            goto LABEL_9;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          unint64_t v123 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v123;
          void *v123 = v0;
          v123[1] = sub_100C6EC08;
          uint64_t v124 = *(void *)(v0 + 1912);
          uint64_t v125 = *(void *)(v0 + 1904);
          uint64_t v126 = *(void *)(v0 + 1680);
          uint64_t v127 = *(void *)(v0 + 1616);
          uint64_t v128 = *(void *)(v0 + 1248);
          uint64_t v129 = *(void *)(v0 + 1136);
          char v130 = 0;
LABEL_55:
          return sub_100C9CC58(v128, v129, v126, v127, v130, v125, v124);
        }
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v119;
        *uint64_t v119 = v0;
        unint64_t v120 = sub_100C6C37C;
        goto LABEL_50;
      case 6:
        uint64_t v50 = *(void *)(v0 + 1592);
        uint64_t v51 = *(void *)(v0 + 1584);
        uint64_t v52 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v52, &qword_101654A38);
        os_log_type_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
        *(void *)(v0 + 2104) = v53;
        *(void *)(v0 + 2112) = (v50 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v51) = v53(v52, 1, v51);
        sub_10001DAB4(v52, &qword_101654A38);
        if (v51 != 1)
        {
          uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
          uint64_t v55 = *(void *)(v0 + 1584);
          uint64_t v56 = *(void *)(v0 + 1472);
          sub_10001D074(*(void *)(v0 + 1504), v56, &qword_101654A38);
          if (v54(v56, 1, v55) == 1)
          {
            uint64_t v49 = *(void *)(v0 + 1472);
            goto LABEL_9;
          }
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v131 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v131;
          *uint64_t v131 = v0;
          v131[1] = sub_100C746A8;
          uint64_t v124 = *(void *)(v0 + 1912);
          uint64_t v125 = *(void *)(v0 + 1904);
          uint64_t v126 = *(void *)(v0 + 1680);
          uint64_t v127 = *(void *)(v0 + 1608);
          uint64_t v128 = *(void *)(v0 + 1240);
          uint64_t v129 = *(void *)(v0 + 1136);
          char v130 = 1;
          goto LABEL_55;
        }
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v119;
        *uint64_t v119 = v0;
        unint64_t v120 = sub_100C71E1C;
        goto LABEL_50;
      case 8:
      case 10:
        sub_1000F7878(v27, *(void *)(v0 + 504), v23);
        unint64_t v28 = *(void *)(v0 + 792);
        if (v28 >> 60 != 15)
        {
          uint64_t v29 = *(void *)(v0 + 784);
          unint64_t v30 = *(void *)(v0 + 1912);
          uint64_t v31 = *(void *)(v0 + 1904);
          uint64_t v32 = *(void *)(v0 + 1368);
          uint64_t v33 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
          sub_100037A38(v29, v28);
          sub_101268234(1, v29, v28, v32, (void *)v22);
          sub_10000588C(&qword_101657A00);
          uint64_t v34 = swift_allocObject();
          uint64_t v35 = sub_1004B7678(v34, 1);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v22;
          long long v38 = *(_OWORD *)(v22 + 32);
          long long v37 = *(_OWORD *)(v22 + 48);
          long long v39 = *(_OWORD *)(v22 + 16);
          *(void *)(v36 + 64) = *(void *)(v22 + 64);
          *(_OWORD *)(v36 + 32) = v38;
          *(_OWORD *)(v36 + 48) = v37;
          *(_OWORD *)(v36 + 16) = v39;
          uint64_t v40 = SharingCircleWildAdvertisementKey.init(key:)(v35);
          sub_100037A38(v31, v30);
          sub_100CBE5B0((void *)v22, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          unint64_t v41 = sub_100CBCA7C(v40, v31, v30);
          uint64_t v148 = v29;
          unint64_t v149 = v28;
          unint64_t v155 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v154 = *(void *)(v0 + 1840);
          uint64_t v151 = *(void *)(v0 + 1768);
          uint64_t v152 = *(void *)(v0 + 1720);
          uint64_t v64 = *(void *)(v0 + 1712);
          uint64_t v65 = *(void *)(v0 + 1640);
          uint64_t v66 = *(void *)(v0 + 1624);
          uint64_t v67 = *(void *)(v0 + 1352);
          uint64_t v68 = *(unsigned char **)(v0 + 1312);
          uint64_t v160 = *(void *)(v0 + 1272);
          unint64_t v69 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v150 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v65, v66, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v27, v66, (uint64_t)v41, v68);
          sub_100CBD0EC((uint64_t)v68, v67, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v67);
          v155(v151, v154, v152);
          sub_100CBD0EC(v150, v64, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v70 = swift_allocObject();
          sub_100CBD1B4(v64, v70 + v69, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v71 = swift_allocObject();
          *(void *)(v71 + 16) = sub_100CBE0E4;
          *(void *)(v71 + 24) = v70;
          sub_100CBD0EC((uint64_t)v68, v67, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v72 = (*(unsigned __int8 *)(v160 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v160 + 80);
          uint64_t v73 = swift_allocObject();
          sub_100CBD1B4(v67, v73 + v72, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = sub_100CBE648;
          *(void *)(v74 + 24) = v73;
          unint64_t v75 = Logger.logObject.getter();
          os_log_type_t v164 = static os_log_type_t.default.getter();
          uint64_t v76 = swift_allocObject();
          *(unsigned char *)(v76 + 16) = 34;
          uint64_t v77 = swift_allocObject();
          *(unsigned char *)(v77 + 16) = 8;
          uint64_t v78 = swift_allocObject();
          *(void *)(v78 + 16) = sub_100CC28B8;
          *(void *)(v78 + 24) = v71;
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = sub_1000654EC;
          *(void *)(v79 + 24) = v78;
          uint64_t v80 = swift_allocObject();
          *(unsigned char *)(v80 + 16) = 34;
          uint64_t v81 = swift_allocObject();
          *(unsigned char *)(v81 + 16) = 8;
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = sub_100CC28BC;
          *(void *)(v82 + 24) = v74;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = sub_1000654EC;
          *(void *)(v83 + 24) = v82;
          uint64_t v84 = swift_allocObject();
          sub_1004B810C(v84, 6);
          void *v85 = sub_100065514;
          v85[1] = v76;
          v85[2] = sub_100065514;
          v85[3] = v77;
          v85[4] = sub_100065500;
          v85[5] = v79;
          v85[6] = sub_100065514;
          v85[7] = v80;
          v85[8] = sub_100065514;
          v85[9] = v81;
          v85[10] = sub_100065500;
          v85[11] = v83;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v75, v164))
          {
            uint64_t v161 = v81;
            uint64_t v158 = v75;
            uint64_t v86 = (uint8_t *)sub_1008F9FAC();
            uint64_t v87 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            unint64_t v156 = v86;
            *(void *)(v0 + 1128) = v87;
            *(_WORD *)uint64_t v86 = 514;
            *(void *)(v0 + 872) = v86 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v76;
            sub_1008F9FB4(v146, v145, v144, v143);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v77;
            sub_1008F9FB4(v146, v145, v144, v143);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v79;
            sub_1008F9FB4(v146, v145, v144, v143);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v80;
            sub_1008F9FB4(v146, v145, v144, v143);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v161;
            sub_1008F9FB4(v146, v145, v144, v143);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v83;
            sub_1008F9FB4(v146, v145, v144, v143);
            uint64_t v88 = *(void *)(v0 + 1768);
            uint64_t v89 = *(void *)(v0 + 1728);
            uint64_t v90 = *(void *)(v0 + 1720);
            uint64_t v91 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v158, v164, "Keys to upload: %{public}s,\nadded: %{public}s.", v156, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v147, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v148, v149);
            uint64_t v25 = *(void (**)(void, void))(v89 + 8);
            v25(v88, v90);
            uint64_t v22 = v0 + 304;
            uint64_t v92 = v91;
          }
          else
          {
            uint64_t v93 = *(void *)(v0 + 1728);
            uint64_t v94 = *(void *)(v0 + 1720);
            uint64_t v162 = *(void *)(v0 + 1768);
            uint64_t v165 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            uint64_t v22 = v0 + 304;
            sub_100CBE5B0(v147, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v148, v149);
            uint64_t v25 = *(void (**)(void, void))(v93 + 8);
            v25(v162, v94);
            uint64_t v92 = v165;
          }
          sub_100CBD154(v92, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v26 = v25;
          uint64_t v14 = v0 + 1064;
          uint64_t v23 = (uint64_t *)(v0 + 784);
        }
        goto LABEL_10;
      case 9:
        uint64_t v57 = *(void *)(v0 + 1592);
        uint64_t v58 = *(void *)(v0 + 1584);
        uint64_t v59 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v59, &qword_101654A38);
        uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
        *(void *)(v0 + 2152) = v60;
        *(void *)(v0 + 2160) = (v57 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v58) = v60(v59, 1, v58);
        sub_10001DAB4(v59, &qword_101654A38);
        if (v58 == 1)
        {
          uint64_t v119 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v119;
          *uint64_t v119 = v0;
          unint64_t v120 = sub_100C778BC;
LABEL_50:
          v119[1] = v120;
          uint64_t v121 = *(void *)(v0 + 1672);
          uint64_t v122 = *(void *)(v0 + 1504);
          return sub_100C9B204(v14, v121, v122);
        }
        uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v62 = *(void *)(v0 + 1584);
        uint64_t v63 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v63, &qword_101654A38);
        if (v61(v63, 1, v62) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
          int64_t v132 = (void *)swift_task_alloc();
          *(void *)(v0 + 2184) = v132;
          *int64_t v132 = v0;
          v132[1] = sub_100C7A148;
          uint64_t v133 = *(void *)(v0 + 1912);
          uint64_t v134 = *(void *)(v0 + 1904);
          uint64_t v135 = *(void *)(v0 + 1680);
          uint64_t v136 = *(void *)(v0 + 1600);
          uint64_t v137 = *(void *)(v0 + 1232);
          uint64_t v138 = *(void *)(v0 + 1136);
          return sub_100C9E300(v137, v138, v135, v136, v134, v133);
        }
        uint64_t v49 = *(void *)(v0 + 1456);
LABEL_9:
        sub_10001DAB4(v49, &qword_101654A38);
        uint64_t v26 = *(void (**)(void, void))(v0 + 1952);
        uint64_t v25 = *(void (**)(void, void))(v0 + 1944);
LABEL_10:
        uint64_t v24 = *(void *)(v0 + 1960);
        if (v24 != *(void *)(v0 + 1928)) {
          continue;
        }
        sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
        sub_1001300CC(v153);
        swift_bridgeObjectRelease();
        unint64_t v95 = *(void **)(v0 + 856);
LABEL_30:
        uint64_t v166 = v95;
        uint64_t v96 = *(void *)(v0 + 1680);
        uint64_t v97 = *(void *)(v0 + 1640);
        uint64_t v98 = *(void *)(v0 + 1504);
        sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_weakDestroy();
        sub_10001DAB4(v98, &qword_101654A38);
        sub_100CBD154(v97, type metadata accessor for KeyDropInterface.KeyAlignment);
        sub_100CBD154(v96, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        long long v99 = *(uint64_t (**)(void *))(v0 + 8);
        return v99(v166);
      case 12:
        uint64_t v109 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v109;
        void *v109 = v0;
        v109[1] = sub_100C80934;
        uint64_t v110 = *(void *)(v0 + 1680);
        uint64_t v111 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v111, v110);
      case 13:
        os_log_type_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v112;
        *os_log_type_t v112 = v0;
        v112[1] = sub_100C7D35C;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1224);
        return sub_100CA020C(v114, v113);
      case 16:
        uint64_t v115 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v115;
        void *v115 = v0;
        v115[1] = sub_100C83EB4;
        uint64_t v116 = *(void *)(v0 + 1680);
        uint64_t v117 = *(void *)(v0 + 1536);
        uint64_t v118 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v117, v118, v116);
      default:
        goto LABEL_10;
    }
  }
}

uint64_t sub_100C62684()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1144);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C62794, v1, 0);
}

uint64_t sub_100C62794()
{
  uint64_t v1 = v0[174];
  uint64_t v2 = type metadata accessor for TimeBasedKey();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = (void (*)(uint64_t, uint64_t, uint64_t))v0[231];
    uint64_t v4 = v0[230];
    uint64_t v5 = v0[226];
    uint64_t v6 = v0[215];
    uint64_t v7 = v0[214];
    uint64_t v8 = v0[142];
    unint64_t v9 = (*((unsigned __int8 *)v0 + 2224) + 16) & ~(unint64_t)*((unsigned __int8 *)v0 + 2224);
    uint64_t v256 = v0;
    sub_10001DAB4(v1, (uint64_t *)&unk_10163EB40);
    v3(v5, v4, v6);
    sub_100CBD0EC(v8, v7, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v10 = swift_allocObject();
    sub_100CBD1B4(v7, v10 + v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_100CBE0E4;
    *(void *)(v11 + 24) = v10;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    uint64_t v14 = swift_allocObject();
    *(unsigned char *)(v14 + 16) = 34;
    uint64_t v15 = swift_allocObject();
    *(unsigned char *)(v15 + 16) = 8;
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = sub_100CC28B8;
    *(void *)(v16 + 24) = v11;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1000654EC;
    *(void *)(v17 + 24) = v16;
    uint64_t v18 = swift_allocObject();
    sub_1004B810C(v18, 3);
    void *v19 = sub_100065514;
    v19[1] = v14;
    void v19[2] = sub_100065514;
    v19[3] = v15;
    v19[4] = sub_100065500;
    v19[5] = v17;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v246 = v12;
      os_log_type_t v254 = v13;
      uint64_t v20 = v0[242];
      uint64_t v21 = (uint8_t *)sub_1008F9FAC();
      uint64_t v22 = swift_slowAlloc();
      v0[130] = 0;
      v0[131] = v22;
      *(_WORD *)uint64_t v21 = 258;
      v0[129] = v21 + 2;
      v0[82] = sub_100065514;
      v0[83] = v14;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))v0 + 82, (uint64_t)(v0 + 129), (uint64_t)(v0 + 130), (uint64_t)(v0 + 131));
      if (v20) {
        goto LABEL_40;
      }
      swift_release();
      v0[82] = sub_100065514;
      v0[83] = v15;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))v0 + 82, (uint64_t)(v0 + 129), (uint64_t)(v0 + 130), (uint64_t)(v0 + 131));
      swift_release();
      v0[82] = sub_100065500;
      v0[83] = v17;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))v0 + 82, (uint64_t)(v0 + 129), (uint64_t)(v0 + 130), (uint64_t)(v0 + 131));
      uint64_t v23 = v0;
      uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[243];
      uint64_t v25 = v256[226];
      uint64_t v26 = v256[215];
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v246, v254, "No secondary key available for %{public}s.", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      v24(v25, v26);
      uint64_t v27 = 0;
      unint64_t v28 = (void (*)(void, void))v256[243];
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v23 = v0;
      uint64_t v40 = (void (*)(uint64_t, uint64_t))v0[244];
      uint64_t v41 = v256[226];
      uint64_t v42 = v256[215];

      swift_release();
      swift_release();
      swift_release();
      v40(v41, v42);
      uint64_t v29 = (void (*)(void, void))v256[244];
      unint64_t v28 = (void (*)(void, void))v256[243];
      uint64_t v27 = v256[242];
    }
    uint64_t v43 = v23 + 56;
    uint64_t v255 = (uint64_t)(v23 + 133);
    uint64_t v44 = v23[245];
    if (v44 == v23[241])
    {
LABEL_12:
      sub_100037A24(v23[238], v23[239]);
      sub_1001300CC(v43);
      swift_bridgeObjectRelease();
      uint64_t v250 = v23[107];
      uint64_t v45 = v23;
      uint64_t v46 = v23[210];
      uint64_t v47 = v23[209];
      uint64_t v48 = v23[205];
      uint64_t v49 = v23[188];
      sub_100CBD154(v47, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v49, &qword_101654A38);
      sub_100CBD154(v48, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v46, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v50 = (uint64_t (*)(uint64_t))v45[1];
      return v50(v250);
    }
    uint64_t v51 = v23 + 38;
    uint64_t v52 = v23 + 98;
    uint64_t v203 = (uint64_t)(v23 + 109);
    uint64_t v204 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 96);
    uint64_t v207 = (uint64_t)(v23 + 111);
    uint64_t v208 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 84);
    uint64_t v205 = (uint64_t)(v23 + 137);
    uint64_t v206 = (uint64_t)(v23 + 132);
    uint64_t v201 = (uint64_t)(v23 + 141);
    uint64_t v202 = (uint64_t)(v23 + 110);
    unint64_t v217 = v23 + 38;
    unint64_t v218 = v23 + 56;
    uint64_t v216 = v23 + 98;
    while (1)
    {
      v23[244] = v29;
      v23[243] = v28;
      v23[242] = v27;
      uint64_t v53 = *(unsigned __int8 *)(v23[240] + v44 + 32);
      *((unsigned char *)v23 + 2233) = v53;
      v23[245] = v44 + 1;
      if (__OFADD__(v44, 1)) {
        break;
      }
      switch(v53)
      {
        case 1:
          uint64_t v158 = v23[178];
          sub_1000F7750(1, *(void *)(v23[142] + *(int *)(v23[211] + 44)), v158);
          uint64_t v159 = type metadata accessor for BookmarkMetaData();
          int v160 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 48))(v158, 1, v159);
          uint64_t v161 = v23[178];
          if (v160 == 1)
          {
            sub_10001DAB4(v161, &qword_10164B638);
            uint64_t v162 = 0;
          }
          else
          {
            uint64_t v162 = *(void *)(v161 + 8);
            sub_100CBD154(v161, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
          }
          v23[246] = v162;
          uint64_t v197 = *((int *)v23 + 557);
          uint64_t v198 = v23[142];
          uint64_t v199 = (void *)swift_task_alloc();
          v23[247] = v199;
          void *v199 = v23;
          v199[1] = sub_100C62684;
          uint64_t v200 = v23[174];
          return sub_100CA6DC8(v200, v198 + v197);
        case 4:
          uint64_t v163 = (void *)swift_task_alloc();
          v23[255] = v163;
          *uint64_t v163 = v23;
          v163[1] = sub_100C691B0;
          uint64_t v164 = v23[210];
          uint64_t v165 = v23[157];
          uint64_t v166 = v23[142];
          return sub_100C9B9FC(v165, v166, v164, (uint64_t)v43);
        case 5:
          uint64_t v102 = v23[199];
          uint64_t v103 = v23[198];
          uint64_t v104 = v23[187];
          sub_10001D074(v23[188], v104, &qword_101654A38);
          uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48);
          v23[257] = v105;
          v23[258] = (v102 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v103) = v105(v104, 1, v103);
          sub_10001DAB4(v104, &qword_101654A38);
          if (v103 == 1)
          {
            uint64_t v177 = (void *)swift_task_alloc();
            v23[259] = v177;
            *uint64_t v177 = v23;
            uint64_t v178 = sub_100C6C37C;
            goto LABEL_58;
          }
          uint64_t v106 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v23[257];
          uint64_t v107 = v23[198];
          uint64_t v108 = v23[186];
          sub_10001D074(v23[188], v108, &qword_101654A38);
          if (v106(v108, 1, v107) == 1)
          {
            uint64_t v109 = v23[186];
            goto LABEL_16;
          }
          sub_100CBD1B4(v23[186], v23[202], type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v181 = (void *)swift_task_alloc();
          v23[261] = v181;
          *uint64_t v181 = v23;
          v181[1] = sub_100C6EC08;
          uint64_t v182 = v23[239];
          uint64_t v183 = v23[238];
          uint64_t v184 = v23[210];
          uint64_t v185 = v23[202];
          uint64_t v186 = v23[156];
          uint64_t v187 = v23[142];
          char v188 = 0;
          goto LABEL_63;
        case 6:
          uint64_t v110 = v23[199];
          uint64_t v111 = v23[198];
          uint64_t v112 = v23[185];
          sub_10001D074(v23[188], v112, &qword_101654A38);
          uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
          v23[263] = v113;
          v23[264] = (v110 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v111) = v113(v112, 1, v111);
          sub_10001DAB4(v112, &qword_101654A38);
          if (v111 == 1)
          {
            uint64_t v177 = (void *)swift_task_alloc();
            v23[265] = v177;
            *uint64_t v177 = v23;
            uint64_t v178 = sub_100C71E1C;
LABEL_58:
            v177[1] = v178;
            uint64_t v179 = v23[209];
            uint64_t v180 = v23[188];
            return sub_100C9B204(v255, v179, v180);
          }
          uint64_t v114 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v23[263];
          uint64_t v115 = v23[198];
          uint64_t v116 = v23[184];
          sub_10001D074(v23[188], v116, &qword_101654A38);
          if (v114(v116, 1, v115) != 1)
          {
            sub_100CBD1B4(v23[184], v23[201], type metadata accessor for KeyDropInterface.KeyAlignment);
            uint64_t v189 = (void *)swift_task_alloc();
            v23[267] = v189;
            *uint64_t v189 = v23;
            v189[1] = sub_100C746A8;
            uint64_t v182 = v23[239];
            uint64_t v183 = v23[238];
            uint64_t v184 = v23[210];
            uint64_t v185 = v23[201];
            uint64_t v186 = v23[155];
            uint64_t v187 = v23[142];
            char v188 = 1;
LABEL_63:
            return sub_100C9CC58(v186, v187, v184, v185, v188, v183, v182);
          }
          uint64_t v109 = v23[184];
LABEL_16:
          sub_10001DAB4(v109, &qword_101654A38);
          uint64_t v29 = (void (*)(void, void))v23[244];
          unint64_t v28 = (void (*)(void, void))v23[243];
LABEL_17:
          uint64_t v44 = v23[245];
          if (v44 == v23[241]) {
            goto LABEL_12;
          }
          break;
        case 8:
        case 10:
          sub_1000F7878(v53, v23[63], v52);
          unint64_t v54 = v23[99];
          if (v54 >> 60 != 15)
          {
            uint64_t v55 = v23[98];
            unint64_t v56 = v23[239];
            uint64_t v57 = v23[238];
            uint64_t v58 = v23[171];
            uint64_t v59 = type metadata accessor for EncryptedData();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 1, 1, v59);
            sub_100037A38(v55, v54);
            sub_101268234(1, v55, v54, v58, v51);
            sub_10000588C(&qword_101657A00);
            uint64_t v60 = swift_allocObject();
            uint64_t v61 = sub_1004B7678(v60, 1);
            *(_OWORD *)uint64_t v62 = *(_OWORD *)v51;
            long long v64 = *((_OWORD *)v51 + 2);
            long long v63 = *((_OWORD *)v51 + 3);
            long long v65 = *((_OWORD *)v51 + 1);
            *(void *)(v62 + 64) = v51[8];
            *(_OWORD *)(v62 + 32) = v64;
            *(_OWORD *)(v62 + 48) = v63;
            *(_OWORD *)(v62 + 16) = v65;
            uint64_t v66 = SharingCircleWildAdvertisementKey.init(key:)(v61);
            sub_100037A38(v57, v56);
            sub_100CBE5B0(v51, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
            uint64_t v67 = sub_100CBCA7C(v66, v57, v56);
            unint64_t v68 = v54;
            unint64_t v69 = v23;
            uint64_t v70 = (uint64_t)v67;
            unint64_t v71 = v69[239];
            uint64_t v72 = v69[238];
            if (v27)
            {
              sub_100037A24(v72, v71);
              swift_bridgeObjectRelease();
              sub_100CBE5B0(v51, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
              sub_100037A24(v55, v68);
              char v241 = *((unsigned char *)v69 + 2233);
              uint64_t v73 = v69[214];
              uint64_t v74 = v69[142];
              unint64_t v75 = (*((unsigned __int8 *)v69 + 2224) + 16) & ~(unint64_t)*((unsigned __int8 *)v69 + 2224);
              uint64_t v76 = v27;
              ((void (*)(void))v69[231])();
              sub_100CBD0EC(v74, v73, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v77 = swift_allocObject();
              sub_100CBD1B4(v73, v77 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v238 = swift_allocObject();
              *(void *)(v238 + 16) = sub_100CBE0E4;
              *(void *)(v238 + 24) = v77;
              uint64_t v251 = swift_allocObject();
              *(unsigned char *)(v251 + 16) = v241;
              sub_100CBD0EC(v74, v73, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v78 = swift_allocObject();
              sub_100CBD1B4(v73, v78 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v242 = swift_allocObject();
              *(void *)(v242 + 16) = sub_100CBE2E4;
              *(void *)(v242 + 24) = v78;
              sub_100CBD0EC(v74, v73, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v79 = swift_allocObject();
              sub_100CBD1B4(v73, v79 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v80 = swift_allocObject();
              *(void *)(v80 + 16) = sub_100CBE300;
              *(void *)(v80 + 24) = v79;
              uint64_t v81 = swift_allocObject();
              *(void *)(v81 + 16) = v76;
              swift_errorRetain();
              os_log_t log = Logger.logObject.getter();
              os_log_type_t v211 = static os_log_type_t.error.getter();
              uint64_t v227 = swift_allocObject();
              *(unsigned char *)(v227 + 16) = 34;
              uint64_t v82 = swift_allocObject();
              *(unsigned char *)(v82 + 16) = 8;
              uint64_t v83 = v82;
              uint64_t v84 = swift_allocObject();
              *(void *)(v84 + 16) = sub_100CC28B8;
              *(void *)(v84 + 24) = v238;
              uint64_t v85 = swift_allocObject();
              *(void *)(v85 + 16) = sub_1000654EC;
              *(void *)(v85 + 24) = v84;
              uint64_t v224 = swift_allocObject();
              *(unsigned char *)(v224 + 16) = 34;
              uint64_t v222 = swift_allocObject();
              *(unsigned char *)(v222 + 16) = 8;
              uint64_t v86 = swift_allocObject();
              *(void *)(v86 + 16) = sub_100CBE3EC;
              *(void *)(v86 + 24) = v251;
              uint64_t v252 = swift_allocObject();
              *(void *)(v252 + 16) = sub_1000654EC;
              *(void *)(v252 + 24) = v86;
              uint64_t v221 = swift_allocObject();
              *(unsigned char *)(v221 + 16) = 112;
              uint64_t v247 = swift_allocObject();
              *(unsigned char *)(v247 + 16) = 8;
              uint64_t v87 = swift_allocObject();
              *(void *)(v87 + 16) = 1752392040;
              uint64_t v220 = swift_allocObject();
              *(void *)(v220 + 16) = sub_10006550C;
              *(void *)(v220 + 24) = v87;
              uint64_t v219 = swift_allocObject();
              *(unsigned char *)(v219 + 16) = 33;
              uint64_t v215 = swift_allocObject();
              *(unsigned char *)(v215 + 16) = 8;
              uint64_t v88 = swift_allocObject();
              *(void *)(v88 + 16) = sub_1000654F4;
              *(void *)(v88 + 24) = v242;
              uint64_t v243 = swift_allocObject();
              *(void *)(v243 + 16) = sub_1000654EC;
              *(void *)(v243 + 24) = v88;
              uint64_t v239 = swift_allocObject();
              *(unsigned char *)(v239 + 16) = 112;
              uint64_t v236 = swift_allocObject();
              *(unsigned char *)(v236 + 16) = 8;
              uint64_t v89 = swift_allocObject();
              *(void *)(v89 + 16) = 1752392040;
              uint64_t v233 = swift_allocObject();
              *(void *)(v233 + 16) = sub_10006550C;
              *(void *)(v233 + 24) = v89;
              uint64_t v90 = swift_allocObject();
              *(unsigned char *)(v90 + 16) = 33;
              uint64_t v91 = v90;
              uint64_t v214 = swift_allocObject();
              *(unsigned char *)(v214 + 16) = 8;
              uint64_t v92 = swift_allocObject();
              *(void *)(v92 + 16) = sub_1000654F4;
              *(void *)(v92 + 24) = v80;
              uint64_t v232 = swift_allocObject();
              *(void *)(v232 + 16) = sub_1000654EC;
              *(void *)(v232 + 24) = v92;
              uint64_t v231 = swift_allocObject();
              *(unsigned char *)(v231 + 16) = 34;
              uint64_t v229 = swift_allocObject();
              *(unsigned char *)(v229 + 16) = 8;
              uint64_t v93 = swift_allocObject();
              *(void *)(v93 + 16) = sub_100CBE4A8;
              *(void *)(v93 + 24) = v81;
              uint64_t v94 = swift_allocObject();
              *(void *)(v94 + 16) = sub_1000654EC;
              *(void *)(v94 + 24) = v93;
              uint64_t v95 = swift_allocObject();
              sub_1004B810C(v95, 21);
              *uint64_t v96 = sub_100065514;
              v96[1] = v227;
              v96[2] = sub_100065514;
              v96[3] = v83;
              v96[4] = sub_100065500;
              v96[5] = v85;
              v96[6] = sub_100065514;
              v96[7] = v224;
              v96[8] = sub_100065514;
              v96[9] = v222;
              v96[10] = sub_100065500;
              v96[11] = v252;
              v96[12] = sub_100065514;
              v96[13] = v221;
              v96[14] = sub_100065514;
              v96[15] = v247;
              v96[16] = sub_100065504;
              v96[17] = v220;
              v96[18] = sub_100065514;
              v96[19] = v219;
              v96[20] = sub_100065514;
              v96[21] = v215;
              v96[22] = sub_100065500;
              v96[23] = v243;
              v96[24] = sub_100065514;
              v96[25] = v239;
              v96[26] = sub_100065514;
              v96[27] = v236;
              v96[28] = sub_100065504;
              v96[29] = v233;
              v96[30] = sub_100065514;
              v96[31] = v91;
              v96[32] = sub_100065514;
              v96[33] = v214;
              v96[34] = sub_100065500;
              v96[35] = v232;
              v96[36] = sub_100065514;
              v96[37] = v231;
              v96[38] = sub_100065514;
              v96[39] = v229;
              v96[40] = sub_100065500;
              v96[41] = v94;
              swift_retain();
              uint64_t v210 = v83;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(log, v211))
              {
                uint64_t v97 = (uint8_t *)sub_1008F9FAC();
                uint64_t v98 = swift_slowAlloc();
                uint64_t v23 = v256;
                v256[137] = 0;
                v256[132] = v98;
                *(_WORD *)uint64_t v97 = 1795;
                v256[111] = v97 + 2;
                v256[84] = sub_100065514;
                v256[85] = v227;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v210;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065500;
                v256[85] = v85;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v224;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v222;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065500;
                v256[85] = v252;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v221;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v247;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065504;
                v256[85] = v220;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v219;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v215;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065500;
                v256[85] = v243;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v239;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v236;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065504;
                v256[85] = v233;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v91;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v214;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065500;
                v256[85] = v232;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v231;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065514;
                v256[85] = v229;
                sub_1008F9FB4(v208, v207, v205, v206);
                swift_release();
                v256[84] = sub_100065500;
                v256[85] = v94;
                sub_1008F9FB4(v208, v207, v205, v206);
                uint64_t v99 = v256[217];
                uint64_t v100 = v256[216];
                uint64_t v101 = v256[215];
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, log, v211, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v97, 0x48u);
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_1008F9FA0();

                swift_errorRelease();
                unint64_t v28 = *(void (**)(void, void))(v100 + 8);
                v28(v99, v101);
                uint64_t v27 = 0;
                uint64_t v29 = v28;
              }
              else
              {
                uint64_t v212 = v256[217];
                uint64_t v154 = v256[216];
                uint64_t v209 = v256[215];
                swift_errorRelease();

                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                unint64_t v28 = *(void (**)(void, void))(v154 + 8);
                v28(v212, v209);
                uint64_t v27 = 0;
                uint64_t v29 = v28;
                uint64_t v23 = v256;
              }
              uint64_t v51 = v217;
              uint64_t v43 = v218;
            }
            else
            {
              uint64_t v223 = v55;
              unint64_t v225 = v68;
              uint64_t v237 = (void (*)(uint64_t, uint64_t, uint64_t))v69[231];
              uint64_t v234 = v69[230];
              uint64_t v228 = v69[221];
              uint64_t v230 = v69[215];
              uint64_t v124 = v69[214];
              uint64_t v125 = v69[205];
              uint64_t v126 = v69[203];
              uint64_t v127 = v69[169];
              uint64_t v128 = (unsigned char *)v69[164];
              uint64_t v244 = v69[159];
              unint64_t v129 = (*((unsigned __int8 *)v69 + 2224) + 16) & ~(unint64_t)*((unsigned __int8 *)v69 + 2224);
              uint64_t v226 = v69[142];
              sub_100037A24(v72, v71);
              swift_bridgeObjectRelease();
              sub_100CBD0EC(v125, v126, type metadata accessor for KeyDropInterface.KeyAlignment);
              sub_101263C08(v53, v126, v70, v128);
              sub_100CBD0EC((uint64_t)v128, v127, type metadata accessor for KeyDropInterface.KeyPackage);
              sub_100C272D0(v127);
              v237(v228, v234, v230);
              sub_100CBD0EC(v226, v124, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v130 = swift_allocObject();
              sub_100CBD1B4(v124, v130 + v129, type metadata accessor for SharingCircleKeyManager.Instruction);
              uint64_t v131 = swift_allocObject();
              *(void *)(v131 + 16) = sub_100CBE0E4;
              *(void *)(v131 + 24) = v130;
              sub_100CBD0EC((uint64_t)v128, v127, type metadata accessor for KeyDropInterface.KeyPackage);
              unint64_t v132 = (*(unsigned __int8 *)(v244 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v244 + 80);
              uint64_t v133 = swift_allocObject();
              sub_100CBD1B4(v127, v133 + v132, type metadata accessor for KeyDropInterface.KeyPackage);
              uint64_t v134 = swift_allocObject();
              *(void *)(v134 + 16) = sub_100CBE648;
              *(void *)(v134 + 24) = v133;
              uint64_t v135 = Logger.logObject.getter();
              os_log_type_t v136 = static os_log_type_t.default.getter();
              uint64_t v137 = swift_allocObject();
              *(unsigned char *)(v137 + 16) = 34;
              uint64_t v138 = swift_allocObject();
              *(unsigned char *)(v138 + 16) = 8;
              uint64_t v139 = swift_allocObject();
              *(void *)(v139 + 16) = sub_100CC28B8;
              *(void *)(v139 + 24) = v131;
              uint64_t v140 = swift_allocObject();
              *(void *)(v140 + 16) = sub_1000654EC;
              *(void *)(v140 + 24) = v139;
              uint64_t v141 = swift_allocObject();
              *(unsigned char *)(v141 + 16) = 34;
              uint64_t v142 = swift_allocObject();
              *(unsigned char *)(v142 + 16) = 8;
              uint64_t v143 = swift_allocObject();
              *(void *)(v143 + 16) = sub_100CC28BC;
              *(void *)(v143 + 24) = v134;
              uint64_t v144 = swift_allocObject();
              *(void *)(v144 + 16) = sub_1000654EC;
              *(void *)(v144 + 24) = v143;
              uint64_t v145 = swift_allocObject();
              sub_1004B810C(v145, 6);
              *int v146 = sub_100065514;
              v146[1] = v137;
              v146[2] = sub_100065514;
              v146[3] = v138;
              v146[4] = sub_100065500;
              v146[5] = v140;
              v146[6] = sub_100065514;
              v146[7] = v141;
              v146[8] = sub_100065514;
              v146[9] = v142;
              v146[10] = sub_100065500;
              v146[11] = v144;
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRelease();
              if (os_log_type_enabled(v135, v136))
              {
                uint64_t v248 = v142;
                uint64_t v245 = v135;
                uint64_t v147 = (uint8_t *)sub_1008F9FAC();
                uint64_t v148 = swift_slowAlloc();
                v256[110] = 0;
                uint64_t v240 = v147;
                v256[141] = v148;
                *(_WORD *)uint64_t v147 = 514;
                v256[109] = v147 + 2;
                v256[96] = sub_100065514;
                v256[97] = v137;
                sub_1008F9FB4(v204, v203, v202, v201);
                os_log_type_t v235 = v136;
                swift_release();
                uint64_t v23 = v256;
                v256[96] = sub_100065514;
                v256[97] = v138;
                sub_1008F9FB4(v204, v203, v202, v201);
                swift_release();
                v256[96] = sub_100065500;
                v256[97] = v140;
                sub_1008F9FB4(v204, v203, v202, v201);
                swift_release();
                v256[96] = sub_100065514;
                v256[97] = v141;
                sub_1008F9FB4(v204, v203, v202, v201);
                swift_release();
                v256[96] = sub_100065514;
                v256[97] = v248;
                sub_1008F9FB4(v204, v203, v202, v201);
                swift_release();
                v256[96] = sub_100065500;
                v256[97] = v144;
                sub_1008F9FB4(v204, v203, v202, v201);
                uint64_t v149 = v256[221];
                uint64_t v150 = v256[216];
                uint64_t v151 = v256[215];
                uint64_t v152 = v256[164];
                swift_release();
                _os_log_impl((void *)&_mh_execute_header, v245, v235, "Keys to upload: %{public}s,\nadded: %{public}s.", v240, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                sub_1008F9FA0();

                uint64_t v51 = v217;
                sub_100CBE5B0(v217, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
                sub_100037A24(v223, v225);
                unint64_t v28 = *(void (**)(void, void))(v150 + 8);
                v28(v149, v151);
                uint64_t v153 = v152;
              }
              else
              {
                uint64_t v23 = v256;
                uint64_t v155 = v256[216];
                uint64_t v156 = v256[215];
                uint64_t v249 = v256[221];
                uint64_t v253 = v256[164];
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();

                uint64_t v51 = v217;
                sub_100CBE5B0(v217, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
                sub_100037A24(v223, v225);
                unint64_t v28 = *(void (**)(void, void))(v155 + 8);
                v28(v249, v156);
                uint64_t v153 = v253;
              }
              sub_100CBD154(v153, type metadata accessor for KeyDropInterface.KeyPackage);
              uint64_t v27 = 0;
              uint64_t v29 = v28;
              uint64_t v43 = v218;
            }
            uint64_t v52 = v216;
          }
          goto LABEL_17;
        case 9:
          uint64_t v117 = v23[199];
          uint64_t v118 = v23[198];
          uint64_t v119 = v23[183];
          sub_10001D074(v23[188], v119, &qword_101654A38);
          unint64_t v120 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v117 + 48);
          v23[269] = v120;
          v23[270] = (v117 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v118) = v120(v119, 1, v118);
          sub_10001DAB4(v119, &qword_101654A38);
          if (v118 == 1)
          {
            uint64_t v177 = (void *)swift_task_alloc();
            v23[271] = v177;
            *uint64_t v177 = v23;
            uint64_t v178 = sub_100C778BC;
            goto LABEL_58;
          }
          uint64_t v121 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v23[269];
          uint64_t v122 = v23[198];
          uint64_t v123 = v23[182];
          sub_10001D074(v23[188], v123, &qword_101654A38);
          if (v121(v123, 1, v122) != 1)
          {
            sub_100CBD1B4(v23[182], v23[200], type metadata accessor for KeyDropInterface.KeyAlignment);
            uint64_t v190 = (void *)swift_task_alloc();
            v23[273] = v190;
            *uint64_t v190 = v23;
            v190[1] = sub_100C7A148;
            uint64_t v191 = v23[239];
            uint64_t v192 = v23[238];
            uint64_t v193 = v23[210];
            uint64_t v194 = v23[200];
            uint64_t v195 = v23[154];
            uint64_t v196 = v23[142];
            return sub_100C9E300(v195, v196, v193, v194, v192, v191);
          }
          uint64_t v109 = v23[182];
          goto LABEL_16;
        case 12:
          uint64_t v167 = (void *)swift_task_alloc();
          v23[276] = v167;
          *uint64_t v167 = v23;
          v167[1] = sub_100C80934;
          uint64_t v168 = v23[210];
          uint64_t v169 = v23[146];
          return sub_100C9FCDC(v169, v168);
        case 13:
          os_log_type_t v170 = (void *)swift_task_alloc();
          v23[275] = v170;
          *os_log_type_t v170 = v23;
          v170[1] = sub_100C7D35C;
          uint64_t v171 = v23[210];
          uint64_t v172 = v23[153];
          return sub_100CA020C(v172, v171);
        case 16:
          unint64_t v173 = (void *)swift_task_alloc();
          v23[277] = v173;
          *unint64_t v173 = v23;
          v173[1] = sub_100C83EB4;
          uint64_t v174 = v23[210];
          uint64_t v175 = v23[192];
          uint64_t v176 = v23[145];
          return sub_100CA0E04(v175, v176, v174);
        default:
          goto LABEL_17;
      }
    }
    __break(1u);
    uint64_t v0 = v256;
LABEL_40:
    uint64_t v157 = v0[209];
    swift_errorRelease();
    return sub_100CBD154(v157, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  }
  uint64_t v30 = v0[210];
  uint64_t v31 = v0[207];
  uint64_t v32 = (_OWORD *)(v1 + *(int *)(v2 + 24));
  long long v34 = v32[1];
  long long v33 = v32[2];
  *((_OWORD *)v0 + 32) = *v32;
  *((_OWORD *)v0 + 33) = v34;
  *((_OWORD *)v0 + 34) = v33;
  sub_1006CA500(v0 + 64, (void (*)(void, void))sub_1006CD4D8, (void (*)(uint64_t, uint64_t))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
  sub_100CBD154(v1, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
  v0[248] = sub_100A8C640();
  v0[249] = v35;
  sub_1006CA500(v0 + 64, (void (*)(void, void))sub_10015AF5C, (void (*)(uint64_t, uint64_t))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
  v0[73] = v31;
  v0[74] = sub_100CBFAFC(&qword_101638DD0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
  uint64_t v36 = sub_10001D958(v0 + 70);
  sub_100CBD0EC(v30, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  long long v37 = (void *)swift_task_alloc();
  v0[250] = v37;
  *long long v37 = v0;
  v37[1] = sub_100C654EC;
  uint64_t v38 = v0[173];
  return sub_100C4EEFC(v38, (uint64_t)(v0 + 70));
}

uint64_t sub_100C654EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2008) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 1144);
    uint64_t v4 = sub_100C87838;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 1144);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 560);
    uint64_t v4 = sub_100C65614;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C65614()
{
  *(void *)(v0 + 2016) = sub_10114FBBC(**(void **)(v0 + 1384));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 2024) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100C656C8;
  return _swift_task_switch(sub_100C286F8, 0, 0);
}

uint64_t sub_100C656C8(double a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 1144);
  *(double *)(*(void *)v1 + 2032) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100C657DC, v2, 0);
}

uint64_t sub_100C657DC()
{
  uint64_t v330 = (void *)(v0 + 304);
  uint64_t v276 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v318 = v0 + 872;
  v319 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  double v1 = *(double *)(v0 + 2032);
  uint64_t v274 = v0 + 1056;
  uint64_t v275 = v0 + 888;
  unint64_t v2 = *(void *)(v0 + 2016);
  uint64_t v273 = v0 + 1096;
  unint64_t v3 = *(void *)(v0 + 1968);
  uint64_t v4 = sub_1012D6EBC(1);
  BOOL v5 = sub_1010EC7DC(v2, v3);
  unint64_t v6 = SharingCircleWildAdvertisementKey.init(key:)(0);
  char v7 = sub_1010EE3A0(v3, v6);
  unint64_t v8 = *(void *)(v0 + 2016);
  uint64_t v272 = (uint64_t *)(v0 + 448);
  uint64_t v316 = v0 + 1128;
  uint64_t v317 = v0 + 880;
  if ((v7 & 1) == 0)
  {
    double v56 = v1 / ((double)(unint64_t)v4 * 60.0);
    if (v5)
    {
      unint64_t v57 = *(void *)(v0 + 1968);
      BOOL v58 = v8 >= v57;
      unint64_t v59 = v8 - v57;
      if (!v58)
      {
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if ((~*(void *)&v56 & 0x7FF0000000000000) == 0) {
        goto LABEL_93;
      }
      if (v56 <= -1.0)
      {
LABEL_94:
        __break(1u);
        goto LABEL_95;
      }
      if (v56 >= 1.84467441e19)
      {
LABEL_95:
        __break(1u);
        JUMPOUT(0x100C6916CLL);
      }
      if (v59 > (unint64_t)v56) {
        goto LABEL_2;
      }
    }
    uint64_t v60 = *(void *)(v0 + 1712);
    uint64_t v61 = *(void *)(v0 + 1136);
    unint64_t v62 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    (*(void (**)(void, void, void))(v0 + 1848))(*(void *)(v0 + 1816), *(void *)(v0 + 1840), *(void *)(v0 + 1720));
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = v8;
    uint64_t v64 = swift_allocObject();
    *(double *)(v64 + 16) = v56;
    *(void *)(v64 + 24) = v8;
    sub_100CBD0EC(v61, v60, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v65 = swift_allocObject();
    sub_100CBD1B4(v60, v65 + v62, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v305 = swift_allocObject();
    *(void *)(v305 + 16) = sub_100CBE0E4;
    *(void *)(v305 + 24) = v65;
    uint64_t v295 = Logger.logObject.getter();
    v329.i8[0] = static os_log_type_t.default.getter();
    uint64_t v66 = swift_allocObject();
    *(unsigned char *)(v66 + 16) = 0;
    uint64_t v312 = swift_allocObject();
    *(unsigned char *)(v312 + 16) = 8;
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = sub_100331044;
    *(void *)(v67 + 24) = v63;
    uint64_t v68 = swift_allocObject();
    *(void *)(v68 + 16) = sub_10033108C;
    *(void *)(v68 + 24) = v67;
    uint64_t v69 = swift_allocObject();
    *(unsigned char *)(v69 + 16) = 0;
    uint64_t v70 = swift_allocObject();
    *(unsigned char *)(v70 + 16) = 8;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = sub_100CBEA4C;
    *(void *)(v71 + 24) = v64;
    uint64_t v72 = swift_allocObject();
    *(void *)(v72 + 16) = sub_100CC2A64;
    *(void *)(v72 + 24) = v71;
    uint64_t v73 = swift_allocObject();
    *(unsigned char *)(v73 + 16) = 34;
    uint64_t v74 = swift_allocObject();
    *(unsigned char *)(v74 + 16) = 8;
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = sub_100CC28B8;
    *(void *)(v75 + 24) = v305;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_1000654EC;
    *(void *)(v76 + 24) = v75;
    uint64_t v77 = swift_allocObject();
    sub_1004B810C(v77, 9);
    *uint64_t v78 = sub_100065514;
    v78[1] = v66;
    v78[2] = sub_100065514;
    v78[3] = v312;
    v78[4] = sub_100065504;
    v78[5] = v68;
    v78[6] = sub_100065514;
    v78[7] = v69;
    v78[8] = sub_100065514;
    v78[9] = v70;
    v78[10] = sub_100065504;
    v78[11] = v72;
    v78[12] = sub_100065514;
    v78[13] = v73;
    v78[14] = sub_100065514;
    v78[15] = v74;
    v78[16] = sub_100065500;
    v78[17] = v76;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v289 = v73;
    swift_retain();
    os_log_type_t v286 = (uint8_t *)v74;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v295;
    if (!os_log_type_enabled(v295, (os_log_type_t)v329.i8[0]))
    {
      unint64_t v118 = *(void *)(v0 + 1992);
      uint64_t v119 = *(void *)(v0 + 1984);
      uint64_t v120 = *(void *)(v0 + 1816);
      uint64_t v121 = *(void *)(v0 + 1728);
      uint64_t v122 = *(void *)(v0 + 1720);
      uint64_t v123 = *(void *)(v0 + 1384);

      sub_10001CFB8(v119, v118);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      uint64_t v54 = v121 + 8;
      uint64_t v55 = v124;
      v124(v120, v122);
      sub_10001DAB4(v123, &qword_10163F7B0);
      uint64_t v125 = *(void *)(v0 + 2008);
      goto LABEL_33;
    }
    uint64_t v277 = v70;
    uint64_t v79 = *(void *)(v0 + 2008);
    uint64_t v80 = (uint8_t *)sub_1008F9FAC();
    uint64_t v81 = swift_slowAlloc();
    *(void *)(v0 + 1080) = 0;
    uint64_t v268 = v80;
    *(void *)(v0 + 1088) = v81;
    *(_WORD *)uint64_t v80 = 770;
    *(void *)(v0 + 1072) = v80 + 2;
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v66;
    os_log_type_t v279 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 640);
    sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 640), v0 + 1072, v0 + 1080, v0 + 1088);
    if (v79)
    {
      uint64_t v116 = *(void *)(v0 + 1672);
      swift_errorRelease();
      return sub_100CBD154(v116, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    swift_release();
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v312;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065504;
    *(void *)(v0 + 648) = v68;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v69;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v70;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065504;
    *(void *)(v0 + 648) = v72;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v289;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065514;
    *(void *)(v0 + 648) = v286;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    swift_release();
    *(void *)(v0 + 640) = sub_100065500;
    *(void *)(v0 + 648) = v76;
    sub_1008F9FB4(v279, v0 + 1072, v0 + 1080, v0 + 1088);
    unint64_t v82 = *(void *)(v0 + 1992);
    uint64_t v83 = *(void *)(v0 + 1984);
    uint64_t v84 = *(void *)(v0 + 1816);
    uint64_t v85 = *(void *)(v0 + 1728);
    uint64_t v86 = *(void *)(v0 + 1720);
    uint64_t v87 = *(void *)(v0 + 1384);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v295, (os_log_type_t)v329.i8[0], "Secondary key %llu is not beyond low water %llu for %{public}s.", v268, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    sub_10001CFB8(v83, v82);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v55(v84, v86);
    uint64_t v88 = v87;
    goto LABEL_31;
  }
LABEL_2:
  uint64_t v327 = *(void *)(v0 + 2008);
  uint64_t v293 = *(void *)(v0 + 1984);
  unint64_t v301 = *(void *)(v0 + 1992);
  unint64_t v320 = *(void *)(v0 + 1912);
  uint64_t v309 = *(void *)(v0 + 1904);
  uint64_t v9 = *(void *)(v0 + 1576);
  uint64_t v10 = *(void *)(v0 + 1568);
  uint64_t v11 = *(void *)(v0 + 1512);
  uint64_t v12 = *(uint64_t **)(v0 + 1384);
  uint64_t v13 = *(void *)(v0 + 1376);
  uint64_t v285 = *(void *)(v0 + 1632);
  uint64_t v287 = *(void *)(v0 + 1368);
  uint64_t v14 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v0 + 1520) + 16);
  v14(v9, (char *)(*(void *)(v0 + 1680) + *(int *)(*(void *)(v0 + 1656) + 32)), v11);
  uint64_t v15 = *v12;
  v14(v10, (char *)v12 + *(int *)(v13 + 36), v11);
  sub_101263B40(v9, v15, v10, v285);
  uint64_t v16 = type metadata accessor for EncryptedData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v287, 1, 1, v16);
  sub_1000361E0(v293, v301);
  sub_101268234(v8, v293, v301, v287, (void *)(v0 + 16));
  sub_10000588C(&qword_101657A00);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = sub_1004B7678(v17, 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)(v0 + 16);
  long long v21 = *(_OWORD *)(v0 + 48);
  long long v20 = *(_OWORD *)(v0 + 64);
  long long v22 = *(_OWORD *)(v0 + 32);
  *(void *)(v19 + 64) = *(void *)(v0 + 80);
  *(_OWORD *)(v19 + 32) = v21;
  *(_OWORD *)(v19 + 48) = v20;
  *(_OWORD *)(v19 + 16) = v22;
  uint64_t v23 = SharingCircleWildAdvertisementKey.init(key:)(v18);
  sub_100037A38(v309, v320);
  sub_100CBE5B0((void *)(v0 + 16), (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
  uint64_t v24 = sub_100CBCA7C(v23, v309, v320);
  if (!v327)
  {
    uint64_t v91 = (uint64_t)v24;
    uint64_t v296 = *(void (**)(uint64_t, uint8_t *, uint64_t))(v0 + 1848);
    uint64_t v277 = v0 + 16;
    uint64_t v280 = *(void *)(v0 + 1824);
    uint64_t v283 = *(void *)(v0 + 1720);
    os_log_type_t v286 = *(uint8_t **)(v0 + 1840);
    uint64_t v92 = *(void *)(v0 + 1712);
    uint64_t v93 = *(void *)(v0 + 1632);
    uint64_t v94 = *(void *)(v0 + 1624);
    uint64_t v95 = *(unsigned char **)(v0 + 1360);
    uint64_t v96 = *(void *)(v0 + 1352);
    uint64_t v313 = *(void *)(v0 + 1272);
    unint64_t v97 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    uint64_t v98 = *(void *)(v0 + 1136);
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    swift_bridgeObjectRelease();
    sub_100CBD0EC(v93, v94, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_101263C08(1, v94, v91, v95);
    sub_100CBD0EC((uint64_t)v95, v96, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100C272D0(v96);
    v296(v280, v286, v283);
    sub_100CBD0EC(v98, v92, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v99 = swift_allocObject();
    sub_100CBD1B4(v92, v99 + v97, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v100 = swift_allocObject();
    *(void *)(v100 + 16) = sub_100CBE0E4;
    *(void *)(v100 + 24) = v99;
    sub_100CBD0EC((uint64_t)v95, v96, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v101 = (*(unsigned __int8 *)(v313 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v313 + 80);
    uint64_t v102 = swift_allocObject();
    sub_100CBD1B4(v96, v102 + v101, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v103 = swift_allocObject();
    *(void *)(v103 + 16) = sub_100CBE648;
    *(void *)(v103 + 24) = v102;
    v314 = Logger.logObject.getter();
    v329.i64[0] = static os_log_type_t.default.getter();
    uint64_t v104 = swift_allocObject();
    *(unsigned char *)(v104 + 16) = 34;
    uint64_t v105 = swift_allocObject();
    *(unsigned char *)(v105 + 16) = 8;
    uint64_t v106 = swift_allocObject();
    *(void *)(v106 + 16) = sub_100CC28B8;
    *(void *)(v106 + 24) = v100;
    uint64_t v107 = swift_allocObject();
    *(void *)(v107 + 16) = sub_1000654EC;
    *(void *)(v107 + 24) = v106;
    uint64_t v108 = swift_allocObject();
    *(unsigned char *)(v108 + 16) = 34;
    uint64_t v109 = swift_allocObject();
    *(unsigned char *)(v109 + 16) = 8;
    uint64_t v54 = (uint64_t)v314;
    uint64_t v110 = swift_allocObject();
    *(void *)(v110 + 16) = sub_100CC28BC;
    *(void *)(v110 + 24) = v103;
    uint64_t v111 = swift_allocObject();
    *(void *)(v111 + 16) = sub_1000654EC;
    *(void *)(v111 + 24) = v110;
    uint64_t v112 = swift_allocObject();
    sub_1004B810C(v112, 6);
    *uint64_t v113 = sub_100065514;
    v113[1] = v104;
    void v113[2] = sub_100065514;
    v113[3] = v105;
    v113[4] = sub_100065500;
    v113[5] = v107;
    v113[6] = sub_100065514;
    v113[7] = v108;
    v113[8] = sub_100065514;
    v113[9] = v109;
    v113[10] = sub_100065500;
    v113[11] = v111;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v314, (os_log_type_t)v329.i8[0]))
    {
      uint64_t v297 = v108;
      uint64_t v114 = (uint8_t *)sub_1008F9FAC();
      uint64_t v115 = swift_slowAlloc();
      *(void *)(v0 + 1112) = 0;
      os_log_type_t v286 = v114;
      *(void *)(v0 + 1120) = v115;
      *(_WORD *)uint64_t v114 = 514;
      *(void *)(v0 + 1104) = v114 + 2;
      *(void *)(v0 + 624) = sub_100065514;
      *(void *)(v0 + 632) = v104;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      swift_release();
      *(void *)(v0 + 624) = sub_100065514;
      *(void *)(v0 + 632) = v105;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      swift_release();
      *(void *)(v0 + 624) = sub_100065500;
      *(void *)(v0 + 632) = v107;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      swift_release();
      *(void *)(v0 + 624) = sub_100065514;
      *(void *)(v0 + 632) = v297;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      swift_release();
      *(void *)(v0 + 624) = sub_100065514;
      *(void *)(v0 + 632) = v109;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      swift_release();
      *(void *)(v0 + 624) = sub_100065500;
      *(void *)(v0 + 632) = v111;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 624), v0 + 1104, v0 + 1112, v0 + 1120);
      goto LABEL_92;
    }
    uint64_t v126 = *(void *)(v0 + 1984);
    uint64_t v127 = *(void *)(v0 + 1728);
    unint64_t v290 = *(void *)(v0 + 1992);
    uint64_t v291 = *(void *)(v0 + 1720);
    uint64_t v322 = *(void *)(v0 + 1632);
    v329.i64[0] = *(void *)(v0 + 1384);
    uint64_t v298 = *(void *)(v0 + 1824);
    uint64_t v306 = *(void *)(v0 + 1360);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    sub_100CBE5B0((void *)v277, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
    sub_10001CFB8(v126, v290);
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
    v55(v298, v291);
    sub_100CBD154(v306, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v322, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v88 = v329.i64[0];
    goto LABEL_31;
  }
  uint64_t v25 = v327;
  unint64_t v26 = *(void *)(v0 + 1992);
  uint64_t v27 = *(void *)(v0 + 1984);
  uint64_t v28 = *(void *)(v0 + 1632);
  uint64_t v29 = *(void *)(v0 + 1384);
  sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
  swift_bridgeObjectRelease();
  sub_100CBE5B0((void *)(v0 + 16), (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
  sub_10001CFB8(v27, v26);
  sub_100CBD154(v28, type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_10001DAB4(v29, &qword_10163F7B0);
  while (2)
  {
    char v302 = *(unsigned char *)(v0 + 2233);
    uint64_t v30 = *(void *)(v0 + 1712);
    uint64_t v31 = *(void *)(v0 + 1136);
    unint64_t v32 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    (*(void (**)(void))(v0 + 1848))();
    sub_100CBD0EC(v31, v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v33 = swift_allocObject();
    sub_100CBD1B4(v30, v33 + v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v310 = swift_allocObject();
    *(void *)(v310 + 16) = sub_100CBE0E4;
    *(void *)(v310 + 24) = v33;
    uint64_t v328 = swift_allocObject();
    *(unsigned char *)(v328 + 16) = v302;
    sub_100CBD0EC(v31, v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v34 = swift_allocObject();
    sub_100CBD1B4(v30, v34 + v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v303 = swift_allocObject();
    *(void *)(v303 + 16) = sub_100CBE2E4;
    *(void *)(v303 + 24) = v34;
    sub_100CBD0EC(v31, v30, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v35 = swift_allocObject();
    sub_100CBD1B4(v30, v35 + v32, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_100CBE300;
    *(void *)(v36 + 24) = v35;
    uint64_t v262 = swift_allocObject();
    *(void *)(v262 + 16) = v25;
    swift_errorRetain();
    os_log_t log = Logger.logObject.getter();
    os_log_type_t v259 = static os_log_type_t.error.getter();
    uint64_t v258 = swift_allocObject();
    *(unsigned char *)(v258 + 16) = 34;
    uint64_t v256 = swift_allocObject();
    *(unsigned char *)(v256 + 16) = 8;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_100CC28B8;
    *(void *)(v37 + 24) = v310;
    uint64_t v257 = swift_allocObject();
    *(void *)(v257 + 16) = sub_1000654EC;
    *(void *)(v257 + 24) = v37;
    uint64_t v311 = swift_allocObject();
    *(unsigned char *)(v311 + 16) = 34;
    uint64_t v38 = swift_allocObject();
    *(unsigned char *)(v38 + 16) = 8;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_100CBE3EC;
    *(void *)(v39 + 24) = v328;
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_1000654EC;
    *(void *)(v40 + 24) = v39;
    os_log_type_t v286 = (uint8_t *)swift_allocObject();
    v286[16] = 112;
    uint64_t v277 = swift_allocObject();
    *(unsigned char *)(v277 + 16) = 8;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = 1752392040;
    uint64_t v267 = (uint8_t *)swift_allocObject();
    *((void *)v267 + 2) = sub_10006550C;
    *((void *)v267 + 3) = v41;
    v329.i64[0] = swift_allocObject();
    *(unsigned char *)(v329.i64[0] + 16) = 33;
    uint64_t v321 = swift_allocObject();
    *(unsigned char *)(v321 + 16) = 8;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_1000654F4;
    *(void *)(v42 + 24) = v303;
    uint64_t v304 = swift_allocObject();
    *(void *)(v304 + 16) = sub_1000654EC;
    *(void *)(v304 + 24) = v42;
    uint64_t v294 = swift_allocObject();
    *(unsigned char *)(v294 + 16) = 112;
    uint64_t v288 = swift_allocObject();
    *(unsigned char *)(v288 + 16) = 8;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = 1752392040;
    uint64_t v282 = swift_allocObject();
    *(void *)(v282 + 16) = sub_10006550C;
    *(void *)(v282 + 24) = v43;
    uint64_t v278 = swift_allocObject();
    *(unsigned char *)(v278 + 16) = 33;
    uint64_t v270 = swift_allocObject();
    *(unsigned char *)(v270 + 16) = 8;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = sub_1000654F4;
    *(void *)(v44 + 24) = v36;
    uint64_t v266 = swift_allocObject();
    *(void *)(v266 + 16) = sub_1000654EC;
    *(void *)(v266 + 24) = v44;
    uint64_t v265 = swift_allocObject();
    *(unsigned char *)(v265 + 16) = 34;
    uint64_t v264 = swift_allocObject();
    *(unsigned char *)(v264 + 16) = 8;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_100CBE4A8;
    *(void *)(v45 + 24) = v262;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = sub_1000654EC;
    *(void *)(v46 + 24) = v45;
    uint64_t v47 = swift_allocObject();
    sub_1004B810C(v47, 21);
    *uint64_t v48 = sub_100065514;
    v48[1] = v258;
    v48[2] = sub_100065514;
    v48[3] = v256;
    v48[4] = sub_100065500;
    v48[5] = v257;
    v48[6] = sub_100065514;
    v48[7] = v311;
    v48[8] = sub_100065514;
    v48[9] = v38;
    v48[10] = sub_100065500;
    v48[11] = v40;
    v48[12] = sub_100065514;
    v48[13] = v286;
    v48[14] = sub_100065514;
    v48[15] = v277;
    v48[16] = sub_100065504;
    v48[17] = v267;
    v48[18] = sub_100065514;
    v48[19] = v329.i64[0];
    v48[20] = sub_100065514;
    v48[21] = v321;
    v48[22] = sub_100065500;
    v48[23] = v304;
    v48[24] = sub_100065514;
    v48[25] = v294;
    v48[26] = sub_100065514;
    v48[27] = v288;
    v48[28] = sub_100065504;
    v48[29] = v282;
    v48[30] = sub_100065514;
    v48[31] = v278;
    v48[32] = sub_100065514;
    v48[33] = v270;
    v48[34] = sub_100065500;
    v48[35] = v266;
    v48[36] = sub_100065514;
    v48[37] = v265;
    v48[38] = sub_100065514;
    v48[39] = v264;
    v48[40] = sub_100065500;
    v48[41] = v46;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v263 = v38;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(log, v259))
    {
      uint64_t v49 = (uint8_t *)sub_1008F9FAC();
      uint64_t v50 = swift_slowAlloc();
      *(void *)(v0 + 1096) = 0;
      buf = v49;
      *(void *)(v0 + 1056) = v50;
      *(_WORD *)uint64_t v49 = 1795;
      *(void *)(v0 + 888) = v49 + 2;
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v258;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v256;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v257;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v311;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v263;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v40;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v286;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v277;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v267;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v329.i64[0];
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v321;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v304;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v294;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v288;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v282;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v278;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v270;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v266;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v265;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v264;
      sub_1008F9FB4(v276, v275, v273, v274);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v46;
      sub_1008F9FB4(v276, v275, v273, v274);
      uint64_t v51 = *(void *)(v0 + 1736);
      uint64_t v52 = *(void *)(v0 + 1728);
      uint64_t v53 = *(void *)(v0 + 1720);
      swift_release();
      uint64_t v54 = (uint64_t)buf;
      _os_log_impl((void *)&_mh_execute_header, log, v259, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      swift_errorRelease();
      uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v55(v51, v53);
    }
    else
    {
      uint64_t v89 = *(void *)(v0 + 1736);
      uint64_t v90 = *(void *)(v0 + 1728);
      uint64_t v54 = *(void *)(v0 + 1720);
      swift_errorRelease();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
      v55(v89, v54);
    }
    while (1)
    {
      uint64_t v125 = 0;
LABEL_33:
      uint64_t v128 = *(void *)(v0 + 1960);
      if (v128 == *(void *)(v0 + 1928))
      {
LABEL_56:
        sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
        sub_1001300CC(v272);
        swift_bridgeObjectRelease();
        uint64_t v331 = *(void *)(v0 + 856);
        uint64_t v201 = *(void *)(v0 + 1680);
        uint64_t v202 = *(void *)(v0 + 1640);
        uint64_t v203 = *(void *)(v0 + 1504);
        sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_weakDestroy();
        sub_10001DAB4(v203, &qword_101654A38);
        sub_100CBD154(v202, type metadata accessor for KeyDropInterface.KeyAlignment);
        sub_100CBD154(v201, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v204 = *(uint64_t (**)(uint64_t))(v0 + 8);
        return v204(v331);
      }
      unint64_t v129 = (int64x2_t *)(v0 + 1944);
      int64x2_t v130 = vdupq_n_s64((unint64_t)v55);
LABEL_38:
      *unint64_t v129 = v130;
      *(void *)(v0 + 1936) = v125;
      uint64_t v132 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v128 + 32);
      *(unsigned char *)(v0 + 2233) = v132;
      *(void *)(v0 + 1960) = v128 + 1;
      if (!__OFADD__(v128, 1)) {
        break;
      }
      __break(1u);
LABEL_92:
      unint64_t v248 = *(void *)(v0 + 1992);
      uint64_t v249 = *(void *)(v0 + 1984);
      uint64_t v250 = *(void *)(v0 + 1824);
      uint64_t v251 = v54;
      uint64_t v252 = *(void *)(v0 + 1728);
      uint64_t v253 = *(void *)(v0 + 1720);
      uint64_t v308 = *(void *)(v0 + 1632);
      uint64_t v326 = *(void *)(v0 + 1384);
      uint64_t v254 = *(void *)(v0 + 1360);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v251, (os_log_type_t)v329.i8[0], "Keys to upload: %{public}s,\nadded: %{public}s.", v286, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      sub_100CBE5B0((void *)v277, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
      sub_10001CFB8(v249, v248);
      uint64_t v255 = *(void (**)(uint64_t, uint64_t))(v252 + 8);
      uint64_t v54 = v252 + 8;
      uint64_t v55 = v255;
      v255(v250, v253);
      sub_100CBD154(v254, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100CBD154(v308, type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v88 = v326;
LABEL_31:
      sub_10001DAB4(v88, &qword_10163F7B0);
    }
    switch(v132)
    {
      case 1:
        uint64_t v205 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v205);
        uint64_t v206 = type metadata accessor for BookmarkMetaData();
        int v207 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v206 - 8) + 48))(v205, 1, v206);
        uint64_t v208 = *(void *)(v0 + 1424);
        if (v207 == 1)
        {
          sub_10001DAB4(v208, &qword_10164B638);
          uint64_t v209 = 0;
        }
        else
        {
          uint64_t v209 = *(void *)(v208 + 8);
          sub_100CBD154(v208, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v209;
        uint64_t v244 = *(int *)(v0 + 2228);
        uint64_t v245 = *(void *)(v0 + 1136);
        uint64_t v246 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v246;
        *uint64_t v246 = v0;
        v246[1] = sub_100C62684;
        uint64_t v247 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v247, v245 + v244);
      case 4:
        uint64_t v210 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v210;
        *uint64_t v210 = v0;
        v210[1] = sub_100C691B0;
        uint64_t v211 = *(void *)(v0 + 1680);
        uint64_t v212 = *(void *)(v0 + 1256);
        uint64_t v213 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v212, v213, v211, (uint64_t)v272);
      case 5:
        uint64_t v134 = *(void *)(v0 + 1592);
        uint64_t v135 = *(void *)(v0 + 1584);
        uint64_t v136 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v136, &qword_101654A38);
        uint64_t v137 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
        *(void *)(v0 + 2056) = v137;
        *(void *)(v0 + 2064) = (v134 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v135) = v137(v136, 1, v135);
        sub_10001DAB4(v136, &qword_101654A38);
        if (v135 == 1)
        {
          uint64_t v224 = (void *)swift_task_alloc();
          *(void *)(v0 + 2072) = v224;
          void *v224 = v0;
          unint64_t v225 = sub_100C6C37C;
          goto LABEL_76;
        }
        uint64_t v54 = *(void *)(v0 + 2064);
        uint64_t v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
        uint64_t v139 = *(void *)(v0 + 1584);
        uint64_t v140 = *(void *)(v0 + 1488);
        sub_10001D074(*(void *)(v0 + 1504), v140, &qword_101654A38);
        if (v138(v140, 1, v139) == 1)
        {
          uint64_t v131 = *(void *)(v0 + 1488);
          goto LABEL_36;
        }
        sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v228 = (void *)swift_task_alloc();
        *(void *)(v0 + 2088) = v228;
        *uint64_t v228 = v0;
        v228[1] = sub_100C6EC08;
        uint64_t v229 = *(void *)(v0 + 1912);
        uint64_t v230 = *(void *)(v0 + 1904);
        uint64_t v231 = *(void *)(v0 + 1680);
        uint64_t v232 = *(void *)(v0 + 1616);
        uint64_t v233 = *(void *)(v0 + 1248);
        uint64_t v234 = *(void *)(v0 + 1136);
        char v235 = 0;
        goto LABEL_81;
      case 6:
        uint64_t v141 = *(void *)(v0 + 1592);
        uint64_t v142 = *(void *)(v0 + 1584);
        uint64_t v143 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v143, &qword_101654A38);
        uint64_t v144 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
        *(void *)(v0 + 2104) = v144;
        *(void *)(v0 + 2112) = (v141 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v142) = v144(v143, 1, v142);
        sub_10001DAB4(v143, &qword_101654A38);
        if (v142 == 1)
        {
          uint64_t v224 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v224;
          void *v224 = v0;
          unint64_t v225 = sub_100C71E1C;
LABEL_76:
          v224[1] = v225;
          uint64_t v226 = *(void *)(v0 + 1672);
          uint64_t v227 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v226, v227);
        }
        uint64_t v54 = *(void *)(v0 + 2112);
        uint64_t v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v146 = *(void *)(v0 + 1584);
        uint64_t v147 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v147, &qword_101654A38);
        if (v145(v147, 1, v146) == 1)
        {
          uint64_t v131 = *(void *)(v0 + 1472);
LABEL_36:
          sub_10001DAB4(v131, &qword_101654A38);
          int64x2_t v130 = *v129;
LABEL_37:
          uint64_t v128 = *(void *)(v0 + 1960);
          if (v128 == *(void *)(v0 + 1928)) {
            goto LABEL_56;
          }
          goto LABEL_38;
        }
        sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v236 = (void *)swift_task_alloc();
        *(void *)(v0 + 2136) = v236;
        *uint64_t v236 = v0;
        v236[1] = sub_100C746A8;
        uint64_t v229 = *(void *)(v0 + 1912);
        uint64_t v230 = *(void *)(v0 + 1904);
        uint64_t v231 = *(void *)(v0 + 1680);
        uint64_t v232 = *(void *)(v0 + 1608);
        uint64_t v233 = *(void *)(v0 + 1240);
        uint64_t v234 = *(void *)(v0 + 1136);
        char v235 = 1;
LABEL_81:
        return sub_100C9CC58(v233, v234, v231, v232, v235, v230, v229);
      case 8:
      case 10:
        int64x2_t v329 = v130;
        sub_1000F7878(v132, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        unint64_t v133 = *(void *)(v0 + 792);
        if (v133 >> 60 == 15)
        {
          int64x2_t v130 = v329;
        }
        else
        {
          uint64_t v155 = *(void *)(v0 + 784);
          unint64_t v156 = *(void *)(v0 + 1912);
          uint64_t v157 = *(void *)(v0 + 1904);
          uint64_t v158 = *(void *)(v0 + 1368);
          uint64_t v159 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 56))(v158, 1, 1, v159);
          sub_100037A38(v155, v133);
          uint64_t v269 = (uint8_t *)v155;
          unint64_t v271 = v133;
          sub_101268234(1, v155, v133, v158, v330);
          sub_10000588C(&qword_101657A00);
          uint64_t v160 = swift_allocObject();
          uint64_t v161 = sub_1004B7678(v160, 1);
          *(_OWORD *)uint64_t v162 = *(_OWORD *)v330;
          long long v164 = *(_OWORD *)(v0 + 336);
          long long v163 = *(_OWORD *)(v0 + 352);
          long long v165 = *(_OWORD *)(v0 + 320);
          *(void *)(v162 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v162 + 32) = v164;
          *(_OWORD *)(v162 + 48) = v163;
          *(_OWORD *)(v162 + 16) = v165;
          uint64_t v166 = SharingCircleWildAdvertisementKey.init(key:)(v161);
          sub_100037A38(v157, v156);
          sub_100CBE5B0(v330, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v167 = sub_100CBCA7C(v166, v157, v156);
          unint64_t v168 = *(void *)(v0 + 1912);
          uint64_t v169 = *(void *)(v0 + 1904);
          if (v125)
          {
            uint64_t v25 = v125;
            sub_100037A24(v169, v168);
            swift_bridgeObjectRelease();
            sub_100CBE5B0(v330, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24((uint64_t)v269, v271);
            continue;
          }
          uint64_t v170 = *(unsigned __int8 *)(v0 + 2224);
          uint64_t v292 = *(void *)(v0 + 1840);
          v299 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v281 = *(void *)(v0 + 1768);
          uint64_t v284 = *(void *)(v0 + 1720);
          uint64_t v171 = *(void *)(v0 + 1712);
          uint64_t v172 = *(void *)(v0 + 1640);
          uint64_t v173 = *(void *)(v0 + 1624);
          uint64_t v174 = *(void *)(v0 + 1352);
          uint64_t v175 = *(unsigned char **)(v0 + 1312);
          uint64_t v323 = *(void *)(v0 + 1272);
          uint64_t v176 = (v170 + 16) & ~v170;
          os_log_type_t v286 = (uint8_t *)(v170 | 7);
          uint64_t v277 = *(void *)(v0 + 1136);
          sub_100037A24(v169, v168);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v172, v173, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v132, v173, (uint64_t)v167, v175);
          sub_100CBD0EC((uint64_t)v175, v174, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v174);
          v299(v281, v292, v284);
          sub_100CBD0EC(v277, v171, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v177 = swift_allocObject();
          sub_100CBD1B4(v171, v177 + v176, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v178 = swift_allocObject();
          *(void *)(v178 + 16) = sub_100CBE0E4;
          *(void *)(v178 + 24) = v177;
          sub_100CBD0EC((uint64_t)v175, v174, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v179 = (*(unsigned __int8 *)(v323 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v323 + 80);
          uint64_t v180 = swift_allocObject();
          sub_100CBD1B4(v174, v180 + v179, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v181 = swift_allocObject();
          *(void *)(v181 + 16) = sub_100CBE648;
          *(void *)(v181 + 24) = v180;
          v329.i64[0] = Logger.logObject.getter();
          os_log_type_t v324 = static os_log_type_t.default.getter();
          uint64_t v182 = swift_allocObject();
          *(unsigned char *)(v182 + 16) = 34;
          uint64_t v183 = swift_allocObject();
          *(unsigned char *)(v183 + 16) = 8;
          uint64_t v184 = swift_allocObject();
          *(void *)(v184 + 16) = sub_100CC28B8;
          *(void *)(v184 + 24) = v178;
          uint64_t v54 = swift_allocObject();
          *(void *)(v54 + 16) = sub_1000654EC;
          *(void *)(v54 + 24) = v184;
          uint64_t v185 = swift_allocObject();
          *(unsigned char *)(v185 + 16) = 34;
          uint64_t v186 = swift_allocObject();
          *(unsigned char *)(v186 + 16) = 8;
          uint64_t v187 = swift_allocObject();
          *(void *)(v187 + 16) = sub_100CC28BC;
          *(void *)(v187 + 24) = v181;
          uint64_t v188 = swift_allocObject();
          *(void *)(v188 + 16) = sub_1000654EC;
          *(void *)(v188 + 24) = v187;
          uint64_t v189 = swift_allocObject();
          sub_1004B810C(v189, 6);
          *uint64_t v190 = sub_100065514;
          v190[1] = v182;
          v190[2] = sub_100065514;
          v190[3] = v183;
          v190[4] = sub_100065500;
          v190[5] = v54;
          v190[6] = sub_100065514;
          v190[7] = v185;
          v190[8] = sub_100065514;
          v190[9] = v186;
          v190[10] = sub_100065500;
          v190[11] = v188;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled((os_log_t)v329.i64[0], v324))
          {
            uint64_t v307 = v186;
            uint64_t v191 = (uint8_t *)sub_1008F9FAC();
            uint64_t v192 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v300 = v191;
            *(void *)(v0 + 1128) = v192;
            *(_WORD *)uint64_t v191 = 514;
            *(void *)(v0 + 872) = v191 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v182;
            sub_1008F9FB4(v319, v318, v317, v316);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v183;
            sub_1008F9FB4(v319, v318, v317, v316);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v54;
            sub_1008F9FB4(v319, v318, v317, v316);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v185;
            sub_1008F9FB4(v319, v318, v317, v316);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v307;
            sub_1008F9FB4(v319, v318, v317, v316);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v188;
            sub_1008F9FB4(v319, v318, v317, v316);
            uint64_t v193 = *(void *)(v0 + 1768);
            uint64_t v194 = *(void *)(v0 + 1728);
            uint64_t v195 = *(void *)(v0 + 1720);
            uint64_t v196 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v329.i64[0], v324, "Keys to upload: %{public}s,\nadded: %{public}s.", v300, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v330, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24((uint64_t)v269, v271);
            uint64_t v197 = *(void (**)(uint64_t, uint64_t))(v194 + 8);
            uint64_t v54 = v194 + 8;
            v197(v193, v195);
            sub_100CBD154(v196, type metadata accessor for KeyDropInterface.KeyPackage);
            uint64_t v125 = 0;
            int64x2_t v130 = vdupq_n_s64((unint64_t)v197);
          }
          else
          {
            uint64_t v315 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1728);
            uint64_t v199 = *(void *)(v0 + 1720);
            uint64_t v325 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v330, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24((uint64_t)v269, v271);
            uint64_t v200 = *(void (**)(uint64_t, uint64_t))(v198 + 8);
            v200(v315, v199);
            sub_100CBD154(v325, type metadata accessor for KeyDropInterface.KeyPackage);
            uint64_t v125 = 0;
            int64x2_t v130 = vdupq_n_s64((unint64_t)v200);
          }
          unint64_t v129 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_37;
      case 9:
        uint64_t v148 = *(void *)(v0 + 1592);
        uint64_t v149 = *(void *)(v0 + 1584);
        uint64_t v150 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v150, &qword_101654A38);
        uint64_t v151 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
        *(void *)(v0 + 2152) = v151;
        *(void *)(v0 + 2160) = (v148 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v149) = v151(v150, 1, v149);
        sub_10001DAB4(v150, &qword_101654A38);
        if (v149 == 1)
        {
          uint64_t v224 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v224;
          void *v224 = v0;
          unint64_t v225 = sub_100C778BC;
          goto LABEL_76;
        }
        uint64_t v54 = *(void *)(v0 + 2160);
        uint64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v153 = *(void *)(v0 + 1584);
        uint64_t v154 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v154, &qword_101654A38);
        if (v152(v154, 1, v153) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v237 = (void *)swift_task_alloc();
          *(void *)(v0 + 2184) = v237;
          *uint64_t v237 = v0;
          v237[1] = sub_100C7A148;
          uint64_t v238 = *(void *)(v0 + 1912);
          uint64_t v239 = *(void *)(v0 + 1904);
          uint64_t v240 = *(void *)(v0 + 1680);
          uint64_t v241 = *(void *)(v0 + 1600);
          uint64_t v242 = *(void *)(v0 + 1232);
          uint64_t v243 = *(void *)(v0 + 1136);
          return sub_100C9E300(v242, v243, v240, v241, v239, v238);
        }
        uint64_t v131 = *(void *)(v0 + 1456);
        goto LABEL_36;
      case 12:
        uint64_t v214 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v214;
        void *v214 = v0;
        v214[1] = sub_100C80934;
        uint64_t v215 = *(void *)(v0 + 1680);
        uint64_t v216 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v216, v215);
      case 13:
        unint64_t v217 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v217;
        void *v217 = v0;
        v217[1] = sub_100C7D35C;
        uint64_t v218 = *(void *)(v0 + 1680);
        uint64_t v219 = *(void *)(v0 + 1224);
        return sub_100CA020C(v219, v218);
      case 16:
        uint64_t v220 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v220;
        void *v220 = v0;
        v220[1] = sub_100C83EB4;
        uint64_t v221 = *(void *)(v0 + 1680);
        uint64_t v222 = *(void *)(v0 + 1536);
        uint64_t v223 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v222, v223, v221);
      default:
        goto LABEL_37;
    }
  }
}

uint64_t sub_100C691B0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2048) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C89F7C;
  }
  else {
    uint64_t v4 = sub_100C692DC;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C692DC()
{
  uint64_t v1 = v0 + 856;
  uint64_t v2 = *(void *)(v0 + 1272);
  uint64_t v3 = *(void *)(v0 + 1256);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v2 + 48))(v3, 1, *(void *)(v0 + 1264)) != 1)
  {
    uint64_t v222 = *(void *)(v0 + 1840);
    unint64_t v225 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v7 = *(void *)(v0 + 1800);
    uint64_t v8 = *(void *)(v0 + 1720);
    uint64_t v9 = *(void *)(v0 + 1712);
    uint64_t v10 = *(void *)(v0 + 1352);
    uint64_t v11 = *(void *)(v0 + 1344);
    uint64_t v221 = *(void *)(v0 + 1136);
    unint64_t v12 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    sub_100CBD1B4(v3, v11, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v248 = v0 + 856;
    sub_100C272D0(v10);
    v225(v7, v222, v8);
    sub_100CBD0EC(v221, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v13 = swift_allocObject();
    sub_100CBD1B4(v9, v13 + v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_100CBE0E4;
    *(void *)(v14 + 24) = v13;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v16 = swift_allocObject();
    sub_100CBD1B4(v10, v16 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v233 = swift_allocObject();
    *(void *)(v233 + 16) = sub_100CBE648;
    *(void *)(v233 + 24) = v16;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v17 = swift_allocObject();
    sub_100CBD1B4(v10, v17 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_100CBE7F4;
    *(void *)(v18 + 24) = v17;
    uint64_t v247 = Logger.logObject.getter();
    LOBYTE(v246) = static os_log_type_t.default.getter();
    uint64_t v250 = swift_allocObject();
    *(unsigned char *)(v250 + 16) = 34;
    uint64_t v237 = swift_allocObject();
    *(unsigned char *)(v237 + 16) = 8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100CC28B8;
    *(void *)(v19 + 24) = v14;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1000654EC;
    *(void *)(v20 + 24) = v19;
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 34;
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 8;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_100CC28BC;
    *(void *)(v23 + 24) = v233;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1000654EC;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 34;
    uint64_t v26 = swift_allocObject();
    *(unsigned char *)(v26 + 16) = 8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100CC28C0;
    *(void *)(v27 + 24) = v18;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_1000654EC;
    *(void *)(v28 + 24) = v27;
    uint64_t v29 = swift_allocObject();
    sub_1004B810C(v29, 9);
    *uint64_t v30 = sub_100065514;
    v30[1] = v250;
    void v30[2] = sub_100065514;
    uint64_t v30[3] = v237;
    void v30[4] = sub_100065500;
    v30[5] = v20;
    v30[6] = sub_100065514;
    v30[7] = v21;
    v30[8] = sub_100065514;
    v30[9] = v22;
    v30[10] = sub_100065500;
    v30[11] = v24;
    v30[12] = sub_100065514;
    v30[13] = v25;
    v30[14] = sub_100065514;
    v30[15] = v26;
    v30[16] = sub_100065500;
    v30[17] = v28;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v247, (os_log_type_t)v246))
    {
      uint64_t v223 = v24;
      uint64_t v31 = *(void *)(v0 + 2048);
      unint64_t v32 = (_WORD *)sub_1008F9FAC();
      uint64_t v33 = swift_slowAlloc();
      *(void *)(v0 + 1008) = 0;
      uint64_t v221 = (uint64_t)v32;
      *(void *)(v0 + 1016) = v33;
      *unint64_t v32 = 770;
      *(void *)(v0 + 1000) = v32 + 1;
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v250;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      if (v31)
      {
        uint64_t v34 = *(void *)(v0 + 1672);
        swift_errorRelease();
        return sub_100CBD154(v34, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      swift_release();
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v237;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065500;
      *(void *)(v0 + 696) = v20;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v21;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v22;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065500;
      *(void *)(v0 + 696) = v223;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v25;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065514;
      *(void *)(v0 + 696) = v26;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      swift_release();
      *(void *)(v0 + 688) = sub_100065500;
      *(void *)(v0 + 696) = v28;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 688), v0 + 1000, v0 + 1008, v0 + 1016);
      goto LABEL_77;
    }
    uint64_t v246 = *(NSObject **)(v0 + 1800);
    uint64_t v36 = *(void *)(v0 + 1728);
    uint64_t v37 = *(void *)(v0 + 1720);
    uint64_t v38 = *(void *)(v0 + 1344);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v36 + 8);
    v6(v246, v37);
    sub_100CBD154(v38, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v4 = *(void *)(v0 + 2048);
    goto LABEL_15;
  }
  sub_10001DAB4(v3, &qword_10165C148);
  uint64_t v4 = *(void *)(v0 + 2048);
  BOOL v5 = *(void (**)(NSObject *, uint64_t))(v0 + 1952);
  uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v0 + 1944);
  while (1)
  {
    uint64_t v39 = (uint64_t *)(v0 + 448);
    uint64_t v40 = *(void *)(v0 + 1960);
    if (v40 == *(void *)(v0 + 1928))
    {
LABEL_17:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v39);
      swift_bridgeObjectRelease();
      uint64_t v249 = *(void *)(v0 + 856);
      uint64_t v41 = *(void *)(v0 + 1680);
      uint64_t v42 = *(void *)(v0 + 1640);
      uint64_t v43 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v43, &qword_101654A38);
      sub_100CBD154(v42, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v41, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v44 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v44(v249);
    }
    uint64_t v45 = v0 + 304;
    uint64_t v205 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
    uint64_t v201 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
    uint64_t v247 = (v0 + 784);
    uint64_t v199 = v0 + 880;
    uint64_t v200 = v0 + 872;
    uint64_t v203 = v0 + 1056;
    uint64_t v204 = v0 + 888;
    uint64_t v202 = v0 + 1096;
    uint64_t v198 = v0 + 1128;
    uint64_t v248 = v1;
    uint64_t v211 = (void *)(v0 + 304);
LABEL_23:
    *(void *)(v0 + 1952) = v5;
    *(void *)(v0 + 1944) = v6;
    *(void *)(v0 + 1936) = v4;
    uint64_t v46 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v40 + 32);
    *(unsigned char *)(v0 + 2233) = v46;
    *(void *)(v0 + 1960) = v40 + 1;
    if (!__OFADD__(v40, 1)) {
      break;
    }
    __break(1u);
LABEL_77:
    uint64_t v193 = *(NSObject **)(v0 + 1800);
    uint64_t v194 = *(void *)(v0 + 1728);
    uint64_t v195 = *(void *)(v0 + 1720);
    uint64_t v196 = *(void *)(v0 + 1344);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v247, (os_log_type_t)v246, "Keys to upload: %{public}s,\nadded: %{public}s,\nkey indexes: %{public}s.", (uint8_t *)v221, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v194 + 8);
    v6(v193, v195);
    sub_100CBD154(v196, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v4 = 0;
LABEL_15:
    BOOL v5 = v6;
    uint64_t v1 = v248;
  }
  switch(v46)
  {
    case 1:
      uint64_t v150 = *(void *)(v0 + 1424);
      sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v150);
      uint64_t v151 = type metadata accessor for BookmarkMetaData();
      int v152 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v151 - 8) + 48))(v150, 1, v151);
      uint64_t v153 = *(void *)(v0 + 1424);
      if (v152 == 1)
      {
        sub_10001DAB4(v153, &qword_10164B638);
        uint64_t v154 = 0;
      }
      else
      {
        uint64_t v154 = *(void *)(v153 + 8);
        sub_100CBD154(v153, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      }
      *(void *)(v0 + 1968) = v154;
      uint64_t v189 = *(int *)(v0 + 2228);
      uint64_t v190 = *(void *)(v0 + 1136);
      uint64_t v191 = (void *)swift_task_alloc();
      *(void *)(v0 + 1976) = v191;
      void *v191 = v0;
      v191[1] = sub_100C62684;
      uint64_t v192 = *(void *)(v0 + 1392);
      return sub_100CA6DC8(v192, v190 + v189);
    case 4:
      uint64_t v155 = (void *)swift_task_alloc();
      *(void *)(v0 + 2040) = v155;
      *uint64_t v155 = v0;
      v155[1] = sub_100C691B0;
      uint64_t v156 = *(void *)(v0 + 1680);
      uint64_t v157 = *(void *)(v0 + 1256);
      uint64_t v158 = *(void *)(v0 + 1136);
      return sub_100C9B9FC(v157, v158, v156, (uint64_t)v39);
    case 5:
      uint64_t v95 = *(void *)(v0 + 1592);
      uint64_t v96 = *(void *)(v0 + 1584);
      uint64_t v97 = *(void *)(v0 + 1496);
      sub_10001D074(*(void *)(v0 + 1504), v97, &qword_101654A38);
      uint64_t v98 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v95 + 48);
      *(void *)(v0 + 2056) = v98;
      *(void *)(v0 + 2064) = (v95 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v96) = v98(v97, 1, v96);
      sub_10001DAB4(v97, &qword_101654A38);
      if (v96 == 1)
      {
        uint64_t v169 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v169;
        *uint64_t v169 = v0;
        uint64_t v170 = sub_100C6C37C;
        goto LABEL_61;
      }
      uint64_t v99 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
      uint64_t v100 = *(void *)(v0 + 1584);
      uint64_t v101 = *(void *)(v0 + 1488);
      sub_10001D074(*(void *)(v0 + 1504), v101, &qword_101654A38);
      if (v99(v101, 1, v100) == 1)
      {
        uint64_t v102 = *(void *)(v0 + 1488);
        goto LABEL_21;
      }
      sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v173 = (void *)swift_task_alloc();
      *(void *)(v0 + 2088) = v173;
      *uint64_t v173 = v0;
      v173[1] = sub_100C6EC08;
      uint64_t v174 = *(void *)(v0 + 1912);
      uint64_t v175 = *(void *)(v0 + 1904);
      uint64_t v176 = *(void *)(v0 + 1680);
      uint64_t v177 = *(void *)(v0 + 1616);
      uint64_t v178 = *(void *)(v0 + 1248);
      uint64_t v179 = *(void *)(v0 + 1136);
      char v180 = 0;
      goto LABEL_66;
    case 6:
      uint64_t v103 = *(void *)(v0 + 1592);
      uint64_t v104 = *(void *)(v0 + 1584);
      uint64_t v105 = *(void *)(v0 + 1480);
      sub_10001D074(*(void *)(v0 + 1504), v105, &qword_101654A38);
      uint64_t v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v103 + 48);
      *(void *)(v0 + 2104) = v106;
      *(void *)(v0 + 2112) = (v103 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v104) = v106(v105, 1, v104);
      sub_10001DAB4(v105, &qword_101654A38);
      if (v104 == 1)
      {
        uint64_t v169 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v169;
        *uint64_t v169 = v0;
        uint64_t v170 = sub_100C71E1C;
LABEL_61:
        v169[1] = v170;
        uint64_t v171 = *(void *)(v0 + 1672);
        uint64_t v172 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v171, v172);
      }
      uint64_t v107 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
      uint64_t v108 = *(void *)(v0 + 1584);
      uint64_t v109 = *(void *)(v0 + 1472);
      sub_10001D074(*(void *)(v0 + 1504), v109, &qword_101654A38);
      if (v107(v109, 1, v108) == 1)
      {
        uint64_t v102 = *(void *)(v0 + 1472);
LABEL_21:
        sub_10001DAB4(v102, &qword_101654A38);
        BOOL v5 = *(void (**)(NSObject *, uint64_t))(v0 + 1952);
        uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v0 + 1944);
LABEL_22:
        uint64_t v40 = *(void *)(v0 + 1960);
        if (v40 == *(void *)(v0 + 1928)) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v181 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v181;
      *uint64_t v181 = v0;
      v181[1] = sub_100C746A8;
      uint64_t v174 = *(void *)(v0 + 1912);
      uint64_t v175 = *(void *)(v0 + 1904);
      uint64_t v176 = *(void *)(v0 + 1680);
      uint64_t v177 = *(void *)(v0 + 1608);
      uint64_t v178 = *(void *)(v0 + 1240);
      uint64_t v179 = *(void *)(v0 + 1136);
      char v180 = 1;
LABEL_66:
      return sub_100C9CC58(v178, v179, v176, v177, v180, v175, v174);
    case 8:
    case 10:
      sub_1000F7878(v46, *(void *)(v0 + 504), (uint64_t *)v247);
      unint64_t v47 = *(void *)(v0 + 792);
      if (v47 >> 60 != 15)
      {
        uint64_t v48 = *(void *)(v0 + 784);
        unint64_t v49 = *(void *)(v0 + 1912);
        uint64_t v50 = *(void *)(v0 + 1904);
        uint64_t v51 = *(void *)(v0 + 1368);
        uint64_t v52 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
        sub_100037A38(v48, v47);
        sub_101268234(1, v48, v47, v51, (void *)v45);
        sub_10000588C(&qword_101657A00);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = sub_1004B7678(v53, 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v45;
        long long v57 = *(_OWORD *)(v45 + 32);
        long long v56 = *(_OWORD *)(v45 + 48);
        long long v58 = *(_OWORD *)(v45 + 16);
        *(void *)(v55 + 64) = *(void *)(v45 + 64);
        *(_OWORD *)(v55 + 32) = v57;
        *(_OWORD *)(v55 + 48) = v56;
        *(_OWORD *)(v55 + 16) = v58;
        unint64_t v59 = v47;
        uint64_t v60 = SharingCircleWildAdvertisementKey.init(key:)(v54);
        sub_100037A38(v50, v49);
        sub_100CBE5B0((void *)v45, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v61 = sub_100CBCA7C(v60, v50, v49);
        unint64_t v62 = (void *)v45;
        uint64_t v63 = (uint64_t)v61;
        unint64_t v64 = *(void *)(v0 + 1912);
        uint64_t v65 = *(void *)(v0 + 1904);
        if (v4)
        {
          sub_100037A24(v65, v64);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v62, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v48, v59);
          char v234 = *(unsigned char *)(v0 + 2233);
          uint64_t v66 = *(void *)(v0 + 1712);
          uint64_t v67 = *(void *)(v0 + 1136);
          unint64_t v68 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v69 = v4;
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v67, v66, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v70 = swift_allocObject();
          sub_100CBD1B4(v66, v70 + v68, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v238 = swift_allocObject();
          *(void *)(v238 + 16) = sub_100CBE0E4;
          *(void *)(v238 + 24) = v70;
          uint64_t v243 = swift_allocObject();
          *(unsigned char *)(v243 + 16) = v234;
          sub_100CBD0EC(v67, v66, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v71 = swift_allocObject();
          sub_100CBD1B4(v66, v71 + v68, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v226 = swift_allocObject();
          *(void *)(v226 + 16) = sub_100CBE2E4;
          *(void *)(v226 + 24) = v71;
          sub_100CBD0EC(v67, v66, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v72 = swift_allocObject();
          sub_100CBD1B4(v66, v72 + v68, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = sub_100CBE300;
          *(void *)(v73 + 24) = v72;
          uint64_t v74 = swift_allocObject();
          *(void *)(v74 + 16) = v69;
          swift_errorRetain();
          uint64_t v212 = Logger.logObject.getter();
          os_log_type_t v206 = static os_log_type_t.error.getter();
          uint64_t v75 = swift_allocObject();
          *(unsigned char *)(v75 + 16) = 34;
          uint64_t v76 = v75;
          uint64_t v217 = swift_allocObject();
          *(unsigned char *)(v217 + 16) = 8;
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = sub_100CC28B8;
          *(void *)(v77 + 24) = v238;
          uint64_t v246 = swift_allocObject();
          v246[2].uint64_t isa = (Class)sub_1000654EC;
          v246[3].uint64_t isa = (Class)v77;
          uint64_t v78 = swift_allocObject();
          *(unsigned char *)(v78 + 16) = 34;
          uint64_t v214 = swift_allocObject();
          *(unsigned char *)(v214 + 16) = 8;
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = sub_100CBE3EC;
          *(void *)(v79 + 24) = v243;
          uint64_t v244 = swift_allocObject();
          *(void *)(v244 + 16) = sub_1000654EC;
          *(void *)(v244 + 24) = v79;
          uint64_t v239 = swift_allocObject();
          *(unsigned char *)(v239 + 16) = 112;
          uint64_t v213 = swift_allocObject();
          *(unsigned char *)(v213 + 16) = 8;
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = 1752392040;
          uint64_t v235 = swift_allocObject();
          *(void *)(v235 + 16) = sub_10006550C;
          *(void *)(v235 + 24) = v80;
          uint64_t v230 = swift_allocObject();
          *(unsigned char *)(v230 + 16) = 33;
          uint64_t v228 = swift_allocObject();
          *(unsigned char *)(v228 + 16) = 8;
          uint64_t v81 = swift_allocObject();
          *(void *)(v81 + 16) = sub_1000654F4;
          *(void *)(v81 + 24) = v226;
          uint64_t v227 = swift_allocObject();
          *(void *)(v227 + 16) = sub_1000654EC;
          *(void *)(v227 + 24) = v81;
          uint64_t v224 = swift_allocObject();
          *(unsigned char *)(v224 + 16) = 112;
          uint64_t v82 = swift_allocObject();
          *(unsigned char *)(v82 + 16) = 8;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = 1752392040;
          uint64_t v221 = swift_allocObject();
          *(void *)(v221 + 16) = sub_10006550C;
          *(void *)(v221 + 24) = v83;
          uint64_t v84 = swift_allocObject();
          *(unsigned char *)(v84 + 16) = 33;
          uint64_t v210 = swift_allocObject();
          *(unsigned char *)(v210 + 16) = 8;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_1000654F4;
          *(void *)(v85 + 24) = v73;
          uint64_t v209 = swift_allocObject();
          *(void *)(v209 + 16) = sub_1000654EC;
          *(void *)(v209 + 24) = v85;
          uint64_t v208 = swift_allocObject();
          *(unsigned char *)(v208 + 16) = 34;
          uint64_t v219 = swift_allocObject();
          *(unsigned char *)(v219 + 16) = 8;
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = sub_100CBE4A8;
          *(void *)(v86 + 24) = v74;
          uint64_t v87 = swift_allocObject();
          *(void *)(v87 + 16) = sub_1000654EC;
          *(void *)(v87 + 24) = v86;
          uint64_t v88 = swift_allocObject();
          sub_1004B810C(v88, 21);
          *uint64_t v89 = sub_100065514;
          v89[1] = v76;
          v89[2] = sub_100065514;
          v89[3] = v217;
          v89[4] = sub_100065500;
          v89[5] = v246;
          v89[6] = sub_100065514;
          v89[7] = v78;
          v89[8] = sub_100065514;
          v89[9] = v214;
          v89[10] = sub_100065500;
          v89[11] = v244;
          v89[12] = sub_100065514;
          v89[13] = v239;
          v89[14] = sub_100065514;
          v89[15] = v213;
          v89[16] = sub_100065504;
          v89[17] = v235;
          v89[18] = sub_100065514;
          v89[19] = v230;
          v89[20] = sub_100065514;
          v89[21] = v228;
          v89[22] = sub_100065500;
          v89[23] = v227;
          v89[24] = sub_100065514;
          v89[25] = v224;
          v89[26] = sub_100065514;
          v89[27] = v82;
          v89[28] = sub_100065504;
          v89[29] = v221;
          v89[30] = sub_100065514;
          v89[31] = v84;
          v89[32] = sub_100065514;
          v89[33] = v210;
          v89[34] = sub_100065500;
          v89[35] = v209;
          v89[36] = sub_100065514;
          v89[37] = v208;
          v89[38] = sub_100065514;
          v89[39] = v219;
          v89[40] = sub_100065500;
          v89[41] = v87;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v212, v206))
          {
            uint64_t v90 = (uint8_t *)sub_1008F9FAC();
            uint64_t v91 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            buf = v90;
            *(void *)(v0 + 1056) = v91;
            *(_WORD *)uint64_t v90 = 1795;
            *(void *)(v0 + 888) = v90 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v76;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v217;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v246;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v78;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v214;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v244;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v239;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v213;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v235;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v230;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v228;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v227;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v224;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v82;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v221;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v84;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v210;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v209;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v208;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v219;
            sub_1008F9FB4(v205, v204, v202, v203);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v87;
            sub_1008F9FB4(v205, v204, v202, v203);
            uint64_t v92 = *(NSObject **)(v0 + 1736);
            uint64_t v93 = *(void *)(v0 + 1728);
            uint64_t v94 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v212, v206, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v93 + 8);
            v6(v92, v94);
          }
          else
          {
            uint64_t v146 = *(NSObject **)(v0 + 1736);
            uint64_t v147 = *(void *)(v0 + 1728);
            uint64_t v207 = *(void *)(v0 + 1720);
            swift_errorRelease();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v147 + 8);
            v6(v146, v207);
          }
          uint64_t v4 = 0;
          BOOL v5 = v6;
          uint64_t v45 = v0 + 304;
          uint64_t v39 = (uint64_t *)(v0 + 448);
        }
        else
        {
          uint64_t v215 = v48;
          unint64_t v216 = v59;
          uint64_t v231 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v229 = *(void *)(v0 + 1840);
          uint64_t v220 = *(void *)(v0 + 1768);
          uint64_t v221 = *(void *)(v0 + 1720);
          uint64_t v117 = *(void *)(v0 + 1712);
          uint64_t v118 = *(void *)(v0 + 1640);
          uint64_t v119 = *(void *)(v0 + 1624);
          uint64_t v120 = *(void *)(v0 + 1352);
          uint64_t v121 = *(unsigned char **)(v0 + 1312);
          uint64_t v240 = *(void *)(v0 + 1272);
          unint64_t v122 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v218 = *(void *)(v0 + 1136);
          sub_100037A24(v65, v64);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v118, v119, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v46, v119, v63, v121);
          sub_100CBD0EC((uint64_t)v121, v120, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v120);
          v231(v220, v229, v221);
          sub_100CBD0EC(v218, v117, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v123 = swift_allocObject();
          sub_100CBD1B4(v117, v123 + v122, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v124 = swift_allocObject();
          *(void *)(v124 + 16) = sub_100CBE0E4;
          *(void *)(v124 + 24) = v123;
          sub_100CBD0EC((uint64_t)v121, v120, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v125 = (*(unsigned __int8 *)(v240 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v240 + 80);
          uint64_t v126 = swift_allocObject();
          sub_100CBD1B4(v120, v126 + v125, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v127 = swift_allocObject();
          *(void *)(v127 + 16) = sub_100CBE648;
          *(void *)(v127 + 24) = v126;
          uint64_t v246 = Logger.logObject.getter();
          os_log_type_t v128 = static os_log_type_t.default.getter();
          uint64_t v129 = swift_allocObject();
          *(unsigned char *)(v129 + 16) = 34;
          uint64_t v130 = swift_allocObject();
          *(unsigned char *)(v130 + 16) = 8;
          uint64_t v131 = swift_allocObject();
          *(void *)(v131 + 16) = sub_100CC28B8;
          *(void *)(v131 + 24) = v124;
          uint64_t v132 = swift_allocObject();
          *(void *)(v132 + 16) = sub_1000654EC;
          *(void *)(v132 + 24) = v131;
          uint64_t v133 = swift_allocObject();
          *(unsigned char *)(v133 + 16) = 34;
          uint64_t v134 = swift_allocObject();
          *(unsigned char *)(v134 + 16) = 8;
          uint64_t v135 = swift_allocObject();
          *(void *)(v135 + 16) = sub_100CC28BC;
          *(void *)(v135 + 24) = v127;
          uint64_t v136 = swift_allocObject();
          *(void *)(v136 + 16) = sub_1000654EC;
          *(void *)(v136 + 24) = v135;
          uint64_t v137 = swift_allocObject();
          sub_1004B810C(v137, 6);
          *uint64_t v138 = sub_100065514;
          v138[1] = v129;
          v138[2] = sub_100065514;
          v138[3] = v130;
          v138[4] = sub_100065500;
          v138[5] = v132;
          v138[6] = sub_100065514;
          v138[7] = v133;
          v138[8] = sub_100065514;
          v138[9] = v134;
          v138[10] = sub_100065500;
          v138[11] = v136;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v246, v128))
          {
            uint64_t v241 = v134;
            os_log_type_t v236 = v128;
            uint64_t v139 = (uint8_t *)sub_1008F9FAC();
            uint64_t v140 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v232 = v139;
            *(void *)(v0 + 1128) = v140;
            *(_WORD *)uint64_t v139 = 514;
            *(void *)(v0 + 872) = v139 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v129;
            sub_1008F9FB4(v201, v200, v199, v198);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v130;
            sub_1008F9FB4(v201, v200, v199, v198);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v132;
            sub_1008F9FB4(v201, v200, v199, v198);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v133;
            sub_1008F9FB4(v201, v200, v199, v198);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v241;
            sub_1008F9FB4(v201, v200, v199, v198);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v136;
            sub_1008F9FB4(v201, v200, v199, v198);
            uint64_t v141 = *(NSObject **)(v0 + 1768);
            uint64_t v142 = *(void *)(v0 + 1728);
            uint64_t v143 = *(void *)(v0 + 1720);
            uint64_t v144 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v246, v236, "Keys to upload: %{public}s,\nadded: %{public}s.", v232, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            uint64_t v45 = v0 + 304;
            sub_100CBE5B0(v211, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v215, v216);
            uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v142 + 8);
            v6(v141, v143);
            uint64_t v145 = v144;
          }
          else
          {
            uint64_t v148 = *(void *)(v0 + 1728);
            uint64_t v149 = *(void *)(v0 + 1720);
            uint64_t v242 = *(NSObject **)(v0 + 1768);
            uint64_t v245 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            uint64_t v45 = v0 + 304;
            sub_100CBE5B0(v211, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v215, v216);
            uint64_t v6 = *(void (**)(NSObject *, uint64_t))(v148 + 8);
            v6(v242, v149);
            uint64_t v145 = v245;
          }
          sub_100CBD154(v145, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v4 = 0;
          BOOL v5 = v6;
          uint64_t v39 = (uint64_t *)(v0 + 448);
        }
      }
      goto LABEL_22;
    case 9:
      uint64_t v110 = *(void *)(v0 + 1592);
      uint64_t v111 = *(void *)(v0 + 1584);
      uint64_t v112 = *(void *)(v0 + 1464);
      sub_10001D074(*(void *)(v0 + 1504), v112, &qword_101654A38);
      uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
      *(void *)(v0 + 2152) = v113;
      *(void *)(v0 + 2160) = (v110 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v111) = v113(v112, 1, v111);
      sub_10001DAB4(v112, &qword_101654A38);
      if (v111 == 1)
      {
        uint64_t v169 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v169;
        *uint64_t v169 = v0;
        uint64_t v170 = sub_100C778BC;
        goto LABEL_61;
      }
      uint64_t v114 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
      uint64_t v115 = *(void *)(v0 + 1584);
      uint64_t v116 = *(void *)(v0 + 1456);
      sub_10001D074(*(void *)(v0 + 1504), v116, &qword_101654A38);
      if (v114(v116, 1, v115) != 1)
      {
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v182 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v182;
        *uint64_t v182 = v0;
        v182[1] = sub_100C7A148;
        uint64_t v183 = *(void *)(v0 + 1912);
        uint64_t v184 = *(void *)(v0 + 1904);
        uint64_t v185 = *(void *)(v0 + 1680);
        uint64_t v186 = *(void *)(v0 + 1600);
        uint64_t v187 = *(void *)(v0 + 1232);
        uint64_t v188 = *(void *)(v0 + 1136);
        return sub_100C9E300(v187, v188, v185, v186, v184, v183);
      }
      uint64_t v102 = *(void *)(v0 + 1456);
      goto LABEL_21;
    case 12:
      uint64_t v159 = (void *)swift_task_alloc();
      *(void *)(v0 + 2208) = v159;
      void *v159 = v0;
      v159[1] = sub_100C80934;
      uint64_t v160 = *(void *)(v0 + 1680);
      uint64_t v161 = *(void *)(v0 + 1168);
      return sub_100C9FCDC(v161, v160);
    case 13:
      uint64_t v162 = (void *)swift_task_alloc();
      *(void *)(v0 + 2200) = v162;
      *uint64_t v162 = v0;
      v162[1] = sub_100C7D35C;
      uint64_t v163 = *(void *)(v0 + 1680);
      uint64_t v164 = *(void *)(v0 + 1224);
      return sub_100CA020C(v164, v163);
    case 16:
      long long v165 = (void *)swift_task_alloc();
      *(void *)(v0 + 2216) = v165;
      *long long v165 = v0;
      v165[1] = sub_100C83EB4;
      uint64_t v166 = *(void *)(v0 + 1680);
      uint64_t v167 = *(void *)(v0 + 1536);
      uint64_t v168 = *(void *)(v0 + 1160);
      return sub_100CA0E04(v167, v168, v166);
    default:
      goto LABEL_22;
  }
}

uint64_t sub_100C6C37C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2080) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C8C6A8;
  }
  else {
    uint64_t v4 = sub_100C6C4A8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C6C4A8()
{
  uint64_t v187 = (void *)(v0 + 304);
  uint64_t v1 = (uint64_t *)(v0 + 784);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = v0 + 872;
  uint64_t v156 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v154 = v0 + 880;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v163 = (uint64_t *)(v0 + 448);
  uint64_t v2 = v0 + 1096;
  uint64_t v3 = v0 + 1128;
  uint64_t v4 = *(void *)(v0 + 2080);
LABEL_2:
  BOOL v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
  uint64_t v6 = *(void *)(v0 + 1584);
  uint64_t v7 = *(void *)(v0 + 1488);
  sub_10001D074(*(void *)(v0 + 1504), v7, &qword_101654A38);
  if (v5(v7, 1, v6) != 1)
  {
    sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v148 = (void *)swift_task_alloc();
    *(void *)(v0 + 2088) = v148;
    *uint64_t v148 = v0;
    v148[1] = sub_100C6EC08;
    uint64_t v134 = *(void *)(v0 + 1912);
    uint64_t v135 = *(void *)(v0 + 1904);
    uint64_t v136 = *(void *)(v0 + 1680);
    uint64_t v137 = *(void *)(v0 + 1616);
    uint64_t v138 = *(void *)(v0 + 1248);
    uint64_t v139 = *(void *)(v0 + 1136);
    char v140 = 0;
    goto LABEL_53;
  }
  sub_10001DAB4(*(void *)(v0 + 1488), &qword_101654A38);
  uint64_t v8 = *(void *)(v0 + 1960);
  if (v8 == *(void *)(v0 + 1928))
  {
LABEL_27:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v163);
    swift_bridgeObjectRelease();
    uint64_t v205 = *(void *)(v0 + 856);
    uint64_t v107 = *(void *)(v0 + 1680);
    uint64_t v108 = *(void *)(v0 + 1640);
    uint64_t v109 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v109, &qword_101654A38);
    sub_100CBD154(v108, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v107, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v110 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v110(v205);
  }
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
  uint64_t v168 = v1;
  uint64_t v172 = v2;
  uint64_t v169 = v3;
  while (1)
  {
    *(void *)(v0 + 1952) = v10;
    *(void *)(v0 + 1944) = v9;
    *(void *)(v0 + 1936) = v4;
    uint64_t v12 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v8 + 32);
    *(unsigned char *)(v0 + 2233) = v12;
    *(void *)(v0 + 1960) = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      uint64_t v153 = *(void *)(v0 + 1672);
      swift_errorRelease();
      return sub_100CBD154(v153, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    switch(v12)
    {
      case 1:
        uint64_t v112 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v112);
        uint64_t v113 = type metadata accessor for BookmarkMetaData();
        int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v112, 1, v113);
        uint64_t v115 = *(void *)(v0 + 1424);
        if (v114 == 1)
        {
          sub_10001DAB4(v115, &qword_10164B638);
          uint64_t v116 = 0;
        }
        else
        {
          uint64_t v116 = *(void *)(v115 + 8);
          sub_100CBD154(v115, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v116;
        uint64_t v149 = *(int *)(v0 + 2228);
        uint64_t v150 = *(void *)(v0 + 1136);
        uint64_t v151 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v151;
        *uint64_t v151 = v0;
        v151[1] = sub_100C62684;
        uint64_t v152 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v152, v150 + v149);
      case 4:
        uint64_t v117 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v117;
        *uint64_t v117 = v0;
        v117[1] = sub_100C691B0;
        uint64_t v118 = *(void *)(v0 + 1680);
        uint64_t v119 = *(void *)(v0 + 1256);
        uint64_t v120 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v119, v120, v118, (uint64_t)v163);
      case 5:
        uint64_t v101 = *(void *)(v0 + 1592);
        uint64_t v102 = *(void *)(v0 + 1584);
        uint64_t v103 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v103, &qword_101654A38);
        uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
        *(void *)(v0 + 2056) = v104;
        *(void *)(v0 + 2064) = (v101 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v102) = v104(v103, 1, v102);
        sub_10001DAB4(v103, &qword_101654A38);
        if (v102 != 1) {
          goto LABEL_2;
        }
        uint64_t v105 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v105;
        void *v105 = v0;
        uint64_t v106 = sub_100C6C37C;
        goto LABEL_46;
      case 6:
        uint64_t v56 = *(void *)(v0 + 1592);
        uint64_t v57 = *(void *)(v0 + 1584);
        uint64_t v58 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v58, &qword_101654A38);
        unint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
        *(void *)(v0 + 2104) = v59;
        *(void *)(v0 + 2112) = (v56 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v57) = v59(v58, 1, v57);
        sub_10001DAB4(v58, &qword_101654A38);
        if (v57 == 1)
        {
          uint64_t v105 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v105;
          void *v105 = v0;
          uint64_t v106 = sub_100C71E1C;
LABEL_46:
          v105[1] = v106;
          uint64_t v131 = *(void *)(v0 + 1672);
          uint64_t v132 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v131, v132);
        }
        uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v61 = *(void *)(v0 + 1584);
        uint64_t v62 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v62, &qword_101654A38);
        if (v60(v62, 1, v61) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v133 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v133;
          *uint64_t v133 = v0;
          v133[1] = sub_100C746A8;
          uint64_t v134 = *(void *)(v0 + 1912);
          uint64_t v135 = *(void *)(v0 + 1904);
          uint64_t v136 = *(void *)(v0 + 1680);
          uint64_t v137 = *(void *)(v0 + 1608);
          uint64_t v138 = *(void *)(v0 + 1240);
          uint64_t v139 = *(void *)(v0 + 1136);
          char v140 = 1;
LABEL_53:
          return sub_100C9CC58(v138, v139, v136, v137, v140, v135, v134);
        }
        uint64_t v11 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v11, &qword_101654A38);
        uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
        uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_7:
        uint64_t v8 = *(void *)(v0 + 1960);
        if (v8 == *(void *)(v0 + 1928)) {
          goto LABEL_27;
        }
        break;
      case 8:
      case 10:
        sub_1000F7878(v12, *(void *)(v0 + 504), v1);
        unint64_t v13 = *(void *)(v0 + 792);
        if (v13 >> 60 == 15) {
          goto LABEL_7;
        }
        uint64_t v14 = *(void *)(v0 + 784);
        unint64_t v15 = *(void *)(v0 + 1912);
        uint64_t v16 = *(void *)(v0 + 1904);
        uint64_t v17 = *(void *)(v0 + 1368);
        uint64_t v18 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
        sub_100037A38(v14, v13);
        sub_101268234(1, v14, v13, v17, v187);
        sub_10000588C(&qword_101657A00);
        uint64_t v19 = swift_allocObject();
        uint64_t v20 = sub_1004B7678(v19, 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v187;
        long long v23 = *(_OWORD *)(v0 + 336);
        long long v22 = *(_OWORD *)(v0 + 352);
        long long v24 = *(_OWORD *)(v0 + 320);
        *(void *)(v21 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v21 + 32) = v23;
        *(_OWORD *)(v21 + 48) = v22;
        *(_OWORD *)(v21 + 16) = v24;
        uint64_t v25 = SharingCircleWildAdvertisementKey.init(key:)(v20);
        sub_100037A38(v16, v15);
        sub_100CBE5B0(v187, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v26 = sub_100CBCA7C(v25, v16, v15);
        unint64_t v27 = *(void *)(v0 + 1912);
        uint64_t v28 = *(void *)(v0 + 1904);
        uint64_t v198 = v4;
        if (v4)
        {
          sub_100037A24(v28, v27);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v14, v13);
          char v192 = *(unsigned char *)(v0 + 2233);
          uint64_t v29 = *(void *)(v0 + 1712);
          uint64_t v30 = *(void *)(v0 + 1136);
          unint64_t v31 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v32 = swift_allocObject();
          sub_100CBD1B4(v29, v32 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = sub_100CBE0E4;
          *(void *)(v33 + 24) = v32;
          uint64_t v202 = swift_allocObject();
          *(unsigned char *)(v202 + 16) = v192;
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v34 = swift_allocObject();
          sub_100CBD1B4(v29, v34 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v193 = swift_allocObject();
          *(void *)(v193 + 16) = sub_100CBE2E4;
          *(void *)(v193 + 24) = v34;
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v35 = swift_allocObject();
          sub_100CBD1B4(v29, v35 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = sub_100CBE300;
          *(void *)(v36 + 24) = v35;
          uint64_t v161 = swift_allocObject();
          *(void *)(v161 + 16) = v198;
          swift_errorRetain();
          os_log_t log = Logger.logObject.getter();
          os_log_type_t v164 = static os_log_type_t.error.getter();
          uint64_t v185 = swift_allocObject();
          *(unsigned char *)(v185 + 16) = 34;
          uint64_t v37 = swift_allocObject();
          *(unsigned char *)(v37 + 16) = 8;
          uint64_t v38 = swift_allocObject();
          *(void *)(v38 + 16) = sub_100CC28B8;
          *(void *)(v38 + 24) = v33;
          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = sub_1000654EC;
          *(void *)(v39 + 24) = v38;
          uint64_t v40 = v39;
          uint64_t v41 = swift_allocObject();
          *(unsigned char *)(v41 + 16) = 34;
          uint64_t v175 = swift_allocObject();
          *(unsigned char *)(v175 + 16) = 8;
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = sub_100CBE3EC;
          *(void *)(v42 + 24) = v202;
          uint64_t v174 = swift_allocObject();
          *(void *)(v174 + 16) = sub_1000654EC;
          *(void *)(v174 + 24) = v42;
          uint64_t v203 = swift_allocObject();
          *(unsigned char *)(v203 + 16) = 112;
          uint64_t v173 = swift_allocObject();
          *(unsigned char *)(v173 + 16) = 8;
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = 1752392040;
          uint64_t v200 = swift_allocObject();
          *(void *)(v200 + 16) = sub_10006550C;
          *(void *)(v200 + 24) = v43;
          uint64_t v171 = swift_allocObject();
          *(unsigned char *)(v171 + 16) = 33;
          uint64_t v170 = swift_allocObject();
          *(unsigned char *)(v170 + 16) = 8;
          uint64_t v44 = swift_allocObject();
          *(void *)(v44 + 16) = sub_1000654F4;
          *(void *)(v44 + 24) = v193;
          uint64_t v194 = swift_allocObject();
          *(void *)(v194 + 16) = sub_1000654EC;
          *(void *)(v194 + 24) = v44;
          uint64_t v190 = swift_allocObject();
          *(unsigned char *)(v190 + 16) = 112;
          uint64_t v188 = swift_allocObject();
          *(unsigned char *)(v188 + 16) = 8;
          uint64_t v45 = swift_allocObject();
          *(void *)(v45 + 16) = 1752392040;
          uint64_t v184 = swift_allocObject();
          *(void *)(v184 + 16) = sub_10006550C;
          *(void *)(v184 + 24) = v45;
          uint64_t v183 = swift_allocObject();
          *(unsigned char *)(v183 + 16) = 33;
          uint64_t v167 = swift_allocObject();
          *(unsigned char *)(v167 + 16) = 8;
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 16) = sub_1000654F4;
          *(void *)(v46 + 24) = v36;
          uint64_t v181 = swift_allocObject();
          *(void *)(v181 + 16) = sub_1000654EC;
          *(void *)(v181 + 24) = v46;
          uint64_t v160 = swift_allocObject();
          *(unsigned char *)(v160 + 16) = 34;
          uint64_t v179 = swift_allocObject();
          *(unsigned char *)(v179 + 16) = 8;
          uint64_t v47 = swift_allocObject();
          *(void *)(v47 + 16) = sub_100CBE4A8;
          *(void *)(v47 + 24) = v161;
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = sub_1000654EC;
          *(void *)(v48 + 24) = v47;
          uint64_t v49 = swift_allocObject();
          sub_1004B810C(v49, 21);
          void *v50 = sub_100065514;
          v50[1] = v185;
          v50[2] = sub_100065514;
          v50[3] = v37;
          v50[4] = sub_100065500;
          v50[5] = v40;
          v50[6] = sub_100065514;
          v50[7] = v41;
          v50[8] = sub_100065514;
          v50[9] = v175;
          v50[10] = sub_100065500;
          v50[11] = v174;
          v50[12] = sub_100065514;
          v50[13] = v203;
          v50[14] = sub_100065514;
          v50[15] = v173;
          v50[16] = sub_100065504;
          v50[17] = v200;
          v50[18] = sub_100065514;
          v50[19] = v171;
          v50[20] = sub_100065514;
          v50[21] = v170;
          v50[22] = sub_100065500;
          v50[23] = v194;
          v50[24] = sub_100065514;
          v50[25] = v190;
          v50[26] = sub_100065514;
          v50[27] = v188;
          v50[28] = sub_100065504;
          v50[29] = v184;
          v50[30] = sub_100065514;
          v50[31] = v183;
          v50[32] = sub_100065514;
          v50[33] = v167;
          v50[34] = sub_100065500;
          v50[35] = v181;
          v50[36] = sub_100065514;
          v50[37] = v160;
          v50[38] = sub_100065514;
          v50[39] = v179;
          v50[40] = sub_100065500;
          v50[41] = v48;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(log, v164))
          {
            uint64_t v51 = (uint8_t *)sub_1008F9FAC();
            uint64_t v52 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            *(void *)(v0 + 1056) = v52;
            *(_WORD *)uint64_t v51 = 1795;
            *(void *)(v0 + 888) = v51 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v185;
            uint64_t v2 = v172;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v37;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v40;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v41;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v175;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v174;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v203;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v173;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v200;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v171;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v170;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v194;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v190;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v188;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v184;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v183;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v167;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v181;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v160;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v179;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v48;
            sub_1008F9FB4(v159, v158, v172, v157);
            uint64_t v53 = *(void *)(v0 + 1736);
            uint64_t v54 = *(void *)(v0 + 1728);
            uint64_t v55 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, log, v164, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v51, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
            v9(v53, v55);
            uint64_t v4 = 0;
            uint64_t v10 = v9;
            uint64_t v1 = v168;
            uint64_t v3 = v169;
            goto LABEL_7;
          }
          uint64_t v165 = *(void *)(v0 + 1736);
          uint64_t v98 = *(void *)(v0 + 1728);
          uint64_t v162 = *(void *)(v0 + 1720);
          swift_errorRelease();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
          v9(v165, v162);
        }
        else
        {
          uint64_t v176 = v14;
          unint64_t v177 = v13;
          uint64_t v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v186 = *(void *)(v0 + 1840);
          uint64_t v180 = *(void *)(v0 + 1768);
          uint64_t v182 = *(void *)(v0 + 1720);
          uint64_t v70 = *(void *)(v0 + 1712);
          uint64_t v71 = *(void *)(v0 + 1640);
          uint64_t v72 = *(void *)(v0 + 1624);
          uint64_t v73 = *(void *)(v0 + 1352);
          uint64_t v74 = *(unsigned char **)(v0 + 1312);
          uint64_t v195 = *(void *)(v0 + 1272);
          unint64_t v75 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v178 = *(void *)(v0 + 1136);
          sub_100037A24(v28, v27);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v71, v72, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v12, v72, (uint64_t)v26, v74);
          sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v73);
          v189(v180, v186, v182);
          sub_100CBD0EC(v178, v70, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v76 = swift_allocObject();
          sub_100CBD1B4(v70, v76 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = sub_100CBE0E4;
          *(void *)(v77 + 24) = v76;
          sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v78 = (*(unsigned __int8 *)(v195 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
          uint64_t v79 = swift_allocObject();
          sub_100CBD1B4(v73, v79 + v78, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = sub_100CBE648;
          *(void *)(v80 + 24) = v79;
          uint64_t v204 = Logger.logObject.getter();
          os_log_type_t v81 = static os_log_type_t.default.getter();
          uint64_t v82 = swift_allocObject();
          *(unsigned char *)(v82 + 16) = 34;
          uint64_t v83 = swift_allocObject();
          *(unsigned char *)(v83 + 16) = 8;
          uint64_t v84 = swift_allocObject();
          *(void *)(v84 + 16) = sub_100CC28B8;
          *(void *)(v84 + 24) = v77;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_1000654EC;
          *(void *)(v85 + 24) = v84;
          uint64_t v86 = swift_allocObject();
          *(unsigned char *)(v86 + 16) = 34;
          uint64_t v87 = swift_allocObject();
          *(unsigned char *)(v87 + 16) = 8;
          uint64_t v88 = swift_allocObject();
          *(void *)(v88 + 16) = sub_100CC28BC;
          *(void *)(v88 + 24) = v80;
          uint64_t v89 = swift_allocObject();
          *(void *)(v89 + 16) = sub_1000654EC;
          *(void *)(v89 + 24) = v88;
          uint64_t v90 = swift_allocObject();
          sub_1004B810C(v90, 6);
          *uint64_t v91 = sub_100065514;
          v91[1] = v82;
          v91[2] = sub_100065514;
          v91[3] = v83;
          v91[4] = sub_100065500;
          v91[5] = v85;
          v91[6] = sub_100065514;
          v91[7] = v86;
          v91[8] = sub_100065514;
          v91[9] = v87;
          v91[10] = sub_100065500;
          v91[11] = v89;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v204, v81))
          {
            uint64_t v199 = v87;
            os_log_type_t v196 = v81;
            uint64_t v92 = (uint8_t *)sub_1008F9FAC();
            uint64_t v93 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v191 = v92;
            *(void *)(v0 + 1128) = v93;
            *(_WORD *)uint64_t v92 = 514;
            *(void *)(v0 + 872) = v92 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v82;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v83;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v85;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v86;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v199;
            sub_1008F9FB4(v156, v155, v154, v169);
            uint64_t v3 = v169;
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v89;
            sub_1008F9FB4(v156, v155, v154, v169);
            uint64_t v94 = *(void *)(v0 + 1768);
            uint64_t v95 = *(void *)(v0 + 1728);
            uint64_t v96 = *(void *)(v0 + 1720);
            uint64_t v97 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v204, v196, "Keys to upload: %{public}s,\nadded: %{public}s.", v191, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v176, v177);
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
            v9(v94, v96);
            sub_100CBD154(v97, type metadata accessor for KeyDropInterface.KeyPackage);
            uint64_t v4 = 0;
            uint64_t v10 = v9;
            uint64_t v1 = v168;
            uint64_t v2 = v172;
            goto LABEL_7;
          }
          uint64_t v197 = *(void *)(v0 + 1768);
          uint64_t v99 = *(void *)(v0 + 1728);
          uint64_t v100 = *(void *)(v0 + 1720);
          uint64_t v201 = *(void *)(v0 + 1312);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v176, v177);
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
          v9(v197, v100);
          sub_100CBD154(v201, type metadata accessor for KeyDropInterface.KeyPackage);
        }
        uint64_t v4 = 0;
        uint64_t v10 = v9;
        uint64_t v1 = v168;
        uint64_t v2 = v172;
        uint64_t v3 = v169;
        goto LABEL_7;
      case 9:
        uint64_t v63 = *(void *)(v0 + 1592);
        uint64_t v64 = *(void *)(v0 + 1584);
        uint64_t v65 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v65, &qword_101654A38);
        uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
        *(void *)(v0 + 2152) = v66;
        *(void *)(v0 + 2160) = (v63 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v64) = v66(v65, 1, v64);
        sub_10001DAB4(v65, &qword_101654A38);
        if (v64 == 1)
        {
          uint64_t v105 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v105;
          void *v105 = v0;
          uint64_t v106 = sub_100C778BC;
          goto LABEL_46;
        }
        uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v68 = *(void *)(v0 + 1584);
        uint64_t v69 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v69, &qword_101654A38);
        if (v67(v69, 1, v68) == 1)
        {
          uint64_t v11 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v141 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v141;
        *uint64_t v141 = v0;
        v141[1] = sub_100C7A148;
        uint64_t v142 = *(void *)(v0 + 1912);
        uint64_t v143 = *(void *)(v0 + 1904);
        uint64_t v144 = *(void *)(v0 + 1680);
        uint64_t v145 = *(void *)(v0 + 1600);
        uint64_t v146 = *(void *)(v0 + 1232);
        uint64_t v147 = *(void *)(v0 + 1136);
        return sub_100C9E300(v146, v147, v144, v145, v143, v142);
      case 12:
        uint64_t v121 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v121;
        void *v121 = v0;
        v121[1] = sub_100C80934;
        uint64_t v122 = *(void *)(v0 + 1680);
        uint64_t v123 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v123, v122);
      case 13:
        os_log_type_t v128 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v128;
        void *v128 = v0;
        v128[1] = sub_100C7D35C;
        uint64_t v129 = *(void *)(v0 + 1680);
        uint64_t v130 = *(void *)(v0 + 1224);
        return sub_100CA020C(v130, v129);
      case 16:
        uint64_t v124 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v124;
        void *v124 = v0;
        v124[1] = sub_100C83EB4;
        uint64_t v125 = *(void *)(v0 + 1680);
        uint64_t v126 = *(void *)(v0 + 1536);
        uint64_t v127 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v126, v127, v125);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C6EC08()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2096) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C8EDD4;
  }
  else {
    uint64_t v4 = sub_100C6ED34;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C6ED34()
{
  uint64_t v1 = v0 + 856;
  uint64_t v2 = *(void *)(v0 + 1272);
  uint64_t v3 = *(void *)(v0 + 1248);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v2 + 48))(v3, 1, *(void *)(v0 + 1264)) != 1)
  {
    uint64_t v225 = *(void *)(v0 + 1840);
    uint64_t v228 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v7 = *(void *)(v0 + 1792);
    uint64_t v8 = *(void *)(v0 + 1720);
    uint64_t v9 = *(void *)(v0 + 1712);
    uint64_t v10 = *(void *)(v0 + 1352);
    uint64_t v11 = *(void *)(v0 + 1336);
    uint64_t v224 = *(uint8_t **)(v0 + 1136);
    unint64_t v12 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    sub_100CBD1B4(v3, v11, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v252 = v0 + 856;
    sub_100C272D0(v10);
    v228(v7, v225, v8);
    sub_100CBD0EC((uint64_t)v224, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v13 = swift_allocObject();
    sub_100CBD1B4(v9, v13 + v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_100CBE0E4;
    *(void *)(v14 + 24) = v13;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v16 = swift_allocObject();
    sub_100CBD1B4(v10, v16 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v236 = swift_allocObject();
    *(void *)(v236 + 16) = sub_100CBE648;
    *(void *)(v236 + 24) = v16;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v17 = swift_allocObject();
    sub_100CBD1B4(v10, v17 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v240 = swift_allocObject();
    *(void *)(v240 + 16) = sub_100CBE7F4;
    *(void *)(v240 + 24) = v17;
    uint64_t v251 = Logger.logObject.getter();
    LOBYTE(v250) = static os_log_type_t.default.getter();
    uint64_t v254 = swift_allocObject();
    *(unsigned char *)(v254 + 16) = 34;
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = 8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100CC28B8;
    *(void *)(v19 + 24) = v14;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1000654EC;
    *(void *)(v20 + 24) = v19;
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 34;
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 8;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_100CC28BC;
    *(void *)(v23 + 24) = v236;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1000654EC;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 34;
    uint64_t v26 = swift_allocObject();
    *(unsigned char *)(v26 + 16) = 8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100CC28C0;
    *(void *)(v27 + 24) = v240;
    uint64_t v28 = v18;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1000654EC;
    *(void *)(v29 + 24) = v27;
    uint64_t v30 = swift_allocObject();
    sub_1004B810C(v30, 9);
    *unint64_t v31 = sub_100065514;
    v31[1] = v254;
    void v31[2] = sub_100065514;
    v31[3] = v28;
    void v31[4] = sub_100065500;
    v31[5] = v20;
    v31[6] = sub_100065514;
    v31[7] = v21;
    v31[8] = sub_100065514;
    v31[9] = v22;
    v31[10] = sub_100065500;
    v31[11] = v24;
    v31[12] = sub_100065514;
    v31[13] = v25;
    v31[14] = sub_100065514;
    v31[15] = v26;
    v31[16] = sub_100065500;
    v31[17] = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v251, (os_log_type_t)v250))
    {
      uint64_t v226 = v29;
      uint64_t v32 = *(void *)(v0 + 2096);
      uint64_t v33 = (uint8_t *)sub_1008F9FAC();
      uint64_t v34 = swift_slowAlloc();
      *(void *)(v0 + 976) = 0;
      uint64_t v224 = v33;
      *(void *)(v0 + 984) = v34;
      *(_WORD *)uint64_t v33 = 770;
      *(void *)(v0 + 968) = v33 + 2;
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v254;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      if (v32)
      {
        uint64_t v35 = *(void *)(v0 + 1672);
        swift_errorRelease();
        return sub_100CBD154(v35, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      swift_release();
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v28;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065500;
      *(void *)(v0 + 712) = v20;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v21;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v22;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065500;
      *(void *)(v0 + 712) = v24;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v25;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065514;
      *(void *)(v0 + 712) = v26;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      swift_release();
      *(void *)(v0 + 704) = sub_100065500;
      *(void *)(v0 + 712) = v226;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 704), v0 + 968, v0 + 976, v0 + 984);
      goto LABEL_77;
    }
    uint64_t v37 = *(void *)(v0 + 1728);
    uint64_t v38 = *(void *)(v0 + 1720);
    uint64_t v39 = *(void *)(v0 + 1616);
    uint64_t v246 = *(void *)(v0 + 1792);
    uint64_t v250 = *(void *)(v0 + 1336);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v6(v246, v38);
    sub_100CBD154(v250, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v39, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = *(void *)(v0 + 2096);
    goto LABEL_15;
  }
  sub_100CBD154(*(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_10001DAB4(v3, &qword_10165C148);
  uint64_t v4 = *(void *)(v0 + 2096);
  BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
  while (1)
  {
    uint64_t v40 = (uint64_t *)(v0 + 448);
    uint64_t v41 = *(void *)(v0 + 1960);
    if (v41 == *(void *)(v0 + 1928))
    {
LABEL_17:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v40);
      swift_bridgeObjectRelease();
      uint64_t v253 = *(void *)(v0 + 856);
      uint64_t v42 = *(void *)(v0 + 1680);
      uint64_t v43 = *(void *)(v0 + 1640);
      uint64_t v44 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v44, &qword_101654A38);
      sub_100CBD154(v43, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v42, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v45(v253);
    }
    uint64_t v227 = (void *)(v0 + 304);
    uint64_t v207 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
    uint64_t v203 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
    uint64_t v251 = (v0 + 784);
    uint64_t v201 = v0 + 880;
    uint64_t v202 = v0 + 872;
    uint64_t v205 = v0 + 1056;
    uint64_t v206 = v0 + 888;
    uint64_t v204 = v0 + 1096;
    uint64_t v200 = v0 + 1128;
    uint64_t v252 = v1;
LABEL_23:
    *(void *)(v0 + 1952) = v5;
    *(void *)(v0 + 1944) = v6;
    *(void *)(v0 + 1936) = v4;
    uint64_t v46 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v41 + 32);
    *(unsigned char *)(v0 + 2233) = v46;
    *(void *)(v0 + 1960) = v41 + 1;
    if (!__OFADD__(v41, 1)) {
      break;
    }
    __break(1u);
LABEL_77:
    uint64_t v195 = *(void *)(v0 + 1792);
    uint64_t v196 = *(void *)(v0 + 1728);
    uint64_t v197 = *(void *)(v0 + 1720);
    uint64_t v198 = *(void *)(v0 + 1616);
    uint64_t v199 = *(void *)(v0 + 1336);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v251, (os_log_type_t)v250, "Keys to upload: %{public}s,\nadded primaryAddressPackage: %{public}s,\nkey indexes: %{public}s.", v224, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v196 + 8);
    v6(v195, v197);
    sub_100CBD154(v199, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = 0;
LABEL_15:
    BOOL v5 = v6;
    uint64_t v1 = v252;
  }
  switch(v46)
  {
    case 1:
      uint64_t v152 = *(void *)(v0 + 1424);
      sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v152);
      uint64_t v153 = type metadata accessor for BookmarkMetaData();
      int v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 48))(v152, 1, v153);
      uint64_t v155 = *(void *)(v0 + 1424);
      if (v154 == 1)
      {
        sub_10001DAB4(v155, &qword_10164B638);
        uint64_t v156 = 0;
      }
      else
      {
        uint64_t v156 = *(void *)(v155 + 8);
        sub_100CBD154(v155, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      }
      *(void *)(v0 + 1968) = v156;
      uint64_t v191 = *(int *)(v0 + 2228);
      uint64_t v192 = *(void *)(v0 + 1136);
      uint64_t v193 = (void *)swift_task_alloc();
      *(void *)(v0 + 1976) = v193;
      *uint64_t v193 = v0;
      v193[1] = sub_100C62684;
      uint64_t v194 = *(void *)(v0 + 1392);
      return sub_100CA6DC8(v194, v192 + v191);
    case 4:
      uint64_t v157 = (void *)swift_task_alloc();
      *(void *)(v0 + 2040) = v157;
      *uint64_t v157 = v0;
      v157[1] = sub_100C691B0;
      uint64_t v158 = *(void *)(v0 + 1680);
      uint64_t v159 = *(void *)(v0 + 1256);
      uint64_t v160 = *(void *)(v0 + 1136);
      return sub_100C9B9FC(v159, v160, v158, (uint64_t)v40);
    case 5:
      uint64_t v96 = *(void *)(v0 + 1592);
      uint64_t v97 = *(void *)(v0 + 1584);
      uint64_t v98 = *(void *)(v0 + 1496);
      sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
      uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
      *(void *)(v0 + 2056) = v99;
      *(void *)(v0 + 2064) = (v96 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v97) = v99(v98, 1, v97);
      sub_10001DAB4(v98, &qword_101654A38);
      if (v97 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C6C37C;
        goto LABEL_61;
      }
      uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
      uint64_t v101 = *(void *)(v0 + 1584);
      uint64_t v102 = *(void *)(v0 + 1488);
      sub_10001D074(*(void *)(v0 + 1504), v102, &qword_101654A38);
      if (v100(v102, 1, v101) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1488);
        goto LABEL_21;
      }
      sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v175 = (void *)swift_task_alloc();
      *(void *)(v0 + 2088) = v175;
      *uint64_t v175 = v0;
      v175[1] = sub_100C6EC08;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1616);
      uint64_t v180 = *(void *)(v0 + 1248);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 0;
      goto LABEL_66;
    case 6:
      uint64_t v104 = *(void *)(v0 + 1592);
      uint64_t v105 = *(void *)(v0 + 1584);
      uint64_t v106 = *(void *)(v0 + 1480);
      sub_10001D074(*(void *)(v0 + 1504), v106, &qword_101654A38);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
      *(void *)(v0 + 2104) = v107;
      *(void *)(v0 + 2112) = (v104 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v105) = v107(v106, 1, v105);
      sub_10001DAB4(v106, &qword_101654A38);
      if (v105 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C71E1C;
LABEL_61:
        v171[1] = v172;
        uint64_t v173 = *(void *)(v0 + 1672);
        uint64_t v174 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v173, v174);
      }
      uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
      uint64_t v109 = *(void *)(v0 + 1584);
      uint64_t v110 = *(void *)(v0 + 1472);
      sub_10001D074(*(void *)(v0 + 1504), v110, &qword_101654A38);
      if (v108(v110, 1, v109) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1472);
LABEL_21:
        sub_10001DAB4(v103, &qword_101654A38);
        BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
        uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_22:
        uint64_t v41 = *(void *)(v0 + 1960);
        if (v41 == *(void *)(v0 + 1928)) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v183 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v183;
      *uint64_t v183 = v0;
      v183[1] = sub_100C746A8;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1608);
      uint64_t v180 = *(void *)(v0 + 1240);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 1;
LABEL_66:
      return sub_100C9CC58(v180, v181, v178, v179, v182, v177, v176);
    case 8:
    case 10:
      sub_1000F7878(v46, *(void *)(v0 + 504), (uint64_t *)v251);
      unint64_t v47 = *(void *)(v0 + 792);
      if (v47 >> 60 != 15)
      {
        uint64_t v48 = *(void *)(v0 + 784);
        unint64_t v49 = *(void *)(v0 + 1912);
        uint64_t v50 = *(void *)(v0 + 1904);
        uint64_t v51 = *(void *)(v0 + 1368);
        uint64_t v52 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
        sub_100037A38(v48, v47);
        sub_101268234(1, v48, v47, v51, v227);
        sub_10000588C(&qword_101657A00);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = sub_1004B7678(v53, 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v227;
        long long v57 = *(_OWORD *)(v0 + 336);
        long long v56 = *(_OWORD *)(v0 + 352);
        long long v58 = *(_OWORD *)(v0 + 320);
        *(void *)(v55 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v55 + 32) = v57;
        *(_OWORD *)(v55 + 48) = v56;
        *(_OWORD *)(v55 + 16) = v58;
        uint64_t v59 = SharingCircleWildAdvertisementKey.init(key:)(v54);
        sub_100037A38(v50, v49);
        sub_100CBE5B0(v227, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v60 = sub_100CBCA7C(v59, v50, v49);
        unint64_t v61 = *(void *)(v0 + 1912);
        uint64_t v62 = *(void *)(v0 + 1904);
        if (v4)
        {
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v48, v47);
          char v237 = *(unsigned char *)(v0 + 2233);
          uint64_t v63 = *(void *)(v0 + 1712);
          uint64_t v64 = *(void *)(v0 + 1136);
          unint64_t v65 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v66 = v4;
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v67 = swift_allocObject();
          sub_100CBD1B4(v63, v67 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v241 = swift_allocObject();
          *(void *)(v241 + 16) = sub_100CBE0E4;
          *(void *)(v241 + 24) = v67;
          uint64_t v247 = swift_allocObject();
          *(unsigned char *)(v247 + 16) = v237;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v68 = swift_allocObject();
          sub_100CBD1B4(v63, v68 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v232 = swift_allocObject();
          *(void *)(v232 + 16) = sub_100CBE2E4;
          *(void *)(v232 + 24) = v68;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v69 = swift_allocObject();
          sub_100CBD1B4(v63, v69 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v70 = swift_allocObject();
          *(void *)(v70 + 16) = sub_100CBE300;
          *(void *)(v70 + 24) = v69;
          uint64_t v71 = swift_allocObject();
          *(void *)(v71 + 16) = v66;
          swift_errorRetain();
          os_log_t log = Logger.logObject.getter();
          os_log_type_t v209 = static os_log_type_t.error.getter();
          uint64_t v218 = swift_allocObject();
          *(unsigned char *)(v218 + 16) = 34;
          uint64_t v72 = swift_allocObject();
          *(unsigned char *)(v72 + 16) = 8;
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = sub_100CC28B8;
          *(void *)(v73 + 24) = v241;
          uint64_t v215 = swift_allocObject();
          *(void *)(v215 + 16) = sub_1000654EC;
          *(void *)(v215 + 24) = v73;
          uint64_t v74 = swift_allocObject();
          *(unsigned char *)(v74 + 16) = 34;
          uint64_t v75 = v74;
          uint64_t v250 = swift_allocObject();
          *(unsigned char *)(v250 + 16) = 8;
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = sub_100CBE3EC;
          *(void *)(v76 + 24) = v247;
          uint64_t v248 = swift_allocObject();
          *(void *)(v248 + 16) = sub_1000654EC;
          *(void *)(v248 + 24) = v76;
          uint64_t v242 = swift_allocObject();
          *(unsigned char *)(v242 + 16) = 112;
          uint64_t v214 = swift_allocObject();
          *(unsigned char *)(v214 + 16) = 8;
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = 1752392040;
          uint64_t v238 = swift_allocObject();
          *(void *)(v238 + 16) = sub_10006550C;
          *(void *)(v238 + 24) = v77;
          uint64_t v213 = swift_allocObject();
          *(unsigned char *)(v213 + 16) = 33;
          uint64_t v212 = swift_allocObject();
          *(unsigned char *)(v212 + 16) = 8;
          uint64_t v78 = swift_allocObject();
          *(void *)(v78 + 16) = sub_1000654F4;
          *(void *)(v78 + 24) = v232;
          uint64_t v233 = swift_allocObject();
          *(void *)(v233 + 16) = sub_1000654EC;
          *(void *)(v233 + 24) = v78;
          uint64_t v230 = swift_allocObject();
          *(unsigned char *)(v230 + 16) = 112;
          uint64_t v224 = (uint8_t *)swift_allocObject();
          v224[16] = 8;
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = 1752392040;
          uint64_t v229 = swift_allocObject();
          *(void *)(v229 + 16) = sub_10006550C;
          *(void *)(v229 + 24) = v79;
          uint64_t v80 = swift_allocObject();
          *(unsigned char *)(v80 + 16) = 33;
          uint64_t v81 = v80;
          uint64_t v222 = swift_allocObject();
          *(unsigned char *)(v222 + 16) = 8;
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = sub_1000654F4;
          *(void *)(v82 + 24) = v70;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = sub_1000654EC;
          *(void *)(v83 + 24) = v82;
          uint64_t v84 = v83;
          uint64_t v211 = swift_allocObject();
          *(unsigned char *)(v211 + 16) = 34;
          uint64_t v220 = swift_allocObject();
          *(unsigned char *)(v220 + 16) = 8;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_100CBE4A8;
          *(void *)(v85 + 24) = v71;
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = sub_1000654EC;
          *(void *)(v86 + 24) = v85;
          uint64_t v87 = swift_allocObject();
          sub_1004B810C(v87, 21);
          *uint64_t v88 = sub_100065514;
          v88[1] = v218;
          uint64_t v88[2] = sub_100065514;
          v88[3] = v72;
          v88[4] = sub_100065500;
          v88[5] = v215;
          v88[6] = sub_100065514;
          v88[7] = v75;
          v88[8] = sub_100065514;
          v88[9] = v250;
          v88[10] = sub_100065500;
          v88[11] = v248;
          v88[12] = sub_100065514;
          v88[13] = v242;
          v88[14] = sub_100065514;
          v88[15] = v214;
          v88[16] = sub_100065504;
          v88[17] = v238;
          v88[18] = sub_100065514;
          v88[19] = v213;
          v88[20] = sub_100065514;
          v88[21] = v212;
          v88[22] = sub_100065500;
          v88[23] = v233;
          v88[24] = sub_100065514;
          v88[25] = v230;
          v88[26] = sub_100065514;
          v88[27] = v224;
          v88[28] = sub_100065504;
          v88[29] = v229;
          v88[30] = sub_100065514;
          v88[31] = v81;
          uint64_t v89 = v81;
          v88[32] = sub_100065514;
          v88[33] = v222;
          v88[34] = sub_100065500;
          v88[35] = v84;
          uint64_t v90 = v84;
          v88[36] = sub_100065514;
          v88[37] = v211;
          v88[38] = sub_100065514;
          v88[39] = v220;
          v88[40] = sub_100065500;
          v88[41] = v86;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(log, v209))
          {
            uint64_t v91 = (uint8_t *)sub_1008F9FAC();
            uint64_t v92 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            *(void *)(v0 + 1056) = v92;
            *(_WORD *)uint64_t v91 = 1795;
            *(void *)(v0 + 888) = v91 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v218;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v72;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v215;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v75;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v250;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v248;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v242;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v214;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v238;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v213;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v212;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v233;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v230;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v224;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v229;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v89;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v222;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v90;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v211;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v220;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v86;
            sub_1008F9FB4(v207, v206, v204, v205);
            uint64_t v93 = *(void *)(v0 + 1736);
            uint64_t v94 = *(void *)(v0 + 1728);
            uint64_t v95 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, log, v209, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v91, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
            v6(v93, v95);
          }
          else
          {
            uint64_t v148 = *(void *)(v0 + 1736);
            uint64_t v149 = *(void *)(v0 + 1728);
            uint64_t v210 = *(void *)(v0 + 1720);
            swift_errorRelease();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
            v6(v148, v210);
          }
        }
        else
        {
          uint64_t v216 = v48;
          unint64_t v217 = v47;
          uint64_t v118 = *(unsigned __int8 *)(v0 + 2224);
          char v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v231 = *(void *)(v0 + 1840);
          uint64_t v221 = *(void *)(v0 + 1768);
          uint64_t v223 = *(void *)(v0 + 1720);
          uint64_t v119 = *(void *)(v0 + 1712);
          uint64_t v120 = *(void *)(v0 + 1640);
          uint64_t v121 = *(void *)(v0 + 1624);
          uint64_t v122 = *(void *)(v0 + 1352);
          uint64_t v123 = *(unsigned char **)(v0 + 1312);
          uint64_t v243 = *(void *)(v0 + 1272);
          uint64_t v124 = (v118 + 16) & ~v118;
          uint64_t v224 = (uint8_t *)(v118 | 7);
          uint64_t v219 = *(void *)(v0 + 1136);
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v120, v121, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v46, v121, (uint64_t)v60, v123);
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v122);
          v234(v221, v231, v223);
          sub_100CBD0EC(v219, v119, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v125 = swift_allocObject();
          sub_100CBD1B4(v119, v125 + v124, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v126 = swift_allocObject();
          *(void *)(v126 + 16) = sub_100CBE0E4;
          *(void *)(v126 + 24) = v125;
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v127 = (*(unsigned __int8 *)(v243 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80);
          uint64_t v128 = swift_allocObject();
          sub_100CBD1B4(v122, v128 + v127, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v129 = swift_allocObject();
          *(void *)(v129 + 16) = sub_100CBE648;
          *(void *)(v129 + 24) = v128;
          uint64_t v250 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.default.getter();
          uint64_t v131 = swift_allocObject();
          *(unsigned char *)(v131 + 16) = 34;
          uint64_t v132 = swift_allocObject();
          *(unsigned char *)(v132 + 16) = 8;
          uint64_t v133 = swift_allocObject();
          *(void *)(v133 + 16) = sub_100CC28B8;
          *(void *)(v133 + 24) = v126;
          uint64_t v134 = swift_allocObject();
          *(void *)(v134 + 16) = sub_1000654EC;
          *(void *)(v134 + 24) = v133;
          uint64_t v135 = swift_allocObject();
          *(unsigned char *)(v135 + 16) = 34;
          uint64_t v136 = swift_allocObject();
          *(unsigned char *)(v136 + 16) = 8;
          uint64_t v137 = swift_allocObject();
          *(void *)(v137 + 16) = sub_100CC28BC;
          *(void *)(v137 + 24) = v129;
          uint64_t v138 = swift_allocObject();
          *(void *)(v138 + 16) = sub_1000654EC;
          *(void *)(v138 + 24) = v137;
          uint64_t v139 = swift_allocObject();
          sub_1004B810C(v139, 6);
          *char v140 = sub_100065514;
          v140[1] = v131;
          v140[2] = sub_100065514;
          v140[3] = v132;
          v140[4] = sub_100065500;
          v140[5] = v134;
          v140[6] = sub_100065514;
          v140[7] = v135;
          v140[8] = sub_100065514;
          v140[9] = v136;
          v140[10] = sub_100065500;
          v140[11] = v138;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled((os_log_t)v250, v130))
          {
            uint64_t v244 = v136;
            os_log_type_t v239 = v130;
            uint64_t v141 = (uint8_t *)sub_1008F9FAC();
            uint64_t v142 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v235 = v141;
            *(void *)(v0 + 1128) = v142;
            *(_WORD *)uint64_t v141 = 514;
            *(void *)(v0 + 872) = v141 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v131;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v132;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v134;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v135;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v244;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v138;
            sub_1008F9FB4(v203, v202, v201, v200);
            uint64_t v143 = *(void *)(v0 + 1768);
            uint64_t v144 = *(void *)(v0 + 1728);
            uint64_t v145 = *(void *)(v0 + 1720);
            uint64_t v146 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v250, v239, "Keys to upload: %{public}s,\nadded: %{public}s.", v235, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
            v6(v143, v145);
            uint64_t v147 = v146;
          }
          else
          {
            uint64_t v150 = *(void *)(v0 + 1728);
            uint64_t v151 = *(void *)(v0 + 1720);
            uint64_t v245 = *(void *)(v0 + 1768);
            uint64_t v249 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
            v6(v245, v151);
            uint64_t v147 = v249;
          }
          sub_100CBD154(v147, type metadata accessor for KeyDropInterface.KeyPackage);
        }
        uint64_t v4 = 0;
        BOOL v5 = v6;
        uint64_t v40 = (uint64_t *)(v0 + 448);
      }
      goto LABEL_22;
    case 9:
      uint64_t v111 = *(void *)(v0 + 1592);
      uint64_t v112 = *(void *)(v0 + 1584);
      uint64_t v113 = *(void *)(v0 + 1464);
      sub_10001D074(*(void *)(v0 + 1504), v113, &qword_101654A38);
      int v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
      *(void *)(v0 + 2152) = v114;
      *(void *)(v0 + 2160) = (v111 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v112) = v114(v113, 1, v112);
      sub_10001DAB4(v113, &qword_101654A38);
      if (v112 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C778BC;
        goto LABEL_61;
      }
      uint64_t v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
      uint64_t v116 = *(void *)(v0 + 1584);
      uint64_t v117 = *(void *)(v0 + 1456);
      sub_10001D074(*(void *)(v0 + 1504), v117, &qword_101654A38);
      if (v115(v117, 1, v116) != 1)
      {
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v184 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v184;
        *uint64_t v184 = v0;
        v184[1] = sub_100C7A148;
        uint64_t v185 = *(void *)(v0 + 1912);
        uint64_t v186 = *(void *)(v0 + 1904);
        uint64_t v187 = *(void *)(v0 + 1680);
        uint64_t v188 = *(void *)(v0 + 1600);
        uint64_t v189 = *(void *)(v0 + 1232);
        uint64_t v190 = *(void *)(v0 + 1136);
        return sub_100C9E300(v189, v190, v187, v188, v186, v185);
      }
      uint64_t v103 = *(void *)(v0 + 1456);
      goto LABEL_21;
    case 12:
      uint64_t v161 = (void *)swift_task_alloc();
      *(void *)(v0 + 2208) = v161;
      *uint64_t v161 = v0;
      v161[1] = sub_100C80934;
      uint64_t v162 = *(void *)(v0 + 1680);
      uint64_t v163 = *(void *)(v0 + 1168);
      return sub_100C9FCDC(v163, v162);
    case 13:
      os_log_type_t v164 = (void *)swift_task_alloc();
      *(void *)(v0 + 2200) = v164;
      *os_log_type_t v164 = v0;
      v164[1] = sub_100C7D35C;
      uint64_t v165 = *(void *)(v0 + 1680);
      uint64_t v166 = *(void *)(v0 + 1224);
      return sub_100CA020C(v166, v165);
    case 16:
      uint64_t v167 = (void *)swift_task_alloc();
      *(void *)(v0 + 2216) = v167;
      *uint64_t v167 = v0;
      v167[1] = sub_100C83EB4;
      uint64_t v168 = *(void *)(v0 + 1680);
      uint64_t v169 = *(void *)(v0 + 1536);
      uint64_t v170 = *(void *)(v0 + 1160);
      return sub_100CA0E04(v169, v170, v168);
    default:
      goto LABEL_22;
  }
}

uint64_t sub_100C71E1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C9151C;
  }
  else {
    uint64_t v4 = sub_100C71F48;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C71F48()
{
  uint64_t v187 = (void *)(v0 + 304);
  uint64_t v1 = (uint64_t *)(v0 + 784);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = v0 + 872;
  uint64_t v156 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v154 = v0 + 880;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v163 = (uint64_t *)(v0 + 448);
  uint64_t v2 = v0 + 1096;
  uint64_t v3 = v0 + 1128;
  uint64_t v4 = *(void *)(v0 + 2128);
  while (2)
  {
    BOOL v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
    uint64_t v6 = *(void *)(v0 + 1584);
    uint64_t v7 = *(void *)(v0 + 1472);
    sub_10001D074(*(void *)(v0 + 1504), v7, &qword_101654A38);
    if (v5(v7, 1, v6) != 1)
    {
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v148 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v148;
      *uint64_t v148 = v0;
      v148[1] = sub_100C746A8;
      uint64_t v134 = *(void *)(v0 + 1912);
      uint64_t v135 = *(void *)(v0 + 1904);
      uint64_t v136 = *(void *)(v0 + 1680);
      uint64_t v137 = *(void *)(v0 + 1608);
      uint64_t v138 = *(void *)(v0 + 1240);
      uint64_t v139 = *(void *)(v0 + 1136);
      char v140 = 1;
LABEL_53:
      return sub_100C9CC58(v138, v139, v136, v137, v140, v135, v134);
    }
    sub_10001DAB4(*(void *)(v0 + 1472), &qword_101654A38);
    uint64_t v8 = *(void *)(v0 + 1960);
    if (v8 == *(void *)(v0 + 1928))
    {
LABEL_27:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v163);
      swift_bridgeObjectRelease();
      uint64_t v205 = *(void *)(v0 + 856);
      uint64_t v107 = *(void *)(v0 + 1680);
      uint64_t v108 = *(void *)(v0 + 1640);
      uint64_t v109 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v109, &qword_101654A38);
      sub_100CBD154(v108, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v107, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v110 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v110(v205);
    }
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v168 = v1;
    uint64_t v172 = v2;
    uint64_t v169 = v3;
LABEL_8:
    *(void *)(v0 + 1952) = v10;
    *(void *)(v0 + 1944) = v9;
    *(void *)(v0 + 1936) = v4;
    uint64_t v12 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v8 + 32);
    *(unsigned char *)(v0 + 2233) = v12;
    *(void *)(v0 + 1960) = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      uint64_t v153 = *(void *)(v0 + 1672);
      swift_errorRelease();
      return sub_100CBD154(v153, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    }
    switch(v12)
    {
      case 1:
        uint64_t v112 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v112);
        uint64_t v113 = type metadata accessor for BookmarkMetaData();
        int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v112, 1, v113);
        uint64_t v115 = *(void *)(v0 + 1424);
        if (v114 == 1)
        {
          sub_10001DAB4(v115, &qword_10164B638);
          uint64_t v116 = 0;
        }
        else
        {
          uint64_t v116 = *(void *)(v115 + 8);
          sub_100CBD154(v115, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v116;
        uint64_t v149 = *(int *)(v0 + 2228);
        uint64_t v150 = *(void *)(v0 + 1136);
        uint64_t v151 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v151;
        *uint64_t v151 = v0;
        v151[1] = sub_100C62684;
        uint64_t v152 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v152, v150 + v149);
      case 4:
        uint64_t v117 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v117;
        *uint64_t v117 = v0;
        v117[1] = sub_100C691B0;
        uint64_t v118 = *(void *)(v0 + 1680);
        uint64_t v119 = *(void *)(v0 + 1256);
        uint64_t v120 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v119, v120, v118, (uint64_t)v163);
      case 5:
        uint64_t v56 = *(void *)(v0 + 1592);
        uint64_t v57 = *(void *)(v0 + 1584);
        uint64_t v58 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v58, &qword_101654A38);
        uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
        *(void *)(v0 + 2056) = v59;
        *(void *)(v0 + 2064) = (v56 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v57) = v59(v58, 1, v57);
        sub_10001DAB4(v58, &qword_101654A38);
        if (v57 == 1)
        {
          uint64_t v105 = (void *)swift_task_alloc();
          *(void *)(v0 + 2072) = v105;
          void *v105 = v0;
          uint64_t v106 = sub_100C6C37C;
          goto LABEL_46;
        }
        uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
        uint64_t v61 = *(void *)(v0 + 1584);
        uint64_t v62 = *(void *)(v0 + 1488);
        sub_10001D074(*(void *)(v0 + 1504), v62, &qword_101654A38);
        if (v60(v62, 1, v61) == 1)
        {
          uint64_t v11 = *(void *)(v0 + 1488);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v133 = (void *)swift_task_alloc();
        *(void *)(v0 + 2088) = v133;
        *uint64_t v133 = v0;
        v133[1] = sub_100C6EC08;
        uint64_t v134 = *(void *)(v0 + 1912);
        uint64_t v135 = *(void *)(v0 + 1904);
        uint64_t v136 = *(void *)(v0 + 1680);
        uint64_t v137 = *(void *)(v0 + 1616);
        uint64_t v138 = *(void *)(v0 + 1248);
        uint64_t v139 = *(void *)(v0 + 1136);
        char v140 = 0;
        goto LABEL_53;
      case 6:
        uint64_t v101 = *(void *)(v0 + 1592);
        uint64_t v102 = *(void *)(v0 + 1584);
        uint64_t v103 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v103, &qword_101654A38);
        uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
        *(void *)(v0 + 2104) = v104;
        *(void *)(v0 + 2112) = (v101 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v102) = v104(v103, 1, v102);
        sub_10001DAB4(v103, &qword_101654A38);
        if (v102 != 1) {
          continue;
        }
        uint64_t v105 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v105;
        void *v105 = v0;
        uint64_t v106 = sub_100C71E1C;
        goto LABEL_46;
      case 8:
      case 10:
        sub_1000F7878(v12, *(void *)(v0 + 504), v1);
        unint64_t v13 = *(void *)(v0 + 792);
        if (v13 >> 60 == 15) {
          goto LABEL_7;
        }
        uint64_t v14 = *(void *)(v0 + 784);
        unint64_t v15 = *(void *)(v0 + 1912);
        uint64_t v16 = *(void *)(v0 + 1904);
        uint64_t v17 = *(void *)(v0 + 1368);
        uint64_t v18 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
        sub_100037A38(v14, v13);
        sub_101268234(1, v14, v13, v17, v187);
        sub_10000588C(&qword_101657A00);
        uint64_t v19 = swift_allocObject();
        uint64_t v20 = sub_1004B7678(v19, 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v187;
        long long v23 = *(_OWORD *)(v0 + 336);
        long long v22 = *(_OWORD *)(v0 + 352);
        long long v24 = *(_OWORD *)(v0 + 320);
        *(void *)(v21 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v21 + 32) = v23;
        *(_OWORD *)(v21 + 48) = v22;
        *(_OWORD *)(v21 + 16) = v24;
        uint64_t v25 = SharingCircleWildAdvertisementKey.init(key:)(v20);
        sub_100037A38(v16, v15);
        sub_100CBE5B0(v187, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v26 = sub_100CBCA7C(v25, v16, v15);
        unint64_t v27 = *(void *)(v0 + 1912);
        uint64_t v28 = *(void *)(v0 + 1904);
        uint64_t v198 = v4;
        if (v4)
        {
          sub_100037A24(v28, v27);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v14, v13);
          char v192 = *(unsigned char *)(v0 + 2233);
          uint64_t v29 = *(void *)(v0 + 1712);
          uint64_t v30 = *(void *)(v0 + 1136);
          unint64_t v31 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v32 = swift_allocObject();
          sub_100CBD1B4(v29, v32 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = sub_100CBE0E4;
          *(void *)(v33 + 24) = v32;
          uint64_t v202 = swift_allocObject();
          *(unsigned char *)(v202 + 16) = v192;
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v34 = swift_allocObject();
          sub_100CBD1B4(v29, v34 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v193 = swift_allocObject();
          *(void *)(v193 + 16) = sub_100CBE2E4;
          *(void *)(v193 + 24) = v34;
          sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v35 = swift_allocObject();
          sub_100CBD1B4(v29, v35 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = sub_100CBE300;
          *(void *)(v36 + 24) = v35;
          uint64_t v161 = swift_allocObject();
          *(void *)(v161 + 16) = v198;
          swift_errorRetain();
          os_log_t log = Logger.logObject.getter();
          os_log_type_t v164 = static os_log_type_t.error.getter();
          uint64_t v185 = swift_allocObject();
          *(unsigned char *)(v185 + 16) = 34;
          uint64_t v37 = swift_allocObject();
          *(unsigned char *)(v37 + 16) = 8;
          uint64_t v38 = swift_allocObject();
          *(void *)(v38 + 16) = sub_100CC28B8;
          *(void *)(v38 + 24) = v33;
          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = sub_1000654EC;
          *(void *)(v39 + 24) = v38;
          uint64_t v40 = v39;
          uint64_t v41 = swift_allocObject();
          *(unsigned char *)(v41 + 16) = 34;
          uint64_t v175 = swift_allocObject();
          *(unsigned char *)(v175 + 16) = 8;
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = sub_100CBE3EC;
          *(void *)(v42 + 24) = v202;
          uint64_t v174 = swift_allocObject();
          *(void *)(v174 + 16) = sub_1000654EC;
          *(void *)(v174 + 24) = v42;
          uint64_t v203 = swift_allocObject();
          *(unsigned char *)(v203 + 16) = 112;
          uint64_t v173 = swift_allocObject();
          *(unsigned char *)(v173 + 16) = 8;
          uint64_t v43 = swift_allocObject();
          *(void *)(v43 + 16) = 1752392040;
          uint64_t v200 = swift_allocObject();
          *(void *)(v200 + 16) = sub_10006550C;
          *(void *)(v200 + 24) = v43;
          uint64_t v171 = swift_allocObject();
          *(unsigned char *)(v171 + 16) = 33;
          uint64_t v170 = swift_allocObject();
          *(unsigned char *)(v170 + 16) = 8;
          uint64_t v44 = swift_allocObject();
          *(void *)(v44 + 16) = sub_1000654F4;
          *(void *)(v44 + 24) = v193;
          uint64_t v194 = swift_allocObject();
          *(void *)(v194 + 16) = sub_1000654EC;
          *(void *)(v194 + 24) = v44;
          uint64_t v190 = swift_allocObject();
          *(unsigned char *)(v190 + 16) = 112;
          uint64_t v188 = swift_allocObject();
          *(unsigned char *)(v188 + 16) = 8;
          uint64_t v45 = swift_allocObject();
          *(void *)(v45 + 16) = 1752392040;
          uint64_t v184 = swift_allocObject();
          *(void *)(v184 + 16) = sub_10006550C;
          *(void *)(v184 + 24) = v45;
          uint64_t v183 = swift_allocObject();
          *(unsigned char *)(v183 + 16) = 33;
          uint64_t v167 = swift_allocObject();
          *(unsigned char *)(v167 + 16) = 8;
          uint64_t v46 = swift_allocObject();
          *(void *)(v46 + 16) = sub_1000654F4;
          *(void *)(v46 + 24) = v36;
          uint64_t v181 = swift_allocObject();
          *(void *)(v181 + 16) = sub_1000654EC;
          *(void *)(v181 + 24) = v46;
          uint64_t v160 = swift_allocObject();
          *(unsigned char *)(v160 + 16) = 34;
          uint64_t v179 = swift_allocObject();
          *(unsigned char *)(v179 + 16) = 8;
          uint64_t v47 = swift_allocObject();
          *(void *)(v47 + 16) = sub_100CBE4A8;
          *(void *)(v47 + 24) = v161;
          uint64_t v48 = swift_allocObject();
          *(void *)(v48 + 16) = sub_1000654EC;
          *(void *)(v48 + 24) = v47;
          uint64_t v49 = swift_allocObject();
          sub_1004B810C(v49, 21);
          void *v50 = sub_100065514;
          v50[1] = v185;
          v50[2] = sub_100065514;
          v50[3] = v37;
          v50[4] = sub_100065500;
          v50[5] = v40;
          v50[6] = sub_100065514;
          v50[7] = v41;
          v50[8] = sub_100065514;
          v50[9] = v175;
          v50[10] = sub_100065500;
          v50[11] = v174;
          v50[12] = sub_100065514;
          v50[13] = v203;
          v50[14] = sub_100065514;
          v50[15] = v173;
          v50[16] = sub_100065504;
          v50[17] = v200;
          v50[18] = sub_100065514;
          v50[19] = v171;
          v50[20] = sub_100065514;
          v50[21] = v170;
          v50[22] = sub_100065500;
          v50[23] = v194;
          v50[24] = sub_100065514;
          v50[25] = v190;
          v50[26] = sub_100065514;
          v50[27] = v188;
          v50[28] = sub_100065504;
          v50[29] = v184;
          v50[30] = sub_100065514;
          v50[31] = v183;
          v50[32] = sub_100065514;
          v50[33] = v167;
          v50[34] = sub_100065500;
          v50[35] = v181;
          v50[36] = sub_100065514;
          v50[37] = v160;
          v50[38] = sub_100065514;
          v50[39] = v179;
          v50[40] = sub_100065500;
          v50[41] = v48;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(log, v164))
          {
            uint64_t v51 = (uint8_t *)sub_1008F9FAC();
            uint64_t v52 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            *(void *)(v0 + 1056) = v52;
            *(_WORD *)uint64_t v51 = 1795;
            *(void *)(v0 + 888) = v51 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v185;
            uint64_t v2 = v172;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v37;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v40;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v41;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v175;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v174;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v203;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v173;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v200;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v171;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v170;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v194;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v190;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v188;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v184;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v183;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v167;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v181;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v160;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v179;
            sub_1008F9FB4(v159, v158, v172, v157);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v48;
            sub_1008F9FB4(v159, v158, v172, v157);
            uint64_t v53 = *(void *)(v0 + 1736);
            uint64_t v54 = *(void *)(v0 + 1728);
            uint64_t v55 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, log, v164, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v51, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
            v9(v53, v55);
            uint64_t v4 = 0;
            uint64_t v10 = v9;
            uint64_t v1 = v168;
            uint64_t v3 = v169;
            goto LABEL_7;
          }
          uint64_t v165 = *(void *)(v0 + 1736);
          uint64_t v98 = *(void *)(v0 + 1728);
          uint64_t v162 = *(void *)(v0 + 1720);
          swift_errorRelease();

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
          v9(v165, v162);
        }
        else
        {
          uint64_t v176 = v14;
          unint64_t v177 = v13;
          uint64_t v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v186 = *(void *)(v0 + 1840);
          uint64_t v180 = *(void *)(v0 + 1768);
          uint64_t v182 = *(void *)(v0 + 1720);
          uint64_t v70 = *(void *)(v0 + 1712);
          uint64_t v71 = *(void *)(v0 + 1640);
          uint64_t v72 = *(void *)(v0 + 1624);
          uint64_t v73 = *(void *)(v0 + 1352);
          uint64_t v74 = *(unsigned char **)(v0 + 1312);
          uint64_t v195 = *(void *)(v0 + 1272);
          unint64_t v75 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v178 = *(void *)(v0 + 1136);
          sub_100037A24(v28, v27);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v71, v72, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v12, v72, (uint64_t)v26, v74);
          sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v73);
          v189(v180, v186, v182);
          sub_100CBD0EC(v178, v70, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v76 = swift_allocObject();
          sub_100CBD1B4(v70, v76 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = sub_100CBE0E4;
          *(void *)(v77 + 24) = v76;
          sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v78 = (*(unsigned __int8 *)(v195 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
          uint64_t v79 = swift_allocObject();
          sub_100CBD1B4(v73, v79 + v78, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v80 = swift_allocObject();
          *(void *)(v80 + 16) = sub_100CBE648;
          *(void *)(v80 + 24) = v79;
          uint64_t v204 = Logger.logObject.getter();
          os_log_type_t v81 = static os_log_type_t.default.getter();
          uint64_t v82 = swift_allocObject();
          *(unsigned char *)(v82 + 16) = 34;
          uint64_t v83 = swift_allocObject();
          *(unsigned char *)(v83 + 16) = 8;
          uint64_t v84 = swift_allocObject();
          *(void *)(v84 + 16) = sub_100CC28B8;
          *(void *)(v84 + 24) = v77;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_1000654EC;
          *(void *)(v85 + 24) = v84;
          uint64_t v86 = swift_allocObject();
          *(unsigned char *)(v86 + 16) = 34;
          uint64_t v87 = swift_allocObject();
          *(unsigned char *)(v87 + 16) = 8;
          uint64_t v88 = swift_allocObject();
          *(void *)(v88 + 16) = sub_100CC28BC;
          *(void *)(v88 + 24) = v80;
          uint64_t v89 = swift_allocObject();
          *(void *)(v89 + 16) = sub_1000654EC;
          *(void *)(v89 + 24) = v88;
          uint64_t v90 = swift_allocObject();
          sub_1004B810C(v90, 6);
          *uint64_t v91 = sub_100065514;
          v91[1] = v82;
          v91[2] = sub_100065514;
          v91[3] = v83;
          v91[4] = sub_100065500;
          v91[5] = v85;
          v91[6] = sub_100065514;
          v91[7] = v86;
          v91[8] = sub_100065514;
          v91[9] = v87;
          v91[10] = sub_100065500;
          v91[11] = v89;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v204, v81))
          {
            uint64_t v199 = v87;
            os_log_type_t v196 = v81;
            uint64_t v92 = (uint8_t *)sub_1008F9FAC();
            uint64_t v93 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v191 = v92;
            *(void *)(v0 + 1128) = v93;
            *(_WORD *)uint64_t v92 = 514;
            *(void *)(v0 + 872) = v92 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v82;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v83;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v85;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v86;
            sub_1008F9FB4(v156, v155, v154, v169);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v199;
            sub_1008F9FB4(v156, v155, v154, v169);
            uint64_t v3 = v169;
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v89;
            sub_1008F9FB4(v156, v155, v154, v169);
            uint64_t v94 = *(void *)(v0 + 1768);
            uint64_t v95 = *(void *)(v0 + 1728);
            uint64_t v96 = *(void *)(v0 + 1720);
            uint64_t v97 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v204, v196, "Keys to upload: %{public}s,\nadded: %{public}s.", v191, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v176, v177);
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
            v9(v94, v96);
            sub_100CBD154(v97, type metadata accessor for KeyDropInterface.KeyPackage);
            uint64_t v4 = 0;
            uint64_t v10 = v9;
            uint64_t v1 = v168;
            uint64_t v2 = v172;
            goto LABEL_7;
          }
          uint64_t v197 = *(void *)(v0 + 1768);
          uint64_t v99 = *(void *)(v0 + 1728);
          uint64_t v100 = *(void *)(v0 + 1720);
          uint64_t v201 = *(void *)(v0 + 1312);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v176, v177);
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
          v9(v197, v100);
          sub_100CBD154(v201, type metadata accessor for KeyDropInterface.KeyPackage);
        }
        uint64_t v4 = 0;
        uint64_t v10 = v9;
        uint64_t v1 = v168;
        uint64_t v2 = v172;
        uint64_t v3 = v169;
        goto LABEL_7;
      case 9:
        uint64_t v63 = *(void *)(v0 + 1592);
        uint64_t v64 = *(void *)(v0 + 1584);
        uint64_t v65 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v65, &qword_101654A38);
        uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
        *(void *)(v0 + 2152) = v66;
        *(void *)(v0 + 2160) = (v63 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v64) = v66(v65, 1, v64);
        sub_10001DAB4(v65, &qword_101654A38);
        if (v64 != 1)
        {
          uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
          uint64_t v68 = *(void *)(v0 + 1584);
          uint64_t v69 = *(void *)(v0 + 1456);
          sub_10001D074(*(void *)(v0 + 1504), v69, &qword_101654A38);
          if (v67(v69, 1, v68) != 1)
          {
            sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
            uint64_t v141 = (void *)swift_task_alloc();
            *(void *)(v0 + 2184) = v141;
            *uint64_t v141 = v0;
            v141[1] = sub_100C7A148;
            uint64_t v142 = *(void *)(v0 + 1912);
            uint64_t v143 = *(void *)(v0 + 1904);
            uint64_t v144 = *(void *)(v0 + 1680);
            uint64_t v145 = *(void *)(v0 + 1600);
            uint64_t v146 = *(void *)(v0 + 1232);
            uint64_t v147 = *(void *)(v0 + 1136);
            return sub_100C9E300(v146, v147, v144, v145, v143, v142);
          }
          uint64_t v11 = *(void *)(v0 + 1456);
LABEL_6:
          sub_10001DAB4(v11, &qword_101654A38);
          uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_7:
          uint64_t v8 = *(void *)(v0 + 1960);
          if (v8 == *(void *)(v0 + 1928)) {
            goto LABEL_27;
          }
          goto LABEL_8;
        }
        uint64_t v105 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v105;
        void *v105 = v0;
        uint64_t v106 = sub_100C778BC;
LABEL_46:
        v105[1] = v106;
        uint64_t v131 = *(void *)(v0 + 1672);
        uint64_t v132 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v131, v132);
      case 12:
        uint64_t v121 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v121;
        void *v121 = v0;
        v121[1] = sub_100C80934;
        uint64_t v122 = *(void *)(v0 + 1680);
        uint64_t v123 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v123, v122);
      case 13:
        uint64_t v124 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v124;
        void *v124 = v0;
        v124[1] = sub_100C7D35C;
        uint64_t v125 = *(void *)(v0 + 1680);
        uint64_t v126 = *(void *)(v0 + 1224);
        return sub_100CA020C(v126, v125);
      case 16:
        unint64_t v127 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v127;
        *unint64_t v127 = v0;
        v127[1] = sub_100C83EB4;
        uint64_t v128 = *(void *)(v0 + 1680);
        uint64_t v129 = *(void *)(v0 + 1536);
        uint64_t v130 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v129, v130, v128);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C746A8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C93C48;
  }
  else {
    uint64_t v4 = sub_100C747D4;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C747D4()
{
  uint64_t v1 = v0 + 856;
  uint64_t v2 = *(void *)(v0 + 1272);
  uint64_t v3 = *(void *)(v0 + 1240);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v2 + 48))(v3, 1, *(void *)(v0 + 1264)) != 1)
  {
    uint64_t v225 = *(void *)(v0 + 1840);
    uint64_t v228 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v7 = *(void *)(v0 + 1784);
    uint64_t v8 = *(void *)(v0 + 1720);
    uint64_t v9 = *(void *)(v0 + 1712);
    uint64_t v10 = *(void *)(v0 + 1352);
    uint64_t v11 = *(void *)(v0 + 1328);
    uint64_t v224 = *(uint8_t **)(v0 + 1136);
    unint64_t v12 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    sub_100CBD1B4(v3, v11, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v252 = v0 + 856;
    sub_100C272D0(v10);
    v228(v7, v225, v8);
    sub_100CBD0EC((uint64_t)v224, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v13 = swift_allocObject();
    sub_100CBD1B4(v9, v13 + v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_100CBE0E4;
    *(void *)(v14 + 24) = v13;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v16 = swift_allocObject();
    sub_100CBD1B4(v10, v16 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v236 = swift_allocObject();
    *(void *)(v236 + 16) = sub_100CBE648;
    *(void *)(v236 + 24) = v16;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v17 = swift_allocObject();
    sub_100CBD1B4(v10, v17 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v240 = swift_allocObject();
    *(void *)(v240 + 16) = sub_100CBE7F4;
    *(void *)(v240 + 24) = v17;
    uint64_t v251 = Logger.logObject.getter();
    LOBYTE(v250) = static os_log_type_t.default.getter();
    uint64_t v254 = swift_allocObject();
    *(unsigned char *)(v254 + 16) = 34;
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = 8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100CC28B8;
    *(void *)(v19 + 24) = v14;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1000654EC;
    *(void *)(v20 + 24) = v19;
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 34;
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 8;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_100CC28BC;
    *(void *)(v23 + 24) = v236;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1000654EC;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 34;
    uint64_t v26 = swift_allocObject();
    *(unsigned char *)(v26 + 16) = 8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100CC28C0;
    *(void *)(v27 + 24) = v240;
    uint64_t v28 = v18;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1000654EC;
    *(void *)(v29 + 24) = v27;
    uint64_t v30 = swift_allocObject();
    sub_1004B810C(v30, 9);
    *unint64_t v31 = sub_100065514;
    v31[1] = v254;
    void v31[2] = sub_100065514;
    v31[3] = v28;
    void v31[4] = sub_100065500;
    v31[5] = v20;
    v31[6] = sub_100065514;
    v31[7] = v21;
    v31[8] = sub_100065514;
    v31[9] = v22;
    v31[10] = sub_100065500;
    v31[11] = v24;
    v31[12] = sub_100065514;
    v31[13] = v25;
    v31[14] = sub_100065514;
    v31[15] = v26;
    v31[16] = sub_100065500;
    v31[17] = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v251, (os_log_type_t)v250))
    {
      uint64_t v226 = v29;
      uint64_t v32 = *(void *)(v0 + 2144);
      uint64_t v33 = (uint8_t *)sub_1008F9FAC();
      uint64_t v34 = swift_slowAlloc();
      *(void *)(v0 + 944) = 0;
      uint64_t v224 = v33;
      *(void *)(v0 + 952) = v34;
      *(_WORD *)uint64_t v33 = 770;
      *(void *)(v0 + 936) = v33 + 2;
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v254;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      if (v32)
      {
        uint64_t v35 = *(void *)(v0 + 1672);
        swift_errorRelease();
        return sub_100CBD154(v35, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      swift_release();
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v28;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065500;
      *(void *)(v0 + 728) = v20;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v21;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v22;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065500;
      *(void *)(v0 + 728) = v24;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v25;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065514;
      *(void *)(v0 + 728) = v26;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      swift_release();
      *(void *)(v0 + 720) = sub_100065500;
      *(void *)(v0 + 728) = v226;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 720), v0 + 936, v0 + 944, v0 + 952);
      goto LABEL_77;
    }
    uint64_t v37 = *(void *)(v0 + 1728);
    uint64_t v38 = *(void *)(v0 + 1720);
    uint64_t v39 = *(void *)(v0 + 1608);
    uint64_t v246 = *(void *)(v0 + 1784);
    uint64_t v250 = *(void *)(v0 + 1328);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v6(v246, v38);
    sub_100CBD154(v250, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v39, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = *(void *)(v0 + 2144);
    goto LABEL_15;
  }
  sub_100CBD154(*(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_10001DAB4(v3, &qword_10165C148);
  uint64_t v4 = *(void *)(v0 + 2144);
  BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
  while (1)
  {
    uint64_t v40 = (uint64_t *)(v0 + 448);
    uint64_t v41 = *(void *)(v0 + 1960);
    if (v41 == *(void *)(v0 + 1928))
    {
LABEL_17:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v40);
      swift_bridgeObjectRelease();
      uint64_t v253 = *(void *)(v0 + 856);
      uint64_t v42 = *(void *)(v0 + 1680);
      uint64_t v43 = *(void *)(v0 + 1640);
      uint64_t v44 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v44, &qword_101654A38);
      sub_100CBD154(v43, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v42, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v45(v253);
    }
    uint64_t v227 = (void *)(v0 + 304);
    uint64_t v207 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
    uint64_t v203 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
    uint64_t v251 = (v0 + 784);
    uint64_t v201 = v0 + 880;
    uint64_t v202 = v0 + 872;
    uint64_t v205 = v0 + 1056;
    uint64_t v206 = v0 + 888;
    uint64_t v204 = v0 + 1096;
    uint64_t v200 = v0 + 1128;
    uint64_t v252 = v1;
LABEL_23:
    *(void *)(v0 + 1952) = v5;
    *(void *)(v0 + 1944) = v6;
    *(void *)(v0 + 1936) = v4;
    uint64_t v46 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v41 + 32);
    *(unsigned char *)(v0 + 2233) = v46;
    *(void *)(v0 + 1960) = v41 + 1;
    if (!__OFADD__(v41, 1)) {
      break;
    }
    __break(1u);
LABEL_77:
    uint64_t v195 = *(void *)(v0 + 1784);
    uint64_t v196 = *(void *)(v0 + 1728);
    uint64_t v197 = *(void *)(v0 + 1720);
    uint64_t v198 = *(void *)(v0 + 1608);
    uint64_t v199 = *(void *)(v0 + 1328);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v251, (os_log_type_t)v250, "Keys to upload: %{public}s,\nadded secondaryAddressPackage: %{public}s,\nkey indexes: %{public}s.", v224, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v196 + 8);
    v6(v195, v197);
    sub_100CBD154(v199, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = 0;
LABEL_15:
    BOOL v5 = v6;
    uint64_t v1 = v252;
  }
  switch(v46)
  {
    case 1:
      uint64_t v152 = *(void *)(v0 + 1424);
      sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v152);
      uint64_t v153 = type metadata accessor for BookmarkMetaData();
      int v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 48))(v152, 1, v153);
      uint64_t v155 = *(void *)(v0 + 1424);
      if (v154 == 1)
      {
        sub_10001DAB4(v155, &qword_10164B638);
        uint64_t v156 = 0;
      }
      else
      {
        uint64_t v156 = *(void *)(v155 + 8);
        sub_100CBD154(v155, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      }
      *(void *)(v0 + 1968) = v156;
      uint64_t v191 = *(int *)(v0 + 2228);
      uint64_t v192 = *(void *)(v0 + 1136);
      uint64_t v193 = (void *)swift_task_alloc();
      *(void *)(v0 + 1976) = v193;
      *uint64_t v193 = v0;
      v193[1] = sub_100C62684;
      uint64_t v194 = *(void *)(v0 + 1392);
      return sub_100CA6DC8(v194, v192 + v191);
    case 4:
      uint64_t v157 = (void *)swift_task_alloc();
      *(void *)(v0 + 2040) = v157;
      *uint64_t v157 = v0;
      v157[1] = sub_100C691B0;
      uint64_t v158 = *(void *)(v0 + 1680);
      uint64_t v159 = *(void *)(v0 + 1256);
      uint64_t v160 = *(void *)(v0 + 1136);
      return sub_100C9B9FC(v159, v160, v158, (uint64_t)v40);
    case 5:
      uint64_t v96 = *(void *)(v0 + 1592);
      uint64_t v97 = *(void *)(v0 + 1584);
      uint64_t v98 = *(void *)(v0 + 1496);
      sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
      uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
      *(void *)(v0 + 2056) = v99;
      *(void *)(v0 + 2064) = (v96 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v97) = v99(v98, 1, v97);
      sub_10001DAB4(v98, &qword_101654A38);
      if (v97 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C6C37C;
        goto LABEL_61;
      }
      uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
      uint64_t v101 = *(void *)(v0 + 1584);
      uint64_t v102 = *(void *)(v0 + 1488);
      sub_10001D074(*(void *)(v0 + 1504), v102, &qword_101654A38);
      if (v100(v102, 1, v101) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1488);
        goto LABEL_21;
      }
      sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v175 = (void *)swift_task_alloc();
      *(void *)(v0 + 2088) = v175;
      *uint64_t v175 = v0;
      v175[1] = sub_100C6EC08;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1616);
      uint64_t v180 = *(void *)(v0 + 1248);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 0;
      goto LABEL_66;
    case 6:
      uint64_t v104 = *(void *)(v0 + 1592);
      uint64_t v105 = *(void *)(v0 + 1584);
      uint64_t v106 = *(void *)(v0 + 1480);
      sub_10001D074(*(void *)(v0 + 1504), v106, &qword_101654A38);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
      *(void *)(v0 + 2104) = v107;
      *(void *)(v0 + 2112) = (v104 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v105) = v107(v106, 1, v105);
      sub_10001DAB4(v106, &qword_101654A38);
      if (v105 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C71E1C;
LABEL_61:
        v171[1] = v172;
        uint64_t v173 = *(void *)(v0 + 1672);
        uint64_t v174 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v173, v174);
      }
      uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
      uint64_t v109 = *(void *)(v0 + 1584);
      uint64_t v110 = *(void *)(v0 + 1472);
      sub_10001D074(*(void *)(v0 + 1504), v110, &qword_101654A38);
      if (v108(v110, 1, v109) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1472);
LABEL_21:
        sub_10001DAB4(v103, &qword_101654A38);
        BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
        uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_22:
        uint64_t v41 = *(void *)(v0 + 1960);
        if (v41 == *(void *)(v0 + 1928)) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v183 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v183;
      *uint64_t v183 = v0;
      v183[1] = sub_100C746A8;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1608);
      uint64_t v180 = *(void *)(v0 + 1240);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 1;
LABEL_66:
      return sub_100C9CC58(v180, v181, v178, v179, v182, v177, v176);
    case 8:
    case 10:
      sub_1000F7878(v46, *(void *)(v0 + 504), (uint64_t *)v251);
      unint64_t v47 = *(void *)(v0 + 792);
      if (v47 >> 60 != 15)
      {
        uint64_t v48 = *(void *)(v0 + 784);
        unint64_t v49 = *(void *)(v0 + 1912);
        uint64_t v50 = *(void *)(v0 + 1904);
        uint64_t v51 = *(void *)(v0 + 1368);
        uint64_t v52 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
        sub_100037A38(v48, v47);
        sub_101268234(1, v48, v47, v51, v227);
        sub_10000588C(&qword_101657A00);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = sub_1004B7678(v53, 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v227;
        long long v57 = *(_OWORD *)(v0 + 336);
        long long v56 = *(_OWORD *)(v0 + 352);
        long long v58 = *(_OWORD *)(v0 + 320);
        *(void *)(v55 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v55 + 32) = v57;
        *(_OWORD *)(v55 + 48) = v56;
        *(_OWORD *)(v55 + 16) = v58;
        uint64_t v59 = SharingCircleWildAdvertisementKey.init(key:)(v54);
        sub_100037A38(v50, v49);
        sub_100CBE5B0(v227, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v60 = sub_100CBCA7C(v59, v50, v49);
        unint64_t v61 = *(void *)(v0 + 1912);
        uint64_t v62 = *(void *)(v0 + 1904);
        if (v4)
        {
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v48, v47);
          char v237 = *(unsigned char *)(v0 + 2233);
          uint64_t v63 = *(void *)(v0 + 1712);
          uint64_t v64 = *(void *)(v0 + 1136);
          unint64_t v65 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v66 = v4;
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v67 = swift_allocObject();
          sub_100CBD1B4(v63, v67 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v241 = swift_allocObject();
          *(void *)(v241 + 16) = sub_100CBE0E4;
          *(void *)(v241 + 24) = v67;
          uint64_t v247 = swift_allocObject();
          *(unsigned char *)(v247 + 16) = v237;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v68 = swift_allocObject();
          sub_100CBD1B4(v63, v68 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v232 = swift_allocObject();
          *(void *)(v232 + 16) = sub_100CBE2E4;
          *(void *)(v232 + 24) = v68;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v69 = swift_allocObject();
          sub_100CBD1B4(v63, v69 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v70 = swift_allocObject();
          *(void *)(v70 + 16) = sub_100CBE300;
          *(void *)(v70 + 24) = v69;
          uint64_t v71 = swift_allocObject();
          *(void *)(v71 + 16) = v66;
          swift_errorRetain();
          os_log_t log = Logger.logObject.getter();
          os_log_type_t v209 = static os_log_type_t.error.getter();
          uint64_t v218 = swift_allocObject();
          *(unsigned char *)(v218 + 16) = 34;
          uint64_t v72 = swift_allocObject();
          *(unsigned char *)(v72 + 16) = 8;
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = sub_100CC28B8;
          *(void *)(v73 + 24) = v241;
          uint64_t v215 = swift_allocObject();
          *(void *)(v215 + 16) = sub_1000654EC;
          *(void *)(v215 + 24) = v73;
          uint64_t v74 = swift_allocObject();
          *(unsigned char *)(v74 + 16) = 34;
          uint64_t v75 = v74;
          uint64_t v250 = swift_allocObject();
          *(unsigned char *)(v250 + 16) = 8;
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = sub_100CBE3EC;
          *(void *)(v76 + 24) = v247;
          uint64_t v248 = swift_allocObject();
          *(void *)(v248 + 16) = sub_1000654EC;
          *(void *)(v248 + 24) = v76;
          uint64_t v242 = swift_allocObject();
          *(unsigned char *)(v242 + 16) = 112;
          uint64_t v214 = swift_allocObject();
          *(unsigned char *)(v214 + 16) = 8;
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = 1752392040;
          uint64_t v238 = swift_allocObject();
          *(void *)(v238 + 16) = sub_10006550C;
          *(void *)(v238 + 24) = v77;
          uint64_t v213 = swift_allocObject();
          *(unsigned char *)(v213 + 16) = 33;
          uint64_t v212 = swift_allocObject();
          *(unsigned char *)(v212 + 16) = 8;
          uint64_t v78 = swift_allocObject();
          *(void *)(v78 + 16) = sub_1000654F4;
          *(void *)(v78 + 24) = v232;
          uint64_t v233 = swift_allocObject();
          *(void *)(v233 + 16) = sub_1000654EC;
          *(void *)(v233 + 24) = v78;
          uint64_t v230 = swift_allocObject();
          *(unsigned char *)(v230 + 16) = 112;
          uint64_t v224 = (uint8_t *)swift_allocObject();
          v224[16] = 8;
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = 1752392040;
          uint64_t v229 = swift_allocObject();
          *(void *)(v229 + 16) = sub_10006550C;
          *(void *)(v229 + 24) = v79;
          uint64_t v80 = swift_allocObject();
          *(unsigned char *)(v80 + 16) = 33;
          uint64_t v81 = v80;
          uint64_t v222 = swift_allocObject();
          *(unsigned char *)(v222 + 16) = 8;
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = sub_1000654F4;
          *(void *)(v82 + 24) = v70;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = sub_1000654EC;
          *(void *)(v83 + 24) = v82;
          uint64_t v84 = v83;
          uint64_t v211 = swift_allocObject();
          *(unsigned char *)(v211 + 16) = 34;
          uint64_t v220 = swift_allocObject();
          *(unsigned char *)(v220 + 16) = 8;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_100CBE4A8;
          *(void *)(v85 + 24) = v71;
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = sub_1000654EC;
          *(void *)(v86 + 24) = v85;
          uint64_t v87 = swift_allocObject();
          sub_1004B810C(v87, 21);
          *uint64_t v88 = sub_100065514;
          v88[1] = v218;
          uint64_t v88[2] = sub_100065514;
          v88[3] = v72;
          v88[4] = sub_100065500;
          v88[5] = v215;
          v88[6] = sub_100065514;
          v88[7] = v75;
          v88[8] = sub_100065514;
          v88[9] = v250;
          v88[10] = sub_100065500;
          v88[11] = v248;
          v88[12] = sub_100065514;
          v88[13] = v242;
          v88[14] = sub_100065514;
          v88[15] = v214;
          v88[16] = sub_100065504;
          v88[17] = v238;
          v88[18] = sub_100065514;
          v88[19] = v213;
          v88[20] = sub_100065514;
          v88[21] = v212;
          v88[22] = sub_100065500;
          v88[23] = v233;
          v88[24] = sub_100065514;
          v88[25] = v230;
          v88[26] = sub_100065514;
          v88[27] = v224;
          v88[28] = sub_100065504;
          v88[29] = v229;
          v88[30] = sub_100065514;
          v88[31] = v81;
          uint64_t v89 = v81;
          v88[32] = sub_100065514;
          v88[33] = v222;
          v88[34] = sub_100065500;
          v88[35] = v84;
          uint64_t v90 = v84;
          v88[36] = sub_100065514;
          v88[37] = v211;
          v88[38] = sub_100065514;
          v88[39] = v220;
          v88[40] = sub_100065500;
          v88[41] = v86;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(log, v209))
          {
            uint64_t v91 = (uint8_t *)sub_1008F9FAC();
            uint64_t v92 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            *(void *)(v0 + 1056) = v92;
            *(_WORD *)uint64_t v91 = 1795;
            *(void *)(v0 + 888) = v91 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v218;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v72;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v215;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v75;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v250;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v248;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v242;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v214;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v238;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v213;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v212;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v233;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v230;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v224;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v229;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v89;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v222;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v90;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v211;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v220;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v86;
            sub_1008F9FB4(v207, v206, v204, v205);
            uint64_t v93 = *(void *)(v0 + 1736);
            uint64_t v94 = *(void *)(v0 + 1728);
            uint64_t v95 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, log, v209, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v91, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
            v6(v93, v95);
          }
          else
          {
            uint64_t v148 = *(void *)(v0 + 1736);
            uint64_t v149 = *(void *)(v0 + 1728);
            uint64_t v210 = *(void *)(v0 + 1720);
            swift_errorRelease();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
            v6(v148, v210);
          }
        }
        else
        {
          uint64_t v216 = v48;
          unint64_t v217 = v47;
          uint64_t v118 = *(unsigned __int8 *)(v0 + 2224);
          char v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v231 = *(void *)(v0 + 1840);
          uint64_t v221 = *(void *)(v0 + 1768);
          uint64_t v223 = *(void *)(v0 + 1720);
          uint64_t v119 = *(void *)(v0 + 1712);
          uint64_t v120 = *(void *)(v0 + 1640);
          uint64_t v121 = *(void *)(v0 + 1624);
          uint64_t v122 = *(void *)(v0 + 1352);
          uint64_t v123 = *(unsigned char **)(v0 + 1312);
          uint64_t v243 = *(void *)(v0 + 1272);
          uint64_t v124 = (v118 + 16) & ~v118;
          uint64_t v224 = (uint8_t *)(v118 | 7);
          uint64_t v219 = *(void *)(v0 + 1136);
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v120, v121, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v46, v121, (uint64_t)v60, v123);
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v122);
          v234(v221, v231, v223);
          sub_100CBD0EC(v219, v119, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v125 = swift_allocObject();
          sub_100CBD1B4(v119, v125 + v124, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v126 = swift_allocObject();
          *(void *)(v126 + 16) = sub_100CBE0E4;
          *(void *)(v126 + 24) = v125;
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v127 = (*(unsigned __int8 *)(v243 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80);
          uint64_t v128 = swift_allocObject();
          sub_100CBD1B4(v122, v128 + v127, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v129 = swift_allocObject();
          *(void *)(v129 + 16) = sub_100CBE648;
          *(void *)(v129 + 24) = v128;
          uint64_t v250 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.default.getter();
          uint64_t v131 = swift_allocObject();
          *(unsigned char *)(v131 + 16) = 34;
          uint64_t v132 = swift_allocObject();
          *(unsigned char *)(v132 + 16) = 8;
          uint64_t v133 = swift_allocObject();
          *(void *)(v133 + 16) = sub_100CC28B8;
          *(void *)(v133 + 24) = v126;
          uint64_t v134 = swift_allocObject();
          *(void *)(v134 + 16) = sub_1000654EC;
          *(void *)(v134 + 24) = v133;
          uint64_t v135 = swift_allocObject();
          *(unsigned char *)(v135 + 16) = 34;
          uint64_t v136 = swift_allocObject();
          *(unsigned char *)(v136 + 16) = 8;
          uint64_t v137 = swift_allocObject();
          *(void *)(v137 + 16) = sub_100CC28BC;
          *(void *)(v137 + 24) = v129;
          uint64_t v138 = swift_allocObject();
          *(void *)(v138 + 16) = sub_1000654EC;
          *(void *)(v138 + 24) = v137;
          uint64_t v139 = swift_allocObject();
          sub_1004B810C(v139, 6);
          *char v140 = sub_100065514;
          v140[1] = v131;
          v140[2] = sub_100065514;
          v140[3] = v132;
          v140[4] = sub_100065500;
          v140[5] = v134;
          v140[6] = sub_100065514;
          v140[7] = v135;
          v140[8] = sub_100065514;
          v140[9] = v136;
          v140[10] = sub_100065500;
          v140[11] = v138;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled((os_log_t)v250, v130))
          {
            uint64_t v244 = v136;
            os_log_type_t v239 = v130;
            uint64_t v141 = (uint8_t *)sub_1008F9FAC();
            uint64_t v142 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v235 = v141;
            *(void *)(v0 + 1128) = v142;
            *(_WORD *)uint64_t v141 = 514;
            *(void *)(v0 + 872) = v141 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v131;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v132;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v134;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v135;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v244;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v138;
            sub_1008F9FB4(v203, v202, v201, v200);
            uint64_t v143 = *(void *)(v0 + 1768);
            uint64_t v144 = *(void *)(v0 + 1728);
            uint64_t v145 = *(void *)(v0 + 1720);
            uint64_t v146 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v250, v239, "Keys to upload: %{public}s,\nadded: %{public}s.", v235, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
            v6(v143, v145);
            uint64_t v147 = v146;
          }
          else
          {
            uint64_t v150 = *(void *)(v0 + 1728);
            uint64_t v151 = *(void *)(v0 + 1720);
            uint64_t v245 = *(void *)(v0 + 1768);
            uint64_t v249 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
            v6(v245, v151);
            uint64_t v147 = v249;
          }
          sub_100CBD154(v147, type metadata accessor for KeyDropInterface.KeyPackage);
        }
        uint64_t v4 = 0;
        BOOL v5 = v6;
        uint64_t v40 = (uint64_t *)(v0 + 448);
      }
      goto LABEL_22;
    case 9:
      uint64_t v111 = *(void *)(v0 + 1592);
      uint64_t v112 = *(void *)(v0 + 1584);
      uint64_t v113 = *(void *)(v0 + 1464);
      sub_10001D074(*(void *)(v0 + 1504), v113, &qword_101654A38);
      int v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
      *(void *)(v0 + 2152) = v114;
      *(void *)(v0 + 2160) = (v111 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v112) = v114(v113, 1, v112);
      sub_10001DAB4(v113, &qword_101654A38);
      if (v112 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C778BC;
        goto LABEL_61;
      }
      uint64_t v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
      uint64_t v116 = *(void *)(v0 + 1584);
      uint64_t v117 = *(void *)(v0 + 1456);
      sub_10001D074(*(void *)(v0 + 1504), v117, &qword_101654A38);
      if (v115(v117, 1, v116) != 1)
      {
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v184 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v184;
        *uint64_t v184 = v0;
        v184[1] = sub_100C7A148;
        uint64_t v185 = *(void *)(v0 + 1912);
        uint64_t v186 = *(void *)(v0 + 1904);
        uint64_t v187 = *(void *)(v0 + 1680);
        uint64_t v188 = *(void *)(v0 + 1600);
        uint64_t v189 = *(void *)(v0 + 1232);
        uint64_t v190 = *(void *)(v0 + 1136);
        return sub_100C9E300(v189, v190, v187, v188, v186, v185);
      }
      uint64_t v103 = *(void *)(v0 + 1456);
      goto LABEL_21;
    case 12:
      uint64_t v161 = (void *)swift_task_alloc();
      *(void *)(v0 + 2208) = v161;
      *uint64_t v161 = v0;
      v161[1] = sub_100C80934;
      uint64_t v162 = *(void *)(v0 + 1680);
      uint64_t v163 = *(void *)(v0 + 1168);
      return sub_100C9FCDC(v163, v162);
    case 13:
      os_log_type_t v164 = (void *)swift_task_alloc();
      *(void *)(v0 + 2200) = v164;
      *os_log_type_t v164 = v0;
      v164[1] = sub_100C7D35C;
      uint64_t v165 = *(void *)(v0 + 1680);
      uint64_t v166 = *(void *)(v0 + 1224);
      return sub_100CA020C(v166, v165);
    case 16:
      uint64_t v167 = (void *)swift_task_alloc();
      *(void *)(v0 + 2216) = v167;
      *uint64_t v167 = v0;
      v167[1] = sub_100C83EB4;
      uint64_t v168 = *(void *)(v0 + 1680);
      uint64_t v169 = *(void *)(v0 + 1536);
      uint64_t v170 = *(void *)(v0 + 1160);
      return sub_100CA0E04(v169, v170, v168);
    default:
      goto LABEL_22;
  }
}

uint64_t sub_100C778BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2176) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C96390;
  }
  else {
    uint64_t v4 = sub_100C779E8;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C779E8()
{
  uint64_t v187 = (void *)(v0 + 304);
  uint64_t v1 = (uint64_t *)(v0 + 784);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = v0 + 872;
  uint64_t v156 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v154 = v0 + 880;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v163 = (uint64_t *)(v0 + 448);
  uint64_t v2 = v0 + 1096;
  uint64_t v3 = v0 + 1128;
  uint64_t v4 = *(void *)(v0 + 2176);
LABEL_2:
  BOOL v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
  uint64_t v6 = *(void *)(v0 + 1584);
  uint64_t v7 = *(void *)(v0 + 1456);
  sub_10001D074(*(void *)(v0 + 1504), v7, &qword_101654A38);
  if (v5(v7, 1, v6) == 1)
  {
    sub_10001DAB4(*(void *)(v0 + 1456), &qword_101654A38);
    uint64_t v8 = *(void *)(v0 + 1960);
    if (v8 == *(void *)(v0 + 1928))
    {
LABEL_27:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v163);
      swift_bridgeObjectRelease();
      uint64_t v205 = *(void *)(v0 + 856);
      uint64_t v107 = *(void *)(v0 + 1680);
      uint64_t v108 = *(void *)(v0 + 1640);
      uint64_t v109 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v109, &qword_101654A38);
      sub_100CBD154(v108, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v107, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v110 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v110(v205);
    }
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v168 = v1;
    uint64_t v172 = v2;
    uint64_t v169 = v3;
    while (1)
    {
      *(void *)(v0 + 1952) = v10;
      *(void *)(v0 + 1944) = v9;
      *(void *)(v0 + 1936) = v4;
      uint64_t v12 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v8 + 32);
      *(unsigned char *)(v0 + 2233) = v12;
      *(void *)(v0 + 1960) = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        uint64_t v153 = *(void *)(v0 + 1672);
        swift_errorRelease();
        return sub_100CBD154(v153, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      switch(v12)
      {
        case 1:
          uint64_t v112 = *(void *)(v0 + 1424);
          sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v112);
          uint64_t v113 = type metadata accessor for BookmarkMetaData();
          int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v112, 1, v113);
          uint64_t v115 = *(void *)(v0 + 1424);
          if (v114 == 1)
          {
            sub_10001DAB4(v115, &qword_10164B638);
            uint64_t v116 = 0;
          }
          else
          {
            uint64_t v116 = *(void *)(v115 + 8);
            sub_100CBD154(v115, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
          }
          *(void *)(v0 + 1968) = v116;
          uint64_t v149 = *(int *)(v0 + 2228);
          uint64_t v150 = *(void *)(v0 + 1136);
          uint64_t v151 = (void *)swift_task_alloc();
          *(void *)(v0 + 1976) = v151;
          *uint64_t v151 = v0;
          v151[1] = sub_100C62684;
          uint64_t v152 = *(void *)(v0 + 1392);
          return sub_100CA6DC8(v152, v150 + v149);
        case 4:
          uint64_t v117 = (void *)swift_task_alloc();
          *(void *)(v0 + 2040) = v117;
          *uint64_t v117 = v0;
          v117[1] = sub_100C691B0;
          uint64_t v118 = *(void *)(v0 + 1680);
          uint64_t v119 = *(void *)(v0 + 1256);
          uint64_t v120 = *(void *)(v0 + 1136);
          return sub_100C9B9FC(v119, v120, v118, (uint64_t)v163);
        case 5:
          uint64_t v56 = *(void *)(v0 + 1592);
          uint64_t v57 = *(void *)(v0 + 1584);
          uint64_t v58 = *(void *)(v0 + 1496);
          sub_10001D074(*(void *)(v0 + 1504), v58, &qword_101654A38);
          uint64_t v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
          *(void *)(v0 + 2056) = v59;
          *(void *)(v0 + 2064) = (v56 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v57) = v59(v58, 1, v57);
          sub_10001DAB4(v58, &qword_101654A38);
          if (v57 == 1)
          {
            uint64_t v105 = (void *)swift_task_alloc();
            *(void *)(v0 + 2072) = v105;
            void *v105 = v0;
            uint64_t v106 = sub_100C6C37C;
            goto LABEL_46;
          }
          uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v61 = *(void *)(v0 + 1584);
          uint64_t v62 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v62, &qword_101654A38);
          if (v60(v62, 1, v61) == 1)
          {
            uint64_t v11 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v133 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v133;
          *uint64_t v133 = v0;
          v133[1] = sub_100C6EC08;
          uint64_t v134 = *(void *)(v0 + 1912);
          uint64_t v135 = *(void *)(v0 + 1904);
          uint64_t v136 = *(void *)(v0 + 1680);
          uint64_t v137 = *(void *)(v0 + 1616);
          uint64_t v138 = *(void *)(v0 + 1248);
          uint64_t v139 = *(void *)(v0 + 1136);
          char v140 = 0;
          goto LABEL_50;
        case 6:
          uint64_t v63 = *(void *)(v0 + 1592);
          uint64_t v64 = *(void *)(v0 + 1584);
          uint64_t v65 = *(void *)(v0 + 1480);
          sub_10001D074(*(void *)(v0 + 1504), v65, &qword_101654A38);
          uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
          *(void *)(v0 + 2104) = v66;
          *(void *)(v0 + 2112) = (v63 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v64) = v66(v65, 1, v64);
          sub_10001DAB4(v65, &qword_101654A38);
          if (v64 == 1)
          {
            uint64_t v105 = (void *)swift_task_alloc();
            *(void *)(v0 + 2120) = v105;
            void *v105 = v0;
            uint64_t v106 = sub_100C71E1C;
LABEL_46:
            v105[1] = v106;
            uint64_t v131 = *(void *)(v0 + 1672);
            uint64_t v132 = *(void *)(v0 + 1504);
            return sub_100C9B204(v0 + 1064, v131, v132);
          }
          uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
          uint64_t v68 = *(void *)(v0 + 1584);
          uint64_t v69 = *(void *)(v0 + 1472);
          sub_10001D074(*(void *)(v0 + 1504), v69, &qword_101654A38);
          if (v67(v69, 1, v68) != 1)
          {
            sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
            uint64_t v141 = (void *)swift_task_alloc();
            *(void *)(v0 + 2136) = v141;
            *uint64_t v141 = v0;
            v141[1] = sub_100C746A8;
            uint64_t v134 = *(void *)(v0 + 1912);
            uint64_t v135 = *(void *)(v0 + 1904);
            uint64_t v136 = *(void *)(v0 + 1680);
            uint64_t v137 = *(void *)(v0 + 1608);
            uint64_t v138 = *(void *)(v0 + 1240);
            uint64_t v139 = *(void *)(v0 + 1136);
            char v140 = 1;
LABEL_50:
            return sub_100C9CC58(v138, v139, v136, v137, v140, v135, v134);
          }
          uint64_t v11 = *(void *)(v0 + 1472);
LABEL_6:
          sub_10001DAB4(v11, &qword_101654A38);
          uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
          uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_7:
          uint64_t v8 = *(void *)(v0 + 1960);
          if (v8 == *(void *)(v0 + 1928)) {
            goto LABEL_27;
          }
          break;
        case 8:
        case 10:
          sub_1000F7878(v12, *(void *)(v0 + 504), v1);
          unint64_t v13 = *(void *)(v0 + 792);
          if (v13 >> 60 == 15) {
            goto LABEL_7;
          }
          uint64_t v14 = *(void *)(v0 + 784);
          unint64_t v15 = *(void *)(v0 + 1912);
          uint64_t v16 = *(void *)(v0 + 1904);
          uint64_t v17 = *(void *)(v0 + 1368);
          uint64_t v18 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
          sub_100037A38(v14, v13);
          sub_101268234(1, v14, v13, v17, v187);
          sub_10000588C(&qword_101657A00);
          uint64_t v19 = swift_allocObject();
          uint64_t v20 = sub_1004B7678(v19, 1);
          *(_OWORD *)uint64_t v21 = *(_OWORD *)v187;
          long long v23 = *(_OWORD *)(v0 + 336);
          long long v22 = *(_OWORD *)(v0 + 352);
          long long v24 = *(_OWORD *)(v0 + 320);
          *(void *)(v21 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v21 + 32) = v23;
          *(_OWORD *)(v21 + 48) = v22;
          *(_OWORD *)(v21 + 16) = v24;
          uint64_t v25 = SharingCircleWildAdvertisementKey.init(key:)(v20);
          sub_100037A38(v16, v15);
          sub_100CBE5B0(v187, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v26 = sub_100CBCA7C(v25, v16, v15);
          unint64_t v27 = *(void *)(v0 + 1912);
          uint64_t v28 = *(void *)(v0 + 1904);
          uint64_t v198 = v4;
          if (v4)
          {
            sub_100037A24(v28, v27);
            swift_bridgeObjectRelease();
            sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v14, v13);
            char v192 = *(unsigned char *)(v0 + 2233);
            uint64_t v29 = *(void *)(v0 + 1712);
            uint64_t v30 = *(void *)(v0 + 1136);
            unint64_t v31 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
            (*(void (**)(void))(v0 + 1848))();
            sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v32 = swift_allocObject();
            sub_100CBD1B4(v29, v32 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v33 = swift_allocObject();
            *(void *)(v33 + 16) = sub_100CBE0E4;
            *(void *)(v33 + 24) = v32;
            uint64_t v202 = swift_allocObject();
            *(unsigned char *)(v202 + 16) = v192;
            sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v34 = swift_allocObject();
            sub_100CBD1B4(v29, v34 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v193 = swift_allocObject();
            *(void *)(v193 + 16) = sub_100CBE2E4;
            *(void *)(v193 + 24) = v34;
            sub_100CBD0EC(v30, v29, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v35 = swift_allocObject();
            sub_100CBD1B4(v29, v35 + v31, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v36 = swift_allocObject();
            *(void *)(v36 + 16) = sub_100CBE300;
            *(void *)(v36 + 24) = v35;
            uint64_t v161 = swift_allocObject();
            *(void *)(v161 + 16) = v198;
            swift_errorRetain();
            os_log_t log = Logger.logObject.getter();
            os_log_type_t v164 = static os_log_type_t.error.getter();
            uint64_t v185 = swift_allocObject();
            *(unsigned char *)(v185 + 16) = 34;
            uint64_t v37 = swift_allocObject();
            *(unsigned char *)(v37 + 16) = 8;
            uint64_t v38 = swift_allocObject();
            *(void *)(v38 + 16) = sub_100CC28B8;
            *(void *)(v38 + 24) = v33;
            uint64_t v39 = swift_allocObject();
            *(void *)(v39 + 16) = sub_1000654EC;
            *(void *)(v39 + 24) = v38;
            uint64_t v40 = v39;
            uint64_t v41 = swift_allocObject();
            *(unsigned char *)(v41 + 16) = 34;
            uint64_t v175 = swift_allocObject();
            *(unsigned char *)(v175 + 16) = 8;
            uint64_t v42 = swift_allocObject();
            *(void *)(v42 + 16) = sub_100CBE3EC;
            *(void *)(v42 + 24) = v202;
            uint64_t v174 = swift_allocObject();
            *(void *)(v174 + 16) = sub_1000654EC;
            *(void *)(v174 + 24) = v42;
            uint64_t v203 = swift_allocObject();
            *(unsigned char *)(v203 + 16) = 112;
            uint64_t v173 = swift_allocObject();
            *(unsigned char *)(v173 + 16) = 8;
            uint64_t v43 = swift_allocObject();
            *(void *)(v43 + 16) = 1752392040;
            uint64_t v200 = swift_allocObject();
            *(void *)(v200 + 16) = sub_10006550C;
            *(void *)(v200 + 24) = v43;
            uint64_t v171 = swift_allocObject();
            *(unsigned char *)(v171 + 16) = 33;
            uint64_t v170 = swift_allocObject();
            *(unsigned char *)(v170 + 16) = 8;
            uint64_t v44 = swift_allocObject();
            *(void *)(v44 + 16) = sub_1000654F4;
            *(void *)(v44 + 24) = v193;
            uint64_t v194 = swift_allocObject();
            *(void *)(v194 + 16) = sub_1000654EC;
            *(void *)(v194 + 24) = v44;
            uint64_t v190 = swift_allocObject();
            *(unsigned char *)(v190 + 16) = 112;
            uint64_t v188 = swift_allocObject();
            *(unsigned char *)(v188 + 16) = 8;
            uint64_t v45 = swift_allocObject();
            *(void *)(v45 + 16) = 1752392040;
            uint64_t v184 = swift_allocObject();
            *(void *)(v184 + 16) = sub_10006550C;
            *(void *)(v184 + 24) = v45;
            uint64_t v183 = swift_allocObject();
            *(unsigned char *)(v183 + 16) = 33;
            uint64_t v167 = swift_allocObject();
            *(unsigned char *)(v167 + 16) = 8;
            uint64_t v46 = swift_allocObject();
            *(void *)(v46 + 16) = sub_1000654F4;
            *(void *)(v46 + 24) = v36;
            uint64_t v181 = swift_allocObject();
            *(void *)(v181 + 16) = sub_1000654EC;
            *(void *)(v181 + 24) = v46;
            uint64_t v160 = swift_allocObject();
            *(unsigned char *)(v160 + 16) = 34;
            uint64_t v179 = swift_allocObject();
            *(unsigned char *)(v179 + 16) = 8;
            uint64_t v47 = swift_allocObject();
            *(void *)(v47 + 16) = sub_100CBE4A8;
            *(void *)(v47 + 24) = v161;
            uint64_t v48 = swift_allocObject();
            *(void *)(v48 + 16) = sub_1000654EC;
            *(void *)(v48 + 24) = v47;
            uint64_t v49 = swift_allocObject();
            sub_1004B810C(v49, 21);
            void *v50 = sub_100065514;
            v50[1] = v185;
            v50[2] = sub_100065514;
            v50[3] = v37;
            v50[4] = sub_100065500;
            v50[5] = v40;
            v50[6] = sub_100065514;
            v50[7] = v41;
            v50[8] = sub_100065514;
            v50[9] = v175;
            v50[10] = sub_100065500;
            v50[11] = v174;
            v50[12] = sub_100065514;
            v50[13] = v203;
            v50[14] = sub_100065514;
            v50[15] = v173;
            v50[16] = sub_100065504;
            v50[17] = v200;
            v50[18] = sub_100065514;
            v50[19] = v171;
            v50[20] = sub_100065514;
            v50[21] = v170;
            v50[22] = sub_100065500;
            v50[23] = v194;
            v50[24] = sub_100065514;
            v50[25] = v190;
            v50[26] = sub_100065514;
            v50[27] = v188;
            v50[28] = sub_100065504;
            v50[29] = v184;
            v50[30] = sub_100065514;
            v50[31] = v183;
            v50[32] = sub_100065514;
            v50[33] = v167;
            v50[34] = sub_100065500;
            v50[35] = v181;
            v50[36] = sub_100065514;
            v50[37] = v160;
            v50[38] = sub_100065514;
            v50[39] = v179;
            v50[40] = sub_100065500;
            v50[41] = v48;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(log, v164))
            {
              uint64_t v51 = (uint8_t *)sub_1008F9FAC();
              uint64_t v52 = swift_slowAlloc();
              *(void *)(v0 + 1096) = 0;
              *(void *)(v0 + 1056) = v52;
              *(_WORD *)uint64_t v51 = 1795;
              *(void *)(v0 + 888) = v51 + 2;
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v185;
              uint64_t v2 = v172;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v37;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065500;
              *(void *)(v0 + 680) = v40;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v41;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v175;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065500;
              *(void *)(v0 + 680) = v174;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v203;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v173;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065504;
              *(void *)(v0 + 680) = v200;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v171;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v170;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065500;
              *(void *)(v0 + 680) = v194;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v190;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v188;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065504;
              *(void *)(v0 + 680) = v184;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v183;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v167;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065500;
              *(void *)(v0 + 680) = v181;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v160;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065514;
              *(void *)(v0 + 680) = v179;
              sub_1008F9FB4(v159, v158, v172, v157);
              swift_release();
              *(void *)(v0 + 672) = sub_100065500;
              *(void *)(v0 + 680) = v48;
              sub_1008F9FB4(v159, v158, v172, v157);
              uint64_t v53 = *(void *)(v0 + 1736);
              uint64_t v54 = *(void *)(v0 + 1728);
              uint64_t v55 = *(void *)(v0 + 1720);
              swift_release();
              _os_log_impl((void *)&_mh_execute_header, log, v164, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v51, 0x48u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_1008F9FA0();

              swift_errorRelease();
              uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
              v9(v53, v55);
              uint64_t v4 = 0;
              uint64_t v10 = v9;
              uint64_t v1 = v168;
              uint64_t v3 = v169;
              goto LABEL_7;
            }
            uint64_t v165 = *(void *)(v0 + 1736);
            uint64_t v98 = *(void *)(v0 + 1728);
            uint64_t v162 = *(void *)(v0 + 1720);
            swift_errorRelease();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
            v9(v165, v162);
          }
          else
          {
            uint64_t v176 = v14;
            unint64_t v177 = v13;
            uint64_t v189 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
            uint64_t v186 = *(void *)(v0 + 1840);
            uint64_t v180 = *(void *)(v0 + 1768);
            uint64_t v182 = *(void *)(v0 + 1720);
            uint64_t v70 = *(void *)(v0 + 1712);
            uint64_t v71 = *(void *)(v0 + 1640);
            uint64_t v72 = *(void *)(v0 + 1624);
            uint64_t v73 = *(void *)(v0 + 1352);
            uint64_t v74 = *(unsigned char **)(v0 + 1312);
            uint64_t v195 = *(void *)(v0 + 1272);
            unint64_t v75 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
            uint64_t v178 = *(void *)(v0 + 1136);
            sub_100037A24(v28, v27);
            swift_bridgeObjectRelease();
            sub_100CBD0EC(v71, v72, type metadata accessor for KeyDropInterface.KeyAlignment);
            sub_101263C08(v12, v72, (uint64_t)v26, v74);
            sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
            sub_100C272D0(v73);
            v189(v180, v186, v182);
            sub_100CBD0EC(v178, v70, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v76 = swift_allocObject();
            sub_100CBD1B4(v70, v76 + v75, type metadata accessor for SharingCircleKeyManager.Instruction);
            uint64_t v77 = swift_allocObject();
            *(void *)(v77 + 16) = sub_100CBE0E4;
            *(void *)(v77 + 24) = v76;
            sub_100CBD0EC((uint64_t)v74, v73, type metadata accessor for KeyDropInterface.KeyPackage);
            unint64_t v78 = (*(unsigned __int8 *)(v195 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v195 + 80);
            uint64_t v79 = swift_allocObject();
            sub_100CBD1B4(v73, v79 + v78, type metadata accessor for KeyDropInterface.KeyPackage);
            uint64_t v80 = swift_allocObject();
            *(void *)(v80 + 16) = sub_100CBE648;
            *(void *)(v80 + 24) = v79;
            uint64_t v204 = Logger.logObject.getter();
            os_log_type_t v81 = static os_log_type_t.default.getter();
            uint64_t v82 = swift_allocObject();
            *(unsigned char *)(v82 + 16) = 34;
            uint64_t v83 = swift_allocObject();
            *(unsigned char *)(v83 + 16) = 8;
            uint64_t v84 = swift_allocObject();
            *(void *)(v84 + 16) = sub_100CC28B8;
            *(void *)(v84 + 24) = v77;
            uint64_t v85 = swift_allocObject();
            *(void *)(v85 + 16) = sub_1000654EC;
            *(void *)(v85 + 24) = v84;
            uint64_t v86 = swift_allocObject();
            *(unsigned char *)(v86 + 16) = 34;
            uint64_t v87 = swift_allocObject();
            *(unsigned char *)(v87 + 16) = 8;
            uint64_t v88 = swift_allocObject();
            *(void *)(v88 + 16) = sub_100CC28BC;
            *(void *)(v88 + 24) = v80;
            uint64_t v89 = swift_allocObject();
            *(void *)(v89 + 16) = sub_1000654EC;
            *(void *)(v89 + 24) = v88;
            uint64_t v90 = swift_allocObject();
            sub_1004B810C(v90, 6);
            *uint64_t v91 = sub_100065514;
            v91[1] = v82;
            v91[2] = sub_100065514;
            v91[3] = v83;
            v91[4] = sub_100065500;
            v91[5] = v85;
            v91[6] = sub_100065514;
            v91[7] = v86;
            v91[8] = sub_100065514;
            v91[9] = v87;
            v91[10] = sub_100065500;
            v91[11] = v89;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v204, v81))
            {
              uint64_t v199 = v87;
              os_log_type_t v196 = v81;
              uint64_t v92 = (uint8_t *)sub_1008F9FAC();
              uint64_t v93 = swift_slowAlloc();
              *(void *)(v0 + 880) = 0;
              uint64_t v191 = v92;
              *(void *)(v0 + 1128) = v93;
              *(_WORD *)uint64_t v92 = 514;
              *(void *)(v0 + 872) = v92 + 2;
              *(void *)(v0 + 768) = sub_100065514;
              *(void *)(v0 + 776) = v82;
              sub_1008F9FB4(v156, v155, v154, v169);
              swift_release();
              *(void *)(v0 + 768) = sub_100065514;
              *(void *)(v0 + 776) = v83;
              sub_1008F9FB4(v156, v155, v154, v169);
              swift_release();
              *(void *)(v0 + 768) = sub_100065500;
              *(void *)(v0 + 776) = v85;
              sub_1008F9FB4(v156, v155, v154, v169);
              swift_release();
              *(void *)(v0 + 768) = sub_100065514;
              *(void *)(v0 + 776) = v86;
              sub_1008F9FB4(v156, v155, v154, v169);
              swift_release();
              *(void *)(v0 + 768) = sub_100065514;
              *(void *)(v0 + 776) = v199;
              sub_1008F9FB4(v156, v155, v154, v169);
              uint64_t v3 = v169;
              swift_release();
              *(void *)(v0 + 768) = sub_100065500;
              *(void *)(v0 + 776) = v89;
              sub_1008F9FB4(v156, v155, v154, v169);
              uint64_t v94 = *(void *)(v0 + 1768);
              uint64_t v95 = *(void *)(v0 + 1728);
              uint64_t v96 = *(void *)(v0 + 1720);
              uint64_t v97 = *(void *)(v0 + 1312);
              swift_release();
              _os_log_impl((void *)&_mh_execute_header, v204, v196, "Keys to upload: %{public}s,\nadded: %{public}s.", v191, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              sub_1008F9FA0();

              sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
              sub_100037A24(v176, v177);
              uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v95 + 8);
              v9(v94, v96);
              sub_100CBD154(v97, type metadata accessor for KeyDropInterface.KeyPackage);
              uint64_t v4 = 0;
              uint64_t v10 = v9;
              uint64_t v1 = v168;
              uint64_t v2 = v172;
              goto LABEL_7;
            }
            uint64_t v197 = *(void *)(v0 + 1768);
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v201 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v187, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v176, v177);
            uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v9(v197, v100);
            sub_100CBD154(v201, type metadata accessor for KeyDropInterface.KeyPackage);
          }
          uint64_t v4 = 0;
          uint64_t v10 = v9;
          uint64_t v1 = v168;
          uint64_t v2 = v172;
          uint64_t v3 = v169;
          goto LABEL_7;
        case 9:
          uint64_t v101 = *(void *)(v0 + 1592);
          uint64_t v102 = *(void *)(v0 + 1584);
          uint64_t v103 = *(void *)(v0 + 1464);
          sub_10001D074(*(void *)(v0 + 1504), v103, &qword_101654A38);
          uint64_t v104 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
          *(void *)(v0 + 2152) = v104;
          *(void *)(v0 + 2160) = (v101 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          LODWORD(v102) = v104(v103, 1, v102);
          sub_10001DAB4(v103, &qword_101654A38);
          if (v102 != 1) {
            goto LABEL_2;
          }
          uint64_t v105 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v105;
          void *v105 = v0;
          uint64_t v106 = sub_100C778BC;
          goto LABEL_46;
        case 12:
          uint64_t v121 = (void *)swift_task_alloc();
          *(void *)(v0 + 2208) = v121;
          void *v121 = v0;
          v121[1] = sub_100C80934;
          uint64_t v122 = *(void *)(v0 + 1680);
          uint64_t v123 = *(void *)(v0 + 1168);
          return sub_100C9FCDC(v123, v122);
        case 13:
          uint64_t v124 = (void *)swift_task_alloc();
          *(void *)(v0 + 2200) = v124;
          void *v124 = v0;
          v124[1] = sub_100C7D35C;
          uint64_t v125 = *(void *)(v0 + 1680);
          uint64_t v126 = *(void *)(v0 + 1224);
          return sub_100CA020C(v126, v125);
        case 16:
          unint64_t v127 = (void *)swift_task_alloc();
          *(void *)(v0 + 2216) = v127;
          *unint64_t v127 = v0;
          v127[1] = sub_100C83EB4;
          uint64_t v128 = *(void *)(v0 + 1680);
          uint64_t v129 = *(void *)(v0 + 1536);
          uint64_t v130 = *(void *)(v0 + 1160);
          return sub_100CA0E04(v129, v130, v128);
        default:
          goto LABEL_7;
      }
    }
  }
  sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v142 = (void *)swift_task_alloc();
  *(void *)(v0 + 2184) = v142;
  *uint64_t v142 = v0;
  v142[1] = sub_100C7A148;
  uint64_t v143 = *(void *)(v0 + 1912);
  uint64_t v144 = *(void *)(v0 + 1904);
  uint64_t v145 = *(void *)(v0 + 1680);
  uint64_t v146 = *(void *)(v0 + 1600);
  uint64_t v147 = *(void *)(v0 + 1232);
  uint64_t v148 = *(void *)(v0 + 1136);
  return sub_100C9E300(v147, v148, v145, v146, v144, v143);
}

uint64_t sub_100C7A148()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 2192) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 1144);
  if (v0) {
    uint64_t v4 = sub_100C98ABC;
  }
  else {
    uint64_t v4 = sub_100C7A274;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C7A274()
{
  uint64_t v1 = v0 + 856;
  uint64_t v2 = *(void *)(v0 + 1272);
  uint64_t v3 = *(void *)(v0 + 1232);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v2 + 48))(v3, 1, *(void *)(v0 + 1264)) != 1)
  {
    uint64_t v225 = *(void *)(v0 + 1840);
    uint64_t v228 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v7 = *(void *)(v0 + 1776);
    uint64_t v8 = *(void *)(v0 + 1720);
    uint64_t v9 = *(void *)(v0 + 1712);
    uint64_t v10 = *(void *)(v0 + 1352);
    uint64_t v11 = *(void *)(v0 + 1320);
    uint64_t v224 = *(uint8_t **)(v0 + 1136);
    unint64_t v12 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    sub_100CBD1B4(v3, v11, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v252 = v0 + 856;
    sub_100C272D0(v10);
    v228(v7, v225, v8);
    sub_100CBD0EC((uint64_t)v224, v9, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v13 = swift_allocObject();
    sub_100CBD1B4(v9, v13 + v12, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = sub_100CBE0E4;
    *(void *)(v14 + 24) = v13;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v15 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v16 = swift_allocObject();
    sub_100CBD1B4(v10, v16 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v236 = swift_allocObject();
    *(void *)(v236 + 16) = sub_100CBE648;
    *(void *)(v236 + 24) = v16;
    sub_100CBD0EC(v11, v10, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v17 = swift_allocObject();
    sub_100CBD1B4(v10, v17 + v15, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v240 = swift_allocObject();
    *(void *)(v240 + 16) = sub_100CBE7F4;
    *(void *)(v240 + 24) = v17;
    uint64_t v251 = Logger.logObject.getter();
    LOBYTE(v250) = static os_log_type_t.default.getter();
    uint64_t v254 = swift_allocObject();
    *(unsigned char *)(v254 + 16) = 34;
    uint64_t v18 = swift_allocObject();
    *(unsigned char *)(v18 + 16) = 8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100CC28B8;
    *(void *)(v19 + 24) = v14;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = sub_1000654EC;
    *(void *)(v20 + 24) = v19;
    uint64_t v21 = swift_allocObject();
    *(unsigned char *)(v21 + 16) = 34;
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = 8;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_100CC28BC;
    *(void *)(v23 + 24) = v236;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1000654EC;
    *(void *)(v24 + 24) = v23;
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 16) = 34;
    uint64_t v26 = swift_allocObject();
    *(unsigned char *)(v26 + 16) = 8;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = sub_100CBE7F8;
    *(void *)(v27 + 24) = v240;
    uint64_t v28 = v18;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1000654EC;
    *(void *)(v29 + 24) = v27;
    uint64_t v30 = swift_allocObject();
    sub_1004B810C(v30, 9);
    *unint64_t v31 = sub_100065514;
    v31[1] = v254;
    void v31[2] = sub_100065514;
    v31[3] = v28;
    void v31[4] = sub_100065500;
    v31[5] = v20;
    v31[6] = sub_100065514;
    v31[7] = v21;
    v31[8] = sub_100065514;
    v31[9] = v22;
    v31[10] = sub_100065500;
    v31[11] = v24;
    v31[12] = sub_100065514;
    v31[13] = v25;
    v31[14] = sub_100065514;
    v31[15] = v26;
    v31[16] = sub_100065500;
    v31[17] = v29;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v251, (os_log_type_t)v250))
    {
      uint64_t v226 = v29;
      uint64_t v32 = *(void *)(v0 + 2192);
      uint64_t v33 = (uint8_t *)sub_1008F9FAC();
      uint64_t v34 = swift_slowAlloc();
      *(void *)(v0 + 912) = 0;
      uint64_t v224 = v33;
      *(void *)(v0 + 920) = v34;
      *(_WORD *)uint64_t v33 = 770;
      *(void *)(v0 + 904) = v33 + 2;
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v254;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      if (v32)
      {
        uint64_t v35 = *(void *)(v0 + 1672);
        swift_errorRelease();
        return sub_100CBD154(v35, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      }
      swift_release();
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v28;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065500;
      *(void *)(v0 + 760) = v20;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v21;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v22;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065500;
      *(void *)(v0 + 760) = v24;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v25;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065514;
      *(void *)(v0 + 760) = v26;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      swift_release();
      *(void *)(v0 + 752) = sub_100065500;
      *(void *)(v0 + 760) = v226;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 752), v0 + 904, v0 + 912, v0 + 920);
      goto LABEL_77;
    }
    uint64_t v37 = *(void *)(v0 + 1728);
    uint64_t v38 = *(void *)(v0 + 1720);
    uint64_t v39 = *(void *)(v0 + 1600);
    uint64_t v246 = *(void *)(v0 + 1776);
    uint64_t v250 = *(void *)(v0 + 1320);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    v6(v246, v38);
    sub_100CBD154(v250, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v39, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = *(void *)(v0 + 2192);
    goto LABEL_15;
  }
  sub_100CBD154(*(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
  sub_10001DAB4(v3, &qword_10165C148);
  uint64_t v4 = *(void *)(v0 + 2192);
  BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
  while (1)
  {
    uint64_t v40 = (uint64_t *)(v0 + 448);
    uint64_t v41 = *(void *)(v0 + 1960);
    if (v41 == *(void *)(v0 + 1928))
    {
LABEL_17:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v40);
      swift_bridgeObjectRelease();
      uint64_t v253 = *(void *)(v0 + 856);
      uint64_t v42 = *(void *)(v0 + 1680);
      uint64_t v43 = *(void *)(v0 + 1640);
      uint64_t v44 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v44, &qword_101654A38);
      sub_100CBD154(v43, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v42, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v45 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v45(v253);
    }
    uint64_t v227 = (void *)(v0 + 304);
    uint64_t v207 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
    uint64_t v203 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
    uint64_t v251 = (v0 + 784);
    uint64_t v201 = v0 + 880;
    uint64_t v202 = v0 + 872;
    uint64_t v205 = v0 + 1056;
    uint64_t v206 = v0 + 888;
    uint64_t v204 = v0 + 1096;
    uint64_t v200 = v0 + 1128;
    uint64_t v252 = v1;
LABEL_23:
    *(void *)(v0 + 1952) = v5;
    *(void *)(v0 + 1944) = v6;
    *(void *)(v0 + 1936) = v4;
    uint64_t v46 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v41 + 32);
    *(unsigned char *)(v0 + 2233) = v46;
    *(void *)(v0 + 1960) = v41 + 1;
    if (!__OFADD__(v41, 1)) {
      break;
    }
    __break(1u);
LABEL_77:
    uint64_t v195 = *(void *)(v0 + 1776);
    uint64_t v196 = *(void *)(v0 + 1728);
    uint64_t v197 = *(void *)(v0 + 1720);
    uint64_t v198 = *(void *)(v0 + 1600);
    uint64_t v199 = *(void *)(v0 + 1320);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v251, (os_log_type_t)v250, "Keys to upload: %{public}s,\nadded connectionKeyPackage: %{public}s,\nkey indexes: %{public}s.", v224, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v196 + 8);
    v6(v195, v197);
    sub_100CBD154(v199, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyAlignment);
    uint64_t v4 = 0;
LABEL_15:
    BOOL v5 = v6;
    uint64_t v1 = v252;
  }
  switch(v46)
  {
    case 1:
      uint64_t v152 = *(void *)(v0 + 1424);
      sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v152);
      uint64_t v153 = type metadata accessor for BookmarkMetaData();
      int v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 48))(v152, 1, v153);
      uint64_t v155 = *(void *)(v0 + 1424);
      if (v154 == 1)
      {
        sub_10001DAB4(v155, &qword_10164B638);
        uint64_t v156 = 0;
      }
      else
      {
        uint64_t v156 = *(void *)(v155 + 8);
        sub_100CBD154(v155, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      }
      *(void *)(v0 + 1968) = v156;
      uint64_t v191 = *(int *)(v0 + 2228);
      uint64_t v192 = *(void *)(v0 + 1136);
      uint64_t v193 = (void *)swift_task_alloc();
      *(void *)(v0 + 1976) = v193;
      *uint64_t v193 = v0;
      v193[1] = sub_100C62684;
      uint64_t v194 = *(void *)(v0 + 1392);
      return sub_100CA6DC8(v194, v192 + v191);
    case 4:
      uint64_t v157 = (void *)swift_task_alloc();
      *(void *)(v0 + 2040) = v157;
      *uint64_t v157 = v0;
      v157[1] = sub_100C691B0;
      uint64_t v158 = *(void *)(v0 + 1680);
      uint64_t v159 = *(void *)(v0 + 1256);
      uint64_t v160 = *(void *)(v0 + 1136);
      return sub_100C9B9FC(v159, v160, v158, (uint64_t)v40);
    case 5:
      uint64_t v96 = *(void *)(v0 + 1592);
      uint64_t v97 = *(void *)(v0 + 1584);
      uint64_t v98 = *(void *)(v0 + 1496);
      sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
      uint64_t v99 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
      *(void *)(v0 + 2056) = v99;
      *(void *)(v0 + 2064) = (v96 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v97) = v99(v98, 1, v97);
      sub_10001DAB4(v98, &qword_101654A38);
      if (v97 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C6C37C;
        goto LABEL_61;
      }
      uint64_t v100 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
      uint64_t v101 = *(void *)(v0 + 1584);
      uint64_t v102 = *(void *)(v0 + 1488);
      sub_10001D074(*(void *)(v0 + 1504), v102, &qword_101654A38);
      if (v100(v102, 1, v101) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1488);
        goto LABEL_21;
      }
      sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v175 = (void *)swift_task_alloc();
      *(void *)(v0 + 2088) = v175;
      *uint64_t v175 = v0;
      v175[1] = sub_100C6EC08;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1616);
      uint64_t v180 = *(void *)(v0 + 1248);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 0;
      goto LABEL_66;
    case 6:
      uint64_t v104 = *(void *)(v0 + 1592);
      uint64_t v105 = *(void *)(v0 + 1584);
      uint64_t v106 = *(void *)(v0 + 1480);
      sub_10001D074(*(void *)(v0 + 1504), v106, &qword_101654A38);
      uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48);
      *(void *)(v0 + 2104) = v107;
      *(void *)(v0 + 2112) = (v104 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v105) = v107(v106, 1, v105);
      sub_10001DAB4(v106, &qword_101654A38);
      if (v105 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C71E1C;
LABEL_61:
        v171[1] = v172;
        uint64_t v173 = *(void *)(v0 + 1672);
        uint64_t v174 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v173, v174);
      }
      uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
      uint64_t v109 = *(void *)(v0 + 1584);
      uint64_t v110 = *(void *)(v0 + 1472);
      sub_10001D074(*(void *)(v0 + 1504), v110, &qword_101654A38);
      if (v108(v110, 1, v109) == 1)
      {
        uint64_t v103 = *(void *)(v0 + 1472);
LABEL_21:
        sub_10001DAB4(v103, &qword_101654A38);
        BOOL v5 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
        uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_22:
        uint64_t v41 = *(void *)(v0 + 1960);
        if (v41 == *(void *)(v0 + 1928)) {
          goto LABEL_17;
        }
        goto LABEL_23;
      }
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v183 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v183;
      *uint64_t v183 = v0;
      v183[1] = sub_100C746A8;
      uint64_t v176 = *(void *)(v0 + 1912);
      uint64_t v177 = *(void *)(v0 + 1904);
      uint64_t v178 = *(void *)(v0 + 1680);
      uint64_t v179 = *(void *)(v0 + 1608);
      uint64_t v180 = *(void *)(v0 + 1240);
      uint64_t v181 = *(void *)(v0 + 1136);
      char v182 = 1;
LABEL_66:
      return sub_100C9CC58(v180, v181, v178, v179, v182, v177, v176);
    case 8:
    case 10:
      sub_1000F7878(v46, *(void *)(v0 + 504), (uint64_t *)v251);
      unint64_t v47 = *(void *)(v0 + 792);
      if (v47 >> 60 != 15)
      {
        uint64_t v48 = *(void *)(v0 + 784);
        unint64_t v49 = *(void *)(v0 + 1912);
        uint64_t v50 = *(void *)(v0 + 1904);
        uint64_t v51 = *(void *)(v0 + 1368);
        uint64_t v52 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v51, 1, 1, v52);
        sub_100037A38(v48, v47);
        sub_101268234(1, v48, v47, v51, v227);
        sub_10000588C(&qword_101657A00);
        uint64_t v53 = swift_allocObject();
        uint64_t v54 = sub_1004B7678(v53, 1);
        *(_OWORD *)uint64_t v55 = *(_OWORD *)v227;
        long long v57 = *(_OWORD *)(v0 + 336);
        long long v56 = *(_OWORD *)(v0 + 352);
        long long v58 = *(_OWORD *)(v0 + 320);
        *(void *)(v55 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v55 + 32) = v57;
        *(_OWORD *)(v55 + 48) = v56;
        *(_OWORD *)(v55 + 16) = v58;
        uint64_t v59 = SharingCircleWildAdvertisementKey.init(key:)(v54);
        sub_100037A38(v50, v49);
        sub_100CBE5B0(v227, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v60 = sub_100CBCA7C(v59, v50, v49);
        unint64_t v61 = *(void *)(v0 + 1912);
        uint64_t v62 = *(void *)(v0 + 1904);
        if (v4)
        {
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v48, v47);
          char v237 = *(unsigned char *)(v0 + 2233);
          uint64_t v63 = *(void *)(v0 + 1712);
          uint64_t v64 = *(void *)(v0 + 1136);
          unint64_t v65 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v66 = v4;
          (*(void (**)(void))(v0 + 1848))();
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v67 = swift_allocObject();
          sub_100CBD1B4(v63, v67 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v241 = swift_allocObject();
          *(void *)(v241 + 16) = sub_100CBE0E4;
          *(void *)(v241 + 24) = v67;
          uint64_t v247 = swift_allocObject();
          *(unsigned char *)(v247 + 16) = v237;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v68 = swift_allocObject();
          sub_100CBD1B4(v63, v68 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v232 = swift_allocObject();
          *(void *)(v232 + 16) = sub_100CBE2E4;
          *(void *)(v232 + 24) = v68;
          sub_100CBD0EC(v64, v63, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v69 = swift_allocObject();
          sub_100CBD1B4(v63, v69 + v65, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v70 = swift_allocObject();
          *(void *)(v70 + 16) = sub_100CBE300;
          *(void *)(v70 + 24) = v69;
          uint64_t v71 = swift_allocObject();
          *(void *)(v71 + 16) = v66;
          swift_errorRetain();
          os_log_t log = Logger.logObject.getter();
          os_log_type_t v209 = static os_log_type_t.error.getter();
          uint64_t v218 = swift_allocObject();
          *(unsigned char *)(v218 + 16) = 34;
          uint64_t v72 = swift_allocObject();
          *(unsigned char *)(v72 + 16) = 8;
          uint64_t v73 = swift_allocObject();
          *(void *)(v73 + 16) = sub_100CC28B8;
          *(void *)(v73 + 24) = v241;
          uint64_t v215 = swift_allocObject();
          *(void *)(v215 + 16) = sub_1000654EC;
          *(void *)(v215 + 24) = v73;
          uint64_t v74 = swift_allocObject();
          *(unsigned char *)(v74 + 16) = 34;
          uint64_t v75 = v74;
          uint64_t v250 = swift_allocObject();
          *(unsigned char *)(v250 + 16) = 8;
          uint64_t v76 = swift_allocObject();
          *(void *)(v76 + 16) = sub_100CBE3EC;
          *(void *)(v76 + 24) = v247;
          uint64_t v248 = swift_allocObject();
          *(void *)(v248 + 16) = sub_1000654EC;
          *(void *)(v248 + 24) = v76;
          uint64_t v242 = swift_allocObject();
          *(unsigned char *)(v242 + 16) = 112;
          uint64_t v214 = swift_allocObject();
          *(unsigned char *)(v214 + 16) = 8;
          uint64_t v77 = swift_allocObject();
          *(void *)(v77 + 16) = 1752392040;
          uint64_t v238 = swift_allocObject();
          *(void *)(v238 + 16) = sub_10006550C;
          *(void *)(v238 + 24) = v77;
          uint64_t v213 = swift_allocObject();
          *(unsigned char *)(v213 + 16) = 33;
          uint64_t v212 = swift_allocObject();
          *(unsigned char *)(v212 + 16) = 8;
          uint64_t v78 = swift_allocObject();
          *(void *)(v78 + 16) = sub_1000654F4;
          *(void *)(v78 + 24) = v232;
          uint64_t v233 = swift_allocObject();
          *(void *)(v233 + 16) = sub_1000654EC;
          *(void *)(v233 + 24) = v78;
          uint64_t v230 = swift_allocObject();
          *(unsigned char *)(v230 + 16) = 112;
          uint64_t v224 = (uint8_t *)swift_allocObject();
          v224[16] = 8;
          uint64_t v79 = swift_allocObject();
          *(void *)(v79 + 16) = 1752392040;
          uint64_t v229 = swift_allocObject();
          *(void *)(v229 + 16) = sub_10006550C;
          *(void *)(v229 + 24) = v79;
          uint64_t v80 = swift_allocObject();
          *(unsigned char *)(v80 + 16) = 33;
          uint64_t v81 = v80;
          uint64_t v222 = swift_allocObject();
          *(unsigned char *)(v222 + 16) = 8;
          uint64_t v82 = swift_allocObject();
          *(void *)(v82 + 16) = sub_1000654F4;
          *(void *)(v82 + 24) = v70;
          uint64_t v83 = swift_allocObject();
          *(void *)(v83 + 16) = sub_1000654EC;
          *(void *)(v83 + 24) = v82;
          uint64_t v84 = v83;
          uint64_t v211 = swift_allocObject();
          *(unsigned char *)(v211 + 16) = 34;
          uint64_t v220 = swift_allocObject();
          *(unsigned char *)(v220 + 16) = 8;
          uint64_t v85 = swift_allocObject();
          *(void *)(v85 + 16) = sub_100CBE4A8;
          *(void *)(v85 + 24) = v71;
          uint64_t v86 = swift_allocObject();
          *(void *)(v86 + 16) = sub_1000654EC;
          *(void *)(v86 + 24) = v85;
          uint64_t v87 = swift_allocObject();
          sub_1004B810C(v87, 21);
          *uint64_t v88 = sub_100065514;
          v88[1] = v218;
          uint64_t v88[2] = sub_100065514;
          v88[3] = v72;
          v88[4] = sub_100065500;
          v88[5] = v215;
          v88[6] = sub_100065514;
          v88[7] = v75;
          v88[8] = sub_100065514;
          v88[9] = v250;
          v88[10] = sub_100065500;
          v88[11] = v248;
          v88[12] = sub_100065514;
          v88[13] = v242;
          v88[14] = sub_100065514;
          v88[15] = v214;
          v88[16] = sub_100065504;
          v88[17] = v238;
          v88[18] = sub_100065514;
          v88[19] = v213;
          v88[20] = sub_100065514;
          v88[21] = v212;
          v88[22] = sub_100065500;
          v88[23] = v233;
          v88[24] = sub_100065514;
          v88[25] = v230;
          v88[26] = sub_100065514;
          v88[27] = v224;
          v88[28] = sub_100065504;
          v88[29] = v229;
          v88[30] = sub_100065514;
          v88[31] = v81;
          uint64_t v89 = v81;
          v88[32] = sub_100065514;
          v88[33] = v222;
          v88[34] = sub_100065500;
          v88[35] = v84;
          uint64_t v90 = v84;
          v88[36] = sub_100065514;
          v88[37] = v211;
          v88[38] = sub_100065514;
          v88[39] = v220;
          v88[40] = sub_100065500;
          v88[41] = v86;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(log, v209))
          {
            uint64_t v91 = (uint8_t *)sub_1008F9FAC();
            uint64_t v92 = swift_slowAlloc();
            *(void *)(v0 + 1096) = 0;
            *(void *)(v0 + 1056) = v92;
            *(_WORD *)uint64_t v91 = 1795;
            *(void *)(v0 + 888) = v91 + 2;
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v218;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v72;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v215;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v75;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v250;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v248;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v242;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v214;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v238;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v213;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v212;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v233;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v230;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v224;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065504;
            *(void *)(v0 + 680) = v229;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v89;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v222;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v90;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v211;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065514;
            *(void *)(v0 + 680) = v220;
            sub_1008F9FB4(v207, v206, v204, v205);
            swift_release();
            *(void *)(v0 + 672) = sub_100065500;
            *(void *)(v0 + 680) = v86;
            sub_1008F9FB4(v207, v206, v204, v205);
            uint64_t v93 = *(void *)(v0 + 1736);
            uint64_t v94 = *(void *)(v0 + 1728);
            uint64_t v95 = *(void *)(v0 + 1720);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, log, v209, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v91, 0x48u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            swift_errorRelease();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v94 + 8);
            v6(v93, v95);
          }
          else
          {
            uint64_t v148 = *(void *)(v0 + 1736);
            uint64_t v149 = *(void *)(v0 + 1728);
            uint64_t v210 = *(void *)(v0 + 1720);
            swift_errorRelease();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v149 + 8);
            v6(v148, v210);
          }
        }
        else
        {
          uint64_t v216 = v48;
          unint64_t v217 = v47;
          uint64_t v118 = *(unsigned __int8 *)(v0 + 2224);
          char v234 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v231 = *(void *)(v0 + 1840);
          uint64_t v221 = *(void *)(v0 + 1768);
          uint64_t v223 = *(void *)(v0 + 1720);
          uint64_t v119 = *(void *)(v0 + 1712);
          uint64_t v120 = *(void *)(v0 + 1640);
          uint64_t v121 = *(void *)(v0 + 1624);
          uint64_t v122 = *(void *)(v0 + 1352);
          uint64_t v123 = *(unsigned char **)(v0 + 1312);
          uint64_t v243 = *(void *)(v0 + 1272);
          uint64_t v124 = (v118 + 16) & ~v118;
          uint64_t v224 = (uint8_t *)(v118 | 7);
          uint64_t v219 = *(void *)(v0 + 1136);
          sub_100037A24(v62, v61);
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v120, v121, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v46, v121, (uint64_t)v60, v123);
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v122);
          v234(v221, v231, v223);
          sub_100CBD0EC(v219, v119, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v125 = swift_allocObject();
          sub_100CBD1B4(v119, v125 + v124, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v126 = swift_allocObject();
          *(void *)(v126 + 16) = sub_100CBE0E4;
          *(void *)(v126 + 24) = v125;
          sub_100CBD0EC((uint64_t)v123, v122, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v127 = (*(unsigned __int8 *)(v243 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v243 + 80);
          uint64_t v128 = swift_allocObject();
          sub_100CBD1B4(v122, v128 + v127, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v129 = swift_allocObject();
          *(void *)(v129 + 16) = sub_100CBE648;
          *(void *)(v129 + 24) = v128;
          uint64_t v250 = Logger.logObject.getter();
          os_log_type_t v130 = static os_log_type_t.default.getter();
          uint64_t v131 = swift_allocObject();
          *(unsigned char *)(v131 + 16) = 34;
          uint64_t v132 = swift_allocObject();
          *(unsigned char *)(v132 + 16) = 8;
          uint64_t v133 = swift_allocObject();
          *(void *)(v133 + 16) = sub_100CC28B8;
          *(void *)(v133 + 24) = v126;
          uint64_t v134 = swift_allocObject();
          *(void *)(v134 + 16) = sub_1000654EC;
          *(void *)(v134 + 24) = v133;
          uint64_t v135 = swift_allocObject();
          *(unsigned char *)(v135 + 16) = 34;
          uint64_t v136 = swift_allocObject();
          *(unsigned char *)(v136 + 16) = 8;
          uint64_t v137 = swift_allocObject();
          *(void *)(v137 + 16) = sub_100CC28BC;
          *(void *)(v137 + 24) = v129;
          uint64_t v138 = swift_allocObject();
          *(void *)(v138 + 16) = sub_1000654EC;
          *(void *)(v138 + 24) = v137;
          uint64_t v139 = swift_allocObject();
          sub_1004B810C(v139, 6);
          *char v140 = sub_100065514;
          v140[1] = v131;
          v140[2] = sub_100065514;
          v140[3] = v132;
          v140[4] = sub_100065500;
          v140[5] = v134;
          v140[6] = sub_100065514;
          v140[7] = v135;
          v140[8] = sub_100065514;
          v140[9] = v136;
          v140[10] = sub_100065500;
          v140[11] = v138;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled((os_log_t)v250, v130))
          {
            uint64_t v244 = v136;
            os_log_type_t v239 = v130;
            uint64_t v141 = (uint8_t *)sub_1008F9FAC();
            uint64_t v142 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v235 = v141;
            *(void *)(v0 + 1128) = v142;
            *(_WORD *)uint64_t v141 = 514;
            *(void *)(v0 + 872) = v141 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v131;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v132;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v134;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v135;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v244;
            sub_1008F9FB4(v203, v202, v201, v200);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v138;
            sub_1008F9FB4(v203, v202, v201, v200);
            uint64_t v143 = *(void *)(v0 + 1768);
            uint64_t v144 = *(void *)(v0 + 1728);
            uint64_t v145 = *(void *)(v0 + 1720);
            uint64_t v146 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, (os_log_t)v250, v239, "Keys to upload: %{public}s,\nadded: %{public}s.", v235, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
            v6(v143, v145);
            uint64_t v147 = v146;
          }
          else
          {
            uint64_t v150 = *(void *)(v0 + 1728);
            uint64_t v151 = *(void *)(v0 + 1720);
            uint64_t v245 = *(void *)(v0 + 1768);
            uint64_t v249 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v227, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v216, v217);
            uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v150 + 8);
            v6(v245, v151);
            uint64_t v147 = v249;
          }
          sub_100CBD154(v147, type metadata accessor for KeyDropInterface.KeyPackage);
        }
        uint64_t v4 = 0;
        BOOL v5 = v6;
        uint64_t v40 = (uint64_t *)(v0 + 448);
      }
      goto LABEL_22;
    case 9:
      uint64_t v111 = *(void *)(v0 + 1592);
      uint64_t v112 = *(void *)(v0 + 1584);
      uint64_t v113 = *(void *)(v0 + 1464);
      sub_10001D074(*(void *)(v0 + 1504), v113, &qword_101654A38);
      int v114 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
      *(void *)(v0 + 2152) = v114;
      *(void *)(v0 + 2160) = (v111 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v112) = v114(v113, 1, v112);
      sub_10001DAB4(v113, &qword_101654A38);
      if (v112 == 1)
      {
        uint64_t v171 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v171;
        *uint64_t v171 = v0;
        uint64_t v172 = sub_100C778BC;
        goto LABEL_61;
      }
      uint64_t v115 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
      uint64_t v116 = *(void *)(v0 + 1584);
      uint64_t v117 = *(void *)(v0 + 1456);
      sub_10001D074(*(void *)(v0 + 1504), v117, &qword_101654A38);
      if (v115(v117, 1, v116) != 1)
      {
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v184 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v184;
        *uint64_t v184 = v0;
        v184[1] = sub_100C7A148;
        uint64_t v185 = *(void *)(v0 + 1912);
        uint64_t v186 = *(void *)(v0 + 1904);
        uint64_t v187 = *(void *)(v0 + 1680);
        uint64_t v188 = *(void *)(v0 + 1600);
        uint64_t v189 = *(void *)(v0 + 1232);
        uint64_t v190 = *(void *)(v0 + 1136);
        return sub_100C9E300(v189, v190, v187, v188, v186, v185);
      }
      uint64_t v103 = *(void *)(v0 + 1456);
      goto LABEL_21;
    case 12:
      uint64_t v161 = (void *)swift_task_alloc();
      *(void *)(v0 + 2208) = v161;
      *uint64_t v161 = v0;
      v161[1] = sub_100C80934;
      uint64_t v162 = *(void *)(v0 + 1680);
      uint64_t v163 = *(void *)(v0 + 1168);
      return sub_100C9FCDC(v163, v162);
    case 13:
      os_log_type_t v164 = (void *)swift_task_alloc();
      *(void *)(v0 + 2200) = v164;
      *os_log_type_t v164 = v0;
      v164[1] = sub_100C7D35C;
      uint64_t v165 = *(void *)(v0 + 1680);
      uint64_t v166 = *(void *)(v0 + 1224);
      return sub_100CA020C(v166, v165);
    case 16:
      uint64_t v167 = (void *)swift_task_alloc();
      *(void *)(v0 + 2216) = v167;
      *uint64_t v167 = v0;
      v167[1] = sub_100C83EB4;
      uint64_t v168 = *(void *)(v0 + 1680);
      uint64_t v169 = *(void *)(v0 + 1536);
      uint64_t v170 = *(void *)(v0 + 1160);
      return sub_100CA0E04(v169, v170, v168);
    default:
      goto LABEL_22;
  }
}

uint64_t sub_100C7D35C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1144);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C7D46C, v1, 0);
}

uint64_t sub_100C7D46C()
{
  uint64_t v315 = (void *)(v0 + 304);
  uint64_t v249 = (uint64_t *)(v0 + 448);
  uint64_t v253 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v256 = v0 + 872;
  uint64_t v257 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v251 = v0 + 1056;
  uint64_t v252 = v0 + 888;
  uint64_t v250 = v0 + 1096;
  uint64_t v1 = *(void *)(v0 + 1224);
  uint64_t v254 = v0 + 1128;
  uint64_t v2 = sub_10000588C(&qword_10165C130);
  uint64_t v255 = v0 + 880;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    sub_10001DAB4(v1, &qword_10165C140);
LABEL_13:
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
    uint64_t v38 = *(void *)(v0 + 1936);
    goto LABEL_58;
  }
  uint64_t v3 = *(void *)(v0 + 1688);
  uint64_t v4 = *(void *)(v0 + 1416);
  BOOL v5 = *(void (**)(void, uint64_t, void))(*(void *)(v0 + 1520) + 32);
  uint64_t v6 = *(void *)(v0 + 1136);
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(v2 + 48));
  uint64_t v287 = v7[2];
  uint64_t v294 = *v7;
  uint64_t v8 = v7[4];
  uint64_t v277 = v7[5];
  uint64_t v281 = v7[3];
  char v302 = v7[6];
  uint64_t v309 = v7[1];
  uint64_t v9 = v7[8];
  uint64_t v275 = v7[7];
  v5(*(void *)(v0 + 1560), v1, *(void *)(v0 + 1512));
  sub_1000F7750(13, *(void *)(v6 + *(int *)(v3 + 44)), v4);
  uint64_t v10 = type metadata accessor for BookmarkMetaData();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v4, 1, v10) == 1)
  {
    uint64_t v11 = (uint64_t *)(v0 + 1416);
    unint64_t v12 = &qword_10164B638;
LABEL_7:
    uint64_t v18 = v9;
    sub_10001DAB4(*v11, v12);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1520) + 56))(*(void *)(v0 + 1216), 1, 1, *(void *)(v0 + 1512));
    uint64_t v19 = v8;
LABEL_8:
    uint64_t v20 = *(void *)(v0 + 1216);
    static Date.distantPast.getter();
    sub_10001DAB4(v20, (uint64_t *)&unk_10163AC90);
    goto LABEL_9;
  }
  uint64_t v13 = *(void *)(v0 + 1592);
  uint64_t v14 = *(void *)(v0 + 1584);
  uint64_t v15 = *(void *)(v0 + 1448);
  uint64_t v16 = *(void *)(v0 + 1416);
  uint64_t v17 = v16 + *(int *)(v10 + 20);
  unint64_t v12 = &qword_101654A38;
  sub_10001D074(v17, v15, &qword_101654A38);
  sub_100CBD154(v16, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v15, 1, v14) == 1)
  {
    uint64_t v11 = (uint64_t *)(v0 + 1448);
    goto LABEL_7;
  }
  uint64_t v39 = *(void *)(v0 + 1520);
  uint64_t v40 = *(void *)(v0 + 1512);
  uint64_t v41 = *(void *)(v0 + 1448);
  uint64_t v42 = *(void *)(v0 + 1216);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v42, v41 + *(int *)(*(void *)(v0 + 1584) + 24), v40);
  sub_100CBD154(v41, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v42, 0, 1, v40);
  uint64_t v18 = v9;
  uint64_t v19 = v8;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v42, 1, v40) == 1) {
    goto LABEL_8;
  }
  v5(*(void *)(v0 + 1552), *(void *)(v0 + 1216), *(void *)(v0 + 1512));
LABEL_9:
  if (!sub_100A9F008())
  {
    uint64_t v31 = *(void *)(v0 + 1560);
    uint64_t v32 = *(void *)(v0 + 1552);
    uint64_t v33 = *(void *)(v0 + 1520);
    uint64_t v34 = *(void *)(v0 + 1512);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
    v35(v32, v34);
    v35(v31, v34);
    goto LABEL_13;
  }
  uint64_t v21 = *(void *)(v0 + 1936);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  *(void *)(v0 + 376) = v294;
  *(void *)(v0 + 384) = v309;
  *(void *)(v0 + 392) = v287;
  *(void *)(v0 + 400) = v281;
  *(void *)(v0 + 408) = v19;
  *(void *)(v0 + 416) = v277;
  *(void *)(v0 + 424) = v302;
  *(void *)(v0 + 432) = v275;
  *(void *)(v0 + 440) = v18;
  sub_100CBE704();
  uint64_t v22 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v21)
  {
    uint64_t v24 = v21;
    uint64_t v25 = *(void *)(v0 + 1560);
    uint64_t v26 = *(void *)(v0 + 1552);
    uint64_t v27 = *(void *)(v0 + 1520);
    uint64_t v28 = *(void *)(v0 + 1512);
    swift_release();
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v29(v26, v28);
    v29(v25, v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v30 = v24;
LABEL_54:
    char v291 = *(unsigned char *)(v0 + 2233);
    uint64_t v184 = *(void *)(v0 + 1712);
    uint64_t v185 = *(void *)(v0 + 1136);
    unint64_t v186 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    (*(void (**)(void))(v0 + 1848))();
    sub_100CBD0EC(v185, v184, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v187 = swift_allocObject();
    sub_100CBD1B4(v184, v187 + v186, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v300 = swift_allocObject();
    *(void *)(v300 + 16) = sub_100CBE0E4;
    *(void *)(v300 + 24) = v187;
    uint64_t v313 = swift_allocObject();
    *(unsigned char *)(v313 + 16) = v291;
    sub_100CBD0EC(v185, v184, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v188 = swift_allocObject();
    sub_100CBD1B4(v184, v188 + v186, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v292 = swift_allocObject();
    *(void *)(v292 + 16) = sub_100CBE2E4;
    *(void *)(v292 + 24) = v188;
    sub_100CBD0EC(v185, v184, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v189 = swift_allocObject();
    sub_100CBD1B4(v184, v189 + v186, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v190 = swift_allocObject();
    *(void *)(v190 + 16) = sub_100CBE300;
    *(void *)(v190 + 24) = v189;
    uint64_t v245 = swift_allocObject();
    *(void *)(v245 + 16) = v30;
    swift_errorRetain();
    os_log_t log = Logger.logObject.getter();
    os_log_type_t v242 = static os_log_type_t.error.getter();
    uint64_t v241 = swift_allocObject();
    *(unsigned char *)(v241 + 16) = 34;
    uint64_t v239 = swift_allocObject();
    *(unsigned char *)(v239 + 16) = 8;
    uint64_t v191 = swift_allocObject();
    *(void *)(v191 + 16) = sub_100CC28B8;
    *(void *)(v191 + 24) = v300;
    uint64_t v240 = swift_allocObject();
    *(void *)(v240 + 16) = sub_1000654EC;
    *(void *)(v240 + 24) = v191;
    uint64_t v192 = swift_allocObject();
    *(unsigned char *)(v192 + 16) = 34;
    uint64_t v193 = swift_allocObject();
    *(unsigned char *)(v193 + 16) = 8;
    uint64_t v194 = swift_allocObject();
    *(void *)(v194 + 16) = sub_100CBE3EC;
    *(void *)(v194 + 24) = v313;
    uint64_t v314 = swift_allocObject();
    *(void *)(v314 + 16) = sub_1000654EC;
    *(void *)(v314 + 24) = v194;
    uint64_t v276 = swift_allocObject();
    *(unsigned char *)(v276 + 16) = 112;
    uint64_t v269 = swift_allocObject();
    *(unsigned char *)(v269 + 16) = 8;
    uint64_t v195 = swift_allocObject();
    *(void *)(v195 + 16) = 1752392040;
    uint64_t v263 = swift_allocObject();
    *(void *)(v263 + 16) = sub_10006550C;
    *(void *)(v263 + 24) = v195;
    uint64_t v308 = swift_allocObject();
    *(unsigned char *)(v308 + 16) = 33;
    uint64_t v301 = swift_allocObject();
    *(unsigned char *)(v301 + 16) = 8;
    uint64_t v196 = swift_allocObject();
    *(void *)(v196 + 16) = sub_1000654F4;
    *(void *)(v196 + 24) = v292;
    uint64_t v293 = swift_allocObject();
    *(void *)(v293 + 16) = sub_1000654EC;
    *(void *)(v293 + 24) = v196;
    uint64_t v286 = swift_allocObject();
    *(unsigned char *)(v286 + 16) = 112;
    uint64_t v280 = swift_allocObject();
    *(unsigned char *)(v280 + 16) = 8;
    uint64_t v197 = swift_allocObject();
    *(void *)(v197 + 16) = 1752392040;
    uint64_t v274 = swift_allocObject();
    *(void *)(v274 + 16) = sub_10006550C;
    *(void *)(v274 + 24) = v197;
    uint64_t v272 = swift_allocObject();
    *(unsigned char *)(v272 + 16) = 33;
    uint64_t v266 = swift_allocObject();
    *(unsigned char *)(v266 + 16) = 8;
    uint64_t v198 = swift_allocObject();
    *(void *)(v198 + 16) = sub_1000654F4;
    *(void *)(v198 + 24) = v190;
    uint64_t v260 = swift_allocObject();
    *(void *)(v260 + 16) = sub_1000654EC;
    *(void *)(v260 + 24) = v198;
    uint64_t v248 = swift_allocObject();
    *(unsigned char *)(v248 + 16) = 34;
    uint64_t v247 = swift_allocObject();
    *(unsigned char *)(v247 + 16) = 8;
    uint64_t v199 = swift_allocObject();
    *(void *)(v199 + 16) = sub_100CBE4A8;
    *(void *)(v199 + 24) = v245;
    uint64_t v200 = swift_allocObject();
    *(void *)(v200 + 16) = sub_1000654EC;
    *(void *)(v200 + 24) = v199;
    uint64_t v201 = swift_allocObject();
    sub_1004B810C(v201, 21);
    void *v202 = sub_100065514;
    v202[1] = v241;
    v202[2] = sub_100065514;
    v202[3] = v239;
    v202[4] = sub_100065500;
    v202[5] = v240;
    v202[6] = sub_100065514;
    v202[7] = v192;
    v202[8] = sub_100065514;
    v202[9] = v193;
    v202[10] = sub_100065500;
    v202[11] = v314;
    v202[12] = sub_100065514;
    v202[13] = v276;
    v202[14] = sub_100065514;
    v202[15] = v269;
    v202[16] = sub_100065504;
    v202[17] = v263;
    v202[18] = sub_100065514;
    v202[19] = v308;
    v202[20] = sub_100065514;
    v202[21] = v301;
    v202[22] = sub_100065500;
    v202[23] = v293;
    v202[24] = sub_100065514;
    v202[25] = v286;
    v202[26] = sub_100065514;
    v202[27] = v280;
    v202[28] = sub_100065504;
    v202[29] = v274;
    v202[30] = sub_100065514;
    v202[31] = v272;
    v202[32] = sub_100065514;
    v202[33] = v266;
    v202[34] = sub_100065500;
    v202[35] = v260;
    v202[36] = sub_100065514;
    v202[37] = v248;
    v202[38] = sub_100065514;
    v202[39] = v247;
    v202[40] = sub_100065500;
    v202[41] = v200;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v246 = v193;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(log, v242))
    {
      uint64_t v203 = (uint8_t *)sub_1008F9FAC();
      uint64_t v204 = swift_slowAlloc();
      *(void *)(v0 + 1096) = 0;
      buf = v203;
      *(void *)(v0 + 1056) = v204;
      *(_WORD *)uint64_t v203 = 1795;
      *(void *)(v0 + 888) = v203 + 2;
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v241;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v239;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v240;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v192;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v246;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v314;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v276;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v269;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v263;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v308;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v301;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v293;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v286;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v280;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v274;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v272;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v266;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v260;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v248;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v247;
      sub_1008F9FB4(v253, v252, v250, v251);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v200;
      sub_1008F9FB4(v253, v252, v250, v251);
      uint64_t v205 = *(void *)(v0 + 1736);
      uint64_t v206 = *(void *)(v0 + 1728);
      uint64_t v207 = *(void *)(v0 + 1720);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, log, v242, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      swift_errorRelease();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v206 + 8);
      v37(v205, v207);
    }
    else
    {
      uint64_t v208 = *(void *)(v0 + 1736);
      uint64_t v209 = *(void *)(v0 + 1728);
      uint64_t v210 = *(void *)(v0 + 1720);
      swift_errorRelease();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v209 + 8);
      v37(v208, v210);
    }
  }
  else
  {
    uint64_t v43 = v22;
    unint64_t v44 = v23;
    unint64_t v303 = *(void *)(v0 + 1912);
    uint64_t v295 = *(void *)(v0 + 1904);
    uint64_t v45 = *(void *)(v0 + 1368);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = type metadata accessor for EncryptedData();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
    sub_1000361E0(v43, v44);
    sub_101268234(1, v43, v44, v45, (void *)(v0 + 232));
    sub_10000588C(&qword_101657A00);
    uint64_t v47 = swift_allocObject();
    uint64_t v48 = sub_1004B7678(v47, 1);
    *(_OWORD *)uint64_t v49 = *(_OWORD *)(v0 + 232);
    long long v51 = *(_OWORD *)(v0 + 264);
    long long v50 = *(_OWORD *)(v0 + 280);
    long long v52 = *(_OWORD *)(v0 + 248);
    *(void *)(v49 + 64) = *(void *)(v0 + 296);
    *(_OWORD *)(v49 + 32) = v51;
    *(_OWORD *)(v49 + 48) = v50;
    *(_OWORD *)(v49 + 16) = v52;
    uint64_t v53 = SharingCircleWildAdvertisementKey.init(key:)(v48);
    sub_100037A38(v295, v303);
    sub_100CBE5B0((void *)(v0 + 232), (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
    uint64_t v54 = sub_100CBCA7C(v53, v295, v303);
    uint64_t v258 = (void *)(v0 + 232);
    uint64_t v261 = v43;
    unint64_t v264 = v44;
    uint64_t v282 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v55 = *(void *)(v0 + 1760);
    uint64_t v270 = *(void *)(v0 + 1720);
    uint64_t v273 = *(void *)(v0 + 1840);
    uint64_t v56 = *(void *)(v0 + 1712);
    uint64_t v57 = *(void *)(v0 + 1640);
    uint64_t v58 = *(void *)(v0 + 1624);
    uint64_t v59 = *(void *)(v0 + 1352);
    uint64_t v60 = *(unsigned char **)(v0 + 1304);
    uint64_t v296 = *(void *)(v0 + 1272);
    unint64_t v61 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    uint64_t v267 = *(void *)(v0 + 1136);
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    swift_bridgeObjectRelease();
    sub_100CBD0EC(v57, v58, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_101263C08(13, v58, (uint64_t)v54, v60);
    sub_100CBD0EC((uint64_t)v60, v59, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100C272D0(v59);
    v282(v55, v273, v270);
    sub_100CBD0EC(v267, v56, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v62 = swift_allocObject();
    sub_100CBD1B4(v56, v62 + v61, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v63 = swift_allocObject();
    *(void *)(v63 + 16) = sub_100CBE0E4;
    *(void *)(v63 + 24) = v62;
    sub_100CBD0EC((uint64_t)v60, v59, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v64 = (*(unsigned __int8 *)(v296 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v296 + 80);
    uint64_t v65 = swift_allocObject();
    sub_100CBD1B4(v59, v65 + v64, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_100CBE648;
    *(void *)(v66 + 24) = v65;
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v310 = static os_log_type_t.default.getter();
    uint64_t v68 = swift_allocObject();
    *(unsigned char *)(v68 + 16) = 34;
    uint64_t v69 = swift_allocObject();
    *(unsigned char *)(v69 + 16) = 8;
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = sub_100CC28B8;
    *(void *)(v70 + 24) = v63;
    uint64_t v71 = swift_allocObject();
    *(void *)(v71 + 16) = sub_1000654EC;
    *(void *)(v71 + 24) = v70;
    uint64_t v72 = swift_allocObject();
    *(unsigned char *)(v72 + 16) = 34;
    uint64_t v73 = swift_allocObject();
    *(unsigned char *)(v73 + 16) = 8;
    uint64_t v74 = v67;
    uint64_t v75 = v72;
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_100CC28BC;
    *(void *)(v76 + 24) = v66;
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = sub_1000654EC;
    *(void *)(v77 + 24) = v76;
    uint64_t v78 = swift_allocObject();
    sub_1004B810C(v78, 6);
    *uint64_t v79 = sub_100065514;
    v79[1] = v68;
    v79[2] = sub_100065514;
    v79[3] = v69;
    v79[4] = sub_100065500;
    v79[5] = v71;
    v79[6] = sub_100065514;
    v79[7] = v75;
    v79[8] = sub_100065514;
    v79[9] = v73;
    v79[10] = sub_100065500;
    v79[11] = v77;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v304 = v74;
    if (os_log_type_enabled(v74, v310))
    {
      uint64_t v80 = (uint8_t *)sub_1008F9FAC();
      uint64_t v81 = swift_slowAlloc();
      *(void *)(v0 + 840) = 0;
      *(void *)(v0 + 848) = v81;
      *(_WORD *)uint64_t v80 = 514;
      *(void *)(v0 + 832) = v80 + 2;
      *(void *)(v0 + 816) = sub_100065514;
      *(void *)(v0 + 824) = v68;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      swift_release();
      *(void *)(v0 + 816) = sub_100065514;
      *(void *)(v0 + 824) = v69;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      swift_release();
      *(void *)(v0 + 816) = sub_100065500;
      *(void *)(v0 + 824) = v71;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      swift_release();
      *(void *)(v0 + 816) = sub_100065514;
      *(void *)(v0 + 824) = v75;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      swift_release();
      *(void *)(v0 + 816) = sub_100065514;
      *(void *)(v0 + 824) = v73;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      swift_release();
      *(void *)(v0 + 816) = sub_100065500;
      *(void *)(v0 + 824) = v77;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 816), v0 + 832, v0 + 840, v0 + 848);
      uint64_t v82 = *(void *)(v0 + 1760);
      uint64_t v83 = *(void *)(v0 + 1728);
      uint64_t v84 = v80;
      uint64_t v85 = *(void *)(v0 + 1720);
      uint64_t v86 = *(void *)(v0 + 1560);
      uint64_t v87 = *(void *)(v0 + 1520);
      uint64_t v88 = *(void *)(v0 + 1512);
      uint64_t v288 = *(void *)(v0 + 1304);
      uint64_t v297 = *(void *)(v0 + 1552);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v74, v310, "Keys to upload: %{public}s,\nadded: %{public}s.", v84, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      sub_100CBE5B0(v258, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
      sub_10001CFB8(v261, v264);
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v83 + 8);
      v37(v82, v85);
      sub_100CBD154(v288, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v89 = *(void (**)(uint64_t, uint64_t))(v87 + 8);
      v89(v297, v88);
      v89(v86, v88);
    }
    else
    {
      uint64_t v90 = *(void *)(v0 + 1728);
      uint64_t v311 = *(NSObject **)(v0 + 1560);
      uint64_t v289 = *(void *)(v0 + 1760);
      uint64_t v298 = *(void *)(v0 + 1552);
      uint64_t v91 = *(void *)(v0 + 1520);
      uint64_t v92 = *(void *)(v0 + 1512);
      uint64_t v278 = *(void *)(v0 + 1720);
      uint64_t v283 = *(void *)(v0 + 1304);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      sub_100CBE5B0(v258, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
      sub_10001CFB8(v261, v264);
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v90 + 8);
      v37(v289, v278);
      sub_100CBD154(v283, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v91 + 8);
      v93(v298, v92);
      v93((uint64_t)v311, v92);
    }
  }
  uint64_t v38 = 0;
  uint64_t v36 = v37;
LABEL_58:
  uint64_t v95 = *(void *)(v0 + 1960);
  if (v95 == *(void *)(v0 + 1928))
  {
LABEL_59:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v249);
    swift_bridgeObjectRelease();
    uint64_t v316 = *(void *)(v0 + 856);
    uint64_t v211 = *(void *)(v0 + 1680);
    uint64_t v212 = *(void *)(v0 + 1640);
    uint64_t v213 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v213, &qword_101654A38);
    sub_100CBD154(v212, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v211, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v214 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v214(v316);
  }
  while (1)
  {
    *(void *)(v0 + 1952) = v36;
    *(void *)(v0 + 1944) = v37;
    *(void *)(v0 + 1936) = v38;
    uint64_t v96 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v95 + 32);
    *(unsigned char *)(v0 + 2233) = v96;
    *(void *)(v0 + 1960) = v95 + 1;
    if (__OFADD__(v95, 1))
    {
      __break(1u);
      JUMPOUT(0x100C808F0);
    }
    switch(v96)
    {
      case 1:
        uint64_t v164 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v164);
        uint64_t v165 = type metadata accessor for BookmarkMetaData();
        int v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v165 - 8) + 48))(v164, 1, v165);
        uint64_t v167 = *(void *)(v0 + 1424);
        if (v166 == 1)
        {
          sub_10001DAB4(v167, &qword_10164B638);
          uint64_t v168 = 0;
        }
        else
        {
          uint64_t v168 = *(void *)(v167 + 8);
          sub_100CBD154(v167, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v168;
        uint64_t v235 = *(int *)(v0 + 2228);
        uint64_t v236 = *(void *)(v0 + 1136);
        char v237 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v237;
        *char v237 = v0;
        v237[1] = sub_100C62684;
        uint64_t v238 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v238, v236 + v235);
      case 4:
        uint64_t v169 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v169;
        *uint64_t v169 = v0;
        v169[1] = sub_100C691B0;
        uint64_t v170 = *(void *)(v0 + 1680);
        uint64_t v171 = *(void *)(v0 + 1256);
        uint64_t v172 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v171, v172, v170, (uint64_t)v249);
      case 5:
        uint64_t v141 = *(void *)(v0 + 1592);
        uint64_t v142 = *(void *)(v0 + 1584);
        uint64_t v143 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v143, &qword_101654A38);
        uint64_t v144 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
        *(void *)(v0 + 2056) = v144;
        *(void *)(v0 + 2064) = (v141 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v142) = v144(v143, 1, v142);
        sub_10001DAB4(v143, &qword_101654A38);
        if (v142 == 1)
        {
          uint64_t v215 = (void *)swift_task_alloc();
          *(void *)(v0 + 2072) = v215;
          void *v215 = v0;
          uint64_t v216 = sub_100C6C37C;
LABEL_65:
          v215[1] = v216;
          uint64_t v217 = *(void *)(v0 + 1672);
          uint64_t v218 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v217, v218);
        }
        uint64_t v145 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
        uint64_t v146 = *(void *)(v0 + 1584);
        uint64_t v147 = *(void *)(v0 + 1488);
        sub_10001D074(*(void *)(v0 + 1504), v147, &qword_101654A38);
        if (v145(v147, 1, v146) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v219 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v219;
          *uint64_t v219 = v0;
          v219[1] = sub_100C6EC08;
          uint64_t v220 = *(void *)(v0 + 1912);
          uint64_t v221 = *(void *)(v0 + 1904);
          uint64_t v222 = *(void *)(v0 + 1680);
          uint64_t v223 = *(void *)(v0 + 1616);
          uint64_t v224 = *(void *)(v0 + 1248);
          uint64_t v225 = *(void *)(v0 + 1136);
          char v226 = 0;
LABEL_69:
          return sub_100C9CC58(v224, v225, v222, v223, v226, v221, v220);
        }
        uint64_t v94 = *(void *)(v0 + 1488);
        break;
      case 6:
        uint64_t v148 = *(void *)(v0 + 1592);
        uint64_t v149 = *(void *)(v0 + 1584);
        uint64_t v150 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v150, &qword_101654A38);
        uint64_t v151 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v148 + 48);
        *(void *)(v0 + 2104) = v151;
        *(void *)(v0 + 2112) = (v148 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v149) = v151(v150, 1, v149);
        sub_10001DAB4(v150, &qword_101654A38);
        if (v149 == 1)
        {
          uint64_t v215 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v215;
          void *v215 = v0;
          uint64_t v216 = sub_100C71E1C;
          goto LABEL_65;
        }
        uint64_t v152 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v153 = *(void *)(v0 + 1584);
        uint64_t v154 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v154, &qword_101654A38);
        if (v152(v154, 1, v153) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v227 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v227;
          *uint64_t v227 = v0;
          v227[1] = sub_100C746A8;
          uint64_t v220 = *(void *)(v0 + 1912);
          uint64_t v221 = *(void *)(v0 + 1904);
          uint64_t v222 = *(void *)(v0 + 1680);
          uint64_t v223 = *(void *)(v0 + 1608);
          uint64_t v224 = *(void *)(v0 + 1240);
          uint64_t v225 = *(void *)(v0 + 1136);
          char v226 = 1;
          goto LABEL_69;
        }
        uint64_t v94 = *(void *)(v0 + 1472);
        break;
      case 8:
      case 10:
        sub_1000F7878(v96, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        unint64_t v97 = *(void *)(v0 + 792);
        if (v97 >> 60 == 15) {
          goto LABEL_21;
        }
        uint64_t v98 = *(void *)(v0 + 784);
        unint64_t v99 = *(void *)(v0 + 1912);
        uint64_t v100 = *(void *)(v0 + 1904);
        uint64_t v101 = *(void *)(v0 + 1368);
        uint64_t v102 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v101, 1, 1, v102);
        sub_100037A38(v98, v97);
        uint64_t v262 = v98;
        sub_101268234(1, v98, v97, v101, v315);
        sub_10000588C(&qword_101657A00);
        uint64_t v103 = swift_allocObject();
        uint64_t v104 = sub_1004B7678(v103, 1);
        *(_OWORD *)uint64_t v105 = *(_OWORD *)v315;
        long long v107 = *(_OWORD *)(v0 + 336);
        long long v106 = *(_OWORD *)(v0 + 352);
        long long v108 = *(_OWORD *)(v0 + 320);
        *(void *)(v105 + 64) = *(void *)(v0 + 368);
        *(_OWORD *)(v105 + 32) = v107;
        *(_OWORD *)(v105 + 48) = v106;
        *(_OWORD *)(v105 + 16) = v108;
        uint64_t v109 = SharingCircleWildAdvertisementKey.init(key:)(v104);
        sub_100037A38(v100, v99);
        sub_100CBE5B0(v315, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v110 = sub_100CBCA7C(v109, v100, v99);
        unint64_t v111 = *(void *)(v0 + 1912);
        uint64_t v112 = *(void *)(v0 + 1904);
        if (v38)
        {
          uint64_t v30 = v38;
          sub_100037A24(v112, v111);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v315, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v262, v97);
          goto LABEL_54;
        }
        unint64_t v259 = v97;
        uint64_t v279 = *(void *)(v0 + 1840);
        uint64_t v284 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
        uint64_t v268 = *(void *)(v0 + 1768);
        uint64_t v271 = *(void *)(v0 + 1720);
        uint64_t v113 = *(void *)(v0 + 1712);
        uint64_t v114 = *(void *)(v0 + 1640);
        uint64_t v115 = *(void *)(v0 + 1624);
        uint64_t v116 = *(void *)(v0 + 1352);
        uint64_t v117 = *(unsigned char **)(v0 + 1312);
        uint64_t v305 = *(NSObject **)(v0 + 1272);
        unint64_t v118 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
        uint64_t v265 = *(void *)(v0 + 1136);
        sub_100037A24(v112, v111);
        swift_bridgeObjectRelease();
        sub_100CBD0EC(v114, v115, type metadata accessor for KeyDropInterface.KeyAlignment);
        sub_101263C08(v96, v115, (uint64_t)v110, v117);
        sub_100CBD0EC((uint64_t)v117, v116, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100C272D0(v116);
        v284(v268, v279, v271);
        sub_100CBD0EC(v265, v113, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v119 = swift_allocObject();
        sub_100CBD1B4(v113, v119 + v118, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v120 = swift_allocObject();
        *(void *)(v120 + 16) = sub_100CBE0E4;
        *(void *)(v120 + 24) = v119;
        sub_100CBD0EC((uint64_t)v117, v116, type metadata accessor for KeyDropInterface.KeyPackage);
        unint64_t v121 = (LOBYTE(v305[10].isa) + 16) & ~(unint64_t)LOBYTE(v305[10].isa);
        uint64_t v122 = swift_allocObject();
        sub_100CBD1B4(v116, v122 + v121, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v123 = swift_allocObject();
        *(void *)(v123 + 16) = sub_100CBE648;
        *(void *)(v123 + 24) = v122;
        uint64_t v312 = Logger.logObject.getter();
        os_log_type_t v306 = static os_log_type_t.default.getter();
        uint64_t v124 = swift_allocObject();
        *(unsigned char *)(v124 + 16) = 34;
        uint64_t v125 = swift_allocObject();
        *(unsigned char *)(v125 + 16) = 8;
        uint64_t v126 = swift_allocObject();
        *(void *)(v126 + 16) = sub_100CC28B8;
        *(void *)(v126 + 24) = v120;
        uint64_t v127 = swift_allocObject();
        *(void *)(v127 + 16) = sub_1000654EC;
        *(void *)(v127 + 24) = v126;
        uint64_t v128 = swift_allocObject();
        *(unsigned char *)(v128 + 16) = 34;
        uint64_t v129 = swift_allocObject();
        *(unsigned char *)(v129 + 16) = 8;
        uint64_t v130 = swift_allocObject();
        *(void *)(v130 + 16) = sub_100CC28BC;
        *(void *)(v130 + 24) = v123;
        uint64_t v131 = swift_allocObject();
        *(void *)(v131 + 16) = sub_1000654EC;
        *(void *)(v131 + 24) = v130;
        uint64_t v132 = swift_allocObject();
        sub_1004B810C(v132, 6);
        *uint64_t v133 = sub_100065514;
        v133[1] = v124;
        v133[2] = sub_100065514;
        v133[3] = v125;
        v133[4] = sub_100065500;
        v133[5] = v127;
        v133[6] = sub_100065514;
        v133[7] = v128;
        v133[8] = sub_100065514;
        v133[9] = v129;
        v133[10] = sub_100065500;
        v133[11] = v131;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v312, v306))
        {
          uint64_t v290 = v129;
          uint64_t v134 = (uint8_t *)sub_1008F9FAC();
          uint64_t v135 = swift_slowAlloc();
          *(void *)(v0 + 880) = 0;
          uint64_t v285 = v134;
          *(void *)(v0 + 1128) = v135;
          *(_WORD *)uint64_t v134 = 514;
          *(void *)(v0 + 872) = v134 + 2;
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v124;
          sub_1008F9FB4(v257, v256, v255, v254);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v125;
          sub_1008F9FB4(v257, v256, v255, v254);
          swift_release();
          *(void *)(v0 + 768) = sub_100065500;
          *(void *)(v0 + 776) = v127;
          sub_1008F9FB4(v257, v256, v255, v254);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v128;
          sub_1008F9FB4(v257, v256, v255, v254);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v290;
          sub_1008F9FB4(v257, v256, v255, v254);
          swift_release();
          *(void *)(v0 + 768) = sub_100065500;
          *(void *)(v0 + 776) = v131;
          sub_1008F9FB4(v257, v256, v255, v254);
          uint64_t v136 = *(void *)(v0 + 1768);
          uint64_t v137 = *(void *)(v0 + 1728);
          uint64_t v138 = *(void *)(v0 + 1720);
          uint64_t v139 = *(void *)(v0 + 1312);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v312, v306, "Keys to upload: %{public}s,\nadded: %{public}s.", v285, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1008F9FA0();

          sub_100CBE5B0(v315, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v262, v259);
          uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
          v37(v136, v138);
          uint64_t v140 = v139;
        }
        else
        {
          uint64_t v299 = *(void *)(v0 + 1768);
          uint64_t v162 = *(void *)(v0 + 1728);
          uint64_t v163 = *(void *)(v0 + 1720);
          uint64_t v307 = *(void *)(v0 + 1312);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          sub_100CBE5B0(v315, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v262, v259);
          uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v162 + 8);
          v37(v299, v163);
          uint64_t v140 = v307;
        }
        sub_100CBD154(v140, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v38 = 0;
        uint64_t v36 = v37;
        goto LABEL_21;
      case 9:
        uint64_t v155 = *(void *)(v0 + 1592);
        uint64_t v156 = *(void *)(v0 + 1584);
        uint64_t v157 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v157, &qword_101654A38);
        uint64_t v158 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v155 + 48);
        *(void *)(v0 + 2152) = v158;
        *(void *)(v0 + 2160) = (v155 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v156) = v158(v157, 1, v156);
        sub_10001DAB4(v157, &qword_101654A38);
        if (v156 == 1)
        {
          uint64_t v215 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v215;
          void *v215 = v0;
          uint64_t v216 = sub_100C778BC;
          goto LABEL_65;
        }
        uint64_t v159 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v160 = *(void *)(v0 + 1584);
        uint64_t v161 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v161, &qword_101654A38);
        if (v159(v161, 1, v160) == 1)
        {
          uint64_t v94 = *(void *)(v0 + 1456);
          break;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v228 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v228;
        *uint64_t v228 = v0;
        v228[1] = sub_100C7A148;
        uint64_t v229 = *(void *)(v0 + 1912);
        uint64_t v230 = *(void *)(v0 + 1904);
        uint64_t v231 = *(void *)(v0 + 1680);
        uint64_t v232 = *(void *)(v0 + 1600);
        uint64_t v233 = *(void *)(v0 + 1232);
        uint64_t v234 = *(void *)(v0 + 1136);
        return sub_100C9E300(v233, v234, v231, v232, v230, v229);
      case 12:
        uint64_t v174 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v174;
        void *v174 = v0;
        v174[1] = sub_100C80934;
        uint64_t v175 = *(void *)(v0 + 1680);
        uint64_t v176 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v176, v175);
      case 13:
        uint64_t v177 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v177;
        *uint64_t v177 = v0;
        v177[1] = sub_100C7D35C;
        uint64_t v178 = *(void *)(v0 + 1680);
        uint64_t v179 = *(void *)(v0 + 1224);
        return sub_100CA020C(v179, v178);
      case 16:
        uint64_t v180 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v180;
        *uint64_t v180 = v0;
        v180[1] = sub_100C83EB4;
        uint64_t v181 = *(void *)(v0 + 1680);
        uint64_t v182 = *(void *)(v0 + 1536);
        uint64_t v183 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v182, v183, v181);
      default:
        goto LABEL_21;
    }
    sub_10001DAB4(v94, &qword_101654A38);
    uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_21:
    uint64_t v95 = *(void *)(v0 + 1960);
    if (v95 == *(void *)(v0 + 1928)) {
      goto LABEL_59;
    }
  }
}

uint64_t sub_100C80934()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1144);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C80A44, v1, 0);
}

uint64_t sub_100C80A44()
{
  uint64_t v1 = v0 + 304;
  uint64_t v235 = (uint64_t *)(v0 + 448);
  uint64_t v239 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v2 = (uint64_t *)(v0 + 784);
  uint64_t v242 = v0 + 872;
  uint64_t v243 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v241 = v0 + 880;
  uint64_t v237 = v0 + 1056;
  uint64_t v238 = v0 + 888;
  uint64_t v236 = v0 + 1096;
  uint64_t v240 = v0 + 1128;
  uint64_t v3 = *(void *)(v0 + 1168);
  uint64_t v297 = (void *)(v0 + 304);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 1184) + 48))(v3, 1, *(void *)(v0 + 1176)) == 1)
  {
    sub_10001DAB4(v3, &qword_10165C138);
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(v0 + 1688);
  uint64_t v5 = *(void *)(v0 + 1408);
  uint64_t v6 = *(void *)(v0 + 1136);
  sub_100CBD1B4(v3, *(void *)(v0 + 1192), (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
  sub_1000F7750(12, *(void *)(v6 + *(int *)(v4 + 44)), v5);
  uint64_t v7 = type metadata accessor for BookmarkMetaData();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7) == 1)
  {
    uint64_t v8 = (uint64_t *)(v0 + 1408);
    uint64_t v9 = &qword_10164B638;
LABEL_7:
    sub_10001DAB4(*v8, v9);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1520) + 56))(*(void *)(v0 + 1208), 1, 1, *(void *)(v0 + 1512));
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v0 + 1592);
  uint64_t v11 = *(void *)(v0 + 1584);
  uint64_t v12 = *(void *)(v0 + 1440);
  uint64_t v13 = *(void *)(v0 + 1408);
  uint64_t v14 = v13 + *(int *)(v7 + 20);
  uint64_t v9 = &qword_101654A38;
  sub_10001D074(v14, v12, &qword_101654A38);
  sub_100CBD154(v13, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v12, 1, v11) == 1)
  {
    uint64_t v8 = (uint64_t *)(v0 + 1440);
    goto LABEL_7;
  }
  uint64_t v32 = *(void *)(v0 + 1520);
  uint64_t v33 = *(void *)(v0 + 1512);
  uint64_t v34 = *(void *)(v0 + 1440);
  uint64_t v35 = *(void *)(v0 + 1208);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v35, v34 + *(int *)(*(void *)(v0 + 1584) + 24), v33);
  sub_100CBD154(v34, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v33);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v35, 1, v33) != 1)
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 1520) + 32))(*(void *)(v0 + 1544), *(void *)(v0 + 1208), *(void *)(v0 + 1512));
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v15 = *(void *)(v0 + 1208);
  static Date.distantPast.getter();
  sub_10001DAB4(v15, (uint64_t *)&unk_10163AC90);
LABEL_9:
  uint64_t v16 = *(void *)(v0 + 1576);
  uint64_t v17 = *(void *)(v0 + 1520);
  uint64_t v18 = *(void *)(v0 + 1512);
  sub_100C27558(v16);
  BOOL v19 = sub_100A9F008();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v20(v16, v18);
  uint64_t v21 = *(void *)(v0 + 1192);
  if (v19)
  {
    uint64_t v22 = *(void *)(v0 + 1936);
    type metadata accessor for PropertyListEncoder();
    swift_allocObject();
    PropertyListEncoder.init()();
    sub_100CBFAFC(&qword_10165C160, (void (*)(uint64_t))type metadata accessor for KeyDropBeaconGroupAttributes);
    uint64_t v23 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
    if (v22)
    {
      uint64_t v25 = v22;
      uint64_t v26 = *(void *)(v0 + 1544);
      uint64_t v27 = *(void *)(v0 + 1512);
      uint64_t v28 = *(void *)(v0 + 1192);
      swift_release();
      v20(v26, v27);
      sub_100CBD154(v28, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
LABEL_54:
      uint64_t v295 = v2;
      char v277 = *(unsigned char *)(v0 + 2233);
      uint64_t v168 = *(void *)(v0 + 1712);
      uint64_t v169 = *(void *)(v0 + 1136);
      unint64_t v170 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
      (*(void (**)(void))(v0 + 1848))();
      sub_100CBD0EC(v169, v168, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v171 = swift_allocObject();
      sub_100CBD1B4(v168, v171 + v170, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v283 = swift_allocObject();
      *(void *)(v283 + 16) = sub_100CBE0E4;
      *(void *)(v283 + 24) = v171;
      uint64_t v293 = swift_allocObject();
      *(unsigned char *)(v293 + 16) = v277;
      sub_100CBD0EC(v169, v168, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v172 = swift_allocObject();
      sub_100CBD1B4(v168, v172 + v170, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v259 = swift_allocObject();
      *(void *)(v259 + 16) = sub_100CBE2E4;
      *(void *)(v259 + 24) = v172;
      sub_100CBD0EC(v169, v168, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v173 = swift_allocObject();
      sub_100CBD1B4(v168, v173 + v170, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v174 = swift_allocObject();
      *(void *)(v174 + 16) = sub_100CBE300;
      *(void *)(v174 + 24) = v173;
      uint64_t v175 = swift_allocObject();
      *(void *)(v175 + 16) = v25;
      swift_errorRetain();
      uint64_t v227 = Logger.logObject.getter();
      os_log_type_t v226 = static os_log_type_t.error.getter();
      uint64_t v228 = swift_allocObject();
      *(unsigned char *)(v228 + 16) = 34;
      uint64_t v176 = swift_allocObject();
      *(unsigned char *)(v176 + 16) = 8;
      uint64_t v177 = v176;
      uint64_t v178 = swift_allocObject();
      *(void *)(v178 + 16) = sub_100CC28B8;
      *(void *)(v178 + 24) = v283;
      uint64_t v278 = swift_allocObject();
      *(void *)(v278 + 16) = sub_1000654EC;
      *(void *)(v278 + 24) = v178;
      uint64_t v263 = swift_allocObject();
      *(unsigned char *)(v263 + 16) = 34;
      uint64_t v258 = swift_allocObject();
      *(unsigned char *)(v258 + 16) = 8;
      uint64_t v179 = swift_allocObject();
      *(void *)(v179 + 16) = sub_100CBE3EC;
      *(void *)(v179 + 24) = v293;
      uint64_t v252 = swift_allocObject();
      *(void *)(v252 + 16) = sub_1000654EC;
      *(void *)(v252 + 24) = v179;
      uint64_t v294 = swift_allocObject();
      *(unsigned char *)(v294 + 16) = 112;
      uint64_t v289 = swift_allocObject();
      *(unsigned char *)(v289 + 16) = 8;
      uint64_t v180 = swift_allocObject();
      *(void *)(v180 + 16) = 1752392040;
      uint64_t v284 = swift_allocObject();
      *(void *)(v284 + 16) = sub_10006550C;
      *(void *)(v284 + 24) = v180;
      uint64_t v273 = swift_allocObject();
      *(unsigned char *)(v273 + 16) = 33;
      uint64_t v266 = swift_allocObject();
      *(unsigned char *)(v266 + 16) = 8;
      uint64_t v181 = swift_allocObject();
      *(void *)(v181 + 16) = sub_1000654F4;
      *(void *)(v181 + 24) = v259;
      uint64_t v260 = swift_allocObject();
      *(void *)(v260 + 16) = sub_1000654EC;
      *(void *)(v260 + 24) = v181;
      uint64_t v256 = swift_allocObject();
      *(unsigned char *)(v256 + 16) = 112;
      uint64_t v249 = swift_allocObject();
      *(unsigned char *)(v249 + 16) = 8;
      uint64_t v182 = swift_allocObject();
      *(void *)(v182 + 16) = 1752392040;
      uint64_t v246 = swift_allocObject();
      *(void *)(v246 + 16) = sub_10006550C;
      *(void *)(v246 + 24) = v182;
      uint64_t v234 = swift_allocObject();
      *(unsigned char *)(v234 + 16) = 33;
      uint64_t v231 = swift_allocObject();
      *(unsigned char *)(v231 + 16) = 8;
      uint64_t v183 = swift_allocObject();
      *(void *)(v183 + 16) = sub_1000654F4;
      *(void *)(v183 + 24) = v174;
      uint64_t v229 = swift_allocObject();
      *(void *)(v229 + 16) = sub_1000654EC;
      *(void *)(v229 + 24) = v183;
      uint64_t v184 = swift_allocObject();
      *(unsigned char *)(v184 + 16) = 34;
      uint64_t v185 = swift_allocObject();
      *(unsigned char *)(v185 + 16) = 8;
      uint64_t v186 = swift_allocObject();
      *(void *)(v186 + 16) = sub_100CBE4A8;
      *(void *)(v186 + 24) = v175;
      uint64_t v187 = swift_allocObject();
      *(void *)(v187 + 16) = sub_1000654EC;
      *(void *)(v187 + 24) = v186;
      uint64_t v188 = swift_allocObject();
      sub_1004B810C(v188, 21);
      *uint64_t v189 = sub_100065514;
      v189[1] = v228;
      v189[2] = sub_100065514;
      v189[3] = v177;
      v189[4] = sub_100065500;
      v189[5] = v278;
      v189[6] = sub_100065514;
      v189[7] = v263;
      v189[8] = sub_100065514;
      v189[9] = v258;
      v189[10] = sub_100065500;
      v189[11] = v252;
      v189[12] = sub_100065514;
      v189[13] = v294;
      v189[14] = sub_100065514;
      v189[15] = v289;
      v189[16] = sub_100065504;
      v189[17] = v284;
      v189[18] = sub_100065514;
      v189[19] = v273;
      v189[20] = sub_100065514;
      v189[21] = v266;
      v189[22] = sub_100065500;
      v189[23] = v260;
      v189[24] = sub_100065514;
      v189[25] = v256;
      v189[26] = sub_100065514;
      v189[27] = v249;
      v189[28] = sub_100065504;
      v189[29] = v246;
      v189[30] = sub_100065514;
      v189[31] = v234;
      v189[32] = sub_100065514;
      v189[33] = v231;
      v189[34] = sub_100065500;
      v189[35] = v229;
      v189[36] = sub_100065514;
      v189[37] = v184;
      v189[38] = sub_100065514;
      v189[39] = v185;
      v189[40] = sub_100065500;
      v189[41] = v187;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v227, v226))
      {
        uint64_t v190 = (uint8_t *)sub_1008F9FAC();
        uint64_t v191 = swift_slowAlloc();
        *(void *)(v0 + 1096) = 0;
        *(void *)(v0 + 1056) = v191;
        *(_WORD *)uint64_t v190 = 1795;
        *(void *)(v0 + 888) = v190 + 2;
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v228;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v177;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065500;
        *(void *)(v0 + 680) = v278;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v263;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v258;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065500;
        *(void *)(v0 + 680) = v252;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v294;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v289;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065504;
        *(void *)(v0 + 680) = v284;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v273;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v266;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065500;
        *(void *)(v0 + 680) = v260;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v256;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v249;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065504;
        *(void *)(v0 + 680) = v246;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v234;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v231;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065500;
        *(void *)(v0 + 680) = v229;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v184;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065514;
        *(void *)(v0 + 680) = v185;
        sub_1008F9FB4(v239, v238, v236, v237);
        swift_release();
        *(void *)(v0 + 672) = sub_100065500;
        *(void *)(v0 + 680) = v187;
        sub_1008F9FB4(v239, v238, v236, v237);
        uint64_t v192 = *(void *)(v0 + 1736);
        uint64_t v193 = *(void *)(v0 + 1728);
        uint64_t v194 = *(void *)(v0 + 1720);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v227, v226, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v190, 0x48u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        swift_errorRelease();
        uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v193 + 8);
        v30(v192, v194);
      }
      else
      {
        uint64_t v195 = *(void *)(v0 + 1736);
        uint64_t v196 = *(void *)(v0 + 1728);
        uint64_t v197 = *(void *)(v0 + 1720);
        swift_errorRelease();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v196 + 8);
        v30(v195, v197);
      }
    }
    else
    {
      unint64_t v36 = v24;
      uint64_t v285 = v20;
      unint64_t v290 = *(void *)(v0 + 1912);
      uint64_t v37 = *(void *)(v0 + 1904);
      uint64_t v38 = *(void *)(v0 + 1368);
      uint64_t v39 = v23;
      swift_release();
      uint64_t v40 = type metadata accessor for EncryptedData();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 1, 1, v40);
      sub_1000361E0(v39, v36);
      sub_101268234(1, v39, v36, v38, (void *)(v0 + 160));
      sub_10000588C(&qword_101657A00);
      uint64_t v41 = swift_allocObject();
      uint64_t v42 = sub_1004B7678(v41, 1);
      *(_OWORD *)uint64_t v43 = *(_OWORD *)(v0 + 160);
      long long v45 = *(_OWORD *)(v0 + 192);
      long long v44 = *(_OWORD *)(v0 + 208);
      long long v46 = *(_OWORD *)(v0 + 176);
      *(void *)(v43 + 64) = *(void *)(v0 + 224);
      *(_OWORD *)(v43 + 32) = v45;
      *(_OWORD *)(v43 + 48) = v44;
      *(_OWORD *)(v43 + 16) = v46;
      uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
      sub_100037A38(v37, v290);
      sub_100CBE5B0((void *)(v0 + 160), (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
      uint64_t v48 = sub_100CBCA7C(v47, v37, v290);
      uint64_t v230 = (void *)(v0 + 160);
      uint64_t v232 = v39;
      unint64_t v233 = v36;
      uint64_t v295 = (uint64_t *)(v0 + 784);
      uint64_t v261 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
      uint64_t v247 = *(void *)(v0 + 1752);
      uint64_t v250 = *(void *)(v0 + 1720);
      uint64_t v253 = *(void *)(v0 + 1840);
      uint64_t v267 = *(void *)(v0 + 1712);
      uint64_t v49 = *(void *)(v0 + 1640);
      uint64_t v50 = *(void *)(v0 + 1624);
      uint64_t v51 = *(void *)(v0 + 1352);
      long long v52 = *(unsigned char **)(v0 + 1296);
      uint64_t v279 = *(void *)(v0 + 1272);
      unint64_t v53 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
      uint64_t v244 = *(void *)(v0 + 1136);
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      swift_bridgeObjectRelease();
      sub_100CBD0EC(v49, v50, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_101263C08(12, v50, (uint64_t)v48, v52);
      sub_100CBD0EC((uint64_t)v52, v51, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100C272D0(v51);
      v261(v247, v253, v250);
      sub_100CBD0EC(v244, v267, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v54 = swift_allocObject();
      sub_100CBD1B4(v267, v54 + v53, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v55 = swift_allocObject();
      *(void *)(v55 + 16) = sub_100CBE0E4;
      *(void *)(v55 + 24) = v54;
      sub_100CBD0EC((uint64_t)v52, v51, type metadata accessor for KeyDropInterface.KeyPackage);
      unint64_t v56 = (*(unsigned __int8 *)(v279 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80);
      uint64_t v57 = swift_allocObject();
      sub_100CBD1B4(v51, v57 + v56, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v58 = swift_allocObject();
      *(void *)(v58 + 16) = sub_100CBE648;
      *(void *)(v58 + 24) = v57;
      char v291 = Logger.logObject.getter();
      os_log_type_t v280 = static os_log_type_t.default.getter();
      uint64_t v59 = swift_allocObject();
      *(unsigned char *)(v59 + 16) = 34;
      uint64_t v60 = swift_allocObject();
      *(unsigned char *)(v60 + 16) = 8;
      uint64_t v61 = swift_allocObject();
      *(void *)(v61 + 16) = sub_100CC28B8;
      *(void *)(v61 + 24) = v55;
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = sub_1000654EC;
      *(void *)(v62 + 24) = v61;
      uint64_t v63 = swift_allocObject();
      *(unsigned char *)(v63 + 16) = 34;
      uint64_t v64 = swift_allocObject();
      *(unsigned char *)(v64 + 16) = 8;
      uint64_t v65 = swift_allocObject();
      *(void *)(v65 + 16) = sub_100CC28BC;
      *(void *)(v65 + 24) = v58;
      uint64_t v66 = swift_allocObject();
      *(void *)(v66 + 16) = sub_1000654EC;
      *(void *)(v66 + 24) = v65;
      uint64_t v67 = swift_allocObject();
      sub_1004B810C(v67, 6);
      *uint64_t v68 = sub_100065514;
      v68[1] = v59;
      v68[2] = sub_100065514;
      v68[3] = v60;
      v68[4] = sub_100065500;
      v68[5] = v62;
      v68[6] = sub_100065514;
      v68[7] = v63;
      v68[8] = sub_100065514;
      v68[9] = v64;
      v68[10] = sub_100065500;
      v68[11] = v66;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v291, v280))
      {
        uint64_t v268 = v62;
        uint64_t v69 = (uint8_t *)sub_1008F9FAC();
        uint64_t v70 = swift_slowAlloc();
        *(void *)(v0 + 896) = 0;
        uint64_t v254 = v69;
        *(void *)(v0 + 864) = v70;
        *(_WORD *)uint64_t v69 = 514;
        *(void *)(v0 + 928) = v69 + 2;
        *(void *)(v0 + 800) = sub_100065514;
        *(void *)(v0 + 808) = v59;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        swift_release();
        *(void *)(v0 + 800) = sub_100065514;
        *(void *)(v0 + 808) = v60;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        swift_release();
        *(void *)(v0 + 800) = sub_100065500;
        *(void *)(v0 + 808) = v268;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        swift_release();
        *(void *)(v0 + 800) = sub_100065514;
        *(void *)(v0 + 808) = v63;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        swift_release();
        *(void *)(v0 + 800) = sub_100065514;
        *(void *)(v0 + 808) = v64;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        swift_release();
        *(void *)(v0 + 800) = sub_100065500;
        *(void *)(v0 + 808) = v66;
        sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 800), v0 + 928, v0 + 896, v0 + 864);
        uint64_t v71 = *(void *)(v0 + 1752);
        uint64_t v72 = *(void *)(v0 + 1728);
        uint64_t v73 = *(void *)(v0 + 1720);
        uint64_t v74 = *(void *)(v0 + 1512);
        uint64_t v75 = *(void *)(v0 + 1296);
        uint64_t v269 = *(void *)(v0 + 1544);
        uint64_t v274 = *(void *)(v0 + 1192);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v291, v280, "Keys to upload: %{public}s,\nadded: %{public}s.", v254, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        sub_100CBE5B0(v230, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
        sub_10001CFB8(v232, v233);
        uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v30(v71, v73);
        sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
        v285(v269, v74);
        sub_100CBD154(v274, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
      }
      else
      {
        uint64_t v76 = *(void *)(v0 + 1728);
        uint64_t v77 = *(void *)(v0 + 1720);
        uint64_t v270 = *(void *)(v0 + 1512);
        uint64_t v275 = *(void *)(v0 + 1544);
        uint64_t v262 = *(void *)(v0 + 1752);
        uint64_t v264 = *(void *)(v0 + 1296);
        uint64_t v281 = *(void *)(v0 + 1192);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_100CBE5B0(v230, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
        sub_10001CFB8(v232, v233);
        uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
        v30(v262, v77);
        sub_100CBD154(v264, type metadata accessor for KeyDropInterface.KeyPackage);
        v285(v275, v270);
        sub_100CBD154(v281, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
      }
    }
    uint64_t v31 = 0;
    uint64_t v29 = v30;
    uint64_t v2 = v295;
    uint64_t v1 = v0 + 304;
    goto LABEL_58;
  }
  v20(*(void *)(v0 + 1544), *(void *)(v0 + 1512));
  sub_100CBD154(v21, (uint64_t (*)(void))type metadata accessor for KeyDropBeaconGroupAttributes);
LABEL_13:
  uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
  uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
  uint64_t v31 = *(void *)(v0 + 1936);
LABEL_58:
  uint64_t v79 = *(void *)(v0 + 1960);
  if (v79 == *(void *)(v0 + 1928))
  {
LABEL_60:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v235);
    swift_bridgeObjectRelease();
    uint64_t v298 = *(void *)(v0 + 856);
    uint64_t v198 = *(void *)(v0 + 1680);
    uint64_t v199 = *(void *)(v0 + 1640);
    uint64_t v200 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v200, &qword_101654A38);
    sub_100CBD154(v199, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v198, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v201 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v201(v298);
  }
  uint64_t v296 = v2;
  while (1)
  {
    *(void *)(v0 + 1952) = v29;
    *(void *)(v0 + 1944) = v30;
    *(void *)(v0 + 1936) = v31;
    uint64_t v80 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v79 + 32);
    *(unsigned char *)(v0 + 2233) = v80;
    *(void *)(v0 + 1960) = v79 + 1;
    if (__OFADD__(v79, 1))
    {
      __break(1u);
      JUMPOUT(0x100C83E70);
    }
    switch(v80)
    {
      case 1:
        uint64_t v148 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v148);
        uint64_t v149 = type metadata accessor for BookmarkMetaData();
        int v150 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v149 - 8) + 48))(v148, 1, v149);
        uint64_t v151 = *(void *)(v0 + 1424);
        if (v150 == 1)
        {
          sub_10001DAB4(v151, &qword_10164B638);
          uint64_t v152 = 0;
        }
        else
        {
          uint64_t v152 = *(void *)(v151 + 8);
          sub_100CBD154(v151, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v152;
        uint64_t v222 = *(int *)(v0 + 2228);
        uint64_t v223 = *(void *)(v0 + 1136);
        uint64_t v224 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v224;
        void *v224 = v0;
        v224[1] = sub_100C62684;
        uint64_t v225 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v225, v223 + v222);
      case 4:
        uint64_t v153 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v153;
        *uint64_t v153 = v0;
        v153[1] = sub_100C691B0;
        uint64_t v154 = *(void *)(v0 + 1680);
        uint64_t v155 = *(void *)(v0 + 1256);
        uint64_t v156 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v155, v156, v154, (uint64_t)v235);
      case 5:
        uint64_t v125 = *(void *)(v0 + 1592);
        uint64_t v126 = *(void *)(v0 + 1584);
        uint64_t v127 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v127, &qword_101654A38);
        uint64_t v128 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v125 + 48);
        *(void *)(v0 + 2056) = v128;
        *(void *)(v0 + 2064) = (v125 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v126) = v128(v127, 1, v126);
        sub_10001DAB4(v127, &qword_101654A38);
        if (v126 == 1)
        {
          uint64_t v202 = (void *)swift_task_alloc();
          *(void *)(v0 + 2072) = v202;
          void *v202 = v0;
          uint64_t v203 = sub_100C6C37C;
LABEL_66:
          v202[1] = v203;
          uint64_t v204 = *(void *)(v0 + 1672);
          uint64_t v205 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v204, v205);
        }
        uint64_t v129 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
        uint64_t v130 = *(void *)(v0 + 1584);
        uint64_t v131 = *(void *)(v0 + 1488);
        sub_10001D074(*(void *)(v0 + 1504), v131, &qword_101654A38);
        if (v129(v131, 1, v130) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v206 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v206;
          *uint64_t v206 = v0;
          v206[1] = sub_100C6EC08;
          uint64_t v207 = *(void *)(v0 + 1912);
          uint64_t v208 = *(void *)(v0 + 1904);
          uint64_t v209 = *(void *)(v0 + 1680);
          uint64_t v210 = *(void *)(v0 + 1616);
          uint64_t v211 = *(void *)(v0 + 1248);
          uint64_t v212 = *(void *)(v0 + 1136);
          char v213 = 0;
LABEL_70:
          return sub_100C9CC58(v211, v212, v209, v210, v213, v208, v207);
        }
        uint64_t v78 = *(void *)(v0 + 1488);
        break;
      case 6:
        uint64_t v132 = *(void *)(v0 + 1592);
        uint64_t v133 = *(void *)(v0 + 1584);
        uint64_t v134 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v134, &qword_101654A38);
        uint64_t v135 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v132 + 48);
        *(void *)(v0 + 2104) = v135;
        *(void *)(v0 + 2112) = (v132 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v133) = v135(v134, 1, v133);
        sub_10001DAB4(v134, &qword_101654A38);
        if (v133 == 1)
        {
          uint64_t v202 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v202;
          void *v202 = v0;
          uint64_t v203 = sub_100C71E1C;
          goto LABEL_66;
        }
        uint64_t v136 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v137 = *(void *)(v0 + 1584);
        uint64_t v138 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v138, &qword_101654A38);
        if (v136(v138, 1, v137) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v214 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v214;
          void *v214 = v0;
          v214[1] = sub_100C746A8;
          uint64_t v207 = *(void *)(v0 + 1912);
          uint64_t v208 = *(void *)(v0 + 1904);
          uint64_t v209 = *(void *)(v0 + 1680);
          uint64_t v210 = *(void *)(v0 + 1608);
          uint64_t v211 = *(void *)(v0 + 1240);
          uint64_t v212 = *(void *)(v0 + 1136);
          char v213 = 1;
          goto LABEL_70;
        }
        uint64_t v78 = *(void *)(v0 + 1472);
        break;
      case 8:
      case 10:
        sub_1000F7878(v80, *(void *)(v0 + 504), v2);
        unint64_t v81 = *(void *)(v0 + 792);
        if (v81 >> 60 == 15) {
          goto LABEL_21;
        }
        uint64_t v82 = *(void *)(v0 + 784);
        unint64_t v83 = *(void *)(v0 + 1912);
        uint64_t v84 = *(void *)(v0 + 1904);
        uint64_t v85 = *(void *)(v0 + 1368);
        uint64_t v86 = type metadata accessor for EncryptedData();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v85, 1, 1, v86);
        sub_100037A38(v82, v81);
        unint64_t v248 = v81;
        sub_101268234(1, v82, v81, v85, (void *)v1);
        sub_10000588C(&qword_101657A00);
        uint64_t v87 = swift_allocObject();
        uint64_t v88 = sub_1004B7678(v87, 1);
        *(_OWORD *)uint64_t v89 = *(_OWORD *)v1;
        long long v91 = *(_OWORD *)(v1 + 32);
        long long v90 = *(_OWORD *)(v1 + 48);
        long long v92 = *(_OWORD *)(v1 + 16);
        *(void *)(v89 + 64) = *(void *)(v1 + 64);
        *(_OWORD *)(v89 + 32) = v91;
        *(_OWORD *)(v89 + 48) = v90;
        *(_OWORD *)(v89 + 16) = v92;
        uint64_t v93 = SharingCircleWildAdvertisementKey.init(key:)(v88);
        sub_100037A38(v84, v83);
        sub_100CBE5B0((void *)v1, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
        uint64_t v94 = sub_100CBCA7C(v93, v84, v83);
        unint64_t v95 = *(void *)(v0 + 1912);
        uint64_t v96 = *(void *)(v0 + 1904);
        if (v31)
        {
          uint64_t v25 = v31;
          sub_100037A24(v96, v95);
          swift_bridgeObjectRelease();
          sub_100CBE5B0(v297, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v82, v248);
          goto LABEL_54;
        }
        uint64_t v245 = v82;
        uint64_t v265 = *(void *)(v0 + 1840);
        uint64_t v271 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
        uint64_t v255 = *(void *)(v0 + 1768);
        uint64_t v257 = *(void *)(v0 + 1720);
        uint64_t v97 = *(void *)(v0 + 1712);
        uint64_t v98 = *(void *)(v0 + 1640);
        uint64_t v99 = *(void *)(v0 + 1624);
        uint64_t v100 = *(void *)(v0 + 1352);
        uint64_t v101 = *(unsigned char **)(v0 + 1312);
        uint64_t v286 = *(void *)(v0 + 1272);
        unint64_t v102 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
        uint64_t v251 = *(void *)(v0 + 1136);
        sub_100037A24(v96, v95);
        swift_bridgeObjectRelease();
        sub_100CBD0EC(v98, v99, type metadata accessor for KeyDropInterface.KeyAlignment);
        sub_101263C08(v80, v99, (uint64_t)v94, v101);
        sub_100CBD0EC((uint64_t)v101, v100, type metadata accessor for KeyDropInterface.KeyPackage);
        sub_100C272D0(v100);
        v271(v255, v265, v257);
        sub_100CBD0EC(v251, v97, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v103 = swift_allocObject();
        sub_100CBD1B4(v97, v103 + v102, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v104 = swift_allocObject();
        *(void *)(v104 + 16) = sub_100CBE0E4;
        *(void *)(v104 + 24) = v103;
        sub_100CBD0EC((uint64_t)v101, v100, type metadata accessor for KeyDropInterface.KeyPackage);
        unint64_t v105 = (*(unsigned __int8 *)(v286 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v286 + 80);
        uint64_t v106 = swift_allocObject();
        sub_100CBD1B4(v100, v106 + v105, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v107 = swift_allocObject();
        *(void *)(v107 + 16) = sub_100CBE648;
        *(void *)(v107 + 24) = v106;
        uint64_t v292 = Logger.logObject.getter();
        os_log_type_t v287 = static os_log_type_t.default.getter();
        uint64_t v108 = swift_allocObject();
        *(unsigned char *)(v108 + 16) = 34;
        uint64_t v109 = swift_allocObject();
        *(unsigned char *)(v109 + 16) = 8;
        uint64_t v110 = swift_allocObject();
        *(void *)(v110 + 16) = sub_100CC28B8;
        *(void *)(v110 + 24) = v104;
        uint64_t v111 = swift_allocObject();
        *(void *)(v111 + 16) = sub_1000654EC;
        *(void *)(v111 + 24) = v110;
        uint64_t v112 = swift_allocObject();
        *(unsigned char *)(v112 + 16) = 34;
        uint64_t v113 = swift_allocObject();
        *(unsigned char *)(v113 + 16) = 8;
        uint64_t v114 = swift_allocObject();
        *(void *)(v114 + 16) = sub_100CC28BC;
        *(void *)(v114 + 24) = v107;
        uint64_t v115 = swift_allocObject();
        *(void *)(v115 + 16) = sub_1000654EC;
        *(void *)(v115 + 24) = v114;
        uint64_t v116 = swift_allocObject();
        sub_1004B810C(v116, 6);
        *uint64_t v117 = sub_100065514;
        v117[1] = v108;
        v117[2] = sub_100065514;
        v117[3] = v109;
        v117[4] = sub_100065500;
        v117[5] = v111;
        v117[6] = sub_100065514;
        v117[7] = v112;
        v117[8] = sub_100065514;
        v117[9] = v113;
        v117[10] = sub_100065500;
        v117[11] = v115;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v292, v287))
        {
          uint64_t v276 = v113;
          unint64_t v118 = (uint8_t *)sub_1008F9FAC();
          uint64_t v119 = swift_slowAlloc();
          *(void *)(v0 + 880) = 0;
          uint64_t v272 = v118;
          *(void *)(v0 + 1128) = v119;
          *(_WORD *)unint64_t v118 = 514;
          *(void *)(v0 + 872) = v118 + 2;
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v108;
          sub_1008F9FB4(v243, v242, v241, v240);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v109;
          sub_1008F9FB4(v243, v242, v241, v240);
          swift_release();
          *(void *)(v0 + 768) = sub_100065500;
          *(void *)(v0 + 776) = v111;
          sub_1008F9FB4(v243, v242, v241, v240);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v112;
          sub_1008F9FB4(v243, v242, v241, v240);
          swift_release();
          *(void *)(v0 + 768) = sub_100065514;
          *(void *)(v0 + 776) = v276;
          sub_1008F9FB4(v243, v242, v241, v240);
          swift_release();
          *(void *)(v0 + 768) = sub_100065500;
          *(void *)(v0 + 776) = v115;
          sub_1008F9FB4(v243, v242, v241, v240);
          uint64_t v120 = *(void *)(v0 + 1768);
          uint64_t v121 = *(void *)(v0 + 1728);
          uint64_t v122 = *(void *)(v0 + 1720);
          uint64_t v123 = *(void *)(v0 + 1312);
          swift_release();
          _os_log_impl((void *)&_mh_execute_header, v292, v287, "Keys to upload: %{public}s,\nadded: %{public}s.", v272, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          sub_1008F9FA0();

          uint64_t v1 = v0 + 304;
          sub_100CBE5B0(v297, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v245, v248);
          uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
          v30(v120, v122);
          uint64_t v124 = v123;
        }
        else
        {
          uint64_t v282 = *(void *)(v0 + 1768);
          uint64_t v146 = *(void *)(v0 + 1728);
          uint64_t v147 = *(void *)(v0 + 1720);
          uint64_t v288 = *(void *)(v0 + 1312);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          uint64_t v1 = v0 + 304;
          sub_100CBE5B0(v297, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
          sub_100037A24(v245, v248);
          uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v146 + 8);
          v30(v282, v147);
          uint64_t v124 = v288;
        }
        sub_100CBD154(v124, type metadata accessor for KeyDropInterface.KeyPackage);
        uint64_t v31 = 0;
        uint64_t v29 = v30;
        uint64_t v2 = v296;
        goto LABEL_21;
      case 9:
        uint64_t v139 = *(void *)(v0 + 1592);
        uint64_t v140 = *(void *)(v0 + 1584);
        uint64_t v141 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v141, &qword_101654A38);
        uint64_t v142 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
        *(void *)(v0 + 2152) = v142;
        *(void *)(v0 + 2160) = (v139 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v140) = v142(v141, 1, v140);
        sub_10001DAB4(v141, &qword_101654A38);
        if (v140 == 1)
        {
          uint64_t v202 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v202;
          void *v202 = v0;
          uint64_t v203 = sub_100C778BC;
          goto LABEL_66;
        }
        uint64_t v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v144 = *(void *)(v0 + 1584);
        uint64_t v145 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v145, &qword_101654A38);
        if (v143(v145, 1, v144) == 1)
        {
          uint64_t v78 = *(void *)(v0 + 1456);
          break;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v215 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v215;
        void *v215 = v0;
        v215[1] = sub_100C7A148;
        uint64_t v216 = *(void *)(v0 + 1912);
        uint64_t v217 = *(void *)(v0 + 1904);
        uint64_t v218 = *(void *)(v0 + 1680);
        uint64_t v219 = *(void *)(v0 + 1600);
        uint64_t v220 = *(void *)(v0 + 1232);
        uint64_t v221 = *(void *)(v0 + 1136);
        return sub_100C9E300(v220, v221, v218, v219, v217, v216);
      case 12:
        uint64_t v158 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v158;
        *uint64_t v158 = v0;
        v158[1] = sub_100C80934;
        uint64_t v159 = *(void *)(v0 + 1680);
        uint64_t v160 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v160, v159);
      case 13:
        uint64_t v161 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v161;
        *uint64_t v161 = v0;
        v161[1] = sub_100C7D35C;
        uint64_t v162 = *(void *)(v0 + 1680);
        uint64_t v163 = *(void *)(v0 + 1224);
        return sub_100CA020C(v163, v162);
      case 16:
        uint64_t v164 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v164;
        *uint64_t v164 = v0;
        v164[1] = sub_100C83EB4;
        uint64_t v165 = *(void *)(v0 + 1680);
        uint64_t v166 = *(void *)(v0 + 1536);
        uint64_t v167 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v166, v167, v165);
      default:
        goto LABEL_21;
    }
    sub_10001DAB4(v78, &qword_101654A38);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_21:
    uint64_t v79 = *(void *)(v0 + 1960);
    if (v79 == *(void *)(v0 + 1928)) {
      goto LABEL_60;
    }
  }
}

uint64_t sub_100C83EB4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 1144);
  swift_task_dealloc();
  return _swift_task_switch(sub_100C83FC4, v1, 0);
}

uint64_t sub_100C83FC4()
{
  uint64_t v239 = (uint64_t *)(v0 + 448);
  uint64_t v1 = (uint64_t *)(v0 + 784);
  uint64_t v245 = v0 + 872;
  uint64_t v246 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v244 = v0 + 880;
  uint64_t v241 = v0 + 1056;
  uint64_t v242 = v0 + 888;
  uint64_t v240 = v0 + 1096;
  uint64_t v243 = v0 + 1128;
  uint64_t v2 = *(void *)(v0 + 1400);
  sub_1000F7750(16, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v2);
  uint64_t v3 = type metadata accessor for BookmarkMetaData();
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  uint64_t v235 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  uint64_t v236 = v3;
  if (v235(v4, 1, v3) == 1)
  {
    uint64_t v6 = (uint64_t *)(v0 + 1400);
    uint64_t v7 = &qword_10164B638;
LABEL_5:
    sub_10001DAB4(*v6, v7);
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 1520) + 56))(*(void *)(v0 + 1200), 1, 1, *(void *)(v0 + 1512));
LABEL_6:
    uint64_t v13 = *(void *)(v0 + 1200);
    static Date.distantPast.getter();
    sub_10001DAB4(v13, (uint64_t *)&unk_10163AC90);
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(v0 + 1592);
  uint64_t v9 = *(void *)(v0 + 1584);
  uint64_t v10 = *(void *)(v0 + 1432);
  uint64_t v11 = *(void *)(v0 + 1400);
  uint64_t v12 = v11 + *(int *)(v5 + 20);
  uint64_t v7 = &qword_101654A38;
  sub_10001D074(v12, v10, &qword_101654A38);
  sub_100CBD154(v11, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v9) == 1)
  {
    uint64_t v6 = (uint64_t *)(v0 + 1432);
    goto LABEL_5;
  }
  uint64_t v144 = *(void *)(v0 + 1520);
  uint64_t v145 = *(void *)(v0 + 1512);
  uint64_t v146 = *(void *)(v0 + 1432);
  uint64_t v147 = *(void *)(v0 + 1200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v144 + 16))(v147, v146 + *(int *)(*(void *)(v0 + 1584) + 24), v145);
  sub_100CBD154(v146, type metadata accessor for KeyDropInterface.KeyAlignment);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v144 + 56))(v147, 0, 1, v145);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v147, 1, v145) == 1) {
    goto LABEL_6;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 1520) + 32))(*(void *)(v0 + 1528), *(void *)(v0 + 1200), *(void *)(v0 + 1512));
LABEL_7:
  uint64_t v282 = (void *)(v0 + 304);
  char v14 = *(unsigned char *)(v0 + 2232);
  uint64_t v237 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  if (!sub_100A9F008() && (v14 & 1) == 0 && !*(void *)(*(void *)(v0 + 856) + 16))
  {
    uint64_t v148 = *(void *)(v0 + 1536);
    uint64_t v149 = *(void *)(v0 + 1512);
    uint64_t v150 = *(void *)(v0 + 1160);
    uint64_t v151 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 1520) + 8);
    v151(*(void *)(v0 + 1528), v149);
    sub_100CBD154(v150, type metadata accessor for KeyDropLostItemDates);
    v151(v148, v149);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
    uint64_t v67 = *(void *)(v0 + 1936);
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)(v0 + 1936);
  type metadata accessor for PropertyListEncoder();
  swift_allocObject();
  PropertyListEncoder.init()();
  sub_100CBFAFC(&qword_10165C158, (void (*)(uint64_t))type metadata accessor for KeyDropLostItemDates);
  uint64_t v16 = dispatch thunk of PropertyListEncoder.encode<A>(_:)();
  if (v15)
  {
    uint64_t v18 = v15;
    uint64_t v19 = *(void *)(v0 + 1536);
    uint64_t v20 = *(void *)(v0 + 1528);
    uint64_t v21 = *(void *)(v0 + 1520);
    uint64_t v22 = *(void *)(v0 + 1512);
    uint64_t v23 = *(void *)(v0 + 1160);
    swift_release();
    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
    v24(v20, v22);
    sub_100CBD154(v23, type metadata accessor for KeyDropLostItemDates);
    v24(v19, v22);
LABEL_13:
    char v269 = *(unsigned char *)(v0 + 2233);
    uint64_t v39 = *(void *)(v0 + 1712);
    uint64_t v40 = *(void *)(v0 + 1136);
    unint64_t v41 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    (*(void (**)(void))(v0 + 1848))();
    sub_100CBD0EC(v40, v39, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v42 = swift_allocObject();
    sub_100CBD1B4(v39, v42 + v41, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v274 = swift_allocObject();
    *(void *)(v274 + 16) = sub_100CBE0E4;
    *(void *)(v274 + 24) = v42;
    uint64_t v281 = swift_allocObject();
    *(unsigned char *)(v281 + 16) = v269;
    sub_100CBD0EC(v40, v39, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v43 = swift_allocObject();
    sub_100CBD1B4(v39, v43 + v41, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v259 = swift_allocObject();
    *(void *)(v259 + 16) = sub_100CBE2E4;
    *(void *)(v259 + 24) = v43;
    sub_100CBD0EC(v40, v39, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v44 = swift_allocObject();
    sub_100CBD1B4(v39, v44 + v41, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_100CBE300;
    *(void *)(v45 + 24) = v44;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v18;
    swift_errorRetain();
    uint64_t v231 = Logger.logObject.getter();
    os_log_type_t v230 = static os_log_type_t.error.getter();
    uint64_t v229 = swift_allocObject();
    *(unsigned char *)(v229 + 16) = 34;
    uint64_t v228 = swift_allocObject();
    *(unsigned char *)(v228 + 16) = 8;
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = sub_100CC28B8;
    *(void *)(v47 + 24) = v274;
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_1000654EC;
    *(void *)(v48 + 24) = v47;
    uint64_t v263 = swift_allocObject();
    *(unsigned char *)(v263 + 16) = 34;
    uint64_t v257 = swift_allocObject();
    *(unsigned char *)(v257 + 16) = 8;
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_100CBE3EC;
    *(void *)(v49 + 24) = v281;
    uint64_t v253 = swift_allocObject();
    *(void *)(v253 + 16) = sub_1000654EC;
    *(void *)(v253 + 24) = v49;
    uint64_t v249 = swift_allocObject();
    *(unsigned char *)(v249 + 16) = 112;
    uint64_t v280 = swift_allocObject();
    *(unsigned char *)(v280 + 16) = 8;
    uint64_t v50 = swift_allocObject();
    *(void *)(v50 + 16) = 1752392040;
    uint64_t v279 = swift_allocObject();
    *(void *)(v279 + 16) = sub_10006550C;
    *(void *)(v279 + 24) = v50;
    uint64_t v275 = swift_allocObject();
    *(unsigned char *)(v275 + 16) = 33;
    uint64_t v270 = swift_allocObject();
    *(unsigned char *)(v270 + 16) = 8;
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_1000654F4;
    *(void *)(v51 + 24) = v259;
    uint64_t v260 = swift_allocObject();
    *(void *)(v260 + 16) = sub_1000654EC;
    *(void *)(v260 + 24) = v51;
    uint64_t v254 = swift_allocObject();
    *(unsigned char *)(v254 + 16) = 112;
    uint64_t v250 = swift_allocObject();
    *(unsigned char *)(v250 + 16) = 8;
    uint64_t v52 = swift_allocObject();
    *(void *)(v52 + 16) = 1752392040;
    uint64_t v248 = swift_allocObject();
    *(void *)(v248 + 16) = sub_10006550C;
    *(void *)(v248 + 24) = v52;
    unint64_t v247 = swift_allocObject();
    *(unsigned char *)(v247 + 16) = 33;
    uint64_t v238 = swift_allocObject();
    *(unsigned char *)(v238 + 16) = 8;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = sub_1000654F4;
    *(void *)(v53 + 24) = v45;
    uint64_t v234 = swift_allocObject();
    *(void *)(v234 + 16) = sub_1000654EC;
    *(void *)(v234 + 24) = v53;
    uint64_t v233 = swift_allocObject();
    *(unsigned char *)(v233 + 16) = 34;
    uint64_t v232 = swift_allocObject();
    *(unsigned char *)(v232 + 16) = 8;
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = sub_100CBE4A8;
    *(void *)(v54 + 24) = v46;
    uint64_t v55 = swift_allocObject();
    *(void *)(v55 + 16) = sub_1000654EC;
    *(void *)(v55 + 24) = v54;
    uint64_t v56 = swift_allocObject();
    sub_1004B810C(v56, 21);
    *uint64_t v57 = sub_100065514;
    v57[1] = v229;
    v57[2] = sub_100065514;
    v57[3] = v228;
    v57[4] = sub_100065500;
    v57[5] = v48;
    v57[6] = sub_100065514;
    v57[7] = v263;
    v57[8] = sub_100065514;
    v57[9] = v257;
    v57[10] = sub_100065500;
    v57[11] = v253;
    v57[12] = sub_100065514;
    v57[13] = v249;
    v57[14] = sub_100065514;
    v57[15] = v280;
    v57[16] = sub_100065504;
    v57[17] = v279;
    v57[18] = sub_100065514;
    v57[19] = v275;
    v57[20] = sub_100065514;
    v57[21] = v270;
    v57[22] = sub_100065500;
    v57[23] = v260;
    v57[24] = sub_100065514;
    v57[25] = v254;
    v57[26] = sub_100065514;
    v57[27] = v250;
    v57[28] = sub_100065504;
    v57[29] = v248;
    v57[30] = sub_100065514;
    v57[31] = v247;
    v57[32] = sub_100065514;
    v57[33] = v238;
    v57[34] = sub_100065500;
    v57[35] = v234;
    v57[36] = sub_100065514;
    v57[37] = v233;
    v57[38] = sub_100065514;
    v57[39] = v232;
    v57[40] = sub_100065500;
    v57[41] = v55;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled(v231, v230))
    {
      uint64_t v58 = (uint8_t *)sub_1008F9FAC();
      uint64_t v59 = swift_slowAlloc();
      *(void *)(v0 + 1096) = 0;
      *(void *)(v0 + 1056) = v59;
      *(_WORD *)uint64_t v58 = 1795;
      *(void *)(v0 + 888) = v58 + 2;
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v229;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v228;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v48;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v263;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v257;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v253;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v249;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v280;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v279;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v275;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v270;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v260;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v254;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v250;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065504;
      *(void *)(v0 + 680) = v248;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v247;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v238;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v234;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v233;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065514;
      *(void *)(v0 + 680) = v232;
      sub_1008F9FB4(v237, v242, v240, v241);
      swift_release();
      *(void *)(v0 + 672) = sub_100065500;
      *(void *)(v0 + 680) = v55;
      sub_1008F9FB4(v237, v242, v240, v241);
      uint64_t v60 = *(void *)(v0 + 1736);
      uint64_t v61 = *(void *)(v0 + 1728);
      uint64_t v62 = *(void *)(v0 + 1720);
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v231, v230, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", v58, 0x48u);
      swift_arrayDestroy();
      swift_slowDealloc();
      sub_1008F9FA0();

      swift_errorRelease();
      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
      v63(v60, v62);
    }
    else
    {
      uint64_t v64 = *(void *)(v0 + 1736);
      uint64_t v65 = *(void *)(v0 + 1728);
      uint64_t v66 = *(void *)(v0 + 1720);
      swift_errorRelease();

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v63(v64, v66);
    }
  }
  else
  {
    uint64_t v25 = v16;
    unint64_t v26 = v17;
    unint64_t v27 = *(void *)(v0 + 1912);
    uint64_t v28 = *(void *)(v0 + 1904);
    uint64_t v29 = *(void *)(v0 + 1368);
    swift_release();
    uint64_t v30 = type metadata accessor for EncryptedData();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
    sub_1000361E0(v25, v26);
    sub_101268234(1, v25, v26, v29, (void *)(v0 + 88));
    sub_10000588C(&qword_101657A00);
    uint64_t v31 = swift_allocObject();
    uint64_t v32 = sub_1004B7678(v31, 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)(v0 + 88);
    long long v35 = *(_OWORD *)(v0 + 120);
    long long v34 = *(_OWORD *)(v0 + 136);
    long long v36 = *(_OWORD *)(v0 + 104);
    *(void *)(v33 + 64) = *(void *)(v0 + 152);
    *(_OWORD *)(v33 + 32) = v35;
    *(_OWORD *)(v33 + 48) = v34;
    *(_OWORD *)(v33 + 16) = v36;
    uint64_t v37 = SharingCircleWildAdvertisementKey.init(key:)(v32);
    sub_100037A38(v28, v27);
    sub_100CBE5B0((void *)(v0 + 88), (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
    uint64_t v38 = sub_100CBCA7C(v37, v28, v27);
    unint64_t v247 = v0 + 88;
    uint64_t v248 = v25;
    uint64_t v249 = v26;
    uint64_t v266 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
    uint64_t v152 = *(void *)(v0 + 1744);
    uint64_t v253 = *(void *)(v0 + 1720);
    uint64_t v255 = *(void *)(v0 + 1840);
    uint64_t v153 = *(void *)(v0 + 1712);
    uint64_t v154 = *(void *)(v0 + 1640);
    uint64_t v155 = *(void *)(v0 + 1624);
    uint64_t v156 = *(void *)(v0 + 1352);
    uint64_t v157 = *(unsigned char **)(v0 + 1288);
    uint64_t v279 = *(void *)(v0 + 1272);
    unint64_t v158 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
    uint64_t v252 = *(void *)(v0 + 1136);
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    swift_bridgeObjectRelease();
    sub_100CBD0EC(v154, v155, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_101263C08(16, v155, (uint64_t)v38, v157);
    sub_100CBD0EC((uint64_t)v157, v156, type metadata accessor for KeyDropInterface.KeyPackage);
    sub_100C272D0(v156);
    v266(v152, v255, v253);
    sub_100CBD0EC(v252, v153, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v159 = swift_allocObject();
    sub_100CBD1B4(v153, v159 + v158, type metadata accessor for SharingCircleKeyManager.Instruction);
    uint64_t v160 = swift_allocObject();
    *(void *)(v160 + 16) = sub_100CBE0E4;
    *(void *)(v160 + 24) = v159;
    sub_100CBD0EC((uint64_t)v157, v156, type metadata accessor for KeyDropInterface.KeyPackage);
    unint64_t v161 = (*(unsigned __int8 *)(v279 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80);
    uint64_t v162 = swift_allocObject();
    sub_100CBD1B4(v156, v162 + v161, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v163 = swift_allocObject();
    *(void *)(v163 + 16) = sub_100CBE648;
    *(void *)(v163 + 24) = v162;
    uint64_t v280 = Logger.logObject.getter();
    LOBYTE(v279) = static os_log_type_t.default.getter();
    uint64_t v164 = swift_allocObject();
    *(unsigned char *)(v164 + 16) = 34;
    uint64_t v165 = swift_allocObject();
    *(unsigned char *)(v165 + 16) = 8;
    uint64_t v166 = swift_allocObject();
    *(void *)(v166 + 16) = sub_100CC28B8;
    *(void *)(v166 + 24) = v160;
    uint64_t v167 = swift_allocObject();
    *(void *)(v167 + 16) = sub_1000654EC;
    *(void *)(v167 + 24) = v166;
    uint64_t v168 = swift_allocObject();
    *(unsigned char *)(v168 + 16) = 34;
    uint64_t v169 = swift_allocObject();
    *(unsigned char *)(v169 + 16) = 8;
    uint64_t v170 = swift_allocObject();
    *(void *)(v170 + 16) = sub_100CBE674;
    *(void *)(v170 + 24) = v163;
    uint64_t v171 = swift_allocObject();
    *(void *)(v171 + 16) = sub_1000654EC;
    *(void *)(v171 + 24) = v170;
    uint64_t v172 = swift_allocObject();
    sub_1004B810C(v172, 6);
    *uint64_t v173 = sub_100065514;
    v173[1] = v164;
    v173[2] = sub_100065514;
    v173[3] = v165;
    v173[4] = sub_100065500;
    v173[5] = v167;
    v173[6] = sub_100065514;
    v173[7] = v168;
    v173[8] = sub_100065514;
    v173[9] = v169;
    v173[10] = sub_100065500;
    v173[11] = v171;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    if (os_log_type_enabled((os_log_t)v280, (os_log_type_t)v279))
    {
      uint64_t v174 = (_WORD *)sub_1008F9FAC();
      uint64_t v175 = swift_slowAlloc();
      *(void *)(v0 + 992) = 0;
      uint64_t v253 = (uint64_t)v174;
      *(void *)(v0 + 960) = v175;
      _WORD *v174 = 514;
      *(void *)(v0 + 1024) = v174 + 1;
      *(void *)(v0 + 736) = sub_100065514;
      *(void *)(v0 + 744) = v164;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      swift_release();
      *(void *)(v0 + 736) = sub_100065514;
      *(void *)(v0 + 744) = v165;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      swift_release();
      *(void *)(v0 + 736) = sub_100065500;
      *(void *)(v0 + 744) = v167;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      swift_release();
      *(void *)(v0 + 736) = sub_100065514;
      *(void *)(v0 + 744) = v168;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      swift_release();
      *(void *)(v0 + 736) = sub_100065514;
      *(void *)(v0 + 744) = v169;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      swift_release();
      *(void *)(v0 + 736) = sub_100065500;
      *(void *)(v0 + 744) = v171;
      sub_1008F9FB4((uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 736), v0 + 1024, v0 + 992, v0 + 960);
      goto LABEL_81;
    }
    uint64_t v176 = *(void *)(v0 + 1728);
    uint64_t v272 = *(void *)(v0 + 1528);
    uint64_t v177 = *(void *)(v0 + 1520);
    uint64_t v262 = *(void *)(v0 + 1744);
    uint64_t v267 = *(void *)(v0 + 1512);
    uint64_t v256 = *(void *)(v0 + 1720);
    uint64_t v258 = *(void *)(v0 + 1288);
    uint64_t v277 = *(void *)(v0 + 1160);
    uint64_t v279 = *(void *)(v0 + 1536);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    sub_100CBE5B0((void *)v247, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
    sub_10001CFB8(v248, v249);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v176 + 8);
    v63(v262, v256);
    sub_100CBD154(v258, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v178 = *(void (**)(uint64_t, uint64_t))(v177 + 8);
    v178(v272, v267);
    sub_100CBD154(v277, type metadata accessor for KeyDropLostItemDates);
    v178(v279, v267);
  }
  while (1)
  {
    uint64_t v67 = 0;
    uint64_t v68 = v63;
    uint64_t v1 = (uint64_t *)(v0 + 784);
LABEL_17:
    uint64_t v69 = *(void *)(v0 + 1960);
    if (v69 == *(void *)(v0 + 1928))
    {
LABEL_39:
      sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
      sub_1001300CC(v239);
      swift_bridgeObjectRelease();
      uint64_t v283 = *(void *)(v0 + 856);
      uint64_t v139 = *(void *)(v0 + 1680);
      uint64_t v140 = *(void *)(v0 + 1640);
      uint64_t v141 = *(void *)(v0 + 1504);
      sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_weakDestroy();
      sub_10001DAB4(v141, &qword_101654A38);
      sub_100CBD154(v140, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_100CBD154(v139, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v142 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v142(v283);
    }
LABEL_22:
    *(void *)(v0 + 1952) = v68;
    *(void *)(v0 + 1944) = v63;
    *(void *)(v0 + 1936) = v67;
    uint64_t v71 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v69 + 32);
    *(unsigned char *)(v0 + 2233) = v71;
    *(void *)(v0 + 1960) = v69 + 1;
    if (!__OFADD__(v69, 1)) {
      break;
    }
    __break(1u);
LABEL_81:
    uint64_t v221 = *(void *)(v0 + 1728);
    uint64_t v222 = *(void *)(v0 + 1720);
    uint64_t v223 = *(void *)(v0 + 1536);
    uint64_t v268 = *(void *)(v0 + 1744);
    uint64_t v273 = *(void *)(v0 + 1528);
    uint64_t v224 = *(void *)(v0 + 1520);
    uint64_t v225 = *(void *)(v0 + 1512);
    uint64_t v226 = *(void *)(v0 + 1288);
    uint64_t v278 = *(void *)(v0 + 1160);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v280, (os_log_type_t)v279, "Keys to upload: %{public}s,\nadded: %{public}s.", (uint8_t *)v253, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    sub_100CBE5B0((void *)v247, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
    sub_10001CFB8(v248, v249);
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v221 + 8);
    v63(v268, v222);
    sub_100CBD154(v226, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t v227 = *(void (**)(uint64_t, uint64_t))(v224 + 8);
    v227(v273, v225);
    sub_100CBD154(v278, type metadata accessor for KeyDropLostItemDates);
    v227(v223, v225);
  }
  switch(v71)
  {
    case 1:
      uint64_t v179 = *(void *)(v0 + 1424);
      sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v179);
      unsigned int v180 = v235(v179, 1, v236);
      uint64_t v181 = *(void *)(v0 + 1424);
      if (v180 == 1)
      {
        sub_10001DAB4(v181, &qword_10164B638);
        uint64_t v182 = 0;
      }
      else
      {
        uint64_t v182 = *(void *)(v181 + 8);
        sub_100CBD154(v181, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      }
      *(void *)(v0 + 1968) = v182;
      uint64_t v217 = *(int *)(v0 + 2228);
      uint64_t v218 = *(void *)(v0 + 1136);
      uint64_t v219 = (void *)swift_task_alloc();
      *(void *)(v0 + 1976) = v219;
      *uint64_t v219 = v0;
      v219[1] = sub_100C62684;
      uint64_t v220 = *(void *)(v0 + 1392);
      return sub_100CA6DC8(v220, v218 + v217);
    case 4:
      uint64_t v183 = (void *)swift_task_alloc();
      *(void *)(v0 + 2040) = v183;
      *uint64_t v183 = v0;
      v183[1] = sub_100C691B0;
      uint64_t v184 = *(void *)(v0 + 1680);
      uint64_t v185 = *(void *)(v0 + 1256);
      uint64_t v186 = *(void *)(v0 + 1136);
      return sub_100C9B9FC(v185, v186, v184, (uint64_t)v239);
    case 5:
      uint64_t v116 = *(void *)(v0 + 1592);
      uint64_t v117 = *(void *)(v0 + 1584);
      uint64_t v118 = *(void *)(v0 + 1496);
      sub_10001D074(*(void *)(v0 + 1504), v118, &qword_101654A38);
      uint64_t v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
      *(void *)(v0 + 2056) = v119;
      *(void *)(v0 + 2064) = (v116 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v117) = v119(v118, 1, v117);
      sub_10001DAB4(v118, &qword_101654A38);
      if (v117 == 1)
      {
        uint64_t v197 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v197;
        void *v197 = v0;
        uint64_t v198 = sub_100C6C37C;
        goto LABEL_66;
      }
      uint64_t v120 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
      uint64_t v121 = *(void *)(v0 + 1584);
      uint64_t v122 = *(void *)(v0 + 1488);
      sub_10001D074(*(void *)(v0 + 1504), v122, &qword_101654A38);
      if (v120(v122, 1, v121) == 1)
      {
        uint64_t v70 = *(void *)(v0 + 1488);
        goto LABEL_20;
      }
      sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v201 = (void *)swift_task_alloc();
      *(void *)(v0 + 2088) = v201;
      void *v201 = v0;
      v201[1] = sub_100C6EC08;
      uint64_t v202 = *(void *)(v0 + 1912);
      uint64_t v203 = *(void *)(v0 + 1904);
      uint64_t v204 = *(void *)(v0 + 1680);
      uint64_t v205 = *(void *)(v0 + 1616);
      uint64_t v206 = *(void *)(v0 + 1248);
      uint64_t v207 = *(void *)(v0 + 1136);
      char v208 = 0;
      goto LABEL_70;
    case 6:
      uint64_t v123 = *(void *)(v0 + 1592);
      uint64_t v124 = *(void *)(v0 + 1584);
      uint64_t v125 = *(void *)(v0 + 1480);
      sub_10001D074(*(void *)(v0 + 1504), v125, &qword_101654A38);
      uint64_t v126 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v123 + 48);
      *(void *)(v0 + 2104) = v126;
      *(void *)(v0 + 2112) = (v123 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v124) = v126(v125, 1, v124);
      sub_10001DAB4(v125, &qword_101654A38);
      if (v124 == 1)
      {
        uint64_t v197 = (void *)swift_task_alloc();
        *(void *)(v0 + 2120) = v197;
        void *v197 = v0;
        uint64_t v198 = sub_100C71E1C;
LABEL_66:
        v197[1] = v198;
        uint64_t v199 = *(void *)(v0 + 1672);
        uint64_t v200 = *(void *)(v0 + 1504);
        return sub_100C9B204(v0 + 1064, v199, v200);
      }
      uint64_t v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
      uint64_t v128 = *(void *)(v0 + 1584);
      uint64_t v129 = *(void *)(v0 + 1472);
      sub_10001D074(*(void *)(v0 + 1504), v129, &qword_101654A38);
      if (v127(v129, 1, v128) == 1)
      {
        uint64_t v70 = *(void *)(v0 + 1472);
LABEL_20:
        sub_10001DAB4(v70, &qword_101654A38);
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 1952);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v0 + 1944);
LABEL_21:
        uint64_t v69 = *(void *)(v0 + 1960);
        if (v69 == *(void *)(v0 + 1928)) {
          goto LABEL_39;
        }
        goto LABEL_22;
      }
      sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
      uint64_t v209 = (void *)swift_task_alloc();
      *(void *)(v0 + 2136) = v209;
      *uint64_t v209 = v0;
      v209[1] = sub_100C746A8;
      uint64_t v202 = *(void *)(v0 + 1912);
      uint64_t v203 = *(void *)(v0 + 1904);
      uint64_t v204 = *(void *)(v0 + 1680);
      uint64_t v205 = *(void *)(v0 + 1608);
      uint64_t v206 = *(void *)(v0 + 1240);
      uint64_t v207 = *(void *)(v0 + 1136);
      char v208 = 1;
LABEL_70:
      return sub_100C9CC58(v206, v207, v204, v205, v208, v203, v202);
    case 8:
    case 10:
      sub_1000F7878(v71, *(void *)(v0 + 504), v1);
      unint64_t v72 = *(void *)(v0 + 792);
      if (v72 >> 60 == 15) {
        goto LABEL_21;
      }
      uint64_t v73 = *(void *)(v0 + 784);
      unint64_t v74 = *(void *)(v0 + 1912);
      uint64_t v75 = *(void *)(v0 + 1904);
      uint64_t v76 = *(void *)(v0 + 1368);
      uint64_t v77 = type metadata accessor for EncryptedData();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(v76, 1, 1, v77);
      sub_100037A38(v73, v72);
      uint64_t v248 = v73;
      sub_101268234(1, v73, v72, v76, v282);
      sub_10000588C(&qword_101657A00);
      uint64_t v78 = swift_allocObject();
      uint64_t v79 = sub_1004B7678(v78, 1);
      *(_OWORD *)uint64_t v80 = *(_OWORD *)v282;
      long long v82 = *(_OWORD *)(v0 + 336);
      long long v81 = *(_OWORD *)(v0 + 352);
      long long v83 = *(_OWORD *)(v0 + 320);
      *(void *)(v80 + 64) = *(void *)(v0 + 368);
      *(_OWORD *)(v80 + 32) = v82;
      *(_OWORD *)(v80 + 48) = v81;
      *(_OWORD *)(v80 + 16) = v83;
      uint64_t v84 = SharingCircleWildAdvertisementKey.init(key:)(v79);
      sub_100037A38(v75, v74);
      sub_100CBE5B0(v282, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
      uint64_t v85 = sub_100CBCA7C(v84, v75, v74);
      unint64_t v86 = *(void *)(v0 + 1912);
      uint64_t v87 = *(void *)(v0 + 1904);
      if (v67)
      {
        uint64_t v18 = v67;
        sub_100037A24(v87, v86);
        swift_bridgeObjectRelease();
        sub_100CBE5B0(v282, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
        sub_100037A24(v248, v72);
        goto LABEL_13;
      }
      unint64_t v247 = v72;
      uint64_t v261 = *(void *)(v0 + 1840);
      uint64_t v264 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
      uint64_t v251 = *(void *)(v0 + 1768);
      uint64_t v253 = *(void *)(v0 + 1720);
      uint64_t v88 = *(void *)(v0 + 1712);
      uint64_t v89 = *(void *)(v0 + 1640);
      uint64_t v90 = *(void *)(v0 + 1624);
      uint64_t v91 = *(void *)(v0 + 1352);
      long long v92 = *(unsigned char **)(v0 + 1312);
      uint64_t v279 = *(void *)(v0 + 1272);
      unint64_t v93 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
      uint64_t v249 = *(void *)(v0 + 1136);
      sub_100037A24(v87, v86);
      swift_bridgeObjectRelease();
      sub_100CBD0EC(v89, v90, type metadata accessor for KeyDropInterface.KeyAlignment);
      sub_101263C08(v71, v90, (uint64_t)v85, v92);
      sub_100CBD0EC((uint64_t)v92, v91, type metadata accessor for KeyDropInterface.KeyPackage);
      sub_100C272D0(v91);
      v264(v251, v261, v253);
      sub_100CBD0EC(v249, v88, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v94 = swift_allocObject();
      sub_100CBD1B4(v88, v94 + v93, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v95 = swift_allocObject();
      *(void *)(v95 + 16) = sub_100CBE0E4;
      *(void *)(v95 + 24) = v94;
      sub_100CBD0EC((uint64_t)v92, v91, type metadata accessor for KeyDropInterface.KeyPackage);
      unint64_t v96 = (*(unsigned __int8 *)(v279 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v279 + 80);
      uint64_t v97 = swift_allocObject();
      sub_100CBD1B4(v91, v97 + v96, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v98 = swift_allocObject();
      *(void *)(v98 + 16) = sub_100CBE648;
      *(void *)(v98 + 24) = v97;
      uint64_t v280 = Logger.logObject.getter();
      LOBYTE(v279) = static os_log_type_t.default.getter();
      uint64_t v99 = swift_allocObject();
      *(unsigned char *)(v99 + 16) = 34;
      uint64_t v100 = swift_allocObject();
      *(unsigned char *)(v100 + 16) = 8;
      uint64_t v101 = swift_allocObject();
      *(void *)(v101 + 16) = sub_100CC28B8;
      *(void *)(v101 + 24) = v95;
      uint64_t v102 = swift_allocObject();
      *(void *)(v102 + 16) = sub_1000654EC;
      *(void *)(v102 + 24) = v101;
      uint64_t v103 = swift_allocObject();
      *(unsigned char *)(v103 + 16) = 34;
      uint64_t v104 = swift_allocObject();
      *(unsigned char *)(v104 + 16) = 8;
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = sub_100CC28BC;
      *(void *)(v105 + 24) = v98;
      uint64_t v106 = swift_allocObject();
      *(void *)(v106 + 16) = sub_1000654EC;
      *(void *)(v106 + 24) = v105;
      uint64_t v107 = swift_allocObject();
      sub_1004B810C(v107, 6);
      *uint64_t v108 = sub_100065514;
      v108[1] = v99;
      v108[2] = sub_100065514;
      v108[3] = v100;
      v108[4] = sub_100065500;
      v108[5] = v102;
      v108[6] = sub_100065514;
      v108[7] = v103;
      v108[8] = sub_100065514;
      v108[9] = v104;
      v108[10] = sub_100065500;
      v108[11] = v106;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled((os_log_t)v280, (os_log_type_t)v279))
      {
        uint64_t v271 = v104;
        uint64_t v109 = (uint8_t *)sub_1008F9FAC();
        uint64_t v110 = swift_slowAlloc();
        *(void *)(v0 + 880) = 0;
        uint64_t v265 = v109;
        *(void *)(v0 + 1128) = v110;
        *(_WORD *)uint64_t v109 = 514;
        *(void *)(v0 + 872) = v109 + 2;
        *(void *)(v0 + 768) = sub_100065514;
        *(void *)(v0 + 776) = v99;
        sub_1008F9FB4(v246, v245, v244, v243);
        swift_release();
        *(void *)(v0 + 768) = sub_100065514;
        *(void *)(v0 + 776) = v100;
        sub_1008F9FB4(v246, v245, v244, v243);
        swift_release();
        *(void *)(v0 + 768) = sub_100065500;
        *(void *)(v0 + 776) = v102;
        sub_1008F9FB4(v246, v245, v244, v243);
        swift_release();
        *(void *)(v0 + 768) = sub_100065514;
        *(void *)(v0 + 776) = v103;
        sub_1008F9FB4(v246, v245, v244, v243);
        swift_release();
        *(void *)(v0 + 768) = sub_100065514;
        *(void *)(v0 + 776) = v271;
        sub_1008F9FB4(v246, v245, v244, v243);
        swift_release();
        *(void *)(v0 + 768) = sub_100065500;
        *(void *)(v0 + 776) = v106;
        sub_1008F9FB4(v246, v245, v244, v243);
        uint64_t v111 = *(void *)(v0 + 1768);
        uint64_t v112 = *(void *)(v0 + 1728);
        uint64_t v113 = *(void *)(v0 + 1720);
        uint64_t v114 = *(void *)(v0 + 1312);
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)v280, (os_log_type_t)v279, "Keys to upload: %{public}s,\nadded: %{public}s.", v265, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        sub_1008F9FA0();

        sub_100CBE5B0(v282, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
        sub_100037A24(v248, v247);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
        v63(v111, v113);
        uint64_t v115 = v114;
      }
      else
      {
        uint64_t v137 = *(void *)(v0 + 1728);
        uint64_t v138 = *(void *)(v0 + 1720);
        uint64_t v276 = *(void *)(v0 + 1768);
        uint64_t v279 = *(void *)(v0 + 1312);
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();

        sub_100CBE5B0(v282, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
        sub_100037A24(v248, v247);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v137 + 8);
        v63(v276, v138);
        uint64_t v115 = v279;
      }
      sub_100CBD154(v115, type metadata accessor for KeyDropInterface.KeyPackage);
      uint64_t v67 = 0;
      uint64_t v68 = v63;
      uint64_t v1 = (uint64_t *)(v0 + 784);
      goto LABEL_21;
    case 9:
      uint64_t v130 = *(void *)(v0 + 1592);
      uint64_t v131 = *(void *)(v0 + 1584);
      uint64_t v132 = *(void *)(v0 + 1464);
      sub_10001D074(*(void *)(v0 + 1504), v132, &qword_101654A38);
      uint64_t v133 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
      *(void *)(v0 + 2152) = v133;
      *(void *)(v0 + 2160) = (v130 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      LODWORD(v131) = v133(v132, 1, v131);
      sub_10001DAB4(v132, &qword_101654A38);
      if (v131 == 1)
      {
        uint64_t v197 = (void *)swift_task_alloc();
        *(void *)(v0 + 2168) = v197;
        void *v197 = v0;
        uint64_t v198 = sub_100C778BC;
        goto LABEL_66;
      }
      uint64_t v134 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
      uint64_t v135 = *(void *)(v0 + 1584);
      uint64_t v136 = *(void *)(v0 + 1456);
      sub_10001D074(*(void *)(v0 + 1504), v136, &qword_101654A38);
      if (v134(v136, 1, v135) != 1)
      {
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v210 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v210;
        *uint64_t v210 = v0;
        v210[1] = sub_100C7A148;
        uint64_t v211 = *(void *)(v0 + 1912);
        uint64_t v212 = *(void *)(v0 + 1904);
        uint64_t v213 = *(void *)(v0 + 1680);
        uint64_t v214 = *(void *)(v0 + 1600);
        uint64_t v215 = *(void *)(v0 + 1232);
        uint64_t v216 = *(void *)(v0 + 1136);
        return sub_100C9E300(v215, v216, v213, v214, v212, v211);
      }
      uint64_t v70 = *(void *)(v0 + 1456);
      goto LABEL_20;
    case 12:
      uint64_t v187 = (void *)swift_task_alloc();
      *(void *)(v0 + 2208) = v187;
      *uint64_t v187 = v0;
      v187[1] = sub_100C80934;
      uint64_t v188 = *(void *)(v0 + 1680);
      uint64_t v189 = *(void *)(v0 + 1168);
      return sub_100C9FCDC(v189, v188);
    case 13:
      uint64_t v190 = (void *)swift_task_alloc();
      *(void *)(v0 + 2200) = v190;
      *uint64_t v190 = v0;
      v190[1] = sub_100C7D35C;
      uint64_t v191 = *(void *)(v0 + 1680);
      uint64_t v192 = *(void *)(v0 + 1224);
      return sub_100CA020C(v192, v191);
    case 16:
      uint64_t v193 = (void *)swift_task_alloc();
      *(void *)(v0 + 2216) = v193;
      *uint64_t v193 = v0;
      v193[1] = sub_100C83EB4;
      uint64_t v194 = *(void *)(v0 + 1680);
      uint64_t v195 = *(void *)(v0 + 1536);
      uint64_t v196 = *(void *)(v0 + 1160);
      return sub_100CA0E04(v195, v196, v194);
    default:
      goto LABEL_21;
  }
}

uint64_t sub_100C873EC()
{
  sub_100CBD154(*(void *)(v0 + 1680), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C87838()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  sub_10001CFB8(*(void *)(v0 + 1984), *(void *)(v0 + 1992));
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 560);
  uint64_t v199 = *(void *)(v0 + 2008);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C89F38);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C89F7C()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  uint64_t v199 = *(void *)(v0 + 2048);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C8C664);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C8C6A8()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  uint64_t v199 = *(void *)(v0 + 2080);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C8ED90);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C8EDD4()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  sub_100CBD154(*(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v199 = *(void *)(v0 + 2096);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C914D8);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C9151C()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  uint64_t v199 = *(void *)(v0 + 2128);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C93C04);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C93C48()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  sub_100CBD154(*(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v199 = *(void *)(v0 + 2144);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C9634CLL);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C96390()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  uint64_t v199 = *(void *)(v0 + 2176);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C98A78);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C98ABC()
{
  uint64_t v169 = (void *)(v0 + 304);
  uint64_t v151 = (uint64_t *)(v0 + 448);
  uint64_t v159 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 672);
  uint64_t v155 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 768);
  uint64_t v153 = v0 + 880;
  uint64_t v154 = v0 + 872;
  uint64_t v157 = v0 + 1056;
  uint64_t v158 = v0 + 888;
  uint64_t v156 = v0 + 1096;
  uint64_t v152 = v0 + 1128;
  sub_100CBD154(*(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v199 = *(void *)(v0 + 2192);
  char v189 = *(unsigned char *)(v0 + 2233);
  uint64_t v1 = *(void *)(v0 + 1712);
  uint64_t v2 = *(void *)(v0 + 1136);
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
  (*(void (**)(void))(v0 + 1848))();
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v4 = swift_allocObject();
  sub_100CBD1B4(v1, v4 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100CBE0E4;
  *(void *)(v5 + 24) = v4;
  uint64_t v192 = swift_allocObject();
  *(unsigned char *)(v192 + 16) = v189;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v6 = swift_allocObject();
  sub_100CBD1B4(v1, v6 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v183 = swift_allocObject();
  *(void *)(v183 + 16) = sub_100CBE2E4;
  *(void *)(v183 + 24) = v6;
  sub_100CBD0EC(v2, v1, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v7 = swift_allocObject();
  sub_100CBD1B4(v1, v7 + v3, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v167 = swift_allocObject();
  *(void *)(v167 + 16) = sub_100CBE300;
  *(void *)(v167 + 24) = v7;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = v199;
  swift_errorRetain();
  osos_log_t log = Logger.logObject.getter();
  os_log_type_t v162 = static os_log_type_t.error.getter();
  uint64_t v179 = swift_allocObject();
  *(unsigned char *)(v179 + 16) = 34;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100CC28B8;
  *(void *)(v9 + 24) = v5;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1000654EC;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = swift_allocObject();
  *(unsigned char *)(v11 + 16) = 34;
  uint64_t v195 = swift_allocObject();
  *(unsigned char *)(v195 + 16) = 8;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_100CBE3EC;
  *(void *)(v12 + 24) = v192;
  uint64_t v193 = swift_allocObject();
  *(void *)(v193 + 16) = sub_1000654EC;
  *(void *)(v193 + 24) = v12;
  uint64_t v172 = swift_allocObject();
  *(unsigned char *)(v172 + 16) = 112;
  uint64_t v171 = swift_allocObject();
  *(unsigned char *)(v171 + 16) = 8;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 1752392040;
  uint64_t v170 = swift_allocObject();
  *(void *)(v170 + 16) = sub_10006550C;
  *(void *)(v170 + 24) = v13;
  uint64_t v190 = swift_allocObject();
  *(unsigned char *)(v190 + 16) = 33;
  uint64_t v186 = swift_allocObject();
  *(unsigned char *)(v186 + 16) = 8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1000654F4;
  *(void *)(v14 + 24) = v183;
  uint64_t v184 = swift_allocObject();
  *(void *)(v184 + 16) = sub_1000654EC;
  *(void *)(v184 + 24) = v14;
  uint64_t v173 = v11;
  uint64_t v182 = swift_allocObject();
  *(unsigned char *)(v182 + 16) = 112;
  uint64_t v181 = swift_allocObject();
  *(unsigned char *)(v181 + 16) = 8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 1752392040;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10006550C;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = v16;
  uint64_t v160 = swift_allocObject();
  *(unsigned char *)(v160 + 16) = 33;
  uint64_t v177 = swift_allocObject();
  *(unsigned char *)(v177 + 16) = 8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000654F4;
  *(void *)(v18 + 24) = v167;
  uint64_t v168 = swift_allocObject();
  *(void *)(v168 + 16) = sub_1000654EC;
  *(void *)(v168 + 24) = v18;
  uint64_t v166 = swift_allocObject();
  *(unsigned char *)(v166 + 16) = 34;
  uint64_t v165 = swift_allocObject();
  *(unsigned char *)(v165 + 16) = 8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_100CBE4A8;
  *(void *)(v19 + 24) = v161;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1000654EC;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  sub_1004B810C(v21, 21);
  *uint64_t v22 = sub_100065514;
  v22[1] = v179;
  uint64_t v22[2] = sub_100065514;
  v22[3] = v8;
  v22[4] = sub_100065500;
  v22[5] = v10;
  v22[6] = sub_100065514;
  v22[7] = v11;
  v22[8] = sub_100065514;
  v22[9] = v195;
  v22[10] = sub_100065500;
  v22[11] = v193;
  v22[12] = sub_100065514;
  v22[13] = v172;
  v22[14] = sub_100065514;
  v22[15] = v171;
  v22[16] = sub_100065504;
  v22[17] = v170;
  v22[18] = sub_100065514;
  v22[19] = v190;
  v22[20] = sub_100065514;
  v22[21] = v186;
  v22[22] = sub_100065500;
  v22[23] = v184;
  v22[24] = sub_100065514;
  v22[25] = v182;
  v22[26] = sub_100065514;
  v22[27] = v181;
  v22[28] = sub_100065504;
  v22[29] = v17;
  v22[30] = sub_100065514;
  v22[31] = v160;
  v22[32] = sub_100065514;
  v22[33] = v177;
  v22[34] = sub_100065500;
  v22[35] = v168;
  v22[36] = sub_100065514;
  v22[37] = v166;
  v22[38] = sub_100065514;
  v22[39] = v165;
  v22[40] = sub_100065500;
  v22[41] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (os_log_type_enabled(oslog, v162))
  {
    uint64_t v23 = (uint8_t *)sub_1008F9FAC();
    uint64_t v24 = swift_slowAlloc();
    *(void *)(v0 + 1096) = 0;
    buf = v23;
    *(void *)(v0 + 1056) = v24;
    *(_WORD *)uint64_t v23 = 1795;
    *(void *)(v0 + 888) = v23 + 2;
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v179;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v8;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v10;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v173;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v195;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v193;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v172;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v171;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v170;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v190;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v186;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v184;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v182;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v181;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065504;
    *(void *)(v0 + 680) = v17;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v160;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v177;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v168;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v166;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065514;
    *(void *)(v0 + 680) = v165;
    sub_1008F9FB4(v159, v158, v156, v157);
    swift_release();
    *(void *)(v0 + 672) = sub_100065500;
    *(void *)(v0 + 680) = v20;
    sub_1008F9FB4(v159, v158, v156, v157);
    uint64_t v25 = *(void *)(v0 + 1736);
    uint64_t v26 = *(void *)(v0 + 1728);
    uint64_t v27 = *(void *)(v0 + 1720);
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, oslog, v162, "Keys to upload: %{public}s,\nfailed to add type: %{public}s,\nfor share-id: %{private,mask.hash}s,\nbeacon-id: %{private,mask.hash}s\nerror: %{public}s.", buf, 0x48u);
    swift_arrayDestroy();
    swift_slowDealloc();
    sub_1008F9FA0();

    swift_errorRelease();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v28(v25, v27);
  }
  else
  {
    uint64_t v29 = *(void *)(v0 + 1736);
    uint64_t v30 = *(void *)(v0 + 1728);
    uint64_t v163 = *(void *)(v0 + 1720);
    swift_errorRelease();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
    v28(v29, v163);
  }
  uint64_t v31 = (int64x2_t *)(v0 + 1944);
  uint64_t v32 = *(void *)(v0 + 1960);
  if (v32 == *(void *)(v0 + 1928))
  {
LABEL_24:
    sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
    sub_1001300CC(v151);
    swift_bridgeObjectRelease();
    uint64_t v202 = *(void *)(v0 + 856);
    uint64_t v102 = *(void *)(v0 + 1680);
    uint64_t v103 = *(void *)(v0 + 1640);
    uint64_t v104 = *(void *)(v0 + 1504);
    sub_100CBD154(*(void *)(v0 + 1672), (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_weakDestroy();
    sub_10001DAB4(v104, &qword_101654A38);
    sub_100CBD154(v103, type metadata accessor for KeyDropInterface.KeyAlignment);
    sub_100CBD154(v102, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v105 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v105(v202);
  }
  int64x2_t v33 = vdupq_n_s64((unint64_t)v28);
  while (1)
  {
    *uint64_t v31 = v33;
    *(void *)(v0 + 1936) = 0;
    uint64_t v34 = *(unsigned __int8 *)(*(void *)(v0 + 1920) + v32 + 32);
    *(unsigned char *)(v0 + 2233) = v34;
    *(void *)(v0 + 1960) = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x100C9B1C0);
    }
    switch(v34)
    {
      case 1:
        uint64_t v107 = *(void *)(v0 + 1424);
        sub_1000F7750(1, *(void *)(*(void *)(v0 + 1136) + *(int *)(*(void *)(v0 + 1688) + 44)), v107);
        uint64_t v108 = type metadata accessor for BookmarkMetaData();
        int v109 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v108 - 8) + 48))(v107, 1, v108);
        uint64_t v110 = *(void *)(v0 + 1424);
        if (v109 == 1)
        {
          sub_10001DAB4(v110, &qword_10164B638);
          uint64_t v111 = 0;
        }
        else
        {
          uint64_t v111 = *(void *)(v110 + 8);
          sub_100CBD154(v110, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
        }
        *(void *)(v0 + 1968) = v111;
        uint64_t v146 = *(int *)(v0 + 2228);
        uint64_t v147 = *(void *)(v0 + 1136);
        uint64_t v148 = (void *)swift_task_alloc();
        *(void *)(v0 + 1976) = v148;
        *uint64_t v148 = v0;
        v148[1] = sub_100C62684;
        uint64_t v149 = *(void *)(v0 + 1392);
        return sub_100CA6DC8(v149, v147 + v146);
      case 4:
        uint64_t v112 = (void *)swift_task_alloc();
        *(void *)(v0 + 2040) = v112;
        *uint64_t v112 = v0;
        v112[1] = sub_100C691B0;
        uint64_t v113 = *(void *)(v0 + 1680);
        uint64_t v114 = *(void *)(v0 + 1256);
        uint64_t v115 = *(void *)(v0 + 1136);
        return sub_100C9B9FC(v114, v115, v113, (uint64_t)v151);
      case 5:
        uint64_t v77 = *(void *)(v0 + 1592);
        uint64_t v78 = *(void *)(v0 + 1584);
        uint64_t v79 = *(void *)(v0 + 1496);
        sub_10001D074(*(void *)(v0 + 1504), v79, &qword_101654A38);
        uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 2056) = v80;
        *(void *)(v0 + 2064) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v78) = v80(v79, 1, v78);
        sub_10001DAB4(v79, &qword_101654A38);
        if (v78 != 1)
        {
          long long v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2056);
          uint64_t v82 = *(void *)(v0 + 1584);
          uint64_t v83 = *(void *)(v0 + 1488);
          sub_10001D074(*(void *)(v0 + 1504), v83, &qword_101654A38);
          if (v81(v83, 1, v82) == 1)
          {
            uint64_t v84 = *(void *)(v0 + 1488);
            goto LABEL_6;
          }
          sub_100CBD1B4(*(void *)(v0 + 1488), *(void *)(v0 + 1616), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v130 = (void *)swift_task_alloc();
          *(void *)(v0 + 2088) = v130;
          void *v130 = v0;
          v130[1] = sub_100C6EC08;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1616);
          uint64_t v135 = *(void *)(v0 + 1248);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 0;
LABEL_49:
          return sub_100C9CC58(v135, v136, v133, v134, v137, v132, v131);
        }
        uint64_t v126 = (void *)swift_task_alloc();
        *(void *)(v0 + 2072) = v126;
        *uint64_t v126 = v0;
        uint64_t v127 = sub_100C6C37C;
        goto LABEL_44;
      case 6:
        uint64_t v85 = *(void *)(v0 + 1592);
        uint64_t v86 = *(void *)(v0 + 1584);
        uint64_t v87 = *(void *)(v0 + 1480);
        sub_10001D074(*(void *)(v0 + 1504), v87, &qword_101654A38);
        uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
        *(void *)(v0 + 2104) = v88;
        *(void *)(v0 + 2112) = (v85 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v86) = v88(v87, 1, v86);
        sub_10001DAB4(v87, &qword_101654A38);
        if (v86 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2120) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C71E1C;
LABEL_44:
          v126[1] = v127;
          uint64_t v128 = *(void *)(v0 + 1672);
          uint64_t v129 = *(void *)(v0 + 1504);
          return sub_100C9B204(v0 + 1064, v128, v129);
        }
        uint64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2104);
        uint64_t v90 = *(void *)(v0 + 1584);
        uint64_t v91 = *(void *)(v0 + 1472);
        sub_10001D074(*(void *)(v0 + 1504), v91, &qword_101654A38);
        if (v89(v91, 1, v90) != 1)
        {
          sub_100CBD1B4(*(void *)(v0 + 1472), *(void *)(v0 + 1608), type metadata accessor for KeyDropInterface.KeyAlignment);
          uint64_t v138 = (void *)swift_task_alloc();
          *(void *)(v0 + 2136) = v138;
          *uint64_t v138 = v0;
          v138[1] = sub_100C746A8;
          uint64_t v131 = *(void *)(v0 + 1912);
          uint64_t v132 = *(void *)(v0 + 1904);
          uint64_t v133 = *(void *)(v0 + 1680);
          uint64_t v134 = *(void *)(v0 + 1608);
          uint64_t v135 = *(void *)(v0 + 1240);
          uint64_t v136 = *(void *)(v0 + 1136);
          char v137 = 1;
          goto LABEL_49;
        }
        uint64_t v84 = *(void *)(v0 + 1472);
LABEL_6:
        sub_10001DAB4(v84, &qword_101654A38);
        int64x2_t v33 = *v31;
LABEL_7:
        uint64_t v32 = *(void *)(v0 + 1960);
        if (v32 == *(void *)(v0 + 1928)) {
          goto LABEL_24;
        }
        break;
      case 8:
      case 10:
        int64x2_t v200 = v33;
        sub_1000F7878(v34, *(void *)(v0 + 504), (uint64_t *)(v0 + 784));
        int64x2_t v33 = v200;
        unint64_t v35 = *(void *)(v0 + 792);
        if (v35 >> 60 != 15)
        {
          uint64_t v36 = *(void *)(v0 + 784);
          unint64_t v37 = *(void *)(v0 + 1912);
          uint64_t v38 = *(void *)(v0 + 1904);
          uint64_t v39 = *(void *)(v0 + 1368);
          uint64_t v40 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
          sub_100037A38(v36, v35);
          sub_101268234(1, v36, v35, v39, v169);
          sub_10000588C(&qword_101657A00);
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = sub_1004B7678(v41, 1);
          *(_OWORD *)uint64_t v43 = *(_OWORD *)v169;
          long long v45 = *(_OWORD *)(v0 + 336);
          long long v44 = *(_OWORD *)(v0 + 352);
          long long v46 = *(_OWORD *)(v0 + 320);
          *(void *)(v43 + 64) = *(void *)(v0 + 368);
          *(_OWORD *)(v43 + 32) = v45;
          *(_OWORD *)(v43 + 48) = v44;
          *(_OWORD *)(v43 + 16) = v46;
          uint64_t v47 = SharingCircleWildAdvertisementKey.init(key:)(v42);
          sub_100037A38(v38, v37);
          sub_100CBE5B0(v169, (void (*)(void, void))sub_1000361E0, (void (*)(uint64_t, uint64_t))sub_100037A38);
          uint64_t v48 = sub_100CBCA7C(v47, v38, v37);
          uint64_t v174 = v36;
          unint64_t v175 = v35;
          uint64_t v185 = *(void *)(v0 + 1840);
          uint64_t v187 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1848);
          uint64_t v178 = *(void *)(v0 + 1768);
          uint64_t v180 = *(void *)(v0 + 1720);
          uint64_t v49 = *(void *)(v0 + 1712);
          uint64_t v50 = *(void *)(v0 + 1640);
          uint64_t v51 = *(void *)(v0 + 1624);
          uint64_t v52 = *(void *)(v0 + 1352);
          uint64_t v53 = *(unsigned char **)(v0 + 1312);
          uint64_t v196 = *(void *)(v0 + 1272);
          unint64_t v54 = (*(unsigned __int8 *)(v0 + 2224) + 16) & ~(unint64_t)*(unsigned __int8 *)(v0 + 2224);
          uint64_t v176 = *(void *)(v0 + 1136);
          sub_100037A24(*(void *)(v0 + 1904), *(void *)(v0 + 1912));
          swift_bridgeObjectRelease();
          sub_100CBD0EC(v50, v51, type metadata accessor for KeyDropInterface.KeyAlignment);
          sub_101263C08(v34, v51, (uint64_t)v48, v53);
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          sub_100C272D0(v52);
          v187(v178, v185, v180);
          sub_100CBD0EC(v176, v49, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v55 = swift_allocObject();
          sub_100CBD1B4(v49, v55 + v54, type metadata accessor for SharingCircleKeyManager.Instruction);
          uint64_t v56 = swift_allocObject();
          *(void *)(v56 + 16) = sub_100CBE0E4;
          *(void *)(v56 + 24) = v55;
          sub_100CBD0EC((uint64_t)v53, v52, type metadata accessor for KeyDropInterface.KeyPackage);
          unint64_t v57 = (*(unsigned __int8 *)(v196 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
          uint64_t v58 = swift_allocObject();
          sub_100CBD1B4(v52, v58 + v57, type metadata accessor for KeyDropInterface.KeyPackage);
          uint64_t v59 = swift_allocObject();
          *(void *)(v59 + 16) = sub_100CBE648;
          *(void *)(v59 + 24) = v58;
          uint64_t v201 = Logger.logObject.getter();
          os_log_type_t v197 = static os_log_type_t.default.getter();
          uint64_t v60 = swift_allocObject();
          *(unsigned char *)(v60 + 16) = 34;
          uint64_t v61 = swift_allocObject();
          *(unsigned char *)(v61 + 16) = 8;
          uint64_t v62 = swift_allocObject();
          *(void *)(v62 + 16) = sub_100CC28B8;
          *(void *)(v62 + 24) = v56;
          uint64_t v63 = swift_allocObject();
          *(void *)(v63 + 16) = sub_1000654EC;
          *(void *)(v63 + 24) = v62;
          uint64_t v64 = swift_allocObject();
          *(unsigned char *)(v64 + 16) = 34;
          uint64_t v65 = swift_allocObject();
          *(unsigned char *)(v65 + 16) = 8;
          uint64_t v66 = swift_allocObject();
          *(void *)(v66 + 16) = sub_100CC28BC;
          *(void *)(v66 + 24) = v59;
          uint64_t v67 = swift_allocObject();
          *(void *)(v67 + 16) = sub_1000654EC;
          *(void *)(v67 + 24) = v66;
          uint64_t v68 = swift_allocObject();
          sub_1004B810C(v68, 6);
          *uint64_t v69 = sub_100065514;
          v69[1] = v60;
          void v69[2] = sub_100065514;
          v69[3] = v61;
          v69[4] = sub_100065500;
          v69[5] = v63;
          v69[6] = sub_100065514;
          v69[7] = v64;
          v69[8] = sub_100065514;
          v69[9] = v65;
          v69[10] = sub_100065500;
          v69[11] = v67;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v201, v197))
          {
            uint64_t v191 = v65;
            uint64_t v70 = (uint8_t *)sub_1008F9FAC();
            uint64_t v71 = swift_slowAlloc();
            *(void *)(v0 + 880) = 0;
            uint64_t v188 = v70;
            *(void *)(v0 + 1128) = v71;
            *(_WORD *)uint64_t v70 = 514;
            *(void *)(v0 + 872) = v70 + 2;
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v60;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v61;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v63;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v64;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065514;
            *(void *)(v0 + 776) = v191;
            sub_1008F9FB4(v155, v154, v153, v152);
            swift_release();
            *(void *)(v0 + 768) = sub_100065500;
            *(void *)(v0 + 776) = v67;
            sub_1008F9FB4(v155, v154, v153, v152);
            uint64_t v72 = *(void *)(v0 + 1768);
            uint64_t v73 = *(void *)(v0 + 1728);
            uint64_t v74 = *(void *)(v0 + 1720);
            uint64_t v75 = *(void *)(v0 + 1312);
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v201, v197, "Keys to upload: %{public}s,\nadded: %{public}s.", v188, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            sub_1008F9FA0();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
            v76(v72, v74);
            sub_100CBD154(v75, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v76);
          }
          else
          {
            uint64_t v99 = *(void *)(v0 + 1728);
            uint64_t v100 = *(void *)(v0 + 1720);
            uint64_t v194 = *(void *)(v0 + 1768);
            uint64_t v198 = *(void *)(v0 + 1312);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();

            sub_100CBE5B0(v169, (void (*)(void, void))sub_10001CFB8, (void (*)(uint64_t, uint64_t))sub_100037A24);
            sub_100037A24(v174, v175);
            uint64_t v101 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
            v101(v194, v100);
            sub_100CBD154(v198, type metadata accessor for KeyDropInterface.KeyPackage);
            int64x2_t v33 = vdupq_n_s64((unint64_t)v101);
          }
          uint64_t v31 = (int64x2_t *)(v0 + 1944);
        }
        goto LABEL_7;
      case 9:
        uint64_t v92 = *(void *)(v0 + 1592);
        uint64_t v93 = *(void *)(v0 + 1584);
        uint64_t v94 = *(void *)(v0 + 1464);
        sub_10001D074(*(void *)(v0 + 1504), v94, &qword_101654A38);
        uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48);
        *(void *)(v0 + 2152) = v95;
        *(void *)(v0 + 2160) = (v92 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        LODWORD(v93) = v95(v94, 1, v93);
        sub_10001DAB4(v94, &qword_101654A38);
        if (v93 == 1)
        {
          uint64_t v126 = (void *)swift_task_alloc();
          *(void *)(v0 + 2168) = v126;
          *uint64_t v126 = v0;
          uint64_t v127 = sub_100C778BC;
          goto LABEL_44;
        }
        unint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 2152);
        uint64_t v97 = *(void *)(v0 + 1584);
        uint64_t v98 = *(void *)(v0 + 1456);
        sub_10001D074(*(void *)(v0 + 1504), v98, &qword_101654A38);
        if (v96(v98, 1, v97) == 1)
        {
          uint64_t v84 = *(void *)(v0 + 1456);
          goto LABEL_6;
        }
        sub_100CBD1B4(*(void *)(v0 + 1456), *(void *)(v0 + 1600), type metadata accessor for KeyDropInterface.KeyAlignment);
        uint64_t v139 = (void *)swift_task_alloc();
        *(void *)(v0 + 2184) = v139;
        *uint64_t v139 = v0;
        v139[1] = sub_100C7A148;
        uint64_t v140 = *(void *)(v0 + 1912);
        uint64_t v141 = *(void *)(v0 + 1904);
        uint64_t v142 = *(void *)(v0 + 1680);
        uint64_t v143 = *(void *)(v0 + 1600);
        uint64_t v144 = *(void *)(v0 + 1232);
        uint64_t v145 = *(void *)(v0 + 1136);
        return sub_100C9E300(v144, v145, v142, v143, v141, v140);
      case 12:
        uint64_t v116 = (void *)swift_task_alloc();
        *(void *)(v0 + 2208) = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_100C80934;
        uint64_t v117 = *(void *)(v0 + 1680);
        uint64_t v118 = *(void *)(v0 + 1168);
        return sub_100C9FCDC(v118, v117);
      case 13:
        uint64_t v119 = (void *)swift_task_alloc();
        *(void *)(v0 + 2200) = v119;
        *uint64_t v119 = v0;
        v119[1] = sub_100C7D35C;
        uint64_t v120 = *(void *)(v0 + 1680);
        uint64_t v121 = *(void *)(v0 + 1224);
        return sub_100CA020C(v121, v120);
      case 16:
        uint64_t v122 = (void *)swift_task_alloc();
        *(void *)(v0 + 2216) = v122;
        void *v122 = v0;
        v122[1] = sub_100C83EB4;
        uint64_t v123 = *(void *)(v0 + 1680);
        uint64_t v124 = *(void *)(v0 + 1536);
        uint64_t v125 = *(void *)(v0 + 1160);
        return sub_100CA0E04(v124, v125, v123);
      default:
        goto LABEL_7;
    }
  }
}

uint64_t sub_100C9B204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  v3[19] = sub_10000588C(&qword_10163F7B0);
  v3[20] = swift_task_alloc();
  sub_10000588C(&qword_101654A38);
  v3[21] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v3[22] = v4;
  v3[23] = *(void *)(v4 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = type metadata accessor for StableIdentifier();
  v3[26] = swift_task_alloc();
  return _swift_task_switch(sub_100C9B35C, 0, 0);
}

uint64_t sub_100C9B35C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  v0[27] = Strong;
  if (Strong)
  {
    uint64_t v2 = v0[26];
    uint64_t v3 = v0[17];
    uint64_t v4 = (int *)type metadata accessor for OwnedBeaconRecord();
    v0[28] = v4;
    sub_100CBD0EC(v3 + v4[6], v2, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_100CBD154(v2, (uint64_t (*)(void))type metadata accessor for StableIdentifier);
    if (EnumCaseMultiPayload)
    {
      uint64_t v6 = v0[17];
      v0[5] = v4;
      v0[6] = sub_100CBFAFC(&qword_101638DD0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
      uint64_t v7 = sub_10001D958(v0 + 2);
      sub_100CBD0EC(v6, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[29] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_100C9B670;
      uint64_t v9 = v0[20];
      return sub_100C4EEFC(v9, (uint64_t)(v0 + 2));
    }
    uint64_t v12 = v0[23];
    uint64_t v11 = v0[24];
    uint64_t v14 = v0[21];
    uint64_t v13 = v0[22];
    uint64_t v15 = v0[17];
    static Date.trustedNow.getter(v11);
    uint64_t v16 = v15 + v4[5];
    uint64_t v17 = v15 + v4[8];
    uint64_t v18 = sub_1008B5B84(v16, v17, v11, 0);
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v17, v13);
    uint64_t v19 = type metadata accessor for KeyDropInterface.KeyAlignment(0);
    *(void *)(v14 + *(int *)(v19 + 20)) = v18;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 32))(v14 + *(int *)(v19 + 24), v11, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
    uint64_t v20 = v0[21];
    uint64_t v21 = v0[18];
    swift_beginAccess();
    sub_100CBED1C(v20, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_100C9B670()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100C9B908;
  }
  else
  {
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 16);
    uint64_t v3 = sub_100C9B78C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100C9B78C()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v5 = (uint64_t *)v0[20];
  uint64_t v4 = v0[21];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, v7 + *(int *)(v1 + 32), v2);
  uint64_t v8 = *v5;
  uint64_t v9 = (char *)v5 + *(int *)(v6 + 36);
  uint64_t v10 = type metadata accessor for KeyDropInterface.KeyAlignment(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v4 + *(int *)(v10 + 24), v9, v2);
  *(void *)(v4 + *(int *)(v10 + 20)) = v8;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 0, 1, v10);
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[18];
  swift_beginAccess();
  sub_100CBED1C(v11, v12);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_100C9B908()
{
  swift_release();
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C9B9B0(uint64_t result, double a2)
{
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (a2 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (a2 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  BOOL v2 = __CFADD__((unint64_t)a2, result);
  result += (unint64_t)a2;
  if (v2) {
LABEL_9:
  }
    __break(1u);
  return result;
}

uint64_t sub_100C9B9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[20] = a4;
  v5[21] = v4;
  v5[18] = a2;
  v5[19] = a3;
  v5[17] = a1;
  v5[22] = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  v5[23] = swift_task_alloc();
  type metadata accessor for KeyDropInterface.KeyAlignment(0);
  v5[24] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = swift_task_alloc();
  v5[29] = *(void *)(type metadata accessor for BookmarkMetaData() - 8);
  v5[30] = swift_task_alloc();
  sub_10000588C(&qword_10165C148);
  v5[31] = swift_task_alloc();
  v5[32] = swift_task_alloc();
  v5[33] = swift_task_alloc();
  return _swift_task_switch(sub_100C9BBD4, v4, 0);
}

uint64_t sub_100C9BBD4()
{
  uint64_t v1 = v0[33];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v0[34] = v4;
  v0[35] = (v3 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[36] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100C9BC9C;
  uint64_t v7 = v0[18];
  uint64_t v6 = v0[19];
  return sub_100CA3A68(v7, 4, v6);
}

uint64_t sub_100C9BC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[37] = a1;
  v5[38] = a2;
  v5[39] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[21];
  if (v2) {
    uint64_t v7 = sub_100C9CA94;
  }
  else {
    uint64_t v7 = sub_100C9BDD4;
  }
  return _swift_task_switch(v7, v6, 0);
}

uint64_t sub_100C9BDD4()
{
  uint64_t v37 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 144) + *(int *)(*(void *)(v0 + 176) + 44));
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_100724268(4), (v3 & 1) != 0))
  {
    unint64_t v4 = *(void *)(v0 + 304);
    uint64_t v5 = *(void *)(v0 + 240);
    sub_100CBD0EC(*(void *)(v1 + 56) + *(void *)(*(void *)(v0 + 232) + 72) * v2, v5, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    unint64_t v6 = *(void *)(v5 + 8);
    sub_100CBD154(v5, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
    if (v6 >= v4)
    {
LABEL_4:
      if (qword_101637020 != -1) {
        swift_once();
      }
      uint64_t v7 = *(void *)(v0 + 184);
      uint64_t v8 = *(void *)(v0 + 144);
      uint64_t v9 = type metadata accessor for Logger();
      sub_100010324(v9, (uint64_t)qword_10170EB40);
      sub_100CBD0EC(v8, v7, type metadata accessor for SharingCircleKeyManager.Instruction);
      uint64_t v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      BOOL v12 = os_log_type_enabled(v10, v11);
      uint64_t v13 = *(void *)(v0 + 264);
      uint64_t v14 = *(void *)(v0 + 184);
      if (v12)
      {
        uint64_t v35 = *(void *)(v0 + 264);
        uint64_t v15 = swift_slowAlloc();
        uint64_t v36 = swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 141558275;
        *(void *)(v0 + 120) = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v15 + 12) = 2081;
        type metadata accessor for UUID();
        sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 128) = sub_1008FA0F0(v16, v17, &v36);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "Wild bundle reached highWater mark. Not uploading wild bundle for %{private,mask.hash}s.", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v18 = v35;
      }
      else
      {

        sub_100CBD154(v14, type metadata accessor for SharingCircleKeyManager.Instruction);
        uint64_t v18 = v13;
      }
      sub_10001DAB4(v18, &qword_10165C148);
      (*(void (**)(void, uint64_t, uint64_t, void))(v0 + 272))(*(void *)(v0 + 136), 1, 1, *(void *)(v0 + 200));
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
      goto LABEL_20;
    }
  }
  else if (!*(void *)(v0 + 304))
  {
    goto LABEL_4;
  }
  uint64_t result = sub_10001D608(*(void *)(v0 + 160) + 16, v0 + 72, &qword_10163A138);
  unint64_t v21 = *(void *)(v0 + 296);
  unint64_t v20 = *(void *)(v0 + 304);
  *(void *)(v0 + 320) = v21;
  uint64_t v22 = v20 - v21;
  if (v20 < v21)
  {
    if ((uint64_t)(v21 - v20) >= 0)
    {
      uint64_t v22 = v20 - v21;
      goto LABEL_13;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    return result;
  }
  if ((uint64_t)(v20 - v21) < 0) {
    goto LABEL_27;
  }
LABEL_13:
  *(void *)(v0 + 328) = v22;
  sub_10001D608(v0 + 72, v0 + 56, &qword_10163A138);
  unint64_t v23 = *(void *)(v0 + 64);
  if (v23 >> 60 == 15)
  {
    char v24 = 8;
LABEL_17:
    uint64_t v27 = *(void *)(v0 + 264);
    sub_100130078();
    swift_allocError();
    char *v28 = v24;
    swift_willThrow();
    sub_10001DAB4(v27, &qword_10165C148);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(void))(v0 + 8);
LABEL_20:
    return v29();
  }
  uint64_t v25 = *(void *)(v0 + 56);
  sub_10001D608(*(void *)(v0 + 160), v0 + 104, &qword_10163A138);
  sub_10001D608(v0 + 104, v0 + 88, &qword_10163A138);
  unint64_t v26 = *(void *)(v0 + 96);
  if (v26 >> 60 == 15)
  {
    char v24 = 9;
    goto LABEL_17;
  }
  uint64_t v30 = *(void *)(v0 + 152);
  uint64_t v31 = *(void *)(v0 + 88);
  *(void *)(v0 + 40) = type metadata accessor for OwnedBeaconRecord();
  *(void *)(v0 + 48) = sub_100CBFAFC(&qword_101638DD0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
  uint64_t v32 = sub_10001D958((uint64_t *)(v0 + 16));
  sub_100CBD0EC(v30, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_100091B38(v0 + 72);
  sub_100091B38(v0 + 104);
  int64x2_t v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 336) = v33;
  *int64x2_t v33 = v0;
  v33[1] = sub_100C9C3F8;
  uint64_t v34 = *(void *)(v0 + 224);
  return sub_100CAD030(v34, v0 + 16, v21, v25, v23, v31, v26);
}

uint64_t sub_100C9C3F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 168);
    unint64_t v4 = sub_100C9CB64;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 168);
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v2 + 16);
    unint64_t v4 = sub_100C9C520;
    uint64_t v3 = v5;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_100C9C520()
{
  uint64_t v1 = (uint64_t)(v0 + 9);
  uint64_t v2 = (uint64_t)(v0 + 13);
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[25];
  uint64_t v4 = v0[26];
  sub_10001D074(v0[33], v3, &qword_10165C148);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v3, 1, v5);
  uint64_t v7 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v0[34];
  uint64_t v8 = v0[32];
  uint64_t v9 = v0[33];
  if (v6 == 1)
  {
    uint64_t v10 = v0[28];
    uint64_t v11 = v0[25];
    sub_10001DAB4(v0[33], &qword_10165C148);
    sub_1003DD160((uint64_t)(v0 + 13));
    sub_1003DD160((uint64_t)(v0 + 9));
    sub_10001DAB4(v8, &qword_10165C148);
    sub_100CBD1B4(v10, v9, type metadata accessor for KeyDropInterface.KeyPackage);
    uint64_t result = v7(v9, 0, 1, v11);
    if (v0[41]) {
      goto LABEL_3;
    }
LABEL_8:
    sub_10001D608(v0[33], v0[17], &qword_10165C148);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_15:
    return v26();
  }
  unint64_t v17 = (unsigned char *)v0[31];
  uint64_t v39 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v0[34];
  uint64_t v19 = v0[27];
  uint64_t v18 = v0[28];
  uint64_t v20 = v0[24];
  uint64_t v21 = v0[25];
  sub_100CBD1B4(v8, v19, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_100CBD0EC(v19 + *(int *)(v21 + 20), v20, type metadata accessor for KeyDropInterface.KeyAlignment);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = *(void *)(v19 + v22);
  uint64_t v40 = *(void *)(v18 + v22);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  sub_100442B6C(v23);
  sub_1003DD160((uint64_t)(v0 + 13));
  sub_1003DD160((uint64_t)(v0 + 9));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v24 = v19;
  uint64_t v1 = (uint64_t)(v0 + 9);
  sub_100CBD154(v24, type metadata accessor for KeyDropInterface.KeyPackage);
  uint64_t v25 = v18;
  uint64_t v2 = (uint64_t)(v0 + 13);
  sub_100CBD154(v25, type metadata accessor for KeyDropInterface.KeyPackage);
  sub_10001DAB4(v9, &qword_10165C148);
  *unint64_t v17 = 4;
  sub_100CBD1B4(v20, (uint64_t)&v17[*(int *)(v21 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
  *(void *)&v17[*(int *)(v21 + 24)] = v40;
  v39(v17, 0, 1, v21);
  uint64_t result = sub_10001D608((uint64_t)v17, v9, &qword_10165C148);
  if (!v0[41]) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v13 = v0[40];
  unint64_t v14 = v13 + 1;
  if (v13 == -1)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v0[40] = v14;
  unint64_t v15 = v0[38];
  uint64_t v16 = v15 - v14;
  if (v15 < v14)
  {
    if ((uint64_t)(v14 - v15) >= 0)
    {
      uint64_t v16 = v15 - v14;
      goto LABEL_10;
    }
    goto LABEL_22;
  }
  if ((uint64_t)(v15 - v14) < 0)
  {
LABEL_23:
    __break(1u);
    return result;
  }
LABEL_10:
  v0[41] = v16;
  sub_10001D608(v1, (uint64_t)(v0 + 7), &qword_10163A138);
  unint64_t v27 = v0[8];
  if (v27 >> 60 == 15)
  {
    char v28 = 8;
LABEL_14:
    uint64_t v31 = v0[33];
    sub_100130078();
    swift_allocError();
    *uint64_t v32 = v28;
    swift_willThrow();
    sub_10001DAB4(v31, &qword_10165C148);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_15;
  }
  uint64_t v29 = v0[7];
  sub_10001D608(v0[20], v2, &qword_10163A138);
  sub_10001D608(v2, (uint64_t)(v0 + 11), &qword_10163A138);
  unint64_t v30 = v0[12];
  if (v30 >> 60 == 15)
  {
    char v28 = 9;
    goto LABEL_14;
  }
  uint64_t v33 = v1;
  uint64_t v34 = v0[19];
  uint64_t v35 = v0[11];
  v0[5] = type metadata accessor for OwnedBeaconRecord();
  v0[6] = sub_100CBFAFC(&qword_101638DD0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
  uint64_t v36 = sub_10001D958(v0 + 2);
  sub_100CBD0EC(v34, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
  sub_100091B38(v33);
  sub_100091B38(v2);
  uint64_t v37 = (void *)swift_task_alloc();
  v0[42] = v37;
  *uint64_t v37 = v0;
  v37[1] = sub_100C9C3F8;
  uint64_t v38 = v0[28];
  return sub_100CAD030(v38, (uint64_t)(v0 + 2), v14, v29, v27, v35, v30);
}

uint64_t sub_100C9CA94()
{
  sub_10001DAB4(*(void *)(v0 + 264), &qword_10165C148);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100C9CB64()
{
  uint64_t v1 = *(void *)(v0 + 264);
  sub_1003DD160(v0 + 104);
  sub_1003DD160(v0 + 72);
  sub_10001DAB4(v1, &qword_10165C148);
  _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100C9CC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v8 + 288) = a7;
  *(void *)(v8 + 296) = v7;
  *(void *)(v8 + 272) = a4;
  *(void *)(v8 + 280) = a6;
  *(unsigned char *)(v8 + 424) = a5;
  *(void *)(v8 + 256) = a2;
  *(void *)(v8 + 264) = a3;
  *(void *)(v8 + 248) = a1;
  *(void *)(v8 + 304) = type metadata accessor for SharingCircleKeyManager.Instruction(0);
  *(void *)(v8 + 312) = swift_task_alloc();
  *(void *)(v8 + 320) = swift_task_alloc();
  sub_10000588C(&qword_10165C0B8);
  *(void *)(v8 + 328) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for TimeBasedKey();
  *(void *)(v8 + 336) = v9;
  *(void *)(v8 + 344) = *(void *)(v9 - 8);
  *(void *)(v8 + 352) = swift_task_alloc();
  *(void *)(v8 + 360) = *(void *)(type metadata accessor for BookmarkMetaData() - 8);
  *(void *)(v8 + 368) = swift_task_alloc();
  return _swift_task_switch(sub_100C9CDF0, v7, 0);
}

uint64_t sub_100C9CDF0()
{
  if (!*(unsigned char *)(v0 + 424))
  {
    char v1 = 5;
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 424) == 1)
  {
    char v1 = 6;
LABEL_5:
    *(unsigned char *)(v0 + 425) = v1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100C9CF58;
    uint64_t v4 = *(void *)(v0 + 256);
    uint64_t v3 = *(void *)(v0 + 264);
    return sub_100CA3A68(v4, v1, v3);
  }
  sub_100130078();
  swift_allocError();
  *int v6 = 17;
  swift_willThrow();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100C9CF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[48] = a1;
  v4[49] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    uint64_t v7 = v4[37];
    return _swift_task_switch(sub_100C9D0D8, v7, 0);
  }
}

uint64_t sub_100C9D0D8(void (*a1)(), uint64_t a2, uint64_t a3)
{
  uint64_t v32 = v3;
  unint64_t v4 = *(void *)(v3 + 392);
  if (*(unsigned char *)(v3 + 424) || !v4) {
    goto LABEL_7;
  }
  if (!is_mul_ok(v4, 0x60uLL))
  {
    __break(1u);
LABEL_25:
    __break(1u);
    return _swift_task_switch(a1, a2, a3);
  }
  uint64_t v5 = 96 * v4;
  unint64_t v4 = 96 * v4 - 1;
  unint64_t v6 = v5 - 96;
  if (v6 <= 1) {
    unint64_t v6 = 1;
  }
  if (v4 < v6) {
    goto LABEL_25;
  }
LABEL_7:
  uint64_t v7 = *(void *)(*(void *)(v3 + 256) + *(int *)(*(void *)(v3 + 304) + 44));
  if (*(void *)(v7 + 16))
  {
    unint64_t v8 = sub_100724268(*(unsigned char *)(v3 + 425));
    if (v9)
    {
      uint64_t v10 = *(void *)(v3 + 368);
      sub_100CBD0EC(*(void *)(v7 + 56) + *(void *)(*(void *)(v3 + 360) + 72) * v8, v10, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      unint64_t v11 = *(void *)(v10 + 8);
      sub_100CBD154(v10, (uint64_t (*)(void))type metadata accessor for BookmarkMetaData);
      if (v11 >= v4) {
        goto LABEL_16;
      }
      goto LABEL_12;
    }
  }
  if (v4)
  {
LABEL_12:
    uint64_t v12 = *(void *)(v3 + 264);
    *(void *)(v3 + 112) = type metadata accessor for OwnedBeaconRecord();
    *(void *)(v3 + 120) = sub_100CBFAFC(&qword_101638DD0, (void (*)(uint64_t))type metadata accessor for OwnedBeaconRecord);
    uint64_t v13 = sub_10001D958((uint64_t *)(v3 + 88));
    sub_100CBD0EC(v12, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for OwnedBeaconRecord);
    uint64_t v14 = swift_task_alloc();
    *(void *)(v3 + 400) = v14;
    *(void *)uint64_t v14 = v3;
    *(void *)(v14 + 8) = sub_100C9D628;
    char v15 = *(unsigned char *)(v3 + 424);
    long long v16 = *(_OWORD *)(v3 + 384);
    *(void *)(v14 + 48) = *(void *)(v3 + 296);
    *(_OWORD *)(v14 + 32) = v16;
    *(unsigned char *)(v14 + 96) = v15;
    *(void *)(v14 + 24) = v3 + 88;
    a1 = sub_100CB23D4;
    a2 = 0;
    a3 = 0;
    return _swift_task_switch(a1, a2, a3);
  }
  unint64_t v11 = 0;
LABEL_16:
  if (qword_101637020 != -1) {
    swift_once();
  }
  uint64_t v17 = *(void *)(v3 + 312);
  uint64_t v18 = *(void *)(v3 + 256);
  uint64_t v19 = type metadata accessor for Logger();
  sub_100010324(v19, (uint64_t)qword_10170EB40);
  sub_100CBD0EC(v18, v17, type metadata accessor for SharingCircleKeyManager.Instruction);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v23 = *(void *)(v3 + 312);
  if (v22)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 134218755;
    *(void *)(v3 + 232) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 12) = 2048;
    *(void *)(v3 + 192) = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 22) = 2160;
    *(void *)(v3 + 168) = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v24 + 32) = 2081;
    type metadata accessor for UUID();
    sub_100CBFAFC((unint64_t *)&qword_101638B10, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v3 + 160) = sub_1008FA0F0(v25, v26, &v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100CBD154(v23, type metadata accessor for SharingCircleKeyManager.Instruction);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Address key package reached highWater mark (%llu > %llu). Not uploading address keys for %{private,mask.hash}s.", (uint8_t *)v24, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100CBD154(*(void *)(v3 + 312), type metadata accessor for SharingCircleKeyManager.Instruction);
  }

  uint64_t v27 = *(void *)(v3 + 248);
  uint64_t v28 = type metadata accessor for KeyDropInterface.KeyPackage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 1, 1, v28);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = *(uint64_t (**)(void))(v3 + 8);
  return v29();
}

uint64_t sub_100C9D628(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 296);
    swift_errorRelease();
    unint64_t v6 = sub_100C9DF18;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 296);
    *(void *)(v4 + 416) = a1;
    _s12searchpartyd26ManagedCBPeripheralManagerVwxx_0(v4 + 88);
    unint64_t v6 = sub_100C9D76C;
    uint64_t v7 = v8;
  }
  return _swift_task_switch(v6, v7, 0);
}

uint64_t sub_100C9D76C()
{
  unint64_t v71 = v0;
  unint64_t v1 = v0;
  uint64_t v3 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  char v4 = *(unsigned char *)(v0 + 424);
  uint64_t v5 = *(void *)(v0 + 272);
  uint64_t v6 = swift_task_alloc();
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  uint64_t v7 = sub_1000A4144((uint64_t (*)(char *))sub_100CBECAC, (void *)v6, v2);
  swift_task_dealloc();
  int64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
    swift_bridgeObjectRelease();
LABEL_23:
    uint64_t v45 = *(void *)(v1 + 280);
    unint64_t v46 = *(void *)(v1 + 288);
    sub_1000361E0(v45, v46);
    uint64_t v47 = sub_100CBCA7C((uint64_t)_swiftEmptyArrayStorage, v45, v46);
    uint64_t v48 = v3;
    uint64_t v49 = *(void *)(v1 + 280);
    unint64_t v50 = *(void *)(v1 + 288);
    if (v48)
    {
      sub_10001CFB8(*(void *)(v1 + 280), *(void *)(v1 + 288));
      swift_bridgeObjectRelease();
LABEL_25:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v51 = *(uint64_t (**)(void))(v1 + 8);
LABEL_31:
      return v51();
    }
    uint64_t v52 = v47;
    int v53 = *(unsigned __int8 *)(v1 + 424);
    swift_bridgeObjectRelease();
    sub_10001CFB8(v49, v50);
    if (v53)
    {
      if (v53 != 1)
      {
        swift_bridgeObjectRelease();
        sub_100130078();
        swift_allocError();
        unsigned char *v59 = 17;
        swift_willThrow();
        goto LABEL_25;
      }
      char v54 = 6;
    }
    else
    {
      char v54 = 5;
    }
    uint64_t v55 = *(void *)(v1 + 272);
    uint64_t v56 = *(char **)(v1 + 248);
    uint64_t v57 = type metadata accessor for KeyDropInterface.KeyPackage(0);
    sub_100CBD0EC(v55, (uint64_t)&v56[*(int *)(v57 + 20)], type metadata accessor for KeyDropInterface.KeyAlignment);
    *uint64_t v56 = v54;
    *(void *)&v56[*(int *)(v57 + 24)] = v52;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v51 = *(uint64_t (**)(void))(v1 + 8);
    goto LABEL_31;
  }
  unint64_t v9 = v1 + 16;
  uint64_t v65 = (void *)(v1 + 224);
  uint64_t v10 = *(void *)(v1 + 344);
  uint64_t v68 = *(void *)(v1 + 336);
  sub_1000B7070(0, v8, 0);
  uint64_t v11 = v7 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v66 = *(void *)(v10 + 72);
  unint64_t v67 = v1;
  while (2)
  {
    uint64_t v12 = *(void *)(v1 + 352);
    sub_100CBD0EC(v11, v12, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
    uint64_t v13 = v12 + *(int *)(v68 + 24);
    uint64_t v14 = *(void *)(v13 + 16);
    unint64_t v1 = *(void *)(v13 + 24);
    sub_1000361E0(v14, v1);
    uint64_t v15 = sub_100A948F8(v14, v1);
    uint64_t v16 = v3;
    if (v3)
    {
      static os_log_type_t.error.getter();
      if (qword_101636F48 == -1)
      {
LABEL_18:
        sub_10000588C((uint64_t *)&unk_10163AD00);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_101342130;
        *uint64_t v65 = v16;
        swift_errorRetain();
        sub_10000588C(&qword_101638D40);
        uint64_t v39 = String.init<A>(describing:)();
        uint64_t v41 = v40;
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 64) = sub_10000B4CC();
        *(void *)(v38 + 32) = v39;
        *(void *)(v38 + 40) = v41;
        os_log(_:dso:log:_:_:)();
        swift_bridgeObjectRelease();
        sub_100130148();
        uint64_t v42 = swift_allocError();
        unsigned char *v43 = 0;
        swift_willThrow();
        swift_errorRelease();
        unint64_t v20 = v1;
        uint64_t v18 = v14;
        unint64_t v1 = v67;
        goto LABEL_39;
      }
LABEL_42:
      swift_once();
      goto LABEL_18;
    }
    unint64_t v17 = v9;
    uint64_t v18 = sub_100A90C58(v15, 0);
    unint64_t v20 = v19;
    CCECCryptorRelease();
    sub_10001CFB8(v14, v1);
    unint64_t v21 = v20 >> 62;
    unint64_t v1 = v67;
    switch(v20 >> 62)
    {
      case 1uLL:
        LODWORD(v22) = HIDWORD(v18) - v18;
        if (__OFSUB__(HIDWORD(v18), v18))
        {
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        uint64_t v22 = (int)v22;
LABEL_9:
        if (v22 == 28)
        {
          unint64_t v26 = *(uint64_t **)(v67 + 352);
          uint64_t v27 = *(void *)(v67 + 328);
          sub_100435A9C(6, v18, v20, &v69);
          uint64_t v28 = v69;
          unint64_t v29 = v70;
          uint64_t v30 = *v26;
          uint64_t v31 = type metadata accessor for EncryptedData();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v27, 1, 1, v31);
          unint64_t v9 = v17;
          sub_101268234(v30, v28, v29, v27, (void *)v17);
          sub_100CBD154((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TimeBasedKey);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1000B7070(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v33 = _swiftEmptyArrayStorage[2];
          unint64_t v32 = _swiftEmptyArrayStorage[3];
          if (v33 >= v32 >> 1) {
            sub_1000B7070(v32 > 1, v33 + 1, 1);
          }
          uint64_t v3 = 0;
          _swiftEmptyArrayStorage[2] = v33 + 1;
          uint64_t v34 = &_swiftEmptyArrayStorage[9 * v33];
          *((_OWORD *)v34 + 2) = *(_OWORD *)v17;
          long long v35 = *(_OWORD *)(v17 + 16);
          long long v36 = *(_OWORD *)(v17 + 32);
          long long v37 = *(_OWORD *)(v17 + 48);
          v34[12] = *(void *)(v17 + 64);
          *((_OWORD *)v34 + 4) = v36;
          *((_OWORD *)v34 + 5) = v37;
          *((_OWORD *)v34 + 3) = v35;
          v11 += v66;
          if (!--v8)
          {
            swift_bridgeObjectRelease();
            uint64_t v3 = 0;
            goto LABEL_23;
          }
          continue;
        }
        if (v21)
        {
          if (v21 == 1)
          {
            if (!__OFSUB__(HIDWORD(v18), v18))
            {
              uint64_t v44 = HIDWORD(v18) - (int)v18;
              goto LABEL_38;
            }
            __break(1u);
LABEL_44:
            __break(1u);
            JUMPOUT(0x100C9DF08);
          }
          uint64_t v61 = *(void *)(v18 + 16);
          uint64_t v60 = *(void *)(v18 + 24);
          uint64_t v44 = v60 - v61;
          if (__OFSUB__(v60, v61)) {
            goto LABEL_44;
          }
        }
        else
        {
          uint64_t v44 = BYTE6(v20);
        }
LABEL_38:
        sub_10013019C();
        uint64_t v42 = swift_allocError();
        *(void *)uint64_t v62 = 28;
        *(void *)(v62 + 8) = v44;
        *(unsigned char *)(v62 + 16) = 0;
        swift_willThrow();
LABEL_39:
        sub_10001CFB8(v18, v20);
        uint64_t v69 = 0;
        unint64_t v70 = 0xE000000000000000;
        _StringGuts.grow(_:)(35);
        unint64_t v63 = v70;
        *(void *)(v1 + 128) = v69;
        *(void *)(v1 + 136) = v63;
        v64._object = (void *)0x80000001013F3B70;
        v64._countAndFlagsBits = 0xD000000000000021;
        String.append(_:)(v64);
        *(void *)(v1 + 240) = v42;
        sub_10000588C(&qword_101638D40);
        _print_unlocked<A, B>(_:_:)();
        return _assertionFailure(_:_:file:line:flags:)();
      case 2uLL:
        uint64_t v24 = *(void *)(v18 + 16);
        uint64_t v23 = *(void *)(v18 + 24);
        BOOL v25 = __OFSUB__(v23, v24);
        uint64_t v22 = v23 - v24;
        if (!v25) {
          goto LABEL_9;
        }
        goto LABEL_41;
      case 3uLL:
        uint64_t v44 = 0;
        goto LABEL_38;
      default:
        uint64_t v22 = BYTE6(v20);
        goto LABEL_9;
    }
  }
}