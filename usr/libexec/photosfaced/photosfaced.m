int main(int argc, const char **argv, const char **envp)
{
  id v3;

  type metadata accessor for Daemon();
  swift_allocObject();
  qword_1000F4390 = (uint64_t)sub_1000C4590();
  type metadata accessor for MainActor();
  static MainActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v3 = [self mainRunLoop];
  [v3 run];
  swift_release();

  return 0;
}

unint64_t static NetworkConstants.terminusDomain.getter()
{
  return 0xD000000000000016;
}

uint64_t sub_10000285C(uint64_t a1, uint64_t a2)
{
  return sub_1000029C8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_100002874(uint64_t a1, id *a2)
{
  uint64_t result = static String._forceBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return result;
}

uint64_t sub_1000028EC(uint64_t a1, id *a2)
{
  char v3 = static String._conditionallyBridgeFromObjectiveC(_:result:)();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_10000296C@<X0>(void *a1@<X8>)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1000029B0(uint64_t a1, uint64_t a2)
{
  return sub_1000029C8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_1000029C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100002A0C()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100002A60()
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v0 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100002AD4()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_100002B60@<X0>(void *a1@<X8>)
{
  NSString v2 = String._bridgeToObjectiveC()();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100002BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100002BD4(uint64_t a1)
{
  uint64_t v2 = sub_100002D58(&qword_1000F1EB0);
  uint64_t v3 = sub_100002D58(&qword_1000F1EB8);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

void type metadata accessor for PFCTimePosition(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for AXMFeatureDescriptionOption(uint64_t a1)
{
}

void sub_100002CA8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_100002CF0()
{
  return sub_100002D58(&qword_1000F1E98);
}

uint64_t sub_100002D24()
{
  return sub_100002D58(&qword_1000F1EA0);
}

uint64_t sub_100002D58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AXMFeatureDescriptionOption(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100002D9C()
{
  return sub_100002D58(&qword_1000F1EA8);
}

uint64_t sub_100002DD8@<X0>(unsigned int *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100005A1C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100002E04(char a1)
{
  uint64_t result = 0x69727453646E6573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746172656E6567;
      break;
    case 2:
      uint64_t result = 0x626C416B63617274;
      break;
    case 3:
      uint64_t result = 0x416B636172746E75;
      break;
    case 4:
      uint64_t result = 0x75626C41636E7973;
      break;
    case 5:
      uint64_t result = 0x6C61476B63617274;
      break;
    case 6:
      uint64_t result = 0x476B636172746E75;
      break;
    case 7:
      uint64_t result = 0x6C6C6147636E7973;
      break;
    case 8:
      uint64_t result = 0x7568536B63617274;
      break;
    case 9:
      uint64_t result = 0x536B636172746E75;
      break;
    case 10:
      uint64_t result = 0x66756853636E7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100002FB0()
{
  return sub_100002E04(*v0);
}

BOOL sub_100002FB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::Int sub_100002FCC()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_100003014()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_100003040()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

int *sub_100003084@<X0>(int *result@<X0>, unsigned char *a2@<X8>)
{
  int v2 = *result;
  if (*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_10000309C(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1000030A8()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6E79536D75626C61;
  }
}

uint64_t sub_100003118(char a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 129) = a4;
  *(void *)(v5 + 32) = a2;
  *(unsigned char *)(v5 + 128) = a1;
  uint64_t v6 = sub_100005CB0(&qword_1000F2000);
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F2008);
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 - 8);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_100003258, 0, 0);
}

uint64_t sub_100003258()
{
  sub_100064118(*(unsigned __int8 *)(v0 + 128), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 129), *(void *)(v0 + 104));
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 16))(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 80));
  sub_100005F48(&qword_1000F2010, &qword_1000F2008);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2018, &qword_1000F2000);
  int v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  *int v2 = v0;
  v2[1] = sub_100003410;
  uint64_t v3 = *(void *)(v0 + 56);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, v3, v1);
}

uint64_t sub_100003410()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    int v2 = sub_1000035FC;
  }
  else {
    int v2 = sub_100003524;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_100003524()
{
  if (v0[3])
  {
    uint64_t v1 = v0[13];
    uint64_t v2 = v0[10];
    uint64_t v3 = v0[11];
    (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    uint64_t v4 = v0[2];
    uint64_t v5 = v0[3];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[1];
    v6(v4, v5);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1000035FC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[11];
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000036B4(uint64_t a1, char a2, uint64_t a3, char a4)
{
  *(void *)(v5 + 40) = a3;
  *(void *)(v5 + 48) = v4;
  *(unsigned char *)(v5 + 129) = a4;
  *(unsigned char *)(v5 + 128) = a2;
  *(void *)(v5 + 32) = a1;
  uint64_t v6 = sub_100005CB0(&qword_1000F1FD0);
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F1FD8);
  *(void *)(v5 + 80) = v7;
  *(void *)(v5 + 88) = *(void *)(v7 - 8);
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = swift_task_alloc();
  return _swift_task_switch(sub_1000037F4, 0, 0);
}

uint64_t sub_1000037F4()
{
  sub_1000649AC(*(unsigned __int8 *)(v0 + 128), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 129), *(void *)(v0 + 104));
  (*(void (**)(void, void, void))(*(void *)(v0 + 88) + 16))(*(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 80));
  sub_100005F48(&qword_1000F1FE0, &qword_1000F1FD8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F1FE8, &qword_1000F1FD0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000039A8;
  uint64_t v3 = *(void *)(v0 + 56);
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 16, v3, v1);
}

uint64_t sub_1000039A8()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000035FC;
  }
  else {
    uint64_t v2 = sub_100003ABC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100003ABC()
{
  if (*(void *)(v0 + 24) >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 104);
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(_OWORD **)(v0 + 32);
    (*(void (**)(void, void))(*(void *)(v0 + 64) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 56));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    *uint64_t v4 = *(_OWORD *)(v0 + 16);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  return result;
}

uint64_t sub_100003B9C(uint64_t a1, uint64_t *a2)
{
  v2[2] = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  v2[3] = type metadata accessor for CommunicationActor();
  v2[4] = static CommunicationActor.shared.getter();
  uint64_t v5 = (void *)swift_task_alloc();
  v2[5] = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100003C58;
  return sub_1000C6320(v3, v4);
}

uint64_t sub_100003C58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 48) = v2;
  swift_task_dealloc();
  if (v2)
  {
    sub_100005A2C();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    v10 = sub_100005FA4;
  }
  else
  {
    *(void *)(v6 + 56) = a2;
    *(void *)(v6 + 64) = a1;
    sub_100005A2C();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v11;
    v10 = sub_100003DEC;
  }
  return _swift_task_switch(v10, v7, v9);
}

uint64_t sub_100003DEC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = (void *)v0[2];
  swift_release();
  *uint64_t v3 = v2;
  v3[1] = v1;
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100003E64(char a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_100005A2C();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a3;
  swift_retain();
  sub_1000050AC(0x10200u >> (8 * a1), (uint64_t)&unk_1000F1F80, v6);
  swift_release();

  return swift_release();
}

uint64_t sub_100003F80(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a3;
  *(void *)(v4 + 32) = a4;
  *(unsigned char *)(v4 + 72) = a2;
  sub_100005CB0(&qword_1000F1F98);
  *(void *)(v4 + 40) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v4 + 48) = v5;
  *(void *)(v4 + 56) = *(void *)(v5 - 8);
  *(void *)(v4 + 64) = swift_task_alloc();
  return _swift_task_switch(sub_100004074, 0, 0);
}

uint64_t sub_100004074()
{
  v20 = v0;
  static Log.session.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[7];
    uint64_t v18 = v0[8];
    uint64_t v4 = v0[6];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = PhotosFaceType.description.getter();
    v0[2] = sub_100007E88(v6, v7, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Remote device indicated that it has data ready to sync for type %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v18, v4);
  }
  else
  {
    uint64_t v9 = v0[7];
    uint64_t v8 = v0[8];
    uint64_t v10 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  uint64_t v12 = v0[4];
  uint64_t v11 = v0[5];
  uint64_t v13 = v0[3];
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  v15 = (void *)swift_allocObject();
  v15[2] = 0;
  v15[3] = 0;
  v15[4] = v13;
  v15[5] = v12;
  swift_retain();
  sub_1000CDF60(v11, (uint64_t)&unk_1000F1FA8, (uint64_t)v15);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1000042E8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  unint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_1000043B4;
  return v7();
}

uint64_t sub_1000043B4()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1000044A8(char a1, uint64_t a2)
{
  *(void *)(v3 + 32) = a2;
  *(void *)(v3 + 40) = v2;
  *(unsigned char *)(v3 + 88) = a1;
  type metadata accessor for CommunicationActor();
  *(void *)(v3 + 48) = static CommunicationActor.shared.getter();
  sub_100005A2C();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 56) = v5;
  *(void *)(v3 + 64) = v4;
  return _swift_task_switch(sub_100004544, v5, v4);
}

uint64_t sub_100004544()
{
  unsigned int v1 = 0x60903u >> (8 * *(unsigned char *)(v0 + 88));
  uint64_t v5 = (uint64_t (*)(uint64_t, char, uint64_t, char))((char *)&dword_1000F1FC8 + dword_1000F1FC8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100004620;
  uint64_t v3 = *(void *)(v0 + 32);
  return v5(v0 + 16, v1, v3, 1);
}

uint64_t sub_100004620()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    uint64_t v4 = v2[8];
    uint64_t v5 = sub_1000047A0;
  }
  else
  {
    sub_100005C58(v2[2], v2[3]);
    uint64_t v3 = v2[7];
    uint64_t v4 = v2[8];
    uint64_t v5 = sub_10000473C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10000473C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000047A0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100004804(char a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_100005A2C();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unsigned int v6 = 0x60903u >> (8 * a1);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  swift_retain();
  sub_1000C0938(v6, (uint64_t)&unk_1000F1FB8, v7);
  swift_release();

  return swift_release();
}

uint64_t sub_10000491C(uint64_t a1, uint64_t a2, int *a3)
{
  v3[2] = a1;
  v3[3] = type metadata accessor for CommunicationActor();
  v3[4] = static CommunicationActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  unsigned int v6 = (void *)swift_task_alloc();
  v3[5] = v6;
  *unsigned int v6 = v3;
  v6[1] = sub_100004A20;
  return v8(a2);
}

uint64_t sub_100004A20()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  sub_100005A2C();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v0) {
    uint64_t v4 = sub_100004BF0;
  }
  else {
    uint64_t v4 = sub_100004B7C;
  }
  return _swift_task_switch(v4, v3, v2);
}

uint64_t sub_100004B7C()
{
  uint64_t v1 = *(_OWORD **)(v0 + 16);
  swift_release();
  *uint64_t v1 = xmmword_1000D76E0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100004BF0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100004C54()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for PhotosFaceNetworkMessageCenter()
{
  return self;
}

unsigned char *initializeBufferWithCopyOfBuffer for NetworkRequestType(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkEventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkEventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100004E1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_100004E44(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100004E50(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for NetworkEventType()
{
  return &type metadata for NetworkEventType;
}

uint64_t getEnumTagSinglePayload for NetworkRequestType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkRequestType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100004FC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkRequestType()
{
  return &type metadata for NetworkRequestType;
}

unint64_t sub_100005000()
{
  unint64_t result = qword_1000F1F60;
  if (!qword_1000F1F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F1F60);
  }
  return result;
}

unint64_t sub_100005058()
{
  unint64_t result = qword_1000F1F68;
  if (!qword_1000F1F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F1F68);
  }
  return result;
}

uint64_t sub_1000050AC(unsigned int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a2;
  unsigned int v44 = a1;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v10 = static CommunicationActor.shared.getter();
  unint64_t v45 = sub_100005A2C();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  uint64_t v11 = Logger.logObject.getter();
  uint64_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    uint64_t v39 = v6;
    uint64_t v40 = a3;
    uint64_t v41 = v3;
    uint64_t v42 = v10;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    v47[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    if ((_BYTE)v44)
    {
      uint64_t v14 = 0xD000000000000010;
      if (v44 == 1) {
        unint64_t v15 = 0x80000001000D58B0;
      }
      else {
        unint64_t v15 = 0x80000001000D5890;
      }
    }
    else
    {
      unint64_t v15 = 0xEE00796461655263;
      uint64_t v14 = 0x6E79536D75626C61;
    }
    swift_release();
    uint64_t v46 = sub_100007E88(v14, v15, v47);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v12, "Registry: Registering event for %s.", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v39);
    uint64_t v4 = v41;
    a3 = v40;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v43;
  *(void *)(v16 + 24) = a3;
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  char isCurrentExecutor = swift_task_isCurrentExecutor();
  uint64_t v18 = v44;
  if ((isCurrentExecutor & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v19 = (uint64_t *)(v4 + 40);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = v4;
  char v22 = isUniquelyReferenced_nonNull_native;
  uint64_t v46 = *(void *)(v21 + 40);
  uint64_t v23 = v46;
  *(void *)(v21 + 40) = 0x8000000000000000;
  uint64_t v25 = sub_10005074C(v18);
  uint64_t v26 = *(void *)(v23 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27))
  {
    __break(1u);
LABEL_30:
    uint64_t v19 = sub_1000D1D9C(0, v19[2] + 1, 1, v19);
    *(void *)(v12 + 8 * v25) = v19;
    goto LABEL_26;
  }
  char v29 = v24;
  if (*(void *)(v23 + 24) >= v28)
  {
    if ((v22 & 1) == 0)
    {
      sub_100053EB0();
      uint64_t v23 = v46;
    }
  }
  else
  {
    sub_1000517EC(v28, v22);
    uint64_t v23 = v46;
    uint64_t v30 = sub_10005074C(v18);
    if ((v29 & 1) != (v31 & 1))
    {
      uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      return result;
    }
    uint64_t v25 = v30;
  }
  *uint64_t v19 = v23;
  swift_bridgeObjectRelease();
  uint64_t v32 = *v19;
  swift_bridgeObjectRetain();
  if ((v29 & 1) == 0)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_100053C08(v25, v18, _swiftEmptyArrayStorage, v32);
  }
  uint64_t v12 = *(void *)(v32 + 56);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(uint64_t **)(v12 + 8 * v25);
  char v33 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 8 * v25) = v19;
  if ((v33 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_26:
  unint64_t v35 = v19[2];
  unint64_t v34 = v19[3];
  if (v35 >= v34 >> 1)
  {
    uint64_t v19 = sub_1000D1D9C((void *)(v34 > 1), v35 + 1, 1, v19);
    *(void *)(v12 + 8 * v25) = v19;
  }
  v19[2] = v35 + 1;
  v36 = &v19[2 * v35];
  v36[4] = (uint64_t)&unk_1000F1F90;
  v36[5] = v16;
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_10000563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  v4[6] = a4;
  v4[4] = a2;
  type metadata accessor for CommunicationActor();
  v4[7] = static CommunicationActor.shared.getter();
  sub_100005A2C();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_1000056D8, v6, v5);
}

uint64_t sub_1000056D8()
{
  MessageBody.deserialized<A>()();
  uint64_t v3 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 40) + **(int **)(v0 + 40));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005818;
  return v3(v0 + 16);
}

uint64_t sub_100005818()
{
  int v2 = (void *)*v1;
  v2[11] = v0;
  swift_task_dealloc();
  sub_100005C58(v2[2], v2[3]);
  uint64_t v3 = v2[8];
  uint64_t v4 = v2[9];
  if (v0) {
    uint64_t v5 = sub_1000059B8;
  }
  else {
    uint64_t v5 = sub_100005954;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100005954()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000059B8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100005A1C(uint64_t result)
{
  if (result >= 0xB) {
    return 11;
  }
  else {
    return result;
  }
}

unint64_t sub_100005A2C()
{
  unint64_t result = qword_1000F1F70;
  if (!qword_1000F1F70)
  {
    type metadata accessor for CommunicationActor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000F1F70);
  }
  return result;
}

uint64_t sub_100005A84()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100005ABC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100005F94;
  return sub_100003F80(a1, v6, v4, v5);
}

uint64_t sub_100005B6C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100005BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1000043B4;
  return sub_10000563C(a1, a2, v7, v6);
}

uint64_t sub_100005C58(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100005CB0(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100005CF4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100005D34()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005F94;
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[2] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1000043B4;
  return v6();
}

uint64_t sub_100005E4C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005F94;
  return sub_10000491C(a1, a2, v6);
}

uint64_t sub_100005F00(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_100005F48(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100005F00(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100005FAC(uint64_t a1, uint64_t a2)
{
  return sub_100006088(a1, a2, &OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_endTime);
}

uint64_t sub_100005FCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_startTime;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for ContinuousClock.Instant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_100006068(uint64_t a1, uint64_t a2)
{
  return sub_100006088(a1, a2, &OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_cancelTime);
}

uint64_t sub_100006088(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100005CB0(&qword_1000F2248);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v12);
  sub_100006BBC((uint64_t)v11, (uint64_t)v9);
  uint64_t v14 = a1 + *a3;
  swift_beginAccess();
  sub_100006C24((uint64_t)v9, v14);
  return swift_endAccess();
}

uint64_t sub_1000061F4(uint64_t result)
{
  *(unsigned char *)(result + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_errored) = 1;
  return result;
}

void sub_100006208()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v40 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - v6;
  uint64_t v8 = sub_100005CB0(&qword_1000F2248);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = v1 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_endTime;
  swift_beginAccess();
  sub_100006C8C(v14, (uint64_t)v13);
  unint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
  int v16 = v15(v13, 1, v2);
  uint64_t v17 = 0;
  uint64_t v42 = 0;
  int v41 = v16;
  if (v16 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v13, v2);
    uint64_t v18 = v1 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_startTime;
    swift_beginAccess();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v39 = v15;
    v20 = v7;
    uint64_t v21 = v40;
    v19(v40, v18, v2);
    swift_retain();
    uint64_t v22 = ContinuousClock.Instant.duration(to:)();
    uint64_t v42 = v23;
    char v24 = *(void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v25 = v21;
    uint64_t v7 = v20;
    unint64_t v15 = v39;
    v24(v25, v2);
    v24(v7, v2);
    uint64_t v17 = v22;
    swift_release();
  }
  uint64_t v26 = v1 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_cancelTime;
  swift_beginAccess();
  sub_100006C8C(v26, (uint64_t)v11);
  int v27 = v15(v11, 1, v2);
  uint64_t v28 = 0;
  uint64_t v29 = 0;
  if (v27 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v11, v2);
    uint64_t v30 = v1 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_startTime;
    swift_beginAccess();
    char v31 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v40, v30, v2);
    swift_retain();
    uint64_t v28 = ContinuousClock.Instant.duration(to:)();
    uint64_t v29 = v32;
    char v33 = *(void (**)(char *, uint64_t))(v3 + 8);
    v33(v31, v2);
    v33(v7, v2);
    swift_release();
  }
  BOOL v34 = v41 == 1;
  NSString v35 = String._bridgeToObjectiveC()();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v1;
  *(void *)(v36 + 24) = v17;
  *(void *)(v36 + 32) = v42;
  *(unsigned char *)(v36 + 40) = v34;
  *(void *)(v36 + 48) = v28;
  *(void *)(v36 + 56) = v29;
  *(unsigned char *)(v36 + 64) = v27 == 1;
  aBlock[4] = sub_100006D2C;
  aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100006888;
  aBlock[3] = &unk_1000EE070;
  v37 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  AnalyticsSendEventLazy();
  _Block_release(v37);
}

unint64_t sub_10000668C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7)
{
  sub_100005CB0(&qword_1000F2258);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1000D7900;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = 0x70616C45656D6974;
  *(void *)(inited + 64) = 0xEB00000000646573;
  if ((a4 & 1) == 0) {
    Duration.components.getter();
  }
  *(NSNumber *)(inited + 72) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 80) = 0x656C6C65636E6163;
  *(void *)(inited + 88) = 0xE900000000000064;
  if ((a7 & 1) == 0) {
    Duration.components.getter();
  }
  *(NSNumber *)(inited + 96) = Int64._bridgeToObjectiveC()();
  *(void *)(inited + 104) = 0x6465726F727265;
  *(void *)(inited + 112) = 0xE700000000000000;
  *(NSNumber *)(inited + 120) = Bool._bridgeToObjectiveC()();
  return sub_100040784(inited);
}

Class sub_100006888(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_100006D5C();
    v4.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_100006914()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_startTime;
  uint64_t v2 = type metadata accessor for ContinuousClock.Instant();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100006D9C(v0 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_cancelTime);
  sub_100006D9C(v0 + OBJC_IVAR____TtCC11photosfaced9Analytics14BackgroundTask_endTime);
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t Analytics.deinit()
{
  return v0;
}

uint64_t Analytics.__deallocating_deinit()
{
  return _swift_deallocClassInstance(v0, 16, 7);
}

uint64_t type metadata accessor for Analytics()
{
  return self;
}

uint64_t sub_100006A20()
{
  return type metadata accessor for Analytics.BackgroundTask();
}

uint64_t type metadata accessor for Analytics.BackgroundTask()
{
  uint64_t result = qword_1000F2108;
  if (!qword_1000F2108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100006A74()
{
  type metadata accessor for ContinuousClock.Instant();
  if (v0 <= 0x3F)
  {
    sub_100006B64();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_100006B64()
{
  if (!qword_1000F2118)
  {
    type metadata accessor for ContinuousClock.Instant();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F2118);
    }
  }
}

uint64_t sub_100006BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100006C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100006C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2248);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100006CF4()
{
  swift_release();

  return _swift_deallocObject(v0, 65, 7);
}

unint64_t sub_100006D2C()
{
  return sub_10000668C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
}

uint64_t sub_100006D44(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100006D54()
{
  return swift_release();
}

unint64_t sub_100006D5C()
{
  unint64_t result = qword_1000F2250;
  if (!qword_1000F2250)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000F2250);
  }
  return result;
}

uint64_t sub_100006D9C(uint64_t a1)
{
  uint64_t v2 = sub_100005CB0(&qword_1000F2248);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t exponentialBackoff<A>(isolation:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[17] = a5;
  v6[18] = a6;
  v6[15] = a1;
  v6[16] = a4;
  uint64_t v8 = type metadata accessor for ContinuousClock.Instant();
  v6[19] = v8;
  v6[20] = *(void *)(v8 - 8);
  v6[21] = swift_task_alloc();
  v6[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v6[23] = v9;
  v6[24] = *(void *)(v9 - 8);
  v6[25] = swift_task_alloc();
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for ExponentialBackoffResult();
  v6[28] = v10;
  v6[29] = *(void *)(v10 - 8);
  v6[30] = swift_task_alloc();
  v6[31] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ContinuousClock();
  v6[32] = v11;
  v6[33] = *(void *)(v11 - 8);
  v6[34] = swift_task_alloc();
  if (a2)
  {
    swift_getObjectType();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v14 = v13;
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  v6[35] = v12;
  v6[36] = v14;
  return _swift_task_switch(sub_100007050, v12, v14);
}

uint64_t sub_100007050()
{
  v0[11] = static Duration.seconds(_:)();
  v0[12] = v1;
  ContinuousClock.init()();
  swift_beginAccess();
  uint64_t v5 = (uint64_t (*)(uint64_t))(v0[16] + *(int *)v0[16]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[37] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100007168;
  uint64_t v3 = v0[31];
  return v5(v3);
}

uint64_t sub_100007168()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 288);
  uint64_t v4 = *(void *)(v2 + 280);
  if (v0) {
    uint64_t v5 = sub_100007AA4;
  }
  else {
    uint64_t v5 = sub_1000072A4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000072A4()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 144);
  (*(void (**)(uint64_t, void, void))(*(void *)(v0 + 232) + 16))(v1, *(void *)(v0 + 248), *(void *)(v0 + 224));
  uint64_t v3 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    static Log.default.getter();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 216);
    uint64_t v8 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 192);
    if (v6)
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      uint64_t v11 = Duration.description.getter();
      *(void *)(v10 + 4) = sub_100007E88(v11, v12, &v22);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Sleeping for %s", (uint8_t *)v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v13(v7, v8);
    *(void *)(v0 + 312) = v13;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 88);
    *(void *)(v0 + 64) = 0;
    *(void *)(v0 + 72) = 0;
    *(unsigned char *)(v0 + 80) = 1;
    return _swift_task_switch(sub_1000075A8, 0, 0);
  }
  else
  {
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v14 = *(void *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 240);
    uint64_t v18 = *(void *)(v0 + 144);
    uint64_t v19 = *(void *)(v0 + 120);
    (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 224));
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v19, v17, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
}

uint64_t sub_1000075A8()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v4 = sub_100007E40(&qword_1000F2268, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_100007E40(&qword_1000F2270, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  os_log_type_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[40] = v5;
  v0[41] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  BOOL v6 = (void *)swift_task_alloc();
  v0[42] = v6;
  *BOOL v6 = v0;
  v6[1] = sub_100007740;
  uint64_t v7 = v0[32];
  uint64_t v8 = v0[22];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 8, v7, v4);
}

uint64_t sub_100007740()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 320);
  uint64_t v4 = *(void *)(*v1 + 176);
  uint64_t v5 = *(void *)(*v1 + 152);
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    BOOL v6 = sub_100007B84;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 280);
    uint64_t v8 = *(void *)(v2 + 288);
    BOOL v6 = sub_1000078C8;
  }
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_1000078C8()
{
  static Log.default.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Done sleeping.", v3, 2u);
    swift_slowDealloc();
  }

  uint64_t v4 = *(void *)(v0 + 248);
  uint64_t v5 = *(void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 208), *(void *)(v0 + 184));
  swift_beginAccess();
  static DurationProtocol.*= infix(_:_:)();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  uint64_t v10 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 128) + **(int **)(v0 + 128));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100007168;
  uint64_t v8 = *(void *)(v0 + 248);
  return v10(v8);
}

uint64_t sub_100007AA4()
{
  (*(void (**)(void, void))(v0[33] + 8))(v0[34], v0[32]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100007B84()
{
  return _swift_task_switch(sub_100007B9C, *(void *)(v0 + 280), *(void *)(v0 + 288));
}

uint64_t sub_100007B9C()
{
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error Sleeping %@", (uint8_t *)v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v7 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 232);
  (*(void (**)(void, void))(v0 + 312))(*(void *)(v0 + 200), *(void *)(v0 + 184));
  swift_beginAccess();
  static DurationProtocol.*= infix(_:_:)();
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  unint64_t v12 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 128) + **(int **)(v0 + 128));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100007168;
  uint64_t v10 = *(void *)(v0 + 248);
  return v12(v10);
}

uint64_t type metadata accessor for ExponentialBackoffResult()
{
  return sub_100009140();
}

uint64_t sub_100007E40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100007E88(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_100007F5C(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1000090E0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1000090E0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_100009090((uint64_t)v12);
  return v7;
}

uint64_t sub_100007F5C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            UnsafeMutableRawBufferPointer.subscript.setter();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_100008118(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = _StringObject.sharedUTF8.getter();
  if (!v8)
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
LABEL_17:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_100008118(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_1000081B0(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100008390(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100008390(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_1000081B0(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_100008328(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = _StringGuts.copyUTF8(into:)();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
LABEL_10:
      uint64_t v2 = String.UTF8View._foreignCount()();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_100008328(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  sub_100005CB0(&qword_1000F2300);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_100008390(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005CB0(&qword_1000F2300);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000084E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

uint64_t sub_1000084E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100008564(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1000086A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_100008764(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_10000885C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1000089C8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_100008AC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_100008C2C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_100008DCC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x100009008);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_100009030(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_100009060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t sub_100009090(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1000090E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100009140()
{
  return swift_getGenericMetadata();
}

id sub_100009170(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v9 = (NSURL *)((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v10 = (char *)((char *)&v18 - (char *)v9);
  URL._bridgeToObjectiveC()(v9);
  unsigned int v12 = v11;
  id v18 = 0;
  unsigned int v13 = [v3 removeItemAtURL:v11 error:&v18];

  if (v13) {
    return v18;
  }
  id v15 = v18;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
  if (a2)
  {
    URL.path(percentEncoded:)(1);
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v17 = [v3 fileExistsAtPath:v16];

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    if ((v17 & 1) == 0) {
      return (id)swift_errorRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return (id)swift_willThrow();
}

id sub_100009374(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  id v4 = v3;
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  v68 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  v69 = (char *)v66 - v13;
  if (!a3)
  {
    URL._bridgeToObjectiveC()((NSURL *)a3);
    uint64_t v26 = v25;
    URL._bridgeToObjectiveC()(v27);
    uint64_t v29 = v28;
    id v75 = 0;
    unsigned int v30 = [v4 copyItemAtURL:v26 toURL:v28 error:&v75];

    id v20 = v75;
    if (!v30)
    {
      id v38 = v75;
      _convertNSErrorToError(_:)();

      return (id)swift_willThrow();
    }
    return v20;
  }
  if (a3 == 1)
  {
    URL._bridgeToObjectiveC()((NSURL *)a3);
    id v15 = v14;
    URL._bridgeToObjectiveC()(v16);
    id v18 = v17;
    id v75 = 0;
    unsigned int v19 = [v4 copyItemAtURL:v15 toURL:v17 error:&v75];

    id v20 = v75;
    if (!v19)
    {
      id v21 = v75;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      URL.path(percentEncoded:)(1);
      uint64_t v22 = v4;
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      LOBYTE(v22) = [v22 fileExistsAtPath:v23];

      if (v22) {
        return (id)swift_errorRelease();
      }
      return (id)swift_willThrow();
    }
    return v20;
  }
  uint64_t v74 = v12;
  URL._bridgeToObjectiveC()((NSURL *)a3);
  uint64_t v32 = v31;
  URL._bridgeToObjectiveC()(v33);
  NSString v35 = v34;
  id v75 = 0;
  unsigned __int8 v36 = [v4 copyItemAtURL:v32 toURL:v34 error:&v75];

  id v37 = v75;
  if (v36) {
    return v37;
  }
  v70 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v71 = (void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v39 = 11;
  v66[1] = a1;
  id v67 = v4;
  uint64_t v40 = v69;
  while (1)
  {
    id v49 = v37;
    uint64_t v50 = _convertNSErrorToError(_:)();

    uint64_t v73 = v50;
    swift_willThrow();
    v51 = *v70;
    uint64_t v52 = v74;
    (*v70)(v40, a2, v74);
    uint64_t v53 = v39 - 1;
    if (!v53)
    {
      (*v71)(v40, v52);
      return (id)swift_willThrow();
    }
    uint64_t v72 = v53;
    uint64_t v54 = a2;
    URL.path(percentEncoded:)(1);
    NSString v55 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v56 = [v4 fileExistsAtPath:v55];

    v57 = *v71;
    (*v71)(v40, v52);
    if ((v56 & 1) == 0) {
      return (id)swift_willThrow();
    }
    URL._bridgeToObjectiveC()(v58);
    v60 = v59;
    id v75 = 0;
    unsigned int v61 = [v4 removeItemAtURL:v59 error:&v75];

    if (!v61) {
      break;
    }
    id v41 = v75;
LABEL_13:
    swift_errorRelease();
    URL._bridgeToObjectiveC()(v42);
    unsigned int v44 = v43;
    a2 = v54;
    URL._bridgeToObjectiveC()(v45);
    v47 = v46;
    id v75 = 0;
    id v4 = v67;
    unsigned __int8 v48 = [v67 copyItemAtURL:v44 toURL:v46 error:&v75];

    id v37 = v75;
    uint64_t v39 = v72;
    if (v48) {
      return v37;
    }
  }
  id v62 = v75;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  v63 = v68;
  v51(v68, v54, v74);
  URL.path(percentEncoded:)(1);
  NSString v64 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v65 = [v4 fileExistsAtPath:v64];

  v57(v63, v74);
  if ((v65 & 1) == 0)
  {
    swift_errorRelease();
    uint64_t v40 = v69;
    goto LABEL_13;
  }
  swift_willThrow();
  return (id)swift_errorRelease();
}

uint64_t sub_10000988C(uint64_t a1)
{
  __chkstk_darwin(a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return String.init<A>(describing:)();
}

uint64_t sub_100009944(char a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = PhotosFaceType.description.getter();
    uint64_t v13 = v2;
    uint64_t v14 = sub_100007E88(v9, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Sending %s Update Darwin Notification.", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v13);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return notify_post(*(const char **)*(&off_1000EE108 + a1));
}

uint64_t sub_100009B50(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v32 = (char *)&v30 - v14;
  swift_defaultActor_initialize();
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a2;
  IOPMAssertionID AssertionID = 0;
  swift_bridgeObjectRetain();
  uint64_t v15 = (__CFString *)String._bridgeToObjectiveC()();
  uint64_t v33 = a1;
  NSString v16 = (__CFString *)String._bridgeToObjectiveC()();
  unsigned __int8 v17 = (__CFString *)String._bridgeToObjectiveC()();
  Duration.timeInterval.getter();
  CFTimeInterval v19 = v18;
  id v20 = (__CFString *)String._bridgeToObjectiveC()();
  IOReturn v21 = IOPMAssertionCreateWithDescription(v15, v16, v17, 0, 0, v19, v20, &AssertionID);

  if (v21)
  {
    swift_bridgeObjectRelease();
    *(_DWORD *)(v5 + 112) = 0;
    static Log.default.getter();
    swift_bridgeObjectRetain();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100007E88(v33, a2, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Failed to create power assertion for %s", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
  }
  else
  {
    uint64_t v31 = v5;
    *(_DWORD *)(v5 + 112) = AssertionID;
    uint64_t v25 = v32;
    static Log.default.getter();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100007E88(v33, a2, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v28 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100007E88(a3, a4, &v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Created power assertion: %s for %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v35);
    return v31;
  }
  return v5;
}

uint64_t sub_10000A040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10000A060, a4, 0);
}

uint64_t sub_10000A060()
{
  sub_10000A350();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10000A0C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  IOPMAssertionID v6 = *(_DWORD *)(v1 + 112);
  if (v6)
  {
    uint64_t v8 = *(void *)(v1 + 120);
    unint64_t v7 = *(void *)(v1 + 128);
    swift_bridgeObjectRetain();
    IOPMAssertionRelease(v6);
    *(_DWORD *)(v1 + 112) = 0;
    static Log.default.getter();
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v15 = v2;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v8;
      uint64_t v12 = (uint8_t *)v11;
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_100007E88(v14, v7, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Closing power assertion on close for %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v15);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v1;
}

uint64_t sub_10000A300()
{
  sub_10000A0C0();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for PowerAssertion()
{
  return self;
}

uint64_t sub_10000A350()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  IOPMAssertionID v6 = *(_DWORD *)(v0 + 112);
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 120);
    unint64_t v7 = *(void *)(v0 + 128);
    swift_bridgeObjectRetain();
    IOPMAssertionRelease(v6);
    *(_DWORD *)(v0 + 112) = 0;
    static Log.default.getter();
    swift_bridgeObjectRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v14 = v8;
      uint64_t v12 = (uint8_t *)v11;
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_100007E88(v14, v7, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Closing power assertion on close for %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_10000A56C()
{
  return v0;
}

uint64_t sub_10000A578()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v4 = static CommunicationActor.shared.getter();
  sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v12[1] = v4;
    uint64_t v13 = v0;
    unint64_t v7 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    uint64_t v15 = v12[0];
    *(_DWORD *)unint64_t v7 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for NetworkConnection();
    sub_10000E6E8(&qword_1000F24B0, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
    uint64_t v8 = Set.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100007E88(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[ICM] Current connections: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return swift_release();
}

void *sub_10000A8FC()
{
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    uint64_t v1 = (void *)sub_1000C7B94((unint64_t)&_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v1 = &_swiftEmptySetSingleton;
  }
  v0[3] = v1;
  type metadata accessor for NWListener();
  v0[4] = 0;
  v0[5] = 0;
  _s11photosfaced16NetworkConstantsO10parameters6domain4type0B012NWParametersCSS_SStFZ_0(0xD000000000000016, 0x80000001000D5820, 0x6E657473694C5341, 0xEA00000000007265);
  v0[2] = NWListener.__allocating_init(applicationService:using:)();
  swift_retain();
  swift_retain();
  NWListener.newConnectionHandler.setter();
  swift_release();
  swift_retain();
  swift_retain();
  NWListener.stateUpdateHandler.setter();
  swift_release();
  return v0;
}

uint64_t sub_10000AA6C()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_10000AAE0(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_10000ABBC(a2);
  return swift_release();
}

uint64_t sub_10000ABBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v9 = static CommunicationActor.shared.getter();
  uint64_t v34 = sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  type metadata accessor for NetworkConnection();
  uint64_t v10 = swift_allocObject();
  type metadata accessor for NetworkCanceller();
  uint64_t v11 = swift_allocObject();
  sub_100005CB0(&qword_1000F2498);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = 0;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v12;
  *(void *)(v10 + 16) = v11;
  swift_retain();
  static Log.network.getter();
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v33 = v9;
  if (v15)
  {
    uint64_t v29 = v1;
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    v35[0] = v28;
    *(_DWORD *)uint64_t v16 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v17 = sub_10007B7D4();
    unint64_t v19 = v18;
    swift_release();
    swift_release();
    uint64_t v36 = sub_100007E88(v17, v19, v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "[ICM] Found new incoming connection: %s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
    uint64_t v2 = v29;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v31);
  }
  uint64_t v20 = v34;
  uint64_t v21 = (uint64_t)v32;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  swift_retain();
  swift_retain();
  uint64_t v23 = static CommunicationActor.shared.getter();
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v23;
  v24[3] = v20;
  v24[4] = v10;
  v24[5] = v2;
  sub_10006702C(v21, (uint64_t)&unk_1000F24A8, (uint64_t)v24);
  swift_release();
  swift_release();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v2;
  *(void *)(v25 + 24) = v10;
  swift_retain();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_retain();
  NWConnection.stateUpdateHandler.setter();
  swift_release();
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_1000746F0();
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_10005BBEC(&v36, v10);
  swift_endAccess();
  swift_release();
  sub_10000A578();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10000B254()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_10000B2C8(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_10000E174(a2);
  return swift_release();
}

uint64_t sub_10000B398()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_10000B414(uint64_t a1, char *a2, uint64_t a3)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_10000B500(a2, a3);
  return swift_release();
}

uint64_t sub_10000B500(char *a1, uint64_t a2)
{
  v153 = a1;
  uint64_t v3 = type metadata accessor for NWError();
  os_log_t v151 = *(os_log_t *)(v3 - 8);
  v152 = (_DWORD *)v3;
  uint64_t v4 = __chkstk_darwin(v3);
  v145 = ((char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __chkstk_darwin(v4);
  v146 = (char *)&v133 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v141 = (uint64_t *)((char *)&v133 - v9);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (_DWORD *)((char *)&v133 - v11);
  __chkstk_darwin(v10);
  os_log_t v143 = (os_log_t)((char *)&v133 - v13);
  uint64_t v14 = type metadata accessor for Logger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v147 = v14;
  uint64_t v148 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v136 = (char *)&v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v139 = (char *)&v133 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v138 = (char *)&v133 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v133 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  v135 = (char *)&v133 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  v142 = (char *)&v133 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v140 = (char *)&v133 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v133 - v31;
  uint64_t v33 = type metadata accessor for NWConnection.State();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  v134 = (char *)&v133 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  v137 = (char *)&v133 - v38;
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v133 - v39;
  uint64_t v41 = type metadata accessor for CommunicationActor();
  uint64_t v42 = static CommunicationActor.shared.getter();
  uint64_t v43 = sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v149 = v42;
  uint64_t v144 = v41;
  uint64_t v150 = v43;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unsigned int v44 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v44(v40, a2, v33);
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v40, v33);
  if (v45 == enum case for NWConnection.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v40, v33);
    os_log_t v47 = v151;
    uint64_t v46 = v152;
    unsigned __int8 v48 = v146;
    ((void (*)(char *, char *, _DWORD *))v151[4].isa)(v146, v40, v152);
    static Log.network.getter();
    isa = (char *)v47[2].isa;
    uint64_t v50 = v145;
    ((void (*)(NSObject *, char *, _DWORD *))isa)(v145, v48, v46);
    swift_retain_n();
    v51 = Logger.logObject.getter();
    int v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, (os_log_type_t)v52))
    {
      v139 = isa;
      LODWORD(v140) = v52;
      os_log_t v143 = v51;
      uint64_t v53 = swift_slowAlloc();
      v141 = (void *)swift_slowAlloc();
      v142 = (char *)swift_slowAlloc();
      v156[0] = (uint64_t)v142;
      *(_DWORD *)uint64_t v53 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v54 = sub_10007B7D4();
      unint64_t v56 = v55;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v54, v56, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v53 + 12) = 2112;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_10000E6E8(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
      v57 = v152;
      swift_allocError();
      v58 = v145;
      ((void (*)(uint64_t, NSObject *, _DWORD *))v139)(v59, v145, v57);
      swift_release();
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v154 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v141 = v60;
      Class v61 = v151[1].isa;
      ((void (*)(NSObject *, _DWORD *))v61)(v58, v57);
      os_log_t v62 = v143;
      _os_log_impl((void *)&_mh_execute_header, v143, (os_log_type_t)v140, "[ICM] %s waiting with error: %@", (uint8_t *)v53, 0x16u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v148 + 8))(v24, v147);
      ((void (*)(char *, _DWORD *))v61)(v146, v57);
    }
    else
    {

      v76 = (void (*)(void, void))v47[1].isa;
      v76(v50, v46);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v24, v147);
      v76(v48, v46);
    }
    goto LABEL_49;
  }
  if (v45 == enum case for NWConnection.State.failed(_:))
  {
    (*(void (**)(char *, uint64_t))(v34 + 96))(v40, v33);
    os_log_t v63 = v151;
    os_log_t v64 = v143;
    unsigned __int8 v65 = v40;
    v66 = v152;
    ((void (*)(os_log_t, char *, _DWORD *))v151[4].isa)(v143, v65, v152);
    *uint64_t v12 = 60;
    ((void (*)(_DWORD *, void, _DWORD *))v63[13].isa)(v12, enum case for NWError.posix(_:), v66);
    char v67 = static NWError.== infix(_:_:)();
    v68 = (char *)v63[1].isa;
    ((void (*)(_DWORD *, _DWORD *))v68)(v12, v66);
    v146 = v68;
    if (v67)
    {
      v69 = v140;
      static Log.network.getter();
      swift_retain_n();
      v70 = Logger.logObject.getter();
      os_log_type_t v71 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v70, v71))
      {
        uint64_t v72 = (uint8_t *)swift_slowAlloc();
        v156[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v72 = 136315138;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v73 = sub_10007B7D4();
        unint64_t v75 = v74;
        swift_release();
        swift_release();
        uint64_t v154 = sub_100007E88(v73, v75, v156);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v70, v71, "[ICM] %s timed out", v72, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v148 + 8))(v140, v147);
        v66 = v152;
        os_log_t v64 = v143;
        goto LABEL_37;
      }

      swift_release_n();
    }
    else
    {
      v145 = v63 + 1;
      v69 = v142;
      static Log.network.getter();
      v86 = (char *)v63[2].isa;
      v85 = v63 + 2;
      v84 = v86;
      v87 = v141;
      ((void (*)(void *, os_log_t, _DWORD *))v86)(v141, v64, v66);
      swift_retain_n();
      v88 = Logger.logObject.getter();
      int v89 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v88, (os_log_type_t)v89))
      {
        v137 = v84;
        LODWORD(v138) = v89;
        os_log_t v151 = v85;
        uint64_t v90 = swift_slowAlloc();
        v139 = (char *)swift_slowAlloc();
        v140 = (char *)swift_slowAlloc();
        v156[0] = (uint64_t)v140;
        *(_DWORD *)uint64_t v90 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v91 = sub_10007B7D4();
        unint64_t v93 = v92;
        swift_release();
        swift_release();
        uint64_t v154 = sub_100007E88(v91, v93, v156);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v90 + 12) = 2112;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        sub_10000E6E8(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
        v66 = v152;
        swift_allocError();
        v94 = v141;
        ((void (*)(uint64_t, void *, _DWORD *))v137)(v95, v141, v66);
        swift_release();
        uint64_t v96 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v154 = v96;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(void *)v139 = v96;
        ((void (*)(void *, _DWORD *))v146)(v94, v66);
        _os_log_impl((void *)&_mh_execute_header, v88, (os_log_type_t)v138, "[ICM] %s failed with error: %@", (uint8_t *)v90, 0x16u);
        sub_100005CB0(qword_1000F2278);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v148 + 8))(v142, v147);
        os_log_t v64 = v143;
        goto LABEL_37;
      }
      swift_release_n();
      ((void (*)(void *, _DWORD *))v68)(v87, v66);
    }
    (*(void (**)(char *, uint64_t))(v148 + 8))(v69, v147);
LABEL_37:
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100074B98();
    swift_release();
    ((void (*)(os_log_t, _DWORD *))v146)(v64, v66);
    goto LABEL_49;
  }
  if (v45 == enum case for NWConnection.State.setup(_:))
  {
    v77 = v139;
    static Log.network.getter();
    swift_retain_n();
    v78 = Logger.logObject.getter();
    os_log_type_t v79 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v78, v79))
    {
      v80 = (uint8_t *)swift_slowAlloc();
      v156[0] = swift_slowAlloc();
      *(_DWORD *)v80 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v81 = sub_10007B7D4();
      unint64_t v83 = v82;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v81, v83, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v78, v79, "[ICM] %s setup", v80, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_48;
    }

    goto LABEL_47;
  }
  if (v45 == enum case for NWConnection.State.preparing(_:))
  {
    v77 = v138;
    static Log.network.getter();
    swift_retain_n();
    v97 = Logger.logObject.getter();
    os_log_type_t v98 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v97, v98))
    {
      v99 = (uint8_t *)swift_slowAlloc();
      v156[0] = swift_slowAlloc();
      *(_DWORD *)v99 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v100 = sub_10007B7D4();
      unint64_t v102 = v101;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v100, v102, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_type_t v103 = v98;
      v104 = "[ICM] %s preparing";
LABEL_45:
      _os_log_impl((void *)&_mh_execute_header, v97, v103, v104, v99, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_48:
      (*(void (**)(char *, uint64_t))(v148 + 8))(v77, v147);
      goto LABEL_49;
    }
    goto LABEL_46;
  }
  if (v45 == enum case for NWConnection.State.ready(_:))
  {
    v77 = v32;
    static Log.network.getter();
    swift_retain_n();
    v97 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v97, v105))
    {
      v99 = (uint8_t *)swift_slowAlloc();
      v156[0] = swift_slowAlloc();
      *(_DWORD *)v99 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v106 = sub_10007B7D4();
      unint64_t v108 = v107;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v106, v108, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_type_t v103 = v105;
      v104 = "[ICM] %s changed to ready";
      goto LABEL_45;
    }
LABEL_46:

LABEL_47:
    swift_release_n();
    goto LABEL_48;
  }
  if (v45 == enum case for NWConnection.State.cancelled(_:))
  {
    v111 = v135;
    static Log.network.getter();
    swift_retain_n();
    v112 = Logger.logObject.getter();
    os_log_type_t v113 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v112, v113))
    {
      v114 = (uint8_t *)swift_slowAlloc();
      v156[0] = swift_slowAlloc();
      *(_DWORD *)v114 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v115 = sub_10007B7D4();
      unint64_t v117 = v116;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v115, v117, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v112, v113, "[ICM] %s cancelled", v114, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v148 + 8))(v135, v147);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v111, v147);
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    sub_100015E98();
    swift_endAccess();
    swift_release();
    sub_10000A578();
    swift_release();
  }
  else
  {
    v118 = v136;
    static Log.network.getter();
    v44(v137, a2, v33);
    swift_retain_n();
    v119 = Logger.logObject.getter();
    int v120 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v119, (os_log_type_t)v120))
    {
      LODWORD(v146) = v120;
      os_log_t v151 = v119;
      v121 = (_DWORD *)swift_slowAlloc();
      v145 = swift_slowAlloc();
      v156[0] = (uint64_t)v145;
      v152 = v121;
      _DWORD *v121 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v122 = v152;
      v142 = (char *)(v152 + 1);
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v123 = sub_10007B7D4();
      unint64_t v125 = v124;
      swift_release();
      swift_release();
      uint64_t v154 = sub_100007E88(v123, v125, v156);
      os_log_t v143 = (os_log_t)&v155;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *((_WORD *)v122 + 6) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v126 = (uint8_t *)v152;
      v153 = (char *)v152 + 14;
      v127 = v137;
      v44(v134, (uint64_t)v137, v33);
      uint64_t v128 = String.init<A>(describing:)();
      unint64_t v130 = v129;
      swift_release();
      uint64_t v154 = sub_100007E88(v128, v130, v156);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v131 = *(void (**)(char *, uint64_t))(v34 + 8);
      v131(v127, v33);
      os_log_t v132 = v151;
      _os_log_impl((void *)&_mh_execute_header, v151, (os_log_type_t)v146, "[ICM] %s Unknown state: %s", v126, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v148 + 8))(v136, v147);
    }
    else
    {
      swift_release_n();
      v131 = *(void (**)(char *, uint64_t))(v34 + 8);
      v131(v137, v33);

      (*(void (**)(char *, uint64_t))(v148 + 8))(v118, v147);
    }
    v131(v40, v33);
  }
LABEL_49:
  swift_beginAccess();
  uint64_t v109 = swift_bridgeObjectRetain();
  sub_10000DDE8(v109);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10000CF6C()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_10000CFD8(*(void *)(v0 + 32));

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for IncomingConnectionManager()
{
  return self;
}

uint64_t sub_10000CFD8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_10000CFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[11] = a4;
  v5[12] = a5;
  uint64_t v6 = type metadata accessor for Message();
  v5[13] = v6;
  v5[14] = *(void *)(v6 - 8);
  v5[15] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v5[16] = v7;
  v5[17] = *(void *)(v7 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = type metadata accessor for CommunicationActor();
  v5[21] = static CommunicationActor.shared.getter();
  v5[22] = sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[23] = v9;
  v5[24] = v8;
  return _swift_task_switch(sub_10000D180, v9, v8);
}

uint64_t sub_10000D180()
{
  uint64_t v18 = v0;
  v0[25] = *(void *)(v0[11] + 16);
  swift_retain();
  uint64_t v1 = sub_10007B7D4();
  unint64_t v3 = v2;
  swift_release();
  v0[26] = v1;
  v0[27] = v3;
  static Log.network.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = v0[17];
    uint64_t v15 = v0[16];
    uint64_t v16 = v0[19];
    swift_bridgeObjectRetain();
    swift_release();
    v0[10] = sub_100007E88(v1, v3, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "[ICM] Listening for messages on %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v8(v16, v15);
  }
  else
  {
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[16];
    uint64_t v11 = v0[17];
    swift_bridgeObjectRelease_n();

    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v8(v9, v10);
  }
  v0[28] = v8;
  sub_100071468();
  uint64_t v12 = (void *)swift_task_alloc();
  v0[29] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_10000D438;
  uint64_t v13 = v0[15];
  return sub_100071EC0(v13);
}

uint64_t sub_10000D438()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  if (v0) {
    os_log_type_t v5 = sub_10000D948;
  }
  else {
    os_log_type_t v5 = sub_10000D574;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10000D574()
{
  uint64_t v1 = v0[12];
  swift_beginAccess();
  uint64_t v2 = *(int **)(v1 + 32);
  v0[31] = v2;
  if (v2)
  {
    v0[32] = *(void *)(v0[12] + 40);
    swift_endAccess();
    uint64_t v8 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
    swift_retain();
    uint64_t v3 = (void *)swift_task_alloc();
    v0[33] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10000D734;
    uint64_t v4 = v0[15];
    return v8(v4);
  }
  else
  {
    (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
    swift_endAccess();
    sub_100071468();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[29] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_10000D438;
    uint64_t v7 = v0[15];
    return sub_100071EC0(v7);
  }
}

uint64_t sub_10000D734()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  swift_task_dealloc();
  sub_10000CFD8(v2);
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10000D890, v4, v3);
}

uint64_t sub_10000D890()
{
  (*(void (**)(void, void))(v0[14] + 8))(v0[15], v0[13]);
  sub_100071468();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[29] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10000D438;
  uint64_t v2 = v0[15];
  return sub_100071EC0(v2);
}

uint64_t sub_10000D948()
{
  uint64_t v17 = v0;
  swift_release();
  static Log.network.getter();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v5 = v0[26];
    unint64_t v4 = v0[27];
    swift_bridgeObjectRetain();
    swift_release();
    v0[8] = sub_100007E88(v5, v4, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v13 = v0[18];
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v6 = v0[16];
    swift_errorRetain();
    swift_release();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v15 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "[ICM] %s stopped listening with error: %@", (uint8_t *)v3, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v14(v13, v6);
  }
  else
  {
    uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v9 = v0[18];
    uint64_t v10 = v0[16];
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();

    v8(v9, v10);
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100074B98();
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_100015E98();
  swift_endAccess();
  swift_release();
  sub_10000A578();
  swift_release();
  swift_errorRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_10000DDE8(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NetworkConnection();
    sub_10000E6E8(&qword_1000F24B0, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      return sub_10000E730();
    }
    type metadata accessor for NetworkConnection();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    swift_unknownObjectRelease();
    uint64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v23) {
      return sub_10000E730();
    }
LABEL_32:
    type metadata accessor for CommunicationActor();
    static CommunicationActor.shared.getter();
    sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100071468();
    swift_release();
    uint64_t result = swift_release();
    uint64_t v4 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
LABEL_31:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10000E730();
    }
    goto LABEL_32;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v9) {
      return sub_10000E730();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10000E730();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10000E730();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10000E730();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10000E730();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_30;
                }
              }
              return sub_10000E730();
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000E148()
{
  return sub_10000AA6C();
}

uint64_t sub_10000E150()
{
  return sub_10000B254();
}

uint64_t sub_10000E158()
{
  return sub_10000B2C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10000E174(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWListener.State();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - v6;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v27 = *(void *)(v8 - 8);
  uint64_t v28 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v11 = static CommunicationActor.shared.getter();
  sub_10000E6E8(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v26 = v11;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12(v7, a1, v2);
  int64_t v13 = Logger.logObject.getter();
  int v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v23 = v14;
    os_log_t v24 = v13;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v30 = v22;
    *(_DWORD *)uint64_t v15 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    v12(v25, (uint64_t)v7, v2);
    uint64_t v16 = String.init<A>(describing:)();
    unint64_t v18 = v17;
    swift_release();
    uint64_t v29 = sub_100007E88(v16, v18, &v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
    os_log_t v19 = v24;
    _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v23, "[ICM] Network Advertiser State Changed: %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v7, v2);
  }
  (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v28);
  return swift_release();
}

uint64_t sub_10000E55C()
{
  return sub_10000AAE0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10000E578()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10000E5C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1000043B4;
  return sub_10000CFE8(a1, v4, v5, v7, v6);
}

uint64_t sub_10000E680()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10000E6C0()
{
  return sub_10000B398();
}

uint64_t sub_10000E6C8()
{
  return sub_10000B414(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10000E6E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10000E730()
{
  return swift_release();
}

uint64_t sub_10000E738(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NetworkConnection();
    sub_100018820(&qword_1000F24B0, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v18;
    uint64_t v17 = v19;
    uint64_t v3 = v20;
    uint64_t v4 = v21;
    unint64_t v5 = v22;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = a1 + 56;
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = 0;
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  while (v1 < 0)
  {
    if (!__CocoaSet.Iterator.next()()) {
      return sub_10000E730();
    }
    type metadata accessor for NetworkConnection();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    swift_unknownObjectRelease();
    uint64_t v12 = v4;
    uint64_t v10 = v5;
    if (!v23) {
      return sub_10000E730();
    }
LABEL_32:
    type metadata accessor for CommunicationActor();
    static CommunicationActor.shared.getter();
    sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100071468();
    swift_release();
    uint64_t result = swift_release();
    uint64_t v4 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
    uint64_t v12 = v4;
LABEL_31:
    uint64_t v16 = *(void *)(*(void *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16) {
      return sub_10000E730();
    }
    goto LABEL_32;
  }
  int64_t v13 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v13 >= v9) {
      return sub_10000E730();
    }
    unint64_t v14 = *(void *)(v17 + 8 * v13);
    uint64_t v12 = v4 + 1;
    if (!v14)
    {
      uint64_t v12 = v4 + 2;
      if (v4 + 2 >= v9) {
        return sub_10000E730();
      }
      unint64_t v14 = *(void *)(v17 + 8 * v12);
      if (!v14)
      {
        uint64_t v12 = v4 + 3;
        if (v4 + 3 >= v9) {
          return sub_10000E730();
        }
        unint64_t v14 = *(void *)(v17 + 8 * v12);
        if (!v14)
        {
          uint64_t v12 = v4 + 4;
          if (v4 + 4 >= v9) {
            return sub_10000E730();
          }
          unint64_t v14 = *(void *)(v17 + 8 * v12);
          if (!v14)
          {
            uint64_t v12 = v4 + 5;
            if (v4 + 5 >= v9) {
              return sub_10000E730();
            }
            unint64_t v14 = *(void *)(v17 + 8 * v12);
            if (!v14)
            {
              uint64_t v15 = v4 + 6;
              while (v9 != v15)
              {
                unint64_t v14 = *(void *)(v17 + 8 * v15++);
                if (v14)
                {
                  uint64_t v12 = v15 - 1;
                  goto LABEL_30;
                }
              }
              return sub_10000E730();
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    goto LABEL_31;
  }
  __break(1u);
  return result;
}

uint64_t sub_10000EA98()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v4 = static CommunicationActor.shared.getter();
  sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  swift_retain_n();
  unint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v12[1] = v4;
    uint64_t v13 = v0;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    v12[0] = swift_slowAlloc();
    uint64_t v15 = v12[0];
    *(_DWORD *)uint64_t v7 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for NetworkConnection();
    sub_100018820(&qword_1000F24B0, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
    uint64_t v8 = Set.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100007E88(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[OCM] Current outgoing connections: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v13);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return swift_release();
}

uint64_t sub_10000EE28(uint64_t a1)
{
  v2[15] = a1;
  v2[16] = v1;
  uint64_t v3 = type metadata accessor for Message();
  v2[17] = v3;
  v2[18] = *(void *)(v3 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[21] = v4;
  v2[22] = *(void *)(v4 - 8);
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  v2[25] = type metadata accessor for CommunicationActor();
  v2[26] = static CommunicationActor.shared.getter();
  v2[27] = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[28] = v6;
  v2[29] = v5;
  return _swift_task_switch(sub_10000EFD0, v6, v5);
}

uint64_t sub_10000EFD0()
{
  uint64_t v1 = *(void *)(v0 + 216);
  int8x16_t v7 = *(int8x16_t *)(v0 + 120);
  uint64_t v2 = static CommunicationActor.shared.getter();
  *(void *)(v0 + 240) = v2;
  uint64_t v3 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 248) = v3;
  v3[1] = vextq_s8(v7, v7, 8uLL);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v4;
  uint64_t v5 = type metadata accessor for NetworkConnection();
  *uint64_t v4 = v0;
  v4[1] = sub_10000F0F4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 104, v2, v1, 0x293A5F28646E6573, 0xE800000000000000, sub_100015E90, v3, v5);
}

uint64_t sub_10000F0F4()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  v1[33] = v1[13];
  uint64_t v3 = (void *)swift_task_alloc();
  v1[34] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10000F298;
  uint64_t v4 = v1[15];
  return sub_100073768(v4, 0, 0);
}

uint64_t sub_10000F298()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v5 = sub_10000F944;
  }
  else {
    uint64_t v5 = sub_10000F3D4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10000F3D4()
{
  uint64_t v33 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  swift_release();
  static Log.network.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  swift_retain_n();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v29 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = v0[20];
    uint64_t v9 = v0[17];
    uint64_t v10 = v0[18];
    swift_release();
    sub_100018820(&qword_1000F2618, (void (*)(uint64_t))&type metadata accessor for Message);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[11] = sub_100007E88(v11, v12, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v13 = sub_10007B7D4();
    unint64_t v15 = v14;
    swift_release();
    swift_release();
    v0[12] = sub_100007E88(v13, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v31 = v0[24];
    uint64_t v16 = v0[22];
    uint64_t v28 = v0[21];
    uint64_t v17 = (uint64_t *)(v0[16] + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters);
    swift_beginAccess();
    uint64_t v18 = *v17;
    swift_retain();
    swift_release();
    uint64_t v19 = *(void *)(v18 + 24);
    swift_release();
    swift_release();
    swift_release();
    v0[14] = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v29, "[OCM] Message popped: %s to %s. Total: %ld", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v31, v28);
  }
  else
  {
    uint64_t v20 = v0[24];
    uint64_t v21 = v0[21];
    uint64_t v22 = v0[22];
    uint64_t v23 = v0[20];
    uint64_t v24 = v0[17];
    uint64_t v25 = v0[18];
    swift_release();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
    swift_release_n();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_10000F944()
{
  uint64_t v33 = v0;
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  swift_release();
  static Log.network.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_retain_n();
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v30 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    v32[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = v0[18];
    uint64_t v9 = v0[19];
    uint64_t v10 = v0[17];
    swift_release();
    sub_100018820(&qword_1000F2618, (void (*)(uint64_t))&type metadata accessor for Message);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_100007E88(v11, v12, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v10);
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v13 = sub_10007B7D4();
    unint64_t v15 = v14;
    swift_release();
    swift_release();
    v0[8] = sub_100007E88(v13, v15, v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v16 = v0[22];
    uint64_t v17 = v0[23];
    uint64_t v18 = v0[21];
    uint64_t v19 = (uint64_t *)(v0[16] + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters);
    swift_beginAccess();
    uint64_t v20 = *v19;
    swift_retain();
    swift_release();
    uint64_t v21 = *(void *)(v20 + 24);
    swift_release();
    swift_release();
    swift_release();
    v0[10] = v21;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, log, v30, "[OCM] Message failed: %s to %s. Total: %ld", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v18);
  }
  else
  {
    uint64_t v22 = v0[22];
    uint64_t v23 = v0[23];
    uint64_t v24 = v0[21];
    uint64_t v26 = v0[18];
    uint64_t v25 = v0[19];
    uint64_t v27 = v0[17];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    swift_release_n();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v24);
  }
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_10000FEA8(uint64_t a1, uint64_t a2, uint8_t *a3)
{
  v57 = a3;
  uint64_t v5 = sub_100005CB0(&qword_1000F2620);
  __chkstk_darwin(v5 - 8);
  char v67 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005CB0(&qword_1000F2628);
  uint64_t v65 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v66 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Message();
  uint64_t v9 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  Class v61 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  __chkstk_darwin(v11);
  os_log_t v63 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CommunicationActor();
  uint64_t v15 = static CommunicationActor.shared.getter();
  uint64_t v68 = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v69 = v14;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v16 = (uint64_t *)(a2 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters);
  swift_beginAccess();
  uint64_t result = *v16;
  uint64_t v18 = *(void *)(*v16 + 24);
  Swift::Int v19 = v18 + 1;
  if (__OFADD__(v18, 1)) {
    goto LABEL_39;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v16;
  if (*(void *)(*v16 + 16) < v19 || (isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_10006E8C8(v19, 0);
    uint64_t v21 = *v16;
  }
  unint64_t v64 = (*(unsigned __int8 *)(v65 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
  sub_10006EC34((void *)(v21 + 16), v21 + v64, a1);
  swift_endAccess();
  swift_release();
  uint64_t v22 = v63;
  static Log.network.getter();
  uint64_t v24 = v61;
  uint64_t v23 = v62;
  (*(void (**)(char *, uint8_t *, uint64_t))(v9 + 16))(v61, v57, v62);
  swift_retain_n();
  uint64_t v25 = Logger.logObject.getter();
  int v26 = static os_log_type_t.debug.getter();
  BOOL v27 = os_log_type_enabled(v25, (os_log_type_t)v26);
  uint64_t v60 = v15;
  if (v27)
  {
    int v55 = v26;
    os_log_t v56 = v25;
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v71[0] = v54;
    v57 = v28;
    *(_DWORD *)uint64_t v28 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    os_log_type_t v29 = v57;
    sub_100018820(&qword_1000F2618, (void (*)(uint64_t))&type metadata accessor for Message);
    uint64_t v31 = v61;
    uint64_t v30 = v62;
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v70 = sub_100007E88(v32, v33, v71);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v31, v30);
    *((_WORD *)v29 + 6) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v34 = v57;
    uint64_t v35 = *v16;
    swift_retain();
    swift_release();
    uint64_t v36 = *(void *)(v35 + 24);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v70 = v36;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    os_log_t v37 = v56;
    _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v55, "[OCM] Message added: %s. Total: %ld", v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v58);
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v24, v23);
    swift_release();

    (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v58);
  }
  uint64_t v38 = static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v39 = sub_1000109CC();
  if (!v39)
  {
LABEL_36:
    swift_release();
    return swift_release();
  }
  uint64_t v40 = v39;
  os_log_t v63 = (char *)v38;
  uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56);
  uint64_t v42 = (void (**)(char *, uint64_t, uint64_t))(v65 + 32);
  uint64_t v43 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
  for (i = (void (**)(char *, uint64_t))(v65 + 8); ; (*i)(v53, v7))
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    if (*(uint64_t *)(*v16 + 24) < 1)
    {
      uint64_t v52 = 1;
      uint64_t v46 = (uint64_t)v67;
      goto LABEL_33;
    }
    char v45 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v46 = (uint64_t)v67;
    if ((v45 & 1) == 0) {
      sub_10006F7BC();
    }
    os_log_t v47 = (void *)*v16;
    uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v65 + 32))(v46, *v16 + v64 + *(void *)(v65 + 72) * *(void *)(*v16 + 32), v7);
    uint64_t v48 = v47[4];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      break;
    }
    uint64_t v51 = v47[3];
    if (v50 >= v47[2]) {
      uint64_t v50 = 0;
    }
    v47[4] = v50;
    if (__OFSUB__(v51, 1)) {
      goto LABEL_38;
    }
    uint64_t v52 = 0;
    uint64_t v47[3] = v51 - 1;
LABEL_33:
    (*v41)(v46, v52, 1, v7);
    swift_endAccess();
    swift_release();
    if ((*v43)(v46, 1, v7) == 1)
    {
      swift_release();
      sub_100016B90(v46, &qword_1000F2620);
      goto LABEL_36;
    }
    uint64_t v53 = v66;
    (*v42)(v66, v46, v7);
    v71[0] = v40;
    swift_retain();
    CheckedContinuation.resume(returning:)();
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1000107D0()
{
  swift_release();
  sub_100016B90(v0 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_lastOutgoingLocation, &qword_1000F2638);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_100010864()
{
  return type metadata accessor for OutgoingConnectionManager();
}

uint64_t type metadata accessor for OutgoingConnectionManager()
{
  uint64_t result = qword_1000F24F8;
  if (!qword_1000F24F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000108B8()
{
  sub_100010970();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100010970()
{
  if (!qword_1000F2510)
  {
    sub_100005F00((uint64_t *)&unk_1000F2518);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1000F2510);
    }
  }
}

uint64_t sub_1000109CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100005CB0(&qword_1000F2630);
  __chkstk_darwin(v2 - 8);
  uint64_t v121 = (uint64_t)&v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for NWBrowser.Result();
  uint64_t v124 = *(void *)(v125 - 8);
  uint64_t v4 = __chkstk_darwin(v125);
  v119 = (char *)&v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  int v120 = (char *)&v118 - v6;
  uint64_t v129 = type metadata accessor for NWEndpoint();
  uint64_t v128 = *(void *)(v129 - 8);
  uint64_t v7 = __chkstk_darwin(v129);
  uint64_t v9 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  os_log_t v132 = (char *)&v118 - v11;
  __chkstk_darwin(v10);
  v126 = (char *)&v118 - v12;
  uint64_t v13 = sub_100005CB0(&qword_1000F2638);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  os_log_t v127 = (os_log_t)((char *)&v118 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v118 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  v134 = (uint64_t *)((char *)&v118 - v20);
  __chkstk_darwin(v19);
  uint64_t v133 = (char *)&v118 - v21;
  uint64_t v22 = type metadata accessor for Logger();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v135 = v22;
  uint64_t v136 = v23;
  uint64_t v24 = __chkstk_darwin(v22);
  int v26 = (char *)&v118 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v123 = (char *)&v118 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v118 - v29;
  uint64_t v31 = type metadata accessor for CommunicationActor();
  uint64_t v32 = static CommunicationActor.shared.getter();
  uint64_t v33 = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v137 = v32;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v118 = v26;
  v122 = v9;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v34 = (uint64_t *)(v1 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_outgoingConnections);
  swift_beginAccess();
  uint64_t v35 = *v34;
  swift_bridgeObjectRetain();
  swift_release();
  sub_10000E738(v35);
  swift_bridgeObjectRelease();
  static CommunicationActor.shared.getter();
  uint64_t v138 = v33;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v36 = *v34;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v37 = sub_100012210(v36);
  swift_bridgeObjectRelease();
  if (v37)
  {
    static Log.network.getter();
    swift_retain_n();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    BOOL v40 = os_log_type_enabled(v38, v39);
    uint64_t v130 = v1;
    if (v40)
    {
      uint64_t v41 = v31;
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      v141[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v42 = 136315138;
      static CommunicationActor.shared.getter();
      uint64_t v131 = v41;
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v43 = sub_10007B7D4();
      unint64_t v45 = v44;
      swift_release();
      swift_release();
      v139[0] = sub_100007E88(v43, v45, v141);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "[OCM] Using ready connection: %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v136 + 8))(v30, v135);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v136 + 8))(v30, v135);
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    uint64_t v53 = (uint64_t)v133;
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v54 = sub_100005CB0((uint64_t *)&unk_1000F2518);
    uint64_t v55 = *(int *)(v54 + 48);
    swift_retain();
    NWConnection.endpoint.getter();
    swift_release();
    swift_retain();
    uint64_t v56 = NWConnection.parameters.getter();
    swift_release();
    swift_release();
    *(void *)(v53 + v55) = v56;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    v57 = v134;
    sub_100016C54(v53, (uint64_t)v134);
    uint64_t v58 = v130 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_lastOutgoingLocation;
    swift_beginAccess();
    sub_100016BEC((uint64_t)v57, v58);
    swift_endAccess();
    swift_release();
    goto LABEL_27;
  }
  v134 = v34;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v46 = (uint64_t *)(v1 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters);
  swift_beginAccess();
  uint64_t v47 = *v46;
  swift_retain();
  swift_release();
  uint64_t v48 = *(void *)(v47 + 24);
  swift_release();
  if (!v48)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    static CommunicationActor.shared.getter();
    uint64_t v49 = v31;
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v50 = *v134;
    swift_bridgeObjectRetain();
    swift_release();
    if ((v50 & 0xC000000000000001) != 0) {
      uint64_t v51 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v51 = *(void *)(v50 + 16);
    }
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v31 = v49;
    if (!v51)
    {
      uint64_t v60 = sub_100005CB0((uint64_t *)&unk_1000F2518);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v18, 1, 1, v60);
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v61 = v1 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_lastOutgoingLocation;
      swift_beginAccess();
      sub_100016BEC((uint64_t)v18, v61);
      swift_endAccess();
      swift_release();
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v62 = *(void *)(v1 + 16);
      swift_retain();
      swift_release();
      uint64_t v31 = v49;
      if (v62)
      {
        NWBrowser.cancel()();
        swift_release();
      }
    }
  }
  static CommunicationActor.shared.getter();
  uint64_t v131 = v31;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v63 = *v46;
  swift_retain();
  swift_release();
  uint64_t v64 = *(void *)(v63 + 24);
  swift_release();
  uint64_t v65 = v132;
  if (v64)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v66 = *(void *)(v1 + 16);
    swift_release();
    if (!v66)
    {
      uint64_t v67 = sub_100012768();
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      *(void *)(v1 + 16) = v67;
      swift_release();
      swift_release();
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v68 = *v134;
    swift_bridgeObjectRetain();
    swift_release();
    if ((v68 & 0xC000000000000001) != 0) {
      uint64_t v69 = __CocoaSet.count.getter();
    }
    else {
      uint64_t v69 = *(void *)(v68 + 16);
    }
    swift_bridgeObjectRelease();
    if (v69) {
      goto LABEL_55;
    }
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v70 = v1 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_lastOutgoingLocation;
    swift_beginAccess();
    os_log_t v71 = v127;
    sub_100016B28(v70, (uint64_t)v127);
    swift_release();
    uint64_t v72 = sub_100005CB0((uint64_t *)&unk_1000F2518);
    if ((*(unsigned int (**)(os_log_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 48))(v71, 1, v72) == 1)
    {
      sub_100016B90((uint64_t)v71, &qword_1000F2638);
LABEL_55:
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *v134;
      swift_bridgeObjectRetain();
      swift_release();
      if ((v73 & 0xC000000000000001) != 0) {
        uint64_t v74 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v74 = *(void *)(v73 + 16);
      }
      swift_bridgeObjectRelease();
      if (!v74)
      {
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v75 = *(void *)(v1 + 16);
        swift_retain();
        swift_release();
        if (v75)
        {
          uint64_t v76 = NWBrowser.browseResults.getter();
          uint64_t v77 = v121;
          sub_100012C88(v76, v121);
          swift_bridgeObjectRelease();
          uint64_t v78 = v124;
          uint64_t v79 = v125;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48))(v77, 1, v125) == 1)
          {
            swift_release();
            sub_100016B90(v77, &qword_1000F2630);
          }
          else
          {
            v104 = v120;
            (*(void (**)(char *, uint64_t, uint64_t))(v78 + 32))(v120, v77, v79);
            uint64_t v105 = (uint64_t)v122;
            NWBrowser.Result.endpoint.getter();
            NWBrowser.parameters.getter();
            os_log_t v132 = (char *)sub_100012920(v105);
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v128 + 8))(v105, v129);
            uint64_t v106 = v118;
            static Log.network.getter();
            unint64_t v107 = v119;
            (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v119, v104, v79);
            unint64_t v108 = Logger.logObject.getter();
            os_log_type_t v109 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v108, v109))
            {
              uint64_t v133 = 0;
              uint64_t v130 = v1;
              v110 = (uint8_t *)swift_slowAlloc();
              v139[0] = swift_slowAlloc();
              *(_DWORD *)v110 = 136315138;
              static CommunicationActor.shared.getter();
              dispatch thunk of Actor.unownedExecutor.getter();
              if ((swift_task_isCurrentExecutor() & 1) == 0) {
                swift_task_reportUnexpectedExecutor();
              }
              v111 = v119;
              NWBrowser.Result.endpoint.getter();
              uint64_t v112 = String.init<A>(describing:)();
              unint64_t v114 = v113;
              swift_release();
              uint64_t v140 = sub_100007E88(v112, v114, v139);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v115 = *(void (**)(char *, uint64_t))(v124 + 8);
              v115(v111, v125);
              _os_log_impl((void *)&_mh_execute_header, v108, v109, "[OCM] Connecting to browser endpoint %s", v110, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              (*(void (**)(char *, uint64_t))(v136 + 8))(v118, v135);
              uint64_t v37 = (uint64_t)v133;
            }
            else
            {
              uint64_t v116 = v136;
              uint64_t v115 = *(void (**)(char *, uint64_t))(v78 + 8);
              v115(v107, v79);

              (*(void (**)(char *, uint64_t))(v116 + 8))(v106, v135);
            }
            uint64_t v117 = (uint64_t)v132;
            swift_retain();
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            swift_beginAccess();
            sub_10005BBEC(&v140, v117);
            swift_endAccess();
            swift_release();
            sub_10000EA98();
            swift_release();
            swift_release();
            swift_release();
            v115(v120, v125);
          }
        }
      }
      goto LABEL_27;
    }
    uint64_t v80 = *(uint64_t *)((char *)&v71->isa + *(int *)(v72 + 48));
    uint64_t v81 = v128;
    unint64_t v82 = v65;
    uint64_t v83 = (uint64_t)v126;
    os_log_t v84 = v71;
    uint64_t v85 = v129;
    (*(void (**)(char *, os_log_t, uint64_t))(v128 + 32))(v126, v84, v129);
    uint64_t v138 = v80;
    uint64_t v86 = sub_100012920(v83);
    v87 = v123;
    static Log.network.getter();
    uint64_t v90 = *(char **)(v81 + 16);
    int v89 = (char *)(v81 + 16);
    v88 = v90;
    ((void (*)(char *, uint64_t, uint64_t))v90)(v82, v83, v85);
    swift_retain_n();
    uint64_t v91 = Logger.logObject.getter();
    int v92 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v91, (os_log_type_t)v92))
    {
      v119 = v89;
      int v120 = v88;
      LODWORD(v125) = v92;
      os_log_t v127 = v91;
      uint64_t v121 = v86;
      uint64_t v133 = 0;
      uint64_t v130 = v1;
      uint64_t v93 = swift_slowAlloc();
      uint64_t v124 = swift_slowAlloc();
      v139[0] = v124;
      *(_DWORD *)uint64_t v93 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v94 = v132;
      uint64_t v95 = v129;
      ((void (*)(char *, char *, uint64_t))v120)(v122, v132, v129);
      uint64_t v96 = String.init<A>(describing:)();
      unint64_t v98 = v97;
      swift_release();
      uint64_t v140 = sub_100007E88(v96, v98, v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      os_log_t v132 = *(char **)(v128 + 8);
      ((void (*)(char *, uint64_t))v132)(v94, v95);
      *(_WORD *)(v93 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v86 = v121;
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v99 = sub_10007B7D4();
      unint64_t v101 = v100;
      swift_release();
      swift_release();
      uint64_t v140 = sub_100007E88(v99, v101, v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      os_log_t v102 = v127;
      _os_log_impl((void *)&_mh_execute_header, v127, (os_log_type_t)v125, "[OCM] Connecting to last known endpoint %s, replaced with %s", (uint8_t *)v93, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v136 + 8))(v123, v135);
      os_log_type_t v103 = (void (*)(char *, uint64_t))v132;
      uint64_t v37 = (uint64_t)v133;
    }
    else
    {
      os_log_type_t v103 = *(void (**)(char *, uint64_t))(v128 + 8);
      v103(v132, v85);
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v136 + 8))(v87, v135);
    }
    swift_retain();
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    sub_10005BBEC(&v140, v86);
    swift_endAccess();
    swift_release();
    sub_10000EA98();
    swift_release();
    swift_release();
    swift_release();
    v103(v126, v129);
  }
LABEL_27:
  swift_release();
  return v37;
}

uint64_t sub_100012210(uint64_t a1)
{
  uint64_t v44 = type metadata accessor for NWConnection.State();
  uint64_t v3 = *(void *)(v44 - 8);
  uint64_t v4 = __chkstk_darwin(v44);
  uint64_t v43 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)v30 - v6;
  uint64_t v31 = v1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for NetworkConnection();
    sub_100018820(&qword_1000F24B0, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v47;
    uint64_t v35 = v48;
    uint64_t v8 = v49;
    uint64_t v9 = v50;
    unint64_t v10 = v51;
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v12 = *(void *)(a1 + 56);
    uint64_t v35 = a1 + 56;
    uint64_t v13 = ~v11;
    uint64_t v14 = -v11;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v10 = v15 & v12;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v8 = v13;
    uint64_t v9 = 0;
  }
  uint64_t v33 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v30[1] = v8;
  int64_t v34 = (unint64_t)(v8 + 64) >> 6;
  unsigned int v41 = enum case for NWConnection.State.ready(_:);
  uint64_t v39 = v3 + 8;
  BOOL v40 = (void (**)(char *, void, uint64_t))(v3 + 104);
  uint64_t v32 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v38 = a1;
  uint64_t v16 = v42;
  uint64_t v17 = (void (**)(char *, uint64_t))(v3 + 8);
  if ((a1 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v18 = __CocoaSet.Iterator.next()();
  if (v18)
  {
    uint64_t v46 = v18;
    type metadata accessor for NetworkConnection();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v19 = v52;
    swift_unknownObjectRelease();
    uint64_t v20 = v9;
    uint64_t v21 = v10;
    while (v19)
    {
      unint64_t v45 = v21;
      unint64_t v36 = v10;
      uint64_t v37 = v9;
      type metadata accessor for CommunicationActor();
      static CommunicationActor.shared.getter();
      sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      NWConnection.state.getter();
      swift_release();
      swift_release();
      uint64_t v27 = v43;
      uint64_t v26 = v44;
      (*v40)(v43, v41, v44);
      char v28 = static NWConnection.State.== infix(_:_:)();
      uint64_t v29 = *v17;
      (*v17)(v27, v26);
      v29(v16, v26);
      swift_release();
      if (v28) {
        break;
      }
      uint64_t result = swift_release();
      uint64_t v9 = v20;
      unint64_t v10 = v45;
      a1 = v38;
      if (v38 < 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v10)
      {
        uint64_t v21 = (v10 - 1) & v10;
        unint64_t v22 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v20 = v9;
      }
      else
      {
        int64_t v23 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          return result;
        }
        if (v23 >= v34) {
          goto LABEL_38;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v23);
        uint64_t v20 = v9 + 1;
        if (!v24)
        {
          uint64_t v20 = v9 + 2;
          if (v9 + 2 >= v34) {
            goto LABEL_38;
          }
          unint64_t v24 = *(void *)(v35 + 8 * v20);
          if (!v24)
          {
            uint64_t v20 = v9 + 3;
            if (v9 + 3 >= v34) {
              goto LABEL_38;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v20);
            if (!v24)
            {
              uint64_t v20 = v9 + 4;
              if (v9 + 4 >= v34) {
                goto LABEL_38;
              }
              unint64_t v24 = *(void *)(v35 + 8 * v20);
              if (!v24)
              {
                uint64_t v20 = v9 + 5;
                if (v9 + 5 >= v34) {
                  goto LABEL_38;
                }
                unint64_t v24 = *(void *)(v35 + 8 * v20);
                if (!v24)
                {
                  uint64_t v25 = v9 + 6;
                  while (v34 != v25)
                  {
                    unint64_t v24 = *(void *)(v35 + 8 * v25++);
                    if (v24)
                    {
                      uint64_t v20 = v25 - 1;
                      goto LABEL_28;
                    }
                  }
                  goto LABEL_38;
                }
              }
            }
          }
        }
LABEL_28:
        uint64_t v21 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(a1 + 48) + 8 * v22);
      swift_retain();
    }
  }
  else
  {
LABEL_38:
    uint64_t v19 = 0;
  }
  sub_10000E730();
  return v19;
}

uint64_t sub_100012768()
{
  uint64_t v0 = type metadata accessor for NWBrowser.Descriptor();
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v2 = 0xD000000000000024;
  v2[1] = 0x80000001000D5E30;
  (*(void (**)(void *, void))(v3 + 104))(v2, enum case for NWBrowser.Descriptor.applicationService(_:));
  _s11photosfaced16NetworkConstantsO10parameters6domain4type0B012NWParametersCSS_SStFZ_0(0xD000000000000016, 0x80000001000D5820, 0x766C6F7365525341, 0xEA00000000007265);
  type metadata accessor for NWBrowser();
  swift_allocObject();
  uint64_t v4 = NWBrowser.init(for:using:)();
  swift_retain();
  NWBrowser.stateUpdateHandler.setter();
  swift_retain();
  NWBrowser.browseResultsChangedHandler.setter();
  type metadata accessor for CommunicationActor();
  uint64_t v5 = (void *)static CommunicationActor.sharedQueue.getter();
  NWBrowser.start(queue:)();

  return v4;
}

uint64_t sub_100012920(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NWEndpoint();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)v17 - v7;
  type metadata accessor for CommunicationActor();
  uint64_t v9 = static CommunicationActor.shared.getter();
  sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  v17[1] = v9;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v8, a1, v2);
  v10(v6, (uint64_t)v8, v2);
  type metadata accessor for NWConnection();
  swift_allocObject();
  swift_retain();
  uint64_t v11 = NWConnection.init(to:using:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  type metadata accessor for NetworkConnection();
  uint64_t v12 = swift_allocObject();
  type metadata accessor for NetworkCanceller();
  uint64_t v13 = swift_allocObject();
  sub_100005CB0(&qword_1000F2498);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = 0;
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = v14;
  *(void *)(v12 + 16) = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v17[0];
  *(void *)(v15 + 24) = v12;
  swift_retain();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_retain();
  NWConnection.stateUpdateHandler.setter();
  swift_release();
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_1000746F0();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_100012C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100016CBC(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for NWBrowser.Result();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_100016D5C(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for NWBrowser.Result();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

void *sub_100012D6C(uint64_t a1)
{
  uint64_t result = (void *)sub_1000C6DE8();
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_1000C6E74(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_100012DF4()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_100012E68(uint64_t a1, uint64_t a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100012F44(a2);
  return swift_release();
}

uint64_t sub_100012F44(uint64_t a1)
{
  uint64_t v108 = type metadata accessor for NWError();
  os_log_t v110 = *(os_log_t *)(v108 - 8);
  uint64_t v2 = __chkstk_darwin(v108);
  unint64_t v101 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  os_log_type_t v109 = (char **)((char *)&v94 - v5);
  uint64_t v6 = __chkstk_darwin(v4);
  unint64_t v98 = (char *)&v94 - v7;
  __chkstk_darwin(v6);
  uint64_t v99 = (char *)&v94 - v8;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v105 = v9;
  uint64_t v106 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  unint64_t v97 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v95 = (char *)&v94 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v94 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v94 - v19;
  uint64_t v21 = __chkstk_darwin(v18);
  unint64_t v100 = (char **)((char *)&v94 - v22);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v94 - v23;
  uint64_t v25 = type metadata accessor for NWBrowser.State();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  v94 = (char *)&v94 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v96 = (char *)&v94 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v94 - v31;
  uint64_t v33 = type metadata accessor for CommunicationActor();
  uint64_t v34 = static CommunicationActor.shared.getter();
  uint64_t v35 = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v107 = v34;
  uint64_t v103 = v35;
  uint64_t v104 = v33;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  unint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v36(v32, a1, v25);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v32, v25);
  if (v37 == enum case for NWBrowser.State.failed(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 96))(v32, v25);
    uint64_t v38 = v109;
    uint64_t v39 = v32;
    os_log_t v40 = v110;
    uint64_t v41 = v108;
    ((void (*)(void *, char *, uint64_t))v110[4].isa)(v109, v39, v108);
    static Log.network.getter();
    isa = (void (*)(void, void, void))v40[2].isa;
    uint64_t v43 = v101;
    isa(v101, v38, v41);
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      unint64_t v100 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v46 = 138412290;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v99 = (char *)(v46 + 4);
      sub_100018820(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
      uint64_t v41 = v108;
      swift_allocError();
      isa(v47, v43, v41);
      swift_release();
      uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v112 = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v100 = v48;
      Class v49 = v110[1].isa;
      ((void (*)(char *, uint64_t))v49)(v43, v41);
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "[OCM] Browser failed: %@", v46, 0xCu);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      Class v49 = v40[1].isa;
      ((void (*)(char *, uint64_t))v49)(v43, v41);
    }
    uint64_t v65 = v106;
    uint64_t v66 = v105;
    uint64_t v67 = v102;

    (*(void (**)(char *, uint64_t))(v65 + 8))(v17, v66);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v68 = *(void *)(v67 + 16);
    swift_retain();
    swift_release();
    if (v68)
    {
      NWBrowser.cancel()();
      swift_release();
    }
    ((void (*)(void *, uint64_t))v49)(v109, v41);
  }
  else if (v37 == enum case for NWBrowser.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v26 + 96))(v32, v25);
    os_log_t v50 = v110;
    unint64_t v51 = v99;
    uint64_t v52 = v108;
    ((void (*)(char *, char *, uint64_t))v110[4].isa)(v99, v32, v108);
    static Log.network.getter();
    uint64_t v53 = (void (*)(char *, char *, uint64_t))v50[2].isa;
    uint64_t v54 = v98;
    v53(v98, v51, v52);
    uint64_t v55 = Logger.logObject.getter();
    os_log_type_t v56 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      os_log_type_t v109 = (void *)swift_slowAlloc();
      *(_DWORD *)v57 = 138412290;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_100018820(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      uint64_t v58 = v98;
      v53(v59, v98, v52);
      swift_release();
      uint64_t v60 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v112 = v60;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      os_log_t v61 = v110;
      *os_log_type_t v109 = v60;
      uint64_t v62 = (void (*)(char *, uint64_t))v61[1].isa;
      v62(v58, v52);
      _os_log_impl((void *)&_mh_execute_header, v55, v56, "[OCM] Browser waiting: %@", v57, 0xCu);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v63 = v106;
      uint64_t v64 = v105;
      unint64_t v51 = v99;
    }
    else
    {

      uint64_t v62 = (void (*)(char *, uint64_t))v50[1].isa;
      v62(v54, v52);
      uint64_t v63 = v106;
      uint64_t v64 = v105;
    }
    (*(void (**)(void *, uint64_t))(v63 + 8))(v100, v64);
    v62(v51, v52);
  }
  else if (v37 == enum case for NWBrowser.State.setup(_:))
  {
    static Log.network.getter();
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v69, v70))
    {
      os_log_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "[OCM] Browser setup", v71, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v24, v105);
  }
  else if (v37 == enum case for NWBrowser.State.ready(_:))
  {
    static Log.network.getter();
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "[OCM] Browser ready", v74, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v20, v105);
  }
  else if (v37 == enum case for NWBrowser.State.cancelled(_:))
  {
    uint64_t v76 = v95;
    static Log.network.getter();
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v79 = 0;
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "[OCM] Browser cancelled", v79, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v76, v105);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    char isCurrentExecutor = swift_task_isCurrentExecutor();
    uint64_t v81 = v102;
    if ((isCurrentExecutor & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    *(void *)(v81 + 16) = 0;
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v82 = a1;
    uint64_t v83 = v97;
    static Log.network.getter();
    os_log_t v84 = v96;
    v36(v96, v82, v25);
    uint64_t v85 = Logger.logObject.getter();
    int v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, (os_log_type_t)v86))
    {
      LODWORD(v109) = v86;
      os_log_t v110 = v85;
      v87 = (uint8_t *)swift_slowAlloc();
      uint64_t v108 = swift_slowAlloc();
      uint64_t v112 = v108;
      *(_DWORD *)v87 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v88 = v96;
      v36(v94, (uint64_t)v96, v25);
      uint64_t v89 = String.init<A>(describing:)();
      unint64_t v91 = v90;
      swift_release();
      uint64_t v111 = sub_100007E88(v89, v91, &v112);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      int v92 = *(void (**)(char *, uint64_t))(v26 + 8);
      v92(v88, v25);
      os_log_t v93 = v110;
      _os_log_impl((void *)&_mh_execute_header, v110, (os_log_type_t)v109, "[OCM] Unknown Browser State: %s", v87, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v106 + 8))(v97, v105);
    }
    else
    {
      int v92 = *(void (**)(char *, uint64_t))(v26 + 8);
      v92(v84, v25);

      (*(void (**)(char *, uint64_t))(v106 + 8))(v83, v105);
    }
    v92(v32, v25);
  }
  return swift_release();
}

uint64_t sub_100013D8C()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_100013E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100016E4C(a3);
  return swift_release();
}

uint64_t sub_100013EE4()
{
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_100013F60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_10001404C(a2, a3);
  return swift_release();
}

uint64_t sub_10001404C(uint64_t a1, uint64_t a2)
{
  uint64_t v177 = a1;
  uint64_t v3 = sub_100005CB0(&qword_1000F2620);
  __chkstk_darwin(v3 - 8);
  v180 = (char *)&v156 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100005CB0(&qword_1000F2628);
  uint64_t v178 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  v179 = (char *)&v156 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NWError();
  uint64_t v174 = *(void *)(v7 - 8);
  uint64_t v175 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  v165 = (uint64_t *)((char *)&v156 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (_DWORD *)((char *)&v156 - v11);
  uint64_t v13 = __chkstk_darwin(v10);
  os_log_t v167 = (os_log_t)((char *)&v156 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  os_log_t v168 = (os_log_t)((char *)&v156 - v16);
  __chkstk_darwin(v15);
  v172 = ((char *)&v156 - v17);
  uint64_t v18 = type metadata accessor for Logger();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v170 = v18;
  uint64_t v171 = v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v159 = (char *)&v156 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  v158 = (char *)&v156 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v166 = (char *)&v156 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v164 = (char *)&v156 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v161 = (char *)&v156 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v169 = (char *)&v156 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v162 = (char *)&v156 - v33;
  __chkstk_darwin(v32);
  v163 = (void (*)(uint64_t, os_log_t, uint64_t))((char *)&v156 - v34);
  uint64_t v35 = type metadata accessor for NWConnection.State();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  v157 = (char *)&v156 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  v160 = (uint64_t *)((char *)&v156 - v40);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v156 - v41;
  uint64_t v43 = type metadata accessor for CommunicationActor();
  uint64_t v44 = static CommunicationActor.shared.getter();
  uint64_t v45 = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v176 = v44;
  uint64_t v182 = v45;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v46(v42, a2, v35);
  int v47 = (*(uint64_t (**)(char *, uint64_t))(v36 + 88))(v42, v35);
  uint64_t v181 = v43;
  if (v47 == enum case for NWConnection.State.waiting(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v42, v35);
    uint64_t v49 = v174;
    uint64_t v48 = v175;
    os_log_t v50 = v172;
    (*(void (**)(NSObject *, char *, uint64_t))(v174 + 32))(v172, v42, v175);
    unint64_t v51 = v169;
    static Log.network.getter();
    uint64_t v52 = *(void (**)(os_log_t, NSObject *, uint64_t))(v49 + 16);
    os_log_t v53 = v168;
    v52(v168, v50, v48);
    swift_retain_n();
    uint64_t v54 = Logger.logObject.getter();
    int v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, (os_log_type_t)v55))
    {
      v162 = (char *)(v49 + 16);
      v163 = (void (*)(uint64_t, os_log_t, uint64_t))v52;
      LODWORD(v164) = v55;
      os_log_t v167 = v54;
      uint64_t v56 = swift_slowAlloc();
      v165 = (void *)swift_slowAlloc();
      v166 = (char *)swift_slowAlloc();
      v184[0] = (uint64_t)v166;
      *(_DWORD *)uint64_t v56 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v57 = sub_10007B7D4();
      unint64_t v59 = v58;
      swift_release();
      swift_release();
      uint64_t v183 = sub_100007E88(v57, v59, v184);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v56 + 12) = 2112;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_100018820(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
      uint64_t v60 = v175;
      swift_allocError();
      os_log_t v61 = v168;
      v163(v62, v168, v60);
      swift_release();
      uint64_t v63 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v183 = v63;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v165 = v63;
      uint64_t v64 = *(void (**)(os_log_t, uint64_t))(v174 + 8);
      v64(v61, v60);
      os_log_t v65 = v167;
      _os_log_impl((void *)&_mh_execute_header, v167, (os_log_type_t)v164, "[OCM] %s waiting with error: %@", (uint8_t *)v56, 0x16u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v171 + 8))(v169, v170);
      v64(v172, v60);
      uint64_t v66 = v173;
    }
    else
    {

      uint64_t v82 = *(void (**)(os_log_t, uint64_t))(v49 + 8);
      v82(v53, v48);
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v171 + 8))(v51, v170);
      v82(v172, v48);
      uint64_t v66 = v173;
    }
    goto LABEL_46;
  }
  if (v47 == enum case for NWConnection.State.failed(_:))
  {
    (*(void (**)(char *, uint64_t))(v36 + 96))(v42, v35);
    uint64_t v67 = v174;
    os_log_t v68 = v167;
    uint64_t v69 = v42;
    uint64_t v70 = v175;
    (*(void (**)(os_log_t, char *, uint64_t))(v174 + 32))(v167, v69, v175);
    *uint64_t v12 = 60;
    (*(void (**)(_DWORD *, void, uint64_t))(v67 + 104))(v12, enum case for NWError.posix(_:), v70);
    char v71 = static NWError.== infix(_:_:)();
    uint64_t v72 = *(NSObject **)(v67 + 8);
    os_log_type_t v73 = v12;
    uint64_t v74 = v70;
    v169 = (char *)(v67 + 8);
    v172 = v72;
    ((void (*)(_DWORD *, uint64_t))v72)(v73, v70);
    if (v71)
    {
      uint64_t v75 = v164;
      static Log.network.getter();
      swift_retain_n();
      uint64_t v76 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v76, v77))
      {
        os_log_type_t v78 = (uint8_t *)swift_slowAlloc();
        v184[0] = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v78 = 136315138;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v174 = (uint64_t)(v78 + 4);
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v79 = sub_10007B7D4();
        unint64_t v81 = v80;
        swift_release();
        swift_release();
        uint64_t v183 = sub_100007E88(v79, v81, v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v76, v77, "[OCM] %s timed out", v78, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v171 + 8))(v75, v170);
        uint64_t v66 = v173;
        uint64_t v74 = v175;
        goto LABEL_36;
      }
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v171 + 8))(v75, v170);
    }
    else
    {
      int v92 = v166;
      static Log.network.getter();
      uint64_t v95 = *(char **)(v67 + 16);
      uint64_t v93 = v67 + 16;
      v94 = v95;
      uint64_t v96 = v165;
      ((void (*)(void *, os_log_t, uint64_t))v95)(v165, v68, v70);
      swift_retain_n();
      unint64_t v97 = Logger.logObject.getter();
      int v98 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v97, (os_log_type_t)v98))
      {
        v161 = v94;
        LODWORD(v162) = v98;
        os_log_t v168 = v97;
        uint64_t v174 = v93;
        uint64_t v99 = swift_slowAlloc();
        v163 = (void (*)(uint64_t, os_log_t, uint64_t))swift_slowAlloc();
        v164 = (char *)swift_slowAlloc();
        v184[0] = (uint64_t)v164;
        *(_DWORD *)uint64_t v99 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v100 = sub_10007B7D4();
        unint64_t v102 = v101;
        swift_release();
        swift_release();
        uint64_t v183 = sub_100007E88(v100, v102, v184);
        v160 = v184;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v99 + 12) = 2112;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        sub_100018820(&qword_1000F24B8, (void (*)(uint64_t))&type metadata accessor for NWError);
        uint64_t v74 = v175;
        swift_allocError();
        uint64_t v103 = v165;
        ((void (*)(uint64_t, void *, uint64_t))v161)(v104, v165, v74);
        swift_release();
        uint64_t v105 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v183 = v105;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(void *)v163 = v105;
        ((void (*)(void *, uint64_t))v172)(v103, v74);
        os_log_t v106 = v168;
        _os_log_impl((void *)&_mh_execute_header, v168, (os_log_type_t)v162, "[OCM] %s failed with error: %@", (uint8_t *)v99, 0x16u);
        sub_100005CB0(qword_1000F2278);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v171 + 8))(v166, v170);
        uint64_t v66 = v173;
        goto LABEL_36;
      }
      swift_release_n();
      uint64_t v74 = v175;
      ((void (*)(void *, uint64_t))v172)(v96, v175);

      (*(void (**)(char *, uint64_t))(v171 + 8))(v92, v170);
    }
    uint64_t v66 = v173;
LABEL_36:
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100074B98();
    swift_release();
    ((void (*)(os_log_t, uint64_t))v172)(v167, v74);
    goto LABEL_46;
  }
  uint64_t v66 = v173;
  if (v47 != enum case for NWConnection.State.setup(_:))
  {
    if (v47 == enum case for NWConnection.State.preparing(_:))
    {
      uint64_t v83 = v162;
      static Log.network.getter();
      swift_retain_n();
      os_log_t v84 = Logger.logObject.getter();
      int v107 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v84, (os_log_type_t)v107))
      {
        LODWORD(v175) = v107;
        int v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v174 = swift_slowAlloc();
        v184[0] = v174;
        *(_DWORD *)int v86 = 136315138;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v108 = sub_10007B7D4();
        unint64_t v110 = v109;
        swift_release();
        swift_release();
        uint64_t v183 = sub_100007E88(v108, v110, v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        os_log_type_t v90 = v175;
        unint64_t v91 = "[OCM] %s preparing";
        goto LABEL_44;
      }
    }
    else
    {
      if (v47 != enum case for NWConnection.State.ready(_:))
      {
        if (v47 == enum case for NWConnection.State.cancelled(_:))
        {
          uint64_t v133 = v158;
          static Log.network.getter();
          swift_retain_n();
          v134 = Logger.logObject.getter();
          int v135 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v134, (os_log_type_t)v135))
          {
            LODWORD(v175) = v135;
            uint64_t v136 = (uint8_t *)swift_slowAlloc();
            uint64_t v174 = swift_slowAlloc();
            v184[0] = v174;
            *(_DWORD *)uint64_t v136 = 136315138;
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            swift_retain();
            swift_release();
            swift_retain();
            uint64_t v137 = sub_10007B7D4();
            unint64_t v139 = v138;
            swift_release();
            swift_release();
            uint64_t v183 = sub_100007E88(v137, v139, v184);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_release_n();
            _os_log_impl((void *)&_mh_execute_header, v134, (os_log_type_t)v175, "[OCM] %s cancelled", v136, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v171 + 8))(v133, v170);
            uint64_t v66 = v173;
          }
          else
          {
            swift_release_n();

            (*(void (**)(char *, uint64_t))(v171 + 8))(v133, v170);
          }
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          swift_beginAccess();
          sub_100015E98();
          swift_endAccess();
          swift_release();
          sub_10000EA98();
          swift_release();
        }
        else
        {
          uint64_t v140 = v159;
          static Log.network.getter();
          uint64_t v175 = v35;
          v46((char *)v160, a2, v35);
          swift_retain_n();
          v141 = Logger.logObject.getter();
          int v142 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v141, (os_log_type_t)v142))
          {
            LODWORD(v169) = v142;
            v172 = v141;
            os_log_t v143 = (_DWORD *)swift_slowAlloc();
            os_log_t v168 = (os_log_t)swift_slowAlloc();
            v184[0] = (uint64_t)v168;
            uint64_t v174 = (uint64_t)v143;
            *os_log_t v143 = 136315394;
            os_log_t v167 = (os_log_t)static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v144 = v174;
            v166 = (char *)(v174 + 4);
            swift_retain();
            swift_release();
            swift_retain();
            os_log_t v167 = (os_log_t)sub_10007B7D4();
            unint64_t v146 = v145;
            swift_release();
            swift_release();
            uint64_t v183 = sub_100007E88((uint64_t)v167, v146, v184);
            os_log_t v167 = (os_log_t)v184;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_release_n();
            *(_WORD *)(v144 + 12) = 2080;
            uint64_t v177 = static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v148 = (uint8_t *)v174;
            uint64_t v147 = v175;
            v166 = (char *)(v174 + 14);
            uint64_t v149 = v160;
            v46(v157, (uint64_t)v160, v175);
            uint64_t v150 = String.init<A>(describing:)();
            unint64_t v152 = v151;
            swift_release();
            uint64_t v183 = sub_100007E88(v150, v152, v184);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v153 = *(void (**)(uint64_t *, uint64_t))(v36 + 8);
            v153(v149, v147);
            os_log_t v154 = v172;
            _os_log_impl((void *)&_mh_execute_header, v172, (os_log_type_t)v169, "[OCM] %s unknown state: %s", v148, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            (*(void (**)(char *, uint64_t))(v171 + 8))(v159, v170);
            uint64_t v66 = v173;
          }
          else
          {
            swift_release_n();
            v153 = *(void (**)(uint64_t *, uint64_t))(v36 + 8);
            uint64_t v155 = v175;
            v153(v160, v175);

            (*(void (**)(char *, uint64_t))(v171 + 8))(v140, v170);
            uint64_t v147 = v155;
          }
          v153((uint64_t *)v42, v147);
        }
        goto LABEL_46;
      }
      uint64_t v83 = v161;
      static Log.network.getter();
      swift_retain_n();
      os_log_t v84 = Logger.logObject.getter();
      int v111 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v84, (os_log_type_t)v111))
      {
        LODWORD(v175) = v111;
        int v86 = (uint8_t *)swift_slowAlloc();
        uint64_t v174 = swift_slowAlloc();
        v184[0] = v174;
        *(_DWORD *)int v86 = 136315138;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v112 = sub_10007B7D4();
        unint64_t v114 = v113;
        swift_release();
        swift_release();
        uint64_t v183 = sub_100007E88(v112, v114, v184);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release_n();
        os_log_type_t v90 = v175;
        unint64_t v91 = "[OCM] %s ready";
        goto LABEL_44;
      }
    }
LABEL_45:
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v171 + 8))(v83, v170);
    goto LABEL_46;
  }
  uint64_t v83 = (char *)v163;
  static Log.network.getter();
  swift_retain_n();
  os_log_t v84 = Logger.logObject.getter();
  int v85 = static os_log_type_t.info.getter();
  if (!os_log_type_enabled(v84, (os_log_type_t)v85)) {
    goto LABEL_45;
  }
  LODWORD(v175) = v85;
  int v86 = (uint8_t *)swift_slowAlloc();
  uint64_t v174 = swift_slowAlloc();
  v184[0] = v174;
  *(_DWORD *)int v86 = 136315138;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_retain();
  swift_release();
  swift_retain();
  uint64_t v87 = sub_10007B7D4();
  unint64_t v89 = v88;
  swift_release();
  swift_release();
  uint64_t v183 = sub_100007E88(v87, v89, v184);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release_n();
  os_log_type_t v90 = v175;
  unint64_t v91 = "[OCM] %s setup";
LABEL_44:
  _os_log_impl((void *)&_mh_execute_header, v84, v90, v91, v86, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  (*(void (**)(char *, uint64_t))(v171 + 8))(v83, v170);
  uint64_t v66 = v173;
LABEL_46:
  uint64_t v115 = static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
  if ((isCurrentExecutor & 1) == 0) {
    uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
  }
  uint64_t v117 = sub_1000109CC(isCurrentExecutor);
  if (!v117)
  {
LABEL_64:
    swift_release();
    return swift_release();
  }
  uint64_t v118 = v117;
  uint64_t v177 = v115;
  uint64_t v119 = v66 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters;
  int v120 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v178 + 56);
  uint64_t v121 = (void (**)(char *, uint64_t, uint64_t))(v178 + 32);
  v122 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v178 + 48);
  for (i = (void (**)(char *, uint64_t))(v178 + 8); ; (*i)(v132, v5))
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    if (*(uint64_t *)(*(void *)v119 + 24) < 1)
    {
      uint64_t v131 = 1;
      uint64_t v125 = (uint64_t)v180;
      goto LABEL_61;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_10006F7BC();
    }
    uint64_t v124 = *(void **)v119;
    uint64_t v125 = (uint64_t)v180;
    uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v178 + 32))(v180, *(void *)v119+ ((*(unsigned __int8 *)(v178 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v178 + 80))+ *(void *)(v178 + 72) * *(void *)(*(void *)v119 + 32), v5);
    uint64_t v127 = v124[4];
    BOOL v128 = __OFADD__(v127, 1);
    uint64_t v129 = v127 + 1;
    if (v128) {
      break;
    }
    uint64_t v130 = v124[3];
    if (v129 >= v124[2]) {
      uint64_t v129 = 0;
    }
    v124[4] = v129;
    if (__OFSUB__(v130, 1)) {
      goto LABEL_83;
    }
    uint64_t v131 = 0;
    v124[3] = v130 - 1;
LABEL_61:
    (*v120)(v125, v131, 1, v5);
    swift_endAccess();
    swift_release();
    if ((*v122)(v125, 1, v5) == 1)
    {
      swift_release();
      sub_100016B90(v125, &qword_1000F2620);
      goto LABEL_64;
    }
    os_log_t v132 = v179;
    (*v121)(v179, v125, v5);
    v184[0] = v118;
    swift_retain();
    CheckedContinuation.resume(returning:)();
  }
  __break(1u);
LABEL_83:
  __break(1u);
  return result;
}

uint64_t sub_100015E90(uint64_t a1)
{
  return sub_10000FEA8(a1, *(void *)(v1 + 16), *(uint8_t **)(v1 + 24));
}

uint64_t sub_100015E98()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = __CocoaSet.contains(_:)();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_1000163D8();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_retain();
  Swift::UInt64 v4 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v4);
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v1 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    goto LABEL_12;
  }
  swift_retain();
  swift_retain();
  uint64_t v8 = NWConnection.identifier.getter();
  swift_release();
  swift_retain();
  uint64_t v9 = NWConnection.identifier.getter();
  swift_release();
  swift_release();
  if (v8 != v9)
  {
    uint64_t v10 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v10;
      if (((*(void *)(v1 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_12;
      }
      swift_retain();
      swift_retain();
      uint64_t v11 = NWConnection.identifier.getter();
      swift_release();
      swift_retain();
      uint64_t v12 = NWConnection.identifier.getter();
      swift_release();
      swift_release();
    }
    while (v11 != v12);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v0;
  uint64_t v16 = *v0;
  *uint64_t v0 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10005E410();
    uint64_t v14 = v16;
  }
  uint64_t v3 = *(void *)(*(void *)(v14 + 48) + 8 * v7);
  sub_100016624(v7);
  *uint64_t v0 = v16;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1000160F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100018820(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100018820(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10005E5BC();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_10001680C(v12);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_1000163D8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = __CocoaSet.count.getter();
  uint64_t v2 = swift_unknownObjectRetain();
  Swift::Int v3 = sub_10005C83C(v2, v1);
  Swift::Int v17 = v3;
  Hasher.init(_seed:)();
  swift_retain();
  swift_retain();
  Swift::UInt64 v4 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v4);
  Swift::Int v5 = Hasher._finalize()();
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    swift_retain();
    swift_retain();
    uint64_t v8 = NWConnection.identifier.getter();
    swift_release();
    swift_retain();
    uint64_t v9 = NWConnection.identifier.getter();
    swift_release();
    swift_release();
    if (v8 == v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v3 + 48) + 8 * v7);
      sub_100016624(v7);
      swift_retain();
      uint64_t v14 = NWConnection.identifier.getter();
      swift_release();
      swift_retain();
      uint64_t v15 = NWConnection.identifier.getter();
      swift_release();
      if (v14 == v15)
      {
        *uint64_t v0 = v17;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v3 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        swift_retain();
        swift_retain();
        uint64_t v11 = NWConnection.identifier.getter();
        swift_release();
        swift_retain();
        uint64_t v12 = NWConnection.identifier.getter();
        swift_release();
        swift_release();
        if (v11 == v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100016624(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_retain();
        swift_retain();
        Swift::UInt64 v10 = NWConnection.identifier.getter();
        swift_release();
        Hasher._combine(_:)(v10);
        Swift::Int v11 = Hasher._finalize()();
        swift_release();
        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 < v9) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(v3 + 48);
          uint64_t v14 = (void *)(v13 + 8 * v2);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10001680C(int64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      uint64_t v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_100018820(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

uint64_t sub_100016B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016B90(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_100005CB0(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100016BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016C54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100016CBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100016D5C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a3 + 36) != a2)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = *(void *)(a3 + 48);
  uint64_t v7 = type metadata accessor for NWBrowser.Result();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v6 + *(void *)(v8 + 72) * v4;

  return v9(a4, v10, v7);
}

uint64_t sub_100016E1C()
{
  return sub_100012DF4();
}

uint64_t sub_100016E24()
{
  return sub_100013D8C();
}

uint64_t sub_100016E2C()
{
  return sub_100013E08(v0[2], v0[3], v0[4]);
}

uint64_t sub_100016E4C(uint64_t a1)
{
  uint64_t v168 = type metadata accessor for NWBrowser.Result.Change.Flags();
  uint64_t v2 = *(void *)(v168 - 8);
  uint64_t v3 = __chkstk_darwin(v168);
  uint64_t v155 = (char *)v151 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  os_log_t v167 = (char *)v151 - v6;
  __chkstk_darwin(v5);
  v166 = (char *)v151 - v7;
  uint64_t v8 = sub_100005CB0(&qword_1000F2620);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v151 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100005CB0(&qword_1000F2628);
  uint64_t v212 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v151 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = type metadata accessor for NWEndpoint();
  v215 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v179 - 8);
  __chkstk_darwin(v179);
  uint64_t v178 = (char *)v151 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = type metadata accessor for Logger();
  v214 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v191 - 8);
  uint64_t v15 = __chkstk_darwin(v191);
  v172 = (char *)v151 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v183 = (char *)v151 - v18;
  __chkstk_darwin(v17);
  v189 = (char *)v151 - v19;
  uint64_t v211 = type metadata accessor for NWBrowser.Result();
  uint64_t v20 = *(void *)(v211 - 8);
  uint64_t v21 = __chkstk_darwin(v211);
  os_log_t v154 = (char *)v151 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  v165 = (char *)v151 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  v164 = (char *)v151 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v173 = (char *)v151 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  v163 = (char *)v151 - v30;
  uint64_t v31 = __chkstk_darwin(v29);
  uint64_t v177 = (char *)v151 - v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v176 = (char *)v151 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  v188 = (char *)v151 - v36;
  __chkstk_darwin(v35);
  v197 = (char *)v151 - v37;
  uint64_t v194 = type metadata accessor for NWBrowser.Result.Change();
  uint64_t v38 = *(void *)(v194 - 8);
  uint64_t v39 = __chkstk_darwin(v194);
  v208 = (char *)v151 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  v203 = (char *)v151 - v41;
  uint64_t v42 = type metadata accessor for CommunicationActor();
  uint64_t v43 = static CommunicationActor.shared.getter();
  uint64_t v44 = sub_100018820(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  v151[1] = v43;
  uint64_t v207 = v42;
  uint64_t v216 = v44;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v45 = *(void *)(a1 + 56);
  uint64_t v186 = a1 + 56;
  uint64_t v46 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v47 = -1;
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  unint64_t v48 = v47 & v45;
  uint64_t v49 = v185 + OBJC_IVAR____TtC11photosfaced25OutgoingConnectionManager_waiters;
  int64_t v187 = (unint64_t)(v46 + 63) >> 6;
  uint64_t v50 = v38;
  uint64_t v201 = v38 + 32;
  uint64_t v202 = v38 + 16;
  uint64_t v200 = v38 + 88;
  int v199 = enum case for NWBrowser.Result.Change.added(_:);
  int v184 = enum case for NWBrowser.Result.Change.removed(_:);
  int v171 = enum case for NWBrowser.Result.Change.changed(_:);
  v153 = (void (**)(char *, uint64_t))(v38 + 8);
  v193 = (void (**)(char *, uint64_t))(v38 + 96);
  int v160 = enum case for NWBrowser.Result.Change.identical(_:);
  v192 = (void (**)(char *, char *, uint64_t))(v20 + 32);
  v159 = (void (**)(char *, os_log_t, uint64_t))(v2 + 32);
  v198 = (NSObject **)(v20 + 16);
  v162 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  v161 = (os_log_t *)(v2 + 8);
  v206 = (uint64_t *)(v20 + 8);
  v190 = (void (**)(char *, uint64_t))(v214 + 1);
  uint64_t v175 = (void (**)(char *, uint64_t))(v215 + 1);
  uint64_t v170 = &v218;
  unint64_t v51 = (void (**)(char *, char *, uint64_t))(v212 + 32);
  v214 = (unsigned int (**)(char *, uint64_t, uint64_t))(v212 + 48);
  v215 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v212 + 56);
  v213 = (void (**)(char *, uint64_t))(v212 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v53 = 0;
  *(void *)&long long v54 = 136315138;
  long long v174 = v54;
  v169 = (char *)&type metadata for Any + 8;
  *(void *)&long long v54 = 136315650;
  long long v152 = v54;
  uint64_t v204 = result;
  uint64_t v55 = v194;
  uint64_t v205 = v50;
  while (2)
  {
    uint64_t v56 = v50;
    while (1)
    {
      if (v48)
      {
        int64_t v209 = v53;
        uint64_t v210 = (v48 - 1) & v48;
        unint64_t v57 = __clz(__rbit64(v48)) | (v53 << 6);
      }
      else
      {
        int64_t v58 = v53 + 1;
        if (__OFADD__(v53, 1)) {
          goto LABEL_71;
        }
        if (v58 >= v187) {
          goto LABEL_68;
        }
        unint64_t v59 = *(void *)(v186 + 8 * v58);
        int64_t v60 = v53 + 1;
        if (!v59)
        {
          int64_t v60 = v53 + 2;
          if (v53 + 2 >= v187) {
            goto LABEL_68;
          }
          unint64_t v59 = *(void *)(v186 + 8 * v60);
          if (!v59)
          {
            int64_t v60 = v53 + 3;
            if (v53 + 3 >= v187) {
              goto LABEL_68;
            }
            unint64_t v59 = *(void *)(v186 + 8 * v60);
            if (!v59)
            {
              uint64_t v61 = v53 + 4;
              if (v53 + 4 >= v187) {
                goto LABEL_68;
              }
              unint64_t v59 = *(void *)(v186 + 8 * v61);
              if (!v59)
              {
                while (1)
                {
                  int64_t v60 = v61 + 1;
                  if (__OFADD__(v61, 1)) {
                    goto LABEL_72;
                  }
                  if (v60 >= v187) {
                    break;
                  }
                  unint64_t v59 = *(void *)(v186 + 8 * v60);
                  ++v61;
                  if (v59) {
                    goto LABEL_24;
                  }
                }
LABEL_68:
                swift_release();
                return swift_release();
              }
              int64_t v60 = v53 + 4;
            }
          }
        }
LABEL_24:
        int64_t v209 = v60;
        uint64_t v210 = (v59 - 1) & v59;
        unint64_t v57 = __clz(__rbit64(v59)) + (v60 << 6);
      }
      uint64_t v62 = v203;
      uint64_t v63 = v56;
      (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v203, *(void *)(result + 48) + *(void *)(v56 + 72) * v57, v55);
      uint64_t v64 = v208;
      (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v208, v62, v55);
      int v65 = (*(uint64_t (**)(char *, uint64_t))(v63 + 88))(v64, v55);
      if (v65 == v199) {
        break;
      }
      if (v65 == v184)
      {
        uint64_t v66 = v208;
        (*v193)(v208, v55);
        uint64_t v67 = v176;
        uint64_t v68 = v211;
        (*v192)(v176, v66, v211);
        static Log.network.getter();
        uint64_t v69 = v177;
        ((void (*)(char *, char *, uint64_t))*v198)(v177, v67, v68);
        uint64_t v70 = Logger.logObject.getter();
        int v71 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v70, (os_log_type_t)v71))
        {
          LODWORD(v182) = v71;
          os_log_t v196 = v70;
          uint64_t v72 = (_DWORD *)swift_slowAlloc();
          os_log_t v181 = (os_log_t)swift_slowAlloc();
          os_log_t v218 = v181;
          uint64_t v195 = (uint64_t)v72;
          *uint64_t v72 = v174;
          v180 = (void (*)(char *, uint64_t))static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          os_log_type_t v73 = v178;
          uint64_t v74 = v177;
          NWBrowser.Result.endpoint.getter();
          uint64_t v75 = sub_100070E00();
          unint64_t v77 = v76;
          (*v175)(v73, v179);
          swift_release();
          uint64_t v78 = sub_100007E88(v75, v77, (uint64_t *)&v218);
          uint64_t v79 = (uint8_t *)v195;
          *(void *)(v195 + 4) = v78;
          swift_bridgeObjectRelease();
          v180 = (void (*)(char *, uint64_t))*v206;
          uint64_t v80 = v211;
          v180(v74, v211);
          os_log_t v81 = v196;
          _os_log_impl((void *)&_mh_execute_header, v196, (os_log_type_t)v182, "[OCM] Browser results removed endpoint: %s", v79, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v190)(v183, v191);
          v180(v176, v80);
          goto LABEL_45;
        }

        v122 = (void (*)(char *, uint64_t))*v206;
        ((void (*)(char *, uint64_t))*v206)(v69, v68);
        (*v190)(v183, v191);
        v122(v67, v68);
        uint64_t v55 = v194;
        uint64_t result = v204;
        uint64_t v56 = v205;
        int64_t v53 = v209;
        unint64_t v48 = v210;
      }
      else if (v65 == v171)
      {
        uint64_t v82 = v208;
        (*v193)(v208, v55);
        uint64_t v83 = sub_100005CB0(&qword_1000F2640);
        uint64_t v84 = v211;
        uint64_t v195 = (uint64_t)&v82[*(int *)(v83 + 48)];
        os_log_t v196 = (os_log_t)&v82[*(int *)(v83 + 64)];
        int v85 = *v192;
        int v86 = v163;
        (*v192)(v163, v82, v211);
        v85(v173, (char *)v195, v84);
        uint64_t v87 = v166;
        uint64_t v88 = v168;
        (*v159)(v166, v196, v168);
        static Log.network.getter();
        unint64_t v89 = *v198;
        os_log_type_t v90 = v86;
        uint64_t v91 = v211;
        ((void (*)(char *, char *, uint64_t))*v198)(v164, v90, v211);
        os_log_t v196 = v89;
        ((void (*)(char *, char *, uint64_t))v89)(v165, v173, v91);
        int v92 = *v162;
        uint64_t v93 = v172;
        (*v162)(v167, v87, v88);
        v94 = Logger.logObject.getter();
        int v95 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v94, (os_log_type_t)v95))
        {
          v157 = v92;
          LODWORD(v180) = v95;
          os_log_t v181 = v94;
          uint64_t v96 = (_DWORD *)swift_slowAlloc();
          uint64_t v158 = swift_slowAlloc();
          os_log_t v218 = (os_log_t)v158;
          uint64_t v195 = (uint64_t)v96;
          *uint64_t v96 = v152;
          uint64_t v182 = (void (*)(char *, uint64_t))static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          unint64_t v97 = v154;
          int v98 = v164;
          uint64_t v99 = v211;
          ((void (*)(char *, char *, uint64_t))v196)(v154, v164, v211);
          uint64_t v100 = String.init<A>(describing:)();
          unint64_t v102 = v101;
          swift_release();
          uint64_t v103 = sub_100007E88(v100, v102, (uint64_t *)&v218);
          uint64_t v104 = v195;
          *(void *)(v195 + 4) = v103;
          swift_bridgeObjectRelease();
          uint64_t v182 = (void (*)(char *, uint64_t))*v206;
          v182(v98, v99);
          *(_WORD *)(v104 + 12) = 2080;
          uint64_t v156 = static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v105 = v165;
          uint64_t v106 = v211;
          ((void (*)(char *, char *, uint64_t))v196)(v97, v165, v211);
          uint64_t v107 = String.init<A>(describing:)();
          unint64_t v109 = v108;
          swift_release();
          uint64_t v110 = sub_100007E88(v107, v109, (uint64_t *)&v218);
          uint64_t v111 = v195;
          *(void *)(v195 + 14) = v110;
          swift_bridgeObjectRelease();
          v182(v105, v106);
          *(_WORD *)(v111 + 22) = 2080;
          os_log_t v196 = (os_log_t)static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v112 = v167;
          uint64_t v113 = v168;
          v157(v155, v167, v168);
          uint64_t v114 = String.init<A>(describing:)();
          unint64_t v116 = v115;
          swift_release();
          uint64_t v117 = sub_100007E88(v114, v116, (uint64_t *)&v218);
          uint64_t v118 = (uint8_t *)v195;
          *(void *)(v195 + 24) = v117;
          swift_bridgeObjectRelease();
          os_log_t v196 = *v161;
          ((void (*)(char *, uint64_t))v196)(v112, v113);
          os_log_t v119 = v181;
          _os_log_impl((void *)&_mh_execute_header, v181, (os_log_type_t)v180, "[OCM] Browser result changed: %s to %s with %s", v118, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v190)(v172, v191);
          ((void (*)(char *, uint64_t))v196)(v166, v113);
          uint64_t v120 = v211;
          uint64_t v121 = v182;
          v182(v173, v211);
          v121(v163, v120);
        }
        else
        {

          os_log_t v196 = *v161;
          uint64_t v124 = v168;
          ((void (*)(char *, uint64_t))v196)(v167, v168);
          uint64_t v125 = (void (*)(char *, uint64_t))*v206;
          ((void (*)(char *, uint64_t))*v206)(v165, v91);
          v125(v164, v91);
          (*v190)(v93, v191);
          ((void (*)(char *, uint64_t))v196)(v166, v124);
          v125(v173, v91);
          v125(v163, v91);
        }
LABEL_45:
        uint64_t result = v204;
        uint64_t v56 = v205;
        uint64_t v55 = v194;
        int64_t v53 = v209;
        unint64_t v48 = v210;
      }
      else
      {
        BOOL v123 = v65 == v160;
        int64_t v53 = v209;
        unint64_t v48 = v210;
        uint64_t result = v204;
        uint64_t v56 = v63;
        if (!v123)
        {
          (*v153)(v208, v55);
          uint64_t v56 = v63;
          uint64_t result = v204;
        }
      }
    }
    (*v193)(v64, v55);
    v126 = v197;
    uint64_t v127 = v211;
    (*v192)(v197, v64, v211);
    BOOL v128 = v189;
    static Log.network.getter();
    uint64_t v129 = v188;
    ((void (*)(char *, char *, uint64_t))*v198)(v188, v126, v127);
    uint64_t v130 = Logger.logObject.getter();
    int v131 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v130, (os_log_type_t)v131))
    {
      LODWORD(v182) = v131;
      os_log_t v196 = v130;
      os_log_t v132 = (_DWORD *)swift_slowAlloc();
      os_log_t v181 = (os_log_t)swift_slowAlloc();
      os_log_t v218 = v181;
      *os_log_t v132 = v174;
      uint64_t v195 = static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      v180 = (void (*)(char *, uint64_t))(v132 + 1);
      uint64_t v133 = v178;
      v134 = (uint8_t *)v132;
      int v135 = v188;
      NWBrowser.Result.endpoint.getter();
      uint64_t v136 = sub_100070E00();
      unint64_t v138 = v137;
      (*v175)(v133, v179);
      swift_release();
      uint64_t v139 = sub_100007E88(v136, v138, (uint64_t *)&v218);
      uint64_t v140 = v134;
      uint64_t v217 = v139;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v195 = *v206;
      ((void (*)(char *, uint64_t))v195)(v135, v211);
      os_log_t v141 = v196;
      _os_log_impl((void *)&_mh_execute_header, v196, (os_log_type_t)v182, "[OCM] Browser results added endpoint: %s", v140, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*v190)(v189, v191);
    }
    else
    {
      uint64_t v195 = *v206;
      ((void (*)(char *, uint64_t))v195)(v129, v127);

      (*v190)(v128, v191);
    }
    uint64_t v50 = v205;
    os_log_t v196 = (os_log_t)static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
    if ((isCurrentExecutor & 1) == 0) {
      uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
    }
    uint64_t v143 = sub_1000109CC(isCurrentExecutor);
    if (!v143)
    {
LABEL_7:
      swift_release();
      ((void (*)(char *, uint64_t))v195)(v197, v211);
      uint64_t result = v204;
      uint64_t v55 = v194;
      int64_t v53 = v209;
      unint64_t v48 = v210;
      continue;
    }
    break;
  }
  uint64_t v144 = v143;
  while (2)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_beginAccess();
    if (*(uint64_t *)(*(void *)v49 + 24) < 1)
    {
      uint64_t v150 = 1;
LABEL_66:
      (*v215)(v10, v150, 1, v11);
      swift_endAccess();
      swift_release();
      if ((*v214)(v10, 1, v11) == 1)
      {
        swift_release();
        sub_100016B90((uint64_t)v10, &qword_1000F2620);
        uint64_t v50 = v205;
        goto LABEL_7;
      }
      (*v51)(v13, v10, v11);
      os_log_t v218 = (os_log_t)v144;
      swift_retain();
      CheckedContinuation.resume(returning:)();
      (*v213)(v13, v11);
      continue;
    }
    break;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_10006F7BC();
  }
  unint64_t v145 = *(void **)v49;
  uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v212 + 32))(v10, *(void *)v49+ ((*(unsigned __int8 *)(v212 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80))+ *(void *)(v212 + 72) * *(void *)(*(void *)v49 + 32), v11);
  uint64_t v146 = v145[4];
  BOOL v147 = __OFADD__(v146, 1);
  uint64_t v148 = v146 + 1;
  if (!v147)
  {
    uint64_t v149 = v145[3];
    if (v148 >= v145[2]) {
      uint64_t v148 = 0;
    }
    v145[4] = v148;
    if (__OFSUB__(v149, 1)) {
      goto LABEL_70;
    }
    uint64_t v150 = 0;
    v145[3] = v149 - 1;
    goto LABEL_66;
  }
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_10001879C()
{
  return sub_100012E68(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1000187B8()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000187F8()
{
  return sub_100013EE4();
}

uint64_t sub_100018800()
{
  return sub_100013F60(v0[2], v0[3], v0[4]);
}

uint64_t sub_100018820(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100018868(uint64_t a1, uint64_t a2)
{
  uint64_t v67 = (char *)a2;
  uint64_t v73 = type metadata accessor for AlbumID();
  uint64_t v3 = *(void *)(v73 - 8);
  uint64_t v4 = __chkstk_darwin(v73);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v68 = (char *)&v62 - v7;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v72 = (char *)&v62 - v12;
  os_log_t v65 = (os_log_t)sub_100005CB0(&qword_1000F2720);
  Class isa = v65[-1].isa;
  __chkstk_darwin(v65);
  uint64_t v15 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = self;
  sub_100005CB0(&qword_1000F2728);
  uint64_t v17 = swift_allocObject();
  long long v64 = xmmword_1000D7AB0;
  *(_OWORD *)(v17 + 16) = xmmword_1000D7AB0;
  *(void *)(v17 + 32) = AlbumID.album.getter();
  *(void *)(v17 + 40) = v18;
  Class v19 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v16 fetchAssetCollectionsWithLocalIdentifiers:v19 options:0];

  id v21 = [v20 firstObject];
  if (v21)
  {
    id v22 = objc_allocWithZone((Class)PHFetchOptions);
    id v23 = v21;
    id v24 = [v22 init];
    uint64_t v62 = a1;
    uint64_t v25 = v24;
    sub_100019380(0, &qword_1000F2740);
    sub_100005CB0(&qword_1000F2748);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = v64;
    *(void *)(v26 + 56) = &type metadata for Int;
    *(void *)(v26 + 64) = &protocol witness table for Int;
    *(void *)(v26 + 32) = 1;
    uint64_t v27 = NSPredicate.init(format:_:)();
    [v25 setPredicate:v27];

    sub_100005CB0(&qword_1000F2750);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_1000D7AC0;
    id v29 = objc_allocWithZone((Class)NSSortDescriptor);
    NSString v30 = String._bridgeToObjectiveC()();
    id v31 = [v29 initWithKey:v30 ascending:1];

    *(void *)(v28 + 32) = v31;
    uint64_t v75 = (char *)v28;
    specialized Array._endMutation()();
    sub_100019380(0, &qword_1000F2758);
    Class v32 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v25 setSortDescriptors:v32];

    [v25 setIncludeHiddenAssets:0];
    uint64_t v33 = self;
    id v63 = v25;
    *(void *)&long long v64 = v23;
    id v34 = [v33 fetchAssetsInAssetCollection:v23 options:v25];
    PHFetchResult<>.collection.getter();
    uint64_t v6 = (char *)sub_10001AD28((uint64_t)v15, *(void *)(v66 + 16), (uint64_t)v67);
    (*((void (**)(char *, os_log_t))isa + 1))(v15, v65);
    static Log.album.getter();
    uint64_t v35 = v68;
    uint64_t v36 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v68, v62, v73);
    swift_bridgeObjectRetain_n();
    id v37 = v34;
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v67 = (char *)swift_slowAlloc();
      uint64_t v75 = v67;
      *(_DWORD *)uint64_t v41 = 136315906;
      sub_10001933C(&qword_1000F2738);
      LODWORD(v66) = v40;
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      os_log_t v65 = v38;
      uint64_t v74 = sub_100007E88(v42, v43, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v35, v36);
      *(_WORD *)(v41 + 12) = 2080;
      sub_1000193BC((uint64_t)v6);
      uint64_t v44 = Dictionary.description.getter();
      unint64_t v46 = v45;
      swift_release();
      uint64_t v74 = sub_100007E88(v44, v46, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 22) = 2048;
      id v47 = [v37 count];

      uint64_t v74 = (uint64_t)v47;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v41 + 32) = 2080;
      swift_bridgeObjectRetain();
      sub_100005CB0(&qword_1000F2760);
      uint64_t v48 = Dictionary.description.getter();
      unint64_t v50 = v49;
      swift_bridgeObjectRelease();
      uint64_t v74 = sub_100007E88(v48, v50, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v51 = v65;
      _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "%s: Picked %s out of %ld photos: %s", (uint8_t *)v41, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v52 = (void *)v64;
    }
    else
    {

      unint64_t v59 = (void *)v64;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v35, v36);

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
  }
  else
  {
    static Log.default.getter();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, v73);
    int64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, v54))
    {
      uint64_t v55 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = (char *)swift_slowAlloc();
      uint64_t v75 = v72;
      *(_DWORD *)uint64_t v55 = 136315138;
      uint64_t v69 = v55 + 4;
      sub_10001933C(&qword_1000F2738);
      uint64_t v56 = v73;
      uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v74 = sub_100007E88(v57, v58, (uint64_t *)&v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v56);
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "Couldn't find album %s", v55, 0xCu);
      uint64_t v6 = v72;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v73);
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v11, v71);
    sub_1000192E8();
    swift_allocError();
    unsigned char *v60 = 0;
    swift_willThrow();
  }
  return v6;
}

uint64_t sub_100019280()
{
  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t type metadata accessor for AlbumProvider()
{
  return self;
}

uint64_t sub_1000192B4()
{
  return sub_10001933C(&qword_1000F26F8);
}

unint64_t sub_1000192E8()
{
  unint64_t result = qword_1000F2730;
  if (!qword_1000F2730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F2730);
  }
  return result;
}

uint64_t sub_10001933C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AlbumID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100019380(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1000193BC(uint64_t a1)
{
  sub_100005CB0(&qword_1000F2768);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v23 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v21 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v22 = v6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v23 + 48) + 8 * i);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v17;
    *(void *)(v3[7] + 8 * i) = v24;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v3[2] = v20;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_22;
    }
    if (v14 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v21) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v22 + 8 * v4);
      if (!v15) {
        break;
      }
    }
LABEL_16:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1000195AC@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

void sub_1000195BC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v23 = a1;
  uint64_t v2 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v2 - 8);
  int64_t v4 = &v22[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100005CB0(&qword_1000F2860);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v11 = &v22[-v10];
  sub_100005CB0(&qword_1000F2720);
  swift_getOpaqueTypeConformance2();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of RandomAccessCollection.index(_:offsetBy:)();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v23 = v5;
  uint64_t v13 = v5;
  int64_t v14 = v12;
  v12(v9, v13);
  unint64_t v15 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
  id v17 = *v16;
  v15(v22, 0);
  id v18 = [v17 uuid];

  if (v18)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.init(uuidString:)();
    swift_bridgeObjectRelease();
    uint64_t v19 = type metadata accessor for UUID();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v4, 1, v19) != 1)
    {
      v14(v11, v23);
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(v21, v4, v19);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t *sub_100019898(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v17 = result;
  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = v4;
  uint64_t v7 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (!v5) {
    return v7;
  }
  uint64_t v21 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t result = (unint64_t *)sub_100054804(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = v21;
    uint64_t v9 = a3;
    if (a4 <= a3) {
      uint64_t v10 = a3;
    }
    else {
      uint64_t v10 = a4;
    }
    uint64_t v16 = v10;
    while (a4 != v9)
    {
      uint64_t v19 = v9;
      uint64_t result = ((unint64_t *(*)(void *__return_ptr, uint64_t *))v17)(v20, &v19);
      if (v6)
      {
        swift_release();
        return v7;
      }
      uint64_t v6 = 0;
      unint64_t v11 = v20[0];
      unint64_t v12 = v20[1];
      uint64_t v21 = v7;
      unint64_t v14 = v7[2];
      unint64_t v13 = v7[3];
      if (v14 >= v13 >> 1)
      {
        uint64_t result = (unint64_t *)sub_100054804(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v21;
      }
      v7[2] = v14 + 1;
      unint64_t v15 = &v7[2 * v14];
      v15[4] = v11;
      v15[5] = v12;
      if (a4 < a3) {
        goto LABEL_19;
      }
      if (v16 == v9) {
        goto LABEL_20;
      }
      if (a4 == ++v9) {
        return v7;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t *sub_1000199F0(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v18 = a1;
  uint64_t v19 = a2;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v21 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_100054824(0, v9, 0);
    uint64_t v10 = v21;
    unint64_t v11 = (uint64_t *)(a3 + 32);
    v16[1] = v6 + 32;
    while (1)
    {
      uint64_t v12 = *v11++;
      uint64_t v20 = v12;
      v18(&v20);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v10;
      unint64_t v14 = v10[2];
      unint64_t v13 = v10[3];
      if (v14 >= v13 >> 1)
      {
        sub_100054824(v13 > 1, v14 + 1, 1);
        uint64_t v10 = v21;
      }
      v10[2] = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v14, v8, v17);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_100019BA0(uint64_t a1, void *a2)
{
  id v49 = a2;
  uint64_t v54 = type metadata accessor for ShuffleID();
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v3 = __chkstk_darwin(v54);
  uint64_t v5 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  unint64_t v50 = (char *)&v46 - v6;
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  os_log_t v51 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v46 - v10;
  ShuffleID.people.getter();
  char v12 = ShuffleID.pets.getter();
  char v13 = ShuffleID.nature.getter();
  char v14 = ShuffleID.cityscape.getter();
  id v15 = objc_allocWithZone((Class)PFCShuffle);
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v15 initWithPeople:isa pets:v12 & 1 nature:v13 & 1 cityscape:v14 & 1];

  id v18 = [self assetsForShuffle:v17];
  if (v18)
  {
    uint64_t v19 = v18;
    sub_10001A40C();
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = sub_10001AE50(v20, *(void *)(v48 + 16), (uint64_t)v49);
    static Log.shuffle.getter();
    uint64_t v22 = v50;
    uint64_t v23 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v50, a1, v54);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v24 = Logger.logObject.getter();
    int v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      LODWORD(v48) = v25;
      os_log_t v51 = v11;
      id v49 = v17;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v58 = v47;
      *(_DWORD *)uint64_t v26 = 136315906;
      sub_10001A3C8(&qword_1000F2838);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v57 = sub_100007E88(v27, v28, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v23);
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v29 = v55;
      sub_10001A7BC(v21);
      uint64_t v55 = v29;
      uint64_t v30 = Dictionary.description.getter();
      unint64_t v32 = v31;
      swift_release();
      uint64_t v57 = sub_100007E88(v30, v32, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2048;
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v33 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t v57 = v33;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 32) = 2080;
      swift_bridgeObjectRetain();
      sub_100005CB0(&qword_1000F2760);
      uint64_t v34 = Dictionary.description.getter();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v57 = sub_100007E88(v34, v36, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v24, (os_log_type_t)v48, "%s: Picked %s out of %ld photos: %s", (uint8_t *)v26, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v22, v23);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v53);
    }
  }
  else
  {
    static Log.shuffle.getter();
    uint64_t v37 = v54;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v5, a1, v54);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    uint64_t v21 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      id v49 = v17;
      uint64_t v41 = (uint8_t *)v40;
      uint64_t v58 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_10001A3C8(&qword_1000F2838);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v57 = sub_100007E88(v42, v43, &v58);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v37);
      _os_log_impl((void *)&_mh_execute_header, v38, (os_log_type_t)v21, "Couldn't find shuffle %s", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v17 = v49;
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v5, v37);
    }

    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    sub_1000192E8();
    swift_allocError();
    *uint64_t v44 = 1;
    swift_willThrow();
  }
  return v21;
}

uint64_t type metadata accessor for ShuffleProvider()
{
  return self;
}

uint64_t sub_10001A394()
{
  return sub_10001A3C8(&qword_1000F2810);
}

uint64_t sub_10001A3C8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShuffleID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10001A40C()
{
  unint64_t result = qword_1000F2840;
  if (!qword_1000F2840)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1000F2840);
  }
  return result;
}

uint64_t sub_10001A44C(void *a1, char a2, void *a3)
{
  uint64_t v4 = a1[2];
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1[4];
  uint64_t v7 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  unint64_t v10 = sub_100050A18(v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v11 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_24;
  }
  unint64_t v15 = v10;
  char v16 = v11;
  uint64_t v17 = v9[3];
  swift_bridgeObjectRetain();
  if (v17 >= v14)
  {
    if (a2)
    {
      if (v16) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_100054074();
      if (v16) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    uint64_t v22 = 8 * v15;
    *(void *)(v21[6] + v22) = v8;
    *(void *)(v21[7] + v22) = v7;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v25;
    uint64_t v26 = v4 - 1;
    if (v4 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      uint64_t v29 = *(i - 1);
      uint64_t v28 = *i;
      uint64_t v30 = (void *)*a3;
      unint64_t v31 = sub_100050A18(v29);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      uint64_t v35 = v33 + v34;
      if (__OFADD__(v33, v34)) {
        break;
      }
      unint64_t v36 = v31;
      char v37 = v32;
      uint64_t v38 = v30[3];
      swift_bridgeObjectRetain();
      if (v38 < v35)
      {
        sub_100051DD8(v35, 1);
        unint64_t v39 = sub_100050A18(v29);
        if ((v37 & 1) != (v40 & 1)) {
          goto LABEL_26;
        }
        unint64_t v36 = v39;
      }
      if (v37) {
        goto LABEL_10;
      }
      uint64_t v41 = (void *)*a3;
      *(void *)(*a3 + 8 * (v36 >> 6) + 64) |= 1 << v36;
      uint64_t v42 = 8 * v36;
      *(void *)(v41[6] + v42) = v29;
      *(void *)(v41[7] + v42) = v28;
      uint64_t v43 = v41[2];
      BOOL v24 = __OFADD__(v43, 1);
      uint64_t v44 = v43 + 1;
      if (v24) {
        goto LABEL_25;
      }
      v41[2] = v44;
      if (!--v26) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_100051DD8(v14, a2 & 1);
  unint64_t v18 = sub_100050A18(v8);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v15 = v18;
    if ((v16 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_100005CB0(&qword_1000F2850);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
LABEL_27:
  _StringGuts.grow(_:)(30);
  v45._object = (void *)0x80000001000D6000;
  v45._countAndFlagsBits = 0xD00000000000001BLL;
  String.append(_:)(v45);
  _print_unlocked<A, B>(_:_:)();
  v46._countAndFlagsBits = 39;
  v46._object = (void *)0xE100000000000000;
  String.append(_:)(v46);
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10001A7BC(uint64_t a1)
{
  sub_100005CB0(&qword_1000F2768);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v23 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v21 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v22 = v6;
  uint64_t v11 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v12 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v4 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v23 + 48) + 8 * i);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *(void *)(v11 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + 8 * i) = v17;
    *(void *)(v3[7] + 8 * i) = v24;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v3[2] = v20;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_22;
    }
    if (v14 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v14 + 1;
      if (v14 + 1 >= v21) {
        return (uint64_t)v3;
      }
      unint64_t v15 = *(void *)(v22 + 8 * v4);
      if (!v15) {
        break;
      }
    }
LABEL_16:
    unint64_t v10 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v21) {
    return (uint64_t)v3;
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v21) {
      return (uint64_t)v3;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_10001A9A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  sub_100005CB0(&qword_1000F2720);
  swift_getOpaqueTypeConformance2();
  dispatch thunk of Collection.count.getter();
  uint64_t v6 = pickPhotos(totalCount:day:picking:)();
  v9[2] = a2;
  uint64_t v7 = sub_1000199F0((void (*)(uint64_t *))sub_10001AFEC, (uint64_t)v9, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

uint64_t sub_10001AA80@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v9 = *a2;
  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = pickPhotos(totalCount:day:picking:)();
  __chkstk_darwin(v5);
  v8[2] = &v9;
  uint64_t v6 = sub_1000199F0((void (*)(uint64_t *))sub_10001AFAC, (uint64_t)v8, v5);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4;
  a3[1] = v6;
  return result;
}

void sub_10001AB88(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  uint64_t v10 = *a2;
  if ((*a2 & 0xC000000000000001) == 0)
  {
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v11 = *(id *)(v10 + 8 * v9 + 32);
      goto LABEL_5;
    }
    __break(1u);
    goto LABEL_11;
  }
  id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
  unint64_t v12 = v11;
  id v13 = [v11 uuid];

  if (!v13)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  UUID.init(uuidString:)();
  swift_bridgeObjectRelease();
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v8, 1, v14) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a3, v8, v14);
    return;
  }
LABEL_12:
  __break(1u);
}

uint64_t sub_10001AD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10001B728();
  uint64_t v7 = sub_10001B728();
  if (__OFADD__(v7, a3))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v7 + a3 < v6)
  {
LABEL_8:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  __chkstk_darwin(v7);
  void v12[2] = a1;
  uint64_t v12[3] = a2;
  if (sub_100019898((unint64_t *)sub_10001AFCC, (uint64_t)v12, v6, v8)[2])
  {
    sub_100005CB0(&qword_1000F2848);
    unint64_t v9 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    unint64_t v9 = &_swiftEmptyDictionarySingleton;
  }
  id v13 = v9;
  uint64_t v10 = (void *)swift_bridgeObjectRetain();
  sub_10001A44C(v10, 1, &v13);
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_10001AE50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v5 = sub_10001B728();
  uint64_t v6 = sub_10001B728();
  if (__OFADD__(v6, a3))
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v6 + a3 < v5)
  {
LABEL_8:
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
    return result;
  }
  __chkstk_darwin(v6);
  v11[2] = &v13;
  v11[3] = a2;
  if (sub_100019898((unint64_t *)sub_10001AF8C, (uint64_t)v11, v5, v7)[2])
  {
    sub_100005CB0(&qword_1000F2848);
    uint64_t v8 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
  }
  unint64_t v12 = v8;
  unint64_t v9 = (void *)swift_bridgeObjectRetain();
  sub_10001A44C(v9, 1, &v12);
  swift_bridgeObjectRelease();
  return (uint64_t)v12;
}

uint64_t sub_10001AF7C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(*(void *)result + 16);
  return result;
}

uint64_t sub_10001AF8C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10001AA80(a1, *(unint64_t **)(v2 + 16), a2);
}

void sub_10001AFAC(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10001AB88(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_10001AFCC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10001A9A8(a1, *(void *)(v2 + 16), a2);
}

void sub_10001AFEC(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_10001B024(int a1, unsigned char *a2, void (*a3)(unsigned char *, unsigned char *, uint64_t))
{
  uint64_t v61 = a3;
  int64_t v60 = a2;
  LODWORD(v63) = a1;
  uint64_t v3 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v3 - 8);
  uint64_t v55 = &v47[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  unint64_t v59 = &v47[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for MessageBody();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for Message.Operation();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for Message();
  uint64_t v57 = *(void *)(v13 - 8);
  uint64_t v58 = v13;
  uint64_t v14 = *(void *)(v57 + 64);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = &v47[-v17];
  __chkstk_darwin(v16);
  uint64_t v20 = &v47[-v19];
  *unint64_t v12 = v63;
  (*(void (**)(_DWORD *, void, uint64_t))(v10 + 104))(v12, enum case for Message.Operation.event(_:), v9);
  v64[0] = (uint64_t)v60;
  v64[1] = (uint64_t)v61;
  sub_10003E840((uint64_t)v60, (unint64_t)v61);
  static ProtocolVersion.current.getter();
  uint64_t v21 = v62;
  MessageBody.init<A>(serializable:version:)();
  if (v21) {
    return (*(uint64_t (**)(_DWORD *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v50 = 0;
  uint64_t v62 = v14;
  int64_t v60 = &v47[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Message.init(operation:content:complete:)();
  uint64_t v23 = v59;
  static Log.network.getter();
  uint64_t v25 = v57;
  uint64_t v24 = v58;
  uint64_t v26 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16);
  uint64_t v51 = v57 + 16;
  v26(v18, v20, v58);
  uint64_t v27 = Logger.logObject.getter();
  int v28 = static os_log_type_t.default.getter();
  BOOL v29 = os_log_type_enabled(v27, (os_log_type_t)v28);
  uint64_t v52 = v20;
  uint64_t v61 = v26;
  if (v29)
  {
    int v48 = v28;
    os_log_t v49 = v27;
    uint64_t v30 = swift_slowAlloc();
    v64[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315394;
    if ((_BYTE)v63)
    {
      uint64_t v31 = 0xD000000000000010;
      if (v63 == 1) {
        unint64_t v32 = 0x80000001000D58B0;
      }
      else {
        unint64_t v32 = 0x80000001000D5890;
      }
    }
    else
    {
      unint64_t v32 = 0xEE00796461655263;
      uint64_t v31 = 0x6E79536D75626C61;
    }
    uint64_t v65 = sub_100007E88(v31, v32, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    uint64_t v37 = Message.shortDescription.getter();
    uint64_t v65 = sub_100007E88(v37, v38, v64);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v33 = v25;
    uint64_t v24 = v58;
    id v63 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
    v63(v18, v58);
    os_log_t v39 = v49;
    _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v48, "[NMC] Sending event %s: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v59, v54);
    uint64_t v35 = (uint64_t)v55;
    uint64_t v34 = v56;
    unint64_t v36 = v60;
  }
  else
  {
    uint64_t v33 = v25;
    id v63 = *(void (**)(unsigned char *, uint64_t))(v25 + 8);
    v63(v18, v24);

    (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v23, v54);
    uint64_t v35 = (uint64_t)v55;
    uint64_t v34 = v56;
    unint64_t v36 = v60;
  }
  uint64_t v40 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v35, 1, 1, v40);
  uint64_t v41 = v52;
  v61(v36, v52, v24);
  uint64_t v42 = v24;
  unint64_t v43 = (*(unsigned __int8 *)(v33 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  Swift::String v45 = v36;
  uint64_t v46 = (uint64_t)v44;
  *((void *)v44 + 2) = 0;
  *((void *)v44 + 3) = 0;
  *((void *)v44 + 4) = v34;
  (*(void (**)(char *, unsigned char *, uint64_t))(v33 + 32))(&v44[v43], v45, v42);
  swift_retain();
  sub_10006702C(v35, (uint64_t)&unk_1000F29A0, v46);
  swift_release();
  return ((uint64_t (*)(unsigned char *, uint64_t))v63)(v41, v42);
}

uint64_t sub_10001B72C()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = static TestProperties.fixedDay.getter();
  if (v5)
  {
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    static Duration.seconds(_:)();
    static TestProperties.albumRotationEpoch.getter();
    uint64_t result = static Duration./ infix(_:_:)();
    if ((~*(void *)&v6 & 0x7FF0000000000000) != 0)
    {
      if (v6 > -9.22337204e18)
      {
        if (v6 < 9.22337204e18) {
          return (uint64_t)v6;
        }
LABEL_9:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
  return result;
}

void *sub_10001B870(uint64_t a1)
{
  uint64_t v28 = sub_100005CB0((uint64_t *)&unk_1000F3A70);
  uint64_t v3 = *(void *)(v28 - 8);
  uint64_t v4 = __chkstk_darwin(v28);
  double v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v27 = (void *)((char *)v24 - v7);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = &_swiftEmptyArrayStorage;
  if (v8)
  {
    v24[0] = v1;
    BOOL v29 = &_swiftEmptyArrayStorage;
    sub_100054938(0, v8, 0);
    uint64_t v10 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
    uint64_t v26 = *(void *)(v3 + 72);
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v24[1] = v12 + 16;
    uint64_t v25 = v13;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v12 + 32);
    do
    {
      uint64_t v15 = (char *)v27;
      uint64_t v16 = v28;
      uint64_t v17 = *(int *)(v28 + 48);
      uint64_t v18 = (char *)v27 + v17;
      uint64_t v19 = *v10;
      *uint64_t v27 = *v10;
      v25(&v15[v17], (char *)v10 + v17, v11);
      uint64_t v20 = (char *)v6 + *(int *)(v16 + 48);
      *double v6 = v19;
      (*v14)(v20, v18, v11);
      sub_100016B90((uint64_t)v6, (uint64_t *)&unk_1000F3A70);
      uint64_t v9 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100054938(0, v9[2] + 1, 1);
        uint64_t v9 = v29;
      }
      unint64_t v22 = v9[2];
      unint64_t v21 = v9[3];
      if (v22 >= v21 >> 1)
      {
        sub_100054938(v21 > 1, v22 + 1, 1);
        uint64_t v9 = v29;
      }
      uint64_t v10 = (uint64_t *)((char *)v10 + v26);
      v9[2] = v22 + 1;
      v9[v22 + 4] = v19;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_10001BABC()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10001BADC, 0, 0);
}

uint64_t sub_10001BADC()
{
  static Platform.current.getter();
  uint64_t v1 = Platform.rawValue.getter();
  if (v1 == Platform.rawValue.getter())
  {
    uint64_t v2 = *(void *)(v0[2] + 16);
    v0[3] = v2;
    swift_retain();
    return _swift_task_switch(sub_10001BBA0, v2, 0);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_10001BBA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F2928;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(1, (uint64_t)&unk_1000F2930, v2);
  swift_release();
  swift_release();
  return _swift_task_switch(sub_10001BC70, 0, 0);
}

uint64_t sub_10001BC70()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return _swift_task_switch(sub_10001BCDC, v1, 0);
}

uint64_t sub_10001BCDC()
{
  sub_1000CE958(3, (uint64_t)&unk_1000F2940, *(void *)(v0 + 16));
  swift_release();
  return _swift_task_switch(sub_10001BD68, 0, 0);
}

uint64_t sub_10001BD68()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_retain();
  return _swift_task_switch(sub_10001BDD4, v1, 0);
}

uint64_t sub_10001BDD4()
{
  sub_1000CE958(2, (uint64_t)&unk_1000F2950, *(void *)(v0 + 16));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001BE58(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return _swift_task_switch(sub_10001BE78, 0, 0);
}

uint64_t sub_10001BE78()
{
  uint64_t v1 = sub_10003E504();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10001BF18;
  return sub_10001CA68(v1);
}

uint64_t sub_10001BF18()
{
  *(void *)(*(void *)v1 + 40) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001C098;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10001C034;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001C034()
{
  sub_100009944(2);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001C098()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001C0FC(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10001C1A4;
  v3[2] = a1;
  return _swift_task_switch(sub_10001C310, 0, 0);
}

uint64_t sub_10001C1A4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v8 = *v4;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = *(uint64_t (**)(void))(v8 + 8);
    return v9();
  }
  else
  {
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, void))(v8 + 8);
    return v11(a1, a2, a3 & 1);
  }
}

uint64_t sub_10001C2F0()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10001C310, 0, 0);
}

uint64_t sub_10001C310()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001C3A8;
  return GalleryDatabase.queryList()();
}

uint64_t sub_10001C3A8(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    double v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_10001C4F4, 0, 0);
  }
}

uint64_t sub_10001C4F4()
{
  uint64_t v1 = *(void *)(v0[4] + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
LABEL_2:
    uint64_t v2 = (uint64_t (*)(void, void, uint64_t))v0[1];
    return v2(0, 0, 1);
  }
  uint64_t v4 = sub_10003E504();
  v0[5] = v4;
  if (!*(void *)(v4 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_2;
  }
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10001C5F8;
  return sub_10001CA68(v4);
}

uint64_t sub_10001C5F8()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10001C95C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10001C714;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001C714()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F2968 + dword_1000F2968);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001C7BC;
  return v3();
}

uint64_t sub_10001C7BC()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_10001C8EC, 0, 0);
  }
}

uint64_t sub_10001C8EC()
{
  sub_100009944(2);
  uint64_t v1 = *(uint64_t (**)(void, void, uint64_t))(v0 + 8);
  return v1(0, 0, 1);
}

uint64_t sub_10001C95C()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10001C9C0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100040434;
  v3[2] = a1;
  return _swift_task_switch(sub_10001C310, 0, 0);
}

uint64_t sub_10001CA68(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for ShuffleID();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_10001CB38, 0, 0);
}

uint64_t sub_10001CB38()
{
  v0[8] = *(void *)(v0[3] + 32);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001CBD4;
  return GalleryDatabase.deleteAll()();
}

uint64_t sub_10001CBD4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
  else
  {
    return _swift_task_switch(sub_10001CD14, 0, 0);
  }
}

uint64_t sub_10001CD14()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16);
  char v3 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 112) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-(-1 << v3) < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 56);
  uint64_t v7 = (void *)swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v6));
    uint64_t v10 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 80) = v8;
    *(void *)(v0 + 88) = v10;
    uint64_t v11 = *(void *)(v0 + 48);
    uint64_t v12 = *(void *)(v0 + 56);
    uint64_t v13 = *(void *)(v0 + 32);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v1 + 16))(v12, v7[6] + *(void *)(v1 + 72) * v9, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v11, v12, v13);
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10001CF58;
    uint64_t v15 = *(void *)(v0 + 48);
    return GalleryDatabase.insert(id:)(v15);
  }
  unint64_t v16 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    unint64_t v17 = v7[8];
    if (v17)
    {
      uint64_t v8 = 1;
LABEL_11:
      uint64_t v10 = (v17 - 1) & v17;
      unint64_t v9 = __clz(__rbit64(v17)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v16 >= 0xC0)
    {
      unint64_t v17 = v7[9];
      if (v17)
      {
        uint64_t v8 = 2;
        goto LABEL_11;
      }
      if (v16 >= 0x100)
      {
        unint64_t v17 = v7[10];
        if (v17)
        {
          uint64_t v8 = 3;
          goto LABEL_11;
        }
        if (v16 >= 0x140)
        {
          unint64_t v17 = v7[11];
          if (v17)
          {
            uint64_t v8 = 4;
            goto LABEL_11;
          }
          uint64_t v18 = 0;
          uint64_t v19 = v16 >> 6;
          if (v19 <= 5) {
            uint64_t v19 = 5;
          }
          uint64_t v20 = v19 - 5;
          while (v20 != v18)
          {
            unint64_t v17 = v7[v18++ + 12];
            if (v17)
            {
              uint64_t v8 = v18 + 4;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_10001CF58()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10001D2A0;
  }
  else {
    uint64_t v2 = sub_10001D06C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10001D06C()
{
  uint64_t v1 = (*(uint64_t (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
  int64_t v2 = *(void *)(v0 + 80);
  unint64_t v3 = *(void *)(v0 + 88);
  if (v3)
  {
    uint64_t v4 = (v3 - 1) & v3;
    unint64_t v5 = __clz(__rbit64(v3)) | (v2 << 6);
    uint64_t v1 = *(void *)(v0 + 16);
    goto LABEL_3;
  }
  int64_t v11 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v12 = (unint64_t)((1 << *(unsigned char *)(v0 + 112)) + 63) >> 6;
  uint64_t v1 = *(void *)(v0 + 16);
  if (v11 < v12)
  {
    uint64_t v13 = v1 + 56;
    unint64_t v14 = *(void *)(v1 + 56 + 8 * v11);
    ++v2;
    if (v14)
    {
LABEL_9:
      uint64_t v4 = (v14 - 1) & v14;
      unint64_t v5 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_3:
      *(void *)(v0 + 80) = v2;
      *(void *)(v0 + 88) = v4;
      uint64_t v6 = *(void *)(v0 + 48);
      uint64_t v7 = *(void *)(v0 + 56);
      uint64_t v8 = *(void *)(v0 + 32);
      uint64_t v9 = *(void *)(v0 + 40);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v7, *(void *)(v1 + 48) + *(void *)(v9 + 72) * v5, v8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v6, v7, v8);
      uint64_t v10 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v10;
      *uint64_t v10 = v0;
      v10[1] = sub_10001CF58;
      uint64_t v1 = *(void *)(v0 + 48);
      return GalleryDatabase.insert(id:)(v1);
    }
    int64_t v2 = v11 + 1;
    if (v11 + 1 < v12)
    {
      unint64_t v14 = *(void *)(v13 + 8 * v2);
      if (v14) {
        goto LABEL_9;
      }
      int64_t v2 = v11 + 2;
      if (v11 + 2 < v12)
      {
        unint64_t v14 = *(void *)(v13 + 8 * v2);
        if (v14) {
          goto LABEL_9;
        }
        int64_t v15 = v11 + 3;
        if (v15 < v12)
        {
          unint64_t v14 = *(void *)(v13 + 8 * v15);
          if (v14)
          {
            int64_t v2 = v15;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v2 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            if (v2 >= v12) {
              goto LABEL_20;
            }
            unint64_t v14 = *(void *)(v13 + 8 * v2);
            ++v15;
            if (v14) {
              goto LABEL_9;
            }
          }
LABEL_24:
          __break(1u);
          return GalleryDatabase.insert(id:)(v1);
        }
      }
    }
  }
LABEL_20:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_10001D2A0()
{
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10001D330()
{
  v1[20] = v0;
  uint64_t v2 = sub_100005CB0(&qword_1000F2970);
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ShuffleID();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = type metadata accessor for CommunicationActor();
  v1[42] = static CommunicationActor.shared.getter();
  v1[43] = static CommunicationActor.shared.getter();
  uint64_t v5 = type metadata accessor for GalleryDatabase();
  uint64_t v6 = sub_10003FEA4(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v7 = (void *)swift_task_alloc();
  v1[44] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10001D5E4;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v5, v6);
}

uint64_t sub_10001D5E4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[45] = a1;
  v3[46] = v1;
  swift_task_dealloc();
  uint64_t v4 = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  if (v1)
  {
    v3[51] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_10001E3C8;
  }
  else
  {
    v3[47] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_10001D79C;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_10001D79C()
{
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 384) = v2;
  *(void *)(v0 + 392) = v1;
  return _swift_task_switch(sub_10001D828, v2, v1);
}

uint64_t sub_10001D828()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 400) = v2;
  if (!v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    static Log.session.getter();
    swift_retain_n();
    int64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      unint64_t v17 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v17 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *(void *)(v0 + 272);
      uint64_t v64 = *(void *)(v0 + 264);
      os_log_t loga = *(os_log_t *)(v0 + 320);
      swift_release();
      swift_release();
      uint64_t v19 = PhotosFaceType.description.getter();
      *(void *)(v0 + 152) = sub_100007E88(v19, v20, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No %s faces. Exiting.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v18 + 8))(loga, v64);
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 320);
      uint64_t v51 = *(void *)(v0 + 264);
      uint64_t v52 = *(void *)(v0 + 272);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_25;
  }
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v62 = v4;
    uint64_t v5 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v6 = *(void *)(v1 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v7 = PhotosFaceType.description.getter();
    *(void *)(v0 + 136) = sub_100007E88(v7, v8, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_release();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_100007E88(v12, v14, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v62, "Processing %ld %s: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v21(v9, v10);
  *(void *)(v0 + 416) = v11 + 8;
  *(void *)(v0 + 424) = v21;
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v23 += 16;
  uint64_t v24 = v25;
  int v26 = *(_DWORD *)(v23 + 64);
  *(_DWORD *)(v0 + 576) = v26;
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 368);
  *(void *)(v0 + 480) = v21;
  *(void *)(v0 + 488) = 0;
  *(void *)(v0 + 464) = v21;
  *(void *)(v0 + 472) = v21;
  uint64_t v29 = *(void *)(v0 + 256);
  uint64_t v30 = v27 + ((v26 + 32) & ~(unint64_t)v26);
  *(void *)(v0 + 496) = 1;
  *(void *)(v0 + 504) = v25;
  *(void *)(v0 + 512) = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  swift_bridgeObjectRetain();
  v25(v29, v30, v22);
  static Task<>.checkCancellation()();
  uint64_t v31 = *(void *)(v0 + 192);
  if (v28)
  {
    uint64_t v32 = *(void *)(v0 + 256);
    uint64_t v33 = *(void *)(v0 + 200);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v31);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
LABEL_25:
    return v34();
  }
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 256);
  static Log.photos.getter();
  v24(v36, v35, v31);
  swift_retain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v63 = v38;
    log = v37;
    uint64_t v67 = (uint64_t *)(v0 + 104);
    uint64_t v39 = swift_slowAlloc();
    *(void *)(v0 + 104) = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v40 = PhotosFaceType.description.getter();
    *(void *)(v0 + 112) = sub_100007E88(v40, v41, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v39 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v61 = *(void *)(v0 + 296);
    uint64_t v42 = *(void *)(v0 + 240);
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v60 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 192);
    uint64_t v45 = *(void *)(v0 + 200);
    v24(v42, v43, v44);
    swift_release();
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v46(v43, v44);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v49 = v48;
    v46(v42, v44);
    *(void *)(v0 + 120) = sub_100007E88(v47, v49, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v63, "Processing %s face %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v61, v60);
  }
  else
  {
    uint64_t v54 = *(void *)(v0 + 296);
    uint64_t v55 = *(void *)(v0 + 264);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
    v46(*(void *)(v0 + 248), *(void *)(v0 + 192));
    swift_release_n();

    v21(v54, v55);
  }
  *(void *)(v0 + 520) = v46;
  uint64_t v56 = static TestProperties.bufferSize.getter();
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v57;
  void *v57 = v0;
  v57[1] = sub_10001E720;
  uint64_t v58 = *(void *)(v0 + 256);
  uint64_t v59 = *(void *)(v0 + 184);
  return sub_100027D8C(v59, v58, v56);
}

uint64_t sub_10001E3C8()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10004041C, v1, v0);
}

uint64_t sub_10001E454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_100040420;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_10001E570;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10001E570()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10001E604;
  return sub_100059D90();
}

uint64_t sub_10001E604()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_100040424;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_100040464;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10001E720()
{
  uint64_t v2 = (void *)*v1;
  v2[67] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[48];
    uint64_t v4 = v2[49];
    return _swift_task_switch(sub_10001EA60, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[68] = v5;
    uint64_t v6 = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    *uint64_t v5 = v2;
    v5[1] = sub_10001E8CC;
    uint64_t v7 = v2[21];
    return AsyncSequence.collect()(v7, v6);
  }
}

uint64_t sub_10001E8CC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[69] = a1;
  v4[70] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[22] + 8))(v3[23], v3[21]);
  uint64_t v5 = v3[49];
  uint64_t v6 = v3[48];
  if (v1) {
    uint64_t v7 = sub_10001FF88;
  }
  else {
    uint64_t v7 = sub_10001F4C0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_10001EA60()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    unint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10001E454;
    return sub_100031B14();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      os_log_type_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_10001E720;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100027D8C(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_10001F4C0()
{
  uint64_t v73 = (uint64_t *)(v0 + 104);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v69 = v6;
    uint64_t v72 = (uint64_t *)(v0 + 72);
    uint64_t v7 = swift_slowAlloc();
    *(void *)(v0 + 72) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    *(void *)(v0 + 80) = sub_100007E88(v8, v9, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = *(void *)(*(void *)(v0 + 552) + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 88) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v64 = *(void *)(v0 + 264);
    uint64_t v65 = *(void *)(v0 + 288);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v15, v14, v13);
    swift_release();
    v11(v14, v13);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    v11(v15, v13);
    *(void *)(v0 + 96) = sub_100007E88(v16, v18, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v69, "Processed %s %ld photos from %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v68(v65, v64);
  }
  else
  {
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 264);
    (*(void (**)(void, void))(v0 + 520))(*(void *)(v0 + 232), *(void *)(v0 + 192));

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v19(v20, v21);
  }
  uint64_t v22 = *v12;
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v24 = *(void *)(v0 + 488);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(*(void *)(v0 + 552) + 16);
  swift_bridgeObjectRelease();
  uint64_t result = v23(v25, v26);
  uint64_t v29 = v24 + v27;
  if (__OFADD__(v24, v27))
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v30 = *(void *)(v0 + 560);
  *(void *)(v0 + 568) = v29;
  uint64_t v31 = *(void *)(v0 + 496);
  if (v31 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_10001E454;
    return sub_100031B14();
  }
  *(void *)(v0 + 480) = v22;
  *(void *)(v0 + 488) = v29;
  *(void *)(v0 + 464) = v22;
  *(void *)(v0 + 472) = v22;
  *(void *)(v0 + 496) = v31 + 1;
  if (__OFADD__(v31, 1))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v33 = *(void *)(v0 + 256);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v35 += 16;
  uint64_t v36 = v37;
  unint64_t v38 = *(void *)(v0 + 360)
      + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
      + *(void *)(v35 + 56) * v31;
  *(void *)(v0 + 504) = v37;
  *(void *)(v0 + 512) = v35 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v37(v33, v38, v34);
  static Task<>.checkCancellation()();
  uint64_t v39 = *(void *)(v0 + 192);
  if (v30)
  {
    uint64_t v40 = *(void *)(v0 + 256);
    uint64_t v41 = *(void *)(v0 + 200);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v39);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 256);
    static Log.photos.getter();
    v36(v44, v43, v39);
    swift_retain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v70 = v46;
      log = v45;
      uint64_t v47 = swift_slowAlloc();
      *(void *)(v0 + 104) = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      swift_release();
      uint64_t v48 = PhotosFaceType.description.getter();
      *(void *)(v0 + 112) = sub_100007E88(v48, v49, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v67 = *(void *)(v0 + 296);
      uint64_t v51 = *(void *)(v0 + 240);
      uint64_t v50 = *(void *)(v0 + 248);
      uint64_t v66 = *(void *)(v0 + 264);
      uint64_t v53 = *(void *)(v0 + 192);
      uint64_t v52 = *(void *)(v0 + 200);
      v36(v51, v50, v53);
      swift_release();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v54(v50, v53);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v57 = v56;
      v54(v51, v53);
      *(void *)(v0 + 120) = sub_100007E88(v55, v57, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v70, "Processing %s face %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v22(v67, v66);
    }
    else
    {
      uint64_t v58 = *(void *)(v0 + 296);
      uint64_t v59 = *(void *)(v0 + 264);
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
      v54(*(void *)(v0 + 248), *(void *)(v0 + 192));

      swift_release_n();
      v22(v58, v59);
    }
    *(void *)(v0 + 520) = v54;
    uint64_t v60 = static TestProperties.bufferSize.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_10001E720;
    uint64_t v62 = *(void *)(v0 + 256);
    uint64_t v63 = *(void *)(v0 + 184);
    return sub_100027D8C(v63, v62, v60);
  }
}

uint64_t sub_10001FF88()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10001E454;
    return sub_100031B14();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      unint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_10001E720;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100027D8C(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_1000209E8()
{
  v1[20] = v0;
  uint64_t v2 = sub_100005CB0(&qword_1000F2970);
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ShuffleID();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = type metadata accessor for CommunicationActor();
  v1[42] = static CommunicationActor.shared.getter();
  v1[43] = static CommunicationActor.shared.getter();
  uint64_t v5 = type metadata accessor for ShuffleDatabase();
  uint64_t v6 = sub_10003FEA4(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v7 = (void *)swift_task_alloc();
  v1[44] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_100020C9C;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v5, v6);
}

uint64_t sub_100020C9C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[45] = a1;
  v3[46] = v1;
  swift_task_dealloc();
  uint64_t v4 = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  if (v1)
  {
    v3[51] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_10001E3C8;
  }
  else
  {
    v3[47] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100020E54;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100020E54()
{
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 384) = v2;
  *(void *)(v0 + 392) = v1;
  return _swift_task_switch(sub_100020EE0, v2, v1);
}

uint64_t sub_100020EE0()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 400) = v2;
  if (!v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    static Log.session.getter();
    swift_retain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *(void *)(v0 + 272);
      uint64_t v64 = *(void *)(v0 + 264);
      os_log_t loga = *(os_log_t *)(v0 + 320);
      swift_release();
      swift_release();
      uint64_t v19 = PhotosFaceType.description.getter();
      *(void *)(v0 + 152) = sub_100007E88(v19, v20, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No %s faces. Exiting.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v18 + 8))(loga, v64);
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 320);
      uint64_t v51 = *(void *)(v0 + 264);
      uint64_t v52 = *(void *)(v0 + 272);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_25;
  }
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v62 = v4;
    uint64_t v5 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v6 = *(void *)(v1 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v7 = PhotosFaceType.description.getter();
    *(void *)(v0 + 136) = sub_100007E88(v7, v8, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_release();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_100007E88(v12, v14, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v62, "Processing %ld %s: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v21(v9, v10);
  *(void *)(v0 + 416) = v11 + 8;
  *(void *)(v0 + 424) = v21;
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v23 += 16;
  uint64_t v24 = v25;
  int v26 = *(_DWORD *)(v23 + 64);
  *(_DWORD *)(v0 + 576) = v26;
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 368);
  *(void *)(v0 + 480) = v21;
  *(void *)(v0 + 488) = 0;
  *(void *)(v0 + 464) = v21;
  *(void *)(v0 + 472) = v21;
  uint64_t v29 = *(void *)(v0 + 256);
  uint64_t v30 = v27 + ((v26 + 32) & ~(unint64_t)v26);
  *(void *)(v0 + 496) = 1;
  *(void *)(v0 + 504) = v25;
  *(void *)(v0 + 512) = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  swift_bridgeObjectRetain();
  v25(v29, v30, v22);
  static Task<>.checkCancellation()();
  uint64_t v31 = *(void *)(v0 + 192);
  if (v28)
  {
    uint64_t v32 = *(void *)(v0 + 256);
    uint64_t v33 = *(void *)(v0 + 200);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v31);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
LABEL_25:
    return v34();
  }
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 256);
  static Log.photos.getter();
  v24(v36, v35, v31);
  swift_retain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v63 = v38;
    log = v37;
    uint64_t v67 = (uint64_t *)(v0 + 104);
    uint64_t v39 = swift_slowAlloc();
    *(void *)(v0 + 104) = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v40 = PhotosFaceType.description.getter();
    *(void *)(v0 + 112) = sub_100007E88(v40, v41, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v39 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v61 = *(void *)(v0 + 296);
    uint64_t v42 = *(void *)(v0 + 240);
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v60 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 192);
    uint64_t v45 = *(void *)(v0 + 200);
    v24(v42, v43, v44);
    swift_release();
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v46(v43, v44);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v49 = v48;
    v46(v42, v44);
    *(void *)(v0 + 120) = sub_100007E88(v47, v49, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v63, "Processing %s face %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v61, v60);
  }
  else
  {
    uint64_t v54 = *(void *)(v0 + 296);
    uint64_t v55 = *(void *)(v0 + 264);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
    v46(*(void *)(v0 + 248), *(void *)(v0 + 192));
    swift_release_n();

    v21(v54, v55);
  }
  *(void *)(v0 + 520) = v46;
  uint64_t v56 = static TestProperties.bufferSize.getter();
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v57;
  void *v57 = v0;
  v57[1] = sub_100021A80;
  uint64_t v58 = *(void *)(v0 + 256);
  uint64_t v59 = *(void *)(v0 + 184);
  return sub_100028570(v59, v58, v56);
}

uint64_t sub_100021A80()
{
  uint64_t v2 = (void *)*v1;
  v2[67] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[48];
    uint64_t v4 = v2[49];
    return _swift_task_switch(sub_100021DC0, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[68] = v5;
    uint64_t v6 = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    *uint64_t v5 = v2;
    v5[1] = sub_100021C2C;
    uint64_t v7 = v2[21];
    return AsyncSequence.collect()(v7, v6);
  }
}

uint64_t sub_100021C2C(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[69] = a1;
  v4[70] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[22] + 8))(v3[23], v3[21]);
  uint64_t v5 = v3[49];
  uint64_t v6 = v3[48];
  if (v1) {
    uint64_t v7 = sub_1000232E8;
  }
  else {
    uint64_t v7 = sub_100022820;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100021DC0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    unint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10001E454;
    return sub_10003252C();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      os_log_type_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_100021A80;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100028570(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_100022820()
{
  uint64_t v73 = (uint64_t *)(v0 + 104);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v69 = v6;
    uint64_t v72 = (uint64_t *)(v0 + 72);
    uint64_t v7 = swift_slowAlloc();
    *(void *)(v0 + 72) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    *(void *)(v0 + 80) = sub_100007E88(v8, v9, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = *(void *)(*(void *)(v0 + 552) + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 88) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v64 = *(void *)(v0 + 264);
    uint64_t v65 = *(void *)(v0 + 288);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v15, v14, v13);
    swift_release();
    v11(v14, v13);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    v11(v15, v13);
    *(void *)(v0 + 96) = sub_100007E88(v16, v18, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v69, "Processed %s %ld photos from %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v68(v65, v64);
  }
  else
  {
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 264);
    (*(void (**)(void, void))(v0 + 520))(*(void *)(v0 + 232), *(void *)(v0 + 192));

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v19(v20, v21);
  }
  uint64_t v22 = *v12;
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v24 = *(void *)(v0 + 488);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(*(void *)(v0 + 552) + 16);
  swift_bridgeObjectRelease();
  uint64_t result = v23(v25, v26);
  uint64_t v29 = v24 + v27;
  if (__OFADD__(v24, v27))
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v30 = *(void *)(v0 + 560);
  *(void *)(v0 + 568) = v29;
  uint64_t v31 = *(void *)(v0 + 496);
  if (v31 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_10001E454;
    return sub_10003252C();
  }
  *(void *)(v0 + 480) = v22;
  *(void *)(v0 + 488) = v29;
  *(void *)(v0 + 464) = v22;
  *(void *)(v0 + 472) = v22;
  *(void *)(v0 + 496) = v31 + 1;
  if (__OFADD__(v31, 1))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v33 = *(void *)(v0 + 256);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v35 += 16;
  uint64_t v36 = v37;
  unint64_t v38 = *(void *)(v0 + 360)
      + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
      + *(void *)(v35 + 56) * v31;
  *(void *)(v0 + 504) = v37;
  *(void *)(v0 + 512) = v35 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v37(v33, v38, v34);
  static Task<>.checkCancellation()();
  uint64_t v39 = *(void *)(v0 + 192);
  if (v30)
  {
    uint64_t v40 = *(void *)(v0 + 256);
    uint64_t v41 = *(void *)(v0 + 200);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v39);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 256);
    static Log.photos.getter();
    v36(v44, v43, v39);
    swift_retain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v70 = v46;
      log = v45;
      uint64_t v47 = swift_slowAlloc();
      *(void *)(v0 + 104) = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      swift_release();
      uint64_t v48 = PhotosFaceType.description.getter();
      *(void *)(v0 + 112) = sub_100007E88(v48, v49, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v67 = *(void *)(v0 + 296);
      uint64_t v51 = *(void *)(v0 + 240);
      uint64_t v50 = *(void *)(v0 + 248);
      uint64_t v66 = *(void *)(v0 + 264);
      uint64_t v53 = *(void *)(v0 + 192);
      uint64_t v52 = *(void *)(v0 + 200);
      v36(v51, v50, v53);
      swift_release();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v54(v50, v53);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v57 = v56;
      v54(v51, v53);
      *(void *)(v0 + 120) = sub_100007E88(v55, v57, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v70, "Processing %s face %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v22(v67, v66);
    }
    else
    {
      uint64_t v58 = *(void *)(v0 + 296);
      uint64_t v59 = *(void *)(v0 + 264);
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
      v54(*(void *)(v0 + 248), *(void *)(v0 + 192));

      swift_release_n();
      v22(v58, v59);
    }
    *(void *)(v0 + 520) = v54;
    uint64_t v60 = static TestProperties.bufferSize.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_100021A80;
    uint64_t v62 = *(void *)(v0 + 256);
    uint64_t v63 = *(void *)(v0 + 184);
    return sub_100028570(v63, v62, v60);
  }
}

uint64_t sub_1000232E8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_10001E454;
    return sub_10003252C();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      unint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_100021A80;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100028570(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_100023D48()
{
  v1[20] = v0;
  uint64_t v2 = sub_100005CB0(&qword_1000F2970);
  v1[21] = v2;
  v1[22] = *(void *)(v2 - 8);
  v1[23] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for AlbumID();
  v1[24] = v3;
  v1[25] = *(void *)(v3 - 8);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v1[33] = v4;
  v1[34] = *(void *)(v4 - 8);
  v1[35] = swift_task_alloc();
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = type metadata accessor for CommunicationActor();
  v1[42] = static CommunicationActor.shared.getter();
  v1[43] = static CommunicationActor.shared.getter();
  uint64_t v5 = type metadata accessor for AlbumDatabase();
  uint64_t v6 = sub_10003FEA4(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  uint64_t v7 = (void *)swift_task_alloc();
  v1[44] = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_100023FFC;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v5, v6);
}

uint64_t sub_100023FFC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[45] = a1;
  v3[46] = v1;
  swift_task_dealloc();
  uint64_t v4 = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  if (v1)
  {
    v3[51] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_100024DE0;
  }
  else
  {
    v3[47] = v4;
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1000241B4;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_1000241B4()
{
  swift_release();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 384) = v2;
  *(void *)(v0 + 392) = v1;
  return _swift_task_switch(sub_100024240, v2, v1);
}

uint64_t sub_100024240()
{
  uint64_t v69 = v0;
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 400) = v2;
  if (!v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    static Log.session.getter();
    swift_retain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      v68[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *(void *)(v0 + 272);
      uint64_t v64 = *(void *)(v0 + 264);
      os_log_t loga = *(os_log_t *)(v0 + 320);
      swift_release();
      swift_release();
      uint64_t v19 = PhotosFaceType.description.getter();
      *(void *)(v0 + 152) = sub_100007E88(v19, v20, v68);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "No %s faces. Exiting.", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v18 + 8))(loga, v64);
    }
    else
    {
      uint64_t v50 = *(void *)(v0 + 320);
      uint64_t v51 = *(void *)(v0 + 264);
      uint64_t v52 = *(void *)(v0 + 272);
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v50, v51);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_25;
  }
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v62 = v4;
    uint64_t v5 = swift_slowAlloc();
    v68[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v6 = *(void *)(v1 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v7 = PhotosFaceType.description.getter();
    *(void *)(v0 + 136) = sub_100007E88(v7, v8, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_release();
    uint64_t v12 = Array.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = sub_100007E88(v12, v14, v68);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v62, "Processing %ld %s: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 312);
    uint64_t v10 = *(void *)(v0 + 264);
    uint64_t v11 = *(void *)(v0 + 272);
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
  v21(v9, v10);
  *(void *)(v0 + 416) = v11 + 8;
  *(void *)(v0 + 424) = v21;
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16);
  v23 += 16;
  uint64_t v24 = v25;
  int v26 = *(_DWORD *)(v23 + 64);
  *(_DWORD *)(v0 + 576) = v26;
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 368);
  *(void *)(v0 + 480) = v21;
  *(void *)(v0 + 488) = 0;
  *(void *)(v0 + 464) = v21;
  *(void *)(v0 + 472) = v21;
  uint64_t v29 = *(void *)(v0 + 256);
  uint64_t v30 = v27 + ((v26 + 32) & ~(unint64_t)v26);
  *(void *)(v0 + 496) = 1;
  *(void *)(v0 + 504) = v25;
  *(void *)(v0 + 512) = v23 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  swift_bridgeObjectRetain();
  v25(v29, v30, v22);
  static Task<>.checkCancellation()();
  uint64_t v31 = *(void *)(v0 + 192);
  if (v28)
  {
    uint64_t v32 = *(void *)(v0 + 256);
    uint64_t v33 = *(void *)(v0 + 200);
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v31);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v34 = *(uint64_t (**)(void))(v0 + 8);
LABEL_25:
    return v34();
  }
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v35 = *(void *)(v0 + 256);
  static Log.photos.getter();
  v24(v36, v35, v31);
  swift_retain_n();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    os_log_type_t v63 = v38;
    log = v37;
    uint64_t v67 = (uint64_t *)(v0 + 104);
    uint64_t v39 = swift_slowAlloc();
    *(void *)(v0 + 104) = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v40 = PhotosFaceType.description.getter();
    *(void *)(v0 + 112) = sub_100007E88(v40, v41, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v39 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v61 = *(void *)(v0 + 296);
    uint64_t v42 = *(void *)(v0 + 240);
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v60 = *(void *)(v0 + 264);
    uint64_t v44 = *(void *)(v0 + 192);
    uint64_t v45 = *(void *)(v0 + 200);
    v24(v42, v43, v44);
    swift_release();
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
    v46(v43, v44);
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v49 = v48;
    v46(v42, v44);
    *(void *)(v0 + 120) = sub_100007E88(v47, v49, v67);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v63, "Processing %s face %s", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v61, v60);
  }
  else
  {
    uint64_t v54 = *(void *)(v0 + 296);
    uint64_t v55 = *(void *)(v0 + 264);
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
    v46(*(void *)(v0 + 248), *(void *)(v0 + 192));
    swift_release_n();

    v21(v54, v55);
  }
  *(void *)(v0 + 520) = v46;
  uint64_t v56 = static TestProperties.bufferSize.getter();
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 528) = v57;
  void *v57 = v0;
  v57[1] = sub_1000259B4;
  uint64_t v58 = *(void *)(v0 + 256);
  uint64_t v59 = *(void *)(v0 + 184);
  return sub_100028C38(v59, v58, v56);
}

uint64_t sub_100024DE0()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100024E6C, v1, v0);
}

uint64_t sub_100024E6C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100024F90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_10002525C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_1000250AC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000250AC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100025140;
  return sub_100059D90();
}

uint64_t sub_100025140()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_100025890;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 384);
    uint64_t v4 = *(void *)(v2 + 392);
    uint64_t v5 = sub_100025380;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002525C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100025380()
{
  uint64_t v21 = v0;
  swift_release();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v19 = v2;
    uint64_t v3 = swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 134218754;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v4 = *(void *)(v0[45] + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v0[2] = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v5 = PhotosFaceType.description.getter();
    v0[3] = sub_100007E88(v5, v6, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v3 + 22) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = v0[71];
    swift_release();
    v0[4] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 32) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v8 = (void (*)(uint64_t, uint64_t))v0[53];
    uint64_t v9 = v0[38];
    uint64_t v10 = v0[33];
    swift_release();
    uint64_t v11 = Array.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v0[5] = sub_100007E88(v11, v13, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v19, "Processed %ld %s faces: %ld photos in faces: %s", (uint8_t *)v3, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v8(v9, v10);
  }
  else
  {
    unint64_t v14 = (void (*)(uint64_t, uint64_t))v0[53];
    uint64_t v15 = v0[38];
    uint64_t v16 = v0[33];
    swift_release_n();
    swift_bridgeObjectRelease_n();

    v14(v15, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_100025890()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000259B4()
{
  os_log_type_t v2 = (void *)*v1;
  v2[67] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[48];
    uint64_t v4 = v2[49];
    return _swift_task_switch(sub_100025CF4, v3, v4);
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    v2[68] = v5;
    uint64_t v6 = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    *uint64_t v5 = v2;
    v5[1] = sub_100025B60;
    uint64_t v7 = v2[21];
    return AsyncSequence.collect()(v7, v6);
  }
}

uint64_t sub_100025B60(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[69] = a1;
  v4[70] = v1;
  swift_task_dealloc();
  (*(void (**)(void, void))(v3[22] + 8))(v3[23], v3[21]);
  uint64_t v5 = v3[49];
  uint64_t v6 = v3[48];
  if (v1) {
    uint64_t v7 = sub_10002721C;
  }
  else {
    uint64_t v7 = sub_100026754;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100025CF4()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_100024F90;
    return sub_1000326FC();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      os_log_type_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_1000259B4;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100028C38(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_100026754()
{
  uint64_t v73 = (uint64_t *)(v0 + 104);
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v69 = v6;
    uint64_t v72 = (uint64_t *)(v0 + 72);
    uint64_t v7 = swift_slowAlloc();
    *(void *)(v0 + 72) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    *(void *)(v0 + 80) = sub_100007E88(v8, v9, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = *(void *)(*(void *)(v0 + 552) + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 88) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 424);
    uint64_t v64 = *(void *)(v0 + 264);
    uint64_t v65 = *(void *)(v0 + 288);
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v15, v14, v13);
    swift_release();
    v11(v14, v13);
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    v11(v15, v13);
    *(void *)(v0 + 96) = sub_100007E88(v16, v18, v72);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v69, "Processed %s %ld photos from %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v68(v65, v64);
  }
  else
  {
    uint64_t v12 = (void (**)(uint64_t, uint64_t))(v0 + 464);
    os_log_type_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v20 = *(void *)(v0 + 288);
    uint64_t v21 = *(void *)(v0 + 264);
    (*(void (**)(void, void))(v0 + 520))(*(void *)(v0 + 232), *(void *)(v0 + 192));

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v19(v20, v21);
  }
  uint64_t v22 = *v12;
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
  uint64_t v24 = *(void *)(v0 + 488);
  uint64_t v25 = *(void *)(v0 + 256);
  uint64_t v26 = *(void *)(v0 + 192);
  uint64_t v27 = *(void *)(*(void *)(v0 + 552) + 16);
  swift_bridgeObjectRelease();
  uint64_t result = v23(v25, v26);
  uint64_t v29 = v24 + v27;
  if (__OFADD__(v24, v27))
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v30 = *(void *)(v0 + 560);
  *(void *)(v0 + 568) = v29;
  uint64_t v31 = *(void *)(v0 + 496);
  if (v31 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_100024F90;
    return sub_1000326FC();
  }
  *(void *)(v0 + 480) = v22;
  *(void *)(v0 + 488) = v29;
  *(void *)(v0 + 464) = v22;
  *(void *)(v0 + 472) = v22;
  *(void *)(v0 + 496) = v31 + 1;
  if (__OFADD__(v31, 1))
  {
LABEL_31:
    __break(1u);
    return result;
  }
  uint64_t v33 = *(void *)(v0 + 256);
  uint64_t v34 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 200);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  v35 += 16;
  uint64_t v36 = v37;
  unint64_t v38 = *(void *)(v0 + 360)
      + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
      + *(void *)(v35 + 56) * v31;
  *(void *)(v0 + 504) = v37;
  *(void *)(v0 + 512) = v35 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v37(v33, v38, v34);
  static Task<>.checkCancellation()();
  uint64_t v39 = *(void *)(v0 + 192);
  if (v30)
  {
    uint64_t v40 = *(void *)(v0 + 256);
    uint64_t v41 = *(void *)(v0 + 200);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v40, v39);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42();
  }
  else
  {
    uint64_t v44 = *(void *)(v0 + 248);
    uint64_t v43 = *(void *)(v0 + 256);
    static Log.photos.getter();
    v36(v44, v43, v39);
    swift_retain_n();
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v45, v46))
    {
      os_log_type_t v70 = v46;
      log = v45;
      uint64_t v47 = swift_slowAlloc();
      *(void *)(v0 + 104) = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      swift_release();
      uint64_t v48 = PhotosFaceType.description.getter();
      *(void *)(v0 + 112) = sub_100007E88(v48, v49, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v47 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v67 = *(void *)(v0 + 296);
      uint64_t v51 = *(void *)(v0 + 240);
      uint64_t v50 = *(void *)(v0 + 248);
      uint64_t v66 = *(void *)(v0 + 264);
      uint64_t v53 = *(void *)(v0 + 192);
      uint64_t v52 = *(void *)(v0 + 200);
      v36(v51, v50, v53);
      swift_release();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v54(v50, v53);
      sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v57 = v56;
      v54(v51, v53);
      *(void *)(v0 + 120) = sub_100007E88(v55, v57, v73);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v70, "Processing %s face %s", (uint8_t *)v47, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v22(v67, v66);
    }
    else
    {
      uint64_t v58 = *(void *)(v0 + 296);
      uint64_t v59 = *(void *)(v0 + 264);
      uint64_t v54 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
      v54(*(void *)(v0 + 248), *(void *)(v0 + 192));

      swift_release_n();
      v22(v58, v59);
    }
    *(void *)(v0 + 520) = v54;
    uint64_t v60 = static TestProperties.bufferSize.getter();
    uint64_t v61 = (void *)swift_task_alloc();
    *(void *)(v0 + 528) = v61;
    *uint64_t v61 = v0;
    v61[1] = sub_1000259B4;
    uint64_t v62 = *(void *)(v0 + 256);
    uint64_t v63 = *(void *)(v0 + 184);
    return sub_100028C38(v63, v62, v60);
  }
}

uint64_t sub_10002721C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504);
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v4 = *(void *)(v0 + 192);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v65 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    os_log_t v63 = (os_log_t)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v9 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 216);
    uint64_t v11 = *(void *)(v0 + 192);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 504))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v0 + 56) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    uint64_t v15 = *(void *)(v0 + 280);
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v57 = *(void *)(v0 + 256);
    uint64_t v17 = *(void *)(v0 + 192);
    swift_errorRetain();
    swift_release();
    uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v18;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v63->Class isa = (Class)v18;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v65, "Failed to process face %s with error %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v59(v15, v16);
    uint64_t result = v61(v57, v17);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = v20;
  }
  else
  {
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 520);
    os_log_t loga = *(os_log_t *)(v0 + 480);
    uint64_t v23 = *(void *)(v0 + 280);
    uint64_t v25 = *(void *)(v0 + 256);
    uint64_t v24 = *(void *)(v0 + 264);
    uint64_t v26 = *(void *)(v0 + 192);
    v22(*(void *)(v0 + 216), v26);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    ((void (*)(uint64_t, uint64_t))loga)(v23, v24);
    uint64_t result = v22(v25, v26);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v0 + 472);
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v0 + 480);
  }
  uint64_t v27 = *(void *)(v0 + 496);
  *(void *)(v0 + 568) = *(void *)(v0 + 488);
  if (v27 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_100024F90;
    return sub_1000326FC();
  }
  else
  {
    *(void *)(v0 + 472) = v20;
    *(void *)(v0 + 480) = v21;
    *(void *)(v0 + 496) = v27 + 1;
    if (__OFADD__(v27, 1))
    {
      __break(1u);
    }
    else
    {
      uint64_t v29 = *(void *)(v0 + 256);
      uint64_t v30 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16);
      v31 += 16;
      uint64_t v32 = v33;
      unint64_t v34 = *(void *)(v0 + 360)
          + ((*(unsigned __int8 *)(v0 + 576) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 576))
          + *(void *)(v31 + 56) * v27;
      *(void *)(v0 + 504) = v33;
      *(void *)(v0 + 512) = v31 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v33(v29, v34, v30);
      static Task<>.checkCancellation()();
      uint64_t v35 = *(void *)(v0 + 192);
      uint64_t v37 = *(void *)(v0 + 248);
      uint64_t v36 = *(void *)(v0 + 256);
      static Log.photos.getter();
      v33(v37, v36, v35);
      swift_retain_n();
      unint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v38, v39))
      {
        os_log_type_t v62 = v39;
        uint64_t v64 = v38;
        uint64_t v66 = (uint64_t *)(v0 + 104);
        uint64_t v40 = swift_slowAlloc();
        *(void *)(v0 + 104) = swift_slowAlloc();
        *(_DWORD *)uint64_t v40 = 136315394;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v41 = PhotosFaceType.description.getter();
        *(void *)(v0 + 112) = sub_100007E88(v41, v42, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v40 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v60 = *(void *)(v0 + 296);
        uint64_t v43 = *(void *)(v0 + 240);
        uint64_t v44 = *(void *)(v0 + 248);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v46 = *(void *)(v0 + 192);
        uint64_t v45 = *(void *)(v0 + 200);
        v32(v43, v44, v46);
        swift_release();
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v45 + 8);
        v47(v44, v46);
        sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
        uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v50 = v49;
        v47(v43, v46);
        *(void *)(v0 + 120) = sub_100007E88(v48, v50, v66);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v64, v62, "Processing %s face %s", (uint8_t *)v40, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v21(v60, v58);
      }
      else
      {
        uint64_t v51 = *(void *)(v0 + 296);
        uint64_t v52 = *(void *)(v0 + 264);
        uint64_t v47 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 200) + 8);
        v47(*(void *)(v0 + 248), *(void *)(v0 + 192));

        swift_release_n();
        v21(v51, v52);
      }
      *(void *)(v0 + 520) = v47;
      uint64_t v53 = static TestProperties.bufferSize.getter();
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_1000259B4;
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 184);
      return sub_100028C38(v56, v55, v53);
    }
  }
  return result;
}

uint64_t sub_100027C7C()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for GalleryGeneratorSystem()
{
  return self;
}

uint64_t sub_100027CE8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100005F94;
  v2[2] = v0;
  return _swift_task_switch(sub_10001BE78, 0, 0);
}

uint64_t sub_100027D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = type metadata accessor for ShuffleID();
  v4[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[15] = v6;
  v4[16] = *(void *)(v6 + 64);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[19] = v7;
  v4[20] = *(void *)(v7 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for CommunicationActor();
  v4[23] = static CommunicationActor.shared.getter();
  v4[24] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[25] = v9;
  v4[26] = v8;
  return _swift_task_switch(sub_100027F30, v9, v8);
}

uint64_t sub_100027F30()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  static Log.default.getter();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v35(v1, v4, v2);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[7] = sub_100007E88(0xD000000000000015, 0x80000001000D60A0, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[8] = sub_100007E88(v8, v9, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[20];
    uint64_t v34 = v0[21];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    uint64_t v14 = v0[14];
    uint64_t v13 = v0[15];
    swift_release();
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_100007E88(v15, v16, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s type = %s, id = %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v12);
  }
  else
  {
    uint64_t v18 = v0[20];
    uint64_t v17 = v0[21];
    uint64_t v20 = v0[18];
    uint64_t v19 = v0[19];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[15];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v24 = v0[16];
  uint64_t v23 = v0[17];
  uint64_t v25 = v0[14];
  uint64_t v26 = v0[15];
  uint64_t v28 = v0[12];
  uint64_t v27 = v0[13];
  v35(v23, v0[11], v25);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = swift_allocObject();
  v0[27] = v30;
  *(void *)(v30 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v30 + v29, v23, v25);
  *(void *)(v30 + ((v24 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  v0[28] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100028454;
  uint64_t v32 = v0[11];
  return sub_100029588((uint64_t)(v0 + 2), v32, (uint64_t)&unk_1000F29B0, v30);
}

uint64_t sub_100028454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100040428;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_100040468;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100028570(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = type metadata accessor for ShuffleID();
  v4[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[15] = v6;
  v4[16] = *(void *)(v6 + 64);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[19] = v7;
  v4[20] = *(void *)(v7 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for CommunicationActor();
  v4[23] = static CommunicationActor.shared.getter();
  v4[24] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[25] = v9;
  v4[26] = v8;
  return _swift_task_switch(sub_100028714, v9, v8);
}

uint64_t sub_100028714()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  static Log.default.getter();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v35(v1, v4, v2);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[7] = sub_100007E88(0xD000000000000015, 0x80000001000D60A0, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[8] = sub_100007E88(v8, v9, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[20];
    uint64_t v34 = v0[21];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    uint64_t v14 = v0[14];
    uint64_t v13 = v0[15];
    swift_release();
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_100007E88(v15, v16, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s type = %s, id = %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v12);
  }
  else
  {
    uint64_t v18 = v0[20];
    uint64_t v17 = v0[21];
    uint64_t v20 = v0[18];
    uint64_t v19 = v0[19];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[15];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v24 = v0[16];
  uint64_t v23 = v0[17];
  uint64_t v25 = v0[14];
  uint64_t v26 = v0[15];
  uint64_t v28 = v0[12];
  uint64_t v27 = v0[13];
  v35(v23, v0[11], v25);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = swift_allocObject();
  v0[27] = v30;
  *(void *)(v30 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v30 + v29, v23, v25);
  *(void *)(v30 + ((v24 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  v0[28] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100028454;
  uint64_t v32 = v0[11];
  return sub_10002A218((uint64_t)(v0 + 2), v32, (uint64_t)&unk_1000F2A98, v30);
}

uint64_t sub_100028C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[12] = a3;
  v4[13] = v3;
  v4[10] = a1;
  v4[11] = a2;
  uint64_t v5 = type metadata accessor for AlbumID();
  v4[14] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[15] = v6;
  v4[16] = *(void *)(v6 + 64);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[19] = v7;
  v4[20] = *(void *)(v7 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for CommunicationActor();
  v4[23] = static CommunicationActor.shared.getter();
  v4[24] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[25] = v9;
  v4[26] = v8;
  return _swift_task_switch(sub_100028DDC, v9, v8);
}

uint64_t sub_100028DDC()
{
  uint64_t v37 = v0;
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[11];
  static Log.default.getter();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v35(v1, v4, v2);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[7] = sub_100007E88(0xD000000000000015, 0x80000001000D60A0, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[8] = sub_100007E88(v8, v9, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[20];
    uint64_t v34 = v0[21];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    uint64_t v14 = v0[14];
    uint64_t v13 = v0[15];
    swift_release();
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_100007E88(v15, v16, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v14);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s type = %s, id = %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v34, v12);
  }
  else
  {
    uint64_t v18 = v0[20];
    uint64_t v17 = v0[21];
    uint64_t v20 = v0[18];
    uint64_t v19 = v0[19];
    uint64_t v21 = v0[14];
    uint64_t v22 = v0[15];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v24 = v0[16];
  uint64_t v23 = v0[17];
  uint64_t v25 = v0[14];
  uint64_t v26 = v0[15];
  uint64_t v28 = v0[12];
  uint64_t v27 = v0[13];
  v35(v23, v0[11], v25);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  uint64_t v30 = swift_allocObject();
  v0[27] = v30;
  *(void *)(v30 + 16) = v27;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v26 + 32))(v30 + v29, v23, v25);
  *(void *)(v30 + ((v24 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = v28;
  swift_retain();
  uint64_t v31 = (void *)swift_task_alloc();
  v0[28] = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100029300;
  uint64_t v32 = v0[11];
  return sub_10002AEA8((uint64_t)(v0 + 2), v32, (uint64_t)&unk_1000F2B00, v30);
}

uint64_t sub_100029300()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_1000294F0;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 200);
    uint64_t v4 = *(void *)(v2 + 208);
    uint64_t v5 = sub_10002941C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10002941C()
{
  swift_release();
  sub_10003EB84(v0 + 2, v0[5]);
  AsyncSequence.generic.getter();
  sub_100009090((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000294F0()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100029588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t FaceRequest = type metadata accessor for FetchFaceRequest();
  v5[15] = FaceRequest;
  uint64_t v7 = *(void *)(FaceRequest - 8);
  v5[16] = v7;
  v5[17] = *(void *)(v7 + 64);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ShuffleID();
  v5[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[24] = v10;
  v5[25] = *(void *)(v10 + 64);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  sub_100005CB0(&qword_1000F1F98);
  v5[28] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F29C0);
  v5[29] = v11;
  v5[30] = *(void *)(v11 - 8);
  v5[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v5[32] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[33] = v13;
  v5[34] = *(void *)(v13 + 64);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = type metadata accessor for CommunicationActor();
  v5[38] = static CommunicationActor.shared.getter();
  v5[39] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[40] = v15;
  v5[41] = v14;
  return _swift_task_switch(sub_1000298A8, v15, v14);
}

uint64_t sub_1000298A8()
{
  os_log_type_t v62 = v0;
  uint64_t v1 = v0[14];
  sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 112) + 16) && (sub_1000508CC(v0[36]), (v3 & 1) != 0))
  {
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v7 = v0[11];
    swift_endAccess();
    static Log.session.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v11 = v0[26];
      uint64_t v13 = v0[23];
      uint64_t v12 = v0[24];
      uint64_t v14 = v0[21];
      uint64_t v55 = v0[20];
      uint64_t v56 = v0[22];
      swift_release();
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[9] = sub_100007E88(v15, v16, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempted to recompute face %s twice in parallel. This is unexpected but probably harmless.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v56, v55);
    }
    else
    {
      uint64_t v35 = v0[21];
      uint64_t v34 = v0[22];
      uint64_t v36 = v0[20];
      (*(void (**)(void, void))(v0[24] + 8))(v0[26], v0[23]);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    uint64_t v37 = v0[10];
    dispatch thunk of PhotosFaceID.id.getter();
    FetchFaceRequest.init(id:day:)();
    *(void *)(v37 + 24) = sub_100005CB0(&qword_1000F29E0);
    *(void *)(v37 + 32) = sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
    v0[42] = static CommunicationActor.shared.getter();
    uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002A0A0, v39, v38);
  }
  else
  {
    uint64_t v50 = v0[39];
    uint64_t v17 = v0[36];
    uint64_t v18 = v0[35];
    uint64_t v46 = v0[34];
    uint64_t v20 = v0[32];
    uint64_t v19 = v0[33];
    uint64_t v52 = v0[31];
    uint64_t v54 = v0[30];
    uint64_t v53 = v0[29];
    uint64_t v59 = v0[28];
    uint64_t v60 = v0[27];
    uint64_t v47 = v0[25];
    uint64_t v57 = v0[24];
    uint64_t v58 = v0[23];
    uint64_t v44 = v0[14];
    uint64_t v45 = v0[13];
    uint64_t v49 = v0[12];
    uint64_t v43 = v0[11];
    uint64_t v51 = (uint64_t *)v0[10];
    swift_endAccess();
    swift_release();
    sub_100005CB0(&qword_1000F29C8);
    uint64_t v21 = BroadcastSequence.__allocating_init()();
    dispatch thunk of BroadcastSequence.listen()();
    unint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v42(v18, v17, v20);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v41 = v21;
    sub_100053A60(v21, v18, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v61;
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v40 = v18;
    v48(v18, v20);
    swift_endAccess();
    uint64_t v23 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v59, 1, 1, v23);
    v42(v18, v17, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v60, v43, v58);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = static CommunicationActor.shared.getter();
    uint64_t v25 = v19;
    unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    unint64_t v27 = (v46 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (*(unsigned __int8 *)(v57 + 80) + v27 + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = v24;
    *((void *)v29 + 3) = v50;
    *((void *)v29 + 4) = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v29[v26], v40, v20);
    uint64_t v30 = &v29[v27];
    *(void *)uint64_t v30 = v49;
    *((void *)v30 + 1) = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(&v29[v28], v60, v58);
    *(void *)&v29[(v47 + v28 + 7) & 0xFFFFFFFFFFFFFFF8] = v41;
    sub_10006702C(v59, (uint64_t)&unk_1000F29D8, (uint64_t)v29);
    swift_release();
    v51[3] = v53;
    v0[8] = type metadata accessor for StoredPhoto();
    v51[4] = swift_getOpaqueTypeConformance2();
    uint64_t v31 = sub_10003ED9C(v51);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v54 + 32))(v31, v52, v53);
    swift_release();
    v48(v0[36], v0[32]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
}

uint64_t sub_10002A0A0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v12 = (uint64_t *)v0[10];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  type metadata accessor for StoredPhoto();
  swift_retain();
  uint64_t v8 = generateElements<A>(isolation:_:)();
  swift_release();
  *uint64_t v12 = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  uint64_t v9 = v0[40];
  uint64_t v10 = v0[41];
  return _swift_task_switch(sub_10004045C, v9, v10);
}

uint64_t sub_10002A218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t FaceRequest = type metadata accessor for FetchFaceRequest();
  v5[15] = FaceRequest;
  uint64_t v7 = *(void *)(FaceRequest - 8);
  v5[16] = v7;
  v5[17] = *(void *)(v7 + 64);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for ShuffleID();
  v5[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[24] = v10;
  v5[25] = *(void *)(v10 + 64);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  sub_100005CB0(&qword_1000F1F98);
  v5[28] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F29C0);
  v5[29] = v11;
  v5[30] = *(void *)(v11 - 8);
  v5[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v5[32] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[33] = v13;
  v5[34] = *(void *)(v13 + 64);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = type metadata accessor for CommunicationActor();
  v5[38] = static CommunicationActor.shared.getter();
  v5[39] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[40] = v15;
  v5[41] = v14;
  return _swift_task_switch(sub_10002A538, v15, v14);
}

uint64_t sub_10002A538()
{
  os_log_type_t v62 = v0;
  uint64_t v1 = v0[14];
  sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 112) + 16) && (sub_1000508CC(v0[36]), (v3 & 1) != 0))
  {
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v7 = v0[11];
    swift_endAccess();
    static Log.session.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v11 = v0[26];
      uint64_t v13 = v0[23];
      uint64_t v12 = v0[24];
      uint64_t v14 = v0[21];
      uint64_t v55 = v0[20];
      uint64_t v56 = v0[22];
      swift_release();
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[9] = sub_100007E88(v15, v16, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempted to recompute face %s twice in parallel. This is unexpected but probably harmless.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v56, v55);
    }
    else
    {
      uint64_t v35 = v0[21];
      uint64_t v34 = v0[22];
      uint64_t v36 = v0[20];
      (*(void (**)(void, void))(v0[24] + 8))(v0[26], v0[23]);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    uint64_t v37 = v0[10];
    dispatch thunk of PhotosFaceID.id.getter();
    FetchFaceRequest.init(id:day:)();
    *(void *)(v37 + 24) = sub_100005CB0(&qword_1000F29E0);
    *(void *)(v37 + 32) = sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
    v0[42] = static CommunicationActor.shared.getter();
    uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002AD30, v39, v38);
  }
  else
  {
    uint64_t v50 = v0[39];
    uint64_t v17 = v0[36];
    uint64_t v18 = v0[35];
    uint64_t v46 = v0[34];
    uint64_t v20 = v0[32];
    uint64_t v19 = v0[33];
    uint64_t v52 = v0[31];
    uint64_t v54 = v0[30];
    uint64_t v53 = v0[29];
    uint64_t v59 = v0[28];
    uint64_t v60 = v0[27];
    uint64_t v47 = v0[25];
    uint64_t v57 = v0[24];
    uint64_t v58 = v0[23];
    uint64_t v44 = v0[14];
    uint64_t v45 = v0[13];
    uint64_t v49 = v0[12];
    uint64_t v43 = v0[11];
    uint64_t v51 = (uint64_t *)v0[10];
    swift_endAccess();
    swift_release();
    sub_100005CB0(&qword_1000F29C8);
    uint64_t v21 = BroadcastSequence.__allocating_init()();
    dispatch thunk of BroadcastSequence.listen()();
    unint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v42(v18, v17, v20);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v41 = v21;
    sub_100053A60(v21, v18, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v61;
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v40 = v18;
    v48(v18, v20);
    swift_endAccess();
    uint64_t v23 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v59, 1, 1, v23);
    v42(v18, v17, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v60, v43, v58);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = static CommunicationActor.shared.getter();
    uint64_t v25 = v19;
    unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    unint64_t v27 = (v46 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (*(unsigned __int8 *)(v57 + 80) + v27 + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = v24;
    *((void *)v29 + 3) = v50;
    *((void *)v29 + 4) = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v29[v26], v40, v20);
    uint64_t v30 = &v29[v27];
    *(void *)uint64_t v30 = v49;
    *((void *)v30 + 1) = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(&v29[v28], v60, v58);
    *(void *)&v29[(v47 + v28 + 7) & 0xFFFFFFFFFFFFFFF8] = v41;
    sub_10006702C(v59, (uint64_t)&unk_1000F2AC8, (uint64_t)v29);
    swift_release();
    v51[3] = v53;
    v0[8] = type metadata accessor for StoredPhoto();
    v51[4] = swift_getOpaqueTypeConformance2();
    uint64_t v31 = sub_10003ED9C(v51);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v54 + 32))(v31, v52, v53);
    swift_release();
    v48(v0[36], v0[32]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
}

uint64_t sub_10002AD30()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v12 = (uint64_t *)v0[10];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  type metadata accessor for StoredPhoto();
  swift_retain();
  uint64_t v8 = generateElements<A>(isolation:_:)();
  swift_release();
  *uint64_t v12 = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  uint64_t v9 = v0[40];
  uint64_t v10 = v0[41];
  return _swift_task_switch(sub_10004045C, v9, v10);
}

uint64_t sub_10002AEA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[13] = a4;
  v5[14] = v4;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  uint64_t FaceRequest = type metadata accessor for FetchFaceRequest();
  v5[15] = FaceRequest;
  uint64_t v7 = *(void *)(FaceRequest - 8);
  v5[16] = v7;
  v5[17] = *(void *)(v7 + 64);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v5[20] = v8;
  v5[21] = *(void *)(v8 - 8);
  v5[22] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AlbumID();
  v5[23] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v5[24] = v10;
  v5[25] = *(void *)(v10 + 64);
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  sub_100005CB0(&qword_1000F1F98);
  v5[28] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F29C0);
  v5[29] = v11;
  v5[30] = *(void *)(v11 - 8);
  v5[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for UUID();
  v5[32] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v5[33] = v13;
  v5[34] = *(void *)(v13 + 64);
  v5[35] = swift_task_alloc();
  v5[36] = swift_task_alloc();
  v5[37] = type metadata accessor for CommunicationActor();
  v5[38] = static CommunicationActor.shared.getter();
  v5[39] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[40] = v15;
  v5[41] = v14;
  return _swift_task_switch(sub_10002B1C8, v15, v14);
}

uint64_t sub_10002B1C8()
{
  os_log_type_t v62 = v0;
  uint64_t v1 = v0[14];
  sub_10003FEA4(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v2 = (uint64_t *)(v1 + 112);
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 112) + 16) && (sub_1000508CC(v0[36]), (v3 & 1) != 0))
  {
    uint64_t v4 = v0[26];
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[24];
    uint64_t v7 = v0[11];
    swift_endAccess();
    static Log.session.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v7, v5);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v11 = v0[26];
      uint64_t v13 = v0[23];
      uint64_t v12 = v0[24];
      uint64_t v14 = v0[21];
      uint64_t v55 = v0[20];
      uint64_t v56 = v0[22];
      swift_release();
      sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[9] = sub_100007E88(v15, v16, &v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Attempted to recompute face %s twice in parallel. This is unexpected but probably harmless.", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v56, v55);
    }
    else
    {
      uint64_t v35 = v0[21];
      uint64_t v34 = v0[22];
      uint64_t v36 = v0[20];
      (*(void (**)(void, void))(v0[24] + 8))(v0[26], v0[23]);

      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v34, v36);
    }
    uint64_t v37 = v0[10];
    dispatch thunk of PhotosFaceID.id.getter();
    FetchFaceRequest.init(id:day:)();
    *(void *)(v37 + 24) = sub_100005CB0(&qword_1000F29E0);
    *(void *)(v37 + 32) = sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
    v0[42] = static CommunicationActor.shared.getter();
    uint64_t v39 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002B9C0, v39, v38);
  }
  else
  {
    uint64_t v50 = v0[39];
    uint64_t v17 = v0[36];
    uint64_t v18 = v0[35];
    uint64_t v46 = v0[34];
    uint64_t v20 = v0[32];
    uint64_t v19 = v0[33];
    uint64_t v52 = v0[31];
    uint64_t v54 = v0[30];
    uint64_t v53 = v0[29];
    uint64_t v59 = v0[28];
    uint64_t v60 = v0[27];
    uint64_t v47 = v0[25];
    uint64_t v57 = v0[24];
    uint64_t v58 = v0[23];
    uint64_t v44 = v0[14];
    uint64_t v45 = v0[13];
    uint64_t v49 = v0[12];
    uint64_t v43 = v0[11];
    uint64_t v51 = (uint64_t *)v0[10];
    swift_endAccess();
    swift_release();
    sub_100005CB0(&qword_1000F29C8);
    uint64_t v21 = BroadcastSequence.__allocating_init()();
    dispatch thunk of BroadcastSequence.listen()();
    unint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
    v42(v18, v17, v20);
    swift_beginAccess();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v41 = v21;
    sub_100053A60(v21, v18, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v61;
    swift_bridgeObjectRelease();
    uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v40 = v18;
    v48(v18, v20);
    swift_endAccess();
    uint64_t v23 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v59, 1, 1, v23);
    v42(v18, v17, v20);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16))(v60, v43, v58);
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v24 = static CommunicationActor.shared.getter();
    uint64_t v25 = v19;
    unint64_t v26 = (*(unsigned __int8 *)(v19 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    unint64_t v27 = (v46 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = (*(unsigned __int8 *)(v57 + 80) + v27 + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = v24;
    *((void *)v29 + 3) = v50;
    *((void *)v29 + 4) = v44;
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(&v29[v26], v40, v20);
    uint64_t v30 = &v29[v27];
    *(void *)uint64_t v30 = v49;
    *((void *)v30 + 1) = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(&v29[v28], v60, v58);
    *(void *)&v29[(v47 + v28 + 7) & 0xFFFFFFFFFFFFFFF8] = v41;
    sub_10006702C(v59, (uint64_t)&unk_1000F2B30, (uint64_t)v29);
    swift_release();
    v51[3] = v53;
    v0[8] = type metadata accessor for StoredPhoto();
    v51[4] = swift_getOpaqueTypeConformance2();
    uint64_t v31 = sub_10003ED9C(v51);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v54 + 32))(v31, v52, v53);
    swift_release();
    v48(v0[36], v0[32]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = (uint64_t (*)(void))v0[1];
    return v32();
  }
}

uint64_t sub_10002B9C0()
{
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[16];
  uint64_t v5 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v12 = (uint64_t *)v0[10];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v7 + v6, v2, v4);
  type metadata accessor for StoredPhoto();
  swift_retain();
  uint64_t v8 = generateElements<A>(isolation:_:)();
  swift_release();
  *uint64_t v12 = v8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
  uint64_t v9 = v0[40];
  uint64_t v10 = v0[41];
  return _swift_task_switch(sub_10002BB38, v9, v10);
}

uint64_t sub_10002BB38()
{
  uint64_t v1 = v0[33];
  swift_release();
  (*(void (**)(void, void))(v1 + 8))(v0[36], v0[32]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_10002BC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_100005CB0(&qword_1000F2A00);
  v4[16] = swift_task_alloc();
  v4[17] = sub_100005CB0(&qword_1000F29C0);
  v4[18] = swift_task_alloc();
  uint64_t v5 = sub_100005CB0(&qword_1000F2A08);
  v4[19] = v5;
  v4[20] = *(void *)(v5 - 8);
  v4[21] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v4[22] = v6;
  v4[23] = *(void *)(v6 - 8);
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  return _swift_task_switch(sub_10002BE54, 0, 0);
}

uint64_t sub_10002BE54()
{
  v0[8] = *(void *)(v0[14] + 80);
  swift_retain();
  FetchFaceRequest.id.getter();
  uint64_t Face = FetchFaceRequest.day.getter();
  if (v2) {
    uint64_t Face = sub_10001B72C();
  }
  uint64_t v3 = Face;
  uint64_t v4 = type metadata accessor for GalleryDatabase();
  v0[32] = v4;
  uint64_t v5 = sub_10003FEA4(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  v0[33] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10002BF84;
  uint64_t v7 = v0[31];
  return dispatch thunk of PhotosFaceIDDatabase.query(id:day:)(v7, v3, v4, v5);
}

uint64_t sub_10002BF84(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[35] = a1;
  v4[36] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[31];
  uint64_t v6 = v3[27];
  uint64_t v7 = v3[26];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10002C390;
  }
  else
  {
    v4[37] = v9;
    v4[38] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10002C120;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10002C120()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (*(void *)(v1 + 16))
  {
    *(void *)(v0 + 352) = v1;
    uint64_t v2 = *(void *)(v1 + 16);
    *(void *)(v0 + 360) = v2;
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 176);
      uint64_t v4 = *(void *)(v0 + 184);
      uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
      v4 += 16;
      uint64_t v6 = *(int **)(v0 + 96);
      int v7 = *(_DWORD *)(v4 + 64);
      *(_DWORD *)(v0 + 480) = v7;
      *(void *)(v0 + 368) = *(void *)(v4 + 56);
      *(void *)(v0 + 376) = v5;
      *(void *)(v0 + 384) = 0;
      v5(*(void *)(v0 + 200), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
      unint64_t v16 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 392) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_10002CDB0;
      uint64_t v9 = *(void *)(v0 + 200);
      return v16(v9);
    }
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 408) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 416) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 424) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v15;
    uint64_t v14 = sub_10002CECC;
  }
  else
  {
    FetchFaceRequest.id.getter();
    type metadata accessor for CommunicationActor();
    *(void *)(v0 + 312) = static CommunicationActor.shared.getter();
    sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v12;
    uint64_t v14 = sub_10002C468;
  }
  return _swift_task_switch(v14, v11, v13);
}

uint64_t sub_10002C390()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002C468()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    unint64_t v3 = sub_1000508CC(v0[30]);
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v5 = v0[30];
    uint64_t v6 = v0[26];
    if (v7)
    {
      v0[40] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
      swift_endAccess();
      swift_retain();
      v4(v5, v6);
      uint64_t v8 = sub_10002C648;
    }
    else
    {
      swift_endAccess();
      v4(v5, v6);
      uint64_t v8 = sub_100040470;
    }
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[30];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_10002C59C;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_10002C59C()
{
  FetchFaceRequest.id.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[41] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10002C838;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[29];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v2, v3);
}

uint64_t sub_10002C648()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 280);
  *(void *)(v0 + 352) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 360) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 176);
    uint64_t v4 = *(void *)(v0 + 184);
    uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v6 = *(int **)(v0 + 96);
    int v7 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 480) = v7;
    *(void *)(v0 + 368) = *(void *)(v4 + 56);
    *(void *)(v0 + 376) = v5;
    *(void *)(v0 + 384) = 0;
    v5(*(void *)(v0 + 200), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10002CDB0;
    uint64_t v9 = *(void *)(v0 + 200);
    return v13(v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 408) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 416) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 424) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002CECC, v12, v11);
  }
}

uint64_t sub_10002C838(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[42] = a1;
  v4[43] = v1;
  swift_task_dealloc();
  ((void (*)(void, void))v3[37])(v4[29], v4[26]);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_10002CCD8;
  }
  else
  {
    uint64_t v5 = sub_10002C9A8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10002C9A8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 336) + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10003191C(v2);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10001B72C();
    uint64_t v9 = v6 - v3;
    if (__OFSUB__(v6, v3))
    {
      __break(1u);
    }
    else
    {
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (!v10)
      {
        if (v11 < 0)
        {
          BOOL v10 = __OFSUB__(0, v11);
          uint64_t v11 = -v11;
          if (v10) {
            goto LABEL_23;
          }
        }
        if (v1)
        {
          unint64_t v12 = v11 % v1;
          *(void *)(v0 + 88) = *(void *)(v0 + 336);
          sub_100005CB0(&qword_1000F2A10);
          sub_100005F48(&qword_1000F2A18, &qword_1000F2A10);
          uint64_t v13 = Sequence.sorted<A>(_:)();
          uint64_t v6 = swift_bridgeObjectRelease();
          if ((v12 & 0x8000000000000000) == 0)
          {
            if (v12 < *(void *)(v13 + 16))
            {
              uint64_t v14 = *(void *)(v13 + 16 * v12 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_11;
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          return _swift_task_switch(v6, v7, v8);
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 280);
LABEL_11:
  *(void *)(v0 + 352) = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v0 + 360) = v15;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 408) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 416) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 424) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v26 = v25;
    uint64_t v6 = (uint64_t)sub_10002CECC;
    uint64_t v7 = v24;
    uint64_t v8 = v26;
    return _swift_task_switch(v6, v7, v8);
  }
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 184);
  uint64_t v18 = *(void (**)(void, unint64_t, uint64_t))(v17 + 16);
  v17 += 16;
  uint64_t v19 = *(int **)(v0 + 96);
  int v20 = *(_DWORD *)(v17 + 64);
  *(_DWORD *)(v0 + 480) = v20;
  *(void *)(v0 + 368) = *(void *)(v17 + 56);
  *(void *)(v0 + 376) = v18;
  *(void *)(v0 + 384) = 0;
  v18(*(void *)(v0 + 200), v14 + ((v20 + 32) & ~(unint64_t)v20), v16);
  unint64_t v27 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_10002CDB0;
  uint64_t v22 = *(void *)(v0 + 200);
  return v27(v22);
}

uint64_t sub_10002CCD8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002CDB0()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_10002D1E0;
  }
  else
  {
    uint64_t v2 = sub_10002CFDC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002CECC()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1000508CC(v0[28]), (v4 & 1) != 0))
  {
    char v5 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v6 = v0[28];
    uint64_t v7 = v0[26];
    v0[54] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_retain();
    v5(v6, v7);
    uint64_t v8 = sub_10002D2D0;
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[28];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_10002D4F8;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_10002CFDC()
{
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 384) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 184) + 8))(*(void *)(v0 + 200), *(void *)(v0 + 176));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 408) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 416) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 424) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002CECC, v4, v3);
  }
  else
  {
    char v5 = *(void (**)(void, unint64_t, void))(v0 + 376);
    uint64_t v6 = *(void *)(v0 + 384) + 1;
    *(void *)(v0 + 384) = v6;
    uint64_t v7 = *(int **)(v0 + 96);
    v5(*(void *)(v0 + 200), *(void *)(v0 + 352)+ ((*(unsigned __int8 *)(v0 + 480) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 480))+ *(void *)(v0 + 368) * v6, *(void *)(v0 + 176));
    uint64_t v11 = (uint64_t (*)(uint64_t))((char *)v7 + *v7);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10002CDB0;
    uint64_t v9 = *(void *)(v0 + 200);
    return v11(v9);
  }
}

uint64_t sub_10002D1E0()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[25], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10002D2D0()
{
  *(void *)(v0 + 440) = static CommunicationActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10002D364, v2, v1);
}

uint64_t sub_10002D364()
{
  swift_release();
  dispatch thunk of BroadcastSequence.listen()();
  return _swift_task_switch(sub_10002D3D8, 0, 0);
}

uint64_t sub_10002D3D8()
{
  v0[9] = v0[22];
  v0[56] = swift_getOpaqueTypeConformance2();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[57] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10002D5C8;
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[16];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_10002D4F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10002D5C8()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_10002D8DC;
  }
  else {
    uint64_t v1 = sub_10002D6D8;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10002D6D8()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[16];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    (*(void (**)(void, void))(v0[20] + 8))(v0[21], v0[19]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[12];
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[24], v3, v1);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[58] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10002D9DC;
    uint64_t v8 = v0[24];
    return v9(v8);
  }
}

uint64_t sub_10002D8DC()
{
  uint64_t v2 = v0[20];
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10002D9DC()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10002DBE8;
  }
  else {
    uint64_t v2 = sub_10002DAF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002DAF0()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[57] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10002D5C8;
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[16];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_10002DBE8()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  uint64_t v4 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v5 = v0[19];
  uint64_t v6 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10002DD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = type metadata accessor for StoredPhoto();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v4[20] = swift_task_alloc();
  v4[21] = sub_100005CB0(&qword_1000F29C0);
  v4[22] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0(&qword_1000F2A08);
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  return _swift_task_switch(sub_10002DF20, 0, 0);
}

uint64_t sub_10002DF20()
{
  v0[8] = *(void *)(v0[14] + 80);
  swift_retain();
  FetchFaceRequest.id.getter();
  uint64_t Face = FetchFaceRequest.day.getter();
  if (v2) {
    uint64_t Face = sub_10001B72C();
  }
  uint64_t v3 = Face;
  uint64_t v4 = type metadata accessor for ShuffleDatabase();
  v0[32] = v4;
  uint64_t v5 = sub_10003FEA4(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  v0[33] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10002E050;
  uint64_t v7 = v0[31];
  return dispatch thunk of PhotosFaceIDDatabase.query(id:day:)(v7, v3, v4, v5);
}

uint64_t sub_10002E050(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[35] = a1;
  v4[36] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[31];
  uint64_t v6 = v3[27];
  uint64_t v7 = v3[26];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10004046C;
  }
  else
  {
    v4[37] = v9;
    v4[38] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10002E1EC;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10002E1EC()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (*(void *)(v1 + 16))
  {
    *(void *)(v0 + 344) = v1;
    uint64_t v2 = *(void *)(v1 + 16);
    *(void *)(v0 + 352) = v2;
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
      v4 += 16;
      uint64_t v6 = *(int **)(v0 + 96);
      int v7 = *(_DWORD *)(v4 + 64);
      *(_DWORD *)(v0 + 480) = v7;
      *(void *)(v0 + 360) = *(void *)(v4 + 56);
      *(void *)(v0 + 368) = v5;
      *(void *)(v0 + 448) = 0;
      v5(*(void *)(v0 + 144), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
      uint64_t v16 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 456) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_10002F28C;
      uint64_t v9 = *(void *)(v0 + 144);
      return v16(v9);
    }
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v15;
    uint64_t v14 = sub_10002EA30;
  }
  else
  {
    FetchFaceRequest.id.getter();
    type metadata accessor for CommunicationActor();
    *(void *)(v0 + 312) = static CommunicationActor.shared.getter();
    sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v12;
    uint64_t v14 = sub_10002E45C;
  }
  return _swift_task_switch(v14, v11, v13);
}

uint64_t sub_10002E45C()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    unint64_t v3 = sub_1000508CC(v0[30]);
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v5 = v0[30];
    uint64_t v6 = v0[26];
    if (v7)
    {
      v0[59] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
      swift_endAccess();
      swift_retain();
      v4(v5, v6);
      uint64_t v8 = sub_10002F5AC;
    }
    else
    {
      swift_endAccess();
      v4(v5, v6);
      uint64_t v8 = sub_10002F79C;
    }
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[30];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_100040474;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_10002E590(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[41] = a1;
  v4[42] = v1;
  swift_task_dealloc();
  ((void (*)(void, void))v3[37])(v4[29], v4[26]);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_100040454;
  }
  else
  {
    uint64_t v5 = sub_10002E700;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10002E700()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 328) + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10003191C(v2);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10001B72C();
    uint64_t v9 = v6 - v3;
    if (__OFSUB__(v6, v3))
    {
      __break(1u);
    }
    else
    {
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (!v10)
      {
        if (v11 < 0)
        {
          BOOL v10 = __OFSUB__(0, v11);
          uint64_t v11 = -v11;
          if (v10) {
            goto LABEL_23;
          }
        }
        if (v1)
        {
          unint64_t v12 = v11 % v1;
          *(void *)(v0 + 88) = *(void *)(v0 + 328);
          sub_100005CB0(&qword_1000F2A10);
          sub_100005F48(&qword_1000F2A18, &qword_1000F2A10);
          uint64_t v13 = Sequence.sorted<A>(_:)();
          uint64_t v6 = swift_bridgeObjectRelease();
          if ((v12 & 0x8000000000000000) == 0)
          {
            if (v12 < *(void *)(v13 + 16))
            {
              uint64_t v14 = *(void *)(v13 + 16 * v12 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_11;
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          return _swift_task_switch(v6, v7, v8);
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 280);
LABEL_11:
  *(void *)(v0 + 344) = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v0 + 352) = v15;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v26 = v25;
    uint64_t v6 = (uint64_t)sub_10002EA30;
    uint64_t v7 = v24;
    uint64_t v8 = v26;
    return _swift_task_switch(v6, v7, v8);
  }
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void (**)(void, unint64_t, uint64_t))(v17 + 16);
  v17 += 16;
  uint64_t v19 = *(int **)(v0 + 96);
  int v20 = *(_DWORD *)(v17 + 64);
  *(_DWORD *)(v0 + 480) = v20;
  *(void *)(v0 + 360) = *(void *)(v17 + 56);
  *(void *)(v0 + 368) = v18;
  *(void *)(v0 + 448) = 0;
  v18(*(void *)(v0 + 144), v14 + ((v20 + 32) & ~(unint64_t)v20), v16);
  unint64_t v27 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_10002F28C;
  uint64_t v22 = *(void *)(v0 + 144);
  return v27(v22);
}

uint64_t sub_10002EA30()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1000508CC(v0[28]), (v4 & 1) != 0))
  {
    char v5 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v6 = v0[28];
    uint64_t v7 = v0[26];
    v0[50] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_retain();
    v5(v6, v7);
    uint64_t v8 = sub_10002EB40;
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[28];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_100040488;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_10002EB40()
{
  *(void *)(v0 + 408) = static CommunicationActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10002EBD4, v2, v1);
}

uint64_t sub_10002EBD4()
{
  swift_release();
  dispatch thunk of BroadcastSequence.listen()();
  return _swift_task_switch(sub_10002EC48, 0, 0);
}

uint64_t sub_10002EC48()
{
  v0[9] = v0[16];
  v0[52] = swift_getOpaqueTypeConformance2();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10002ED6C;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_10002ED6C()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_100040444;
  }
  else {
    uint64_t v1 = sub_10002EE7C;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_10002EE7C()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[12];
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[19], v1, v2);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[54] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10002F080;
    uint64_t v8 = v0[19];
    return v9(v8);
  }
}

uint64_t sub_10002F080()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100040438;
  }
  else {
    uint64_t v2 = sub_10002F194;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002F194()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10002ED6C;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_10002F28C()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100040480;
  }
  else
  {
    uint64_t v2 = sub_10002F3A8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10002F3A8()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 448) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002EA30, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 448) + 1;
    *(void *)(v0 + 448) = v5;
    uint64_t v6 = *(int **)(v0 + 96);
    (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 144), *(void *)(v0 + 344)+ ((*(unsigned __int8 *)(v0 + 480) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 480))+ *(void *)(v0 + 360) * v5, *(void *)(v0 + 128));
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10002F28C;
    uint64_t v8 = *(void *)(v0 + 144);
    return v10(v8);
  }
}

uint64_t sub_10002F5AC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 280);
  *(void *)(v0 + 344) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 352) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v6 = *(int **)(v0 + 96);
    int v7 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 480) = v7;
    *(void *)(v0 + 360) = *(void *)(v4 + 56);
    *(void *)(v0 + 368) = v5;
    *(void *)(v0 + 448) = 0;
    v5(*(void *)(v0 + 144), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10002F28C;
    uint64_t v9 = *(void *)(v0 + 144);
    return v13(v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_10002EA30, v12, v11);
  }
}

uint64_t sub_10002F79C()
{
  FetchFaceRequest.id.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[40] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10002E590;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[29];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v2, v3);
}

uint64_t sub_10002F848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  uint64_t v5 = type metadata accessor for StoredPhoto();
  v4[16] = v5;
  v4[17] = *(void *)(v5 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v4[20] = swift_task_alloc();
  v4[21] = sub_100005CB0(&qword_1000F29C0);
  v4[22] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0(&qword_1000F2A08);
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[26] = v7;
  v4[27] = *(void *)(v7 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  v4[31] = swift_task_alloc();
  return _swift_task_switch(sub_10002FA64, 0, 0);
}

uint64_t sub_10002FA64()
{
  v0[8] = *(void *)(v0[14] + 80);
  swift_retain();
  FetchFaceRequest.id.getter();
  uint64_t Face = FetchFaceRequest.day.getter();
  if (v2) {
    uint64_t Face = sub_10001B72C();
  }
  uint64_t v3 = Face;
  uint64_t v4 = type metadata accessor for AlbumDatabase();
  v0[32] = v4;
  uint64_t v5 = sub_10003FEA4(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  v0[33] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10002FB94;
  uint64_t v7 = v0[31];
  return dispatch thunk of PhotosFaceIDDatabase.query(id:day:)(v7, v3, v4, v5);
}

uint64_t sub_10002FB94(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[35] = a1;
  v4[36] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[31];
  uint64_t v6 = v3[27];
  uint64_t v7 = v3[26];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10002FFA0;
  }
  else
  {
    v4[37] = v9;
    v4[38] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    swift_release();
    uint64_t v11 = sub_10002FD30;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10002FD30()
{
  uint64_t v1 = *(void *)(v0 + 280);
  if (*(void *)(v1 + 16))
  {
    *(void *)(v0 + 344) = v1;
    uint64_t v2 = *(void *)(v1 + 16);
    *(void *)(v0 + 352) = v2;
    if (v2)
    {
      uint64_t v3 = *(void *)(v0 + 128);
      uint64_t v4 = *(void *)(v0 + 136);
      uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
      v4 += 16;
      uint64_t v6 = *(int **)(v0 + 96);
      int v7 = *(_DWORD *)(v4 + 64);
      *(_DWORD *)(v0 + 480) = v7;
      *(void *)(v0 + 360) = *(void *)(v4 + 56);
      *(void *)(v0 + 368) = v5;
      *(void *)(v0 + 448) = 0;
      v5(*(void *)(v0 + 144), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
      uint64_t v16 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 456) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_100031270;
      uint64_t v9 = *(void *)(v0 + 144);
      return v16(v9);
    }
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v15;
    uint64_t v14 = sub_100030724;
  }
  else
  {
    FetchFaceRequest.id.getter();
    type metadata accessor for CommunicationActor();
    *(void *)(v0 + 312) = static CommunicationActor.shared.getter();
    sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v13 = v12;
    uint64_t v14 = sub_100030078;
  }
  return _swift_task_switch(v14, v11, v13);
}

uint64_t sub_10002FFA0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030078()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    unint64_t v3 = sub_1000508CC(v0[30]);
    uint64_t v4 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v5 = v0[30];
    uint64_t v6 = v0[26];
    if (v7)
    {
      v0[59] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
      swift_endAccess();
      swift_retain();
      v4(v5, v6);
      uint64_t v8 = sub_100031680;
    }
    else
    {
      swift_endAccess();
      v4(v5, v6);
      uint64_t v8 = sub_100031870;
    }
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[30];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_100040478;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1000301AC(uint64_t a1)
{
  unint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[41] = a1;
  v4[42] = v1;
  swift_task_dealloc();
  ((void (*)(void, void))v3[37])(v4[29], v4[26]);
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_10003064C;
  }
  else
  {
    uint64_t v5 = sub_10003031C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_10003031C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 328) + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_10003191C(v2);
  char v5 = v4;
  swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10001B72C();
    uint64_t v9 = v6 - v3;
    if (__OFSUB__(v6, v3))
    {
      __break(1u);
    }
    else
    {
      BOOL v10 = __OFSUB__(v9, 1);
      uint64_t v11 = v9 - 1;
      if (!v10)
      {
        if (v11 < 0)
        {
          BOOL v10 = __OFSUB__(0, v11);
          uint64_t v11 = -v11;
          if (v10) {
            goto LABEL_23;
          }
        }
        if (v1)
        {
          unint64_t v12 = v11 % v1;
          *(void *)(v0 + 88) = *(void *)(v0 + 328);
          sub_100005CB0(&qword_1000F2A10);
          sub_100005F48(&qword_1000F2A18, &qword_1000F2A10);
          uint64_t v13 = Sequence.sorted<A>(_:)();
          uint64_t v6 = swift_bridgeObjectRelease();
          if ((v12 & 0x8000000000000000) == 0)
          {
            if (v12 < *(void *)(v13 + 16))
            {
              uint64_t v14 = *(void *)(v13 + 16 * v12 + 40);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              goto LABEL_11;
            }
            goto LABEL_22;
          }
LABEL_21:
          __break(1u);
LABEL_22:
          __break(1u);
LABEL_23:
          __break(1u);
          return _swift_task_switch(v6, v7, v8);
        }
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v0 + 280);
LABEL_11:
  *(void *)(v0 + 344) = v14;
  uint64_t v15 = *(void *)(v14 + 16);
  *(void *)(v0 + 352) = v15;
  if (!v15)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v24 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v26 = v25;
    uint64_t v6 = (uint64_t)sub_100030724;
    uint64_t v7 = v24;
    uint64_t v8 = v26;
    return _swift_task_switch(v6, v7, v8);
  }
  uint64_t v16 = *(void *)(v0 + 128);
  uint64_t v17 = *(void *)(v0 + 136);
  uint64_t v18 = *(void (**)(void, unint64_t, uint64_t))(v17 + 16);
  v17 += 16;
  uint64_t v19 = *(int **)(v0 + 96);
  int v20 = *(_DWORD *)(v17 + 64);
  *(_DWORD *)(v0 + 480) = v20;
  *(void *)(v0 + 360) = *(void *)(v17 + 56);
  *(void *)(v0 + 368) = v18;
  *(void *)(v0 + 448) = 0;
  v18(*(void *)(v0 + 144), v14 + ((v20 + 32) & ~(unint64_t)v20), v16);
  unint64_t v27 = (uint64_t (*)(uint64_t))((char *)v19 + *v19);
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 456) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_100031270;
  uint64_t v22 = *(void *)(v0 + 144);
  return v27(v22);
}

uint64_t sub_10003064C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030724()
{
  uint64_t v1 = v0[14];
  swift_release();
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_1000508CC(v0[28]), (v4 & 1) != 0))
  {
    char v5 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v6 = v0[28];
    uint64_t v7 = v0[26];
    v0[50] = *(void *)(*(void *)(v2 + 56) + 8 * v3);
    swift_endAccess();
    swift_retain();
    v5(v6, v7);
    uint64_t v8 = sub_100030904;
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[37];
    uint64_t v10 = v0[28];
    uint64_t v11 = v0[26];
    swift_endAccess();
    v9(v10, v11);
    uint64_t v8 = sub_100030834;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_100030834()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100030904()
{
  *(void *)(v0 + 408) = static CommunicationActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100030998, v2, v1);
}

uint64_t sub_100030998()
{
  swift_release();
  dispatch thunk of BroadcastSequence.listen()();
  return _swift_task_switch(sub_100030A0C, 0, 0);
}

uint64_t sub_100030A0C()
{
  v0[9] = v0[16];
  v0[52] = swift_getOpaqueTypeConformance2();
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100030B30;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_100030B30()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_100030E44;
  }
  else {
    uint64_t v1 = sub_100030C40;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_100030C40()
{
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[24] + 8))(v0[25], v0[23]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (int *)v0[12];
    (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[19], v1, v2);
    uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[54] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100030F44;
    uint64_t v8 = v0[19];
    return v9(v8);
  }
}

uint64_t sub_100030E44()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100030F44()
{
  *(void *)(*(void *)v1 + 440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100031150;
  }
  else {
    uint64_t v2 = sub_100031058;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100031058()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[53] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100030B30;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 10, v3, AssociatedConformanceWitness);
}

uint64_t sub_100031150()
{
  uint64_t v2 = v0[24];
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[19];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[17];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100031270()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_100031590;
  }
  else
  {
    uint64_t v2 = sub_10003138C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10003138C()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 448) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100030724, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 448) + 1;
    *(void *)(v0 + 448) = v5;
    uint64_t v6 = *(int **)(v0 + 96);
    (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 144), *(void *)(v0 + 344)+ ((*(unsigned __int8 *)(v0 + 480) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 480))+ *(void *)(v0 + 360) * v5, *(void *)(v0 + 128));
    uint64_t v10 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100031270;
    uint64_t v8 = *(void *)(v0 + 144);
    return v10(v8);
  }
}

uint64_t sub_100031590()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100031680()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 280);
  *(void *)(v0 + 344) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 352) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 128);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v6 = *(int **)(v0 + 96);
    int v7 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 480) = v7;
    *(void *)(v0 + 360) = *(void *)(v4 + 56);
    *(void *)(v0 + 368) = v5;
    *(void *)(v0 + 448) = 0;
    v5(*(void *)(v0 + 144), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v6 + *v6);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 456) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100031270;
    uint64_t v9 = *(void *)(v0 + 144);
    return v13(v9);
  }
  else
  {
    swift_bridgeObjectRelease();
    FetchFaceRequest.id.getter();
    *(void *)(v0 + 376) = type metadata accessor for CommunicationActor();
    *(void *)(v0 + 384) = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100030724, v12, v11);
  }
}

uint64_t sub_100031870()
{
  FetchFaceRequest.id.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[40] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000301AC;
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[29];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v2, v3);
}

uint64_t sub_10003191C(uint64_t result)
{
  uint64_t v1 = result + 64;
  char v2 = *(unsigned char *)(result + 32);
  uint64_t v3 = 1 << v2;
  uint64_t v4 = -1;
  if (1 << v2 < 64) {
    uint64_t v4 = ~(-1 << (1 << v2));
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  if (v5)
  {
    uint64_t v6 = 0;
    unint64_t v7 = __clz(__rbit64(v5));
    unint64_t v8 = (v5 - 1) & v5;
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
  }
  else
  {
    LODWORD(v6) = v2 & 0x3F;
    if (v6 <= 6) {
      return 0;
    }
    int64_t v9 = (unint64_t)(v3 + 63) >> 6;
    unint64_t v17 = *(void *)(result + 72);
    if (v17)
    {
      uint64_t v6 = 1;
    }
    else
    {
      if (v6 < 8) {
        return 0;
      }
      unint64_t v17 = *(void *)(result + 80);
      if (v17)
      {
        uint64_t v6 = 2;
      }
      else
      {
        unint64_t v17 = *(void *)(result + 88);
        if (v17)
        {
          uint64_t v6 = 3;
        }
        else
        {
LABEL_37:
          if (v6 < 9) {
            return 0;
          }
          unint64_t v17 = *(void *)(result + 96);
          if (v17)
          {
            uint64_t v6 = 4;
          }
          else
          {
            unint64_t v17 = *(void *)(result + 104);
            if (!v17) {
              goto LABEL_43;
            }
            uint64_t v6 = 5;
          }
        }
      }
    }
LABEL_30:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v7 = __clz(__rbit64(v17)) + (v6 << 6);
  }
  uint64_t v10 = *(void *)(result + 48);
  uint64_t result = *(void *)(v10 + 8 * v7);
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v6 << 6);
LABEL_7:
    uint64_t v13 = *(void *)(v10 + 8 * v12);
    if (result <= v13) {
      uint64_t result = v13;
    }
  }
  int64_t v14 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v14);
  ++v6;
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 1;
  if (v14 + 1 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 2;
  if (v14 + 2 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15) {
    goto LABEL_25;
  }
  uint64_t v6 = v14 + 3;
  if (v14 + 3 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v6);
  if (v15)
  {
LABEL_25:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v6 << 6);
    goto LABEL_7;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9) {
    return result;
  }
  unint64_t v15 = *(void *)(v1 + 8 * v16);
  if (v15)
  {
    uint64_t v6 = v16;
    goto LABEL_25;
  }
  while (1)
  {
    uint64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v9) {
      return result;
    }
    unint64_t v15 = *(void *)(v1 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_43:
  uint64_t v18 = 0;
  uint64_t v19 = 6;
  if (v9 > 6) {
    uint64_t v19 = v9;
  }
  uint64_t v20 = v19 - 6;
  while (v20 != v18)
  {
    unint64_t v17 = *(void *)(result + 112 + 8 * v18++);
    if (v17)
    {
      uint64_t v6 = v18 + 5;
      goto LABEL_30;
    }
  }
  return 0;
}

uint64_t sub_100031B14()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v4;
  v1[10] = v3;
  return _swift_task_switch(sub_100031C40, v4, v3);
}

uint64_t sub_100031C40()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v0 + 144) = v2;
  sub_100009944(v2);
  *(void *)(v0 + 88) = *(void *)(v1 + 120);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100031CE4;
  return sub_10007E78C();
}

uint64_t sub_100031CE4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 145) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100031E0C, v4, v3);
}

uint64_t sub_100031E0C()
{
  if (*(unsigned char *)(v0 + 145) == 2)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100031EEC;
    return sub_10007EBB0();
  }
}

uint64_t sub_100031EEC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 146) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100032014, v4, v3);
}

uint64_t sub_100032014()
{
  if (*(unsigned char *)(v0 + 146) == 2)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1000320F4;
    return sub_10007E3D0();
  }
}

uint64_t sub_1000320F4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 147) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_10003221C, v4, v3);
}

uint64_t sub_10003221C()
{
  int v1 = *(unsigned __int8 *)(v0 + 147);
  if (v1 == 2 || (*(unsigned char *)(v0 + 145) & 1) == 0) {
    goto LABEL_9;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v2 = *(unsigned char *)(v0 + 146);
  swift_release();
  if ((v2 & 1) == 0) {
    goto LABEL_9;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  if (v1)
  {
    static Log.session.getter();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Device is ready for a sync. Notifying it of the new data.", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v0 + 16);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(void *)(v0 + 120) = *(void *)(v11 + 96);
    *(void *)(v0 + 128) = static CommunicationActor.shared.getter();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100032480, v13, v12);
  }
  else
  {
LABEL_9:
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_100032480()
{
  char v1 = *(unsigned char *)(v0 + 144);
  swift_release();
  sub_10001B024(0x10200u >> (8 * v1), 0, (void (*)(unsigned char *, unsigned char *, uint64_t))0xC000000000000000);
  *(void *)(v0 + 136) = 0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10004043C, v2, v3);
}

uint64_t sub_10003252C()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v4;
  v1[10] = v3;
  return _swift_task_switch(sub_100032658, v4, v3);
}

uint64_t sub_100032658()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v0 + 144) = v2;
  sub_100009944(v2);
  *(void *)(v0 + 88) = *(void *)(v1 + 120);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100031CE4;
  return sub_10007E78C();
}

uint64_t sub_1000326FC()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v4;
  v1[10] = v3;
  return _swift_task_switch(sub_100032828, v4, v3);
}

uint64_t sub_100032828()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(v0 + 144) = v2;
  sub_100009944(v2);
  *(void *)(v0 + 88) = *(void *)(v1 + 120);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000328CC;
  return sub_10007E78C();
}

uint64_t sub_1000328CC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 145) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_1000329F4, v4, v3);
}

uint64_t sub_1000329F4()
{
  if (*(unsigned char *)(v0 + 145) == 2)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100032AD4;
    return sub_10007EBB0();
  }
}

uint64_t sub_100032AD4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 146) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100032BFC, v4, v3);
}

uint64_t sub_100032BFC()
{
  if (*(unsigned char *)(v0 + 146) == 2)
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100032CDC;
    return sub_10007E3D0();
  }
}

uint64_t sub_100032CDC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 147) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100032E04, v4, v3);
}

uint64_t sub_100032E04()
{
  int v1 = *(unsigned __int8 *)(v0 + 147);
  if (v1 == 2 || (*(unsigned char *)(v0 + 145) & 1) == 0) {
    goto LABEL_9;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v2 = *(unsigned char *)(v0 + 146);
  swift_release();
  if ((v2 & 1) == 0) {
    goto LABEL_9;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  if (v1)
  {
    static Log.session.getter();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      unint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Device is ready for a sync. Notifying it of the new data.", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 24);
    uint64_t v10 = *(void *)(v0 + 32);
    uint64_t v11 = *(void *)(v0 + 16);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    *(void *)(v0 + 120) = *(void *)(v11 + 96);
    *(void *)(v0 + 128) = static CommunicationActor.shared.getter();
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100033068, v13, v12);
  }
  else
  {
LABEL_9:
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_100033068()
{
  char v1 = *(unsigned char *)(v0 + 144);
  swift_release();
  sub_10001B024(0x10200u >> (8 * v1), 0, (void (*)(unsigned char *, unsigned char *, uint64_t))0xC000000000000000);
  *(void *)(v0 + 136) = 0;
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_100033114, v2, v3);
}

uint64_t sub_100033114()
{
  swift_release();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100033180()
{
  swift_release();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1000331F0(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_100080920(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_100033360(uint64_t a1)
{
  uint64_t v29 = sub_100005CB0((uint64_t *)&unk_1000F3A70);
  uint64_t v34 = *(void *)(v29 - 8);
  __chkstk_darwin(v29 - 8);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = &_swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v27 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v28 = a1;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v30) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v30) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v30) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v30) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v9);
          if (!v13)
          {
            int64_t v14 = v12 + 4;
            if (v14 >= v30)
            {
LABEL_29:
              swift_release();
              return (uint64_t)v39;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v14);
            int64_t v9 = v14;
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_22:
    uint64_t v15 = 8 * v11;
    uint64_t v16 = *(void *)(*(void *)(a1 + 56) + v15);
    int64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      unint64_t v32 = v7;
      int64_t v33 = v9;
      uint64_t v37 = *(void *)(*(void *)(a1 + 48) + v15);
      uint64_t v38 = (unint64_t *)&_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100054908(0, v17, 0);
      uint64_t v18 = v29;
      uint64_t v19 = v38;
      uint64_t v36 = type metadata accessor for UUID();
      uint64_t v20 = *(void *)(v36 - 8);
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
      uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
      uint64_t v31 = v16;
      uint64_t v22 = v16 + ((v21 + 32) & ~v21);
      uint64_t v23 = *(void *)(v20 + 72);
      do
      {
        v35(&v3[*(int *)(v18 + 48)], v22, v36);
        *(void *)uint64_t v3 = v37;
        uint64_t v38 = v19;
        unint64_t v25 = v19[2];
        unint64_t v24 = v19[3];
        if (v25 >= v24 >> 1)
        {
          sub_100054908(v24 > 1, v25 + 1, 1);
          uint64_t v18 = v29;
          uint64_t v19 = v38;
        }
        v19[2] = v25 + 1;
        sub_10003F580((uint64_t)v3, (uint64_t)v19+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v25);
        v22 += v23;
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      a1 = v28;
      unint64_t v7 = v32;
      int64_t v9 = v33;
    }
    else
    {
      uint64_t v19 = (unint64_t *)&_swiftEmptyArrayStorage;
    }
    uint64_t result = sub_100080900((uint64_t)v19);
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v30) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1000336D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a8;
  v8[23] = v18;
  v8[20] = a4;
  v8[21] = a5;
  uint64_t v10 = type metadata accessor for UUID();
  v8[24] = v10;
  v8[25] = *(void *)(v10 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ShuffleID();
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v8[32] = v12;
  v8[33] = *(void *)(v12 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for StoredPhoto();
  v8[35] = v13;
  v8[36] = *(void *)(v13 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A20);
  v8[39] = swift_task_alloc();
  v8[40] = type metadata accessor for CommunicationActor();
  v8[41] = static CommunicationActor.shared.getter();
  uint64_t v16 = (uint64_t (*)(void *))((char *)a6 + *a6);
  int64_t v14 = (void *)swift_task_alloc();
  v8[42] = v14;
  *int64_t v14 = v8;
  v14[1] = sub_1000339BC;
  return v16(v8 + 2);
}

uint64_t sub_1000339BC()
{
  uint64_t v2 = (void *)*v1;
  v2[43] = v0;
  swift_task_dealloc();
  v2[44] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[45] = v4;
  v2[46] = v3;
  if (v0) {
    uint64_t v5 = sub_10004042C;
  }
  else {
    uint64_t v5 = sub_100033B50;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100033B50()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_10003EB84(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  sub_10003ED9C(v0 + 7);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  uint64_t v5 = v0[44];
  uint64_t v6 = static CommunicationActor.shared.getter();
  v0[47] = v6;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_10003EEF0((uint64_t)(v0 + 7), v7);
  int64_t v9 = (void *)swift_task_alloc();
  v0[48] = v9;
  *int64_t v9 = v0;
  v9[1] = sub_100033D34;
  uint64_t v10 = v0[39];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
}

uint64_t sub_100033D34()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v5 = sub_100040484;
  }
  else {
    uint64_t v5 = sub_100033E54;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100033E54()
{
  uint64_t v1 = *(char **)(v0 + 312);
  uint64_t v2 = sub_100005CB0(&qword_1000F2A28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    sub_100009090(v0 + 56);
    dispatch thunk of BroadcastSequence.finish(throwing:)();
    sub_100009090(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 168);
    swift_beginAccess();
    sub_10003DA70(v3);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v70 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)v1;
    *(void *)(v0 + 392) = *(void *)v1;
    uint64_t v13 = *(int *)(v2 + 48);
    uint64_t v14 = v10;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v6, &v1[v13], v8);
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v15(v71, v11, v70);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v65 = v15;
      os_log_type_t v67 = v17;
      log = v16;
      uint64_t v69 = v12;
      uint64_t v72 = (uint64_t *)(v0 + 128);
      uint64_t v18 = swift_slowAlloc();
      *(void *)(v0 + 128) = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v20 = *(void *)(v0 + 288);
      uint64_t v19 = *(void *)(v0 + 296);
      uint64_t v64 = *(void *)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v23 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      StoredPhoto.localIdentifier.getter();
      swift_release();
      sub_10003FEA4(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      *(void *)(v0 + 136) = sub_100007E88(v24, v26, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v66(v19, v64);
      *(_WORD *)(v18 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v28 = *(void *)(v0 + 240);
      uint64_t v27 = *(void *)(v0 + 248);
      uint64_t v29 = *(void *)(v0 + 224);
      uint64_t v30 = *(void *)(v0 + 232);
      v65(v28, v27, v29);
      swift_release();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v31(v27, v29);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v34 = v33;
      v31(v28, v29);
      *(void *)(v0 + 144) = sub_100007E88(v32, v34, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v35 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 256);
      uint64_t v12 = v69;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v38 = Array.description.getter();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 152) = sub_100007E88(v38, v40, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v67, "Relating photo %s for %s on days %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      uint64_t v41 = v66;
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 288);
      uint64_t v42 = *(void *)(v0 + 296);
      uint64_t v45 = *(void *)(v0 + 272);
      uint64_t v44 = *(void *)(v0 + 280);
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 264);
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 224));
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v41(v42, v44);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    }
    *(void *)(v0 + 400) = v41;
    uint64_t v48 = *(void *)(v12 + 16);
    *(void *)(v0 + 408) = v48;
    if (v48)
    {
      uint64_t v49 = *(void *)(v0 + 200);
      *(void *)(v0 + 416) = *(void *)(v49 + 72);
      *(_DWORD *)(v0 + 456) = *(_DWORD *)(v49 + 80);
      *(void *)(v0 + 424) = 0;
      uint64_t v50 = *(void *)(*(void *)(v0 + 392) + 32);
      sub_100005CB0(&qword_1000F2A30);
      uint64_t v51 = swift_allocObject();
      *(void *)(v0 + 432) = v51;
      *(_OWORD *)(v51 + 16) = xmmword_1000D7AB0;
      StoredPhoto.localIdentifier.getter();
      sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      dispatch thunk of PhotosFaceID.id.getter();
      uint64_t v52 = type metadata accessor for GalleryDatabase();
      uint64_t v53 = sub_10003FEA4(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_1000347C8;
      uint64_t v55 = *(void *)(v0 + 208);
      return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v51, v55, v50, v52, v53);
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 304);
      uint64_t v57 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      dispatch thunk of BroadcastSequence.yield(_:)();
      v41(v56, v57);
      uint64_t v58 = *(void *)(v0 + 352);
      uint64_t v59 = static CommunicationActor.shared.getter();
      *(void *)(v0 + 376) = v59;
      uint64_t v60 = *(void *)(v0 + 80);
      uint64_t v61 = *(void *)(v0 + 88);
      sub_10003EEF0(v0 + 56, v60);
      os_log_type_t v62 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v62;
      *os_log_type_t v62 = v0;
      v62[1] = sub_100033D34;
      uint64_t v63 = *(void *)(v0 + 312);
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v63, v59, v58, v0 + 120, v60, v61);
    }
  }
}

uint64_t sub_1000347C8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[25];
    uint64_t v3 = v2[26];
    uint64_t v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100040450;
  }
  else
  {
    (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100034954;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100034954()
{
  uint64_t v1 = v0[53] + 1;
  if (v1 == v0[51])
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[50];
    uint64_t v3 = v0[38];
    uint64_t v4 = v0[35];
    swift_bridgeObjectRelease();
    dispatch thunk of BroadcastSequence.yield(_:)();
    v2(v3, v4);
    uint64_t v5 = v0[44];
    uint64_t v6 = static CommunicationActor.shared.getter();
    v0[47] = v6;
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    sub_10003EEF0((uint64_t)(v0 + 7), v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[48] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100033D34;
    uint64_t v10 = v0[39];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
  }
  else
  {
    v0[53] = v1;
    uint64_t v11 = *(void *)(v0[49] + 8 * v1 + 32);
    sub_100005CB0(&qword_1000F2A30);
    uint64_t v12 = swift_allocObject();
    v0[54] = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1000D7AB0;
    StoredPhoto.localIdentifier.getter();
    sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v13 = type metadata accessor for GalleryDatabase();
    uint64_t v14 = sub_10003FEA4(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[55] = v15;
    void *v15 = v0;
    v15[1] = sub_1000347C8;
    uint64_t v16 = v0[26];
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v12, v16, v11, v13, v14);
  }
}

uint64_t sub_100034C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a8;
  v8[23] = v18;
  v8[20] = a4;
  v8[21] = a5;
  uint64_t v10 = type metadata accessor for UUID();
  v8[24] = v10;
  v8[25] = *(void *)(v10 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for ShuffleID();
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v8[32] = v12;
  v8[33] = *(void *)(v12 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for StoredPhoto();
  v8[35] = v13;
  v8[36] = *(void *)(v13 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A20);
  v8[39] = swift_task_alloc();
  v8[40] = type metadata accessor for CommunicationActor();
  v8[41] = static CommunicationActor.shared.getter();
  uint64_t v16 = (uint64_t (*)(void *))((char *)a6 + *a6);
  uint64_t v14 = (void *)swift_task_alloc();
  v8[42] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_100034F10;
  return v16(v8 + 2);
}

uint64_t sub_100034F10()
{
  uint64_t v2 = (void *)*v1;
  v2[43] = v0;
  swift_task_dealloc();
  v2[44] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[45] = v4;
  v2[46] = v3;
  if (v0) {
    uint64_t v5 = sub_10004042C;
  }
  else {
    uint64_t v5 = sub_1000350A4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000350A4()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_10003EB84(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  sub_10003ED9C(v0 + 7);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  uint64_t v5 = v0[44];
  uint64_t v6 = static CommunicationActor.shared.getter();
  v0[47] = v6;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_10003EEF0((uint64_t)(v0 + 7), v7);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[48] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100035288;
  uint64_t v10 = v0[39];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
}

uint64_t sub_100035288()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v5 = sub_100040484;
  }
  else {
    uint64_t v5 = sub_1000353A8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000353A8()
{
  uint64_t v1 = *(char **)(v0 + 312);
  uint64_t v2 = sub_100005CB0(&qword_1000F2A28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    sub_100009090(v0 + 56);
    dispatch thunk of BroadcastSequence.finish(throwing:)();
    sub_100009090(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 168);
    swift_beginAccess();
    sub_10003DA70(v3);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v70 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)v1;
    *(void *)(v0 + 392) = *(void *)v1;
    uint64_t v13 = *(int *)(v2 + 48);
    uint64_t v14 = v10;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v6, &v1[v13], v8);
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v15(v71, v11, v70);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v65 = v15;
      os_log_type_t v67 = v17;
      log = v16;
      uint64_t v69 = v12;
      uint64_t v72 = (uint64_t *)(v0 + 128);
      uint64_t v18 = swift_slowAlloc();
      *(void *)(v0 + 128) = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v20 = *(void *)(v0 + 288);
      uint64_t v19 = *(void *)(v0 + 296);
      uint64_t v64 = *(void *)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v23 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      StoredPhoto.localIdentifier.getter();
      swift_release();
      sub_10003FEA4(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      *(void *)(v0 + 136) = sub_100007E88(v24, v26, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v66(v19, v64);
      *(_WORD *)(v18 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v28 = *(void *)(v0 + 240);
      uint64_t v27 = *(void *)(v0 + 248);
      uint64_t v29 = *(void *)(v0 + 224);
      uint64_t v30 = *(void *)(v0 + 232);
      v65(v28, v27, v29);
      swift_release();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v31(v27, v29);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v34 = v33;
      v31(v28, v29);
      *(void *)(v0 + 144) = sub_100007E88(v32, v34, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v35 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 256);
      uint64_t v12 = v69;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v38 = Array.description.getter();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 152) = sub_100007E88(v38, v40, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v67, "Relating photo %s for %s on days %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      uint64_t v41 = v66;
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 288);
      uint64_t v42 = *(void *)(v0 + 296);
      uint64_t v45 = *(void *)(v0 + 272);
      uint64_t v44 = *(void *)(v0 + 280);
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 264);
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 224));
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v41(v42, v44);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    }
    *(void *)(v0 + 400) = v41;
    uint64_t v48 = *(void *)(v12 + 16);
    *(void *)(v0 + 408) = v48;
    if (v48)
    {
      uint64_t v49 = *(void *)(v0 + 200);
      *(void *)(v0 + 416) = *(void *)(v49 + 72);
      *(_DWORD *)(v0 + 456) = *(_DWORD *)(v49 + 80);
      *(void *)(v0 + 424) = 0;
      uint64_t v50 = *(void *)(*(void *)(v0 + 392) + 32);
      sub_100005CB0(&qword_1000F2A30);
      uint64_t v51 = swift_allocObject();
      *(void *)(v0 + 432) = v51;
      *(_OWORD *)(v51 + 16) = xmmword_1000D7AB0;
      StoredPhoto.localIdentifier.getter();
      sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      dispatch thunk of PhotosFaceID.id.getter();
      uint64_t v52 = type metadata accessor for ShuffleDatabase();
      uint64_t v53 = sub_10003FEA4(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_100035D1C;
      uint64_t v55 = *(void *)(v0 + 208);
      return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v51, v55, v50, v52, v53);
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 304);
      uint64_t v57 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      dispatch thunk of BroadcastSequence.yield(_:)();
      v41(v56, v57);
      uint64_t v58 = *(void *)(v0 + 352);
      uint64_t v59 = static CommunicationActor.shared.getter();
      *(void *)(v0 + 376) = v59;
      uint64_t v60 = *(void *)(v0 + 80);
      uint64_t v61 = *(void *)(v0 + 88);
      sub_10003EEF0(v0 + 56, v60);
      os_log_type_t v62 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v62;
      *os_log_type_t v62 = v0;
      v62[1] = sub_100035288;
      uint64_t v63 = *(void *)(v0 + 312);
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v63, v59, v58, v0 + 120, v60, v61);
    }
  }
}

uint64_t sub_100035D1C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[25];
    uint64_t v3 = v2[26];
    uint64_t v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100040450;
  }
  else
  {
    (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100035EA8;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100035EA8()
{
  uint64_t v1 = v0[53] + 1;
  if (v1 == v0[51])
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[50];
    uint64_t v3 = v0[38];
    uint64_t v4 = v0[35];
    swift_bridgeObjectRelease();
    dispatch thunk of BroadcastSequence.yield(_:)();
    v2(v3, v4);
    uint64_t v5 = v0[44];
    uint64_t v6 = static CommunicationActor.shared.getter();
    v0[47] = v6;
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    sub_10003EEF0((uint64_t)(v0 + 7), v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[48] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100035288;
    uint64_t v10 = v0[39];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
  }
  else
  {
    v0[53] = v1;
    uint64_t v11 = *(void *)(v0[49] + 8 * v1 + 32);
    sub_100005CB0(&qword_1000F2A30);
    uint64_t v12 = swift_allocObject();
    v0[54] = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1000D7AB0;
    StoredPhoto.localIdentifier.getter();
    sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v13 = type metadata accessor for ShuffleDatabase();
    uint64_t v14 = sub_10003FEA4(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[55] = v15;
    void *v15 = v0;
    v15[1] = sub_100035D1C;
    uint64_t v16 = v0[26];
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v12, v16, v11, v13, v14);
  }
}

uint64_t sub_10003617C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int *a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a8;
  v8[23] = v18;
  v8[20] = a4;
  v8[21] = a5;
  uint64_t v10 = type metadata accessor for UUID();
  v8[24] = v10;
  v8[25] = *(void *)(v10 - 8);
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for AlbumID();
  v8[28] = v11;
  v8[29] = *(void *)(v11 - 8);
  v8[30] = swift_task_alloc();
  v8[31] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Logger();
  v8[32] = v12;
  v8[33] = *(void *)(v12 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for StoredPhoto();
  v8[35] = v13;
  v8[36] = *(void *)(v13 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A20);
  v8[39] = swift_task_alloc();
  v8[40] = type metadata accessor for CommunicationActor();
  v8[41] = static CommunicationActor.shared.getter();
  uint64_t v16 = (uint64_t (*)(void *))((char *)a6 + *a6);
  uint64_t v14 = (void *)swift_task_alloc();
  v8[42] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_100036464;
  return v16(v8 + 2);
}

uint64_t sub_100036464()
{
  uint64_t v2 = (void *)*v1;
  v2[43] = v0;
  swift_task_dealloc();
  v2[44] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[45] = v4;
  v2[46] = v3;
  if (v0) {
    uint64_t v5 = sub_1000367DC;
  }
  else {
    uint64_t v5 = sub_1000365F8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000365F8()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = sub_10003EB84(v0 + 2, v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  v0[10] = swift_getAssociatedTypeWitness();
  v0[11] = swift_getAssociatedConformanceWitness();
  sub_10003ED9C(v0 + 7);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  swift_task_dealloc();
  uint64_t v5 = v0[44];
  uint64_t v6 = static CommunicationActor.shared.getter();
  v0[47] = v6;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[11];
  sub_10003EEF0((uint64_t)(v0 + 7), v7);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[48] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_10003691C;
  uint64_t v10 = v0[39];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
}

uint64_t sub_1000367DC()
{
  swift_release();
  swift_errorRetain();
  dispatch thunk of BroadcastSequence.finish(throwing:)();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 168);
  swift_beginAccess();
  sub_10003DA70(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003691C()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    uint64_t v5 = sub_1000373B0;
  }
  else {
    uint64_t v5 = sub_100036A3C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100036A3C()
{
  uint64_t v1 = *(char **)(v0 + 312);
  uint64_t v2 = sub_100005CB0(&qword_1000F2A28);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    swift_release();
    sub_100009090(v0 + 56);
    dispatch thunk of BroadcastSequence.finish(throwing:)();
    sub_100009090(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 168);
    swift_beginAccess();
    sub_10003DA70(v3);
    swift_endAccess();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 296);
    uint64_t v6 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v9 = *(void *)(v0 + 288);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v70 = *(void *)(v0 + 224);
    uint64_t v71 = *(void *)(v0 + 248);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)v1;
    *(void *)(v0 + 392) = *(void *)v1;
    uint64_t v13 = *(int *)(v2 + 48);
    uint64_t v14 = v10;
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v6, &v1[v13], v8);
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
    v15(v71, v11, v70);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      os_log_type_t v65 = v15;
      os_log_type_t v67 = v17;
      log = v16;
      uint64_t v69 = v12;
      uint64_t v72 = (uint64_t *)(v0 + 128);
      uint64_t v18 = swift_slowAlloc();
      *(void *)(v0 + 128) = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v20 = *(void *)(v0 + 288);
      uint64_t v19 = *(void *)(v0 + 296);
      uint64_t v64 = *(void *)(v0 + 280);
      uint64_t v21 = *(void *)(v0 + 216);
      uint64_t v23 = *(void *)(v0 + 192);
      uint64_t v22 = *(void *)(v0 + 200);
      StoredPhoto.localIdentifier.getter();
      swift_release();
      sub_10003FEA4(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v26 = v25;
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      *(void *)(v0 + 136) = sub_100007E88(v24, v26, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      v66(v19, v64);
      *(_WORD *)(v18 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v28 = *(void *)(v0 + 240);
      uint64_t v27 = *(void *)(v0 + 248);
      uint64_t v29 = *(void *)(v0 + 224);
      uint64_t v30 = *(void *)(v0 + 232);
      v65(v28, v27, v29);
      swift_release();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v31(v27, v29);
      sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v34 = v33;
      v31(v28, v29);
      *(void *)(v0 + 144) = sub_100007E88(v32, v34, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v36 = *(void *)(v0 + 264);
      uint64_t v35 = *(void *)(v0 + 272);
      uint64_t v37 = *(void *)(v0 + 256);
      uint64_t v12 = v69;
      swift_bridgeObjectRetain();
      swift_release();
      uint64_t v38 = Array.description.getter();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 152) = sub_100007E88(v38, v40, v72);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, log, v67, "Relating photo %s for %s on days %s", (uint8_t *)v18, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      uint64_t v41 = v66;
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 288);
      uint64_t v42 = *(void *)(v0 + 296);
      uint64_t v45 = *(void *)(v0 + 272);
      uint64_t v44 = *(void *)(v0 + 280);
      uint64_t v46 = *(void *)(v0 + 256);
      uint64_t v47 = *(void *)(v0 + 264);
      (*(void (**)(void, void))(*(void *)(v0 + 232) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 224));
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v41(v42, v44);
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v46);
    }
    *(void *)(v0 + 400) = v41;
    uint64_t v48 = *(void *)(v12 + 16);
    *(void *)(v0 + 408) = v48;
    if (v48)
    {
      uint64_t v49 = *(void *)(v0 + 200);
      *(void *)(v0 + 416) = *(void *)(v49 + 72);
      *(_DWORD *)(v0 + 456) = *(_DWORD *)(v49 + 80);
      *(void *)(v0 + 424) = 0;
      uint64_t v50 = *(void *)(*(void *)(v0 + 392) + 32);
      sub_100005CB0(&qword_1000F2A30);
      uint64_t v51 = swift_allocObject();
      *(void *)(v0 + 432) = v51;
      *(_OWORD *)(v51 + 16) = xmmword_1000D7AB0;
      StoredPhoto.localIdentifier.getter();
      sub_10003FEA4(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      dispatch thunk of PhotosFaceID.id.getter();
      uint64_t v52 = type metadata accessor for AlbumDatabase();
      uint64_t v53 = sub_10003FEA4(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
      uint64_t v54 = (void *)swift_task_alloc();
      *(void *)(v0 + 440) = v54;
      *uint64_t v54 = v0;
      v54[1] = sub_100037508;
      uint64_t v55 = *(void *)(v0 + 208);
      return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v51, v55, v50, v52, v53);
    }
    else
    {
      uint64_t v56 = *(void *)(v0 + 304);
      uint64_t v57 = *(void *)(v0 + 280);
      swift_bridgeObjectRelease();
      dispatch thunk of BroadcastSequence.yield(_:)();
      v41(v56, v57);
      uint64_t v58 = *(void *)(v0 + 352);
      uint64_t v59 = static CommunicationActor.shared.getter();
      *(void *)(v0 + 376) = v59;
      uint64_t v60 = *(void *)(v0 + 80);
      uint64_t v61 = *(void *)(v0 + 88);
      sub_10003EEF0(v0 + 56, v60);
      os_log_type_t v62 = (void *)swift_task_alloc();
      *(void *)(v0 + 384) = v62;
      *os_log_type_t v62 = v0;
      v62[1] = sub_10003691C;
      uint64_t v63 = *(void *)(v0 + 312);
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v63, v59, v58, v0 + 120, v60, v61);
    }
  }
}

uint64_t sub_1000373B0()
{
  swift_release();
  sub_100009090(v0 + 56);
  sub_100009090(v0 + 16);
  swift_errorRetain();
  dispatch thunk of BroadcastSequence.finish(throwing:)();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 168);
  swift_beginAccess();
  sub_10003DA70(v1);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100037508()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[25];
    uint64_t v3 = v2[26];
    uint64_t v5 = v2[24];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100037968;
  }
  else
  {
    (*(void (**)(void, void))(v2[25] + 8))(v2[26], v2[24]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[45];
    uint64_t v7 = v2[46];
    uint64_t v8 = sub_100037694;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_100037694()
{
  uint64_t v1 = v0[53] + 1;
  if (v1 == v0[51])
  {
    uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[50];
    uint64_t v3 = v0[38];
    uint64_t v4 = v0[35];
    swift_bridgeObjectRelease();
    dispatch thunk of BroadcastSequence.yield(_:)();
    v2(v3, v4);
    uint64_t v5 = v0[44];
    uint64_t v6 = static CommunicationActor.shared.getter();
    v0[47] = v6;
    uint64_t v7 = v0[10];
    uint64_t v8 = v0[11];
    sub_10003EEF0((uint64_t)(v0 + 7), v7);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[48] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10003691C;
    uint64_t v10 = v0[39];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v6, v5, v0 + 15, v7, v8);
  }
  else
  {
    v0[53] = v1;
    uint64_t v11 = *(void *)(v0[49] + 8 * v1 + 32);
    sub_100005CB0(&qword_1000F2A30);
    uint64_t v12 = swift_allocObject();
    v0[54] = v12;
    *(_OWORD *)(v12 + 16) = xmmword_1000D7AB0;
    StoredPhoto.localIdentifier.getter();
    sub_10003FEA4(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v13 = type metadata accessor for AlbumDatabase();
    uint64_t v14 = sub_10003FEA4(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
    uint64_t v15 = (void *)swift_task_alloc();
    v0[55] = v15;
    void *v15 = v0;
    v15[1] = sub_100037508;
    uint64_t v16 = v0[26];
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v12, v16, v11, v13, v14);
  }
}

uint64_t sub_100037968()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[50];
  uint64_t v2 = v0[38];
  uint64_t v3 = v0[35];
  swift_release();
  v1(v2, v3);
  sub_100009090((uint64_t)(v0 + 7));
  sub_100009090((uint64_t)(v0 + 2));
  swift_errorRetain();
  dispatch thunk of BroadcastSequence.finish(throwing:)();
  swift_errorRelease();
  swift_errorRelease();
  uint64_t v4 = v0[21];
  swift_beginAccess();
  sub_10003DA70(v4);
  swift_endAccess();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100037AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for ShuffleID();
  v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  v4[8] = *(void *)(v6 + 64);
  v4[9] = swift_task_alloc();
  v4[10] = type metadata accessor for CommunicationActor();
  v4[11] = static CommunicationActor.shared.getter();
  v4[12] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100037C1C, v8, v7);
}

uint64_t sub_100037C1C()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v13 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = (uint64_t *)v0[2];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v4);
  *(void *)(v9 + ((v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v10 = generateElements<A>(isolation:_:)();
  swift_release();
  v7[3] = sub_100005CB0(&qword_1000F2A50);
  v7[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v7 = v10;
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100037DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for ShuffleID();
  v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  v4[8] = *(void *)(v6 + 64);
  v4[9] = swift_task_alloc();
  v4[10] = type metadata accessor for CommunicationActor();
  v4[11] = static CommunicationActor.shared.getter();
  v4[12] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100037F00, v8, v7);
}

uint64_t sub_100037F00()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v13 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = (uint64_t *)v0[2];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v4);
  *(void *)(v9 + ((v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v10 = generateElements<A>(isolation:_:)();
  swift_release();
  v7[3] = sub_100005CB0(&qword_1000F2A50);
  v7[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v7 = v10;
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1000380AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = type metadata accessor for AlbumID();
  v4[6] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[7] = v6;
  v4[8] = *(void *)(v6 + 64);
  v4[9] = swift_task_alloc();
  v4[10] = type metadata accessor for CommunicationActor();
  v4[11] = static CommunicationActor.shared.getter();
  v4[12] = sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000381E4, v8, v7);
}

uint64_t sub_1000381E4()
{
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v4 = v0[6];
  uint64_t v13 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v7 = (uint64_t *)v0[2];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v5, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v6;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))(v9 + v8, v1, v4);
  *(void *)(v9 + ((v2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8)) = v13;
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v10 = generateElements<A>(isolation:_:)();
  swift_release();
  v7[3] = sub_100005CB0(&qword_1000F2A50);
  v7[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v7 = v10;
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100038390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = sub_100005CB0(&qword_1000F2A28);
  v5[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F2A60);
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ShuffleID();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v5[26] = v9;
  v5[27] = *(void *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v5[31] = v10;
  v5[32] = *(void *)(v10 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_100038684, 0, 0);
}

uint64_t sub_100038684()
{
  v0[36] = sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v1 = type metadata accessor for GalleryDatabase();
  v0[37] = v1;
  uint64_t v2 = sub_10003FEA4(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  v0[38] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000387D4;
  uint64_t v4 = v0[35];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v1, v2);
}

uint64_t sub_1000387D4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[40] = a1;
  v4[41] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[35];
  uint64_t v6 = v3[32];
  uint64_t v7 = v3[31];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    uint64_t v11 = sub_100040448;
  }
  else
  {
    v4[42] = v9;
    v4[43] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    uint64_t v11 = sub_10003895C;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10003895C()
{
  uint64_t v64 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 80);
  static Log.default.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  uint64_t v61 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    log = v6;
    uint64_t v8 = *(void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 328);
    *(void *)uint64_t v56 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v58 = *(void *)(v0 + 208);
    uint64_t v59 = *(void *)(v0 + 240);
    os_log_type_t type = v7;
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v14 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    v5(v11, v10, v12);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v15(v10, v12);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    os_log_type_t v62 = v15;
    v15(v11, v12);
    *(void *)(v0 + 40) = sub_100007E88(v16, v18, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_10003E158(v8);
    sub_100005CB0(&qword_1000F2760);
    uint64_t v19 = Dictionary.description.getter();
    unint64_t v21 = v20;
    swift_release();
    *(void *)(v0 + 48) = sub_100007E88(v19, v21, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Before processing, photos for %s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)v56 + 8);
    v22(v59, v58);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 216);
    os_log_type_t v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8);
    v62(*(void *)(v0 + 200), *(void *)(v0 + 168));
    swift_bridgeObjectRelease_n();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v22(v23, v24);
    uint64_t v9 = *(void *)(v0 + 328);
  }
  *(void *)(v0 + 352) = v22;
  uint64_t v26 = sub_100019BA0(*(void *)(v0 + 80), *(void **)(v0 + 88));
  if (v9)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  else
  {
    uint64_t v29 = v26;
    uint64_t v30 = *(void *)(v0 + 184);
    uint64_t v31 = *(void *)(v0 + 168);
    uint64_t v32 = *(void *)(v0 + 80);
    *(void *)(v0 + 360) = sub_1000331F0(v26);
    uint64_t v33 = sub_100033360(v29);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_10003F07C(v33);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 368) = sub_10003DE60(v34);
    swift_bridgeObjectRelease();
    static Log.default.getter();
    v61(v30, v32, v31);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void *)(v0 + 232);
    uint64_t v39 = *(void *)(v0 + 208);
    if (v37)
    {
      typea = v35;
      uint64_t v60 = *(void *)(v0 + 208);
      os_log_type_t v57 = v36;
      uint64_t v41 = *(void *)(v0 + 184);
      uint64_t v40 = *(void *)(v0 + 192);
      uint64_t v42 = *(void *)(v0 + 168);
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      v61(v40, v41, v42);
      v62(v41, v42);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v46 = v45;
      v62(v40, v42);
      *(void *)(v0 + 32) = sub_100007E88(v44, v46, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, typea, v57, "Clearing photos for id: %s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v47 = v60;
      uint64_t v48 = v38;
    }
    else
    {
      v62(*(void *)(v0 + 184), *(void *)(v0 + 168));

      uint64_t v48 = v38;
      uint64_t v47 = v39;
    }
    v22(v48, v47);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_10003908C;
    uint64_t v50 = *(void *)(v0 + 296);
    uint64_t v51 = *(void *)(v0 + 304);
    uint64_t v52 = *(void *)(v0 + 272);
    return dispatch thunk of PhotosFaceIDDatabase.clearPhotos(for:)(v52, v50, v51);
  }
}

uint64_t sub_10003908C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 336))(*(void *)(v2 + 272), *(void *)(v2 + 248));
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = sub_10004044C;
  }
  else
  {
    uint64_t v3 = sub_1000391DC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000391DC()
{
  unint64_t v21 = v0;
  static Log.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[28];
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v16 = v0[26];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[3] = sub_100007E88(v4, v6, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Processing photos: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v17, v16);
  }
  else
  {
    os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v8 = v0[28];
    uint64_t v9 = v0[26];
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  uint64_t v10 = (void *)v0[9];
  uint64_t v11 = v10[8];
  uint64_t v12 = v10[9];
  sub_10003EB84(v10 + 5, v11);
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 16) + **(int **)(v12 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[49] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_1000394A4;
  uint64_t v14 = v0[45];
  return v18(v14, v11, v12);
}

uint64_t sub_1000394A4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 400) = a1;
  *(void *)(v3 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10004047C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1000395C0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000395C0()
{
  AsyncThrowingChannel.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  os_log_type_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_100039698;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_100039698()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100039A94;
  }
  else {
    os_log_type_t v2 = sub_1000397AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000397AC()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  uint64_t v6 = v0[46];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[16], v1, v2);
  uint64_t result = StoredPhoto.localIdentifier.getter();
  if (!*(void *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_1000508CC(v0[33]);
  if ((v7 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[42];
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[31];
  uint64_t v11 = v0[15];
  uint64_t v12 = (char *)v0[13];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[16];
  uint64_t v13 = v0[12];
  uint64_t v14 = (int *)v0[7];
  uint64_t v15 = *(void *)(*(void *)(v0[46] + 56) + 8 * result);
  swift_bridgeObjectRetain();
  v8(v9, v10);
  *(void *)uint64_t v12 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(&v12[*(int *)(v13 + 48)], v19, v18);
  uint64_t v20 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[54] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100039B2C;
  uint64_t v17 = v0[13];
  return v20(v17);
}

uint64_t sub_100039A94()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 424);
  sub_100005CB0(&qword_1000F2850);
  swift_willThrowTypedImpl();
  swift_release();
  return _swift_task_switch(sub_100040460, 0, 0);
}

uint64_t sub_100039B2C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  sub_100016B90(*(void *)(v2 + 104), &qword_1000F2A28);
  if (v0)
  {
    swift_release();
    uint64_t v3 = sub_100040430;
  }
  else
  {
    uint64_t v3 = sub_100039C6C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_100039C6C()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100039698;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_100039D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = sub_100005CB0(&qword_1000F2A28);
  v5[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F2A60);
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ShuffleID();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v5[26] = v9;
  v5[27] = *(void *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v5[31] = v10;
  v5[32] = *(void *)(v10 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_10003A044, 0, 0);
}

uint64_t sub_10003A044()
{
  v0[36] = sub_10003FEA4(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v1 = type metadata accessor for ShuffleDatabase();
  v0[37] = v1;
  uint64_t v2 = sub_10003FEA4(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  v0[38] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10003A194;
  uint64_t v4 = v0[35];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v1, v2);
}

uint64_t sub_10003A194(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[40] = a1;
  v4[41] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[35];
  uint64_t v6 = v3[32];
  uint64_t v7 = v3[31];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    uint64_t v11 = sub_100040448;
  }
  else
  {
    v4[42] = v9;
    v4[43] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    uint64_t v11 = sub_10003A31C;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10003A31C()
{
  uint64_t v64 = v0;
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = *(void *)(v0 + 80);
  static Log.default.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  uint64_t v61 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    log = v6;
    uint64_t v8 = *(void *)(v0 + 320);
    uint64_t v9 = *(void *)(v0 + 328);
    *(void *)uint64_t v56 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 200);
    uint64_t v58 = *(void *)(v0 + 208);
    uint64_t v59 = *(void *)(v0 + 240);
    os_log_type_t type = v7;
    uint64_t v11 = *(void *)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 168);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v14 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    v5(v11, v10, v12);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v15(v10, v12);
    sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    os_log_type_t v62 = v15;
    v15(v11, v12);
    *(void *)(v0 + 40) = sub_100007E88(v16, v18, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_10003E158(v8);
    sub_100005CB0(&qword_1000F2760);
    uint64_t v19 = Dictionary.description.getter();
    unint64_t v21 = v20;
    swift_release();
    *(void *)(v0 + 48) = sub_100007E88(v19, v21, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Before processing, photos for %s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)v56 + 8);
    v22(v59, v58);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 208);
    uint64_t v25 = *(void *)(v0 + 216);
    os_log_type_t v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 176) + 8);
    v62(*(void *)(v0 + 200), *(void *)(v0 + 168));
    swift_bridgeObjectRelease_n();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v22(v23, v24);
    uint64_t v9 = *(void *)(v0 + 328);
  }
  *(void *)(v0 + 352) = v22;
  uint64_t v26 = sub_100019BA0(*(void *)(v0 + 80), *(void **)(v0 + 88));
  if (v9)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
  else
  {
    uint64_t v29 = v26;
    uint64_t v30 = *(void *)(v0 + 184);
    uint64_t v31 = *(void *)(v0 + 168);
    uint64_t v32 = *(void *)(v0 + 80);
    *(void *)(v0 + 360) = sub_1000331F0(v26);
    uint64_t v33 = sub_100033360(v29);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_10003F07C(v33);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 368) = sub_10003DE60(v34);
    swift_bridgeObjectRelease();
    static Log.default.getter();
    v61(v30, v32, v31);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = *(void *)(v0 + 232);
    uint64_t v39 = *(void *)(v0 + 208);
    if (v37)
    {
      typea = v35;
      uint64_t v60 = *(void *)(v0 + 208);
      os_log_type_t v57 = v36;
      uint64_t v41 = *(void *)(v0 + 184);
      uint64_t v40 = *(void *)(v0 + 192);
      uint64_t v42 = *(void *)(v0 + 168);
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      v61(v40, v41, v42);
      v62(v41, v42);
      sub_10003FEA4(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v46 = v45;
      v62(v40, v42);
      *(void *)(v0 + 32) = sub_100007E88(v44, v46, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, typea, v57, "Clearing photos for id: %s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v47 = v60;
      uint64_t v48 = v38;
    }
    else
    {
      v62(*(void *)(v0 + 184), *(void *)(v0 + 168));

      uint64_t v48 = v38;
      uint64_t v47 = v39;
    }
    v22(v48, v47);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v49 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_10003AA4C;
    uint64_t v50 = *(void *)(v0 + 296);
    uint64_t v51 = *(void *)(v0 + 304);
    uint64_t v52 = *(void *)(v0 + 272);
    return dispatch thunk of PhotosFaceIDDatabase.clearPhotos(for:)(v52, v50, v51);
  }
}

uint64_t sub_10003AA4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 336))(*(void *)(v2 + 272), *(void *)(v2 + 248));
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = sub_10004044C;
  }
  else
  {
    uint64_t v3 = sub_10003AB9C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10003AB9C()
{
  unint64_t v21 = v0;
  static Log.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[28];
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v16 = v0[26];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[3] = sub_100007E88(v4, v6, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Processing photos: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v17, v16);
  }
  else
  {
    os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v8 = v0[28];
    uint64_t v9 = v0[26];
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  uint64_t v10 = (void *)v0[9];
  uint64_t v11 = v10[8];
  uint64_t v12 = v10[9];
  sub_10003EB84(v10 + 5, v11);
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 16) + **(int **)(v12 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[49] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10003AE64;
  uint64_t v14 = v0[45];
  return v18(v14, v11, v12);
}

uint64_t sub_10003AE64(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 400) = a1;
  *(void *)(v3 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10004047C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10003AF80;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10003AF80()
{
  AsyncThrowingChannel.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  os_log_type_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_10003B058;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_10003B058()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100039A94;
  }
  else {
    os_log_type_t v2 = sub_10003B16C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10003B16C()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  uint64_t v6 = v0[46];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[16], v1, v2);
  uint64_t result = StoredPhoto.localIdentifier.getter();
  if (!*(void *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_1000508CC(v0[33]);
  if ((v7 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[42];
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[31];
  uint64_t v11 = v0[15];
  uint64_t v12 = (char *)v0[13];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[16];
  uint64_t v13 = v0[12];
  uint64_t v14 = (int *)v0[7];
  uint64_t v15 = *(void *)(*(void *)(v0[46] + 56) + 8 * result);
  swift_bridgeObjectRetain();
  v8(v9, v10);
  *(void *)uint64_t v12 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(&v12[*(int *)(v13 + 48)], v19, v18);
  uint64_t v20 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[54] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10003B454;
  uint64_t v17 = v0[13];
  return v20(v17);
}

uint64_t sub_10003B454()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  sub_100016B90(*(void *)(v2 + 104), &qword_1000F2A28);
  if (v0)
  {
    swift_release();
    uint64_t v3 = sub_100040430;
  }
  else
  {
    uint64_t v3 = sub_10003B594;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10003B594()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10003B058;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_10003B678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  v5[12] = sub_100005CB0(&qword_1000F2A28);
  v5[13] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v5[14] = v6;
  v5[15] = *(void *)(v6 - 8);
  v5[16] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v5[17] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F2A60);
  v5[18] = v7;
  v5[19] = *(void *)(v7 - 8);
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AlbumID();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v5[26] = v9;
  v5[27] = *(void *)(v9 - 8);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  v5[30] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v5[31] = v10;
  v5[32] = *(void *)(v10 - 8);
  v5[33] = swift_task_alloc();
  v5[34] = swift_task_alloc();
  v5[35] = swift_task_alloc();
  return _swift_task_switch(sub_10003B96C, 0, 0);
}

uint64_t sub_10003B96C()
{
  v0[36] = sub_10003FEA4(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v1 = type metadata accessor for AlbumDatabase();
  v0[37] = v1;
  uint64_t v2 = sub_10003FEA4(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  v0[38] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[39] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10003BABC;
  uint64_t v4 = v0[35];
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(v4, v1, v2);
}

uint64_t sub_10003BABC(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[40] = a1;
  v4[41] = v1;
  swift_task_dealloc();
  uint64_t v5 = v3[35];
  uint64_t v6 = v3[32];
  uint64_t v7 = v3[31];
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = v10;
  if (v1)
  {
    v9(v5, v7);
    uint64_t v11 = sub_10003C374;
  }
  else
  {
    v4[42] = v9;
    v4[43] = v8 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v5, v7);
    uint64_t v11 = sub_10003BC44;
  }
  return _swift_task_switch(v11, 0, 0);
}

uint64_t sub_10003BC44()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[10];
  static Log.default.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v5(v1, v4, v2);
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  uint64_t v61 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    log = v6;
    uint64_t v8 = v0[40];
    uint64_t v9 = v0[41];
    *(void *)uint64_t v56 = v0[27];
    uint64_t v10 = v0[25];
    uint64_t v58 = v0[26];
    uint64_t v59 = v0[30];
    os_log_type_t type = v7;
    uint64_t v11 = v0[24];
    uint64_t v12 = v0[21];
    uint64_t v13 = v0[22];
    uint64_t v14 = swift_slowAlloc();
    v63[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    v5(v11, v10, v12);
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v15(v10, v12);
    sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    os_log_type_t v62 = v15;
    v15(v11, v12);
    v0[5] = sub_100007E88(v16, v18, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    sub_10003E158(v8);
    sub_100005CB0(&qword_1000F2760);
    uint64_t v19 = Dictionary.description.getter();
    unint64_t v21 = v20;
    swift_release();
    v0[6] = sub_100007E88(v19, v21, v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, type, "Before processing, photos for %s: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(*(void *)v56 + 8);
    v22(v59, v58);
  }
  else
  {
    uint64_t v23 = v0[30];
    uint64_t v24 = v0[26];
    uint64_t v25 = v0[27];
    os_log_type_t v62 = *(void (**)(uint64_t, uint64_t))(v0[22] + 8);
    v62(v0[25], v0[21]);
    swift_bridgeObjectRelease_n();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v22(v23, v24);
    uint64_t v9 = v0[41];
  }
  v0[44] = v22;
  uint64_t v26 = sub_100018868(v0[10], v0[11]);
  if (v9)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
  else
  {
    uint64_t v29 = (uint64_t)v26;
    uint64_t v30 = v0[23];
    uint64_t v31 = v0[21];
    uint64_t v32 = v0[10];
    v0[45] = sub_1000331F0((uint64_t)v26);
    uint64_t v33 = sub_100033360(v29);
    swift_bridgeObjectRelease();
    uint64_t v34 = sub_10003F07C(v33);
    swift_bridgeObjectRelease();
    v0[46] = sub_10003DE60(v34);
    swift_bridgeObjectRelease();
    static Log.default.getter();
    v61(v30, v32, v31);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.debug.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    uint64_t v38 = v0[29];
    uint64_t v39 = v0[26];
    if (v37)
    {
      typea = v35;
      uint64_t v60 = v0[26];
      os_log_type_t v57 = v36;
      uint64_t v41 = v0[23];
      uint64_t v40 = v0[24];
      uint64_t v42 = v0[21];
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      v63[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 136315138;
      v61(v40, v41, v42);
      v62(v41, v42);
      sub_10003FEA4(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v46 = v45;
      v62(v40, v42);
      v0[4] = sub_100007E88(v44, v46, v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, typea, v57, "Clearing photos for id: %s", v43, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v47 = v60;
      uint64_t v48 = v38;
    }
    else
    {
      v62(v0[23], v0[21]);

      uint64_t v48 = v38;
      uint64_t v47 = v39;
    }
    v22(v48, v47);
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v49 = (void *)swift_task_alloc();
    v0[47] = v49;
    *uint64_t v49 = v0;
    v49[1] = sub_10003C488;
    uint64_t v50 = v0[37];
    uint64_t v51 = v0[38];
    uint64_t v52 = v0[34];
    return dispatch thunk of PhotosFaceIDDatabase.clearPhotos(for:)(v52, v50, v51);
  }
}

uint64_t sub_10003C374()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003C488()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 384) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2 + 336))(*(void *)(v2 + 272), *(void *)(v2 + 248));
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v3 = sub_10003C8A0;
  }
  else
  {
    uint64_t v3 = sub_10003C5D8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10003C5D8()
{
  unint64_t v21 = v0;
  static Log.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v17 = v0[28];
    uint64_t v19 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v16 = v0[26];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v4 = Array.description.getter();
    unint64_t v6 = v5;
    swift_bridgeObjectRelease();
    v0[3] = sub_100007E88(v4, v6, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Processing photos: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v19(v17, v16);
  }
  else
  {
    os_log_type_t v7 = (void (*)(uint64_t, uint64_t))v0[44];
    uint64_t v8 = v0[28];
    uint64_t v9 = v0[26];
    swift_bridgeObjectRelease_n();

    v7(v8, v9);
  }
  uint64_t v10 = (void *)v0[9];
  uint64_t v11 = v10[8];
  uint64_t v12 = v10[9];
  sub_10003EB84(v10 + 5, v11);
  unint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 16) + **(int **)(v12 + 16));
  uint64_t v13 = (void *)swift_task_alloc();
  v0[49] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10003C9B4;
  uint64_t v14 = v0[45];
  return v18(v14, v11, v12);
}

uint64_t sub_10003C8A0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003C9B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 400) = a1;
  *(void *)(v3 + 408) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10003CBA8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10003CAD0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10003CAD0()
{
  AsyncThrowingChannel.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  os_log_type_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *os_log_type_t v2 = v0;
  v2[1] = sub_10003CCCC;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_10003CBA8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10003CCCC()
{
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_10003D0C8;
  }
  else {
    os_log_type_t v2 = sub_10003CDE0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10003CDE0()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[15];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  uint64_t v6 = v0[46];
  (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[16], v1, v2);
  uint64_t result = StoredPhoto.localIdentifier.getter();
  if (!*(void *)(v6 + 16))
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = sub_1000508CC(v0[33]);
  if ((v7 & 1) == 0)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v8 = (void (*)(uint64_t, uint64_t))v0[42];
  uint64_t v9 = v0[33];
  uint64_t v10 = v0[31];
  uint64_t v11 = v0[15];
  uint64_t v12 = (char *)v0[13];
  uint64_t v18 = v0[14];
  uint64_t v19 = v0[16];
  uint64_t v13 = v0[12];
  uint64_t v14 = (int *)v0[7];
  uint64_t v15 = *(void *)(*(void *)(v0[46] + 56) + 8 * result);
  swift_bridgeObjectRetain();
  v8(v9, v10);
  *(void *)uint64_t v12 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(&v12[*(int *)(v13 + 48)], v19, v18);
  uint64_t v20 = (uint64_t (*)(uint64_t))((char *)v14 + *v14);
  uint64_t v16 = (void *)swift_task_alloc();
  v0[54] = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_10003D29C;
  uint64_t v17 = v0[13];
  return v20(v17);
}

uint64_t sub_10003D0C8()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 424);
  sub_100005CB0(&qword_1000F2850);
  swift_willThrowTypedImpl();
  swift_release();
  return _swift_task_switch(sub_10003D160, 0, 0);
}

uint64_t sub_10003D160()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10003D29C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  sub_100016B90(*(void *)(v2 + 104), &qword_1000F2A28);
  if (v0)
  {
    swift_release();
    uint64_t v3 = sub_10003D4C0;
  }
  else
  {
    uint64_t v3 = sub_10003D3DC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_10003D3DC()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  uint64_t v1 = sub_100005F48(&qword_1000F2A68, &qword_1000F2A60);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[52] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10003CCCC;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  return dispatch thunk of AsyncIteratorProtocol.next()(v3, v4, v1);
}

uint64_t sub_10003D4C0()
{
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v6 = v0[14];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  char v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_10003D61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return _swift_task_switch(sub_10003D63C, 0, 0);
}

uint64_t sub_10003D63C()
{
  type metadata accessor for CommunicationActor();
  *(void *)(v0 + 32) = static CommunicationActor.shared.getter();
  sub_10003FEA4(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10003D700, v2, v1);
}

uint64_t sub_10003D700()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_release();
  sub_10006A02C(v1);
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10003D76C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10003D7A4()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10003D83C;
  return sub_1000CE788(v2);
}

uint64_t sub_10003D83C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  char v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

uint64_t sub_10003D950()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100040458;
  return sub_10001C0FC(v0);
}

uint64_t sub_10003D9E0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100040458;
  return sub_10001C9C0(v0);
}

uint64_t sub_10003DA70(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_1000508CC(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1000543C0();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, v9);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10003DB68(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_10003DB68(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = _HashTable.previousHole(before:)();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_10003FEA4(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = dispatch thunk of Hashable._rawHashValue(seed:)();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (void *)(v22 + 8 * a1);
            uint64_t v24 = (void *)(v22 + 8 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              *uint64_t v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10003DE60(uint64_t a1)
{
  uint64_t v35 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v32 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005CB0(&qword_1000F2A70);
  uint64_t result = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = result;
  int64_t v6 = 0;
  uint64_t v36 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v27 = v8;
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v30 = result + 64;
  uint64_t v31 = v2 + 16;
  uint64_t v33 = result;
  uint64_t v34 = v2;
  uint64_t v29 = v2 + 32;
  uint64_t v13 = v2;
  uint64_t v14 = v32;
  uint64_t v15 = v35;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v37 = (v12 - 1) & v12;
  int64_t v38 = v6;
  for (unint64_t i = __clz(__rbit64(v12)) | (v6 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v18 << 6))
  {
    unint64_t v21 = *(void *)(v13 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(void *)(v36 + 48) + v21, v15);
    uint64_t v22 = 8 * i;
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_10001B870(v23);
    swift_bridgeObjectRelease();
    *(void *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v5 = v33;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v33 + 48) + v21, v14, v15);
    *(void *)(*(void *)(v5 + 56) + v22) = v24;
    uint64_t v25 = *(void *)(v5 + 16);
    BOOL v17 = __OFADD__(v25, 1);
    uint64_t v26 = v25 + 1;
    if (v17)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    *(void *)(v5 + 16) = v26;
    unint64_t v12 = v37;
    int64_t v6 = v38;
    if (v37) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v17 = __OFADD__(v6, 1);
    int64_t v18 = v6 + 1;
    if (v17) {
      goto LABEL_25;
    }
    if (v18 >= v28) {
      return v5;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    if (!v19) {
      break;
    }
LABEL_15:
    uint64_t v37 = (v19 - 1) & v19;
    int64_t v38 = v18;
  }
  int64_t v20 = v18 + 1;
  if (v18 + 1 >= v28) {
    return v5;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19) {
    goto LABEL_14;
  }
  int64_t v20 = v18 + 2;
  if (v18 + 2 >= v28) {
    return v5;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19) {
    goto LABEL_14;
  }
  int64_t v20 = v18 + 3;
  if (v18 + 3 >= v28) {
    return v5;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19)
  {
LABEL_14:
    int64_t v18 = v20;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v18 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v18 >= v28) {
      return v5;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    ++v20;
    if (v19) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

void *sub_10003E158(uint64_t a1)
{
  uint64_t v45 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005CB0(&qword_1000F2848);
  uint64_t result = (void *)static _DictionaryStorage.copy(original:)();
  int64_t v6 = 0;
  uint64_t v37 = a1;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v8 = a1 + 64;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v7;
  uint64_t v34 = v8;
  int64_t v35 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v44 = v2 + 32;
  uint64_t v36 = result + 8;
  uint64_t v33 = result;
  if ((v11 & v7) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v13 | (v6 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v6 << 6))
  {
    uint64_t v18 = 8 * i;
    uint64_t v19 = *(void *)(*(void *)(v37 + 48) + 8 * i);
    uint64_t v20 = *(void *)(*(void *)(v37 + 56) + 8 * i);
    int64_t v21 = *(void *)(v20 + 16);
    if (v21)
    {
      uint64_t v39 = *(void *)(*(void *)(v37 + 48) + 8 * i);
      uint64_t v40 = 8 * i;
      unint64_t v41 = i;
      unint64_t v42 = v12;
      int64_t v43 = v6;
      unint64_t v46 = (unint64_t *)&_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100054824(0, v21, 0);
      uint64_t v22 = v46;
      uint64_t v23 = *(void *)(type metadata accessor for StoredPhoto() - 8);
      uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
      uint64_t v38 = v20;
      uint64_t v25 = v20 + ((v24 + 32) & ~v24);
      uint64_t v26 = *(void *)(v23 + 72);
      do
      {
        StoredPhoto.localIdentifier.getter();
        unint64_t v46 = v22;
        unint64_t v28 = v22[2];
        unint64_t v27 = v22[3];
        if (v28 >= v27 >> 1)
        {
          sub_100054824(v27 > 1, v28 + 1, 1);
          uint64_t v22 = v46;
        }
        v22[2] = v28 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v28, v4, v45);
        v25 += v26;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      uint64_t result = v33;
      unint64_t v12 = v42;
      int64_t v6 = v43;
      uint64_t v18 = v40;
      unint64_t i = v41;
      uint64_t v19 = v39;
    }
    else
    {
      uint64_t v22 = (unint64_t *)&_swiftEmptyArrayStorage;
    }
    *(void *)((char *)v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(result[6] + v18) = v19;
    *(void *)(result[7] + v18) = v22;
    uint64_t v29 = result[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30)
    {
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    result[2] = v31;
    if (v12) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_31;
    }
    if (v15 >= v35) {
      return result;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v35) {
        return result;
      }
      unint64_t v16 = *(void *)(v34 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v35) {
          return result;
        }
        unint64_t v16 = *(void *)(v34 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v12 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v35) {
    return result;
  }
  unint64_t v16 = *(void *)(v34 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v35) {
      return result;
    }
    unint64_t v16 = *(void *)(v34 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10003E504()
{
  uint64_t v22 = type metadata accessor for ShuffleID();
  uint64_t v0 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self sharedPhotoLibrary];
  id v4 = [objc_allocWithZone((Class)PFCShuffleGenerator) initWithPhotoLibrary:v3 targetShuffleSize:static TestProperties.targetGalleryShuffleSize.getter()];

  id v5 = [v4 shuffles];
  sub_10003F5E8();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v10 = (unint64_t *)&_swiftEmptyArrayStorage;
LABEL_14:
    uint64_t v17 = sub_100062544((uint64_t)v10);

    swift_bridgeObjectRelease();
    return v17;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v23 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t result = sub_100054860(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = 0;
    uint64_t v10 = v23;
    unint64_t v21 = v6 & 0xC000000000000001;
    id v19 = v4;
    uint64_t v20 = v0 + 32;
    unint64_t v11 = v6;
    do
    {
      if (v21) {
        id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v12 = *(id *)(v6 + 8 * v9 + 32);
      }
      unint64_t v13 = v12;
      id v14 = [v12 people];
      static Set._unconditionallyBridgeFromObjectiveC(_:)();

      [v13 pets];
      [v13 nature];
      [v13 cityscape];
      ShuffleID.init(people:pets:nature:cityscape:)();

      uint64_t v23 = v10;
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_100054860(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v23;
      }
      ++v9;
      v10[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v0 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80))+ *(void *)(v0 + 72) * v16, v2, v22);
      unint64_t v6 = v11;
    }
    while (v7 != v9);
    swift_bridgeObjectRelease();
    id v4 = v19;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10003E840(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_10003E898()
{
  uint64_t v1 = type metadata accessor for Message();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10003E96C()
{
  uint64_t v2 = *(void *)(type metadata accessor for Message() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_100005F94;
  return _swift_task_switch(sub_10003D63C, 0, 0);
}

uint64_t sub_10003EA54()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003EA6C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100005F94;
  return sub_100037AE4(a1, v6, v7, v8);
}

void *sub_10003EB84(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_10003EBC8()
{
  return sub_10003FF04((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003EBE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  id v12 = (char *)v1 + v6;
  unint64_t v13 = *(int **)((char *)v1 + v6);
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = (uint64_t)v1 + v8;
  unint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *unint64_t v16 = v2;
  v16[1] = sub_100005F94;
  return sub_1000336D4(a1, v9, v10, v11, (uint64_t)v1 + v5, v13, v14, v15);
}

uint64_t *sub_10003ED9C(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_10003EE04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for FetchFaceRequest() - 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100005F94;
  return sub_10002BC38(a1, a2, v7, v8);
}

uint64_t sub_10003EEF0(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_10003EF40()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003EF58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v7;
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_100005F94;
  return sub_100038390(a1, a2, v8, v9, v10);
}

uint64_t sub_10003F07C(uint64_t a1)
{
  uint64_t v69 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v65 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_100005CB0((uint64_t *)&unk_1000F3A70);
  uint64_t v4 = __chkstk_darwin(v64);
  uint64_t v61 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v63 = (uint64_t *)((char *)&v51 - v7);
  uint64_t v8 = __chkstk_darwin(v6);
  os_log_type_t v62 = (char *)&v51 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v51 - v11;
  uint64_t v13 = &_swiftEmptyDictionarySingleton;
  uint64_t v70 = &_swiftEmptyDictionarySingleton;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return (uint64_t)v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v16 = (v15 + 32) & ~v15;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v10 + 72);
  uint64_t v59 = v16;
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v2 + 16);
  uint64_t v66 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  uint64_t v55 = v18 + v16;
  uint64_t v56 = v2;
  uint64_t v53 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v54 = v15 | 7;
  long long v52 = xmmword_1000D7AB0;
  uint64_t v57 = v18;
  uint64_t v58 = (char *)&v51 - v11;
  uint64_t v19 = v69;
  while (1)
  {
    uint64_t v67 = v17;
    uint64_t v68 = v14;
    sub_10003F518(v17, (uint64_t)v12);
    uint64_t v23 = v64;
    uint64_t v24 = *(int *)(v64 + 48);
    uint64_t v25 = v62;
    uint64_t v26 = &v62[v24];
    uint64_t v27 = *(void *)v12;
    *(void *)os_log_type_t v62 = *(void *)v12;
    unint64_t v28 = *v60;
    (*v60)(&v25[v24], &v12[v24], v19);
    uint64_t v29 = (uint64_t)v63;
    BOOL v30 = (char *)v63 + *(int *)(v23 + 48);
    void *v63 = v27;
    uint64_t v31 = *v66;
    (*v66)(v30, v26, v19);
    uint64_t v32 = (uint64_t)v65;
    v28(v65, v30, v19);
    sub_100016B90(v29, (uint64_t *)&unk_1000F3A70);
    unint64_t v34 = sub_1000508CC(v32);
    uint64_t v35 = v13[2];
    BOOL v36 = (v33 & 1) == 0;
    uint64_t v37 = v35 + v36;
    if (__OFADD__(v35, v36)) {
      break;
    }
    char v38 = v33;
    id v12 = v58;
    if (v13[3] < v37)
    {
      sub_100052838(v37, 1);
      uint64_t v13 = v70;
      unint64_t v39 = sub_1000508CC(v32);
      if ((v38 & 1) != (v40 & 1)) {
        goto LABEL_19;
      }
      unint64_t v34 = v39;
    }
    if (v38)
    {
      (*v53)(v32, v69);
      uint64_t v13 = v70;
      uint64_t v41 = v70[7];
      sub_10003F580((uint64_t)v12, v61);
      unint64_t v42 = *(void *)(v41 + 8 * v34);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v41 + 8 * v34) = v42;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v42 = sub_1000D1FD8(0, *(void *)(v42 + 16) + 1, 1, v42);
        *(void *)(v41 + 8 * v34) = v42;
      }
      unint64_t v45 = *(void *)(v42 + 16);
      unint64_t v44 = *(void *)(v42 + 24);
      if (v45 >= v44 >> 1)
      {
        unint64_t v42 = sub_1000D1FD8(v44 > 1, v45 + 1, 1, v42);
        *(void *)(v41 + 8 * v34) = v42;
      }
      uint64_t v20 = v67;
      uint64_t v21 = v68;
      *(void *)(v42 + 16) = v45 + 1;
      uint64_t v22 = v57;
      sub_10003F580(v61, v42 + v59 + v45 * v57);
    }
    else
    {
      sub_100005CB0(&qword_1000F2A78);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v52;
      sub_10003F580((uint64_t)v12, v46 + v59);
      v13[(v34 >> 6) + 8] |= 1 << v34;
      v31((char *)(v13[6] + *(void *)(v56 + 72) * v34), (char *)v32, v69);
      *(void *)(v13[7] + 8 * v34) = v46;
      uint64_t v47 = v13[2];
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (v48) {
        goto LABEL_18;
      }
      v13[2] = v49;
      uint64_t v20 = v67;
      uint64_t v21 = v68;
      uint64_t v22 = v57;
    }
    uint64_t v17 = v20 + v22;
    uint64_t v14 = v21 - 1;
    if (!v14) {
      return (uint64_t)v13;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10003F518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0((uint64_t *)&unk_1000F3A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10003F580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0((uint64_t *)&unk_1000F3A70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10003F5E8()
{
  unint64_t result = qword_1000F2A80;
  if (!qword_1000F2A80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_1000F2A80);
  }
  return result;
}

uint64_t sub_10003F628()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003F640(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100005F94;
  return sub_100037DC8(a1, v6, v7, v8);
}

uint64_t sub_10003F758()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003F770(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v7;
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_100005F94;
  return sub_100039D50(a1, a2, v8, v9, v10);
}

uint64_t sub_10003F894()
{
  return sub_10003FF04((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_10003F8AC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  id v12 = (char *)v1 + v6;
  uint64_t v13 = *(int **)((char *)v1 + v6);
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = (uint64_t)v1 + v8;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_100005F94;
  return sub_100034C28(a1, v9, v10, v11, (uint64_t)v1 + v5, v13, v14, v15);
}

uint64_t sub_10003FA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for FetchFaceRequest() - 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_100005F94;
  return sub_10002DD04(a1, a2, v7, v8);
}

uint64_t sub_10003FB58()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for AlbumID);
}

uint64_t sub_10003FB70(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for AlbumID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100005F94;
  return sub_1000380AC(a1, v6, v7, v8);
}

uint64_t sub_10003FC88()
{
  return sub_10003FCA0((uint64_t (*)(void))&type metadata accessor for AlbumID);
}

uint64_t sub_10003FCA0(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_10003FD80(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for AlbumID() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = v2 + v7;
  uint64_t v10 = *(void *)(v2 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_100005F94;
  return sub_10003B678(a1, a2, v8, v9, v10);
}

uint64_t sub_10003FEA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10003FEEC()
{
  return sub_10003FF04((uint64_t (*)(void))&type metadata accessor for AlbumID);
}

uint64_t sub_10003FF04(uint64_t (*a1)(void))
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = a1(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = (v7 + v10 + 16) & ~v10;
  uint64_t v14 = v5 | v10 | 7;
  unint64_t v12 = ((*(void *)(v9 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1 + v6, v3);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1 + v11, v8);
  swift_release();

  return _swift_deallocObject(v1, v12, v14);
}

uint64_t sub_1000400A4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for AlbumID() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  unint64_t v12 = (char *)v1 + v6;
  uint64_t v13 = *(int **)((char *)v1 + v6);
  uint64_t v14 = *((void *)v12 + 1);
  uint64_t v15 = (uint64_t)v1 + v8;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_1000043B4;
  return sub_10003617C(a1, v9, v10, v11, (uint64_t)v1 + v5, v13, v14, v15);
}

uint64_t sub_100040264()
{
  uint64_t FaceRequest = type metadata accessor for FetchFaceRequest();
  uint64_t v2 = *(void *)(FaceRequest - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, FaceRequest);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100040330(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for FetchFaceRequest() - 8);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  *uint64_t v9 = v3;
  v9[1] = sub_1000043B4;
  return sub_10002F848(a1, a2, v7, v8);
}

unint64_t sub_10004048C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2DC8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000507B8(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100040590(uint64_t a1)
{
  uint64_t v2 = sub_100005CB0(&qword_1000F2F10);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned __int8 v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2DD8);
  uint64_t v6 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_100056E64(v12, (uint64_t)v5, &qword_1000F2F10);
    unint64_t result = sub_1000508CC((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for UUID();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100040784(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2DD0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1000509A0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000408A0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2CB8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1000509A0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1000409B4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2CA0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100056E64(v6, (uint64_t)&v13, &qword_1000F2CA8);
    uint64_t v7 = v13;
    unint64_t result = sub_100050AA0(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_100055BD4(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100040AE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100005CB0(&qword_1000F2CE8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_100056E64(v6, (uint64_t)&v15, &qword_1000F2CF0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1000509A0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100055BD4(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_100040C1C()
{
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    id v2 = *(id *)(v0 + 40);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)AXMVoiceOverVisionEngine) init];
    uint64_t v4 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  swift_release();
  return v2;
}

uint64_t sub_100040D1C()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for CommunicationActor();
  v1[4] = static CommunicationActor.shared.getter();
  v1[5] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100040DEC, v3, v2);
}

uint64_t sub_100040DEC()
{
  swift_release();
  swift_retain();
  sub_100005CB0(&qword_1000F2D18);
  sub_100005F48(&qword_1000F2D20, &qword_1000F2D18);
  PhotosXPCServer.registerGeneratePhoto<A>(callback:)();
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F2D30;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_10004C57C(1, (uint64_t)&unk_1000F2D40, v2, (uint64_t)&unk_1000EE4E0, (uint64_t)sub_10005620C);
  swift_release();
  swift_release();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerGenerateMask(callback:)();
  swift_release();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100040FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000043B4;
  return sub_100041098(a1, a2);
}

uint64_t sub_100041098(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = sub_100005CB0(&qword_1000F2970);
  v3[7] = swift_task_alloc();
  v3[8] = type metadata accessor for CommunicationActor();
  v3[9] = static CommunicationActor.shared.getter();
  v3[10] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[11] = v5;
  v3[12] = v4;
  return _swift_task_switch(sub_1000411A0, v5, v4);
}

uint64_t sub_1000411A0()
{
  *(void *)(v0 + 104) = GeneratePhotoRequest.photoIdentifiers.getter();
  *(void *)(v0 + 112) = static CommunicationActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100041240, v2, v1);
}

uint64_t sub_100041240()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[5];
  swift_release();
  static CommunicationActor.shared.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  type metadata accessor for StoredPhoto();
  swift_retain();
  swift_bridgeObjectRetain();
  v0[15] = generateElements<A>(isolation:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  return _swift_task_switch(sub_10004133C, v4, v5);
}

uint64_t sub_10004133C()
{
  uint64_t v1 = v0[15];
  swift_release();
  v0[2] = v1;
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  AsyncSequence.generic.getter();
  swift_release();
  type metadata accessor for GeneratePhotoResponse();
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  AsyncMapSequence.init(_:transform:)();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100041488(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = type metadata accessor for CommunicationActor();
  v3[7] = static CommunicationActor.shared.getter();
  v3[8] = static CommunicationActor.shared.getter();
  v3[9] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100041568, v5, v4);
}

uint64_t sub_100041568()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  swift_release();
  static CommunicationActor.shared.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  type metadata accessor for StoredPhoto();
  swift_retain();
  swift_bridgeObjectRetain();
  v0[10] = generateElements<A>(isolation:_:)();
  swift_release();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100041680, v5, v4);
}

uint64_t sub_100041680()
{
  uint64_t v1 = v0[10];
  swift_release();
  v0[2] = v1;
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  AsyncSequence.generic.getter();
  swift_release();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_100041754(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000417EC;
  return sub_1000418FC(a1);
}

uint64_t sub_1000417EC(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_1000418FC(uint64_t a1)
{
  v2[6] = a1;
  v2[7] = v1;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StoredPhoto();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v2[15] = v5;
  v2[16] = *(void *)(v5 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v2[18] = v6;
  v2[19] = *(void *)(v6 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v2[22] = v7;
  v2[23] = *(void *)(v7 - 8);
  v2[24] = swift_task_alloc();
  v2[25] = swift_task_alloc();
  v2[26] = swift_task_alloc();
  v2[27] = type metadata accessor for CommunicationActor();
  v2[28] = static CommunicationActor.shared.getter();
  v2[29] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[30] = v9;
  v2[31] = v8;
  return _swift_task_switch(sub_100041BD4, v9, v8);
}

uint64_t sub_100041BD4()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[26];
  v0[32] = *(void *)(v0[7] + 16);
  sub_1000572C4(v1);
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v5, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v23 = v0[19];
    uint64_t v9 = v0[17];
    uint64_t v24 = v0[18];
    uint64_t v25 = v0[21];
    uint64_t v11 = v0[15];
    uint64_t v10 = v0[16];
    swift_release();
    sub_1000568FC(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100007E88(v12, v13, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Processing mask photo: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v14(v25, v24);
  }
  else
  {
    uint64_t v15 = v0[21];
    uint64_t v16 = v0[18];
    uint64_t v17 = v0[19];
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v14(v15, v16);
  }
  v0[33] = v14;
  unint64_t v18 = sub_1000408A0((uint64_t)&off_1000EDCF8);
  v0[34] = v18;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[35] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_100041FB4;
  uint64_t v20 = v0[26];
  uint64_t v21 = v0[6];
  return sub_100042DE4(v21, v20, v18);
}

uint64_t sub_100041FB4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 288) = a1;
  *(void *)(v4 + 296) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 248);
  uint64_t v6 = *(void *)(v3 + 240);
  if (v1) {
    os_log_type_t v7 = sub_100042A7C;
  }
  else {
    os_log_type_t v7 = sub_100042110;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100042110()
{
  uint64_t v2 = (void *)v0[36];
  uint64_t v1 = v0[37];
  (*(void (**)(void, void, void))(v0[23] + 16))(v0[25], v0[26], v0[22]);
  id v3 = v2;
  StoredPhoto.init(pfcStoredPhoto:baseURL:)();
  if (v1)
  {
    uint64_t v4 = (void *)v0[36];
    (*(void (**)(void, void))(v0[23] + 8))(v0[26], v0[22]);

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    os_log_type_t v7 = (void *)swift_task_alloc();
    v0[38] = v7;
    *os_log_type_t v7 = v0;
    v7[1] = sub_1000422CC;
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[14];
    return sub_100057480(v8, v9);
  }
}

uint64_t sub_1000422CC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[30];
    uint64_t v4 = v2[31];
    uint64_t v5 = sub_100042B7C;
  }
  else
  {
    uint64_t v7 = v2[12];
    uint64_t v6 = v2[13];
    uint64_t v8 = v2[11];
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v2[40] = v9;
    v2[41] = (v7 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v9(v6, v8);
    uint64_t v3 = v2[30];
    uint64_t v4 = v2[31];
    uint64_t v5 = sub_100042404;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100042404()
{
  uint64_t v54 = v0;
  uint64_t v1 = *(void *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  swift_release();
  *(void *)(v0 + 16) = 0xD000000000000010;
  *(void *)(v0 + 24) = 0x80000001000D6270;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_10005576C();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = Data.init(contentsOf:options:)();
  if (v1)
  {
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v10 = *(void *)(v0 + 184);
    uint64_t v9 = *(void *)(v0 + 192);
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v12 = *(void *)(v0 + 112);
    uint64_t v13 = *(void *)(v0 + 88);

    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v14(v9, v11);
    v7(v12, v13);
    v14(v8, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
  else
  {
    uint64_t v15 = v5;
    unint64_t v16 = v6;
    uint64_t v17 = *(void *)(v0 + 192);
    id v18 = [self defaultManager];
    sub_100009170(v17, 1);

    static Log.photos.getter();
    sub_10003E840(v15, v16);
    sub_10003E840(v15, v16);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
      char v40 = *(void **)(v0 + 288);
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
      uint64_t v48 = *(void *)(v0 + 208);
      uint64_t v24 = *(void *)(v0 + 184);
      uint64_t v38 = *(void *)(v0 + 144);
      uint64_t v39 = *(void *)(v0 + 160);
      uint64_t v44 = *(void *)(v0 + 112);
      uint64_t v45 = *(void *)(v0 + 192);
      uint64_t v42 = *(void *)(v0 + 88);
      uint64_t v43 = *(void *)(v0 + 176);
      sub_10003E840(v15, v16);
      swift_release();
      uint64_t v25 = Data.description.getter();
      unint64_t v27 = v26;
      sub_100005C58(v15, v16);
      *(void *)(v0 + 32) = sub_100007E88(v25, v27, &v53);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100005C58(v15, v16);
      sub_100005C58(v15, v16);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Returning mask: %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v41(v39, v38);
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v28(v45, v43);
      v50(v44, v42);
      v28(v48, v43);
    }
    else
    {
      uint64_t v29 = v21;
      BOOL v30 = *(void **)(v0 + 288);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v0 + 264);
      uint64_t v51 = *(void *)(v0 + 208);
      long long v52 = *(void (**)(uint64_t, uint64_t))(v0 + 320);
      uint64_t v32 = *(void *)(v0 + 184);
      uint64_t v33 = *(void *)(v0 + 176);
      uint64_t v34 = *(void *)(v0 + 160);
      uint64_t v35 = *(void *)(v0 + 144);
      uint64_t v47 = *(void *)(v0 + 112);
      uint64_t v49 = *(void *)(v0 + 192);
      uint64_t v46 = *(void *)(v0 + 88);

      sub_100005C58(v15, v16);
      sub_100005C58(v15, v16);

      v31(v34, v35);
      BOOL v36 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      v36(v49, v33);
      v52(v47, v46);
      v36(v51, v33);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v37(v15, v16);
  }
}

uint64_t sub_100042A7C()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100042B7C()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = v0[26];
  uint64_t v3 = v0[22];
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[14];
  uint64_t v6 = v0[11];
  uint64_t v7 = v0[12];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100042CA4(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100042CC4, 0, 0);
}

uint64_t sub_100042CC4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_100005CB0(&qword_1000F2CF8);
  uint64_t v2 = type metadata accessor for StoredPhoto();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1000D7AB0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, v1, v2);
  GeneratePhotoResponse.init(results:)();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100042DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[18] = a3;
  v4[19] = v3;
  v4[16] = a1;
  v4[17] = a2;
  uint64_t v5 = type metadata accessor for UUID();
  v4[20] = v5;
  v4[21] = *(void *)(v5 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v4[23] = v6;
  v4[24] = *(void *)(v6 - 8);
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  v4[27] = swift_task_alloc();
  v4[28] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL.DirectoryHint();
  v4[29] = v7;
  v4[30] = *(void *)(v7 - 8);
  v4[31] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for URL();
  v4[32] = v8;
  v4[33] = *(void *)(v8 - 8);
  v4[34] = swift_task_alloc();
  v4[35] = swift_task_alloc();
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2C50);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  v4[42] = swift_task_alloc();
  v4[43] = type metadata accessor for CommunicationActor();
  v4[44] = static CommunicationActor.shared.getter();
  v4[45] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[46] = v9;
  v4[47] = v10;
  return _swift_task_switch(sub_100043110, v9, v10);
}

uint64_t sub_100043110()
{
  uint64_t v31 = v0;
  uint64_t v1 = self;
  sub_100005CB0(&qword_1000F2728);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1000D7AB0;
  *(void *)(v2 + 32) = UUID.uuidString.getter();
  *(void *)(v2 + 40) = v3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v1 fetchAssetsWithUUIDs:isa options:0];

  if (!v5) {
    __break(1u);
  }
  id v6 = [v5 firstObject];
  v0[48] = v6;

  if (v6)
  {
    swift_bridgeObjectRetain();
    id v7 = v6;
    uint64_t v8 = (void *)swift_task_alloc();
    v0[49] = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_100043658;
    v8[6] = v0[18];
    v8[7] = v7;
    void v8[4] = v0 + 2;
    v8[5] = 2;
    return _swift_task_switch(sub_10004A634, 0, 0);
  }
  else
  {
    uint64_t v10 = v0[21];
    uint64_t v9 = v0[22];
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[16];
    swift_release();
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v9, v12, v11);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v16 = v0[24];
      uint64_t v28 = v0[23];
      uint64_t v29 = v0[26];
      uint64_t v17 = v0[21];
      uint64_t v18 = v0[22];
      uint64_t v19 = v0[20];
      swift_release();
      sub_1000568FC(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[11] = sub_100007E88(v20, v21, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v19);
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "PhotoProcessor cannot fetch asset for %s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v29, v28);
    }
    else
    {
      uint64_t v22 = v0[26];
      uint64_t v23 = v0[23];
      uint64_t v24 = v0[24];
      (*(void (**)(void, void))(v0[21] + 8))(v0[22], v0[20]);

      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    }
    sub_1000556B4();
    swift_allocError();
    *uint64_t v25 = 0;
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_100043658()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 400) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 368);
  if (v0) {
    id v5 = sub_100045CE0;
  }
  else {
    id v5 = sub_1000437C0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000437C0()
{
  uint64_t v161 = v0;
  uint64_t v1 = (void *)v0;
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 16);
  *(void *)(v0 + 408) = v3;
  long long v158 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v0 + 416) = v158;
  *(void *)(v0 + 432) = *(void *)(v0 + 40);
  sub_100019380(0, &qword_1000F2C68);
  sub_100019380(0, &qword_1000F2C70);
  unint64_t v4 = v158;
  uint64_t v5 = static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
  *(void *)(v0 + 440) = v5;
  *(void *)(v0 + 448) = v2;
  v159 = (void *)v0;
  if (v2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_errorRelease();
LABEL_3:
    static Log.default.getter();
    id v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "MAD watchFaceData cannot be unarchived", v8, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void **)(v0 + 384);
    uint64_t v10 = v1[27];
    uint64_t v11 = v1[23];
    uint64_t v12 = v1[24];

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    sub_1000556B4();
    swift_allocError();
    *uint64_t v13 = 3;
    swift_willThrow();
    sub_100005C58(v3, v4);

    goto LABEL_6;
  }
  if (!v5)
  {
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_3;
  }
  id v16 = [*(id *)(v0 + 384) mainFileURL];
  if (v16)
  {
    uint64_t v17 = v16;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = 0;
  }
  else
  {
    uint64_t v18 = 1;
  }
  uint64_t v19 = *(void *)(v0 + 328);
  uint64_t v20 = *(void *)(v0 + 336);
  uint64_t v21 = *(void *)(v0 + 320);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 264);
  (*(void (**)(void, uint64_t, uint64_t, void))(v1[33] + 56))(v1[41], v18, 1, v1[32]);
  sub_100055708(v19, v20, &qword_1000F2C50);
  sub_100056E64(v20, v21, &qword_1000F2C50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v21, 1, v23) == 1)
  {
    uint64_t v25 = 0;
  }
  else
  {
    uint64_t v26 = v1[40];
    uint64_t v27 = v1[32];
    uint64_t v28 = v1[33];
    URL._bridgeToObjectiveC()(v24);
    uint64_t v25 = v29;
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
  }
  id v30 = (id)UIAccessibilityMetadataDescriptionForImage();

  if (v30)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    swift_release();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    id v32 = [self sharedInstance];
    unsigned int v33 = [v32 gizmoApplicationAccessibilityEnabled];

    swift_release();
    if (v33)
    {
      uint64_t v34 = (void *)swift_task_alloc();
      v1[57] = v34;
      *uint64_t v34 = v1;
      v34[1] = sub_100044BD0;
      uint64_t v35 = v1[42];
      return sub_10004AE0C(v35);
    }
    swift_release();
    NSString v31 = 0;
  }
  [(id)v1[55] setAccessibilityDescription:v31];

  id v36 = [self defaultManager];
  URL.init(fileURLWithPath:)();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v1[12] = 0;
  v157 = v36;
  id v38 = [v36 contentsOfDirectoryAtPath:v37 error:v1 + 12];

  uint64_t v39 = (void *)v1[12];
  if (!v38)
  {
    uint64_t v78 = v1[39];
    uint64_t v79 = v1[36];
    uint64_t v81 = v1[32];
    uint64_t v80 = v1[33];
    id v82 = v39;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v79, v78, v81);
    uint64_t v83 = Logger.logObject.getter();
    os_log_type_t v84 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v83, v84))
    {
      int v85 = (uint8_t *)swift_slowAlloc();
      v160[0] = swift_slowAlloc();
      *(_DWORD *)int v85 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v86 = v1[36];
      uint64_t v87 = v1[32];
      uint64_t v88 = v1[33];
      uint64_t v89 = v1[24];
      uint64_t v145 = v1[23];
      os_log_t logb = (os_log_t)v1[28];
      swift_release();
      sub_1000568FC(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v90 = dispatch thunk of CustomStringConvertible.description.getter();
      v1[10] = sub_100007E88(v90, v91, v160);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v156 = *(void (**)(uint64_t, uint64_t))(v88 + 8);
      v156(v86, v87);
      _os_log_impl((void *)&_mh_execute_header, v83, v84, "MAD cannot list content of %s", v85, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v89 + 8))(logb, v145);
    }
    else
    {
      uint64_t v93 = v1[28];
      uint64_t v94 = v1[23];
      uint64_t v95 = v1[24];
      uint64_t v156 = *(void (**)(uint64_t, uint64_t))(v1[33] + 8);
      v156(v1[36], v1[32]);

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v94);
    }
    uint64_t v96 = (void *)v1[55];
    uint64_t v98 = v1[51];
    unint64_t v97 = v1[52];
    uint64_t v99 = (void *)v1[48];
    uint64_t v100 = v1[42];
    uint64_t v101 = v1[39];
    uint64_t v102 = v1[32];
    sub_1000556B4();
    swift_allocError();
    *uint64_t v103 = 4;
    swift_willThrow();

    sub_100005C58(v98, v97);
    v156(v101, v102);
    uint64_t v104 = v100;
    goto LABEL_63;
  }
  uint64_t v40 = v1[18];
  uint64_t v41 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v42 = v39;

  if (!*(void *)(v40 + 16) || (unint64_t v43 = sub_1000509A0(0xD000000000000014, 0x80000001000D57C0), (v44 & 1) == 0))
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    goto LABEL_34;
  }
  if ((*(unsigned char *)(*(void *)(v1[18] + 56) + v43) & 1) == 0)
  {
LABEL_34:
    char v45 = 2;
    goto LABEL_35;
  }
  char v45 = 1;
LABEL_35:
  if (*(void *)(v41 + 16))
  {
    uint64_t v135 = *(void *)(v41 + 16);
    uint64_t v139 = v1[33];
    unsigned int v154 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v47 = v1[29];
    uint64_t v46 = v1[30];
    uint64_t v48 = *(void (**)(uint64_t))(v46 + 104);
    unsigned __int8 v138 = v45;
    uint64_t v144 = v1[37];
    os_log_t loga = (os_log_t)v1[38];
    uint64_t v49 = v1[31];
    uint64_t v152 = v1[56];
    uint64_t v50 = v41;
    uint64_t v51 = *(void *)(v41 + 40);
    uint64_t v134 = v50;
    uint64_t v141 = *(void *)(v50 + 32);
    v1[6] = v141;
    v1[7] = v51;
    v48(v49);
    sub_10005576C();
    swift_bridgeObjectRetain();
    URL.appending<A>(path:directoryHint:)();
    long long v52 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v52(v49, v47);
    v1[8] = v141;
    v1[9] = v51;
    unint64_t v137 = v48;
    ((void (*)(uint64_t, void, uint64_t))v48)(v49, v154, v47);
    URL.appending<A>(path:directoryHint:)();
    uint64_t v53 = v47;
    uint64_t v54 = v52;
    v52(v49, v53);
    swift_bridgeObjectRelease();
    uint64_t v55 = v152;
    sub_100009374((uint64_t)loga, v144, v138);
    uint64_t v56 = *(void (**)(void, uint64_t))(v139 + 8);
    v153 = v56;
    if (v55)
    {
      uint64_t v57 = v1[38];
      uint64_t v151 = v1[39];
      uint64_t v58 = v1[35];
      uint64_t v155 = v1[34];
      uint64_t v60 = v1[32];
      uint64_t v59 = v1[33];
      uint64_t v61 = v1[17];
      v153(v1[37], v60);
      v153(v57, v60);
      swift_bridgeObjectRelease();
      static Log.default.getter();
      os_log_type_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 16);
      v62(v58, v151, v60);
      v62(v155, v61, v60);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v63 = Logger.logObject.getter();
      os_log_type_t v64 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v63, v64))
      {
        os_log_type_t v142 = v64;
        log = v63;
        uint64_t v65 = swift_slowAlloc();
        uint64_t v140 = (void *)swift_slowAlloc();
        v160[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v65 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v66 = v1[35];
        uint64_t v67 = v1[32];
        swift_release();
        sub_1000568FC(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
        v1[13] = sub_100007E88(v68, v69, v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v153(v66, v67);
        *(_WORD *)(v65 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v70 = v159[34];
        uint64_t v71 = v159[32];
        swift_release();
        uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
        v159[14] = sub_100007E88(v72, v73, v160);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        v153(v70, v71);
        *(_WORD *)(v65 + 22) = 2112;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v1 = v159;
        uint64_t v75 = v159[24];
        uint64_t v74 = v159[25];
        uint64_t v76 = v159[23];
        swift_errorRetain();
        swift_release();
        uint64_t v77 = _swift_stdlib_bridgeErrorToNSError();
        v159[15] = v77;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v140 = v77;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v142, "MAD: cannot copy results from %s to %s, error == %@", (uint8_t *)v65, 0x20u);
        sub_100005CB0(qword_1000F2278);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
      }
      else
      {
        uint64_t v121 = v1[34];
        uint64_t v122 = v1[32];
        uint64_t v124 = v1[24];
        uint64_t v123 = v1[25];
        uint64_t v125 = v1[23];
        v153(v1[35], v122);
        v153(v121, v122);
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(uint64_t, uint64_t))(v124 + 8))(v123, v125);
      }
      v126 = (void *)v1[55];
      uint64_t v128 = v1[51];
      unint64_t v127 = v1[52];
      uint64_t v129 = (void *)v1[48];
      uint64_t v130 = v1[42];
      uint64_t v131 = v1[39];
      uint64_t v132 = v1[32];
      sub_1000556B4();
      swift_allocError();
      *uint64_t v133 = 5;
      swift_willThrow();

      sub_100005C58(v128, v127);
      swift_errorRelease();
      v153(v131, v132);
      uint64_t v104 = v130;
LABEL_63:
      sub_100016B90(v104, &qword_1000F2C50);
LABEL_6:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      os_log_type_t v14 = (uint64_t (*)(void))v159[1];
      return v14();
    }
    uint64_t v136 = v54;
    uint64_t v105 = v1[38];
    uint64_t v106 = v1[32];
    v56(v1[37], v106);
    v56(v105, v106);
    uint64_t v107 = v135 - 1;
    if (v135 != 1)
    {
      unint64_t v108 = (uint64_t *)(v134 + 56);
      do
      {
        uint64_t v143 = v107;
        uint64_t v146 = v1[37];
        uint64_t v109 = v1[31];
        uint64_t v110 = v1[29];
        os_log_t logc = (os_log_t)v1[38];
        uint64_t v112 = *(v108 - 1);
        uint64_t v111 = *v108;
        v159[6] = v112;
        v159[7] = v111;
        ((void (*)(uint64_t, void, uint64_t))v137)(v109, v154, v110);
        swift_bridgeObjectRetain();
        URL.appending<A>(path:directoryHint:)();
        v136(v109, v110);
        v159[8] = v112;
        uint64_t v1 = v159;
        v159[9] = v111;
        ((void (*)(uint64_t, void, uint64_t))v137)(v109, v154, v110);
        URL.appending<A>(path:directoryHint:)();
        v136(v109, v110);
        swift_bridgeObjectRelease();
        sub_100009374((uint64_t)logc, v146, v138);
        v108 += 2;
        uint64_t v113 = v159[38];
        uint64_t v114 = v159[32];
        v153(v1[37], v1[32]);
        v153(v113, v114);
        uint64_t v107 = v143 - 1;
      }
      while (v143 != 1);
    }
    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v92 = v1[56];
  }
  uint64_t v115 = v1[39];
  swift_bridgeObjectRelease();
  sub_100009170(v115, 1);
  uint64_t v116 = v1[51];
  unint64_t v117 = v1[52];

  sub_100005C58(v116, v117);
  if (v92) {
    swift_errorRelease();
  }
  uint64_t v118 = v1[42];
  (*(void (**)(void, void))(v159[33] + 8))(v159[39], v159[32]);
  sub_100016B90(v118, &qword_1000F2C50);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_t v119 = (uint64_t (*)(uint64_t))v159[1];
  uint64_t v120 = v159[55];
  return v119(v120);
}

uint64_t sub_100044BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 464) = a1;
  *(void *)(v4 + 472) = a2;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 376);
  uint64_t v6 = *(void *)(v3 + 368);
  return _swift_task_switch(sub_100044D2C, v6, v5);
}

uint64_t sub_100044D2C()
{
  uint64_t v124 = v0;
  swift_release();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [*(id *)(v0 + 440) setAccessibilityDescription:v1];

  id v2 = [self defaultManager];
  URL.init(fileURLWithPath:)();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 96) = 0;
  uint64_t v122 = v2;
  id v4 = [v2 contentsOfDirectoryAtPath:v3 error:v0 + 96];

  uint64_t v5 = *(void **)(v0 + 96);
  if (!v4)
  {
    uint64_t v46 = *(void *)(v0 + 312);
    uint64_t v47 = *(void *)(v0 + 288);
    uint64_t v48 = *(void *)(v0 + 256);
    uint64_t v49 = *(void *)(v0 + 264);
    id v50 = v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
    static Log.default.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v47, v46, v48);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      v123[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v54 = *(void *)(v0 + 288);
      uint64_t v55 = *(void *)(v0 + 256);
      uint64_t v56 = *(void *)(v0 + 264);
      uint64_t v57 = *(void *)(v0 + 192);
      uint64_t v111 = *(void *)(v0 + 184);
      os_log_t logb = *(os_log_t *)(v0 + 224);
      swift_release();
      sub_1000568FC(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 80) = sub_100007E88(v58, v59, v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
      v121(v54, v55);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "MAD cannot list content of %s", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(os_log_t, uint64_t))(v57 + 8))(logb, v111);
    }
    else
    {
      uint64_t v60 = *(void *)(v0 + 224);
      uint64_t v61 = *(void *)(v0 + 184);
      uint64_t v62 = *(void *)(v0 + 192);
      uint64_t v121 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 264) + 8);
      v121(*(void *)(v0 + 288), *(void *)(v0 + 256));

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60, v61);
    }
    uint64_t v63 = *(void **)(v0 + 440);
    uint64_t v65 = *(void *)(v0 + 408);
    unint64_t v64 = *(void *)(v0 + 416);
    uint64_t v66 = *(void **)(v0 + 384);
    uint64_t v67 = *(void *)(v0 + 336);
    uint64_t v68 = *(void *)(v0 + 312);
    uint64_t v69 = *(void *)(v0 + 256);
    sub_1000556B4();
    swift_allocError();
    unsigned char *v70 = 4;
    swift_willThrow();

    sub_100005C58(v65, v64);
    v121(v68, v69);
    goto LABEL_30;
  }
  uint64_t v6 = *(void *)(v0 + 144);
  uint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v8 = v5;

  if (*(void *)(v6 + 16) && (unint64_t v9 = sub_1000509A0(0xD000000000000014, 0x80000001000D57C0), (v10 & 1) != 0))
  {
    if (*(unsigned char *)(*(void *)(*(void *)(v0 + 144) + 56) + v9))
    {
      char v11 = 1;
      uint64_t v12 = *(void *)(v7 + 16);
      if (!v12)
      {
LABEL_6:
        uint64_t v13 = *(void *)(v0 + 448);
LABEL_36:
        uint64_t v94 = *(void *)(v0 + 312);
        swift_bridgeObjectRelease();
        sub_100009170(v94, 1);
        uint64_t v95 = *(void *)(v0 + 408);
        unint64_t v96 = *(void *)(v0 + 416);

        sub_100005C58(v95, v96);
        if (v13) {
          swift_errorRelease();
        }
        uint64_t v97 = *(void *)(v0 + 336);
        (*(void (**)(void, void))(*(void *)(v0 + 264) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 256));
        sub_100016B90(v97, &qword_1000F2C50);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v98 = *(uint64_t (**)(uint64_t))(v0 + 8);
        uint64_t v99 = *(void *)(v0 + 440);
        return v98(v99);
      }
      goto LABEL_11;
    }
  }
  else
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
  }
  char v11 = 2;
  uint64_t v12 = *(void *)(v7 + 16);
  if (!v12) {
    goto LABEL_6;
  }
LABEL_11:
  uint64_t v107 = v12;
  uint64_t v104 = *(void *)(v0 + 264);
  unsigned int v102 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v15 = *(void *)(v0 + 232);
  uint64_t v14 = *(void *)(v0 + 240);
  id v16 = *(void (**)(uint64_t))(v14 + 104);
  uint64_t v118 = *(void *)(v0 + 448);
  uint64_t v110 = *(void *)(v0 + 296);
  os_log_t loga = *(os_log_t *)(v0 + 304);
  unsigned __int8 v103 = v11;
  uint64_t v17 = *(void *)(v0 + 248);
  uint64_t v100 = v7;
  uint64_t v20 = v7 + 32;
  uint64_t v19 = *(void *)(v7 + 32);
  uint64_t v18 = *(void *)(v20 + 8);
  *(void *)(v0 + 48) = v19;
  *(void *)(v0 + 56) = v18;
  v16(v17);
  sub_10005576C();
  swift_bridgeObjectRetain();
  URL.appending<A>(path:directoryHint:)();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v21(v17, v15);
  *(void *)(v0 + 64) = v19;
  *(void *)(v0 + 72) = v18;
  ((void (*)(uint64_t, void, uint64_t))v16)(v17, v102, v15);
  uint64_t v22 = v21;
  URL.appending<A>(path:directoryHint:)();
  v21(v17, v15);
  swift_bridgeObjectRelease();
  uint64_t v23 = v118;
  sub_100009374((uint64_t)loga, v110, v103);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  os_log_t v119 = v24;
  if (!v23)
  {
    uint64_t v101 = v22;
    uint64_t v71 = *(void *)(v0 + 304);
    uint64_t v72 = *(void *)(v0 + 256);
    v24(*(void *)(v0 + 296), v72);
    v24(v71, v72);
    uint64_t v73 = v107 - 1;
    if (v107 == 1)
    {
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v88 = (uint64_t *)(v100 + 56);
      do
      {
        uint64_t v112 = *(void *)(v0 + 296);
        os_log_t logc = *(os_log_t *)(v0 + 304);
        uint64_t v89 = *(void *)(v0 + 248);
        uint64_t v90 = *(void *)(v0 + 232);
        uint64_t v91 = *v88;
        uint64_t v106 = v73;
        uint64_t v109 = *(v88 - 1);
        *(void *)(v0 + 48) = v109;
        *(void *)(v0 + 56) = v91;
        ((void (*)(uint64_t, void, uint64_t))v16)(v89, v102, v90);
        swift_bridgeObjectRetain();
        URL.appending<A>(path:directoryHint:)();
        v101(v89, v90);
        *(void *)(v0 + 64) = v109;
        *(void *)(v0 + 72) = v91;
        ((void (*)(uint64_t, void, uint64_t))v16)(v89, v102, v90);
        URL.appending<A>(path:directoryHint:)();
        v101(v89, v90);
        swift_bridgeObjectRelease();
        sub_100009374((uint64_t)logc, v112, v103);
        v88 += 2;
        uint64_t v92 = *(void *)(v0 + 304);
        uint64_t v93 = *(void *)(v0 + 256);
        v119(*(void *)(v0 + 296), v93);
        v119(v92, v93);
        uint64_t v73 = v106 - 1;
      }
      while (v106 != 1);
      uint64_t v13 = 0;
    }
    goto LABEL_36;
  }
  uint64_t v25 = *(void *)(v0 + 304);
  uint64_t v117 = *(void *)(v0 + 312);
  uint64_t v26 = *(void *)(v0 + 280);
  uint64_t v120 = *(void *)(v0 + 272);
  uint64_t v27 = *(void *)(v0 + 256);
  uint64_t v28 = *(void *)(v0 + 264);
  uint64_t v29 = *(void *)(v0 + 136);
  v24(*(void *)(v0 + 296), v27);
  v24(v25, v27);
  swift_bridgeObjectRelease();
  static Log.default.getter();
  id v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  v30(v26, v117, v27);
  v30(v120, v29, v27);
  swift_errorRetain();
  swift_errorRetain();
  NSString v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    os_log_type_t v108 = v32;
    log = v31;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v105 = (void *)swift_slowAlloc();
    v123[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v34 = *(void *)(v0 + 280);
    uint64_t v35 = *(void *)(v0 + 256);
    swift_release();
    sub_1000568FC(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 104) = sub_100007E88(v36, v37, v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v119(v34, v35);
    *(_WORD *)(v33 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v38 = *(void *)(v0 + 272);
    uint64_t v39 = *(void *)(v0 + 256);
    swift_release();
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 112) = sub_100007E88(v40, v41, v123);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v119(v38, v39);
    *(_WORD *)(v33 + 22) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v43 = *(void *)(v0 + 192);
    uint64_t v42 = *(void *)(v0 + 200);
    uint64_t v44 = *(void *)(v0 + 184);
    swift_errorRetain();
    swift_release();
    uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 120) = v45;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v105 = v45;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v108, "MAD: cannot copy results from %s to %s, error == %@", (uint8_t *)v33, 0x20u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
  }
  else
  {
    uint64_t v74 = *(void *)(v0 + 272);
    uint64_t v75 = *(void *)(v0 + 256);
    uint64_t v77 = *(void *)(v0 + 192);
    uint64_t v76 = *(void *)(v0 + 200);
    uint64_t v78 = *(void *)(v0 + 184);
    v119(*(void *)(v0 + 280), v75);
    v119(v74, v75);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v76, v78);
  }
  uint64_t v79 = *(void **)(v0 + 440);
  uint64_t v81 = *(void *)(v0 + 408);
  unint64_t v80 = *(void *)(v0 + 416);
  id v82 = *(void **)(v0 + 384);
  uint64_t v67 = *(void *)(v0 + 336);
  uint64_t v83 = *(void *)(v0 + 312);
  uint64_t v84 = *(void *)(v0 + 256);
  sub_1000556B4();
  swift_allocError();
  unsigned char *v85 = 5;
  swift_willThrow();

  sub_100005C58(v81, v80);
  swift_errorRelease();
  v119(v83, v84);
LABEL_30:
  sub_100016B90(v67, &qword_1000F2C50);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v86 = *(uint64_t (**)(void))(v0 + 8);
  return v86();
}

uint64_t sub_100045CE0()
{
  NSString v1 = *(void **)(v0 + 384);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100045E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[7] = a3;
  v4[8] = a4;
  v4[5] = a1;
  v4[6] = a2;
  uint64_t v5 = sub_100005CB0(&qword_1000F2C30);
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2858);
  v4[12] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2C38);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  v4[26] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[27] = v8;
  v4[28] = *(void *)(v8 - 8);
  v4[29] = swift_task_alloc();
  v4[30] = swift_task_alloc();
  return _swift_task_switch(sub_1000460F4, 0, 0);
}

uint64_t sub_1000460F4()
{
  NSString v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *NSString v1 = v0;
  v1[1] = sub_100046190;
  uint64_t v2 = *(void *)(v0 + 64);
  return sub_100057B88(v2);
}

uint64_t sub_100046190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[32] = a1;
  v4[33] = a2;
  swift_task_dealloc();
  if (v2)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_100046394, 0, 0);
  }
}

uint64_t sub_100046394()
{
  uint64_t v101 = v0;
  static Log.photos.getter();
  swift_bridgeObjectRetain_n();
  NSString v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v91 = v2;
    uint64_t v3 = *(void *)(v0 + 256);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v99 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 134218242;
    int64_t v5 = *(void *)(v3 + 16);
    *(void *)(v0 + 24) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 12) = 2080;
    if (v5)
    {
      uint64_t v89 = v4;
      uint64_t v90 = v1;
      uint64_t v6 = *(void *)(v0 + 256);
      uint64_t v7 = *(void *)(v0 + 168);
      uint64_t v8 = *(void *)(v0 + 128);
      uint64_t v100 = &_swiftEmptyArrayStorage;
      sub_100054824(0, v5, 0);
      unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      v8 += 16;
      uint64_t v10 = v6 + ((*(unsigned __int8 *)(v8 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64));
      uint64_t v92 = *(void *)(v8 + 56);
      uint64_t v94 = v9;
      char v11 = (void (**)(uint64_t, uint64_t))(v8 - 8);
      uint64_t v12 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = *(void *)(v0 + 152);
        uint64_t v14 = *(void *)(v0 + 120);
        v94(v13, v10, v14);
        StoredPhoto.localIdentifier.getter();
        (*v11)(v13, v14);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100054824(0, v12[2] + 1, 1);
          uint64_t v12 = v100;
        }
        unint64_t v16 = v12[2];
        unint64_t v15 = v12[3];
        if (v16 >= v15 >> 1)
        {
          sub_100054824(v15 > 1, v16 + 1, 1);
          uint64_t v12 = v100;
        }
        uint64_t v17 = *(void *)(v0 + 208);
        uint64_t v18 = *(void *)(v0 + 160);
        void v12[2] = v16 + 1;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, v17, v18);
        uint64_t v100 = v12;
        v10 += v92;
        --v5;
      }
      while (v5);
      uint64_t v4 = v89;
      NSString v1 = v90;
    }
    uint64_t v96 = *(void *)(v0 + 240);
    uint64_t v24 = *(void *)(v0 + 216);
    uint64_t v23 = *(void *)(v0 + 224);
    uint64_t v25 = Array.description.getter();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 32) = sub_100007E88(v25, v27, &v99);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v91, "Had %ld cached photos: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
    v22(v96, v24);
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 240);
    uint64_t v21 = *(void *)(v0 + 216);
    uint64_t v20 = *(void *)(v0 + 224);
    swift_bridgeObjectRelease_n();

    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
    v22(v19, v21);
  }
  *(void *)(v0 + 272) = v22;
  uint64_t v28 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v28 + 16);
  *(void *)(v0 + 280) = v29;
  if (v29)
  {
    uint64_t v30 = *(void *)(v0 + 120);
    uint64_t v31 = *(void *)(v0 + 128);
    os_log_type_t v32 = *(void (**)(void, unint64_t, uint64_t))(v31 + 16);
    v31 += 16;
    uint64_t v33 = *(int **)(v0 + 40);
    int v34 = *(_DWORD *)(v31 + 64);
    *(_DWORD *)(v0 + 408) = v34;
    *(void *)(v0 + 288) = *(void *)(v31 + 56);
    *(void *)(v0 + 296) = v32;
    *(void *)(v0 + 304) = 0;
    v32(*(void *)(v0 + 144), v28 + ((v34 + 32) & ~(unint64_t)v34), v30);
    uint64_t v97 = (uint64_t (*)(uint64_t))((char *)v33 + *v33);
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_100046D9C;
    uint64_t v36 = *(void *)(v0 + 144);
    return v97(v36);
  }
  uint64_t v38 = *(void *)(v0 + 40);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 328) = v38;
  uint64_t v39 = *(void *)(v0 + 168);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  uint64_t v41 = *(void *)(*(void *)(v0 + 264) + 16);
  *(void *)(v0 + 336) = v41;
  uint64_t result = swift_bridgeObjectRetain();
  if (v41)
  {
    if (!*(void *)(result + 16))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v42 = *(void *)(v0 + 160);
    uint64_t v43 = *(void *)(v0 + 96);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v39 + 16))(v43, result + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80)), v42);
    uint64_t v44 = 1;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v43, 0, 1, v42);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v43, 1, v42) != 1)
    {
      uint64_t v45 = *(void *)(v0 + 192);
      uint64_t v46 = *(void *)(v0 + 160);
      uint64_t v47 = *(void *)(v0 + 88);
      uint64_t v48 = *(void *)(v0 + 72);
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168) + 32);
      v49(v45, *(void *)(v0 + 96), v46);
      uint64_t v50 = v47 + *(int *)(v48 + 48);
      v49(v50, v45, v46);
      uint64_t v51 = *(void *)(v0 + 160);
      os_log_type_t v52 = *(void **)(v0 + 104);
      uint64_t v53 = *(void *)(v0 + 72);
      uint64_t v54 = *(void *)(v0 + 80);
      uint64_t v55 = (char *)v52 + *(int *)(v53 + 48);
      *os_log_type_t v52 = 0;
      v49((uint64_t)v55, v50, v51);
      uint64_t v56 = 1;
      (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v52, 0, 1, v53);
      uint64_t v44 = 1;
      goto LABEL_22;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v39 + 56))(*(void *)(v0 + 96), 1, 1, *(void *)(v0 + 160));
    uint64_t v44 = *(void *)(v0 + 336);
  }
  uint64_t v57 = *(void *)(v0 + 104);
  uint64_t v58 = *(void *)(v0 + 72);
  uint64_t v59 = *(void *)(v0 + 80);
  sub_100016B90(*(void *)(v0 + 96), &qword_1000F2858);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56))(v57, 1, 1, v58);
  uint64_t v56 = 0;
LABEL_22:
  *(void *)(v0 + 344) = v56;
  *(void *)(v0 + 352) = v44;
  uint64_t v60 = *(void *)(v0 + 112);
  uint64_t v61 = *(void *)(v0 + 72);
  uint64_t v62 = *(void *)(v0 + 80);
  sub_100055708(*(void *)(v0 + 104), v60, &qword_1000F2C38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61) == 1)
  {
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v63 = *(uint64_t (**)(void))(v0 + 8);
    return v63();
  }
  uint64_t v65 = *(void *)(v0 + 176);
  uint64_t v64 = *(void *)(v0 + 184);
  uint64_t v66 = *(void *)(v0 + 160);
  uint64_t v67 = *(void *)(v0 + 168);
  uint64_t v68 = *(char **)(v0 + 112);
  uint64_t v69 = *(void *)v68;
  (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v64, &v68[*(int *)(*(void *)(v0 + 72) + 48)], v66);
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v65, v64, v66);
  swift_bridgeObjectRetain();
  uint64_t v70 = Logger.logObject.getter();
  os_log_type_t v71 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v70, v71))
  {
    uint64_t v81 = *(void *)(v0 + 232);
    uint64_t v82 = *(void *)(v0 + 216);
    uint64_t v84 = *(void *)(v0 + 168);
    uint64_t v83 = *(void *)(v0 + 176);
    uint64_t v85 = *(void *)(v0 + 160);
    swift_bridgeObjectRelease();
    unint64_t v80 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
    v80(v83, v85);

    v40(v81, v82);
    goto LABEL_30;
  }
  uint64_t v72 = swift_slowAlloc();
  uint64_t result = swift_slowAlloc();
  *(void *)(v0 + 16) = result;
  *(_DWORD *)uint64_t v72 = 134218498;
  uint64_t v73 = v69 + 1;
  if (__OFADD__(v69, 1))
  {
LABEL_34:
    __break(1u);
    return result;
  }
  uint64_t v74 = *(void *)(v0 + 264);
  uint64_t v95 = *(void *)(v0 + 232);
  uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  uint64_t v76 = *(void *)(v0 + 168);
  uint64_t v75 = *(void *)(v0 + 176);
  uint64_t v77 = *(void *)(v0 + 160);
  uint64_t v93 = *(void *)(v0 + 216);
  *(void *)(v72 + 4) = v73;
  *(_WORD *)(v72 + 12) = 2048;
  *(void *)(v72 + 14) = *(void *)(v74 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(v72 + 22) = 2080;
  sub_1000568FC(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v72 + 24) = sub_100007E88(v78, v79, (uint64_t *)(v0 + 16));
  swift_bridgeObjectRelease();
  unint64_t v80 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v80(v75, v77);
  _os_log_impl((void *)&_mh_execute_header, v70, v71, "Processing uncached photo (%ld/%ld): %s", (uint8_t *)v72, 0x20u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  v98(v95, v93);
  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
LABEL_30:
  *(void *)(v0 + 360) = v80;
  *(void *)(v0 + 368) = v40;
  uint64_t v86 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v86;
  void *v86 = v0;
  v86[1] = sub_100047614;
  uint64_t v87 = *(void *)(v0 + 184);
  uint64_t v88 = *(void *)(v0 + 136);
  return sub_1000482F0(v88, v87);
}

uint64_t sub_100046D9C()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v2 = sub_100047F28;
  }
  else
  {
    os_log_type_t v2 = sub_100046EC0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100046EC0()
{
  uint64_t v1 = *(void *)(v0 + 280);
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 120);
  uint64_t v7 = *(void *)(v0 + 128);
  uint64_t v8 = *(void *)(v0 + 304) + 1;
  StoredPhoto.localIdentifier.getter();
  sub_1000626E0(v2, 0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  if (v8 == v1)
  {
    swift_bridgeObjectRelease();
    *(void *)(v0 + 328) = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    uint64_t v11 = *(void *)(*(void *)(v0 + 264) + 16);
    *(void *)(v0 + 336) = v11;
    uint64_t result = swift_bridgeObjectRetain();
    if (v11)
    {
      if (!*(void *)(result + 16))
      {
        __break(1u);
        goto LABEL_23;
      }
      uint64_t v13 = *(void *)(v0 + 160);
      uint64_t v14 = *(void *)(v0 + 96);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v14, result + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v13);
      uint64_t v15 = 1;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v13);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v13) != 1)
      {
        uint64_t v16 = *(void *)(v0 + 192);
        uint64_t v17 = *(void *)(v0 + 160);
        uint64_t v18 = *(void *)(v0 + 88);
        uint64_t v19 = *(void *)(v0 + 72);
        uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 168) + 32);
        v20(v16, *(void *)(v0 + 96), v17);
        uint64_t v21 = v18 + *(int *)(v19 + 48);
        v20(v21, v16, v17);
        uint64_t v22 = *(void *)(v0 + 160);
        uint64_t v23 = *(void **)(v0 + 104);
        uint64_t v24 = *(void *)(v0 + 72);
        uint64_t v25 = *(void *)(v0 + 80);
        unint64_t v26 = (char *)v23 + *(int *)(v24 + 48);
        *uint64_t v23 = 0;
        v20((uint64_t)v26, v21, v22);
        uint64_t v27 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
        uint64_t v15 = 1;
LABEL_11:
        *(void *)(v0 + 344) = v27;
        *(void *)(v0 + 352) = v15;
        uint64_t v36 = *(void *)(v0 + 112);
        uint64_t v37 = *(void *)(v0 + 72);
        uint64_t v38 = *(void *)(v0 + 80);
        sub_100055708(*(void *)(v0 + 104), v36, &qword_1000F2C38);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37) == 1)
        {
          swift_bridgeObjectRelease_n();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
          return v39();
        }
        uint64_t v41 = *(void *)(v0 + 176);
        uint64_t v40 = *(void *)(v0 + 184);
        uint64_t v42 = *(void *)(v0 + 160);
        uint64_t v43 = *(void *)(v0 + 168);
        uint64_t v44 = *(char **)(v0 + 112);
        uint64_t v45 = *(void *)v44;
        (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v40, &v44[*(int *)(*(void *)(v0 + 72) + 48)], v42);
        static Log.photos.getter();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16))(v41, v40, v42);
        swift_bridgeObjectRetain();
        uint64_t v46 = Logger.logObject.getter();
        os_log_type_t v47 = static os_log_type_t.default.getter();
        if (!os_log_type_enabled(v46, v47))
        {
          uint64_t v57 = *(void *)(v0 + 232);
          uint64_t v58 = *(void *)(v0 + 216);
          uint64_t v60 = *(void *)(v0 + 168);
          uint64_t v59 = *(void *)(v0 + 176);
          uint64_t v61 = *(void *)(v0 + 160);
          swift_bridgeObjectRelease();
          uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
          v56(v59, v61);

          v10(v57, v58);
          goto LABEL_19;
        }
        uint64_t v48 = swift_slowAlloc();
        uint64_t result = swift_slowAlloc();
        *(void *)(v0 + 16) = result;
        *(_DWORD *)uint64_t v48 = 134218498;
        uint64_t v49 = v45 + 1;
        if (!__OFADD__(v45, 1))
        {
          uint64_t v50 = *(void *)(v0 + 264);
          uint64_t v66 = *(void *)(v0 + 232);
          uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
          uint64_t v52 = *(void *)(v0 + 168);
          uint64_t v51 = *(void *)(v0 + 176);
          uint64_t v53 = *(void *)(v0 + 160);
          uint64_t v65 = *(void *)(v0 + 216);
          *(void *)(v48 + 4) = v49;
          *(_WORD *)(v48 + 12) = 2048;
          *(void *)(v48 + 14) = *(void *)(v50 + 16);
          swift_bridgeObjectRelease();
          *(_WORD *)(v48 + 22) = 2080;
          sub_1000568FC(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v54 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v48 + 24) = sub_100007E88(v54, v55, (uint64_t *)(v0 + 16));
          swift_bridgeObjectRelease();
          uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
          v56(v51, v53);
          _os_log_impl((void *)&_mh_execute_header, v46, v47, "Processing uncached photo (%ld/%ld): %s", (uint8_t *)v48, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v68(v66, v65);
          uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
LABEL_19:
          *(void *)(v0 + 360) = v56;
          *(void *)(v0 + 368) = v10;
          uint64_t v62 = (void *)swift_task_alloc();
          *(void *)(v0 + 376) = v62;
          *uint64_t v62 = v0;
          v62[1] = sub_100047614;
          uint64_t v63 = *(void *)(v0 + 184);
          uint64_t v64 = *(void *)(v0 + 136);
          return sub_1000482F0(v64, v63);
        }
LABEL_23:
        __break(1u);
        return result;
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(v9 + 56))(*(void *)(v0 + 96), 1, 1, *(void *)(v0 + 160));
      uint64_t v15 = *(void *)(v0 + 336);
    }
    uint64_t v33 = *(void *)(v0 + 104);
    uint64_t v34 = *(void *)(v0 + 72);
    uint64_t v35 = *(void *)(v0 + 80);
    sub_100016B90(*(void *)(v0 + 96), &qword_1000F2858);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v33, 1, 1, v34);
    uint64_t v27 = 0;
    goto LABEL_11;
  }
  uint64_t v28 = *(void (**)(void, unint64_t, void))(v0 + 296);
  uint64_t v29 = *(void *)(v0 + 304) + 1;
  *(void *)(v0 + 304) = v29;
  uint64_t v30 = *(int **)(v0 + 40);
  v28(*(void *)(v0 + 144), *(void *)(v0 + 256)+ ((*(unsigned __int8 *)(v0 + 408) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 408))+ *(void *)(v0 + 288) * v29, *(void *)(v0 + 120));
  uint64_t v67 = (uint64_t (*)(uint64_t))((char *)v30 + *v30);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100046D9C;
  uint64_t v32 = *(void *)(v0 + 144);
  return v67(v32);
}

uint64_t sub_100047614()
{
  uint64_t v2 = (void *)*v1;
  v2[48] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease_n();
    return _swift_task_switch(sub_100048060, 0, 0);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(uint64_t))(v2[41] + *(int *)v2[41]);
    uint64_t v3 = (void *)swift_task_alloc();
    v2[49] = v3;
    *uint64_t v3 = v2;
    v3[1] = sub_1000477D8;
    uint64_t v4 = v2[17];
    return v6(v4);
  }
}

uint64_t sub_1000477D8()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v2 = sub_10004819C;
  }
  else
  {
    uint64_t v2 = sub_1000478F8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000478F8()
{
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))v0[45];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  uint64_t result = v1(v2, v3);
  uint64_t v5 = (void (*)(void, void))v0[46];
  uint64_t v7 = v0[43];
  unint64_t v6 = v0[44];
  if (v6 == v0[42])
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[21] + 56))(v0[12], 1, 1, v0[20]);
    unint64_t v8 = v0[42];
LABEL_5:
    uint64_t v13 = v0[13];
    uint64_t v14 = v0[9];
    uint64_t v15 = v0[10];
    sub_100016B90(v0[12], &qword_1000F2858);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    goto LABEL_8;
  }
  uint64_t v9 = v0[33];
  if (v6 >= *(void *)(v9 + 16))
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = v0[20];
  uint64_t v11 = v0[21];
  uint64_t v12 = v0[12];
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))(v12, v9+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v6, v10);
  unint64_t v8 = v6 + 1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v12, 0, 1, v10);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1) {
    goto LABEL_5;
  }
  uint64_t v58 = v5;
  uint64_t v16 = v0[24];
  uint64_t v17 = v0[20];
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[9];
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[21] + 32);
  v20(v16, v0[12], v17);
  uint64_t v21 = v18 + *(int *)(v19 + 48);
  uint64_t result = v20(v21, v16, v17);
  if (__OFADD__(v7, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v22 = v0[20];
  uint64_t v23 = (void *)v0[13];
  uint64_t v24 = v0[9];
  uint64_t v25 = v0[10];
  unint64_t v26 = (char *)v23 + *(int *)(v24 + 48);
  *uint64_t v23 = v7;
  v20((uint64_t)v26, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v23, 0, 1, v24);
  ++v7;
  uint64_t v5 = v58;
LABEL_8:
  v0[43] = v7;
  v0[44] = v8;
  uint64_t v27 = v0[14];
  uint64_t v28 = v0[9];
  uint64_t v29 = v0[10];
  sub_100055708(v0[13], v27, &qword_1000F2C38);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    return v30();
  }
  uint64_t v32 = v0[22];
  uint64_t v31 = v0[23];
  uint64_t v33 = v0[20];
  uint64_t v34 = v0[21];
  uint64_t v35 = (char *)v0[14];
  uint64_t v36 = *(void *)v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v31, &v35[*(int *)(v0[9] + 48)], v33);
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v32, v31, v33);
  swift_bridgeObjectRetain();
  uint64_t v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v37, v38))
  {
    uint64_t v48 = v0[29];
    uint64_t v49 = v0[27];
    uint64_t v51 = v0[21];
    uint64_t v50 = v0[22];
    uint64_t v52 = v0[20];
    swift_bridgeObjectRelease();
    os_log_type_t v47 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
    v47(v50, v52);

    v5(v48, v49);
    goto LABEL_16;
  }
  uint64_t v39 = swift_slowAlloc();
  uint64_t result = swift_slowAlloc();
  v0[2] = result;
  *(_DWORD *)uint64_t v39 = 134218498;
  uint64_t v40 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v41 = v0[33];
  uint64_t v57 = v0[29];
  uint64_t v59 = (void (*)(uint64_t, uint64_t))v0[34];
  uint64_t v43 = v0[21];
  uint64_t v42 = v0[22];
  uint64_t v44 = v0[20];
  uint64_t v56 = v0[27];
  *(void *)(v39 + 4) = v40;
  *(_WORD *)(v39 + 12) = 2048;
  *(void *)(v39 + 14) = *(void *)(v41 + 16);
  swift_bridgeObjectRelease();
  *(_WORD *)(v39 + 22) = 2080;
  sub_1000568FC(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v45 = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v39 + 24) = sub_100007E88(v45, v46, v0 + 2);
  swift_bridgeObjectRelease();
  os_log_type_t v47 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v47(v42, v44);
  _os_log_impl((void *)&_mh_execute_header, v37, v38, "Processing uncached photo (%ld/%ld): %s", (uint8_t *)v39, 0x20u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  v59(v57, v56);
  uint64_t v5 = (void (*)(void, void))v0[34];
LABEL_16:
  v0[45] = v47;
  v0[46] = v5;
  uint64_t v53 = (void *)swift_task_alloc();
  v0[47] = v53;
  *uint64_t v53 = v0;
  v53[1] = sub_100047614;
  uint64_t v54 = v0[23];
  uint64_t v55 = v0[17];
  return sub_1000482F0(v55, v54);
}

uint64_t sub_100047F28()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[18], v0[15]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100048060()
{
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 184), *(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004819C()
{
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 136), *(void *)(v0 + 120));
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 184), *(void *)(v0 + 160));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000482F0(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for StoredPhoto();
  v3[5] = v4;
  v3[6] = *(void *)(v4 - 8);
  v3[7] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[8] = v5;
  v3[9] = *(void *)(v5 - 8);
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  type metadata accessor for CommunicationActor();
  v3[12] = static CommunicationActor.shared.getter();
  sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[13] = v7;
  v3[14] = v6;
  return _swift_task_switch(sub_100048484, v7, v6);
}

uint64_t sub_100048484()
{
  uint64_t v1 = v0[11];
  v0[15] = *(void *)(v0[4] + 16);
  sub_1000572C4(v1);
  unint64_t v2 = sub_1000408A0((uint64_t)&_swiftEmptyArrayStorage);
  v0[16] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1000485B4;
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[3];
  return sub_100042DE4(v5, v4, v2);
}

uint64_t sub_1000485B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 144) = a1;
  *(void *)(v4 + 152) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v3 + 112);
  uint64_t v6 = *(void *)(v3 + 104);
  if (v1) {
    uint64_t v7 = sub_100048A8C;
  }
  else {
    uint64_t v7 = sub_100048714;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_100048714()
{
  unint64_t v2 = (void *)v0[18];
  uint64_t v1 = v0[19];
  (*(void (**)(void, void, void))(v0[9] + 16))(v0[10], v0[11], v0[8]);
  id v3 = v2;
  StoredPhoto.init(pfcStoredPhoto:baseURL:)();
  if (v1)
  {
    uint64_t v4 = (void *)v0[18];
    (*(void (**)(void, void))(v0[9] + 8))(v0[11], v0[8]);

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v7 = (void *)swift_task_alloc();
    v0[20] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100048878;
    uint64_t v8 = v0[7];
    uint64_t v9 = v0[2];
    return sub_100057480(v9, v8);
  }
}

uint64_t sub_100048878()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_100048B30;
  }
  else {
    uint64_t v5 = sub_1000489B4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000489B4()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100048A8C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100048B30()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[5];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_100048C0C(uint64_t a1, void *a2, void *a3)
{
  id v18 = a2;
  uint64_t v5 = sub_100005CB0(&qword_1000F2CC0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  sub_100005CB0(&qword_1000F2750);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1000D7AC0;
  *(void *)(v8 + 32) = a3;
  aBlock[0] = v8;
  specialized Array._endMutation()();
  sub_100019380(0, (unint64_t *)&qword_1000F2840);
  id v9 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_100048EB4(v11);
  swift_bridgeObjectRelease();
  Class v12 = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v14 + v13, (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v14 + ((v7 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = v9;
  aBlock[4] = sub_100055C98;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004A564;
  aBlock[3] = &unk_1000EE480;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v9;
  swift_release();
  [v18 requestAnalysisTypes:0x400000000000 forAssets:isa withOptions:v12 progressHandler:0 andCompletionHandler:v15];
  _Block_release(v15);
}

uint64_t sub_100048EB4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_100005CB0(&qword_1000F2CE0);
    uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = (char *)(v2 + 8);
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    uint64_t v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_100055BD4(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_100055BD4(v35, v36);
    sub_100055BD4(v36, &v32);
    uint64_t result = AnyHashable._rawHashValue(seed:)(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_100055BD4(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_10000E730();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_100049260(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 | a2)
  {
    if (a1)
    {
      unint64_t v22 = a1;
      swift_bridgeObjectRetain();
      sub_10004949C((uint64_t *)&v22, a4, &v21, &v23);
      swift_bridgeObjectRelease();
      uint64_t v17 = v23;
      a1 = v24;
      uint64_t v19 = v25;
      uint64_t v18 = v26;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v17 = 0;
    }
    uint64_t v23 = v17;
    unint64_t v24 = a1;
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    unint64_t v22 = a2;
    sub_100005CB0(&qword_1000F2CC0);
    CheckedContinuation.resume<>(success:error:)();
    return sub_100055D48(v17, a1, v19, v18);
  }
  else
  {
    static Log.default.getter();
    unint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v11, v12))
    {
      int64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "MAD Returned nil analysis and error.", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    sub_1000556B4();
    uint64_t v14 = swift_allocError();
    unsigned char *v15 = 6;
    uint64_t v23 = v14;
    sub_100005CB0(&qword_1000F2CC0);
    return CheckedContinuation.resume(throwing:)();
  }
}

uint64_t sub_10004949C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v120 = a3;
  id v130 = a2;
  uint64_t v114 = a4;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v116 = (char *)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v113 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v121 = (char *)&v113 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v118 = (char *)&v113 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v123 = (char *)&v113 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v113 - v18;
  uint64_t v20 = *a1;
  static Log.default.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v119 = v5;
  uint64_t v122 = v6;
  uint64_t v117 = v11;
  if (v23)
  {
    unint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v126 = swift_slowAlloc();
    *(_DWORD *)unint64_t v24 = 136315138;
    uint64_t v113 = v24 + 4;
    swift_bridgeObjectRetain();
    uint64_t v115 = (void (*)(char *, uint64_t))((char *)&type metadata for Any + 8);
    uint64_t v25 = Dictionary.description.getter();
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    *(void *)&long long v128 = sub_100007E88(v25, v27, (uint64_t *)&v126);
    uint64_t v5 = v119;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "MAD returned analysis: %s", v24, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v122;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  long long v28 = *(void (**)(char *, uint64_t))(v6 + 8);
  v28(v19, v5);
  id v29 = [v130 localIdentifier];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v32 = v31;

  uint64_t v124 = v30;
  uint64_t v125 = v32;
  AnyHashable.init<A>(_:)();
  long long v33 = v121;
  if (*(void *)(v20 + 16))
  {
    unint64_t v34 = sub_100050A5C((uint64_t)&v126);
    uint64_t v35 = v123;
    if (v36)
    {
      sub_1000090E0(*(void *)(v20 + 56) + 32 * v34, (uint64_t)&v128);
    }
    else
    {
      long long v128 = 0u;
      long long v129 = 0u;
    }
  }
  else
  {
    long long v128 = 0u;
    long long v129 = 0u;
    uint64_t v35 = v123;
  }
  sub_100055D88((uint64_t)&v126);
  if (!*((void *)&v129 + 1))
  {
    sub_100016B90((uint64_t)&v128, &qword_1000F2CC8);
    goto LABEL_15;
  }
  sub_100005CB0(&qword_1000F2CD0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    static Log.default.getter();
    id v42 = v130;
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v43, v44))
    {

      uint64_t v52 = v35;
      goto LABEL_31;
    }
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v126 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315138;
    id v130 = v45 + 4;
    id v46 = [v42 localIdentifier];
    uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v115 = v28;
    uint64_t v48 = v47;
    unint64_t v50 = v49;

    *(void *)&long long v128 = sub_100007E88(v48, v50, (uint64_t *)&v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "MAD no results for %s", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v51 = v123;
LABEL_29:
    v115(v51, v119);
LABEL_32:
    sub_1000556B4();
    uint64_t v68 = swift_allocError();
    unsigned char *v69 = 2;
    uint64_t result = swift_willThrow();
    os_log_type_t v71 = v120;
    goto LABEL_33;
  }
  uint64_t v37 = v124;
  uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v37 + 16) && (unint64_t v40 = sub_1000509A0(v38, v39), (v41 & 1) != 0))
  {
    sub_1000090E0(*(void *)(v37 + 56) + 32 * v40, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v127 + 1))
  {
    swift_bridgeObjectRelease();
    sub_100016B90((uint64_t)&v126, &qword_1000F2CC8);
LABEL_27:
    uint64_t v58 = v118;
    static Log.default.getter();
    id v59 = v130;
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v60, v61))
    {

      uint64_t v52 = v58;
      goto LABEL_31;
    }
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v126 = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315138;
    id v130 = v62 + 4;
    id v63 = [v59 localIdentifier];
    uint64_t v64 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v115 = v28;
    uint64_t v65 = v64;
    unint64_t v67 = v66;

    *(void *)&long long v128 = sub_100007E88(v65, v67, (uint64_t *)&v126);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "MAD no watch face results for %s", v62, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v51 = v118;
    goto LABEL_29;
  }
  sub_100005CB0(&qword_1000F2CD8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!*(void *)(v128 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    static Log.default.getter();
    id v78 = v130;
    unint64_t v79 = Logger.logObject.getter();
    os_log_type_t v80 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 136315138;
      id v130 = v81 + 4;
      id v82 = [v78 localIdentifier];
      uint64_t v83 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v115 = v28;
      uint64_t v84 = v83;
      unint64_t v86 = v85;

      *(void *)&long long v128 = sub_100007E88(v84, v86, (uint64_t *)&v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v79, v80, "MAD no watch face result for %s", v81, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v51 = v121;
      goto LABEL_29;
    }

    uint64_t v52 = v33;
LABEL_31:
    v28(v52, v5);
    goto LABEL_32;
  }
  uint64_t v53 = *(void *)(v128 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v53 + 16) && (unint64_t v56 = sub_1000509A0(v54, v55), (v57 & 1) != 0))
  {
    sub_1000090E0(*(void *)(v53 + 56) + 32 * v56, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v127 + 1))
  {
    swift_bridgeObjectRelease();
    sub_100016B90((uint64_t)&v126, &qword_1000F2CC8);
LABEL_45:
    uint64_t v87 = v117;
    static Log.default.getter();
    swift_bridgeObjectRetain();
    uint64_t v88 = Logger.logObject.getter();
    os_log_type_t v89 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v128 = swift_slowAlloc();
      *(_DWORD *)uint64_t v90 = 136315138;
      uint64_t v91 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v93 = *(void *)(v53 + 16);
      uint64_t v115 = v28;
      if (v93 && (unint64_t v94 = sub_1000509A0(v91, v92), (v95 & 1) != 0))
      {
        uint64_t v96 = v5;
        sub_1000090E0(*(void *)(v53 + 56) + 32 * v94, (uint64_t)&v126);
      }
      else
      {
        uint64_t v96 = v5;
        long long v126 = 0u;
        long long v127 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_100005CB0(&qword_1000F2CC8);
      uint64_t v97 = String.init<A>(describing:)();
      *(void *)&long long v126 = sub_100007E88(v97, v98, (uint64_t *)&v128);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v88, v89, "MAD returned watchFaceData as %s", v90, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v115(v117, v96);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      v28(v87, v5);
    }
    os_log_type_t v71 = v120;
    sub_1000556B4();
    uint64_t v68 = swift_allocError();
    unsigned char *v99 = 2;
    uint64_t result = swift_willThrow();
    goto LABEL_33;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v115 = v28;
  id v73 = (id)*((void *)&v128 + 1);
  uint64_t v72 = v128;
  uint64_t v74 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (*(void *)(v53 + 16) && (unint64_t v76 = sub_1000509A0(v74, v75), (v77 & 1) != 0))
  {
    sub_1000090E0(*(void *)(v53 + 56) + 32 * v76, (uint64_t)&v126);
  }
  else
  {
    long long v126 = 0u;
    long long v127 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v127 + 1))
  {
    if (swift_dynamicCast())
    {
      uint64_t result = swift_bridgeObjectRelease();
      long long v100 = v128;
      uint64_t v101 = v114;
      uint64_t *v114 = v72;
      v101[1] = (uint64_t)v73;
      *((_OWORD *)v101 + 1) = v100;
      return result;
    }
  }
  else
  {
    sub_100016B90((uint64_t)&v126, &qword_1000F2CC8);
  }
  uint64_t v102 = v116;
  static Log.default.getter();
  swift_bridgeObjectRetain();
  unsigned __int8 v103 = Logger.logObject.getter();
  os_log_type_t v104 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v103, v104))
  {
    id v130 = v73;
    uint64_t v105 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v128 = swift_slowAlloc();
    *(_DWORD *)uint64_t v105 = 136315138;
    uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    if (*(void *)(v37 + 16) && (unint64_t v108 = sub_1000509A0(v106, v107), (v109 & 1) != 0))
    {
      sub_1000090E0(*(void *)(v37 + 56) + 32 * v108, (uint64_t)&v126);
    }
    else
    {
      long long v126 = 0u;
      long long v127 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100005CB0(&qword_1000F2CC8);
    uint64_t v110 = String.init<A>(describing:)();
    *(void *)&long long v126 = sub_100007E88(v110, v111, (uint64_t *)&v128);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v103, v104, "MAD returned watchFacePath as %s", v105, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v115(v116, v119);
    os_log_type_t v71 = v120;
    id v73 = v130;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v115(v102, v119);
    os_log_type_t v71 = v120;
  }
  sub_1000556B4();
  uint64_t v68 = swift_allocError();
  unsigned char *v112 = 4;
  swift_willThrow();
  uint64_t result = sub_100005C58(v72, (unint64_t)v73);
LABEL_33:
  *os_log_type_t v71 = v68;
  return result;
}

uint64_t sub_10004A3B8(char a1)
{
  uint64_t result = 0x69727453646E6573;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x65746172656E6567;
      break;
    case 2:
      uint64_t result = 0x626C416B63617274;
      break;
    case 3:
      uint64_t result = 0x416B636172746E75;
      break;
    case 4:
      uint64_t result = 0x75626C41636E7973;
      break;
    case 5:
      uint64_t result = 0x6C61476B63617274;
      break;
    case 6:
      uint64_t result = 0x476B636172746E75;
      break;
    case 7:
      uint64_t result = 0x6C6C6147636E7973;
      break;
    case 8:
      uint64_t result = 0x7568536B63617274;
      break;
    case 9:
      uint64_t result = 0x536B636172746E75;
      break;
    case 10:
      uint64_t result = 0x66756853636E7973;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10004A564(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10004A610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a3;
  v4[7] = a4;
  v4[4] = a1;
  v4[5] = a2;
  return _swift_task_switch(sub_10004A634, 0, 0);
}

uint64_t sub_10004A634(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t a1), void *a7, uint64_t a8)
{
  uint64_t v9 = v8[5];
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v9)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  a1 = self;
  uint64_t v10 = VCPMediaAnalysisService_AllowOnDemandOption;
  v8[8] = a1;
  v8[9] = v10;
  v8[10] = 0;
  v8[11] = 0;
  if (!v8[5])
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = v8[6];
  id v12 = [a1 sharedAnalysisService];
  v8[12] = v12;
  v8[2] = v11;
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = v8[2];
  v8[2] = 0x8000000000000000;
  v8[3] = v17;
  unint64_t v18 = sub_1000509A0(v13, v15);
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = (a2 & 1) == 0;
  a1 = (void *)(v19 + v20);
  if (__OFADD__(v19, v20))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  char v21 = a2;
  if (*(void *)(v17 + 24) >= (uint64_t)a1)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      a1 = sub_100054658();
    }
    goto LABEL_13;
  }
  sub_100052C5C((uint64_t)a1, isUniquelyReferenced_nonNull_native);
  a1 = (void *)sub_1000509A0(v13, v15);
  if ((v21 & 1) == (a2 & 1))
  {
    unint64_t v18 = (unint64_t)a1;
LABEL_13:
    BOOL v23 = (void *)v8[3];
    if (v21)
    {
      *(unsigned char *)(v23[7] + v18) = 1;
      goto LABEL_17;
    }
    v23[(v18 >> 6) + 8] |= 1 << v18;
    unint64_t v24 = (uint64_t *)(v23[6] + 16 * v18);
    *unint64_t v24 = v13;
    v24[1] = v15;
    *(unsigned char *)(v23[7] + v18) = 1;
    uint64_t v25 = v23[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (!v26)
    {
      v23[2] = v27;
      swift_bridgeObjectRetain();
LABEL_17:
      uint64_t v28 = v8[7];
      v8[2] = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v29 = (void *)swift_task_alloc();
      v8[13] = v29;
      v29[2] = v12;
      v29[3] = v28;
      v29[4] = v8 + 2;
      uint64_t v30 = (void *)swift_task_alloc();
      v8[14] = v30;
      a8 = sub_100005CB0(&qword_1000F2CB0);
      *uint64_t v30 = v8;
      v30[1] = sub_10004A908;
      a1 = (void *)v8[4];
      a5 = 0x80000001000D61F0;
      a6 = sub_100055BE4;
      a2 = 0;
      a3 = 0;
      a4 = 0xD000000000000045;
      a7 = v29;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
    }
LABEL_24:
    __break(1u);
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(a1, a2, a3, a4, a5, a6, a7, a8);
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10004A908()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_10004AAB4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_10004AA24;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004AA24()
{
  uint64_t v1 = *(void **)(v0 + 56);

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10004AAB4()
{
  id v3 = *(id *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  uint64_t v5 = *(void *)(v0 + 40);

  swift_task_dealloc();
  uint64_t v6 = v4 + 1;
  swift_bridgeObjectRelease();
  unint64_t v7 = swift_errorRelease();
  uint64_t v8 = *(void *)(v0 + 120);
  if (v6 == v5)
  {
    uint64_t v9 = *(void **)(v0 + 56);
    swift_willThrow();
    swift_bridgeObjectRelease();

    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v12 = *(void *)(v0 + 88) + 1;
  *(void *)(v0 + 80) = v8;
  *(void *)(v0 + 88) = v12;
  if (v12 == *(void *)(v0 + 40))
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v1 = *(void *)(v0 + 48);
  id v3 = [*(id *)(v0 + 64) sharedAnalysisService];
  *(void *)(v0 + 96) = v3;
  *(void *)(v0 + 16) = v1;
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v13;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *(void *)(v0 + 16);
  *(void *)(v0 + 16) = 0x8000000000000000;
  *(void *)(v0 + 24) = v15;
  unint64_t v7 = sub_1000509A0(v5, v8);
  uint64_t v23 = *(void *)(v15 + 16);
  BOOL v24 = (v16 & 1) == 0;
  BOOL v25 = __OFADD__(v23, v24);
  uint64_t v26 = v23 + v24;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  LOBYTE(v1) = v16;
  uint64_t v2 = (void *)(v0 + 24);
  if (*(void *)(v15 + 24) >= v26)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
LABEL_13:
      uint64_t v27 = (void *)*v2;
      if (v1)
      {
LABEL_14:
        *(unsigned char *)(v27[7] + v7) = 1;
        goto LABEL_20;
      }
LABEL_18:
      v27[(v7 >> 6) + 8] |= 1 << v7;
      id v29 = (uint64_t *)(v27[6] + 16 * v7);
      *id v29 = v5;
      v29[1] = v8;
      *(unsigned char *)(v27[7] + v7) = 1;
      uint64_t v30 = v27[2];
      BOOL v25 = __OFADD__(v30, 1);
      uint64_t v31 = v30 + 1;
      if (v25)
      {
        __break(1u);
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, v16, v17, v18, v19, v20, v21, v22);
      }
      v27[2] = v31;
      swift_bridgeObjectRetain();
LABEL_20:
      uint64_t v32 = *(void *)(v0 + 56);
      *(void *)(v0 + 16) = v27;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 104) = v33;
      v33[2] = v3;
      v33[3] = v32;
      v33[4] = v0 + 16;
      unint64_t v34 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v34;
      uint64_t v22 = sub_100005CB0(&qword_1000F2CB0);
      *unint64_t v34 = v0;
      v34[1] = sub_10004A908;
      unint64_t v7 = *(void *)(v0 + 32);
      unint64_t v19 = 0x80000001000D61F0;
      BOOL v20 = sub_100055BE4;
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      unint64_t v18 = 0xD000000000000045;
      char v21 = v33;
      return withCheckedThrowingContinuation<A>(isolation:function:_:)(v7, v16, v17, v18, v19, v20, v21, v22);
    }
LABEL_17:
    unint64_t v28 = v7;
    sub_100054658();
    unint64_t v7 = v28;
    uint64_t v27 = (void *)*v2;
    if (v1) {
      goto LABEL_14;
    }
    goto LABEL_18;
  }
  sub_100052C5C(v26, isUniquelyReferenced_nonNull_native);
  unint64_t v7 = sub_1000509A0(v5, v8);
  if ((v1 & 1) == (v16 & 1)) {
    goto LABEL_13;
  }
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10004AE0C(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[6] = v3;
  v2[7] = *(void *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2C50);
  v2[10] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = type metadata accessor for CommunicationActor();
  v2[15] = static CommunicationActor.shared.getter();
  v2[16] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[17] = v6;
  v2[18] = v5;
  return _swift_task_switch(sub_10004AFD4, v6, v5);
}

uint64_t sub_10004AFD4()
{
  id v1 = sub_100040C1C();
  id v2 = [v1 imageNode];
  v0[19] = v2;

  if (!v2)
  {
    swift_release();
    static Log.default.getter();
    unint64_t v7 = Logger.logObject.getter();
    uint64_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, (os_log_type_t)v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, (os_log_type_t)v8, "generateImageCaption: visionEngine imageNode was nil", v9, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    uint64_t v12 = v0[6];

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    goto LABEL_15;
  }
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[10];
  sub_100056E64(v0[4], v5, &qword_1000F2C50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    uint64_t v6 = v0[10];
    swift_release();
    sub_100016B90(v6, &qword_1000F2C50);
LABEL_12:
    static Log.default.getter();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      BOOL v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "generateImageCaption: visionEngine unable to convert to CIImage", v25, 2u);
      swift_slowDealloc();
    }
    uint64_t v26 = v0[9];
    uint64_t v27 = v0[6];
    uint64_t v28 = v0[7];

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
LABEL_15:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v29 = (uint64_t (*)(void, unint64_t))v0[1];
    return v29(0, 0xE000000000000000);
  }
  (*(void (**)(void, void, void))(v0[12] + 32))(v0[13], v0[10], v0[11]);
  id v13 = objc_allocWithZone((Class)CIImage);
  URL._bridgeToObjectiveC()(v14);
  uint64_t v16 = v15;
  id v17 = [v13 initWithContentsOfURL:v15];
  v0[20] = v17;

  if (!v17)
  {
    (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
    swift_release();
    goto LABEL_12;
  }
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[5];
  [v2 setShouldProcessRemotely:1];
  uint64_t v20 = static CommunicationActor.shared.getter();
  v0[21] = v20;
  char v21 = (void *)swift_task_alloc();
  v0[22] = v21;
  v21[2] = v2;
  v21[3] = v17;
  v21[4] = v19;
  uint64_t v22 = (void *)swift_task_alloc();
  v0[23] = v22;
  *uint64_t v22 = v0;
  v22[1] = sub_10004B3C4;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, v20, v18, 0xD00000000000001ALL, 0x80000001000D61A0, sub_1000557C0, v21, &type metadata for String);
}

uint64_t sub_10004B3C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return _swift_task_switch(sub_10004B524, v3, v2);
}

uint64_t sub_10004B524()
{
  uint64_t v2 = (void *)v0[19];
  uint64_t v1 = (void *)v0[20];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[11];
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v7 = v0[2];
  uint64_t v6 = v0[3];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v8(v7, v6);
}

void sub_10004B5F4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_100005CB0(&qword_1000F2C90);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v9 = sub_1000557CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  aBlock[4] = sub_100055B38;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10004C088;
  aBlock[3] = &unk_1000EE430;
  uint64_t v12 = _Block_copy(aBlock);
  swift_release();
  [a2 triggerWithImage:a3 options:v9 cacheKey:0 resultHandler:v12];
  _Block_release(v12);
  swift_release();
}

void sub_10004B850(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v45 - v11;
  if (a1)
  {
    id v13 = a1;
    if (AXRuntimeCheck_MediaAnalysisSupport())
    {
      id v14 = [v13 mediaAnalysisImageCaptionFeatures];
      sub_100019380(0, &qword_1000F2C98);
      unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v31) {
          goto LABEL_5;
        }
      }
      else if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        if ((v15 & 0xC000000000000001) != 0)
        {
          id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
          id v17 = v16;
          swift_bridgeObjectRelease();
          if ([v17 isLowConfidence]) {
            goto LABEL_19;
          }
          goto LABEL_22;
        }
        if (*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v16 = *(id *)(v15 + 32);
          goto LABEL_8;
        }
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
LABEL_28:
      swift_bridgeObjectRelease();
LABEL_29:
      sub_1000409B4((uint64_t)&_swiftEmptyArrayStorage);
      type metadata accessor for AXMFeatureDescriptionOption(0);
      sub_1000568FC(&qword_1000F1EB0, type metadata accessor for AXMFeatureDescriptionOption);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v34 = [v13 detectedSceneClassificationFeatureDescriptionWithOptions:isa];

      if (v34)
      {
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v30 = v35;

        goto LABEL_32;
      }
      goto LABEL_31;
    }
    id v23 = [v13 captionFeatures];
    sub_100019380(0, &qword_1000F2C98);
    unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v32) {
        goto LABEL_28;
      }
    }
    else if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_28;
    }
    if ((v24 & 0xC000000000000001) != 0)
    {
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_45;
      }
      id v25 = *(id *)(v24 + 32);
    }
    id v17 = v25;
    swift_bridgeObjectRelease();
    if ([v17 isLowConfidence])
    {
LABEL_19:

      goto LABEL_29;
    }
LABEL_22:
    sub_1000409B4((uint64_t)&_swiftEmptyArrayStorage);
    type metadata accessor for AXMFeatureDescriptionOption(0);
    sub_1000568FC(&qword_1000F1EB0, type metadata accessor for AXMFeatureDescriptionOption);
    Class v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v27 = [v13 detectedCaptionFeatureDescriptionWithOptions:v26];

    if (v27)
    {
      uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v30 = v29;

LABEL_32:
      uint64_t v36 = HIBYTE(v30) & 0xF;
      if ((v30 & 0x2000000000000000) == 0) {
        uint64_t v36 = v28 & 0xFFFFFFFFFFFFLL;
      }
      if (!v36)
      {
        swift_bridgeObjectRelease();
        static Log.default.getter();
        id v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v42, v43))
        {
          os_log_type_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "generateImageCaption: visionEngine did not generate caption", v44, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
        uint64_t v47 = 0;
        unint64_t v48 = 0xE000000000000000;
        goto LABEL_40;
      }
      NSString v37 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v38 = [v37 axCapitalizeFirstLetter];

      if (v38)
      {
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v41 = v40;

        uint64_t v47 = v39;
        unint64_t v48 = v41;
LABEL_40:
        sub_100005CB0(&qword_1000F2C90);
        CheckedContinuation.resume(returning:)();

        return;
      }
LABEL_46:
      __break(1u);
      return;
    }

LABEL_31:
    uint64_t v28 = 0;
    unint64_t v30 = 0xE000000000000000;
    goto LABEL_32;
  }
  if (a2)
  {
    swift_errorRetain();
    static Log.default.getter();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v45 = a3;
      uint64_t v46 = v6;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      char v21 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 138412290;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v47 = v22;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *char v21 = v22;
      uint64_t v6 = v46;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "generateImageCaption: visionEngine had error %@", v20, 0xCu);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    sub_100005CB0(&qword_1000F2C90);
    CheckedContinuation.resume(returning:)();
    swift_errorRelease();
  }
}

void sub_10004C088(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_10004C114()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocClassInstance(v0, 48, 7);
}

uint64_t type metadata accessor for PhonePhotoProcessor()
{
  return self;
}

uint64_t sub_10004C188()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000043B4;
  return sub_100040D1C();
}

uint64_t sub_10004C218(uint64_t a1)
{
  uint64_t v3 = *v1;
  v2[2] = a1;
  v2[3] = v3;
  v2[4] = type metadata accessor for CommunicationActor();
  v2[5] = static CommunicationActor.shared.getter();
  v2[6] = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10004C2EC, v5, v4);
}

uint64_t sub_10004C2EC()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[2];
  swift_release();
  static CommunicationActor.shared.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  type metadata accessor for StoredPhoto();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v4 = generateElements<A>(isolation:_:)();
  swift_release();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

uint64_t sub_10004C3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100005F94;
  return sub_100045E48(a1, a2, v7, v6);
}

Swift::Int sub_10004C494()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_10004C4DC()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_10004C508()
{
  Swift::UInt v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

uint64_t sub_10004C55C(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10004C57C(a1, a2, a3, (uint64_t)&unk_1000EE580, (uint64_t)sub_100056574);
}

uint64_t sub_10004C57C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v29 = a4;
  int v31 = a1;
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v12 = static CommunicationActor.shared.getter();
  uint64_t v30 = sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v23 = a2;
    uint64_t v24 = a3;
    uint64_t v25 = v12;
    uint64_t v26 = a5;
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v33[0] = v22;
    *(_DWORD *)unint64_t v15 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v16 = sub_10004A3B8(v31);
    unint64_t v18 = v17;
    swift_release();
    uint64_t v32 = sub_100007E88(v16, v18, v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Registry: Registering request for %s.", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
    a5 = v26;
    a2 = v23;
    a3 = v24;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
  }
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a2;
  *(void *)(v19 + 24) = a3;
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v32 = *(void *)(v5 + 32);
  *(void *)(v5 + 32) = 0x8000000000000000;
  sub_1000537B0(a5, v19, v31, isUniquelyReferenced_nonNull_native);
  *(void *)(v5 + 32) = v32;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_10004C954(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10004C57C(a1, a2, a3, (uint64_t)&unk_1000EE5D0, (uint64_t)sub_100056738);
}

uint64_t sub_10004C974(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10004C57C(a1, a2, a3, (uint64_t)&unk_1000EE620, (uint64_t)sub_100056944);
}

uint64_t sub_10004C994(int a1, uint64_t a2, uint64_t a3)
{
  return sub_10004C57C(a1, a2, a3, (uint64_t)&unk_1000EE670, (uint64_t)sub_100056B40);
}

uint64_t sub_10004C9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v8 = type metadata accessor for MessageBody();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005CB0(&qword_1000F2760);
  sub_100056228();
  uint64_t result = MessageBody.deserialized<A>()();
  if (!v4)
  {
    uint64_t v18 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
    id v13 = a4;
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    unint64_t v15 = (char *)swift_allocObject();
    uint64_t v16 = v18;
    *((void *)v15 + 2) = v19;
    *((void *)v15 + 3) = a3;
    *((void *)v15 + 4) = v16;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v15[v14], v11, v8);
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v17 = generateElements<A>(isolation:_:)();
    v13[3] = sub_100005CB0(&qword_1000F2D80);
    v13[4] = sub_100005F48(&qword_1000F2D88, &qword_1000F2D80);
    *id v13 = v17;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10004CBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t *a7@<X8>)
{
  uint64_t v31 = a3;
  uint64_t v32 = a6;
  v28[1] = a5;
  uint64_t v29 = a2;
  long long v33 = a7;
  uint64_t v35 = type metadata accessor for MessageBody();
  uint64_t v30 = *(void *)(v35 - 8);
  uint64_t v10 = *(void *)(v30 + 64);
  __chkstk_darwin(v35);
  id v34 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a4(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v28 - v16;
  uint64_t result = MessageBody.deserialized<A>()();
  if (!v7)
  {
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v28[0] = 0;
    v19(v15, v17, v11);
    uint64_t v20 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v34, a1, v35);
    unint64_t v21 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v22 = (v13 + *(unsigned __int8 *)(v20 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v23 = swift_allocObject();
    uint64_t v24 = v31;
    *(void *)(v23 + 16) = v29;
    *(void *)(v23 + 24) = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v21, v15, v11);
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v23 + v22, v34, v35);
    swift_retain();
    uint64_t v25 = generateElements<A>(isolation:_:)();
    uint64_t v26 = sub_100005CB0(&qword_1000F2D80);
    uint64_t v27 = v33;
    uint64_t v33[3] = v26;
    v27[4] = sub_100005F48(&qword_1000F2D88, &qword_1000F2D80);
    *uint64_t v27 = v25;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  }
  return result;
}

uint64_t sub_10004CE94(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a2;
  v6[6] = a6;
  v6[4] = a1;
  type metadata accessor for ProtocolVersion();
  v6[7] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v6[8] = v9;
  v6[9] = *(void *)(v9 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageBody();
  v6[11] = v10;
  v6[12] = *(void *)(v10 - 8);
  v6[13] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v6[14] = swift_task_alloc();
  v6[15] = sub_100005CB0(&qword_1000F2970);
  uint64_t v11 = swift_task_alloc();
  v6[16] = v11;
  uint64_t v12 = sub_100005CB0(&qword_1000F2D98);
  v6[17] = v12;
  v6[18] = *(void *)(v12 - 8);
  v6[19] = swift_task_alloc();
  v6[2] = a5;
  unint64_t v15 = (int *)((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  v6[20] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_10004D140;
  return ((uint64_t (*)(uint64_t, void *))v15)(v11, v6 + 2);
}

uint64_t sub_10004D140()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004D37C;
  }
  else {
    uint64_t v2 = sub_10004D254;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004D254()
{
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[22] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10004D428;
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[14];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 3, v3, v1);
}

uint64_t sub_10004D37C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004D428()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004D7B8;
  }
  else {
    uint64_t v2 = sub_10004D53C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004D53C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1
    || (uint64_t v4 = v0[23],
        (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[10], v1, v2),
        MessageBody.version.getter(),
        MessageBody.init<A>(serializable:version:)(),
        v4))
  {
    (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v0[4] + *(int *)v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[24] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10004D87C;
    uint64_t v8 = v0[13];
    return v9(v8);
  }
}

uint64_t sub_10004D7B8()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004D87C()
{
  uint64_t v2 = (void *)*v1;
  v2[25] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
    return _swift_task_switch(sub_10004DA74, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
    uint64_t v3 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[22] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10004D428;
    uint64_t v5 = v2[17];
    uint64_t v6 = v2[14];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, 0, 0, v2 + 3, v5, v3);
  }
}

uint64_t sub_10004DA74()
{
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004DB38(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a2;
  v6[5] = a6;
  v6[3] = a1;
  type metadata accessor for ProtocolVersion();
  v6[6] = swift_task_alloc();
  uint64_t v9 = sub_100005CB0(&qword_1000F2E30);
  v6[7] = v9;
  v6[8] = *(void *)(v9 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageBody();
  v6[10] = v10;
  v6[11] = *(void *)(v10 - 8);
  v6[12] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2E58);
  v6[13] = swift_task_alloc();
  v6[14] = sub_100005CB0(&qword_1000F2E60);
  uint64_t v11 = swift_task_alloc();
  v6[15] = v11;
  uint64_t v12 = sub_100005CB0(&qword_1000F2E68);
  v6[16] = v12;
  v6[17] = *(void *)(v12 - 8);
  v6[18] = swift_task_alloc();
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  v6[19] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_10004DDDC;
  return v15(v11, a5);
}

uint64_t sub_10004DDDC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570D8;
  }
  else {
    uint64_t v2 = sub_10004DEF0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004DEF0()
{
  sub_100005F48(&qword_1000F2E70, &qword_1000F2E60);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2E78, &qword_1000F2E68);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10004E018;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 2, v3, v1);
}

uint64_t sub_10004E018()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570B4;
  }
  else {
    uint64_t v2 = sub_10004E12C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004E12C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1
    || (uint64_t v4 = v0[22],
        (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2),
        MessageBody.version.getter(),
        sub_100005F48(&qword_1000F2E80, &qword_1000F2E30),
        MessageBody.init<A>(serializable:version:)(),
        v4))
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[23] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10004E3CC;
    uint64_t v8 = v0[12];
    return v9(v8);
  }
}

uint64_t sub_10004E3CC()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    return _swift_task_switch(sub_1000570B8, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_100005F48(&qword_1000F2E78, &qword_1000F2E68);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[21] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10004E018;
    uint64_t v5 = v2[16];
    uint64_t v6 = v2[13];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, 0, 0, v2 + 2, v5, v3);
  }
}

uint64_t sub_10004E5C4(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a2;
  v6[5] = a6;
  v6[3] = a1;
  type metadata accessor for ProtocolVersion();
  v6[6] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v6[7] = v9;
  v6[8] = *(void *)(v9 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageBody();
  v6[10] = v10;
  v6[11] = *(void *)(v10 - 8);
  v6[12] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v6[13] = swift_task_alloc();
  v6[14] = sub_100005CB0(&qword_1000F2970);
  uint64_t v11 = swift_task_alloc();
  v6[15] = v11;
  uint64_t v12 = sub_100005CB0(&qword_1000F2D98);
  v6[16] = v12;
  v6[17] = *(void *)(v12 - 8);
  v6[18] = swift_task_alloc();
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  v6[19] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_10004E864;
  return v15(v11, a5);
}

uint64_t sub_10004E864()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570D8;
  }
  else {
    uint64_t v2 = sub_10004E978;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004E978()
{
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10004EAA0;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 2, v3, v1);
}

uint64_t sub_10004EAA0()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570B4;
  }
  else {
    uint64_t v2 = sub_10004EBB4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004EBB4()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1
    || (uint64_t v4 = v0[22],
        (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2),
        MessageBody.version.getter(),
        MessageBody.init<A>(serializable:version:)(),
        v4))
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[23] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10004EE30;
    uint64_t v8 = v0[12];
    return v9(v8);
  }
}

uint64_t sub_10004EE30()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    return _swift_task_switch(sub_1000570B8, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[21] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10004EAA0;
    uint64_t v5 = v2[16];
    uint64_t v6 = v2[13];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, 0, 0, v2 + 2, v5, v3);
  }
}

uint64_t sub_10004F028(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a2;
  v6[5] = a6;
  v6[3] = a1;
  type metadata accessor for ProtocolVersion();
  v6[6] = swift_task_alloc();
  uint64_t v9 = sub_100005CB0((uint64_t *)&unk_1000F3A80);
  v6[7] = v9;
  v6[8] = *(void *)(v9 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageBody();
  v6[10] = v10;
  v6[11] = *(void *)(v10 - 8);
  v6[12] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2EC8);
  v6[13] = swift_task_alloc();
  v6[14] = sub_100005CB0(&qword_1000F2ED0);
  uint64_t v11 = swift_task_alloc();
  v6[15] = v11;
  uint64_t v12 = sub_100005CB0(&qword_1000F2ED8);
  v6[16] = v12;
  v6[17] = *(void *)(v12 - 8);
  v6[18] = swift_task_alloc();
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  v6[19] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_10004F2CC;
  return v15(v11, a5);
}

uint64_t sub_10004F2CC()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004F508;
  }
  else {
    uint64_t v2 = sub_10004F3E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004F3E0()
{
  sub_100005F48(&qword_1000F2EE0, &qword_1000F2ED0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2EE8, &qword_1000F2ED8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10004F5B4;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 2, v3, v1);
}

uint64_t sub_10004F508()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10004F5B4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10004F968;
  }
  else {
    uint64_t v2 = sub_10004F6C8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10004F6C8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1
    || (uint64_t v4 = v0[22],
        (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2),
        MessageBody.version.getter(),
        sub_100005F48(&qword_1000F2EF0, (uint64_t *)&unk_1000F3A80),
        MessageBody.init<A>(serializable:version:)(),
        v4))
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[23] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10004FA2C;
    uint64_t v8 = v0[12];
    return v9(v8);
  }
}

uint64_t sub_10004F968()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004FA2C()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    return _swift_task_switch(sub_10004FC24, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_100005F48(&qword_1000F2EE8, &qword_1000F2ED8);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[21] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_10004F5B4;
    uint64_t v5 = v2[16];
    uint64_t v6 = v2[13];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, 0, 0, v2 + 2, v5, v3);
  }
}

uint64_t sub_10004FC24()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_10004FCE8(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a2;
  v6[5] = a6;
  v6[3] = a1;
  type metadata accessor for ProtocolVersion();
  v6[6] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v6[7] = v9;
  v6[8] = *(void *)(v9 - 8);
  v6[9] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MessageBody();
  v6[10] = v10;
  v6[11] = *(void *)(v10 - 8);
  v6[12] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v6[13] = swift_task_alloc();
  v6[14] = sub_100005CB0(&qword_1000F2970);
  uint64_t v11 = swift_task_alloc();
  v6[15] = v11;
  uint64_t v12 = sub_100005CB0(&qword_1000F2D98);
  v6[16] = v12;
  v6[17] = *(void *)(v12 - 8);
  v6[18] = swift_task_alloc();
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v13 = (void *)swift_task_alloc();
  v6[19] = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_10004FF88;
  return v15(v11, a5);
}

uint64_t sub_10004FF88()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570D8;
  }
  else {
    uint64_t v2 = sub_10005009C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10005009C()
{
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[21] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000501C4;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[13];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v4, 0, 0, v0 + 2, v3, v1);
}

uint64_t sub_1000501C4()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1000570B4;
  }
  else {
    uint64_t v2 = sub_1000502D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000502D8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1
    || (uint64_t v4 = v0[22],
        (*(void (**)(void, uint64_t, uint64_t))(v3 + 32))(v0[9], v1, v2),
        MessageBody.version.getter(),
        MessageBody.init<A>(serializable:version:)(),
        v4))
  {
    (*(void (**)(void, void))(v0[17] + 8))(v0[18], v0[16]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    uint64_t v9 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[23] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100050554;
    uint64_t v8 = v0[12];
    return v9(v8);
  }
}

uint64_t sub_100050554()
{
  uint64_t v2 = (void *)*v1;
  v2[24] = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    return _swift_task_switch(sub_1000570B8, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v3 = sub_100005F48(&qword_1000F2DA0, &qword_1000F2D98);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[21] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_1000501C4;
    uint64_t v5 = v2[16];
    uint64_t v6 = v2[13];
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, 0, 0, v2 + 2, v5, v3);
  }
}

unint64_t sub_100050750(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();
  return sub_100050CDC(a1, v2);
}

unint64_t sub_1000507B8(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_100050D7C(a1, v2);
}

unint64_t sub_1000508CC(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_1000568FC(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_100051374(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_1000509A0(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v4 = Hasher._finalize()();

  return sub_100050FB4(a1, a2, v4);
}

unint64_t sub_100050A18(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_100051098(a1, v2);
}

unint64_t sub_100050A5C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_100051134(a1, v4);
}

unint64_t sub_100050AA0(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();

  return sub_1000511FC(a1, v2);
}

unint64_t sub_100050B34(uint64_t a1)
{
  type metadata accessor for ShuffleID();
  sub_1000568FC(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_100051374(a1, v2, (uint64_t (*)(void))&type metadata accessor for ShuffleID, &qword_1000F2E20, (void (*)(uint64_t))&type metadata accessor for ShuffleID, (uint64_t)&protocol conformance descriptor for ShuffleID);
}

unint64_t sub_100050C08(uint64_t a1)
{
  type metadata accessor for AlbumID();
  sub_1000568FC(&qword_1000F2EA0, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();
  return sub_100051374(a1, v2, (uint64_t (*)(void))&type metadata accessor for AlbumID, &qword_1000F2EA8, (void (*)(uint64_t))&type metadata accessor for AlbumID, (uint64_t)&protocol conformance descriptor for AlbumID);
}

unint64_t sub_100050CDC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100050D7C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1668184435;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x68736572666572;
          break;
        case 2:
          uint64_t v8 = 0x69737365636F7270;
          unint64_t v7 = 0xEA0000000000676ELL;
          break;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x70756D726177;
          break;
        case 4:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x70756E61656C63;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1668184435;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE700000000000000;
          if (v8 == 0x68736572666572) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xEA0000000000676ELL;
          if (v8 != 0x69737365636F7270) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          unint64_t v9 = 0xE600000000000000;
          uint64_t v10 = 0x70756D726177;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x70756E61656C63) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_100050FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_100051098(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_100051134(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_100055DDC(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100055D88((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1000511FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_100051374(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_1000568FC(v23, v24);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_100051514(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2D60);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v29 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v12) {
          goto LABEL_33;
        }
        unint64_t v21 = v29[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v21 = v29[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v29 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v29[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v21 = v29[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      Swift::UInt32 v27 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v19);
      long long v30 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v19);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v27);
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v16 == v24;
          if (v16 == v24) {
            unint64_t v16 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v17) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1000517EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2E08);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    long long v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *long long v30 = -1 << v28;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      Swift::UInt32 v26 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100051AC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2F18);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    int64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100051DD8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2848);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100052090(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2DC8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_40;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v12];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v12 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_41;
            }
            if (v12 >= v31) {
              goto LABEL_34;
            }
            unint64_t v21 = v32[v12];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v12 = v22;
      }
    }
LABEL_30:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_31:
    char v27 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v28 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v13 = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        JUMPOUT(0x100052400);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v11 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v27;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v28;
    ++*(void *)(v7 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v3 = v2;
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_39:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100052414(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100005CB0(&qword_1000F2DD8);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  id v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  os_log_type_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_retain();
    }
    sub_1000568FC(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  BOOL v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100052838(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100005CB0(&qword_1000F2DE8);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  id v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  os_log_type_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1000568FC(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  BOOL v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100052C5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100005CB0(&qword_1000F2CB8);
  char v37 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100052F68(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ShuffleID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100005CB0(&qword_1000F2E10);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  id v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  os_log_type_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1000568FC(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_10005338C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for AlbumID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100005CB0(&qword_1000F2E98);
  int v46 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  id v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  unint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  os_log_type_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    char v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1000568FC(&qword_1000F2EA0, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  char v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1000537B0(uint64_t a1, uint64_t a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_100050750(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100053D08();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      unint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_release();
      *unint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v18[6] + v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_100051514(result, a4 & 1);
  uint64_t result = sub_100050750(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1000538F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1000509A0(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100053EBC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_100051AC0(v15, a4 & 1);
  unint64_t v21 = sub_1000509A0(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v23 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_100053A60(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1000508CC(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    char v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t result = swift_release();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1000543C0();
    goto LABEL_7;
  }
  sub_100052414(v17, a3 & 1);
  unint64_t v23 = sub_1000508CC(a2);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  char v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_100053C50(v14, (uint64_t)v11, a1, v20);
}

unint64_t sub_100053C0C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_100053C50(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

void *sub_100053D08()
{
  uint64_t v1 = v0;
  sub_100005CB0(&qword_1000F2D60);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    long long v16 = *(_OWORD *)(*(void *)(v2 + 56) + 16 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(_OWORD *)(*(void *)(v4 + 56) + 16 * v15) = v16;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100053EB0()
{
  return sub_100054224(&qword_1000F2E08);
}

void *sub_100053EBC()
{
  uint64_t v1 = v0;
  sub_100005CB0(&qword_1000F2F18);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100054074()
{
  uint64_t v1 = v0;
  sub_100005CB0(&qword_1000F2848);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100054218()
{
  return sub_100054224(&qword_1000F2DC8);
}

void *sub_100054224(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100005CB0(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1000543C0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100005CB0(&qword_1000F2DD8);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100054658()
{
  uint64_t v1 = v0;
  sub_100005CB0(&qword_1000F2CB8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    unint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    int64_t v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *int64_t v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100054804(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054A14(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100054824(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000550AC(a1, a2, a3, (void *)*v3, &qword_1000F2A30, (uint64_t (*)(void))&type metadata accessor for UUID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100054860(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000550AC(a1, a2, a3, (void *)*v3, &qword_1000F2E00, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_10005489C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000550AC(a1, a2, a3, (void *)*v3, &qword_1000F2CF8, (uint64_t (*)(void))&type metadata accessor for StoredPhoto);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000548D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054E6C(a1, a2, a3, (void *)*v3, &qword_1000F2E38, &qword_1000F2E40);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100054908(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054E6C(a1, a2, a3, (void *)*v3, &qword_1000F2A78, (uint64_t *)&unk_1000F3A70);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100054938(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054BA0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100054958(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054D00(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_100054978(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054E6C(a1, a2, a3, (void *)*v3, &qword_1000F2E28, &qword_1000F2E30);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000549A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100054E6C(a1, a2, a3, (void *)*v3, &qword_1000F2EB0, (uint64_t *)&unk_1000F3A80);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1000549D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1000550AC(a1, a2, a3, (void *)*v3, &qword_1000F2EF8, (uint64_t (*)(void))&type metadata accessor for AlbumID);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_100054A14(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005CB0(&qword_1000F2DF0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = &_swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_100005CB0(&qword_1000F2DF8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100054BA0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005CB0(&qword_1000F2DE0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100054D00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100005CB0(&qword_1000F2728);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100054E6C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100005CB0(a5);
  uint64_t v13 = *(void *)(sub_100005CB0(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100005CB0(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  int64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000550AC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100005CB0(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  int64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  uint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1000552F4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v5 = *a2;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_100005F94;
  return v8(a1, v5);
}

uint64_t sub_1000553DC(uint64_t a1, uint64_t a2, int *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v12 = *a5;
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_100005F94;
  return sub_10004CE94(a1, a2, a3, a4, v12, a6);
}

unint64_t sub_1000554A8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100005CB0(&qword_1000F2D60);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  long long v13 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_100050750(v4);
  if (v6)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  int64_t v7 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v13;
    uint64_t v8 = v3[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      break;
    }
    v3[2] = v10;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v11 = (_OWORD *)((char *)v7 + 24);
    unsigned __int8 v4 = *((unsigned char *)v7 - 8);
    long long v13 = *v7;
    swift_retain();
    unint64_t result = sub_100050750(v4);
    int64_t v7 = v11;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000555B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100005CB0(&qword_1000F2E08);
  uint64_t v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_100050750(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    char v12 = v8 + 2;
    unsigned __int8 v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_100050750(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1000556B4()
{
  unint64_t result = qword_1000F2C58;
  if (!qword_1000F2C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000F2C58);
  }
  return result;
}

uint64_t sub_100055708(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100005CB0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_10005576C()
{
  unint64_t result = qword_1000F2C80;
  if (!qword_1000F2C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1000F2C80);
  }
  return result;
}

void sub_1000557C0(uint64_t a1)
{
  sub_10004B5F4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

id sub_1000557CC()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_1000568FC(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  id v4 = [objc_allocWithZone((Class)AXMVisionAnalysisOptions) init];
  uint64_t v5 = AXRuntimeCheck_MediaAnalysisSupport();
  [v4 setDetectMADCaptions:v5];
  [v4 setDetectMADScenes:v5];
  [v4 setDetectMADFace:v5];
  uint64_t v6 = v5 ^ 1;
  [v4 setDetectScenes:v6];
  [v4 setDetectObjects:v6];
  [v4 setDetectProminentObjects:v6];
  [v4 setDetectCaptions:v6];
  [v4 setDetectFaceNames:v6];
  [v4 setDetectFaceExpressions:v6];
  [v4 setDetectText:1];
  id v7 = [self defaultOptions];
  [v4 setTextDetectionOptions:v7];

  [v4 setDetectTraits:1];
  [v4 setDetectModelClassifications:1];
  static Locale.current.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setPreferredOutputLocale:isa];
  swift_release();

  return v4;
}

uint64_t sub_100055AA4()
{
  uint64_t v1 = sub_100005CB0(&qword_1000F2C90);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100055B38(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100005CB0(&qword_1000F2C90) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_10004B850(a1, a2, v6);
}

uint64_t sub_100055BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100055BCC()
{
  return swift_release();
}

_OWORD *sub_100055BD4(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_100055BE4(uint64_t a1)
{
  sub_100048C0C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100055BF0()
{
  uint64_t v1 = sub_100005CB0(&qword_1000F2CC0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100055C98(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_100005CB0(&qword_1000F2CC0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v7 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_100049260(a1, a2, v2 + v6, v7);
}

uint64_t sub_100055D48(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    sub_100005C58(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100055D88(uint64_t a1)
{
  return a1;
}

uint64_t sub_100055DDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100055E38(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return sub_100040FEC(a1, a2);
}

uint64_t sub_100055EE4(uint64_t a1, uint64_t a2)
{
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *unint64_t v6 = v3;
  v6[1] = sub_100005F94;
  return sub_100041488(a1, a2, v2);
}

uint64_t sub_100055F90(uint64_t a1, uint64_t *a2)
{
  unint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100005F94;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t *, int *))((char *)&dword_1000F2D38 + dword_1000F2D38);
  return v8(a1, a2, v6);
}

uint64_t sub_100056058(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100056100;
  return sub_100041754(a1);
}

uint64_t sub_100056100(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_10005620C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004C9B4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_100056228()
{
  unint64_t result = qword_1000F2D68;
  if (!qword_1000F2D68)
  {
    sub_100005F00(&qword_1000F2760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F2D68);
  }
  return result;
}

uint64_t sub_100056294()
{
  uint64_t v1 = type metadata accessor for MessageBody();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100056368(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for MessageBody() - 8);
  uint64_t v7 = *(int **)(v2 + 16);
  uint64_t v8 = *(void *)(v2 + 24);
  uint64_t v9 = (uint64_t *)(v2 + 32);
  uint64_t v10 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_100005F94;
  char v12 = (uint64_t (*)(uint64_t, uint64_t, int *, uint64_t, uint64_t *, uint64_t))((char *)&dword_1000F2D70
                                                                                     + dword_1000F2D70);
  return v12(a1, a2, v7, v8, v9, v10);
}

uint64_t sub_100056480(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1000043B4;
  return sub_100045E48(a1, a2, v7, v6);
}

uint64_t sub_100056534()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100056574@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CBB8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&type metadata accessor for SyncFacesRequest, (uint64_t)&unk_1000EE5A8, (uint64_t)&unk_1000F2E50, a2);
}

uint64_t sub_1000565C8()
{
  return sub_100056BAC((uint64_t (*)(void))&type metadata accessor for SyncFacesRequest);
}

uint64_t sub_1000565E0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for SyncFacesRequest() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageBody() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(int **)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = v2 + v7;
  uint64_t v14 = v2 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100005F94;
  return sub_10004DB38(a1, a2, v11, v12, v13, v14);
}

uint64_t sub_100056738@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CBB8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&type metadata accessor for ShuffleID, (uint64_t)&unk_1000EE5F8, (uint64_t)&unk_1000F2E90, a2);
}

uint64_t sub_10005678C()
{
  return sub_100056BAC((uint64_t (*)(void))&type metadata accessor for ShuffleID);
}

uint64_t sub_1000567A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for ShuffleID() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageBody() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(int **)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = v2 + v7;
  uint64_t v14 = v2 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100005F94;
  return sub_10004E5C4(a1, a2, v11, v12, v13, v14);
}

uint64_t sub_1000568FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100056944@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CBB8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&type metadata accessor for SyncFacesRequest, (uint64_t)&unk_1000EE648, (uint64_t)&unk_1000F2EC0, a2);
}

uint64_t sub_100056998()
{
  return sub_100056BAC((uint64_t (*)(void))&type metadata accessor for SyncFacesRequest);
}

uint64_t sub_1000569B0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for SyncFacesRequest() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageBody() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(int **)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = v2 + v7;
  uint64_t v14 = v2 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100005F94;
  return sub_10004F028(a1, a2, v11, v12, v13, v14);
}

uint64_t sub_100056B08()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100056B40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10004CBB8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&type metadata accessor for AlbumID, (uint64_t)&unk_1000EE698, (uint64_t)&unk_1000F2F08, a2);
}

uint64_t sub_100056B94()
{
  return sub_100056BAC((uint64_t (*)(void))&type metadata accessor for AlbumID);
}

uint64_t sub_100056BAC(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = type metadata accessor for MessageBody();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v5 + v6 + v9) & ~v9;
  uint64_t v11 = v10 + *(void *)(v8 + 64);
  uint64_t v12 = v4 | v9 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v1 + v10, v7);

  return _swift_deallocObject(v1, v11, v12);
}

uint64_t sub_100056D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(type metadata accessor for AlbumID() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(type metadata accessor for MessageBody() - 8) + 80);
  unint64_t v10 = v7 + v8 + v9;
  uint64_t v11 = *(int **)(v2 + 16);
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = v2 + v7;
  uint64_t v14 = v2 + (v10 & ~v9);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100005F94;
  return sub_10004FCE8(a1, a2, v11, v12, v13, v14);
}

uint64_t sub_100056E64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100005CB0(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t getEnumTagSinglePayload for PhonePhotoProcessorError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhonePhotoProcessorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100057024);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhonePhotoProcessorError()
{
  return &type metadata for PhonePhotoProcessorError;
}

unint64_t sub_100057060()
{
  unint64_t result = qword_1000F2F20;
  if (!qword_1000F2F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F2F20);
  }
  return result;
}

unint64_t *sub_1000570DC(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  BOOL v7 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    unint64_t v16 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_100054824(0, v6, 0);
    BOOL v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for StoredPhoto() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      StoredPhoto.localIdentifier.getter();
      unint64_t v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_100054824(v10 > 1, v11 + 1, 1);
        BOOL v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

id sub_1000572C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static SystemDirectory.folderURL(for:)();
  id v6 = [self defaultManager];
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  id v14 = 0;
  unsigned __int8 v10 = [v6 createDirectoryAtURL:v8 withIntermediateDirectories:1 attributes:0 error:&v14];

  id v11 = v14;
  if (v10)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(a1, v5, v2);
    return v11;
  }
  else
  {
    id v13 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_100057480(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for UUID();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v3[9] = v5;
  v3[10] = *(void *)(v5 - 8);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1000575CC, 0, 0);
}

uint64_t sub_1000575CC()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = type metadata accessor for StoredPhoto();
  v0[12] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v0[13] = v7;
  uint64_t v8 = v5;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v9(v8, v4, v6);
  StoredPhoto.localIdentifier.getter();
  static SystemDirectory.folderURL(for:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v10 = [self defaultManager];
  URL._bridgeToObjectiveC()(v11);
  id v13 = v12;
  v0[2] = 0;
  LODWORD(v3) = [v10 createDirectoryAtURL:v12 withIntermediateDirectories:1 attributes:0 error:v0 + 2];

  id v14 = (void *)v0[2];
  if (v3)
  {
    id v15 = v14;
    StoredPhoto.writeToCache()();
    v0[14] = v16;
    if (!v16)
    {
      uint64_t v17 = v0[3];
      v0[15] = *(void *)(v0[5] + OBJC_IVAR____TtC11photosfaced10PhotoCache_database);
      sub_100005CB0(&qword_1000F2CF8);
      unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v19 = swift_allocObject();
      v0[16] = v19;
      *(_OWORD *)(v19 + 16) = xmmword_1000D7AB0;
      v9(v19 + v18, v17, v6);
      type metadata accessor for PhotosFaceDatabase();
      sub_100063BB8(&qword_1000F2FF8, (void (*)(uint64_t))&type metadata accessor for PhotosFaceDatabase);
      uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
      return _swift_task_switch(sub_100057920, v21, v20);
    }
  }
  else
  {
    id v22 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  uint64_t v23 = v0[12];
  uint64_t v24 = v0[13];
  uint64_t v25 = v0[3];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
  return v26();
}

uint64_t sub_100057920()
{
  PhotosFaceDatabase.insert(storedPhotos:)(v0[16]);
  v0[17]._rawValue = v1;
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v2 = sub_100057A9C;
  }
  else {
    uint64_t v2 = sub_1000579E0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1000579E0()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_100057A9C()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[3];
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100057B88(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return _swift_task_switch(sub_100057C48, 0, 0);
}

uint64_t sub_100057C48()
{
  *(void *)(v0 + 80) = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtC11photosfaced10PhotoCache_database);
  type metadata accessor for PhotosFaceDatabase();
  sub_100063BB8(&qword_1000F2FF8, (void (*)(uint64_t))&type metadata accessor for PhotosFaceDatabase);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100057D10, v2, v1);
}

uint64_t sub_100057D10()
{
  *(void *)(v0 + 88) = PhotosFaceDatabase.queryPhotos(identifiers:)();
  *(void *)(v0 + 96) = 0;
  return _swift_task_switch(sub_100057DD0, 0, 0);
}

uint64_t sub_100057DD0()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[11];
  uint64_t v2 = (void (**)(char *, uint64_t))v0[6];
  swift_retain();
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_100063020(v3, v2);
  swift_release();
  swift_bridgeObjectRelease();
  if (sub_10005B9CC(v1, (uint64_t)v4))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = sub_100062BDC(v0[11]);
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_10005FD18((uint64_t)v4, v5);
    static Log.photos.getter();
    swift_retain_n();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v12 = v0[7];
    if (v9)
    {
      uint64_t v25 = v0[7];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 134218242;
      v0[3] = v6[2];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v13 + 12) = 2080;
      type metadata accessor for StoredPhoto();
      uint64_t v24 = v10;
      sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
      swift_retain();
      uint64_t v14 = Set.description.getter();
      unint64_t v16 = v15;
      swift_release();
      v0[4] = sub_100007E88(v14, v16, &v26);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Found %ld photos are marked as cached, but not actually on disk: %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v24, v25);
    }
    else
    {
      swift_release_n();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
  }
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_100062D78(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_1000570DC((uint64_t)v4);
  uint64_t v20 = sub_10005F794((uint64_t)v19, v18);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_10005F660((uint64_t)v20);
  swift_release();
  swift_task_dealloc();
  id v22 = (uint64_t (*)(char *, char *))v0[1];
  return v22(v4, v21);
}

uint64_t sub_10005812C()
{
  v1[5] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_100058218, 0, 0);
}

uint64_t sub_100058218()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC11photosfaced10PhotoCache_background);
  v0[9] = v2;
  uint64_t v3 = swift_allocObject();
  v0[10] = v3;
  *(void *)(v3 + 16) = &unk_1000F3068;
  *(void *)(v3 + 24) = v1;
  swift_retain();
  return _swift_task_switch(sub_1000582F8, v2, 0);
}

uint64_t sub_1000582F8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F3078;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(4, (uint64_t)&unk_1000F2930, v2);
  swift_release();
  swift_release();
  return _swift_task_switch(sub_1000583F4, 0, 0);
}

uint64_t sub_1000583F4()
{
  uint64_t v23 = v0;
  id v1 = [self defaultManager];
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC11photosfaced10PhotoCache_baseFolder);
  uint64_t v3 = v2;
  v0[2] = 0;
  unsigned int v4 = [v1 createDirectoryAtURL:v2 withIntermediateDirectories:1 attributes:0 error:v0 + 2];

  uint64_t v5 = (void *)v0[2];
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v5;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    static Log.cache.getter();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    os_log_type_t v8 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v8, type);
    uint64_t v11 = v0[7];
    uint64_t v10 = v0[8];
    uint64_t v12 = v0[6];
    if (v9)
    {
      log = v8;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      type metadata accessor for URL();
      sub_100063BB8(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_100007E88(v14, v15, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v13 + 12) = 2112;
      swift_errorRetain();
      uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
      v0[4] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v19 = v16;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, type, "Failed to create %s with error %@", (uint8_t *)v13, 0x16u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
    else
    {
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();

      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
    }
  }
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_1000587C4()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_100005F94;
  return sub_100058854();
}

uint64_t sub_100058854()
{
  v1[6] = v0;
  uint64_t v2 = type metadata accessor for Logger();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return _swift_task_switch(sub_100058930, 0, 0);
}

uint64_t sub_100058930()
{
  static Log.session.getter();
  id v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting Photo Cache Cleanup", v3, 2u);
    swift_slowDealloc();
  }
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[7];
  uint64_t v6 = v0[8];

  id v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[12] = v7;
  v0[13] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v5);
  os_log_type_t v8 = (void *)swift_task_alloc();
  v0[14] = v8;
  *os_log_type_t v8 = v0;
  v8[1] = sub_100058A6C;
  return sub_100059D90();
}

uint64_t sub_100058A6C()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_100059624;
  }
  else {
    os_log_type_t v2 = sub_100058B80;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100058B80()
{
  v0[16] = *(void *)(v0[6] + OBJC_IVAR____TtC11photosfaced10PhotoCache_database);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[17] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100058C24;
  return PhotosFaceDatabase.storedPhotos()();
}

uint64_t sub_100058C24(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = (void *)*v2;
  v4[18] = a1;
  v4[19] = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_100059804, 0, 0);
  }
  else
  {
    uint64_t v6 = (void *)swift_task_alloc();
    v4[20] = v6;
    *uint64_t v6 = v5;
    v6[1] = sub_100058DAC;
    return PhotosFaceDatabase.timePositions(for:)(a1);
  }
}

uint64_t sub_100058DAC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000592E4;
  }
  else
  {
    *(void *)(v4 + 176) = a1;
    uint64_t v5 = sub_100058ED4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100058ED4()
{
  uint64_t v25 = v0;
  uint64_t v1 = v0[18];
  os_log_type_t v2 = sub_1000C9738(v0[22], (uint64_t (*)(void, void, void))sub_10005B7F8, v0[6]);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100081278((uint64_t)v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100062D78(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_10005F794((uint64_t)v3, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_100062D78(v1);
  swift_bridgeObjectRelease();
  if (v6[2] <= *(void *)(v7 + 16) >> 3)
  {
    uint64_t v24 = v7;
    sub_100061DC8((uint64_t)v6);
    swift_release();
    if (*(void *)(v7 + 16)) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = (uint64_t)sub_10006018C((uint64_t)v6, v7);
    swift_release();
    if (*(void *)(v7 + 16))
    {
LABEL_3:
      static Log.session.getter();
      swift_bridgeObjectRetain_n();
      uint64_t v8 = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.default.getter();
      BOOL v10 = os_log_type_enabled(v8, v9);
      uint64_t v11 = (void (*)(uint64_t, uint64_t))v0[12];
      uint64_t v12 = v0[10];
      uint64_t v13 = v0[7];
      if (v10)
      {
        uint64_t v23 = v0[10];
        uint64_t v14 = swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 134218242;
        v0[4] = *(void *)(v7 + 16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        type metadata accessor for UUID();
        uint64_t v22 = v11;
        sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        swift_bridgeObjectRetain();
        uint64_t v15 = Set.description.getter();
        unint64_t v17 = v16;
        swift_bridgeObjectRelease();
        v0[5] = sub_100007E88(v15, v17, &v24);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v8, v9, "Found %ld photos that are missing on disk files. Removing %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v22(v23, v13);
      }
      else
      {
        swift_bridgeObjectRelease_n();

        v11(v12, v13);
      }
      uint64_t v20 = sub_10005F660(v7);
      v0[23] = v20;
      swift_bridgeObjectRelease();
      uint64_t v21 = (void *)swift_task_alloc();
      v0[24] = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1000594CC;
      return sub_10005A68C((uint64_t)v20);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1000592E4()
{
  swift_bridgeObjectRelease();
  static Log.cache.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed during cleanup: %@", v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000594CC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1000599E4, 0, 0);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_100059624()
{
  static Log.cache.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed during cleanup: %@", v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100059804()
{
  static Log.cache.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed during cleanup: %@", v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1000599E4()
{
  swift_release();
  static Log.cache.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 16) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Failed during cleanup: %@", v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 96))(*(void *)(v0 + 72), *(void *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100059BCC(int *a1)
{
  uint64_t v4 = (uint64_t (*)(void))((char *)a1 + *a1);
  os_log_type_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *os_log_type_t v2 = v1;
  v2[1] = sub_100059C98;
  return v4();
}

uint64_t sub_100059C98()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100059D90()
{
  v1[4] = v0;
  sub_100005CB0(&qword_1000F2858);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for Logger();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StoredPhoto();
  v1[9] = v3;
  v1[10] = *(void *)(v3 - 8);
  v1[11] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v1[12] = v4;
  v1[13] = *(void *)(v4 - 8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  return _swift_task_switch(sub_100059F48, 0, 0);
}

uint64_t sub_100059F48()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100059FE8;
  return PhotosFaceDatabase.unassociatedPhotos()();
}

uint64_t sub_100059FE8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 136) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_10005A168, 0, 0);
  }
}

uint64_t sub_10005A168()
{
  unint64_t v49 = v0;
  uint64_t v1 = v0[17];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[10];
    unint64_t v48 = &_swiftEmptyArrayStorage;
    sub_100054824(0, v2, 0);
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 64));
    uint64_t v40 = *(void *)(v4 + 56);
    os_log_type_t v43 = v5;
    uint64_t v7 = (void (**)(uint64_t, uint64_t))(v4 - 8);
    uint64_t v8 = &_swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = v0[11];
      uint64_t v10 = v0[9];
      v43(v9, v6, v10);
      StoredPhoto.localIdentifier.getter();
      (*v7)(v9, v10);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100054824(0, v8[2] + 1, 1);
        uint64_t v8 = v48;
      }
      unint64_t v12 = v8[2];
      unint64_t v11 = v8[3];
      if (v12 >= v11 >> 1)
      {
        sub_100054824(v11 > 1, v12 + 1, 1);
        uint64_t v8 = v48;
      }
      uint64_t v13 = v0[15];
      uint64_t v14 = v0[12];
      v8[2] = v12 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 32))((unint64_t)v8+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v12, v13, v14);
      unint64_t v48 = v8;
      v6 += v40;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = &_swiftEmptyArrayStorage;
  }
  static Log.cache.getter();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v41 = v0[7];
    uint64_t v44 = v0[6];
    uint64_t v46 = v0[8];
    uint64_t v17 = swift_slowAlloc();
    unint64_t v48 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134218242;
    v0[2] = v8[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v18 = Array.description.getter();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[3] = sub_100007E88(v18, v20, (uint64_t *)&v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Found %ld unassociated photos. Marking as purgable: %s", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v46, v44);
  }
  else
  {
    uint64_t v22 = v0[7];
    uint64_t v21 = v0[8];
    uint64_t v23 = v0[6];
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
  }
  uint64_t v24 = v8[2];
  uint64_t v25 = v0[13];
  if (v24)
  {
    uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v25 + 16);
    uint64_t v26 = v25 + 16;
    uint64_t v28 = (char *)v8 + ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64));
    unint64_t v29 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 40);
    uint64_t v45 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 32);
    uint64_t v47 = v27;
    uint64_t v39 = (void (**)(uint64_t, void, uint64_t))(v26 + 16);
    uint64_t v42 = *(void *)(v26 + 56);
    uint64_t v30 = (void (**)(uint64_t, uint64_t))(v26 - 8);
    while (1)
    {
      uint64_t v31 = v0[12];
      uint64_t v32 = v0[5];
      uint64_t v33 = v26;
      v47(v32, v28, v31);
      char v34 = *v29;
      (*v29)(v32, 0, 1, v31);
      if ((*v45)(v32, 1, v31) == 1) {
        break;
      }
      uint64_t v35 = v0[14];
      uint64_t v36 = v0[12];
      (*v39)(v35, v0[5], v36);
      sub_1000626E0(v35, 1);
      (*v30)(v35, v36);
      v28 += v42;
      --v24;
      uint64_t v26 = v33;
      if (!v24) {
        goto LABEL_19;
      }
    }
  }
  else
  {
    char v34 = *(void (**)(void, uint64_t, uint64_t, void))(v25 + 56);
LABEL_19:
    v34(v0[5], 1, 1, v0[12]);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v37 = (uint64_t (*)(void))v0[1];
  return v37();
}

uint64_t sub_10005A68C(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  uint64_t v3 = type metadata accessor for Logger();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v2[12] = v5;
  v2[13] = *(void *)(v5 - 8);
  v2[14] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2858);
  v2[15] = swift_task_alloc();
  return _swift_task_switch(sub_10005A870, 0, 0);
}

uint64_t sub_10005A870()
{
  *(void *)(v0 + 128) = *(void *)(*(void *)(v0 + 32) + OBJC_IVAR____TtC11photosfaced10PhotoCache_database);
  type metadata accessor for PhotosFaceDatabase();
  sub_100063BB8(&qword_1000F2FF8, (void (*)(uint64_t))&type metadata accessor for PhotosFaceDatabase);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10005A96C, v2, v1);
}

uint64_t sub_10005A96C()
{
  PhotosFaceDatabase.delete(identifiers:)(v0[3]);
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    rawValue = (uint64_t (*)(void))v0[1]._rawValue;
    return rawValue();
  }
  else
  {
    return _swift_task_switch(sub_10005AAA0, 0, 0);
  }
}

uint64_t sub_10005AAA0()
{
  uint64_t v64 = v0;
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v0[13];
  if (v2)
  {
    uint64_t v4 = v0 + 2;
    uint64_t v5 = v0[9];
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    uint64_t v6 = v3 + 16;
    uint64_t v62 = v7;
    uint64_t v8 = v1 + ((*(unsigned __int8 *)(v6 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 64));
    uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    uint64_t v55 = *(void *)(v6 + 56);
    unint64_t v56 = (void (**)(void, void, void))(v6 + 16);
    uint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    id v59 = (void (**)(uint64_t, uint64_t))(v5 + 8);
    uint64_t v50 = (void (**)(uint64_t, uint64_t))(v0[6] + 8);
    uint64_t v58 = (void (**)(uint64_t, uint64_t))(v6 - 8);
    swift_bridgeObjectRetain();
    os_log_type_t v61 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 40);
    while (1)
    {
      uint64_t v14 = v0[15];
      uint64_t v15 = v0[12];
      v62(v14, v8, v15);
      char v57 = *v61;
      (*v61)(v14, 0, 1, v15);
      if ((*v60)(v14, 1, v15) == 1) {
        goto LABEL_16;
      }
      (*v56)(v0[14], v0[15], v0[12]);
      static SystemDirectory.folderURL(for:)();
      id v16 = [self defaultManager];
      URL._bridgeToObjectiveC()(v17);
      unint64_t v19 = v18;
      v0[2] = 0;
      unsigned int v20 = [v16 removeItemAtURL:v18 error:v4];

      uint64_t v21 = (void *)v0[2];
      if (v20)
      {
        id v9 = v21;
      }
      else
      {
        id v22 = v21;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        URL.path(percentEncoded:)(1);
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v24 = [v16 fileExistsAtPath:v23];

        if (v24)
        {
          uint64_t v26 = v0[10];
          uint64_t v25 = v0[11];
          uint64_t v27 = v0[8];
          swift_willThrow();

          static Log.cache.getter();
          (*v51)(v26, v25, v27);
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v28 = Logger.logObject.getter();
          os_log_type_t v29 = static os_log_type_t.error.getter();
          BOOL v30 = os_log_type_enabled(v28, v29);
          uint64_t v31 = v0[14];
          uint64_t v32 = v0[12];
          uint64_t v33 = v0[10];
          uint64_t v34 = v0[8];
          uint64_t v53 = v0[7];
          uint64_t v54 = v0[11];
          uint64_t v52 = v0[5];
          if (v30)
          {
            uint64_t v49 = v0[14];
            uint64_t v35 = swift_slowAlloc();
            uint64_t v48 = v32;
            uint64_t v46 = (void *)swift_slowAlloc();
            v63[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v35 = 136315394;
            sub_100063BB8(&qword_1000F2C78, (void (*)(uint64_t))&type metadata accessor for URL);
            uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v37 = v34;
            uint64_t v47 = v34;
            *(void *)(v35 + 4) = sub_100007E88(v36, v38, v63);
            swift_bridgeObjectRelease();
            uint64_t v39 = *v59;
            (*v59)(v33, v37);
            *(_WORD *)(v35 + 12) = 2112;
            swift_errorRetain();
            uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v35 + 14) = v40;
            *uint64_t v46 = v40;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "Failed to delete %s with error: %@", (uint8_t *)v35, 0x16u);
            sub_100005CB0(qword_1000F2278);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
            (*v50)(v53, v52);
            v39(v54, v47);
            (*v58)(v49, v48);
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            uint64_t v41 = v34;
            uint64_t v42 = *v59;
            (*v59)(v33, v41);
            swift_errorRelease();
            (*v50)(v53, v52);
            v42(v54, v41);
            (*v58)(v31, v32);
          }
          uint64_t v4 = v0 + 2;
          goto LABEL_5;
        }
        swift_errorRelease();
      }
      uint64_t v10 = v0[14];
      uint64_t v12 = v0[11];
      uint64_t v11 = v0[12];
      uint64_t v13 = v0[8];

      (*v59)(v12, v13);
      (*v58)(v10, v11);
LABEL_5:
      v8 += v55;
      if (!--v2)
      {
        v57(v0[15], 1, 1, v0[12]);
        goto LABEL_16;
      }
    }
  }
  os_log_type_t v43 = *(void (**)(void, uint64_t, uint64_t, void))(v3 + 56);
  swift_bridgeObjectRetain();
  v43(v0[15], 1, 1, v0[12]);
LABEL_16:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v44 = (uint64_t (*)(void))v0[1];
  return v44();
}

uint64_t sub_10005B0FC()
{
  uint64_t v0 = sub_100005CB0(&qword_1000F3030);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  StoredPhoto.localIdentifier.getter();
  uint64_t v7 = StoredPhotoLayout.timePosition.getter();
  StoredPhotoLayout.maskImage.getter();
  uint64_t v8 = type metadata accessor for StoredPhotoLayout.ImageLocation();
  int v9 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v2, 1, v8) != 1;
  sub_100016B90((uint64_t)v2, &qword_1000F3030);
  LOBYTE(v9) = sub_1000632F0((uint64_t)v6, v7, v9);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9 & 1;
}

uint64_t sub_10005B2AC(uint64_t (*a1)(char *), char a2, uint64_t a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for StoredPhotoLayout();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v31 = (char *)&v27 - v11;
  uint64_t v12 = *(void *)(a3 + 64);
  uint64_t v27 = a3 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  uint64_t v30 = v7 + 16;
  int64_t v28 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v29 = v7 + 32;
  id v16 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v33 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_19:
    unsigned __int8 v24 = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v31, *(void *)(v33 + 56) + *(void *)(v7 + 72) * v20, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v24, v6);
    char v25 = v32(v10);
    if (v3)
    {
      (*v16)(v10, v6);
      swift_release();
      return a2 & 1;
    }
    char v26 = v25;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v16)(v10, v6);
    if ((v26 & 1) == 0)
    {
      a2 = 0;
      goto LABEL_28;
    }
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v28) {
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v28)
  {
LABEL_27:
    a2 = 1;
LABEL_28:
    swift_release();
    return a2 & 1;
  }
  unint64_t v22 = *(void *)(v27 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v18 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v28) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v27 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10005B5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000043B4;
  return sub_100057480(a1, a2);
}

uint64_t sub_10005B660(const char *a1, void *a2, uint64_t a3)
{
  uint64_t result = fsctl(a1, 0xC0084A44uLL, a2, 0);
  if (result)
  {
    int v5 = result;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
    sub_100005CB0(&qword_1000F3000);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1000D7AB0;
    *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *(void *)(inited + 40) = v8;
    uint64_t v9 = type metadata accessor for URL();
    *(void *)(inited + 72) = v9;
    uint64_t v10 = sub_10003ED9C((uint64_t *)(inited + 48));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v10, a3, v9);
    sub_100040AE4(inited);
    id v11 = objc_allocWithZone((Class)NSError);
    NSString v12 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 initWithDomain:v12 code:v6 userInfo:isa];

    return swift_willThrow();
  }
  return result;
}

BOOL sub_10005B7F8(uint64_t a1, uint64_t a2, int a3)
{
  return (sub_1000632F0(a1, a2, a3) & 1) == 0;
}

uint64_t sub_10005B818()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC11photosfaced10PhotoCache_baseFolder;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_10005B8D8()
{
  return type metadata accessor for PhotoCache();
}

uint64_t type metadata accessor for PhotoCache()
{
  uint64_t result = qword_1000F2F58;
  if (!qword_1000F2F58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10005B92C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10005B9CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhoto();
  uint64_t v5 = __chkstk_darwin(v4);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      uint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      uint64_t v17 = v7;
      do
      {
        uint64_t v18 = a1;
        unint64_t v19 = v9;
        unint64_t v20 = v9;
        uint64_t v21 = v32;
        v32((uint64_t)v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_100063BB8(&qword_1000F3020, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
        char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
        unsigned __int8 v24 = *v30;
        (*v30)(v17, v4);
        v24((uint64_t)v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_10005BBEC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for NetworkConnection();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v22;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v19 = sub_10005C83C(v7, result + 1);
    Swift::Int v24 = v19;
    if (*(void *)(v19 + 24) <= *(void *)(v19 + 16))
    {
      swift_retain();
      sub_10005CA64();
      uint64_t v20 = v24;
    }
    else
    {
      uint64_t v20 = v19;
      swift_retain();
    }
    sub_10005D94C(a2, v20);
    *uint64_t v3 = v20;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  swift_retain();
  Swift::UInt64 v10 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v10);
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = v11 & ~v12;
  if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v18 = swift_retain();
    sub_10005DA10(v18, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v23;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v14 = ~v12;
  while (1)
  {
    swift_retain();
    swift_retain();
    uint64_t v15 = NWConnection.identifier.getter();
    swift_release();
    swift_retain();
    uint64_t v16 = NWConnection.identifier.getter();
    swift_release();
    swift_release();
    if (v15 == v16) {
      break;
    }
    unint64_t v13 = (v13 + 1) & v14;
    if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
  swift_retain();
  return 0;
}

uint64_t sub_10005BED0(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ShuffleID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100063BB8(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100063BB8(&qword_1000F2E20, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10005DBDC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10005C1F4(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10005DE98((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_10005C518(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StoredPhoto();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100063BB8(&qword_1000F3020, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10005E154((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

Swift::Int sub_10005C83C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100005CB0(&qword_1000F3038);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for NetworkConnection();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        if (*(void *)(v15 + 24) <= *(void *)(v15 + 16))
        {
          sub_10005CA64();
          uint64_t v2 = v15;
        }
        Hasher.init(_seed:)();
        swift_retain();
        Swift::UInt64 v3 = NWConnection.identifier.getter();
        swift_release();
        Hasher._combine(_:)(v3);
        Swift::Int result = Hasher._finalize()();
        uint64_t v5 = v2 + 56;
        uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v7 = result & ~v6;
        unint64_t v8 = v7 >> 6;
        if (((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6))) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*(void *)(v2 + 56 + 8 * (v7 >> 6)))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v8 == v11;
            if (v8 == v11) {
              unint64_t v8 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v5 + 8 * v8);
          }
          while (v13 == -1);
          unint64_t v9 = __clz(__rbit64(~v13)) + (v8 << 6);
        }
        *(void *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        *(void *)(*(void *)(v2 + 48) + 8 * v9) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_10005CA64()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100005CB0(&qword_1000F3038);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v28 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v28[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v28[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v28[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero(v28, ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v28 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v28[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v28[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      swift_retain();
      Swift::UInt64 v19 = NWConnection.identifier.getter();
      swift_release();
      Hasher._combine(_:)(v19);
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v9 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

uint64_t sub_10005CD58()
{
  unint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for ShuffleID();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100005CB0(&qword_1000F3048);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100063BB8(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

uint64_t sub_10005D154()
{
  unint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100005CB0(&qword_1000F3018);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

uint64_t sub_10005D550()
{
  unint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for StoredPhoto();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_100005CB0(&qword_1000F3028);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                unint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v6;
  return result;
}

unint64_t sub_10005D94C(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  swift_retain();
  Swift::UInt64 v4 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v4);
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

Swift::Int sub_10005DA10(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10005CA64();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (Swift::Int)sub_10005E410();
      goto LABEL_12;
    }
    sub_10005E88C();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  swift_retain();
  Swift::UInt64 v9 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v9);
  unint64_t result = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = ~v10;
    type metadata accessor for NetworkConnection();
    do
    {
      swift_retain();
      swift_retain();
      uint64_t v12 = NWConnection.identifier.getter();
      swift_release();
      swift_retain();
      uint64_t v13 = NWConnection.identifier.getter();
      swift_release();
      unint64_t result = swift_release();
      if (v12 == v13) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v11;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v14 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v14 + 48) + 8 * a2) = v5;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (!v16)
  {
    *(void *)(v14 + 16) = v17;
    return result;
  }
  __break(1u);
LABEL_15:
  unint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10005DBDC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for ShuffleID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt64 v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10005CD58();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10005E5DC((uint64_t (*)(void))&type metadata accessor for ShuffleID, &qword_1000F3048);
      goto LABEL_12;
    }
    sub_10005EB50();
  }
  uint64_t v12 = *v3;
  sub_100063BB8(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100063BB8(&qword_1000F2E20, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10005DE98(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt64 v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10005D154();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10005E5DC((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1000F3018);
      goto LABEL_12;
    }
    sub_10005EF00();
  }
  uint64_t v12 = *v3;
  sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10005E154(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for StoredPhoto();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt64 v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10005D550();
  }
  else
  {
    if (v11 > v10)
    {
      sub_10005E5DC((uint64_t (*)(void))&type metadata accessor for StoredPhoto, &qword_1000F3028);
      goto LABEL_12;
    }
    sub_10005F2B0();
  }
  uint64_t v12 = *v3;
  sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    int64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100063BB8(&qword_1000F3020, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void *sub_10005E410()
{
  unint64_t v1 = v0;
  sub_100005CB0(&qword_1000F3038);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_10005E5BC()
{
  return sub_10005E5DC((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1000F3018);
}

void *sub_10005E5DC(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - v7;
  sub_100005CB0(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  uint64_t result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    uint64_t result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10005E88C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100005CB0(&qword_1000F3038);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v27) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    swift_retain();
    swift_retain();
    Swift::UInt64 v19 = NWConnection.identifier.getter();
    swift_release();
    Hasher._combine(_:)(v19);
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v9 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v12 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v27) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10005EB50()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ShuffleID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100005CB0(&qword_1000F3048);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100063BB8(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10005EF00()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100005CB0(&qword_1000F3018);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10005F2B0()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StoredPhoto();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100005CB0(&qword_1000F3028);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    unint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

char *sub_10005F660(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  sub_100005CB0(&qword_1000F2A30);
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (char *)j__malloc_size(v6);
  if (v4)
  {
    if (&result[-v5] != (char *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)&result[-v5] / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100062150(&v10, (char *)v6 + v5, v1, a1);
      sub_10000E730();
      if (v9 == v1) {
        return (char *)v6;
      }
      __break(1u);
      return (char *)&_swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10005F794(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  os_log_type_t v43 = (char *)v33 - v12;
  if (*(void *)(a2 + 16))
  {
    uint64_t v44 = a1;
    unint64_t v45 = 0;
    unint64_t v13 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v13)
    {
      unint64_t v14 = 0;
      uint64_t v38 = (void (**)(char *, char *, uint64_t))(v8 + 32);
      uint64_t v39 = v8 + 48;
      uint64_t v41 = (char *)(a2 + 56);
      uint64_t v42 = v8 + 16;
      int64_t v15 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v40 = v8 + 56;
      v33[1] = (v8 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v34 = v6;
      uint64_t v36 = (v8 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v37 = v8;
      while (1)
      {
        if (v14 >= v13) {
          __break(1u);
        }
        uint64_t v16 = *(void *)(v8 + 72);
        unint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        v17(v6, a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v16 * v14, v7);
        unint64_t v45 = v14 + 1;
        unint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
        v18(v6, 0, 1, v7);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
          break;
        }
        uint64_t v35 = v18;
        (*v38)(v43, v6, v7);
        sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v21 = v19 & ~v20;
        if ((*(void *)&v41[(v21 >> 3) & 0xFFFFFFFFFFFFFF8] >> v21))
        {
          uint64_t v22 = a2;
          uint64_t v23 = ~v20;
          while (1)
          {
            v17(v11, *(void *)(v22 + 48) + v21 * v16, v7);
            sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v25 = *v15;
            (*v15)(v11, v7);
            if (v24) {
              break;
            }
            unint64_t v21 = (v21 + 1) & v23;
            if (((*(void *)&v41[(v21 >> 3) & 0xFFFFFFFFFFFFFF8] >> v21) & 1) == 0)
            {
              a2 = v22;
              uint64_t v6 = v34;
              goto LABEL_12;
            }
          }
          uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v25)(v43, v7);
          char v27 = *(unsigned char *)(v22 + 32);
          unint64_t v28 = (unint64_t)((1 << v27) + 63) >> 6;
          size_t v29 = 8 * v28;
          if ((v27 & 0x3Fu) <= 0xD
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v33 - ((v29 + 15) & 0x3FFFFFFFFFFFFFF0), v41, v29);
            unint64_t v30 = sub_100060850((void *)((char *)v33 - ((v29 + 15) & 0x3FFFFFFFFFFFFFF0)), v28, v22, v21, &v44);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            BOOL v31 = (void *)swift_slowAlloc();
            memcpy(v31, v41, v29);
            unint64_t v30 = sub_100060850((unint64_t *)v31, v28, v22, v21, &v44);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return v30;
        }
        uint64_t v25 = *v15;
LABEL_12:
        v25(v43, v7);
        a1 = v44;
        unint64_t v14 = v45;
        unint64_t v13 = *(void *)(v44 + 16);
        uint64_t v8 = v37;
        if (v45 == v13)
        {
          v35(v6, 1, 1, v7);
          break;
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    }
    swift_bridgeObjectRelease();
    sub_100016B90((uint64_t)v6, &qword_1000F2858);
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_10005FD18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoredPhoto();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v30 - v9;
  if (*(void *)(a2 + 16))
  {
    uint64_t v36 = a1;
    unint64_t v10 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v33 = v5 + 16;
      uint64_t v34 = (char *)(a2 + 56);
      uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v31 = v5;
      uint64_t v32 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v11 >= v10) {
          __break(1u);
        }
        uint64_t v13 = *(void *)(v5 + 72);
        unint64_t v14 = a1
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + v13 * v11;
        unint64_t v37 = v11 + 1;
        int64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        v15(v35, v14, v4);
        sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
        uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18)) {
          break;
        }
        uint64_t v22 = *v12;
LABEL_11:
        v22(v35, v4);
        a1 = v36;
        unint64_t v11 = v37;
        unint64_t v10 = *(void *)(v36 + 16);
        if (v37 == v10) {
          goto LABEL_12;
        }
      }
      uint64_t v19 = a2;
      uint64_t v20 = ~v17;
      while (1)
      {
        v15(v8, *(void *)(v19 + 48) + v18 * v13, v4);
        sub_100063BB8(&qword_1000F3020, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v22 = *v12;
        (*v12)(v8, v4);
        if (v21) {
          break;
        }
        unint64_t v18 = (v18 + 1) & v20;
        if (((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18) & 1) == 0)
        {
          a2 = v19;
          uint64_t v5 = v31;
          goto LABEL_11;
        }
      }
      uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v22)(v35, v4);
      char v24 = *(unsigned char *)(v19 + 32);
      unint64_t v25 = (unint64_t)((1 << v24) + 63) >> 6;
      size_t v26 = 8 * v25;
      if ((v24 & 0x3Fu) <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v26);
        char v27 = sub_100060D34((unint64_t *)((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v28 = (void *)swift_slowAlloc();
        memcpy(v28, v34, v26);
        char v27 = sub_100060D34((unint64_t *)v28, v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
        swift_slowDealloc();
      }
      return v27;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_10006018C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v59 = (char *)&v49 - v12;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = ~v13;
  uint64_t v15 = a1 + 56;
  uint64_t v16 = -v13;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & *(void *)(a1 + 56);
  uint64_t v60 = a1;
  uint64_t v61 = a1 + 56;
  uint64_t v54 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
  uint64_t v55 = v6;
  uint64_t v62 = v14;
  uint64_t v63 = 0;
  unint64_t v64 = v18;
  uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v57 = v8 + 16;
  uint64_t v58 = (char *)(a2 + 56);
  uint64_t v19 = (void (**)(char *, uint64_t))(v8 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  uint64_t v56 = v8;
  uint64_t v52 = a2;
  uint64_t v50 = 0;
  if (!v18) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v21 = (v18 - 1) & v18;
  unint64_t v22 = __clz(__rbit64(v18)) | (v20 << 6);
  int64_t v23 = v20;
LABEL_7:
  unint64_t v24 = *(void *)(a1 + 48) + *(void *)(v8 + 72) * v22;
  unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v26 = (uint64_t)v55;
  v25(v55, v24, v7);
  uint64_t v27 = 0;
  while (1)
  {
    (*v54)(v26, v27, 1, v7);
    uint64_t v60 = a1;
    uint64_t v61 = v15;
    uint64_t v62 = v14;
    uint64_t v63 = v23;
    unint64_t v64 = v21;
    if ((*v53)(v26, 1, v7) == 1)
    {
      sub_10000E730();
      sub_100016B90(v26, &qword_1000F2858);
      return (void *)v52;
    }
    (*v51)(v59, v26, v7);
    uint64_t v31 = v52;
    sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v33 = -1 << *(unsigned char *)(v31 + 32);
    unint64_t v34 = v32 & ~v33;
    if ((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34)) {
      break;
    }
    uint64_t v40 = *v19;
    uint64_t v8 = v56;
LABEL_35:
    v40(v59, v7);
    int64_t v20 = v63;
    unint64_t v18 = v64;
    a1 = v60;
    uint64_t v15 = v61;
    uint64_t v14 = v62;
    uint64_t v50 = v63;
    if (v64) {
      goto LABEL_6;
    }
LABEL_8:
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      __break(1u);
    }
    int64_t v28 = (unint64_t)(v14 + 64) >> 6;
    if (v23 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v23);
    if (v29) {
      goto LABEL_11;
    }
    v20 += 2;
    if (v23 + 1 >= v28) {
      goto LABEL_37;
    }
    unint64_t v29 = *(void *)(v15 + 8 * v20);
    if (v29) {
      goto LABEL_14;
    }
    if (v23 + 2 >= v28) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v15 + 8 * (v23 + 2));
    if (v29)
    {
      v23 += 2;
      goto LABEL_11;
    }
    int64_t v20 = v23 + 3;
    if (v23 + 3 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v20);
      if (v29)
      {
LABEL_14:
        int64_t v23 = v20;
LABEL_11:
        uint64_t v21 = (v29 - 1) & v29;
        unint64_t v22 = __clz(__rbit64(v29)) + (v23 << 6);
        goto LABEL_7;
      }
      v23 += 4;
      if (v23 >= v28)
      {
LABEL_26:
        uint64_t v21 = 0;
        uint64_t v27 = 1;
        int64_t v23 = v20;
        goto LABEL_27;
      }
      unint64_t v29 = *(void *)(v15 + 8 * v23);
      if (v29) {
        goto LABEL_11;
      }
      int64_t v23 = v28 - 1;
      uint64_t v30 = v50 + 6;
      while (v28 != v30)
      {
        unint64_t v29 = *(void *)(v15 + 8 * v30++);
        if (v29)
        {
          int64_t v23 = v30 - 1;
          goto LABEL_11;
        }
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v27 = 1;
      goto LABEL_27;
    }
    uint64_t v21 = 0;
    uint64_t v27 = 1;
    v23 += 2;
LABEL_27:
    uint64_t v26 = (uint64_t)v55;
  }
  uint64_t v50 = (unint64_t)v19 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v35 = v31;
  uint64_t v36 = ~v33;
  uint64_t v37 = *(void *)(v56 + 72);
  uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v56 + 16);
  while (1)
  {
    v38(v11, *(void *)(v35 + 48) + v37 * v34, v7);
    sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
    char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v40 = *v19;
    (*v19)(v11, v7);
    if (v39) {
      break;
    }
    unint64_t v34 = (v34 + 1) & v36;
    if (((*(void *)&v58[(v34 >> 3) & 0xFFFFFFFFFFFFFF8] >> v34) & 1) == 0)
    {
      uint64_t v8 = v56;
      goto LABEL_35;
    }
  }
  uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v40)(v59, v7);
  char v42 = *(unsigned char *)(v35 + 32);
  unint64_t v43 = (unint64_t)((1 << v42) + 63) >> 6;
  size_t v44 = 8 * v43;
  if ((v42 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe);
    memcpy((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0), v58, v44);
    unint64_t v45 = sub_10006112C((unint64_t *)((char *)&v49 - ((v44 + 15) & 0x3FFFFFFFFFFFFFF0)), v43, v35, v34, &v60);
    swift_release();
    sub_10000E730();
    return v45;
  }
  else
  {
    uint64_t v47 = (void *)swift_slowAlloc();
    memcpy(v47, v58, v44);
    uint64_t v48 = sub_10006112C((unint64_t *)v47, v43, v35, v34, &v60);
    swift_release();
    sub_10000E730();
    swift_slowDealloc();
    return v48;
  }
}

void *sub_100060850(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v43 = a2;
  uint64_t v10 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v14);
  uint64_t v20 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  size_t v44 = a1;
  uint64_t v45 = v20 - 1;
  uint64_t v21 = *a5;
  unint64_t v22 = a5[1];
  unint64_t v23 = *(void *)(*a5 + 16);
  uint64_t v54 = a3;
  if (v22 == v23)
  {
    uint64_t v24 = v43;
    uint64_t v25 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v12, 1, 1, v13);
LABEL_22:
    sub_100016B90((uint64_t)v12, &qword_1000F2858);
    uint64_t v41 = v54;
    swift_retain();
    return (void *)sub_1000616B0(v44, v24, v25, v41);
  }
  uint64_t v42 = v5;
  uint64_t v53 = v19 + 56;
  uint64_t v52 = v19 + 48;
  uint64_t v50 = a5;
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v55 = a3 + 56;
  uint64_t v56 = v19 + 16;
  uint64_t v57 = (void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v26 = v19;
  uint64_t v46 = v12;
  uint64_t v49 = v19;
  uint64_t v58 = (char *)&v42 - v18;
  while (v22 < v23)
  {
    uint64_t v28 = *(void *)(v26 + 72);
    unint64_t v29 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
    v29(v12, v21 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80)) + v28 * v22, v13);
    a5[1] = v22 + 1;
    uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 56);
    v48(v12, 0, 1, v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v12, 1, v13) == 1)
    {
      uint64_t v24 = v43;
      uint64_t v25 = v45;
      goto LABEL_22;
    }
    (*v51)(v58, v12, v13);
    uint64_t v30 = v54;
    sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v31 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v32 = v30;
    uint64_t v33 = -1 << *(unsigned char *)(v30 + 32);
    unint64_t v34 = v31 & ~v33;
    if (((*(void *)(v55 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
    {
      uint64_t v27 = *v57;
LABEL_5:
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v27)(v58, v13);
      goto LABEL_6;
    }
    uint64_t v47 = (unint64_t)v57 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v35 = v32;
    uint64_t v36 = ~v33;
    while (1)
    {
      v29(v16, *(void *)(v35 + 48) + v34 * v28, v13);
      sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v27 = *v57;
      (*v57)(v16, v13);
      if (v37) {
        break;
      }
      unint64_t v34 = (v34 + 1) & v36;
      if (((*(void *)(v55 + ((v34 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v34) & 1) == 0)
      {
        uint64_t v12 = v46;
        goto LABEL_5;
      }
    }
    uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v27)(v58, v13);
    uint64_t v38 = (v34 >> 3) & 0x1FFFFFFFFFFFFFF8;
    uint64_t v39 = *(unint64_t *)((char *)v44 + v38);
    *(unint64_t *)((char *)v44 + v38) = v39 & ~(1 << v34);
    if ((v39 & (1 << v34)) == 0)
    {
      uint64_t v12 = v46;
LABEL_6:
      uint64_t v26 = v49;
      a5 = v50;
      goto LABEL_7;
    }
    uint64_t v40 = v45 - 1;
    uint64_t v26 = v49;
    a5 = v50;
    if (__OFSUB__(v45, 1)) {
      goto LABEL_24;
    }
    uint64_t v12 = v46;
    --v45;
    if (!v40) {
      return &_swiftEmptySetSingleton;
    }
LABEL_7:
    uint64_t v21 = *a5;
    unint64_t v22 = a5[1];
    unint64_t v23 = *(void *)(*a5 + 16);
    if (v22 == v23)
    {
      uint64_t v24 = v43;
      uint64_t v25 = v45;
      v48(v12, 1, 1, v13);
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

void *sub_100060D34(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for StoredPhoto();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t result = (void *)__chkstk_darwin(v14);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v22 = *(unint64_t *)((char *)a1 + v21);
  uint64_t v45 = a1;
  *(unint64_t *)((char *)a1 + v21) = v22 & ((-1 << a4) - 1);
  uint64_t v23 = v20 - 1;
  uint64_t v24 = *a5;
  unint64_t v25 = a5[1];
  unint64_t v26 = *(void *)(*a5 + 16);
  uint64_t v44 = a2;
  uint64_t v46 = v23;
  if (v25 == v26)
  {
    uint64_t v27 = a3;
LABEL_3:
    swift_retain();
    return (void *)sub_100061A3C(v45, v44, v46, v27);
  }
  else
  {
    uint64_t v55 = v19;
    uint64_t v54 = v16 + 16;
    uint64_t v49 = v16 + 32;
    uint64_t v50 = v17;
    uint64_t v51 = v16;
    uint64_t v52 = a3 + 56;
    uint64_t v28 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v27 = a3;
    unint64_t v29 = a5;
    uint64_t v47 = a5;
    while (v25 < v26)
    {
      uint64_t v32 = v50;
      uint64_t v31 = v51;
      uint64_t v33 = *(unsigned __int8 *)(v51 + 80);
      uint64_t v53 = *(void *)(v51 + 72);
      unint64_t v34 = *(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16);
      v34(v50, v24 + ((v33 + 32) & ~v33) + v53 * v25, v10);
      v29[1] = v25 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v55, v32, v10);
      sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
      uint64_t v35 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v36 = -1 << *(unsigned char *)(v27 + 32);
      unint64_t v37 = v35 & ~v36;
      if ((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37))
      {
        uint64_t v48 = (unint64_t)v28 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v38 = v27;
        uint64_t v39 = ~v36;
        while (1)
        {
          v34((uint64_t)v13, *(void *)(v38 + 48) + v37 * v53, v10);
          sub_100063BB8(&qword_1000F3020, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
          char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v30 = *v28;
          (*v28)(v13, v10);
          if (v40) {
            break;
          }
          unint64_t v37 = (v37 + 1) & v39;
          if (((*(void *)(v52 + ((v37 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v37) & 1) == 0)
          {
            uint64_t v27 = v38;
            unint64_t v29 = v47;
            goto LABEL_7;
          }
        }
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
        uint64_t v41 = (v37 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v42 = *(unint64_t *)((char *)v45 + v41);
        *(unint64_t *)((char *)v45 + v41) = v42 & ~(1 << v37);
        if ((v42 & (1 << v37)) != 0)
        {
          uint64_t v43 = v46 - 1;
          if (__OFSUB__(v46, 1)) {
            goto LABEL_21;
          }
          uint64_t v27 = v38;
          unint64_t v29 = v47;
          --v46;
          if (!v43) {
            return &_swiftEmptySetSingleton;
          }
        }
        else
        {
          uint64_t v27 = v38;
          unint64_t v29 = v47;
        }
      }
      else
      {
        uint64_t v30 = *v28;
LABEL_7:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v30)(v55, v10);
      }
      uint64_t v24 = *v29;
      unint64_t v25 = v29[1];
      unint64_t v26 = *(void *)(*v29 + 16);
      if (v25 == v26) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

void *sub_10006112C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v52 = a2;
  uint64_t v9 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (void *)__chkstk_darwin(v13);
  uint64_t v65 = (char *)&v52 - v17;
  uint64_t v18 = *(void *)(a3 + 16);
  uint64_t v19 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v20 = *(unint64_t *)((char *)a1 + v19);
  uint64_t v54 = a1;
  uint64_t v55 = v11;
  *(unint64_t *)((char *)a1 + v19) = v20 & ((-1 << a4) - 1);
  uint64_t v22 = v21;
  uint64_t v23 = v18 - 1;
  uint64_t v63 = v21 + 16;
  uint64_t v64 = a3;
  uint64_t v58 = (unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  id v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v56 = a5;
  uint64_t v57 = (void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v62 = a3 + 56;
  uint64_t v24 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v60 = v21;
  while (2)
  {
    uint64_t v53 = v23;
    do
    {
      while (1)
      {
        uint64_t v26 = *a5;
        uint64_t v27 = a5[1];
        uint64_t v29 = a5[2];
        int64_t v28 = a5[3];
        unint64_t v30 = a5[4];
        if (v30)
        {
          uint64_t v61 = (v30 - 1) & v30;
          unint64_t v31 = __clz(__rbit64(v30)) | (v28 << 6);
LABEL_7:
          unint64_t v32 = *(void *)(v26 + 48) + *(void *)(v22 + 72) * v31;
          uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
          uint64_t v34 = v26;
          v33(v11, v32, v12);
          uint64_t v35 = 0;
          goto LABEL_8;
        }
        int64_t v44 = v28 + 1;
        if (__OFADD__(v28, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        int64_t v45 = (unint64_t)(v29 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v44);
        if (v46) {
          goto LABEL_17;
        }
        int64_t v49 = v28 + 2;
        if (v28 + 2 >= v45) {
          goto LABEL_35;
        }
        unint64_t v46 = *(void *)(v27 + 8 * v49);
        if (v46) {
          goto LABEL_23;
        }
        if (v28 + 3 >= v45) {
          goto LABEL_36;
        }
        unint64_t v46 = *(void *)(v27 + 8 * (v28 + 3));
        if (v46)
        {
          int64_t v44 = v28 + 3;
          goto LABEL_17;
        }
        int64_t v49 = v28 + 4;
        if (v28 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v27 + 8 * v49);
          if (v46)
          {
LABEL_23:
            int64_t v44 = v49;
LABEL_17:
            uint64_t v61 = (v46 - 1) & v46;
            unint64_t v31 = __clz(__rbit64(v46)) + (v44 << 6);
            int64_t v28 = v44;
            goto LABEL_7;
          }
          int64_t v44 = v28 + 5;
          if (v28 + 5 < v45)
          {
            unint64_t v46 = *(void *)(v27 + 8 * v44);
            if (v46) {
              goto LABEL_17;
            }
            int64_t v44 = v45 - 1;
            int64_t v50 = v28 + 6;
            while (v45 != v50)
            {
              unint64_t v46 = *(void *)(v27 + 8 * v50++);
              if (v46)
              {
                int64_t v44 = v50 - 1;
                goto LABEL_17;
              }
            }
LABEL_35:
            uint64_t v61 = 0;
            uint64_t v35 = 1;
            int64_t v28 = v44;
            uint64_t v34 = v26;
            goto LABEL_8;
          }
LABEL_36:
          uint64_t v61 = 0;
          uint64_t v35 = 1;
          int64_t v28 = v49;
          uint64_t v34 = v26;
          goto LABEL_8;
        }
        uint64_t v61 = 0;
        uint64_t v35 = 1;
        v28 += 3;
        uint64_t v34 = v26;
LABEL_8:
        (*v59)(v11, v35, 1, v12);
        *a5 = v34;
        a5[1] = v27;
        a5[2] = v29;
        a5[3] = v28;
        a5[4] = v61;
        if ((*v58)(v11, 1, v12) == 1)
        {
          sub_100016B90((uint64_t)v11, &qword_1000F2858);
          uint64_t v51 = v64;
          swift_retain();
          return (void *)sub_1000616B0(v54, v52, v53, v51);
        }
        (*v57)(v65, v11, v12);
        uint64_t v36 = v64;
        sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v37 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v38 = -1 << *(unsigned char *)(v36 + 32);
        unint64_t v39 = v37 & ~v38;
        if ((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39)) {
          break;
        }
        unint64_t v25 = *v24;
        uint64_t v22 = v60;
LABEL_4:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      }
      uint64_t v61 = (unint64_t)v24 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v40 = ~v38;
      uint64_t v41 = *(void *)(v60 + 72);
      uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v60 + 16);
      while (1)
      {
        v42(v15, *(void *)(v64 + 48) + v41 * v39, v12);
        sub_100063BB8(&qword_1000F2650, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v43 = dispatch thunk of static Equatable.== infix(_:_:)();
        unint64_t v25 = *v24;
        (*v24)(v15, v12);
        if (v43) {
          break;
        }
        unint64_t v39 = (v39 + 1) & v40;
        if (((*(void *)(v62 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        {
          uint64_t v11 = v55;
          a5 = v56;
          uint64_t v22 = v60;
          goto LABEL_4;
        }
      }
      uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v25)(v65, v12);
      uint64_t v47 = (v39 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v11 = v55;
      uint64_t v48 = *(unint64_t *)((char *)v54 + v47);
      *(unint64_t *)((char *)v54 + v47) = v48 & ~(1 << v39);
      a5 = v56;
      uint64_t v22 = v60;
    }
    while ((v48 & (1 << v39)) == 0);
    uint64_t v23 = v53 - 1;
    if (__OFSUB__(v53, 1))
    {
LABEL_44:
      __break(1u);
      return result;
    }
    if (v53 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_1000616B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100005CB0(&qword_1000F3018);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100061A3C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for StoredPhoto();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100005CB0(&qword_1000F3028);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100061DC8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100005CB0(&qword_1000F2858);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  unint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_1000160F8((uint64_t)v6, (uint64_t)v10);
    sub_100016B90((uint64_t)v10, &qword_1000F2858);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100062150(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v41 = *(void *)(v11 - 8);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v40 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a4;
  uint64_t v15 = a4 + 56;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v32 = -1 << *(unsigned char *)(a4 + 32);
  if (-v32 < 64) {
    uint64_t v16 = ~(-1 << -(char)v32);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v28 = ~v32;
    *a1 = v42;
    a1[1] = v15;
    a1[2] = v28;
    a1[3] = v18;
    a1[4] = v17;
    return a3;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v36 = a3;
  int64_t v18 = 0;
  a3 = 0;
  unint64_t v19 = v40;
  uint64_t v38 = v41 + 16;
  unint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56);
  uint64_t v37 = v41 + 48;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v41 + 32);
  uint64_t v33 = v15;
  int64_t v34 = (unint64_t)(63 - v32) >> 6;
  int64_t v30 = v34 - 1;
  unint64_t v31 = a1;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v21 = v20 | (v18 << 6);
  while (1)
  {
    uint64_t v25 = v41;
    uint64_t v26 = *(void *)(v41 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v10, *(void *)(v42 + 48) + v26 * v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v10, 0, 1, v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v10, 1, v11) == 1)
    {
      uint64_t v15 = v33;
      goto LABEL_38;
    }
    ++a3;
    uint64_t v27 = *v35;
    (*v35)(v19, v10, v11);
    uint64_t result = v27(a2, v19, v11);
    if (a3 == v36)
    {
      a3 = v36;
      a1 = v31;
      uint64_t v15 = v33;
      goto LABEL_39;
    }
    a2 += v26;
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t v15 = v33;
    if (v22 >= v34) {
      goto LABEL_37;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      ++v18;
      if (v22 + 1 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v24);
      if (v23) {
        goto LABEL_14;
      }
      int64_t v18 = v22 + 1;
      if (v22 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v23 = *(void *)(v33 + 8 * (v22 + 2));
      if (v23)
      {
        v22 += 2;
      }
      else
      {
        int64_t v18 = v22 + 2;
        if (v22 + 3 >= v34) {
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v33 + 8 * (v22 + 3));
        if (!v23)
        {
          int64_t v24 = v22 + 4;
          int64_t v18 = v22 + 3;
          if (v22 + 4 < v34)
          {
            unint64_t v23 = *(void *)(v33 + 8 * v24);
            if (!v23)
            {
              while (1)
              {
                int64_t v22 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v22 >= v34)
                {
                  int64_t v18 = v30;
                  goto LABEL_37;
                }
                unint64_t v23 = *(void *)(v33 + 8 * v22);
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v22 = v24;
            goto LABEL_21;
          }
LABEL_37:
          (*v39)(v10, 1, 1, v11);
          unint64_t v17 = 0;
LABEL_38:
          sub_100016B90((uint64_t)v10, &qword_1000F2858);
          a1 = v31;
          goto LABEL_39;
        }
        v22 += 3;
      }
    }
LABEL_21:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v22 << 6);
    int64_t v18 = v22;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100062544(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ShuffleID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100063BB8(&qword_1000F2E18, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_10005BED0((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_1000626E0(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for UUID();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for Logger();
  v11[3] = *(void *)(v4 - 8);
  void v11[4] = v4;
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 66048;
  if ((a2 & 1) == 0) {
    uint64_t v9 = 0;
  }
  v12[0] = v9;
  static SystemDirectory.folderURL(for:)();
  uint64_t v12[3] = v12;
  v12[4] = v8;
  URL.withUnsafeFileSystemRepresentation<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100062BC0(const char *a1)
{
  return sub_10005B660(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100062BDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StoredPhoto();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100063BB8(&qword_1000F3010, (void (*)(uint64_t))&type metadata accessor for StoredPhoto);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v6, v14, v2);
      sub_10005C518((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_100062D78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_100005CB0(&qword_1000F2858);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_100063BB8(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    int64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    uint64_t v25 = v12;
    int64_t v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_10005C1F4(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

char *sub_100063020(uint64_t a1, void (**a2)(char *, uint64_t))
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StoredPhoto();
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v31 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (void (**)(char *, uint64_t))((char *)&v23 - v10);
  uint64_t result = (char *)&_swiftEmptyArrayStorage;
  uint64_t v33 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v9 + 16);
    uint64_t v29 = v9 + 16;
    int64_t v30 = v14;
    uint64_t v15 = *(void *)(v9 + 72);
    unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v25 = v6;
    uint64_t v16 = a1 + v24;
    uint64_t v23 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v26 = a2;
    do
    {
      uint64_t v32 = v13;
      v30(v11, v16, v6);
      uint64_t v17 = StoredPhoto.layouts.getter();
      __chkstk_darwin(v17);
      *(&v23 - 2) = a2;
      *(&v23 - 1) = v11;
      char v18 = sub_10005B2AC((uint64_t (*)(char *))sub_1000632D0, (char)(&v23 - 4), v17);
      swift_bridgeObjectRelease();
      if (v18)
      {
        uint64_t v27 = v3;
        unint64_t v19 = *v28;
        (*v28)(v31, (char *)v11, v6);
        unint64_t v20 = v33;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10005489C(0, *((void *)v20 + 2) + 1, 1);
          unint64_t v20 = v33;
        }
        unint64_t v22 = *((void *)v20 + 2);
        unint64_t v21 = *((void *)v20 + 3);
        if (v22 >= v21 >> 1)
        {
          sub_10005489C(v21 > 1, v22 + 1, 1);
          unint64_t v20 = v33;
        }
        *((void *)v20 + 2) = v22 + 1;
        uint64_t v6 = v25;
        v19(&v20[v24 + v22 * v15], v31, v25);
        uint64_t v33 = v20;
        a2 = v26;
        uint64_t v3 = v27;
      }
      else
      {
        (*v23)((char *)v11, v6);
      }
      v16 += v15;
      uint64_t v13 = v32 - 1;
    }
    while (v32 != 1);
    return v33;
  }
  return result;
}

uint64_t sub_1000632D0()
{
  return sub_10005B0FC() & 1;
}

uint64_t sub_1000632F0(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(v56) = a3;
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v57 = (char *)&v54 - v6;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v61 = (char *)&v54 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = (char *)&v54 - v18;
  __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v54 - v20;
  static SystemDirectory.baseImageURL(timePosition:uuid:)();
  static SystemDirectory.maskImageURL(timePosition:uuid:)();
  unint64_t v22 = self;
  id v23 = [v22 defaultManager];
  URL.path(percentEncoded:)(1);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = [v23 fileExistsAtPath:v24];

  if (v25)
  {
    uint64_t v61 = v11;
    uint64_t v55 = v21;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v26(v14, v19, v7);
    uint64_t v27 = v19;
    if ((v56 & 1) == 0)
    {
      unint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
      v31(v14, v7);
      uint64_t v33 = v55;
      goto LABEL_8;
    }
    uint64_t v58 = v19;
    id v28 = [v22 defaultManager];
    URL.path(percentEncoded:)(1);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned __int8 v30 = [v28 fileExistsAtPath:v29];

    unint64_t v31 = *(void (**)(char *, uint64_t))(v8 + 8);
    v31(v14, v7);
    uint64_t v32 = (char *)(v8 + 8);
    if (v30)
    {
      uint64_t v33 = v55;
      uint64_t v27 = v58;
LABEL_8:
      v31(v27, v7);
      v31(v33, v7);
      return 1;
    }
    uint64_t v47 = v54;
    static Log.photos.getter();
    uint64_t v48 = v61;
    int64_t v49 = v58;
    v26(v61, v58, v7);
    int64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v57 = v32;
      *(_DWORD *)uint64_t v52 = 136315138;
      Swift::String v53 = URL.path(percentEncoded:)(1);
      uint64_t v62 = sub_100007E88(v53._countAndFlagsBits, (unint64_t)v53._object, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v31(v48, v7);
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Failed to find file %s", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v54, v60);
      v31(v58, v7);
    }
    else
    {

      v31(v48, v7);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v47, v60);
      v31(v49, v7);
    }
    v31(v55, v7);
  }
  else
  {
    uint64_t v58 = v19;
    int64_t v34 = v57;
    static Log.photos.getter();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v61, v21, v7);
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    uint64_t v37 = v21;
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v56 = v7;
      unint64_t v39 = (uint8_t *)v38;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v55 = v37;
      uint64_t v63 = v40;
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v41 = v61;
      Swift::String v42 = URL.path(percentEncoded:)(1);
      uint64_t v62 = sub_100007E88(v42._countAndFlagsBits, (unint64_t)v42._object, &v63);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      char v43 = *(void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v44 = v56;
      v43(v41, v56);
      _os_log_impl((void *)&_mh_execute_header, v35, v36, "Failed to find file %s", v39, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v60);
      v43(v58, v44);
      v43(v55, v44);
    }
    else
    {

      unint64_t v46 = *(void (**)(char *, uint64_t))(v8 + 8);
      v46(v61, v7);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v60);
      v46(v58, v7);
      v46(v21, v7);
    }
  }
  return 0;
}

uint64_t sub_100063A44()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000043B4;
  return sub_1000587C4();
}

uint64_t sub_100063AD4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100063B0C()
{
  uint64_t v2 = *(int **)(v0 + 16);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1000043B4;
  uint64_t v4 = (uint64_t (*)(int *))((char *)&dword_1000F3070 + dword_1000F3070);
  return v4(v2);
}

uint64_t sub_100063BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PhotoProvidingError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PhotoProvidingError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100063D60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100063D88(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PhotoProvidingError()
{
  return &type metadata for PhotoProvidingError;
}

unint64_t sub_100063DA8()
{
  unint64_t result = qword_1000F3090[0];
  if (!qword_1000F3090[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1000F3090);
  }
  return result;
}

BOOL sub_100063DFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_100063E18()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

void *sub_100063F20@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_100063F2C()
{
  uint64_t v1 = *v0;
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 136));
  sub_100009090((uint64_t)v0 + *(void *)(*v0 + 144));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 96) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 152));
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1000640A8()
{
  sub_100063F2C();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t type metadata accessor for PhotosFaceSystem()
{
  return swift_getGenericMetadata();
}

uint64_t sub_100064118@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  int v28 = a1;
  int v29 = a4;
  uint64_t v7 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v31 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v37 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v16 = AsyncThrowingChannel.init()();
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  swift_bridgeObjectRetain();
  static ProtocolVersion.current.getter();
  uint64_t v17 = v34;
  MessageBody.init<A>(serializable:version:)();
  if (v17)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for TaskPriority();
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v27 = v9;
    v20(v9, 1, 1, v19);
    uint64_t v21 = v31;
    unint64_t v22 = *(void (**)(char *, char *))(v31 + 16);
    uint64_t v26 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v23 = v32;
    v22(v26, v15);
    unint64_t v24 = (*(unsigned __int8 *)(v21 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = 0;
    *(void *)(v25 + 24) = 0;
    int64_t v34 = v15;
    *(void *)(v25 + 32) = v30;
    *(void *)(v25 + 40) = v16;
    *(unsigned char *)(v25 + 48) = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v25 + v24, v26, v23);
    *(unsigned char *)(v25 + v24 + v12) = v29 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C((uint64_t)v27, (uint64_t)&unk_1000F3398, v25);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v35 = v16;
    swift_retain();
    swift_retain();
    uint64_t v35 = DestructableSequence.__allocating_init(_:_:)();
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v34, v23);
  }
}

uint64_t sub_100064558@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  int v25 = a1;
  int v26 = a3;
  uint64_t v5 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v8 - 8);
  uint64_t v28 = type metadata accessor for MessageBody();
  uint64_t v9 = *(void *)(v28 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v28);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v31 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v14 = AsyncThrowingChannel.init()();
  uint64_t v32 = a2;
  swift_bridgeObjectRetain();
  static ProtocolVersion.current.getter();
  sub_100005CB0(&qword_1000F2760);
  sub_100056228();
  uint64_t v15 = v30;
  MessageBody.init<A>(serializable:version:)();
  if (v15)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v17 = type metadata accessor for TaskPriority();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    unint64_t v24 = v7;
    v18(v7, 1, 1, v17);
    uint64_t v19 = *(void (**)(char *, char *))(v9 + 16);
    uint64_t v23 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = v28;
    v19(v23, v13);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 0;
    *(void *)(v22 + 24) = 0;
    uint64_t v30 = v13;
    *(void *)(v22 + 32) = v27;
    *(void *)(v22 + 40) = v14;
    *(unsigned char *)(v22 + 48) = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v22 + v21, v23, v20);
    *(unsigned char *)(v22 + v21 + v10) = v26 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C((uint64_t)v24, (uint64_t)&unk_1000F3218, v22);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v32 = v14;
    swift_retain();
    swift_retain();
    uint64_t v32 = DestructableSequence.__allocating_init(_:_:)();
    type metadata accessor for StoredPhoto();
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v30, v20);
  }
}

uint64_t sub_1000649AC@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v35 = a2;
  int v28 = a1;
  int v29 = a3;
  uint64_t v33 = a4;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  uint64_t v12 = *(void *)(v31 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - v15;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v37 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v17 = AsyncThrowingChannel.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v35, v7);
  static ProtocolVersion.current.getter();
  uint64_t v18 = v36;
  MessageBody.init<A>(serializable:version:)();
  if (v18)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v34, 1, 1, v20);
    uint64_t v21 = v31;
    uint64_t v22 = *(void (**)(char *, char *))(v31 + 16);
    uint64_t v23 = v16;
    uint64_t v36 = v16;
    uint64_t v24 = v32;
    v22(v14, v23);
    unint64_t v25 = (*(unsigned __int8 *)(v21 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = 0;
    *(void *)(v26 + 24) = 0;
    *(void *)(v26 + 32) = v30;
    *(void *)(v26 + 40) = v17;
    *(unsigned char *)(v26 + 48) = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v26 + v25, v14, v24);
    *(unsigned char *)(v26 + v25 + v12) = v29 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C(v34, (uint64_t)&unk_1000F3338, v26);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v38 = v17;
    swift_retain();
    swift_retain();
    uint64_t v38 = DestructableSequence.__allocating_init(_:_:)();
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v36, v24);
  }
}

uint64_t sub_100064E64@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  int v26 = a1;
  int v27 = a3;
  uint64_t v31 = a4;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SyncFacesRequest();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v29 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v35 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v16 = AsyncThrowingChannel.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
  static ProtocolVersion.current.getter();
  uint64_t v17 = v34;
  MessageBody.init<A>(serializable:version:)();
  if (v17)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    uint64_t v20 = v29;
    uint64_t v21 = *(void (**)(char *, char *))(v29 + 16);
    unint64_t v25 = v15;
    uint64_t v22 = v30;
    v21((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = v28;
    *(void *)(v24 + 40) = v16;
    *(unsigned char *)(v24 + 48) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    *(unsigned char *)(v24 + v23 + v12) = v27 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C(v32, (uint64_t)&unk_1000F3320, v24);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v36 = v16;
    swift_retain();
    swift_retain();
    uint64_t v36 = DestructableSequence.__allocating_init(_:_:)();
    sub_100005CB0(&qword_1000F2E30);
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v22);
  }
}

uint64_t sub_100065330@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  int v26 = a1;
  int v27 = a3;
  uint64_t v31 = a4;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for ShuffleID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v29 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v35 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v16 = AsyncThrowingChannel.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
  static ProtocolVersion.current.getter();
  uint64_t v17 = v34;
  MessageBody.init<A>(serializable:version:)();
  if (v17)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    uint64_t v20 = v29;
    uint64_t v21 = *(void (**)(char *, char *))(v29 + 16);
    unint64_t v25 = v15;
    uint64_t v22 = v30;
    v21((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = v28;
    *(void *)(v24 + 40) = v16;
    *(unsigned char *)(v24 + 48) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    *(unsigned char *)(v24 + v23 + v12) = v27 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C(v32, (uint64_t)&unk_1000F3350, v24);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v36 = v16;
    swift_retain();
    swift_retain();
    uint64_t v36 = DestructableSequence.__allocating_init(_:_:)();
    type metadata accessor for StoredPhoto();
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v22);
  }
}

uint64_t sub_1000657F8@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  int v26 = a1;
  int v27 = a3;
  uint64_t v31 = a4;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for SyncFacesRequest();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v29 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v35 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v16 = AsyncThrowingChannel.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
  static ProtocolVersion.current.getter();
  uint64_t v17 = v34;
  MessageBody.init<A>(serializable:version:)();
  if (v17)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    uint64_t v20 = v29;
    uint64_t v21 = *(void (**)(char *, char *))(v29 + 16);
    unint64_t v25 = v15;
    uint64_t v22 = v30;
    v21((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = v28;
    *(void *)(v24 + 40) = v16;
    *(unsigned char *)(v24 + 48) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    *(unsigned char *)(v24 + v23 + v12) = v27 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C(v32, (uint64_t)&unk_1000F3368, v24);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v36 = v16;
    swift_retain();
    swift_retain();
    uint64_t v36 = DestructableSequence.__allocating_init(_:_:)();
    sub_100005CB0((uint64_t *)&unk_1000F3A80);
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v22);
  }
}

uint64_t sub_100065CC4@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a2;
  int v26 = a1;
  int v27 = a3;
  uint64_t v31 = a4;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v32 = (uint64_t)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ProtocolVersion();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AlbumID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for MessageBody();
  uint64_t v29 = *(void *)(v11 - 8);
  uint64_t v30 = v11;
  uint64_t v12 = *(void *)(v29 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  uint64_t v35 = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000024, 0x80000001000D6370);
  sub_100005CB0(&qword_1000F2D80);
  swift_allocObject();
  uint64_t v16 = AsyncThrowingChannel.init()();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v33, v7);
  static ProtocolVersion.current.getter();
  uint64_t v17 = v34;
  MessageBody.init<A>(serializable:version:)();
  if (v17)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v32, 1, 1, v19);
    uint64_t v20 = v29;
    uint64_t v21 = *(void (**)(char *, char *))(v29 + 16);
    unint64_t v25 = v15;
    uint64_t v22 = v30;
    v21((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    unint64_t v23 = (*(unsigned __int8 *)(v20 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = 0;
    *(void *)(v24 + 24) = 0;
    *(void *)(v24 + 32) = v28;
    *(void *)(v24 + 40) = v16;
    *(unsigned char *)(v24 + 48) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v24 + v23, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
    *(unsigned char *)(v24 + v23 + v12) = v27 & 1;
    swift_retain();
    swift_retain();
    sub_10006702C(v32, (uint64_t)&unk_1000F3380, v24);
    swift_release();
    sub_100005CB0(&qword_1000F3220);
    uint64_t v36 = v16;
    swift_retain();
    swift_retain();
    uint64_t v36 = DestructableSequence.__allocating_init(_:_:)();
    type metadata accessor for StoredPhoto();
    sub_100005F48(&qword_1000F3230, &qword_1000F3220);
    AsyncThrowingMapSequence.init(_:transform:)();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v25, v22);
  }
}

uint64_t sub_10006618C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  uint64_t v6 = type metadata accessor for ContinuousClock.Instant();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Logger();
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  v4[25] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for ContinuousClock();
  v4[26] = v8;
  v4[27] = *(void *)(v8 - 8);
  v4[28] = swift_task_alloc();
  if (a1)
  {
    swift_getObjectType();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
  }
  v4[29] = v9;
  v4[30] = v11;
  return _swift_task_switch(sub_100066368, v9, v11);
}

uint64_t sub_100066368()
{
  *((void *)v0 + 11) = static Duration.seconds(_:)();
  *((void *)v0 + 12) = v1;
  ContinuousClock.init()();
  swift_beginAccess();
  uint64_t v4 = (uint64_t (*)(char *))(*((void *)v0 + 15) + **((int **)v0 + 15));
  uint64_t v2 = (void *)swift_task_alloc();
  *((void *)v0 + 31) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100066488;
  return v4(v0 + 81);
}

uint64_t sub_100066488()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 256) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 240);
  uint64_t v4 = *(void *)(v2 + 232);
  if (v0) {
    uint64_t v5 = sub_100066808;
  }
  else {
    uint64_t v5 = sub_1000665C4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000665C4()
{
  uint64_t v15 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 81);
  if (v1 == 2)
  {
    static Log.default.getter();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.default.getter();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 168);
    uint64_t v7 = *(void *)(v0 + 176);
    if (v4)
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v9 = Duration.description.getter();
      *(void *)(v8 + 4) = sub_100007E88(v9, v10, &v14);
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Sleeping for %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v11(v5, v6);
    *(void *)(v0 + 264) = v11;
    *(_OWORD *)(v0 + 104) = *(_OWORD *)(v0 + 88);
    *(void *)(v0 + 64) = 0;
    *(void *)(v0 + 72) = 0;
    *(unsigned char *)(v0 + 80) = 1;
    return _swift_task_switch(sub_1000668CC, 0, 0);
  }
  else
  {
    (*(void (**)(void, void))(*(void *)(v0 + 216) + 8))(*(void *)(v0 + 224), *(void *)(v0 + 208));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12(v1 & 1);
  }
}

uint64_t sub_100066808()
{
  (*(void (**)(void, void))(v0[27] + 8))(v0[28], v0[26]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = (uint64_t (*)(void))v0[1];
  return v1(0);
}

uint64_t sub_1000668CC()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = sub_100070230(&qword_1000F2268, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_100070230(&qword_1000F2270, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[34] = v5;
  v0[35] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[36] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100066A64;
  uint64_t v7 = v0[26];
  uint64_t v8 = v0[20];
  return dispatch thunk of Clock.sleep(until:tolerance:)(v8, v0 + 8, v7, v4);
}

uint64_t sub_100066A64()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*v1 + 272);
  uint64_t v4 = *(void *)(*v1 + 160);
  uint64_t v5 = *(void *)(*v1 + 136);
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  v3(v4, v5);
  if (v0)
  {
    uint64_t v6 = sub_100066DA4;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v7 = *(void *)(v2 + 232);
    uint64_t v8 = *(void *)(v2 + 240);
    uint64_t v6 = sub_100066BEC;
  }
  return _swift_task_switch(v6, v7, v8);
}

uint64_t sub_100066BEC()
{
  static Log.default.getter();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Done sleeping.", v3, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(void, void))(v0 + 264))(*(void *)(v0 + 192), *(void *)(v0 + 168));
  swift_beginAccess();
  static DurationProtocol.*= infix(_:_:)();
  swift_endAccess();
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 120) + **(int **)(v0 + 120));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100066488;
  return v6(v0 + 81);
}

uint64_t sub_100066DA4()
{
  return _swift_task_switch(sub_100066DBC, *(void *)(v0 + 232), *(void *)(v0 + 240));
}

uint64_t sub_100066DBC()
{
  static Log.default.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v3 + 4) = v5;
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Error Sleeping %@", (uint8_t *)v3, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 264))(*(void *)(v0 + 184), *(void *)(v0 + 168));
  swift_beginAccess();
  static DurationProtocol.*= infix(_:_:)();
  swift_endAccess();
  uint64_t v8 = (uint64_t (*)(uint64_t))(*(void *)(v0 + 120) + **(int **)(v0 + 120));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100066488;
  return v8(v0 + 81);
}

uint64_t sub_10006702C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TaskPriority();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_10006FEF4(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    dispatch thunk of Actor.unownedExecutor.getter();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1000671D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v3[6] = sub_100005CB0(&qword_1000F2970);
  v3[7] = swift_task_alloc();
  return _swift_task_switch(sub_10006726C, 0, 0);
}

uint64_t sub_10006726C()
{
  v0[8] = GeneratePhotoRequest.photoIdentifiers.getter();
  v0[9] = type metadata accessor for CommunicationActor();
  v0[10] = static CommunicationActor.shared.getter();
  v0[11] = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100067344, v2, v1);
}

uint64_t sub_100067344()
{
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[5];
  static CommunicationActor.shared.getter();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  type metadata accessor for StoredPhoto();
  swift_retain();
  swift_bridgeObjectRetain();
  v0[12] = generateElements<A>(isolation:_:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1000674A4, 0, 0);
}

uint64_t sub_1000674A4()
{
  v0[2] = v0[12];
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  AsyncSequence.generic.getter();
  swift_release();
  type metadata accessor for GeneratePhotoResponse();
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  AsyncMapSequence.init(_:transform:)();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1000675E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[5] = a3;
  v4[6] = v3;
  v4[3] = a1;
  v4[4] = a2;
  sub_100005CB0(&qword_1000F2A00);
  v4[7] = swift_task_alloc();
  uint64_t v5 = sub_100005CB0(&qword_1000F31F0);
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0(&qword_1000F31F8);
  v4[11] = v6;
  v4[12] = *(void *)(v6 - 8);
  v4[13] = swift_task_alloc();
  v4[14] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for UUID();
  v4[15] = v7;
  v4[16] = *(void *)(v7 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for StoredPhoto();
  v4[18] = v8;
  v4[19] = *(void *)(v8 - 8);
  v4[20] = swift_task_alloc();
  v4[21] = swift_task_alloc();
  v4[22] = swift_task_alloc();
  v4[23] = type metadata accessor for CommunicationActor();
  v4[24] = static CommunicationActor.shared.getter();
  v4[25] = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[26] = v10;
  v4[27] = v9;
  return _swift_task_switch(sub_100067890, v10, v9);
}

uint64_t sub_100067890()
{
  v0[28] = *(void *)(v0[6] + 16);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[29] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100067930;
  uint64_t v2 = v0[3];
  return sub_100057B88(v2);
}

uint64_t sub_100067930(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = (void *)*v3;
  v5[30] = a1;
  v5[31] = a2;
  v5[32] = v2;
  swift_task_dealloc();
  uint64_t v6 = v4[27];
  uint64_t v7 = v4[26];
  if (v2) {
    uint64_t v8 = sub_100068B14;
  }
  else {
    uint64_t v8 = sub_100067A78;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100067A78()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 264) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 144);
    uint64_t v4 = *(void *)(v0 + 152);
    uint64_t v5 = *(int **)(v0 + 32);
    uint64_t v6 = *(void (**)(void, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v7 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 392) = v7;
    *(void *)(v0 + 272) = *(void *)(v4 + 56);
    *(void *)(v0 + 280) = v6;
    *(void *)(v0 + 288) = 0;
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    v6(*(void *)(v0 + 176), v1 + ((v7 + 32) & ~(unint64_t)v7), v3);
    StoredPhoto.localIdentifier.getter();
    sub_1000626E0(v8, 0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    int v26 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100067E7C;
    uint64_t v12 = *(void *)(v0 + 176);
    return v26(v12);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v0 + 256);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100064558(1, *(void *)(v0 + 248), 1, *(void *)(v0 + 112));
    if (v14)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
      return v15();
    }
    else
    {
      uint64_t v17 = *(void *)(v0 + 104);
      uint64_t v16 = *(void *)(v0 + 112);
      uint64_t v18 = *(void *)(v0 + 88);
      uint64_t v19 = *(void *)(v0 + 96);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, v16, v18);
      sub_100005F48(&qword_1000F3200, &qword_1000F31F8);
      dispatch thunk of AsyncSequence.makeAsyncIterator()();
      uint64_t v20 = *(void *)(v0 + 200);
      uint64_t v21 = static CommunicationActor.shared.getter();
      *(void *)(v0 + 312) = v21;
      uint64_t v22 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
      unint64_t v23 = (void *)swift_task_alloc();
      *(void *)(v0 + 320) = v23;
      *unint64_t v23 = v0;
      v23[1] = sub_1000683C8;
      uint64_t v24 = *(void *)(v0 + 56);
      uint64_t v25 = *(void *)(v0 + 64);
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v24, v21, v20, v0 + 16, v25, v22);
    }
  }
}

uint64_t sub_100067E7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_100068BE4;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 208);
    uint64_t v4 = *(void *)(v2 + 216);
    uint64_t v5 = sub_100067FA0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100067FA0()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 288) + 1;
  (*(void (**)(void, void))(*(void *)(v0 + 152) + 8))(*(void *)(v0 + 176), *(void *)(v0 + 144));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v0 + 304);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    sub_100064558(1, *(void *)(v0 + 248), 1, *(void *)(v0 + 112));
    if (v3)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
      return v4();
    }
    else
    {
      uint64_t v15 = *(void *)(v0 + 104);
      uint64_t v14 = *(void *)(v0 + 112);
      uint64_t v16 = *(void *)(v0 + 88);
      uint64_t v17 = *(void *)(v0 + 96);
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
      sub_100005F48(&qword_1000F3200, &qword_1000F31F8);
      dispatch thunk of AsyncSequence.makeAsyncIterator()();
      uint64_t v18 = *(void *)(v0 + 200);
      uint64_t v19 = static CommunicationActor.shared.getter();
      *(void *)(v0 + 312) = v19;
      uint64_t v20 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 320) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1000683C8;
      uint64_t v22 = *(void *)(v0 + 56);
      uint64_t v23 = *(void *)(v0 + 64);
      return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v22, v19, v18, v0 + 16, v23, v20);
    }
  }
  else
  {
    uint64_t v6 = *(void (**)(void, unint64_t, void))(v0 + 280);
    uint64_t v7 = *(void *)(v0 + 288) + 1;
    *(void *)(v0 + 288) = v7;
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v8 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 120);
    uint64_t v11 = *(int **)(v0 + 32);
    v6(*(void *)(v0 + 176), *(void *)(v0 + 240)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(void *)(v0 + 272) * v7, *(void *)(v0 + 144));
    StoredPhoto.localIdentifier.getter();
    sub_1000626E0(v8, 0);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v24 = (uint64_t (*)(uint64_t))((char *)v11 + *v11);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 296) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100067E7C;
    uint64_t v13 = *(void *)(v0 + 176);
    return v24(v13);
  }
}

uint64_t sub_1000683C8()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 208);
  uint64_t v4 = *(void *)(v2 + 216);
  if (v0) {
    uint64_t v5 = sub_100068CD4;
  }
  else {
    uint64_t v5 = sub_1000684E8;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000684E8()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[7];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[14];
    uint64_t v6 = v0[11];
    uint64_t v5 = v0[12];
    uint64_t v7 = v0[9];
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[8];
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(v0[21], v3, v1);
    uint64_t v12 = (void *)swift_task_alloc();
    v0[41] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1000686CC;
    uint64_t v13 = v0[20];
    uint64_t v14 = v0[21];
    return sub_100057480(v13, v14);
  }
}

uint64_t sub_1000686CC()
{
  uint64_t v2 = (void *)*v1;
  v2[42] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[26];
    uint64_t v4 = v2[27];
    return _swift_task_switch(sub_100068DE4, v3, v4);
  }
  else
  {
    uint64_t v8 = (uint64_t (*)(uint64_t))(v2[4] + *(int *)v2[4]);
    uint64_t v5 = (void *)swift_task_alloc();
    v2[43] = v5;
    *uint64_t v5 = v2;
    v5[1] = sub_100068880;
    uint64_t v6 = v2[20];
    return v8(v6);
  }
}

uint64_t sub_100068880()
{
  uint64_t v2 = (void *)*v1;
  v2[44] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[20];
  uint64_t v4 = v2[19];
  uint64_t v5 = v2[18];
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v7 = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  if (v0)
  {
    v2[47] = v6;
    v2[48] = v7;
    v6(v3, v5);
    uint64_t v8 = v2[26];
    uint64_t v9 = v2[27];
    uint64_t v10 = sub_100068F1C;
  }
  else
  {
    v2[45] = v6;
    v2[46] = v7;
    v6(v3, v5);
    uint64_t v8 = v2[26];
    uint64_t v9 = v2[27];
    uint64_t v10 = sub_100068A04;
  }
  return _swift_task_switch(v10, v8, v9);
}

uint64_t sub_100068A04()
{
  (*(void (**)(void, void))(v0 + 360))(*(void *)(v0 + 168), *(void *)(v0 + 144));
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = static CommunicationActor.shared.getter();
  *(void *)(v0 + 312) = v2;
  uint64_t v3 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1000683C8;
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v6 = *(void *)(v0 + 64);
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v5, v2, v1, v0 + 16, v6, v3);
}

uint64_t sub_100068B14()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100068BE4()
{
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100068CD4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  uint64_t v6 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100068DE4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[11];
  uint64_t v6 = v0[12];
  uint64_t v8 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v9 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100068F1C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[47];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[18];
  uint64_t v11 = v0[14];
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[8];
  swift_release();
  v1(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100069050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  *uint64_t v8 = v4;
  v8[1] = sub_1000043B4;
  return sub_1000675E8(a4, a1, a2);
}

uint64_t type metadata accessor for WatchPhotoProcessor()
{
  return self;
}

uint64_t sub_100069128()
{
  *(void *)(v1 + 16) = *v0;
  type metadata accessor for CommunicationActor();
  *(void *)(v1 + 24) = static CommunicationActor.shared.getter();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000691F4, v3, v2);
}

uint64_t sub_1000691F4()
{
  swift_release();
  swift_retain();
  sub_100005CB0(&qword_1000F2D18);
  sub_100005F48(&qword_1000F2D20, &qword_1000F2D18);
  PhotosXPCServer.registerGeneratePhoto<A>(callback:)();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000692CC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for CommunicationActor();
  v2[5] = static CommunicationActor.shared.getter();
  v2[6] = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006939C, v4, v3);
}

uint64_t sub_10006939C()
{
  uint64_t v1 = (uint64_t *)v0[3];
  swift_release();
  uint64_t v2 = *v1;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v3 = v0[2];
  static CommunicationActor.shared.getter();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v3;
  type metadata accessor for StoredPhoto();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v5 = generateElements<A>(isolation:_:)();
  swift_release();
  swift_release();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[1];
  return v6(v5);
}

uint64_t sub_1000694FC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_100005F94;
  return sub_100069050(a1, a2, v7, v6);
}

uint64_t sub_1000695AC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  LODWORD(v43) = a4;
  uint64_t v42 = a3;
  int v45 = a2;
  uint64_t v40 = a1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  int64_t v49 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for MessageBody();
  uint64_t v6 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Message.Operation();
  uint64_t v9 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v11 = (_DWORD *)((char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = type metadata accessor for Message();
  uint64_t v12 = *(void *)(v48 - 8);
  uint64_t v13 = __chkstk_darwin(v48);
  uint64_t v44 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v47 = (char *)&v35 - v15;
  uint64_t v46 = sub_100005CB0(&qword_1000F3240);
  uint64_t v36 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  int64_t v50 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v17 = static CommunicationActor.shared.getter();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v35 = v17;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_retain();
  swift_release();
  dispatch thunk of MessageDemultiplexer.sendRequest(_:)();
  swift_release();
  uint64_t v18 = v46;
  int v19 = InFlightRequest.requestID.getter();
  *uint64_t v11 = v45;
  v11[1] = v19;
  (*(void (**)(_DWORD *, void, uint64_t))(v9 + 104))(v11, enum case for Message.Operation.request(_:), v39);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v42, v41);
  uint64_t v20 = (uint64_t)v47;
  Message.init(operation:content:complete:)();
  uint64_t v21 = v49;
  static Log.network.getter();
  uint64_t v22 = v44;
  uint64_t v23 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v44, v20, v48);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    v52[0] = v43;
    *(_DWORD *)uint64_t v26 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v27 = sub_100002E04(v45);
    uint64_t v51 = sub_100007E88(v27, v28, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v29 = Message.shortDescription.getter();
    unint64_t v31 = v30;
    swift_release();
    uint64_t v51 = sub_100007E88(v29, v31, v52);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v23 = v48;
    v32(v22, v48);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "[NMC] Sending request %s: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v38);
    uint64_t v18 = v46;
    uint64_t v20 = (uint64_t)v47;
  }
  else
  {
    uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
    v32(v22, v23);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v21, v38);
  }
  uint64_t v33 = v36;
  sub_10006A02C(v20);
  v32((char *)v20, v23);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v50, v18);
  return swift_release();
}

uint64_t sub_100069CE0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100070D94, 0, 0);
}

uint64_t sub_100069D00(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100069D20, 0, 0);
}

uint64_t sub_100069D20()
{
  MessageBody.deserialized<A>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100069DAC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100069DCC, 0, 0);
}

uint64_t sub_100069DCC()
{
  sub_100005CB0(&qword_1000F2E30);
  sub_100005F48(&qword_1000F2E80, &qword_1000F2E30);
  MessageBody.deserialized<A>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100069E94(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100069EB4, 0, 0);
}

uint64_t sub_100069EB4()
{
  sub_100005CB0((uint64_t *)&unk_1000F3A80);
  sub_100005F48(&qword_1000F2EF0, (uint64_t *)&unk_1000F3A80);
  MessageBody.deserialized<A>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100069F7C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_100069F9C, 0, 0);
}

uint64_t sub_100069F9C()
{
  type metadata accessor for StoredPhoto();
  MessageBody.deserialized<A>()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006A02C(uint64_t a1)
{
  uint64_t v36 = sub_100005CB0(&qword_1000F3248);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v34 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100005CB0(&qword_1000F3250);
  uint64_t v41 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v40 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Message();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v11 = static CommunicationActor.shared.getter();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v38 = v11;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v39 = a1;
  uint64_t v37 = v12;
  v12((unint64_t)v7, a1, v4);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v30 = v4;
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v43 = v29;
    *(_DWORD *)uint64_t v15 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    sub_100070230(&qword_1000F2618, (void (*)(uint64_t))&type metadata accessor for Message);
    uint64_t v16 = v30;
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v42 = sub_100007E88(v17, v18, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
    os_log_type_t v19 = v14;
    uint64_t v20 = v16;
    _os_log_impl((void *)&_mh_execute_header, v13, v19, "[MSQ] Queueing %s", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
    uint64_t v21 = v36;
    uint64_t v23 = (uint64_t)v34;
    uint64_t v22 = v35;
    uint64_t v24 = v33;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v32);
    uint64_t v22 = v35;
    uint64_t v24 = v33;
    uint64_t v23 = (uint64_t)v34;
    uint64_t v20 = v4;
    uint64_t v21 = v36;
  }
  sub_100005CB0(&qword_1000F3258);
  unint64_t v25 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1000D7AB0;
  v37(v26 + v25, v39, v20);
  uint64_t v43 = v26;
  sub_100005CB0(&qword_1000F3260);
  sub_100005F48(&qword_1000F3268, &qword_1000F3260);
  uint64_t v27 = v40;
  Sequence.async.getter();
  swift_bridgeObjectRelease();
  sub_100005F48(&qword_1000F3270, &qword_1000F3250);
  AsyncSequence<>.throwing.getter();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v24);
  sub_10006A9A0(v23);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  return swift_release();
}

uint64_t sub_10006A670(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  uint64_t v7 = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  v19[3] = sub_100005CB0(&qword_1000F32F8);
  v19[4] = sub_100005F48(&qword_1000F3300, &qword_1000F32F8);
  v19[0] = a1;
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v8 = (uint64_t *)(v1 + 56);
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 56);
  uint64_t v10 = *(void *)(result + 24);
  Swift::Int v11 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v8;
    if (*(void *)(*v8 + 16) < v11 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10006E6D4(v11, 0);
      uint64_t v13 = *v8;
    }
    sub_10006EBA8((void *)(v13 + 16), v13 + 40, (uint64_t)v19);
    swift_endAccess();
    swift_release();
    sub_100009090((uint64_t)v19);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    char v14 = *(unsigned char *)(v2 + 48);
    swift_release();
    if ((v14 & 1) == 0)
    {
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v6, 1, 1, v15);
      swift_retain();
      uint64_t v16 = static CommunicationActor.shared.getter();
      uint64_t v17 = (void *)swift_allocObject();
      void v17[2] = v16;
      v17[3] = v7;
      v17[4] = v2;
      sub_10006702C((uint64_t)v6, (uint64_t)&unk_1000F3310, (uint64_t)v17);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10006A9A0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  uint64_t v7 = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v8 = sub_100005CB0(&qword_1000F3248);
  v21[3] = v8;
  v21[4] = sub_100005F48(&qword_1000F3278, &qword_1000F3248);
  uint64_t v9 = sub_10003ED9C(v21);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v9, a1, v8);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v10 = (uint64_t *)(v1 + 56);
  swift_beginAccess();
  uint64_t result = *(void *)(v2 + 56);
  uint64_t v12 = *(void *)(result + 24);
  Swift::Int v13 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v10;
    if (*(void *)(*v10 + 16) < v13 || (isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10006E6D4(v13, 0);
      uint64_t v15 = *v10;
    }
    sub_10006EBA8((void *)(v15 + 16), v15 + 40, (uint64_t)v21);
    swift_endAccess();
    swift_release();
    sub_100009090((uint64_t)v21);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    char v16 = *(unsigned char *)(v2 + 48);
    swift_release();
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v6, 1, 1, v17);
      swift_retain();
      uint64_t v18 = static CommunicationActor.shared.getter();
      os_log_type_t v19 = (void *)swift_allocObject();
      v19[2] = v18;
      v19[3] = v7;
      v19[4] = v2;
      sub_10006702C((uint64_t)v6, (uint64_t)&unk_1000F3288, (uint64_t)v19);
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10006AD00()
{
  v0[2] = type metadata accessor for CommunicationActor();
  v0[3] = static CommunicationActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006ADAC;
  return sub_10006B190();
}

uint64_t sub_10006ADAC()
{
  swift_task_dealloc();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100070D98, v1, v0);
}

uint64_t sub_10006AF18()
{
  v0[2] = type metadata accessor for CommunicationActor();
  v0[3] = static CommunicationActor.shared.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10006AFC4;
  return sub_10006B190();
}

uint64_t sub_10006AFC4()
{
  swift_task_dealloc();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006B130, v1, v0);
}

uint64_t sub_10006B130()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10006B190()
{
  v1[29] = v0;
  uint64_t v2 = type metadata accessor for Message();
  v1[30] = v2;
  v1[31] = *(void *)(v2 - 8);
  v1[32] = swift_task_alloc();
  sub_100005CB0(&qword_1000F3298);
  v1[33] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for Logger();
  v1[34] = v3;
  v1[35] = *(void *)(v3 - 8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = type metadata accessor for CommunicationActor();
  v1[42] = static CommunicationActor.shared.getter();
  v1[43] = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[44] = v5;
  v1[45] = v4;
  return _swift_task_switch(sub_10006B37C, v5, v4);
}

uint64_t sub_10006B37C()
{
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v1 = (uint64_t *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 232);
  int v3 = *(unsigned __int8 *)(v2 + 48);
  swift_release();
  if (v3 == 1) {
    goto LABEL_31;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(v2 + 48) = 1;
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v4 = *v1;
  swift_beginAccess();
  if (*(uint64_t *)(*(void *)(v4 + 56) + 24) < 1)
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_17;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_10006F720();
  }
  uint64_t v5 = *(void **)(*v1 + 56);
  uint64_t v6 = sub_1000700FC((long long *)&v5[5 * v5[4] + 5], v0 + 56);
  uint64_t v12 = v5[4];
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
LABEL_39:
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v7, v8, v9, v10, v11);
  }
  uint64_t v15 = v5[3];
  if (v14 >= v5[2]) {
    uint64_t v14 = 0;
  }
  v5[4] = v14;
  if (__OFSUB__(v15, 1)) {
    goto LABEL_39;
  }
  v5[3] = v15 - 1;
LABEL_17:
  swift_endAccess();
  swift_release();
  if (*(void *)(v0 + 80))
  {
    char v16 = (void *)(v0 + 16);
    sub_1000700FC((long long *)(v0 + 56), v0 + 16);
    static Log.network.getter();
    sub_100070114(v0 + 16, v0 + 136);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
      *(void *)(v0 + 216) = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v19 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v53 = *(void *)(v0 + 272);
      uint64_t v54 = *(void *)(v0 + 320);
      uint64_t v52 = *(void *)(v0 + 280);
      uint64_t v20 = *(void *)(v0 + 160);
      sub_10003EB84((void *)(v0 + 136), v20);
      uint64_t v21 = *(void *)(v20 - 8);
      swift_task_alloc();
      (*(void (**)(void))(v21 + 16))();
      uint64_t v22 = String.init<A>(describing:)();
      unint64_t v24 = v23;
      swift_release();
      swift_task_dealloc();
      *(void *)(v0 + 224) = sub_100007E88(v22, v24, (uint64_t *)(v0 + 216));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100009090(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "[MSQ] Dequeue %s", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
      v25(v54, v53);
      char v16 = (void *)(v0 + 16);
    }
    else
    {
      uint64_t v40 = *(void *)(v0 + 320);
      uint64_t v41 = *(void *)(v0 + 272);
      uint64_t v42 = *(void *)(v0 + 280);
      sub_100009090(v0 + 136);

      unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v25(v40, v41);
    }
    *(void *)(v0 + 368) = v25;
    uint64_t v43 = *(void *)(v0 + 40);
    uint64_t v44 = sub_10003EB84(v16, v43);
    uint64_t v45 = *(void *)(v43 - 8);
    uint64_t v46 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v45 + 16))(v46, v44, v43);
    *(void *)(v0 + 120) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 128) = swift_getAssociatedConformanceWitness();
    sub_10003ED9C((uint64_t *)(v0 + 96));
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    swift_task_dealloc();
    uint64_t v47 = *(void *)(v0 + 344);
    uint64_t v48 = static CommunicationActor.shared.getter();
    *(void *)(v0 + 376) = v48;
    uint64_t v49 = *(void *)(v0 + 120);
    uint64_t v50 = *(void *)(v0 + 128);
    sub_10003EEF0(v0 + 96, v49);
    uint64_t v51 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v51;
    void *v51 = v0;
    v51[1] = sub_10006BC04;
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = v48;
    uint64_t v8 = v47;
    uint64_t v9 = v0 + 200;
    uint64_t v10 = v49;
    uint64_t v11 = v50;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v7, v8, v9, v10, v11);
  }
  swift_release();
  if (*(void *)(v0 + 80)) {
    sub_100009090(v0 + 56);
  }
  static Log.network.getter();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    unint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "[MSQ] No Pending Messages, exiting.", v28, 2u);
    swift_slowDealloc();
  }
  uint64_t v29 = *(void *)(v0 + 312);
  uint64_t v30 = *(void *)(v0 + 280);
  uint64_t v31 = *(void *)(v0 + 272);

  uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
  v32(v29, v31);
  static Log.network.getter();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MSQ] Task done.", v35, 2u);
    swift_slowDealloc();
  }
  uint64_t v36 = *(void *)(v0 + 288);
  uint64_t v37 = *(void *)(v0 + 272);

  v32(v36, v37);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(*v1 + 48) = 0;
LABEL_31:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_10006BC04()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 352);
  uint64_t v4 = *(void *)(v2 + 360);
  if (v0) {
    uint64_t v5 = sub_10006C610;
  }
  else {
    uint64_t v5 = sub_10006BD24;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10006BD24()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(void *)(v0 + 248);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    uint64_t v18 = *(void *)(v0 + 344);
    uint64_t v19 = *(void *)(v0 + 256);
    uint64_t v20 = *(void *)(v0 + 232);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v19, v1, v2);
    uint64_t v21 = static CommunicationActor.shared.getter();
    *(void *)(v0 + 392) = v21;
    uint64_t v22 = swift_task_alloc();
    *(void *)(v0 + 400) = v22;
    *(void *)(v22 + 16) = v19;
    *(void *)(v22 + 24) = v20;
    uint64_t v62 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1000F32B0 + dword_1000F32B0);
    unint64_t v23 = (void *)swift_task_alloc();
    *(void *)(v0 + 408) = v23;
    *unint64_t v23 = v0;
    v23[1] = sub_10006CFA4;
    return v62(v21, v18, (uint64_t)&unk_1000F32A8, v22);
  }
  uint64_t v4 = (void *)(v0 + 16);
  uint64_t v5 = (uint64_t *)(v0 + 96);
  sub_100009090(v0 + 96);
  sub_100009090(v0 + 16);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v6 = *(void *)(v0 + 232);
  swift_beginAccess();
  if (*(uint64_t *)(*(void *)(v6 + 56) + 24) < 1)
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_16;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    sub_10006F720();
  }
  uint64_t v7 = *(void **)(*(void *)(v0 + 232) + 56);
  uint64_t v8 = sub_1000700FC((long long *)&v7[5 * v7[4] + 5], v0 + 56);
  uint64_t v14 = v7[4];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
LABEL_37:
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v8, v9, v10, v11, v12, v13);
  }
  uint64_t v17 = v7[3];
  if (v16 >= v7[2]) {
    uint64_t v16 = 0;
  }
  v7[4] = v16;
  if (__OFSUB__(v17, 1)) {
    goto LABEL_37;
  }
  v7[3] = v17 - 1;
LABEL_16:
  swift_endAccess();
  swift_release();
  if (*(void *)(v0 + 80))
  {
    sub_1000700FC((long long *)(v0 + 56), v0 + 16);
    static Log.network.getter();
    sub_100070114(v0 + 16, v0 + 136);
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      *(void *)(v0 + 216) = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v27 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v60 = *(void *)(v0 + 272);
      uint64_t v61 = *(void *)(v0 + 320);
      uint64_t v59 = *(void *)(v0 + 280);
      uint64_t v28 = *(void *)(v0 + 160);
      sub_10003EB84((void *)(v0 + 136), v28);
      uint64_t v29 = *(void *)(v28 - 8);
      swift_task_alloc();
      (*(void (**)(void))(v29 + 16))();
      uint64_t v30 = String.init<A>(describing:)();
      unint64_t v32 = v31;
      swift_release();
      swift_task_dealloc();
      *(void *)(v0 + 224) = sub_100007E88(v30, v32, (uint64_t *)(v0 + 216));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100009090(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "[MSQ] Dequeue %s", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v33(v61, v60);
      uint64_t v4 = (void *)(v0 + 16);
      uint64_t v5 = (uint64_t *)(v0 + 96);
    }
    else
    {
      uint64_t v47 = *(void *)(v0 + 320);
      uint64_t v48 = *(void *)(v0 + 272);
      uint64_t v49 = *(void *)(v0 + 280);
      sub_100009090(v0 + 136);

      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v49 + 8);
      v33(v47, v48);
    }
    *(void *)(v0 + 368) = v33;
    uint64_t v50 = *(void *)(v0 + 40);
    uint64_t v51 = sub_10003EB84(v4, v50);
    uint64_t v52 = *(void *)(v50 - 8);
    uint64_t v53 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v52 + 16))(v53, v51, v50);
    *(void *)(v0 + 120) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 128) = swift_getAssociatedConformanceWitness();
    sub_10003ED9C(v5);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    swift_task_dealloc();
    uint64_t v54 = *(void *)(v0 + 344);
    uint64_t v55 = static CommunicationActor.shared.getter();
    *(void *)(v0 + 376) = v55;
    uint64_t v56 = *(void *)(v0 + 120);
    uint64_t v57 = *(void *)(v0 + 128);
    sub_10003EEF0((uint64_t)v5, v56);
    uint64_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v58;
    void *v58 = v0;
    v58[1] = sub_10006BC04;
    uint64_t v8 = *(void *)(v0 + 264);
    uint64_t v9 = v55;
    uint64_t v10 = v54;
    uint64_t v11 = v0 + 200;
    uint64_t v12 = v56;
    uint64_t v13 = v57;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v8, v9, v10, v11, v12, v13);
  }
  swift_release();
  if (*(void *)(v0 + 80)) {
    sub_100009090(v0 + 56);
  }
  static Log.network.getter();
  os_log_type_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v36 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v36 = 0;
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "[MSQ] No Pending Messages, exiting.", v36, 2u);
    swift_slowDealloc();
  }
  uint64_t v37 = *(void *)(v0 + 312);
  uint64_t v38 = *(void *)(v0 + 280);
  uint64_t v39 = *(void *)(v0 + 272);

  uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
  v40(v37, v39);
  static Log.network.getter();
  uint64_t v41 = Logger.logObject.getter();
  os_log_type_t v42 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v43 = 0;
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "[MSQ] Task done.", v43, 2u);
    swift_slowDealloc();
  }
  uint64_t v44 = *(void *)(v0 + 288);
  uint64_t v45 = *(void *)(v0 + 272);

  v40(v44, v45);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(*(void *)(v0 + 232) + 48) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
  return v46();
}

uint64_t sub_10006C610()
{
  uint64_t v1 = v0 + 16;
  uint64_t v57 = (uint64_t *)(v0 + 96);
  sub_100009090(v0 + 96);
  static Log.network.getter();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_errorRetain();
    swift_release();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 208) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[MSQ] Error reading message from stream: %@", v4, 0xCu);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    uint64_t v1 = v0 + 16;
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(void, void))(v0 + 368))(*(void *)(v0 + 304), *(void *)(v0 + 272));
  sub_100009090(v1);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v7 = *(void *)(v0 + 232);
  swift_beginAccess();
  if (*(uint64_t *)(*(void *)(v7 + 56) + 24) >= 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_10006F720();
    }
    uint64_t v8 = *(void **)(*(void *)(v0 + 232) + 56);
    uint64_t v9 = sub_1000700FC((long long *)&v8[5 * v8[4] + 5], v0 + 56);
    uint64_t v15 = v8[4];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16)
    {
      __break(1u);
    }
    else
    {
      uint64_t v18 = v8[3];
      if (v17 >= v8[2]) {
        uint64_t v17 = 0;
      }
      void v8[4] = v17;
      if (!__OFSUB__(v18, 1))
      {
        v8[3] = v18 - 1;
        goto LABEL_17;
      }
    }
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v9, v10, v11, v12, v13, v14);
  }
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
LABEL_17:
  swift_endAccess();
  swift_release();
  if (*(void *)(v0 + 80))
  {
    sub_1000700FC((long long *)(v0 + 56), v1);
    static Log.network.getter();
    sub_100070114(v1, v0 + 136);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v58 = v20;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(void *)(v0 + 216) = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v54 = *(void *)(v0 + 280);
      uint64_t v55 = *(void *)(v0 + 272);
      uint64_t v56 = *(void *)(v0 + 320);
      uint64_t v22 = *(void *)(v0 + 160);
      sub_10003EB84((void *)(v0 + 136), v22);
      uint64_t v23 = *(void *)(v22 - 8);
      swift_task_alloc();
      (*(void (**)(void))(v23 + 16))();
      uint64_t v24 = String.init<A>(describing:)();
      unint64_t v26 = v25;
      swift_release();
      swift_task_dealloc();
      *(void *)(v0 + 224) = sub_100007E88(v24, v26, (uint64_t *)(v0 + 216));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100009090(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, v19, v58, "[MSQ] Dequeue %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      os_log_type_t v27 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v27(v56, v55);
    }
    else
    {
      uint64_t v42 = *(void *)(v0 + 320);
      uint64_t v43 = *(void *)(v0 + 272);
      uint64_t v44 = *(void *)(v0 + 280);
      sub_100009090(v0 + 136);

      os_log_type_t v27 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
      v27(v42, v43);
    }
    *(void *)(v0 + 368) = v27;
    uint64_t v45 = *(void *)(v0 + 40);
    uint64_t v46 = sub_10003EB84((void *)(v0 + 16), v45);
    uint64_t v47 = *(void *)(v45 - 8);
    uint64_t v48 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v47 + 16))(v48, v46, v45);
    *(void *)(v0 + 120) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 128) = swift_getAssociatedConformanceWitness();
    sub_10003ED9C(v57);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    swift_task_dealloc();
    uint64_t v49 = *(void *)(v0 + 344);
    uint64_t v50 = static CommunicationActor.shared.getter();
    *(void *)(v0 + 376) = v50;
    uint64_t v51 = *(void *)(v0 + 120);
    uint64_t v52 = *(void *)(v0 + 128);
    sub_10003EEF0((uint64_t)v57, v51);
    uint64_t v53 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v53;
    *uint64_t v53 = v0;
    v53[1] = sub_10006BC04;
    uint64_t v9 = *(void *)(v0 + 264);
    uint64_t v10 = v50;
    uint64_t v11 = v49;
    uint64_t v12 = v0 + 200;
    uint64_t v13 = v51;
    uint64_t v14 = v52;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v9, v10, v11, v12, v13, v14);
  }
  swift_release();
  if (*(void *)(v0 + 80)) {
    sub_100009090(v0 + 56);
  }
  static Log.network.getter();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v30 = 0;
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "[MSQ] No Pending Messages, exiting.", v30, 2u);
    swift_slowDealloc();
  }
  uint64_t v31 = *(void *)(v0 + 312);
  uint64_t v32 = *(void *)(v0 + 280);
  uint64_t v33 = *(void *)(v0 + 272);

  os_log_type_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v34(v31, v33);
  static Log.network.getter();
  os_log_type_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "[MSQ] Task done.", v37, 2u);
    swift_slowDealloc();
  }
  uint64_t v38 = *(void *)(v0 + 288);
  uint64_t v39 = *(void *)(v0 + 272);

  v34(v38, v39);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(*(void *)(v0 + 232) + 48) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v40 = *(uint64_t (**)(void))(v0 + 8);
  return v40();
}

uint64_t sub_10006CFA4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 416) = a1;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 360);
  uint64_t v4 = *(void *)(v2 + 352);
  return _swift_task_switch(sub_10006D10C, v4, v3);
}

uint64_t sub_10006D10C()
{
  uint64_t v1 = (uint64_t *)(v0 + 96);
  if (*(unsigned char *)(v0 + 416))
  {
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
LABEL_34:
    uint64_t v54 = *(void *)(v0 + 344);
    uint64_t v55 = static CommunicationActor.shared.getter();
    *(void *)(v0 + 376) = v55;
    uint64_t v56 = *(void *)(v0 + 120);
    uint64_t v57 = *(void *)(v0 + 128);
    sub_10003EEF0((uint64_t)v1, v56);
    os_log_type_t v58 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v58;
    void *v58 = v0;
    v58[1] = sub_10006BC04;
    uint64_t v14 = *(void *)(v0 + 264);
    uint64_t v15 = v55;
    uint64_t v16 = v54;
    uint64_t v17 = v0 + 200;
    uint64_t v18 = v56;
    uint64_t v19 = v57;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v14, v15, v16, v17, v18, v19);
  }
  uint64_t v62 = v0 + 16;
  static Log.network.getter();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "[MSQ] Exiting loop until more data queued", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0 + 368);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v7 = *(void *)(v0 + 272);
  uint64_t v9 = *(void *)(v0 + 248);
  uint64_t v8 = *(void *)(v0 + 256);
  uint64_t v10 = *(void *)(v0 + 240);

  v5(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  uint64_t v1 = (uint64_t *)(v0 + 96);
  sub_100009090(v0 + 96);
  uint64_t v11 = (void *)(v0 + 16);
  sub_100009090(v62);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v12 = *(void *)(v0 + 232);
  swift_beginAccess();
  if (*(uint64_t *)(*(void *)(v12 + 56) + 24) >= 1)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_10006F720();
    }
    uint64_t v13 = *(void **)(*(void *)(v0 + 232) + 56);
    uint64_t v14 = sub_1000700FC((long long *)&v13[5 * v13[4] + 5], v0 + 56);
    uint64_t v20 = v13[4];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
    }
    else
    {
      uint64_t v23 = v13[3];
      if (v22 >= v13[2]) {
        uint64_t v22 = 0;
      }
      v13[4] = v22;
      if (!__OFSUB__(v23, 1))
      {
        v13[3] = v23 - 1;
        goto LABEL_16;
      }
    }
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v14, v15, v16, v17, v18, v19);
  }
  *(void *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
LABEL_16:
  swift_endAccess();
  swift_release();
  if (*(void *)(v0 + 80))
  {
    sub_1000700FC((long long *)(v0 + 56), v62);
    static Log.network.getter();
    sub_100070114(v62, v0 + 136);
    uint64_t v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(void *)(v0 + 216) = swift_slowAlloc();
      *(_DWORD *)unint64_t v26 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v60 = *(void *)(v0 + 272);
      uint64_t v61 = *(void *)(v0 + 320);
      uint64_t v59 = *(void *)(v0 + 280);
      uint64_t v27 = *(void *)(v0 + 160);
      sub_10003EB84((void *)(v0 + 136), v27);
      uint64_t v28 = *(void *)(v27 - 8);
      swift_task_alloc();
      (*(void (**)(void))(v28 + 16))();
      uint64_t v29 = String.init<A>(describing:)();
      unint64_t v31 = v30;
      swift_release();
      swift_task_dealloc();
      *(void *)(v0 + 224) = sub_100007E88(v29, v31, (uint64_t *)(v0 + 216));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100009090(v0 + 136);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "[MSQ] Dequeue %s", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v32(v61, v60);
      uint64_t v11 = (void *)(v0 + 16);
      uint64_t v1 = (uint64_t *)(v0 + 96);
    }
    else
    {
      uint64_t v47 = *(void *)(v0 + 320);
      uint64_t v49 = *(void *)(v0 + 272);
      uint64_t v48 = *(void *)(v0 + 280);
      sub_100009090(v0 + 136);

      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
      v32(v47, v49);
    }
    *(void *)(v0 + 368) = v32;
    uint64_t v50 = *(void *)(v0 + 40);
    uint64_t v51 = sub_10003EB84(v11, v50);
    uint64_t v52 = *(void *)(v50 - 8);
    uint64_t v53 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v52 + 16))(v53, v51, v50);
    *(void *)(v0 + 120) = swift_getAssociatedTypeWitness();
    *(void *)(v0 + 128) = swift_getAssociatedConformanceWitness();
    sub_10003ED9C(v1);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    swift_task_dealloc();
    goto LABEL_34;
  }
  swift_release();
  if (*(void *)(v0 + 80)) {
    sub_100009090(v0 + 56);
  }
  static Log.network.getter();
  uint64_t v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v33, v34))
  {
    os_log_type_t v35 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v35 = 0;
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "[MSQ] No Pending Messages, exiting.", v35, 2u);
    swift_slowDealloc();
  }
  uint64_t v36 = *(void *)(v0 + 312);
  uint64_t v37 = *(void *)(v0 + 280);
  uint64_t v38 = *(void *)(v0 + 272);

  uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
  v39(v36, v38);
  static Log.network.getter();
  uint64_t v40 = Logger.logObject.getter();
  os_log_type_t v41 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v42 = 0;
    _os_log_impl((void *)&_mh_execute_header, v40, v41, "[MSQ] Task done.", v42, 2u);
    swift_slowDealloc();
  }
  uint64_t v43 = *(void *)(v0 + 288);
  uint64_t v44 = *(void *)(v0 + 272);

  v39(v43, v44);
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  *(unsigned char *)(*(void *)(v0 + 232) + 48) = 0;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v45 = *(uint64_t (**)(void))(v0 + 8);
  return v45();
}

uint64_t sub_10006D9BC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = type metadata accessor for Message();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[13] = v4;
  v2[14] = *(void *)(v4 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = type metadata accessor for CommunicationActor();
  v2[19] = static CommunicationActor.shared.getter();
  v2[20] = sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[21] = v6;
  v2[22] = v5;
  return _swift_task_switch(sub_10006DB7C, v6, v5);
}

uint64_t sub_10006DB7C()
{
  unint64_t v26 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  static Log.network.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v0[23] = v5;
  v0[24] = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v2, v1, v3);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v22 = v0[14];
    uint64_t v9 = v0[12];
    uint64_t v23 = v0[13];
    uint64_t v24 = v0[17];
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    swift_release();
    sub_100070230(&qword_1000F2618, (void (*)(uint64_t))&type metadata accessor for Message);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[5] = sub_100007E88(v12, v13, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v14(v9, v11);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "[MSQ] Send start: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
    v15(v24, v23);
  }
  else
  {
    uint64_t v16 = v0[17];
    uint64_t v17 = v0[13];
    uint64_t v18 = v0[14];
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0[9] + 8);
    v14(v0[12], v0[8]);

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v15(v16, v17);
  }
  v0[25] = v15;
  v0[26] = v14;
  uint64_t v19 = (void *)swift_task_alloc();
  v0[27] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_10006DE90;
  uint64_t v20 = v0[6];
  return sub_10000EE28(v20);
}

uint64_t sub_10006DE90()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  if (v0) {
    uint64_t v5 = sub_10006E2B0;
  }
  else {
    uint64_t v5 = sub_10006DFCC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10006DFCC()
{
  uint64_t v23 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[23];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  swift_release();
  static Log.network.getter();
  v1(v2, v4, v3);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v20 = v0[16];
    BOOL v21 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v18 = (void (*)(uint64_t, uint64_t))v0[26];
    uint64_t v19 = v0[13];
    uint64_t v8 = v0[11];
    uint64_t v17 = v0[8];
    uint64_t v9 = Message.shortDescription.getter();
    unint64_t v11 = v10;
    swift_release();
    v0[4] = sub_100007E88(v9, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v18(v8, v17);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "[MSQ] Send end: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v21(v20, v19);
  }
  else
  {
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v13 = v0[16];
    uint64_t v14 = v0[13];
    ((void (*)(void, void))v0[26])(v0[11], v0[8]);

    v12(v13, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(uint64_t))v0[1];
  return v15(1);
}

uint64_t sub_10006E2B0()
{
  unint64_t v30 = v0;
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[23];
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[6];
  swift_release();
  static Log.network.getter();
  v1(v2, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v26 = v6;
    log = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v25 = (void *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v24 = (void (*)(uint64_t, uint64_t))v0[26];
    uint64_t v8 = v0[10];
    uint64_t v9 = v0[8];
    uint64_t v10 = Message.shortDescription.getter();
    unint64_t v12 = v11;
    swift_release();
    v0[2] = sub_100007E88(v10, v12, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v24(v8, v9);
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v14 = v0[15];
    uint64_t v15 = v0[13];
    swift_errorRetain();
    swift_release();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v25 = v16;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v26, "[MSQ] Send failed: %s with error: %@. Will retry.", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v13(v14, v15);
  }
  else
  {
    uint64_t v17 = (void (*)(uint64_t, uint64_t))v0[26];
    uint64_t v28 = (void (*)(uint64_t, uint64_t))v0[25];
    uint64_t v18 = v0[15];
    uint64_t v19 = v0[13];
    uint64_t v20 = v0[10];
    uint64_t v21 = v0[8];
    swift_errorRelease();
    v17(v20, v21);
    swift_errorRelease();
    swift_errorRelease();

    v28(v18, v19);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(uint64_t))v0[1];
  return v22(2);
}

uint64_t sub_10006E6D4(Swift::Int a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (Swift::Int *)(*v2 + 16);
  Swift::Int v5 = *v4;
  if (*v4 >= a1)
  {
    sub_100005CB0(&qword_1000F32B8);
    uint64_t v11 = swift_allocObject();
    long long v12 = *(_OWORD *)(v3 + 24);
    *(void *)(v11 + 16) = v5;
    *(_OWORD *)(v11 + 24) = v12;
    if ((uint64_t)v12 >= 1) {
      sub_10006F3A8(v11 + 16, v11 + 40, v4, v3 + 40);
    }
  }
  else
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v2;
    sub_100005CB0(&qword_1000F32C0);
    Deque._Storage._growCapacity(to:linearly:)(a1, a2 & 1);
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v10 = *(void *)(v9 + 24);
      sub_100005CB0(&qword_1000F32B8);
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = (uint64_t)(j__malloc_size((const void *)v11) - 40) / 40;
      *(void *)(v11 + 24) = v10;
      *(void *)(v11 + 32) = 0;
      if (v10 >= 1)
      {
        swift_retain();
        sub_10006ED0C(v11 + 16, (char *)(v11 + 40), (void *)(v9 + 16), (char *)(v9 + 40));
        *(void *)(v9 + 24) = 0;
        swift_release();
      }
    }
    else
    {
      sub_100005CB0(&qword_1000F32B8);
      uint64_t v11 = swift_allocObject();
      size_t v13 = j__malloc_size((const void *)v11);
      uint64_t v14 = *(void *)(v9 + 24);
      *(void *)(v11 + 16) = (uint64_t)(v13 - 40) / 40;
      *(void *)(v11 + 24) = v14;
      *(void *)(v11 + 32) = 0;
      if (v14 >= 1) {
        sub_10006F034(v11 + 16, v11 + 40, (void *)(v9 + 16), v9 + 40);
      }
    }
  }
  uint64_t result = swift_release();
  *uint64_t v2 = v11;
  return result;
}

size_t sub_10006E8C8(Swift::Int a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (Swift::Int *)(*v2 + 16);
  Swift::Int v5 = *v4;
  if (*v4 >= a1)
  {
    uint64_t v19 = *(unsigned __int8 *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 80);
    sub_100005CB0(&qword_1000F32F0);
    uint64_t v16 = swift_allocObject();
    long long v20 = *(_OWORD *)(v3 + 24);
    *(void *)(v16 + 16) = v5;
    *(_OWORD *)(v16 + 24) = v20;
    if ((uint64_t)v20 >= 1) {
      sub_10006F53C(v16 + 16, v16 + ((v19 + 40) & ~v19), v4, v3 + ((v19 + 40) & ~v19));
    }
    goto LABEL_19;
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v2;
  uint64_t v10 = sub_100005CB0(&qword_1000F2628);
  Deque._Storage._growCapacity(to:linearly:)(a1, a2 & 1);
  if (isUniquelyReferenced_nonNull_native)
  {
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = *(void *)(v9 + 24);
    sub_100005CB0(&qword_1000F32F0);
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v15 = (v12 + 40) & ~v12;
    uint64_t v16 = swift_allocObject();
    size_t result = j__malloc_size((const void *)v16);
    if (v14)
    {
      if (result - v15 != 0x8000000000000000 || v14 != -1)
      {
        *(void *)(v16 + 16) = (uint64_t)(result - v15) / v14;
        *(void *)(v16 + 24) = v13;
        *(void *)(v16 + 32) = 0;
        if (v13 >= 1)
        {
          swift_retain();
          sub_10006EE4C(v16 + 16, v16 + v15, (void *)(v9 + 16), v9 + v15);
          *(void *)(v9 + 24) = 0;
          swift_release();
        }
LABEL_19:
        size_t result = swift_release();
        *uint64_t v2 = v16;
        return result;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  sub_100005CB0(&qword_1000F32F0);
  uint64_t v23 = *(void *)(v21 + 72);
  uint64_t v24 = (v22 + 40) & ~v22;
  uint64_t v16 = swift_allocObject();
  size_t result = j__malloc_size((const void *)v16);
  if (!v23) {
    goto LABEL_21;
  }
  if (result - v24 != 0x8000000000000000 || v23 != -1)
  {
    uint64_t v26 = *(void *)(v9 + 24);
    *(void *)(v16 + 16) = (uint64_t)(result - v24) / v23;
    *(void *)(v16 + 24) = v26;
    *(void *)(v16 + 32) = 0;
    if (v26 >= 1) {
      sub_10006F1C0(v16 + 16, v16 + v24, (void *)(v9 + 16), v9 + v24);
    }
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_10006EBA8(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result[1];
  uint64_t v3 = result[2];
  BOOL v7 = __OFADD__(v3, v4);
  uint64_t v5 = v3 + v4;
  if (!v7)
  {
    os_log_type_t v6 = result;
    if ((v4 & 0x8000000000000000) == 0)
    {
      BOOL v7 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v7))
      {
LABEL_9:
        size_t result = (void *)sub_100070114(a3, a2 + 40 * v5);
        uint64_t v8 = v6[1];
        BOOL v7 = __OFADD__(v8, 1);
        uint64_t v9 = v8 + 1;
        if (!v7)
        {
          v6[1] = v9;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v7 = __OFADD__(v5, *result);
      v5 += *result;
      if (v7) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void *sub_10006EC34(void *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = result[1];
  uint64_t v4 = result[2];
  uint64_t v5 = v4 + v3;
  if (!__OFADD__(v4, v3))
  {
    uint64_t v8 = result;
    if ((v3 & 0x8000000000000000) == 0)
    {
      BOOL v9 = __OFSUB__(v5, *result);
      if (v5 < *result || (v5 -= *result, !v9))
      {
LABEL_9:
        uint64_t v10 = sub_100005CB0(&qword_1000F2628);
        size_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2 + *(void *)(*(void *)(v10 - 8) + 72) * v5, a3, v10);
        uint64_t v11 = v8[1];
        BOOL v9 = __OFADD__(v11, 1);
        uint64_t v12 = v11 + 1;
        if (!v9)
        {
          v8[1] = v12;
          return result;
        }
        goto LABEL_12;
      }
      __break(1u);
    }
    if (v5 < 0)
    {
      BOOL v9 = __OFADD__(v5, *result);
      v5 += *result;
      if (v9) {
        goto LABEL_13;
      }
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_12:
  __break(1u);
LABEL_13:
  __break(1u);
  return result;
}

void sub_10006ED0C(int a1, char *__dst, void *a3, char *a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v7 = a3[1];
  if (v5 < v7)
  {
    uint64_t v8 = v7 - v5;
    if (!__OFSUB__(v7, v5))
    {
      uint64_t v9 = *a3 - v4;
      uint64_t v10 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v10 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = a3[1];
LABEL_6:
  BOOL v11 = v5 < v7;
  BOOL v12 = v8 != 0;
  BOOL v13 = v11 && v12;
  if (v11 && v12) {
    uint64_t v14 = v10;
  }
  else {
    uint64_t v14 = 0;
  }
  if (v11 && v12) {
    uint64_t v15 = v8;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v9 < 1)
  {
    uint64_t v9 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v16 = &a4[40 * v4];
  if (v16 != __dst || &v16[40 * v9] <= __dst) {
    memmove(__dst, v16, 40 * v9);
  }
LABEL_20:
  if (!v13 || v15 <= 0) {
    return;
  }
  if (!v14)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v18 = &__dst[40 * v9];
  if (v18 != v14 || v18 >= &v14[40 * v15])
  {
    memmove(v18, v14, 40 * v15);
  }
}

void sub_10006EE4C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = *(void *)(sub_100005CB0(&qword_1000F2628) - 8);
  if (v5 < v8)
  {
    uint64_t v10 = v8 - v5;
    if (!__OFSUB__(v8, v5))
    {
      uint64_t v11 = v5;
      unint64_t v12 = a4;
      goto LABEL_6;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  unint64_t v12 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = v8;
LABEL_6:
  BOOL v13 = v5 < v8;
  BOOL v14 = v10 != 0;
  BOOL v15 = v13 && v14;
  if (v13 && v14) {
    unint64_t v16 = v12;
  }
  else {
    unint64_t v16 = 0;
  }
  if (v13 && v14) {
    uint64_t v17 = v10;
  }
  else {
    uint64_t v17 = 0;
  }
  if (v11 < 1)
  {
    uint64_t v11 = 0;
    goto LABEL_20;
  }
  if (!a4)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v18 = a4 + *(void *)(v9 + 72) * v4;
  if (v18 > a2 || v18 + *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72) * v11 <= a2)
  {
    sub_100005CB0(&qword_1000F2628);
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v18 != a2)
  {
    swift_arrayInitWithTakeBackToFront();
  }
LABEL_20:
  if (!v15 || v17 <= 0) {
    return;
  }
  if (!v16)
  {
LABEL_34:
    __break(1u);
    return;
  }
  uint64_t v19 = *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72);
  unint64_t v20 = a2 + v19 * v11;
  unint64_t v21 = v16 + v19 * v17;
  if (v20 < v16 || v20 >= v21)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v16)
  {
    swift_arrayInitWithTakeBackToFront();
  }
}

uint64_t sub_10006F034(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v9 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v11 = a4 + 40 * v4;
  if (v11 < a2 + 40 * v9 && v11 + 40 * v9 > a2) {
    goto LABEL_29;
  }
  sub_100005CB0(&qword_1000F32C0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v7 || v8 < 1) {
    return result;
  }
  if (!v10)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  unint64_t v15 = a2 + 40 * v9;
  if (v15 + 40 * v8 > v10 && v15 < v10 + 40 * v8) {
    goto LABEL_29;
  }
  sub_100005CB0(&qword_1000F32C0);
  return swift_arrayInitWithCopy();
}

uint64_t sub_10006F1C0(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_100005CB0(&qword_1000F2628);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_5;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1)
  {
LABEL_5:
    uint64_t v14 = 0;
    goto LABEL_13;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72) * v14;
  unint64_t v18 = a2 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v19 > a2) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_13:
  if (v5 >= v8 || v13 < 1) {
    return result;
  }
  if (!v15)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v22 = *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72);
  unint64_t v23 = a2 + v22 * v14;
  uint64_t v24 = v22 * v13;
  unint64_t v25 = v23 + v24;
  unint64_t v26 = v15 + v24;
  if (v25 > v15 && v23 < v26) {
    goto LABEL_29;
  }
  return swift_arrayInitWithCopy();
}

uint64_t sub_10006F3A8(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a3[1];
  if (v5 >= v7)
  {
    unint64_t v10 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = a3[1];
    if (v7 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v8 = v7 - v5;
  if (__OFSUB__(v7, v5))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = *a3 - v4;
  unint64_t v10 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  unint64_t v11 = a4 + 40 * v4;
  unint64_t v12 = a2 + 40 * v4;
  if (v11 < v12 + 40 * v9 && v12 < v11 + 40 * v9) {
    goto LABEL_27;
  }
  sub_100005CB0(&qword_1000F32C0);
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v7 && v8 >= 1)
  {
    if (v10)
    {
      if (a2 + 40 * v8 <= v10 || v10 + 40 * v8 <= a2)
      {
        sub_100005CB0(&qword_1000F32C0);
        return swift_arrayInitWithCopy();
      }
LABEL_27:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_10006F53C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *a3 - v4;
  if (__OFSUB__(*a3, v4))
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a3[1];
  uint64_t v9 = sub_100005CB0(&qword_1000F2628);
  uint64_t v12 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  uint64_t v11 = v12;
  if (v5 >= v8)
  {
    unint64_t v15 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = v8;
    if (v8 < 1) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  uint64_t v13 = v8 - v5;
  if (__OFSUB__(v8, v5))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v14 = v5;
  unint64_t v15 = a4;
  if (v5 < 1) {
    goto LABEL_14;
  }
LABEL_7:
  if (!a4)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  unint64_t v16 = a4 + *(void *)(v11 + 72) * v4;
  uint64_t v17 = *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72);
  unint64_t v18 = a2 + v17 * v4;
  uint64_t v19 = v17 * v14;
  unint64_t v20 = v18 + v19;
  unint64_t v21 = v16 + v19;
  if (v16 < v20 && v18 < v21) {
    goto LABEL_29;
  }
  uint64_t result = swift_arrayInitWithCopy();
LABEL_14:
  if (v5 < v8 && v13 >= 1)
  {
    if (v15)
    {
      uint64_t v24 = *(void *)(*(void *)(sub_100005CB0(&qword_1000F2628) - 8) + 72) * v13;
      unint64_t v25 = a2 + v24;
      unint64_t v26 = v15 + v24;
      if (v25 <= v15 || v26 <= a2) {
        return swift_arrayInitWithCopy();
      }
LABEL_29:
      uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  return result;
}

uint64_t sub_10006F720()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (uint64_t *)(*v0 + 16);
  uint64_t v3 = *v2;
  sub_100005CB0(&qword_1000F32B8);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 24);
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v5;
  if ((uint64_t)v5 >= 1) {
    sub_10006F3A8(v4 + 16, v4 + 40, v2, v1 + 40);
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v4;
  return result;
}

uint64_t sub_10006F7BC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_100005CB0(&qword_1000F2628);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  sub_100005CB0(&qword_1000F32F0);
  uint64_t v5 = swift_allocObject();
  long long v6 = *(_OWORD *)(v1 + 24);
  *(void *)(v5 + 16) = v3;
  *(_OWORD *)(v5 + 24) = v6;
  if ((uint64_t)v6 >= 1) {
    sub_10006F53C(v5 + 16, v5 + ((v4 + 40) & ~v4), (void *)(v1 + 16), v1 + ((v4 + 40) & ~v4));
  }
  uint64_t result = swift_release();
  *uint64_t v0 = v5;
  return result;
}

uint64_t sub_10006F8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 16) = a1;
  long long v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v6;
  *long long v6 = v3;
  v6[1] = sub_10006F950;
  return sub_10006D9BC(a2, a3);
}

uint64_t sub_10006F950(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(unsigned char **)(v4 + 16) = a1;
  }
  long long v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_10006FA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 49) = *a6;
  return _swift_task_switch(sub_10006FA90, 0, 0);
}

uint64_t sub_10006FA90()
{
  type metadata accessor for CommunicationActor();
  *(void *)(v0 + 40) = static CommunicationActor.shared.getter();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100070D90, v2, v1);
}

uint64_t sub_10006FB54(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return _swift_task_switch(sub_10006FB74, 0, 0);
}

uint64_t sub_10006FB74()
{
  MessageBody.deserialized<A>()();
  uint64_t v2 = v0[3];
  uint64_t v1 = (void *)v0[4];
  *uint64_t v1 = v0[2];
  v1[1] = v2;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10006FC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 48) = a8;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 49) = *a6;
  return _swift_task_switch(sub_10006FC48, 0, 0);
}

uint64_t sub_10006FC48()
{
  type metadata accessor for CommunicationActor();
  *(void *)(v0 + 40) = static CommunicationActor.shared.getter();
  sub_100070230(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10006FD0C, v2, v1);
}

uint64_t sub_10006FD0C()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 49);
  swift_release();
  sub_1000695AC(v3, v4, v2, v1);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10006FDA0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  unint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3210 + dword_1000F3210);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_10006FEEC()
{
  return sub_10007D0A0(v0);
}

uint64_t sub_10006FEF4(uint64_t a1)
{
  uint64_t v2 = sub_100005CB0(&qword_1000F1F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10006FF54()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10006FF8C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_100005F94;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000F3800 + dword_1000F3800);
  return v6(a1, v4);
}

uint64_t sub_100070048()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000043B4;
  return sub_10006AF18();
}

uint64_t sub_1000700FC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100070114(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100070178(uint64_t a1)
{
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100005F94;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1000F32A0 + dword_1000F32A0);
  return v7(a1, v5, v4);
}

uint64_t sub_100070230(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100070278(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *uint64_t v6 = v3;
  v6[1] = sub_100005F94;
  return sub_1000671D0(a1, a2, v2);
}

uint64_t sub_100070328(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1000043B4;
  return sub_100069050(a1, a2, v7, v6);
}

uint64_t sub_1000703DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007041C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return sub_10006AD00();
}

uint64_t sub_1000704D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3318 + dword_1000F3318);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100070624(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3330 + dword_1000F3330);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100070774(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3348 + dword_1000F3348);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1000708C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3360 + dword_1000F3360);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100070A14(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3378 + dword_1000F3378);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100070B64()
{
  uint64_t v1 = type metadata accessor for MessageBody();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 49) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100070C44(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for MessageBody() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = v1[5];
  uint64_t v10 = v1 + 6;
  uint64_t v11 = (uint64_t)v1 + v5;
  char v12 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_100005F94;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, uint64_t, char))((char *)&dword_1000F3390 + dword_1000F3390);
  return v14(a1, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100070D9C()
{
  swift_release();
  sub_10000CFD8(*(void *)(v0 + 24));

  return _swift_deallocClassInstance(v0, 40, 7);
}

uint64_t type metadata accessor for NetworkAdvertiser()
{
  return self;
}

uint64_t sub_100070E00()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v43 = *(void *)(v1 - 8);
  uint64_t v44 = v1;
  __chkstk_darwin(v1);
  uint64_t v42 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for NWEndpoint.Port();
  uint64_t v40 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NWEndpoint.Host();
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for NWEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = NWEndpoint.deviceName.getter();
  if (v14) {
    return v13;
  }
  uint64_t v38 = v8;
  uint64_t v39 = v5;
  uint64_t v37 = v6;
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  uint64_t v18 = v3;
  uint64_t v19 = v43;
  uint64_t v20 = v44;
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(v12, v0, v9);
  int v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v21 == enum case for NWEndpoint.hostPort(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v22 = (char *)v12 + *(int *)(sub_100005CB0(&qword_1000F3578) + 48);
    uint64_t v24 = v37;
    unint64_t v23 = v38;
    (*(void (**)(char *, uint64_t *, uint64_t))(v16 + 32))(v38, v12, v37);
    unint64_t v25 = v39;
    uint64_t v26 = v40;
    (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v39, v22, v18);
    uint64_t v45 = 0;
    unint64_t v46 = 0xE000000000000000;
    v27._countAndFlagsBits = 0x726F503A74736F48;
    v27._object = (void *)0xEA00000000002074;
    String.append(_:)(v27);
    _print_unlocked<A, B>(_:_:)();
    v28._countAndFlagsBits = 58;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);
    _print_unlocked<A, B>(_:_:)();
    uint64_t v15 = v45;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v25, v18);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v23, v24);
  }
  else if (v21 == enum case for NWEndpoint.service(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v29 = *v12;
    unint64_t v30 = (void *)v12[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)v12 + *(int *)(sub_100005CB0(&qword_1000F3568) + 80);
    uint64_t v45 = 0x2065636976726553;
    unint64_t v46 = 0xE800000000000000;
    v32._countAndFlagsBits = v29;
    v32._object = v30;
    String.append(_:)(v32);
    swift_bridgeObjectRelease();
    uint64_t v15 = v45;
    sub_100071408(v31);
  }
  else if (v21 == enum case for NWEndpoint.unix(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    v33._countAndFlagsBits = *v12;
    os_log_type_t v34 = (void *)v12[1];
    uint64_t v45 = 0x2078696E55;
    unint64_t v46 = 0xE500000000000000;
    v33._object = v34;
    String.append(_:)(v33);
    swift_bridgeObjectRelease();
    return v45;
  }
  else if (v21 == enum case for NWEndpoint.url(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    (*(void (**)(char *, uint64_t *, uint64_t))(v19 + 32))(v17, v12, v20);
    uint64_t v45 = 541872725;
    unint64_t v46 = 0xE400000000000000;
    v35._countAndFlagsBits = URL.absoluteString.getter();
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    uint64_t v15 = v45;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v20);
  }
  else if (v21 == enum case for NWEndpoint.opaque(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    swift_unknownObjectRelease();
    return 0x552065757161704FLL;
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
    return 0x6E776F6E6B6E55;
  }
  return v15;
}

uint64_t type metadata accessor for NetworkBrowser()
{
  return self;
}

uint64_t sub_100071408(uint64_t a1)
{
  uint64_t v2 = sub_100005CB0(&qword_1000F3570);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100071468()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v53 = v2;
  uint64_t v54 = v3;
  uint64_t v4 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v48 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = type metadata accessor for NWProtocolQUIC.Metadata.KeepAliveBehavior();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v57 = v12;
  uint64_t v58 = v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v55 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (uint64_t *)((char *)&v48 - v16);
  type metadata accessor for CommunicationActor();
  uint64_t v18 = static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v59 = v18;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  os_log_t v56 = v1;
  type metadata accessor for NWProtocolQUIC();
  swift_retain();
  static NWProtocolQUIC.definition.getter();
  uint64_t v19 = NWConnection.metadata(definition:)();
  swift_release();
  swift_release();
  if (!v19) {
    goto LABEL_14;
  }
  type metadata accessor for NWProtocolQUIC.Metadata();
  uint64_t v20 = swift_dynamicCastClass();
  if (!v20)
  {
    swift_release();
LABEL_14:
    return swift_release();
  }
  uint64_t v51 = v20;
  uint64_t v52 = v19;
  dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.getter();
  uint64_t v22 = v57;
  uint64_t v21 = v58;
  int v23 = (*(uint64_t (**)(uint64_t *, uint64_t))(v58 + 88))(v17, v57);
  if (v23 == enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.seconds(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v21 + 96))(v17, v22);
    uint64_t v24 = *v17;
    static Log.network.getter();
    swift_retain_n();
    unint64_t v25 = Logger.logObject.getter();
    int v26 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      LODWORD(v49) = v26;
      os_log_t v50 = v25;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      os_log_t v61 = (os_log_t)v48;
      *(_DWORD *)uint64_t v27 = 134218242;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_release();
      uint64_t v60 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v27 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v28 = sub_10007B7D4();
      unint64_t v30 = v29;
      swift_release();
      swift_release();
      uint64_t v60 = sub_100007E88(v28, v30, (uint64_t *)&v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      os_log_t v31 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v49, "Fixing invalid keepalive (%ld): %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v54 + 8))(v9, v53);
    (*(void (**)(char *, void, uint64_t))(v58 + 104))(v55, enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.off(_:), v22);
LABEL_28:
    dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.setter();
LABEL_29:
    swift_release();
    return swift_release();
  }
  if (v23 == enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.on(_:))
  {
    static Log.network.getter();
    swift_retain_n();
    Swift::String v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      Swift::String v35 = (uint8_t *)swift_slowAlloc();
      os_log_t v50 = (os_log_t)swift_slowAlloc();
      os_log_t v61 = v50;
      *(_DWORD *)Swift::String v35 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v36 = sub_10007B7D4();
      unint64_t v38 = v37;
      swift_release();
      swift_release();
      uint64_t v60 = sub_100007E88(v36, v38, (uint64_t *)&v61);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Fixing invalid keepalive (on): %s", v35, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v53);
      uint64_t v22 = v57;
      uint64_t v21 = v58;
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v53);
    }
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v55, enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.off(_:), v22);
    goto LABEL_28;
  }
  uint64_t v39 = enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.off(_:);
  if (v23 == enum case for NWProtocolQUIC.Metadata.KeepAliveBehavior.off(_:)) {
    goto LABEL_29;
  }
  static Log.network.getter();
  swift_retain_n();
  uint64_t v40 = Logger.logObject.getter();
  int v41 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v40, (os_log_type_t)v41))
  {
    LODWORD(v50) = v41;
    os_log_t v56 = v40;
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    os_log_t v61 = (os_log_t)v49;
    *(_DWORD *)uint64_t v42 = 136315138;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v48 = (uint64_t)(v42 + 4);
    uint64_t v43 = v55;
    dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.getter();
    uint64_t v44 = String.init<A>(describing:)();
    unint64_t v46 = v45;
    swift_release();
    uint64_t v60 = sub_100007E88(v44, v46, (uint64_t *)&v61);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v47 = v56;
    _os_log_impl((void *)&_mh_execute_header, v56, (os_log_type_t)v50, "Found unkown keepalive: %s", v42, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v53);
    uint64_t v21 = v58;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v6, v53);
    uint64_t v43 = v55;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v43, v39, v22);
  dispatch thunk of NWProtocolQUIC.Metadata.keepAlive.setter();
  swift_release();
  (*(void (**)(uint64_t *, uint64_t))(v21 + 8))(v17, v22);
  return swift_release();
}

uint64_t sub_100071EC0(uint64_t a1)
{
  v2[11] = a1;
  v2[12] = v1;
  type metadata accessor for MessageBody();
  v2[13] = swift_task_alloc();
  type metadata accessor for Message.Operation();
  v2[14] = swift_task_alloc();
  sub_100005CB0(&qword_1000F3738);
  v2[15] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ProtocolVersion();
  v2[16] = v3;
  v2[17] = *(void *)(v3 - 8);
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for FileHeaderProto();
  v2[20] = v4;
  v2[21] = *(void *)(v4 - 8);
  v2[22] = swift_task_alloc();
  type metadata accessor for BinaryDecodingOptions();
  v2[23] = swift_task_alloc();
  v2[24] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MessageProto();
  v2[25] = v5;
  v2[26] = *(void *)(v5 - 8);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  v2[29] = type metadata accessor for CommunicationActor();
  v2[30] = static CommunicationActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v2[31] = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100072168;
  return sub_100078414();
}

uint64_t sub_100072168(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[32] = a1;
  v3[33] = v1;
  swift_task_dealloc();
  uint64_t v4 = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  if (v1)
  {
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000733A0;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v3[34] = v4;
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    v3[35] = v11;
    v3[36] = v12;
    uint64_t v8 = sub_100072334;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100072334()
{
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v2 = LazyData.getData()();
  if (v1)
  {
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
LABEL_4:
    return v6();
  }
  uint64_t v4 = v2;
  uint64_t v5 = v3;
  swift_release();
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = v5;
  BinaryDecodingOptions.init()();
  sub_10007C238(&qword_1000F36E8, 255, (void (*)(uint64_t))&type metadata accessor for MessageProto);
  Message.init<A>(serializedBytes:extensions:partial:options:)();
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  *(void *)(v0 + 296) = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0xD000000000000010, 0x80000001000D65E0);
  int v8 = MessageProto.fileCount.getter();
  *(_DWORD *)(v0 + 360) = v8;
  if (!v8)
  {
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 120);
    swift_release();
    MessageProto.version.getter();
    ProtocolVersion.init(rawValue:)();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1)
    {
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v13 = *(void *)(v0 + 120);
      static ProtocolVersion.current.getter();
      swift_release();
      sub_100016B90(v13, &qword_1000F3738);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 152), *(void *)(v0 + 120), *(void *)(v0 + 128));
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 16))(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 200));
    Message.Operation.init(protobuf:)();
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v14 = *(void *)(v0 + 152);
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v17 = *(void *)(v0 + 136);
    MessageProto.messageContent.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, v14, v16);
    MessageBody.init(data:files:version:)();
    if (MessageProto.hasComplete.getter()) {
      MessageProto.complete.getter();
    }
    uint64_t v18 = *(void *)(v0 + 296);
    uint64_t v19 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 200);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 152);
    uint64_t v23 = *(void *)(v0 + 128);
    uint64_t v24 = *(void *)(v0 + 136);
    Message.init(operation:content:complete:)();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    sub_100079310(v18, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    goto LABEL_4;
  }
  *(_DWORD *)(v0 + 364) = 0;
  *(void *)(v0 + 304) = &_swiftEmptyDictionarySingleton;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_100072920;
  return sub_100078414();
}

uint64_t sub_100072920(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[40] = a1;
  v3[41] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = v3[35];
    uint64_t v5 = v3[36];
    uint64_t v6 = sub_100073490;
  }
  else
  {
    uint64_t v4 = v3[35];
    uint64_t v5 = v3[36];
    uint64_t v6 = sub_100072A3C;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100072A3C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = LazyData.getData()();
  if (v1)
  {
    uint64_t v4 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 224);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 208);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_100079310(v4, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v8 = v2;
    uint64_t v9 = v3;
    swift_release();
    *(void *)(v0 + 72) = v8;
    *(void *)(v0 + 80) = v9;
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(void *)(v0 + 48) = 0;
    BinaryDecodingOptions.init()();
    sub_10007C238(&qword_1000F3720, 255, (void (*)(uint64_t))&type metadata accessor for FileHeaderProto);
    Message.init<A>(serializedBytes:extensions:partial:options:)();
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_100072D4C;
    return sub_100078414();
  }
}

uint64_t sub_100072D4C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 344) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v4[35];
    uint64_t v6 = v4[36];
    uint64_t v7 = sub_1000735EC;
  }
  else
  {
    v4[44] = a1;
    uint64_t v5 = v4[35];
    uint64_t v6 = v4[36];
    uint64_t v7 = sub_100072E78;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_100072E78()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 304);
  int v34 = *(_DWORD *)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v5 = *(void *)(v0 + 160);
  int v6 = *(_DWORD *)(v0 + 364) + 1;
  uint64_t v7 = FileHeaderProto.filename.getter();
  uint64_t v9 = v8;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000538F0(v1, v7, v9, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  if (v6 == v34)
  {
    uint64_t v11 = *(void *)(v0 + 344);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 120);
    swift_release();
    MessageProto.version.getter();
    ProtocolVersion.init(rawValue:)();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v14, 1, v12) == 1)
    {
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *(void *)(v0 + 120);
      static ProtocolVersion.current.getter();
      swift_release();
      sub_100016B90(v15, &qword_1000F3738);
    }
    else
    {
      (*(void (**)(void, void, void))(*(void *)(v0 + 136) + 32))(*(void *)(v0 + 152), *(void *)(v0 + 120), *(void *)(v0 + 128));
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 208) + 16))(*(void *)(v0 + 216), *(void *)(v0 + 224), *(void *)(v0 + 200));
    Message.Operation.init(protobuf:)();
    if (v11)
    {
      uint64_t v18 = *(void *)(v0 + 296);
      uint64_t v19 = *(void *)(v0 + 224);
      uint64_t v20 = *(void *)(v0 + 200);
      uint64_t v21 = *(void *)(v0 + 208);
      (*(void (**)(void, void))(*(void *)(v0 + 136) + 8))(*(void *)(v0 + 152), *(void *)(v0 + 128));
      swift_bridgeObjectRelease();
      sub_100079310(v18, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    }
    else
    {
      uint64_t v24 = *(void *)(v0 + 144);
      uint64_t v23 = *(void *)(v0 + 152);
      uint64_t v25 = *(void *)(v0 + 128);
      uint64_t v26 = *(void *)(v0 + 136);
      MessageProto.messageContent.getter();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v24, v23, v25);
      MessageBody.init(data:files:version:)();
      if (MessageProto.hasComplete.getter()) {
        MessageProto.complete.getter();
      }
      uint64_t v27 = *(void *)(v0 + 296);
      uint64_t v28 = *(void *)(v0 + 224);
      uint64_t v29 = *(void *)(v0 + 200);
      uint64_t v30 = *(void *)(v0 + 208);
      uint64_t v31 = *(void *)(v0 + 152);
      uint64_t v32 = *(void *)(v0 + 128);
      uint64_t v33 = *(void *)(v0 + 136);
      Message.init(operation:content:complete:)();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      sub_100079310(v27, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    }
    return v22();
  }
  else
  {
    ++*(_DWORD *)(v0 + 364);
    *(void *)(v0 + 304) = v2;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_100072920;
    return sub_100078414();
  }
}

uint64_t sub_1000733A0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100073490()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  swift_release();
  sub_100079310(v1, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1000735EC()
{
  uint64_t v1 = v0[37];
  uint64_t v2 = v0[28];
  uint64_t v3 = v0[25];
  uint64_t v4 = v0[26];
  uint64_t v6 = v0[21];
  uint64_t v5 = v0[22];
  uint64_t v7 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_100079310(v1, (uint64_t)&unk_1000EEB58, (uint64_t)&unk_1000EEB80, (uint64_t)&unk_1000F3748);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_100073768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[10] = a3;
  v4[11] = v3;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = type metadata accessor for MessageBody();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for MessageProto();
  v4[15] = v6;
  v4[16] = *(void *)(v6 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Message.Operation();
  v4[18] = v7;
  v4[19] = *(void *)(v7 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Message();
  v4[21] = v8;
  v4[22] = *(void *)(v8 - 8);
  v4[23] = swift_task_alloc();
  v4[24] = type metadata accessor for CommunicationActor();
  v4[25] = static CommunicationActor.shared.getter();
  v4[26] = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[27] = v10;
  v4[28] = v9;
  return _swift_task_switch(sub_1000739B0, v10, v9);
}

uint64_t sub_1000739B0()
{
  uint64_t v1 = v0[10];
  (*(void (**)(void, void, void))(v0[22] + 16))(v0[23], v0[8], v0[21]);
  if (v1)
  {
    uint64_t v2 = v0[23];
    uint64_t v3 = v0[21];
    uint64_t v4 = v0[10];
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v0[22] + 8);
    swift_bridgeObjectRetain();
    v5(v2, v3);
    uint64_t v6 = v0[9];
  }
  else
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = v0[22];
    uint64_t v7 = v0[23];
    uint64_t v10 = v0[20];
    uint64_t v9 = v0[21];
    uint64_t v11 = v0[18];
    uint64_t v12 = v0[19];
    Message.operation.getter();
    uint64_t v6 = sub_10007BB94(v10);
    uint64_t v4 = v13;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_release();
  }
  v0[29] = v4;
  uint64_t v14 = v0[8];
  static TestProperties.requestTimeout.getter();
  type metadata accessor for PowerAssertion();
  swift_allocObject();
  v0[30] = sub_100009B50(0xD00000000000001CLL, 0x80000001000D6350, 0x20676E69646E6553, 0xEF6567617373654DLL);
  *(void *)(swift_task_alloc() + 16) = v14;
  sub_10007C238(&qword_1000F36E8, 255, (void (*)(uint64_t))&type metadata accessor for MessageProto);
  static Message.with(_:)();
  swift_task_dealloc();
  sub_100005CB0(&qword_1000F36F0);
  uint64_t inited = swift_initStackObject();
  v0[31] = inited;
  *(_OWORD *)(inited + 16) = xmmword_1000D7AB0;
  uint64_t v16 = Message.serializedData(partial:)();
  uint64_t v18 = v0[13];
  uint64_t v17 = v0[14];
  uint64_t v19 = v0[12];
  *(void *)(inited + 32) = v16;
  *(void *)(inited + 40) = v20;
  Message.content.getter();
  uint64_t v21 = MessageBody.files.getter();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  uint64_t v22 = sub_100074238(v21);
  swift_bridgeObjectRelease();
  sub_1000805F8(v22);
  v0[32] = inited;
  char v23 = Message.complete.getter();
  uint64_t v24 = (void *)swift_task_alloc();
  v0[33] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100073EB4;
  return sub_100075804(inited, v23 & 1, v6, v4);
}

uint64_t sub_100073EB4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 272) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 224);
  uint64_t v4 = *(void *)(v2 + 216);
  if (v0) {
    uint64_t v5 = sub_100074134;
  }
  else {
    uint64_t v5 = sub_100074024;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100074024()
{
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100079310(v1, (uint64_t)&unk_1000EEB08, (uint64_t)&unk_1000EEB30, (uint64_t)&unk_1000F3728);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100074134()
{
  uint64_t v1 = v0[30];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  sub_100079310(v1, (uint64_t)&unk_1000EEB08, (uint64_t)&unk_1000EEB30, (uint64_t)&unk_1000F3728);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_100074238(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v33 = type metadata accessor for FileHeaderProto();
  __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  int v34 = &_swiftEmptyArrayStorage;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v27 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v29 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v30 = a1;
  swift_bridgeObjectRetain();
  int64_t v10 = 0;
  long long v28 = xmmword_1000D7F70;
  if (!v9) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v31 = v10;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v14 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(v30 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    type metadata accessor for CommunicationActor();
    swift_bridgeObjectRetain();
    swift_retain();
    static CommunicationActor.shared.getter();
    sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t isCurrentExecutor = swift_task_isCurrentExecutor();
    if ((isCurrentExecutor & 1) == 0) {
      uint64_t isCurrentExecutor = swift_task_reportUnexpectedExecutor();
    }
    __chkstk_darwin(isCurrentExecutor);
    *(&v26 - 2) = v18;
    *(&v26 - 1) = v19;
    sub_10007C238(&qword_1000F3720, 255, (void (*)(uint64_t))&type metadata accessor for FileHeaderProto);
    static Message.with(_:)();
    sub_100005CB0(&qword_1000F36F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v28;
    uint64_t v22 = Message.serializedData(partial:)();
    if (v2)
    {
      *(void *)(inited + 16) = 0;
      swift_release();
      (*v29)(v32, v33);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    *(void *)(inited + 32) = v22;
    *(void *)(inited + 40) = v23;
    uint64_t v2 = 0;
    *(void *)(inited + 48) = LazyData.getData()();
    *(void *)(inited + 56) = v24;
    (*v29)(v32, v33);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1000805F8(inited);
    int64_t v10 = v31;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v13 = __OFADD__(v10, 1);
    int64_t v14 = v10 + 1;
    if (v13)
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v27) {
      goto LABEL_28;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v9 = (v15 - 1) & v15;
    int64_t v31 = v14;
  }
  int64_t v16 = v14 + 1;
  if (v14 + 1 >= v27) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v14 + 2;
  if (v14 + 2 >= v27) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v14 + 3;
  if (v14 + 3 >= v27) {
    goto LABEL_28;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v14 = v16;
    goto LABEL_17;
  }
  int64_t v16 = v14 + 4;
  if (v14 + 4 < v27)
  {
    unint64_t v15 = *(void *)(v26 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v14 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v14 >= v27) {
          goto LABEL_28;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v14);
        ++v16;
        if (v15) {
          goto LABEL_17;
        }
      }
LABEL_30:
      __break(1u);
    }
    goto LABEL_16;
  }
LABEL_28:
  swift_release();
  return (uint64_t)v34;
}

void sub_1000746F0()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v24 - v7;
  if ((__swp(1u, (unsigned int *)(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 24) + 136))(v6)) & 1) == 0)
  {
    sub_100005CB0(&qword_1000F36D8);
    uint64_t inited = swift_initStaticObject();
    int64_t v10 = atomic_fetch_add_explicit((atomic_ullong *volatile)(*(uint64_t (**)(void))(*(void *)inited + 136))(), 1uLL, memory_order_relaxed)+ 1;
    if (v10 < 21)
    {
      static Log.network.getter();
      swift_retain_n();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v27 = v25;
        *(_DWORD *)uint64_t v19 = 136315394;
        uint64_t v24 = v19 + 4;
        swift_retain();
        uint64_t v20 = sub_10007B7D4();
        unint64_t v22 = v21;
        swift_release();
        uint64_t v26 = sub_100007E88(v20, v22, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 12) = 2048;
        uint64_t v26 = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "[NWC] %s start: (total: %ld)", (uint8_t *)v19, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    }
    else
    {
      static Log.network.getter();
      swift_retain_n();
      unint64_t v11 = Logger.logObject.getter();
      os_log_type_t v12 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v11, v12))
      {
        uint64_t v13 = swift_slowAlloc();
        uint64_t v25 = swift_slowAlloc();
        uint64_t v27 = v25;
        *(_DWORD *)uint64_t v13 = 136315650;
        uint64_t v24 = v13 + 4;
        swift_retain();
        uint64_t v14 = sub_10007B7D4();
        unint64_t v16 = v15;
        swift_release();
        uint64_t v26 = sub_100007E88(v14, v16, &v27);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v13 + 12) = 2048;
        uint64_t v26 = v10;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v13 + 22) = 2048;
        uint64_t v26 = 20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        _os_log_impl((void *)&_mh_execute_header, v11, v12, "[NWC] %s start: (total: %ld > max: %ld)", (uint8_t *)v13, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v2 + 8))(v8, v1);
    }
    type metadata accessor for CommunicationActor();
    uint64_t v23 = (void *)static CommunicationActor.sharedQueue.getter();
    NWConnection.start(queue:)();
  }
}

void sub_100074B98()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (unsigned int *)(*(uint64_t (**)(uint64_t))(**(void **)(v0 + 24) + 136))(v3);
  __swp(v7, v6);
  if (v7)
  {
    sub_100005CB0(&qword_1000F36D8);
    uint64_t inited = swift_initStaticObject();
    unint64_t add_explicit = atomic_fetch_add_explicit((atomic_ullong *volatile)(*(uint64_t (**)(void))(*(void *)inited + 136))(), 0xFFFFFFFFFFFFFFFFLL, memory_order_relaxed);
    static Log.network.getter();
    swift_retain_n();
    int64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v17 = add_explicit - 1;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v16 = v12 + 4;
      swift_retain();
      uint64_t v13 = sub_10007B7D4();
      unint64_t v15 = v14;
      swift_release();
      uint64_t v18 = sub_100007E88(v13, v15, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2048;
      uint64_t v18 = v17;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "[NWC] %s close: (total: %ld)", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    NWConnection.cancel()();
  }
}

uint64_t sub_100074E64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NWConnection.State();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  int64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v22 - v11;
  NWConnection.state.getter();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for NWConnection.State.cancelled(_:), v6);
  sub_10007C238(&qword_1000F36D0, 255, (void (*)(uint64_t))&type metadata accessor for NWConnection.State);
  char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
  unint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  if ((v13 & 1) == 0)
  {
    static Log.network.getter();
    swift_retain_n();
    unint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v22 = v3;
      uint64_t v23 = v2;
      *(_DWORD *)uint64_t v17 = 136315138;
      swift_retain();
      uint64_t v18 = sub_10007B7D4();
      unint64_t v20 = v19;
      swift_release();
      uint64_t v24 = sub_100007E88(v18, v20, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "[NWC] %s non-cancelled deinit", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v23);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    sub_100074B98();
  }
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10007520C()
{
  uint64_t v0 = sub_100074E64();

  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for NetworkCanceller()
{
  return self;
}

uint64_t type metadata accessor for NetworkConnection()
{
  return self;
}

uint64_t sub_100075284(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v2 = type metadata accessor for ProtocolVersion();
  uint64_t v26 = *(void *)(v2 - 8);
  uint64_t v27 = v2;
  __chkstk_darwin(v2);
  uint64_t v25 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for MessageBody();
  uint64_t v31 = *(void *)(v28 - 8);
  uint64_t v4 = __chkstk_darwin(v28);
  uint64_t v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin(v6);
  int64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = type metadata accessor for Message.Operation();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v15 = static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v29 = v15;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  Message.operation.getter();
  Message.Operation.protobuf(proto:)();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_release();
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  Message.content.getter();
  uint64_t v16 = MessageBody.files.getter();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v18 = v28;
  v31 += 8;
  v17(v10, v28);
  unint64_t v19 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (!HIDWORD(v19))
  {
    MessageProto.fileCount.setter();
    Message.content.getter();
    MessageBody.getData()();
    v17(v8, v18);
    MessageProto.messageContent.setter();
    unint64_t v20 = v24;
    Message.content.getter();
    unint64_t v21 = v25;
    MessageBody.version.getter();
    v17(v20, v18);
    ProtocolVersion.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v27);
    MessageProto.version.setter();
    Message.complete.getter();
    MessageProto.complete.setter();
    return swift_release();
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10007570C()
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_bridgeObjectRetain();
  FileHeaderProto.filename.setter();
  return swift_release();
}

uint64_t sub_100075804(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 88) = a4;
  *(void *)(v5 + 96) = v4;
  *(unsigned char *)(v5 + 248) = a2;
  *(void *)(v5 + 72) = a1;
  *(void *)(v5 + 80) = a3;
  uint64_t v6 = type metadata accessor for Logger();
  *(void *)(v5 + 104) = v6;
  *(void *)(v5 + 112) = *(void *)(v6 - 8);
  *(void *)(v5 + 120) = swift_task_alloc();
  *(void *)(v5 + 128) = type metadata accessor for CommunicationActor();
  *(void *)(v5 + 136) = static CommunicationActor.shared.getter();
  *(void *)(v5 + 144) = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 152) = v8;
  *(void *)(v5 + 160) = v7;
  return _swift_task_switch(sub_10007593C, v8, v7);
}

uint64_t sub_10007593C()
{
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = (uint64_t *)(v0 + 40);
  uint64_t v2 = *(void *)(*(void *)(v0 + 72) + 16);
  *(void *)(v0 + 168) = v2;
  if (v2)
  {
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v3 = 0;
    uint64_t v4 = (char *)&_swiftEmptyArrayStorage;
    while (2)
    {
      *(void *)(v0 + 176) = v3;
      uint64_t v5 = *(void *)(v0 + 72) + 16 * v3;
      uint64_t v6 = *(void *)(v5 + 32);
      *(void *)(v0 + 184) = v6;
      unint64_t v7 = *(void *)(v5 + 40);
      *(void *)(v0 + 192) = v7;
      sub_10003E840(v6, v7);
      sub_10003E840(v6, v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_1000D1DA8(0, *((void *)v4 + 2) + 1, 1, v4);
      }
      unint64_t v9 = *((void *)v4 + 2);
      unint64_t v8 = *((void *)v4 + 3);
      if (v9 >= v8 >> 1) {
        uint64_t v4 = sub_1000D1DA8((char *)(v8 > 1), v9 + 1, 1, v4);
      }
      *(void *)(v0 + 200) = v4;
      *((void *)v4 + 2) = v9 + 1;
      uint64_t v10 = &v4[16 * v9];
      *((void *)v10 + 4) = v6;
      *((void *)v10 + 5) = v7;
      uint64_t v11 = 0;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v11) = HIDWORD(v6) - v6;
          if (__OFSUB__(HIDWORD(v6), v6)) {
            goto LABEL_23;
          }
          uint64_t v11 = (int)v11;
LABEL_12:
          BOOL v14 = __OFADD__(*v1, v11);
          uint64_t v15 = *v1 + v11;
          if (v14)
          {
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            JUMPOUT(0x100075BD0);
          }
          *uint64_t v1 = v15;
          if (v15 >= 0x100000)
          {
            uint64_t v16 = (void *)swift_task_alloc();
            *(void *)(v0 + 208) = v16;
            *uint64_t v16 = v0;
            v16[1] = sub_100075BE0;
            uint64_t v17 = *(void *)(v0 + 88);
            uint64_t v18 = *(void *)(v0 + 80);
            uint64_t v19 = (uint64_t)v4;
            char v20 = 0;
            goto LABEL_19;
          }
          sub_100005C58(v6, v7);
          uint64_t v3 = *(void *)(v0 + 176) + 1;
          if (v3 != *(void *)(v0 + 168)) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
        case 2uLL:
          uint64_t v13 = *(void *)(v6 + 16);
          uint64_t v12 = *(void *)(v6 + 24);
          BOOL v14 = __OFSUB__(v12, v13);
          uint64_t v11 = v12 - v13;
          if (!v14) {
            goto LABEL_12;
          }
          goto LABEL_24;
        case 3uLL:
          goto LABEL_12;
        default:
          uint64_t v11 = BYTE6(v7);
          goto LABEL_12;
      }
      break;
    }
  }
  else
  {
    uint64_t v4 = (char *)&_swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 224) = v4;
  unint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v21;
  *unint64_t v21 = v0;
  v21[1] = sub_100076274;
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v18 = *(void *)(v0 + 80);
  char v20 = *(unsigned char *)(v0 + 248);
  uint64_t v19 = (uint64_t)v4;
LABEL_19:
  return sub_100076C1C(v19, v20, v18, v17);
}

uint64_t sub_100075BE0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    uint64_t v5 = sub_100076400;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    uint64_t v5 = sub_100075D28;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100075D28()
{
  static Log.network.getter();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v1, v2))
  {
    os_log_type_t v41 = v2;
    uint64_t v3 = swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v4 = sub_1000764F4(*(void *)(v0 + 80), *(void **)(v0 + 88));
    unint64_t v6 = v5;
    swift_release();
    *(void *)(v0 + 56) = sub_100007E88(v4, v6, (uint64_t *)(v0 + 48));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v39 = *(void *)(v0 + 184);
    unint64_t v40 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 104);
    uint64_t v10 = *(void *)(v0 + 40);
    swift_release();
    *(void *)(v0 + 64) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v41, "%s end of batch after (%ld bytes)", (uint8_t *)v3, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v8, v9);
    uint64_t v11 = v39;
    unint64_t v12 = v40;
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 184);
    unint64_t v13 = *(void *)(v0 + 192);
    uint64_t v16 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 120);
    uint64_t v17 = *(void *)(v0 + 104);
    swift_release_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    uint64_t v11 = v14;
    unint64_t v12 = v13;
  }
  sub_100005C58(v11, v12);
  *(void *)(v0 + 40) = 0;
  uint64_t v18 = *(void *)(v0 + 176) + 1;
  uint64_t v19 = (char *)&_swiftEmptyArrayStorage;
  if (v18 == *(void *)(v0 + 168))
  {
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 224) = v19;
    uint64_t v32 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_100076274;
    uint64_t v33 = *(void *)(v0 + 88);
    uint64_t v34 = *(void *)(v0 + 80);
    char v35 = *(unsigned char *)(v0 + 248);
    uint64_t v36 = (uint64_t)v19;
    goto LABEL_23;
  }
  while (2)
  {
    *(void *)(v0 + 176) = v18;
    uint64_t v20 = *(void *)(v0 + 72) + 16 * v18;
    uint64_t v21 = *(void *)(v20 + 32);
    *(void *)(v0 + 184) = v21;
    unint64_t v22 = *(void *)(v20 + 40);
    *(void *)(v0 + 192) = v22;
    sub_10003E840(v21, v22);
    sub_10003E840(v21, v22);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v19 = sub_1000D1DA8(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v24 = *((void *)v19 + 2);
    unint64_t v23 = *((void *)v19 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v19 = sub_1000D1DA8((char *)(v23 > 1), v24 + 1, 1, v19);
    }
    *(void *)(v0 + 200) = v19;
    *((void *)v19 + 2) = v24 + 1;
    uint64_t v25 = &v19[16 * v24];
    *((void *)v25 + 4) = v21;
    *((void *)v25 + 5) = v22;
    uint64_t v26 = 0;
    switch(v22 >> 62)
    {
      case 1uLL:
        LODWORD(v26) = HIDWORD(v21) - v21;
        if (__OFSUB__(HIDWORD(v21), v21)) {
          goto LABEL_27;
        }
        uint64_t v26 = (int)v26;
LABEL_18:
        uint64_t v30 = *(void *)(v0 + 40);
        BOOL v29 = __OFADD__(v30, v26);
        uint64_t v31 = v30 + v26;
        if (v29)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
          JUMPOUT(0x100076264);
        }
        *(void *)(v0 + 40) = v31;
        if (v31 < 0x100000)
        {
          sub_100005C58(v21, v22);
          uint64_t v18 = *(void *)(v0 + 176) + 1;
          if (v18 == *(void *)(v0 + 168)) {
            goto LABEL_21;
          }
          continue;
        }
        unint64_t v37 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v37;
        void *v37 = v0;
        v37[1] = sub_100075BE0;
        uint64_t v33 = *(void *)(v0 + 88);
        uint64_t v34 = *(void *)(v0 + 80);
        uint64_t v36 = (uint64_t)v19;
        char v35 = 0;
LABEL_23:
        return sub_100076C1C(v36, v35, v34, v33);
      case 2uLL:
        uint64_t v28 = *(void *)(v21 + 16);
        uint64_t v27 = *(void *)(v21 + 24);
        BOOL v29 = __OFSUB__(v27, v28);
        uint64_t v26 = v27 - v28;
        if (!v29) {
          goto LABEL_18;
        }
        goto LABEL_28;
      case 3uLL:
        goto LABEL_18;
      default:
        uint64_t v26 = BYTE6(v22);
        goto LABEL_18;
    }
  }
}

uint64_t sub_100076274()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    unint64_t v5 = sub_10007647C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 152);
    uint64_t v4 = *(void *)(v2 + 160);
    unint64_t v5 = sub_100076390;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100076390()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100076400()
{
  uint64_t v1 = v0[23];
  unint64_t v2 = v0[24];
  swift_release();
  sub_100005C58(v1, v2);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10007647C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1000764F4(uint64_t a1, void *a2)
{
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  _StringGuts.grow(_:)(31);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v4 = sub_10007B7D4();
  unint64_t v6 = v5;
  swift_release();
  v7._countAndFlagsBits = v4;
  v7._object = v6;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x6567617373656D20;
  v8._object = (void *)0xE900000000000020;
  String.append(_:)(v8);
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  String.append(_:)(v9);
  swift_release();
  return 0xD000000000000012;
}

uint64_t sub_100076674(uint64_t a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v40 = a5;
  unint64_t v41 = a6;
  uint64_t v38 = a3;
  uint64_t v36 = a1;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v12 = static CommunicationActor.shared.getter();
  uint64_t v13 = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v39 = v12;
  uint64_t v37 = v13;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = v40;
  unint64_t v15 = v41;
  sub_10003E840(v40, v41);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003E840(v14, v15);
  uint64_t v16 = Logger.logObject.getter();
  int v35 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, (os_log_type_t)v35))
  {
    uint64_t v30 = v16;
    uint64_t v31 = v11;
    uint64_t v32 = v9;
    uint64_t v33 = v8;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v43 = v29;
    *(_DWORD *)uint64_t v17 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    unint64_t v34 = v41 >> 62;
    unint64_t v18 = sub_1000764F4(v36, a2);
    unint64_t v20 = v19;
    swift_release();
    uint64_t v42 = sub_100007E88(v18, v20, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v17 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v42 = sub_100007E88(v38, a4, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 22) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v22 = v40;
    unint64_t v21 = v41;
    switch((int)v34)
    {
      case 1:
        swift_release();
        sub_100005C58(v22, v21);
        LODWORD(v23) = HIDWORD(v22) - v22;
        if (__OFSUB__(HIDWORD(v22), v22))
        {
          __break(1u);
LABEL_21:
          __break(1u);
          JUMPOUT(0x100076C0CLL);
        }
        uint64_t v23 = (int)v23;
        break;
      case 2:
        uint64_t v25 = *(void *)(v40 + 16);
        uint64_t v24 = *(void *)(v40 + 24);
        swift_release();
        sub_100005C58(v22, v21);
        uint64_t v23 = v24 - v25;
        if (__OFSUB__(v24, v25)) {
          goto LABEL_21;
        }
        unint64_t v21 = v41;
        break;
      case 3:
        swift_release();
        sub_100005C58(v22, v21);
        uint64_t v23 = 0;
        break;
      default:
        swift_release();
        sub_100005C58(v22, v21);
        uint64_t v23 = BYTE6(v21);
        break;
    }
    uint64_t v26 = v30;
    uint64_t v42 = v23;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_100005C58(v22, v21);
    _os_log_impl((void *)&_mh_execute_header, v26, (os_log_type_t)v35, "%s sending %s (%ld bytes)", (uint8_t *)v17, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v33);
  }
  else
  {
    sub_100005C58(v14, v15);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    sub_100005C58(v14, v15);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return swift_release();
}

uint64_t sub_100076C1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 32) = a4;
  *(void *)(v5 + 40) = v4;
  *(unsigned char *)(v5 + 216) = a2;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = type metadata accessor for NWConnection.SendCompletion();
  *(void *)(v5 + 48) = v6;
  *(void *)(v5 + 56) = *(void *)(v6 - 8);
  *(void *)(v5 + 64) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ProtocolVersion();
  *(void *)(v5 + 72) = v7;
  *(void *)(v5 + 80) = *(void *)(v7 - 8);
  *(void *)(v5 + 88) = swift_task_alloc();
  *(void *)(v5 + 96) = swift_task_alloc();
  *(void *)(v5 + 104) = type metadata accessor for CommunicationActor();
  *(void *)(v5 + 112) = static CommunicationActor.shared.getter();
  *(void *)(v5 + 120) = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 128) = v9;
  *(void *)(v5 + 136) = v8;
  return _swift_task_switch(sub_100076DC0, v9, v8);
}

uint64_t sub_100076DC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = (v2 - 1) & 0x7FFFFFFFFFFFFFFFLL;
  if (v2 < 2 || v3 == 0) {
    goto LABEL_15;
  }
  uint64_t v45 = *(void *)(v0 + 64);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v37 = (void (**)(void, void))(*(void *)(v0 + 80) + 8);
  unsigned int v44 = enum case for NWConnection.SendCompletion.contentProcessed(_:);
  int v35 = (void (**)(void *, uint64_t))(v5 + 8);
  uint64_t v36 = (void (**)(void *, void, uint64_t))(v5 + 104);
  uint64_t v34 = swift_bridgeObjectRetain();
  os_log_t v47 = (unint64_t *)(v34 + 40);
  while (2)
  {
    unint64_t v6 = *v47;
    uint64_t v49 = *(v47 - 1);
    LODWORD(v7) = 0;
    switch(*v47 >> 62)
    {
      case 1uLL:
        if (!__OFSUB__(HIDWORD(v49), v49))
        {
          unint64_t v7 = HIDWORD(v49) - (int)v49;
          goto LABEL_11;
        }
        __break(1u);
        goto LABEL_31;
      case 2uLL:
        uint64_t v9 = *(void *)(v49 + 16);
        uint64_t v8 = *(void *)(v49 + 24);
        unint64_t v7 = v8 - v9;
        if (__OFSUB__(v8, v9))
        {
LABEL_31:
          __break(1u);
LABEL_32:
          __break(1u);
LABEL_33:
          __break(1u);
          return _assertionFailure(_:_:file:line:flags:)();
        }
LABEL_11:
        sub_10003E840(v49, v6);
        if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7)) {
          return _assertionFailure(_:_:file:line:flags:)();
        }
LABEL_13:
        *(_DWORD *)(v0 + 208) = v7;
        static ProtocolVersion.current.getter();
        sub_10007BFF8();
        uint64_t v10 = FixedWidthInteger.serialized(version:)();
        unint64_t v12 = v11;
        uint64_t v13 = *(void **)(v0 + 64);
        uint64_t v14 = *(void *)(v0 + 48);
        unint64_t v41 = *(void **)(v0 + 32);
        uint64_t v40 = *(void *)(v0 + 24);
        (*v37)(*(void *)(v0 + 96), *(void *)(v0 + 72));
        sub_100076674(v40, v41, 1702521203, 0xE400000000000000, v10, v12);
        uint64_t v43 = v3;
        *uint64_t v13 = nullsub_1;
        v47 += 2;
        *(void *)(v45 + 8) = 0;
        uint64_t v38 = *v36;
        (*v36)(v13, v44, v14);
        type metadata accessor for NWConnection.ContentContext();
        swift_retain();
        sub_10003E840(v10, v12);
        static NWConnection.ContentContext.defaultMessage.getter();
        NWConnection.send(content:contentContext:isComplete:completion:)();
        swift_release();
        sub_100005C58(v10, v12);
        swift_release();
        uint64_t v39 = *v35;
        (*v35)(v13, v14);
        sub_100076674(v40, v41, 1635017060, 0xE400000000000000, v49, v6);
        *uint64_t v13 = nullsub_1;
        *(void *)(v45 + 8) = 0;
        v38(v13, v44, v14);
        sub_10003E840(v49, v6);
        swift_retain();
        static NWConnection.ContentContext.defaultMessage.getter();
        NWConnection.send(content:contentContext:isComplete:completion:)();
        swift_release();
        sub_100005C58(v49, v6);
        swift_release();
        sub_100005C58(v49, v6);
        sub_100005C58(v10, v12);
        v39(v13, v14);
        --v3;
        if (v43 != 1) {
          continue;
        }
        swift_unknownObjectRelease();
        uint64_t v1 = v34;
        unint64_t v2 = *(void *)(v34 + 16);
LABEL_15:
        if (v2)
        {
          uint64_t v15 = v1 + 32 + 16 * v2;
          uint64_t v16 = *(void *)(v15 - 16);
          *(void *)(v0 + 144) = v16;
          unint64_t v17 = *(void *)(v15 - 8);
          *(void *)(v0 + 152) = v17;
          LODWORD(v18) = 0;
          switch(v17 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v16), v16)) {
                goto LABEL_32;
              }
              unint64_t v18 = HIDWORD(v16) - (int)v16;
              goto LABEL_25;
            case 2uLL:
              uint64_t v24 = *(void *)(v16 + 16);
              uint64_t v23 = *(void *)(v16 + 24);
              unint64_t v18 = v23 - v24;
              if (__OFSUB__(v23, v24)) {
                goto LABEL_33;
              }
LABEL_25:
              sub_10003E840(v16, v17);
              if ((v18 & 0x8000000000000000) != 0 || HIDWORD(v18)) {
                return _assertionFailure(_:_:file:line:flags:)();
              }
              goto LABEL_18;
            case 3uLL:
              goto LABEL_18;
            default:
              LODWORD(v18) = BYTE6(v17);
LABEL_18:
              *(_DWORD *)(v0 + 212) = v18;
              static ProtocolVersion.current.getter();
              sub_10007BFF8();
              uint64_t v19 = FixedWidthInteger.serialized(version:)();
              *(void *)(v0 + 160) = v19;
              *(void *)(v0 + 168) = v20;
              uint64_t v25 = v19;
              unint64_t v26 = v20;
              uint64_t v27 = *(void **)(v0 + 64);
              uint64_t v28 = *(void *)(v0 + 56);
              uint64_t v48 = *(void *)(v0 + 120);
              uint64_t v50 = *(void *)(v0 + 48);
              uint64_t v29 = *(void **)(v0 + 32);
              uint64_t v42 = *(void *)(v0 + 40);
              uint64_t v30 = *(void *)(v0 + 24);
              char v46 = *(unsigned char *)(v0 + 216);
              (*(void (**)(void, void))(*(void *)(v0 + 80) + 8))(*(void *)(v0 + 88), *(void *)(v0 + 72));
              sub_100076674(v30, v29, 0x7A6973207473616CLL, 0xE900000000000065, v25, v26);
              *uint64_t v27 = nullsub_1;
              v27[1] = 0;
              (*(void (**)(void *, void, uint64_t))(v28 + 104))(v27, enum case for NWConnection.SendCompletion.contentProcessed(_:), v50);
              type metadata accessor for NWConnection.ContentContext();
              swift_retain();
              sub_10003E840(v25, v26);
              static NWConnection.ContentContext.defaultMessage.getter();
              NWConnection.send(content:contentContext:isComplete:completion:)();
              swift_release();
              sub_100005C58(v25, v26);
              swift_release();
              (*(void (**)(void *, uint64_t))(v28 + 8))(v27, v50);
              uint64_t v31 = static CommunicationActor.shared.getter();
              *(void *)(v0 + 176) = v31;
              uint64_t v32 = swift_task_alloc();
              *(void *)(v0 + 184) = v32;
              *(void *)(v32 + 16) = v42;
              *(void *)(v32 + 24) = v30;
              *(void *)(v32 + 32) = v29;
              *(void *)(v32 + 40) = v16;
              *(void *)(v32 + 48) = v17;
              *(unsigned char *)(v32 + 56) = v46;
              uint64_t v33 = (void *)swift_task_alloc();
              *(void *)(v0 + 192) = v33;
              *uint64_t v33 = v0;
              v33[1] = sub_100077618;
              uint64_t result = withCheckedThrowingContinuation<A>(isolation:function:_:)(v33, v31, v48, 0xD00000000000002CLL, 0x80000001000D6580, sub_10007C04C, v32, (char *)&type metadata for () + 8);
              break;
          }
        }
        else
        {
          swift_release();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          unint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
          return v21();
        }
        return result;
      case 3uLL:
        goto LABEL_13;
      default:
        LODWORD(v7) = BYTE6(v6);
        goto LABEL_13;
    }
  }
}

uint64_t sub_100077618()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_1000777E0;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 136);
    uint64_t v5 = sub_10007773C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10007773C()
{
  uint64_t v1 = v0[18];
  unint64_t v2 = v0[19];
  sub_100005C58(v0[20], v0[21]);
  sub_100005C58(v1, v2);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000777E0()
{
  uint64_t v2 = v0[18];
  unint64_t v1 = v0[19];
  sub_100005C58(v0[20], v0[21]);
  swift_release();
  sub_100005C58(v2, v1);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1000778A0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6, int a7)
{
  int v30 = a7;
  uint64_t v31 = a5;
  uint64_t v28 = a2;
  unint64_t v25 = a1;
  uint64_t v10 = sub_100005CB0(&qword_1000F3710);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v24 = v12;
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for NWConnection.SendCompletion();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v15 = (uint64_t (**)(uint64_t))((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CommunicationActor();
  uint64_t v16 = static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v26 = v16;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v17 = v28;
  sub_100076674(a3, a4, 0x746164207473616CLL, 0xE900000000000061, v31, a6);
  (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v25, v10);
  uint64_t v18 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v25 = a6;
  uint64_t v19 = (v18 + 40) & ~v18;
  unint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = v17;
  *((void *)v20 + 3) = a3;
  *((void *)v20 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v20[v19], v13, v10);
  NSObject *v15 = sub_10007C138;
  v15[1] = (uint64_t (*)(uint64_t))v20;
  uint64_t v21 = v27;
  uint64_t v22 = v29;
  (*(void (**)(uint64_t (**)(uint64_t), void, uint64_t))(v27 + 104))(v15, enum case for NWConnection.SendCompletion.contentProcessed(_:), v29);
  type metadata accessor for NWConnection.ContentContext();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  static NWConnection.ContentContext.defaultMessage.getter();
  NWConnection.send(content:contentContext:isComplete:completion:)();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t (**)(uint64_t), uint64_t))(v21 + 8))(v15, v22);
  return swift_release();
}

uint64_t sub_100077BF8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v55 = a3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  os_log_t v56 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_100005CB0(&qword_1000F3718);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NWError();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  unint64_t v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v47 - v21;
  sub_10007C1B4(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_100016B90((uint64_t)v15, &qword_1000F3718);
    static Log.network.getter();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      os_log_t v56 = (char *)swift_slowAlloc();
      uint64_t v60 = v56;
      *(_DWORD *)uint64_t v25 = 136315394;
      uint64_t v54 = a5;
      swift_retain();
      swift_retain();
      uint64_t v26 = sub_10007B7D4();
      unint64_t v28 = v27;
      swift_release();
      swift_release();
      uint64_t v59 = sub_100007E88(v26, v28, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_100007E88(v55, a4, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "[NWC] %s message %s done sending", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v58);
    sub_100005CB0(&qword_1000F3710);
    return CheckedContinuation.resume(returning:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
    static Log.network.getter();
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v53(v20, v22, v16);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v30 = static os_log_type_t.error.getter();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v54 = a5;
      uint64_t v33 = v32;
      uint64_t v50 = (void *)swift_slowAlloc();
      uint64_t v51 = swift_slowAlloc();
      uint64_t v60 = (char *)v51;
      *(_DWORD *)uint64_t v33 = 136315650;
      uint64_t v47 = v33 + 4;
      os_log_t v49 = v29;
      swift_retain();
      swift_retain();
      uint64_t v34 = sub_10007B7D4();
      uint64_t v52 = v17 + 16;
      uint64_t v35 = v34;
      int v48 = v31;
      unint64_t v37 = v36;
      swift_release();
      swift_release();
      uint64_t v59 = sub_100007E88(v35, v37, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_100007E88(v55, a4, (uint64_t *)&v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2112;
      sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      uint64_t v38 = (void (*)(uint64_t, char *, uint64_t))v53;
      v53(v39, v20, v16);
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v59 = v40;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v50 = v40;
      unint64_t v41 = *(void (**)(char *, uint64_t))(v17 + 8);
      v41(v20, v16);
      os_log_t v42 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v48, "[NWC] %s message %s error sending data %@", (uint8_t *)v33, 0x20u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
      uint64_t v43 = v38;
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_release_n();
      unint64_t v41 = *(void (**)(char *, uint64_t))(v17 + 8);
      v41(v20, v16);

      (*(void (**)(char *, uint64_t))(v57 + 8))(v56, v58);
      uint64_t v43 = (void (*)(uint64_t, char *, uint64_t))v53;
    }
    sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
    uint64_t v45 = swift_allocError();
    v43(v46, v22, v16);
    uint64_t v60 = (char *)v45;
    sub_100005CB0(&qword_1000F3710);
    CheckedContinuation.resume(throwing:)();
    return ((uint64_t (*)(char *, uint64_t))v41)(v22, v16);
  }
}

uint64_t sub_100078414()
{
  v1[4] = v0;
  uint64_t v2 = type metadata accessor for URL();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  type metadata accessor for ProtocolVersion();
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for CommunicationActor();
  v1[12] = static CommunicationActor.shared.getter();
  v1[13] = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[14] = v4;
  v1[15] = v3;
  return _swift_task_switch(sub_10007858C, v4, v3);
}

uint64_t sub_10007858C()
{
  v0[16] = static CommunicationActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[17] = v2;
  v0[18] = v1;
  return _swift_task_switch(sub_100078620, v2, v1);
}

uint64_t sub_100078620()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[4];
  uint64_t v3 = static CommunicationActor.shared.getter();
  v0[19] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[20] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = 4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[21] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100078744;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v3, v1, 0x2865766965636572, 0xEF293A7365747962, sub_10007C4E0, v4, &type metadata for Data);
}

uint64_t sub_100078744()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100078C48;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 136);
    uint64_t v4 = *(void *)(v2 + 144);
    uint64_t v5 = sub_100078868;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100078868()
{
  swift_release();
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_1000788D4, v1, v2);
}

uint64_t sub_1000788D4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  static ProtocolVersion.current.getter();
  sub_10007BFF8();
  FixedWidthInteger.init(serialized:version:)();
  if (v1)
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(unsigned int *)(v0 + 272);
    if (v4)
    {
      if (v4 <= 0x4000)
      {
        uint64_t v15 = (void *)swift_task_alloc();
        *(void *)(v0 + 200) = v15;
        void *v15 = v0;
        v15[1] = sub_100078D50;
        return sub_100079544(v4);
      }
      else
      {
        static SystemDirectory.tempFolder()();
        uint64_t v5 = *(void *)(v0 + 104);
        uint64_t v6 = *(void *)(v0 + 64);
        uint64_t v7 = *(void *)(v0 + 32);
        id v8 = [objc_allocWithZone((Class)NSProcessInfo) init];
        id v9 = [v8 globallyUniqueString];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v10 = static CommunicationActor.shared.getter();
        *(void *)(v0 + 240) = v10;
        uint64_t v11 = (void *)swift_task_alloc();
        *(void *)(v0 + 248) = v11;
        void v11[2] = v7;
        v11[3] = v4;
        void v11[4] = v6;
        uint64_t v12 = (void *)swift_task_alloc();
        *(void *)(v0 + 256) = v12;
        *uint64_t v12 = v0;
        v12[1] = sub_100078F30;
        return withCheckedThrowingContinuation<A>(isolation:function:_:)(v12, v10, v5, 0x4465766965636572, 0xED00002928617461, sub_10007C4E8, v11, (char *)&type metadata for () + 8);
      }
    }
    else
    {
      swift_release();
      type metadata accessor for LazyData();
      uint64_t v13 = LazyData.__allocating_init(data:)();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v14(v13);
    }
  }
}

uint64_t sub_100078C48()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100078CC0, v1, v2);
}

uint64_t sub_100078CC0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100078D50(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 208) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[14];
    uint64_t v8 = v6[15];
    id v9 = sub_1000791B4;
  }
  else
  {
    v6[27] = a2;
    v6[28] = a1;
    v6[29] = type metadata accessor for LazyData();
    uint64_t v7 = v6[14];
    uint64_t v8 = v6[15];
    id v9 = sub_100078E84;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_100078E84()
{
  swift_release();
  uint64_t v1 = LazyData.__allocating_init(data:)();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100078F30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 264) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    uint64_t v5 = sub_100079244;
  }
  else {
    uint64_t v5 = sub_1000790A0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000790A0()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[5];
  swift_release();
  type metadata accessor for LazyData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v2, v5);
  uint64_t v6 = LazyData.__allocating_init(filename:isTempFile:)();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v7(v1, v5);
  v7(v2, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  return v8(v6);
}

uint64_t sub_1000791B4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100079244()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v2, v3);
  v5(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_100079310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = 0;
  v11[3] = 0;
  void v11[4] = a1;
  int v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  swift_retain();
  if (v12 == 1)
  {
    sub_100016B90((uint64_t)v8, &qword_1000F1F98);
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (v11[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v14 = v15;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v13 = 0;
      uint64_t v14 = 0;
    }
  }
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = v11;
  if (v14 | v13)
  {
    v18[0] = 0;
    v18[1] = 0;
    v18[2] = v13;
    v18[3] = v14;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_100079544(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  v2[6] = type metadata accessor for CommunicationActor();
  v2[7] = static CommunicationActor.shared.getter();
  v2[8] = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v4;
  v2[10] = v3;
  return _swift_task_switch(sub_100079618, v4, v3);
}

uint64_t sub_100079618()
{
  uint64_t v1 = v0[4];
  if (v1)
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = v0[5];
    uint64_t v4 = static CommunicationActor.shared.getter();
    v0[11] = v4;
    uint64_t v5 = swift_task_alloc();
    v0[12] = v5;
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[13] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_100079788;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 2, v4, v2, 0x2865766965636572, 0xEF293A7365747962, sub_10007C8B8, v5, &type metadata for Data);
  }
  else
  {
    swift_release();
    uint64_t v7 = (uint64_t (*)(void, unint64_t))v0[1];
    return v7(0, 0xC000000000000000);
  }
}

uint64_t sub_100079788()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_100079914;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 72);
    uint64_t v4 = *(void *)(v2 + 80);
    uint64_t v5 = sub_1000798AC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1000798AC()
{
  swift_release();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v1, v2);
}

uint64_t sub_100079914()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007998C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a1;
  uint64_t v7 = sub_100005CB0(&qword_1000F3710);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v36 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v9;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  int v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v13 = static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v38 = v13;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  int v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, (os_log_type_t)v15))
  {
    int v28 = v15;
    os_log_t v29 = v14;
    uint64_t v30 = v7;
    uint64_t v31 = a4;
    uint64_t v32 = a3;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v40 = v27;
    *(_DWORD *)uint64_t v16 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v17 = sub_10007B7D4();
    unint64_t v19 = v18;
    swift_release();
    swift_release();
    uint64_t v39 = sub_100007E88(v17, v19, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v39 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v20 = v29;
    _os_log_impl((void *)&_mh_execute_header, v29, (os_log_type_t)v28, "[NWC] %s file download start: (%ld bytes)", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    uint64_t v7 = v30;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
  }
  uint64_t v21 = v35;
  uint64_t v22 = v36;
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v22, v21, v7);
  unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = v23;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v25 + v24, v22, v7);
  swift_retain();
  swift_retain();
  swift_retain();
  NWConnection.receiveFile(at:maximumLength:handler:)();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100079EBC()
{
  type metadata accessor for CommunicationActor();
  static CommunicationActor.assumeOnQueue<A>(_:)();
  return v1;
}

uint64_t sub_100079F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char *a6@<X8>)
{
  unint64_t v67 = a6;
  uint64_t v59 = a4;
  uint64_t v63 = a3;
  uint64_t v65 = a2;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v61 = *(void *)(v8 - 8);
  uint64_t v62 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v58 = &v51[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v64 = &v51[-v11];
  uint64_t v12 = sub_100005CB0(&qword_1000F3718);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v51[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for NWError();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v19 = &v51[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v68 = &v51[-v20];
  type metadata accessor for CommunicationActor();
  uint64_t v21 = static CommunicationActor.shared.getter();
  uint64_t v22 = sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v66 = v21;
  uint64_t v60 = v22;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_10007C1B4(a1, (uint64_t)v14);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_100016B90((uint64_t)v14, &qword_1000F3718);
    if (a5)
    {
      uint64_t v23 = v58;
      static Log.network.getter();
      swift_retain_n();
      unint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        v70[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315138;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_retain();
        swift_release();
        swift_retain();
        uint64_t v27 = sub_10007B7D4();
        unint64_t v29 = v28;
        swift_release();
        swift_release();
        uint64_t v69 = sub_100007E88(v27, v29, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "[NWC] %s file download done", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v58, v62);
      }
      else
      {

        swift_release_n();
        (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v23, v62);
      }
      unsigned int v44 = v67;
      uint64_t v50 = v63;
      swift_beginAccess();
      if ((*v50 & 1) == 0)
      {
        swift_beginAccess();
        *uint64_t v50 = 1;
        sub_100005CB0(&qword_1000F3710);
        CheckedContinuation.resume(returning:)();
      }
      uint64_t result = swift_release();
      char v43 = 0;
    }
    else
    {
      uint64_t result = swift_release();
      char v43 = 1;
      unsigned int v44 = v67;
    }
  }
  else
  {
    uint64_t v30 = v68;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v68, v14, v15);
    uint64_t v31 = v64;
    static Log.network.getter();
    uint64_t v58 = *(unsigned char **)(v16 + 16);
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v58)(v19, v30, v15);
    swift_retain_n();
    uint64_t v32 = Logger.logObject.getter();
    int v33 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v32, (os_log_type_t)v33))
    {
      int v52 = v33;
      os_log_t v55 = v32;
      uint64_t v56 = v16 + 16;
      uint64_t v57 = v16;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v53 = (void *)swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      v70[0] = v54;
      *(_DWORD *)uint64_t v34 = 136315394;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      swift_retain();
      swift_release();
      swift_retain();
      uint64_t v35 = sub_10007B7D4();
      unint64_t v37 = v36;
      swift_release();
      swift_release();
      uint64_t v69 = sub_100007E88(v35, v37, v70);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2112;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      ((void (*)(uint64_t, unsigned char *, uint64_t))v58)(v38, v19, v15);
      swift_release();
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v69 = v39;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v53 = v39;
      uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v57 + 8);
      v40(v19, v15);
      os_log_t v41 = v55;
      _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v52, "[NWC] %s file download error: %@", (uint8_t *)v34, 0x16u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v64, v62);
    }
    else
    {
      swift_release_n();
      uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
      v40(v19, v15);

      (*(void (**)(unsigned char *, uint64_t))(v61 + 8))(v31, v62);
    }
    unsigned int v44 = v67;
    uint64_t v45 = v63;
    swift_beginAccess();
    if (*v45)
    {
      uint64_t v46 = v68;
    }
    else
    {
      swift_beginAccess();
      *uint64_t v45 = 1;
      sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
      uint64_t v47 = swift_allocError();
      int v48 = v68;
      ((void (*)(uint64_t, unsigned char *, uint64_t))v58)(v49, v68, v15);
      v70[5] = v47;
      sub_100005CB0(&qword_1000F3710);
      CheckedContinuation.resume(throwing:)();
      uint64_t v46 = v48;
    }
    v40(v46, v15);
    uint64_t result = swift_release();
    char v43 = 0;
  }
  *unsigned int v44 = v43;
  return result;
}

uint64_t sub_10007A930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v5 = sub_100005CB0(&qword_1000F3760);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v36 = v7;
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Logger();
  uint64_t v34 = *(void *)(v9 - 8);
  uint64_t v35 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v12 = static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v38 = v12;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static Log.network.getter();
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  int v14 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v13, (os_log_type_t)v14))
  {
    int v29 = v14;
    os_log_t v30 = v13;
    uint64_t v31 = v8;
    uint64_t v32 = v5;
    uint64_t v33 = a3;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v40 = v28;
    *(_DWORD *)uint64_t v15 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_retain();
    swift_release();
    swift_retain();
    uint64_t v16 = sub_10007B7D4();
    unint64_t v18 = v17;
    swift_release();
    swift_release();
    uint64_t v39 = sub_100007E88(v16, v18, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v39 = v33;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_t v19 = v30;
    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v29, "[NWC] %s receive start: (%ld bytes)", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
    uint64_t v8 = v31;
    uint64_t v5 = v32;
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v35);
  }
  uint64_t v20 = v36;
  uint64_t v21 = *(void *)(a2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v37, v5);
  uint64_t v22 = v8;
  unint64_t v23 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v25 + v23, v22, v5);
  *(void *)(v25 + v24) = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  NWConnection.receive(minimumIncompleteLength:maximumLength:completion:)();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_10007AE44(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v69 = a8;
  uint64_t v70 = a1;
  uint64_t v71 = a7;
  uint64_t v10 = type metadata accessor for Logger();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v73 = v10;
  uint64_t v74 = v11;
  uint64_t v12 = __chkstk_darwin(v10);
  int v14 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  unint64_t v17 = (char *)v65 - v16;
  __chkstk_darwin(v15);
  uint64_t v72 = (char *)v65 - v18;
  uint64_t v19 = sub_100005CB0(&qword_1000F3718);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for NWError();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v28 = (char *)v65 - v27;
  sub_10007C1B4(a5, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    int v29 = v14;
    uint64_t v30 = v70;
    sub_100016B90((uint64_t)v21, &qword_1000F3718);
    if (a2 >> 60 == 15)
    {
      static Log.network.getter();
      swift_retain_n();
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        v75[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315138;
        uint64_t v72 = (char *)(v33 + 4);
        swift_retain();
        swift_retain();
        uint64_t v34 = sub_10007B7D4();
        unint64_t v36 = v35;
        swift_release();
        swift_release();
        uint64_t v76 = sub_100007E88(v34, v36, v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "[NWC] %s receive didn't receive data, connection is finished. Closing.", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v74 + 8))(v17, v73);
      sub_100074B98();
      sub_10007C860();
      uint64_t v63 = swift_allocError();
      *uint64_t v64 = 0;
      v75[0] = v63;
      sub_100005CB0(&qword_1000F3760);
      return CheckedContinuation.resume(throwing:)();
    }
    else
    {
      sub_10003E840(v30, a2);
      static Log.network.getter();
      swift_retain_n();
      uint64_t v53 = Logger.logObject.getter();
      os_log_type_t v54 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v69 = a2;
        uint64_t v72 = v29;
        uint64_t v56 = (uint8_t *)v55;
        v75[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v56 = 136315138;
        uint64_t v68 = v56 + 4;
        swift_retain();
        swift_retain();
        uint64_t v57 = sub_10007B7D4();
        unint64_t v59 = v58;
        swift_release();
        uint64_t v30 = v70;
        swift_release();
        uint64_t v76 = sub_100007E88(v57, v59, v75);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v53, v54, "[NWC] %s receive done", v56, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        a2 = v69;
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v74 + 8))(v29, v73);
      }
      v75[0] = v30;
      v75[1] = a2;
      sub_100005CB0(&qword_1000F3760);
      return CheckedContinuation.resume(returning:)();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v21, v22);
    static Log.network.getter();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v37(v26, v28, v22);
    swift_retain_n();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.debug.getter();
    int v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v70 = v23 + 16;
      uint64_t v42 = v41;
      uint64_t v68 = (void *)swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v75[0] = v69;
      *(_DWORD *)uint64_t v42 = 136315394;
      v65[1] = v42 + 4;
      os_log_t v67 = v38;
      swift_retain();
      swift_retain();
      uint64_t v43 = sub_10007B7D4();
      int v66 = v40;
      unsigned int v44 = (void (*)(uint64_t, char *, uint64_t))v37;
      uint64_t v45 = v43;
      unint64_t v47 = v46;
      swift_release();
      swift_release();
      uint64_t v76 = sub_100007E88(v45, v47, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      int v48 = v44;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v42 + 12) = 2112;
      sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
      swift_allocError();
      v44(v49, v26, v22);
      uint64_t v50 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v76 = v50;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v68 = v50;
      uint64_t v51 = *(void (**)(char *, uint64_t))(v23 + 8);
      v51(v26, v22);
      os_log_t v52 = v67;
      _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v66, "[NWC] %s receive read error: %@", (uint8_t *)v42, 0x16u);
      sub_100005CB0(qword_1000F2278);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
    }
    else
    {
      swift_release_n();
      uint64_t v51 = *(void (**)(char *, uint64_t))(v23 + 8);
      v51(v26, v22);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
      int v48 = (void (*)(uint64_t, char *, uint64_t))v37;
    }
    sub_10007C238(&qword_1000F24B8, 255, (void (*)(uint64_t))&type metadata accessor for NWError);
    uint64_t v60 = swift_allocError();
    v48(v61, v28, v22);
    v75[0] = v60;
    sub_100005CB0(&qword_1000F3760);
    CheckedContinuation.resume(throwing:)();
    return ((uint64_t (*)(char *, uint64_t))v51)(v28, v22);
  }
}

uint64_t sub_10007B7D4()
{
  uint64_t v0 = type metadata accessor for NWConnection.State();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = 0;
  unint64_t v11 = 0xE000000000000000;
  v4._countAndFlagsBits = 67;
  v4._object = (void *)0xE100000000000000;
  String.append(_:)(v4);
  v9[1] = NWConnection.identifier.getter();
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 40;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  NWConnection.state.getter();
  _print_unlocked<A, B>(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  String.append(_:)(v7);
  return v10;
}

uint64_t sub_10007B938()
{
  return sub_10007B7D4();
}

uint64_t sub_10007B960()
{
  swift_retain();
  uint64_t v0 = sub_10007B7D4();
  swift_release();
  return v0;
}

Swift::Int sub_10007B9B4()
{
  Hasher.init(_seed:)();
  swift_retain();
  Swift::UInt64 v0 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

void sub_10007BA1C()
{
  swift_retain();
  Swift::UInt64 v0 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v0);
}

Swift::Int sub_10007BA74()
{
  Hasher.init(_seed:)();
  swift_retain();
  Swift::UInt64 v0 = NWConnection.identifier.getter();
  swift_release();
  Hasher._combine(_:)(v0);
  return Hasher._finalize()();
}

BOOL sub_10007BAD8()
{
  swift_retain();
  uint64_t v0 = NWConnection.identifier.getter();
  swift_release();
  swift_retain();
  uint64_t v1 = NWConnection.identifier.getter();
  swift_release();
  return v0 == v1;
}

uint64_t sub_10007BB4C(uint64_t a1, uint64_t a2)
{
  return sub_10007C238(&qword_1000F36C8, a2, (void (*)(uint64_t))type metadata accessor for NetworkConnection);
}

uint64_t sub_10007BB94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Message.Operation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  Swift::String v5 = (_DWORD *)((char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for CommunicationActor();
  static CommunicationActor.shared.getter();
  sub_10007C238(&qword_1000F1F70, 255, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  (*(void (**)(_DWORD *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(_DWORD *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for Message.Operation.event(_:))
  {
    (*(void (**)(_DWORD *, uint64_t))(v3 + 96))(v5, v2);
    LODWORD(v27) = *v5;
    v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = 0x28746E657665;
    unint64_t v28 = 0xE600000000000000;
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v8._countAndFlagsBits = 41;
    v8._object = (void *)0xE100000000000000;
    String.append(_:)(v8);
    swift_release();
LABEL_7:
    swift_bridgeObjectRelease();
    return v27;
  }
  if (v6 == enum case for Message.Operation.request(_:))
  {
    (*(void (**)(_DWORD *, uint64_t))(v3 + 96))(v5, v2);
    int v9 = v5[1];
    LODWORD(v27) = *v5;
    v10._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = 0x2874736575716572;
    unint64_t v28 = 0xE800000000000000;
    String.append(_:)(v10);
    swift_bridgeObjectRelease();
    uint64_t v12 = v27;
    unint64_t v11 = v28;
    uint64_t v27 = 8236;
    unint64_t v28 = 0xE200000000000000;
    int v26 = v9;
    v13._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 41;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    uint64_t v15 = v27;
    uint64_t v16 = (void *)v28;
    uint64_t v27 = v12;
    unint64_t v28 = v11;
    swift_bridgeObjectRetain();
    v17._countAndFlagsBits = v15;
    v17._object = v16;
    String.append(_:)(v17);
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v6 == enum case for Message.Operation.response(_:))
  {
    (*(void (**)(_DWORD *, uint64_t))(v3 + 96))(v5, v2);
    int v18 = *v5;
    uint64_t v19 = 0x65736E6F70736572;
    unint64_t v20 = 0xE900000000000028;
  }
  else
  {
    if (v6 != enum case for Message.Operation.error(_:))
    {
      uint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
      _print_unlocked<A, B>(_:_:)();
      uint64_t v23 = v27;
      (*(void (**)(_DWORD *, uint64_t))(v3 + 8))(v5, v2);
      swift_release();
      return v23;
    }
    (*(void (**)(_DWORD *, uint64_t))(v3 + 96))(v5, v2);
    int v18 = *v5;
    uint64_t v19 = 0x28726F727265;
    unint64_t v20 = 0xE600000000000000;
  }
  uint64_t v27 = v19;
  unint64_t v28 = v20;
  int v26 = v18;
  v21._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 41;
  v22._object = (void *)0xE100000000000000;
  String.append(_:)(v22);
  swift_release();
  return v27;
}

uint64_t sub_10007BFDC(uint64_t a1)
{
  return sub_100075284(a1);
}

unint64_t sub_10007BFF8()
{
  unint64_t result = qword_1000F3708;
  if (!qword_1000F3708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F3708);
  }
  return result;
}

uint64_t sub_10007C04C(unint64_t a1)
{
  return sub_1000778A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56));
}

uint64_t sub_10007C060()
{
  uint64_t v1 = sub_100005CB0(&qword_1000F3710);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007C138(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100005CB0(&qword_1000F3710) - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100077BF8(a1, v4, v5, v6, v7);
}

uint64_t sub_10007C1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100005CB0(&qword_1000F3718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10007C21C()
{
  return sub_10007570C();
}

uint64_t sub_10007C238(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10007C284(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100005F94;
  return sub_10000A040(a1, v4, v5, v6);
}

uint64_t sub_10007C338()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10007C374(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1000043B4;
  return sub_10000A040(a1, v4, v5, v6);
}

uint64_t sub_10007C428(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1000043B4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1000F3800 + dword_1000F3800);
  return v6(a1, v4);
}

uint64_t sub_10007C4E0(uint64_t a1)
{
  return sub_10007A930(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10007C4E8(uint64_t a1)
{
  return sub_10007998C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_10007C4F4()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_10007C504()
{
  uint64_t v1 = sub_100005CB0(&qword_1000F3710);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10007C5DC()
{
  sub_100005CB0(&qword_1000F3710);

  return sub_100079EBC();
}

uint64_t sub_10007C67C@<X0>(char *a1@<X8>)
{
  return sub_100079F50(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char **)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), a1);
}

uint64_t sub_10007C6A0()
{
  uint64_t v1 = sub_100005CB0(&qword_1000F3760);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_10007C78C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *(void *)(sub_100005CB0(&qword_1000F3760) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(v5 + 16);
  uint64_t v14 = *(void *)(v5 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10007AE44(a1, a2, a3, a4, a5, v13, v5 + v12, v14);
}

unint64_t sub_10007C860()
{
  unint64_t result = qword_1000F3768;
  if (!qword_1000F3768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F3768);
  }
  return result;
}

void *NetworkConstants.applicationService.unsafeMutableAddressor()
{
  return &static NetworkConstants.applicationService;
}

const char *NetworkConstants.terminusAdvertisingType.unsafeMutableAddressor()
{
  return "ASListener";
}

const char *NetworkConstants.terminusBrowserType.unsafeMutableAddressor()
{
  return "ASResolver";
}

void *NetworkConstants.maximumConnections.unsafeMutableAddressor()
{
  return &static NetworkConstants.maximumConnections;
}

void *NetworkConstants.assertion.unsafeMutableAddressor()
{
  return &static NetworkConstants.assertion;
}

void *NetworkConstants.maximumSendBufferSize.unsafeMutableAddressor()
{
  return &static NetworkConstants.maximumSendBufferSize;
}

void *NetworkConstants.maxSizeForInMemoryData.unsafeMutableAddressor()
{
  return &static NetworkConstants.maxSizeForInMemoryData;
}

void *NetworkConstants.terminusDomain.unsafeMutableAddressor()
{
  return &static NetworkConstants.terminusDomain;
}

uint64_t static NetworkConstants.terminusAdvertisingType.getter()
{
  return 0x6E657473694C5341;
}

uint64_t static NetworkConstants.terminusBrowserType.getter()
{
  return 0x766C6F7365525341;
}

unint64_t static NetworkConstants.assertion.getter()
{
  return 0xD00000000000001CLL;
}

unint64_t static NetworkConstants.applicationService.getter()
{
  return 0xD000000000000024;
}

uint64_t static NetworkConstants.maximumConnections.getter()
{
  return 20;
}

uint64_t static NetworkConstants.maximumSendBufferSize.getter()
{
  return 0x100000;
}

uint64_t static NetworkConstants.maxSizeForInMemoryData.getter()
{
  return 0x4000;
}

uint64_t _s11photosfaced16NetworkConstantsO10parameters6domain4type0B012NWParametersCSS_SStFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for NWParameters.MultipathServiceType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NWParameters();
  uint64_t v12 = static NWParameters.applicationServiceQUIC(identity:)();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for NWParameters.MultipathServiceType.disabled(_:), v8);
  NWParameters.multipathServiceType.setter();
  NWParameters.acceptLocalOnly.setter();
  NWParameters.includePeerToPeer.setter();
  NWParameters.nw.getter();
  nw_parameters_set_account_id();
  swift_unknownObjectRelease();
  NWParameters.nw.getter();
  nw_parameters_set_attach_protocol_listener();
  swift_unknownObjectRelease();
  sub_100005CB0(&qword_1000F3770);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000D7AB0;
  *(void *)(v13 + 32) = a1;
  *(void *)(v13 + 40) = a2;
  *(void *)(v13 + 48) = a3;
  *(void *)(v13 + 56) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NWParameters.preferredNetworkAgents.setter();
  uint64_t v14 = static TestProperties.quicTimeout.getter();
  if (v15) {
    return v12;
  }
  double v16 = *(double *)&v14;
  NWParameters.defaultProtocolStack.getter();
  unint64_t v17 = dispatch thunk of NWParameters.ProtocolStack.applicationProtocols.getter();
  swift_release();
  unint64_t v26 = (unint64_t)&_swiftEmptyArrayStorage;
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v18 = result;
    if (result) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    unint64_t v21 = (unint64_t)&_swiftEmptyArrayStorage;
    goto LABEL_18;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v18) {
    goto LABEL_17;
  }
LABEL_4:
  if (v18 < 1)
  {
    __break(1u);
    goto LABEL_33;
  }
  for (uint64_t i = 0; i != v18; ++i)
  {
    if ((v17 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    type metadata accessor for NWProtocolQUIC.Options();
    if (swift_dynamicCastClass())
    {
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v21 = v26;
LABEL_18:
  swift_bridgeObjectRelease();
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_20;
    }
LABEL_30:
    swift_bridgeObjectRelease_n();
    return v12;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v22 = result;
  if (!result) {
    goto LABEL_30;
  }
LABEL_20:
  double v23 = v16 * 1000.0;
  if ((~COERCE__INT64(v16 * 1000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v23 >= 9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v22 >= 1)
  {
    for (uint64_t j = 0; j != v22; ++j)
    {
      if ((v21 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      dispatch thunk of NWProtocolQUIC.Options.idleTimeout.setter();
      swift_release();
    }
    goto LABEL_30;
  }
LABEL_36:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for NetworkConstants()
{
  return &type metadata for NetworkConstants;
}

uint64_t getEnumTagSinglePayload for NetworkError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for NetworkError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10007CF14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkError()
{
  return &type metadata for NetworkError;
}

unint64_t sub_10007CF50()
{
  unint64_t result = qword_1000F3778;
  if (!qword_1000F3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1000F3778);
  }
  return result;
}

uint64_t sub_10007CFA4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10007D00C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10007D054()
{
  sub_10007D00C();

  return _swift_deallocClassInstance(v0, 72, 7);
}

uint64_t type metadata accessor for NetworkMessageCenter()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10007D0A0(uint64_t a1)
{
  uint64_t v2 = sub_100005CB0(&qword_1000F1F98);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  BOOL v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_10006FEF4((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_1000F3728;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10007D2DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10007D31C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a2;
  *(void *)(v4 + 48) = a4;
  *(_DWORD *)(v4 + 160) = a3;
  *(void *)(v4 + 32) = a1;
  type metadata accessor for ProtocolVersion();
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for MessageBody();
  *(void *)(v4 + 64) = v5;
  *(void *)(v4 + 72) = *(void *)(v5 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Message.Operation();
  *(void *)(v4 + 96) = v6;
  *(void *)(v4 + 104) = *(void *)(v6 - 8);
  *(void *)(v4 + 112) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Message();
  *(void *)(v4 + 120) = v7;
  *(void *)(v4 + 128) = *(void *)(v7 - 8);
  *(void *)(v4 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_10007D4D8, 0, 0);
}

uint64_t sub_10007D4D8()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  **(_DWORD **)(v0 + 112) = *(_DWORD *)(v0 + 160);
  (*(void (**)(void))(v1 + 104))();
  *(void *)(v0 + 16) = 0xD000000000000019;
  *(void *)(v0 + 24) = 0x80000001000D6680;
  Message.content.getter();
  MessageBody.version.getter();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  MessageBody.init<A>(serializable:version:)();
  uint64_t v5 = *(int **)(v0 + 32);
  Message.init(operation:content:complete:)();
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)v5 + *v5);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10007D718;
  uint64_t v7 = *(void *)(v0 + 136);
  return v9(v7);
}

uint64_t sub_10007D718()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[16];
  uint64_t v5 = v2[15];
  if (v0)
  {
    (*(void (**)(void, uint64_t))(v4 + 8))(v2[17], v5);
    return _swift_task_switch(sub_10007D904, 0, 0);
  }
  else
  {
    (*(void (**)(void, uint64_t))(v4 + 8))(v2[17], v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v3[1];
    return v6();
  }
}

uint64_t sub_10007D904()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10007D9A4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100059C98;
  return v6(a1);
}

uint64_t sub_10007DA80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10007DAB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  uint64_t v3 = __chkstk_darwin(v2);
  uint64_t v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v46 - v6;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v53 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CommunicationActor();
  uint64_t v11 = static CommunicationActor.shared.getter();
  sub_100081044(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v56 = v11;
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v12 = *(void *)(v1 + 24);
  swift_release();
  if (v12)
  {
    id v13 = *(id *)(v1 + 16);
    id v14 = v13;
LABEL_17:
    swift_release();
    return v13;
  }
  id v15 = [self sharedInstance];
  id v16 = [v15 getActivePairedDeviceExcludingAltAccount];

  if (v16)
  {
    uint64_t v52 = v8;
    static Log.default.getter();
    id v17 = v16;
    uint64_t v18 = Logger.logObject.getter();
    int v19 = static os_log_type_t.default.getter();
    p_ivars = &NetworkMonitor.ivars;
    if (os_log_type_enabled(v18, (os_log_type_t)v19))
    {
      int v48 = v19;
      os_log_t v49 = v18;
      id v50 = v17;
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v58 = v47;
      uint64_t v51 = v21;
      *(_DWORD *)unint64_t v21 = 136315138;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      id v22 = v50;
      v46[1] = v51 + 4;
      id v23 = [v50 bluetoothIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();
      swift_release();

      sub_100081044(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = v55;
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v27 = v26;
      unint64_t v28 = v7;
      int v29 = v22;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v24);
      uint64_t v30 = v25;
      p_ivars = (__objc2_ivar_list **)(&NetworkMonitor + 48);
      uint64_t v31 = sub_100007E88(v30, v27, &v58);
      os_log_type_t v32 = v51;
      uint64_t v57 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v33 = v49;
      _os_log_impl((void *)&_mh_execute_header, v49, (os_log_type_t)v48, "Found ID: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v34 = v54;
      (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v52);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v53 + 8))(v10, v52);
      uint64_t v34 = v54;
      int v29 = v17;
    }
    unint64_t v35 = self;
    id v36 = [v29 p_ivars[365]];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v55);
    id v38 = [v35 newDeviceIdentifierWithBluetoothUUID:isa];

    os_log_type_t v39 = *(void **)(v1 + 16);
    id v40 = v38;
    id v13 = v39;
    uint64_t v41 = (void *)static CommunicationActor.sharedQueue.getter();
    id v42 = [objc_allocWithZone((Class)NRDeviceMonitor) initWithDeviceIdentifier:v40 delegate:v13 queue:v41];

    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }

    uint64_t v43 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = v42;
    swift_release();

    id v44 = v13;
    goto LABEL_17;
  }
  swift_release();
  return 0;
}

uint64_t sub_10007E108()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10007E128, 0, 0);
}

uint64_t sub_10007E128()
{
  uint64_t v1 = (uint64_t *)v0[2];
  uint64_t v2 = *v1;
  v0[3] = *v1;
  if (v1[1])
  {
    uint64_t v3 = swift_task_alloc();
    v0[4] = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[5] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007E280;
    return withCheckedContinuation<A>(isolation:function:_:)(v0 + 6, 0, 0, 0x65706F7250746567, 0xED00002928797472, sub_10008103C, v3, &type metadata for Bool);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(v2 & 1);
  }
}

uint64_t sub_10007E280()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  sub_100081030(v1, 1);
  swift_task_dealloc();
  return _swift_task_switch(sub_10007E3B8, 0, 0);
}

uint64_t sub_10007E3B8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_10007E3D0()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_100081044(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v3;
  v1[10] = v2;
  return _swift_task_switch(sub_10007E4A0, v3, v2);
}

uint64_t sub_10007E4A0()
{
  uint64_t v1 = (char *)sub_10007DAB8();
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    v0[12] = static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v3 = &v2[OBJC_IVAR____TtC11photosfacedP33_8C086EDF4440DE29CC98029F05504C4213DeviceMonitor_connected];
    swift_beginAccess();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007E614;
    v4[2] = v3;
    return _swift_task_switch(sub_10007E128, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(2);
  }
}

uint64_t sub_10007E614(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 88);
  *(unsigned char *)(*v1 + 112) = a1;
  swift_task_dealloc();
  swift_endAccess();
  swift_release();

  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_10008108C, v5, v4);
}

uint64_t sub_10007E78C()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_100081044(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v3;
  v1[10] = v2;
  return _swift_task_switch(sub_10007E85C, v3, v2);
}

uint64_t sub_10007E85C()
{
  uint64_t v1 = (char *)sub_10007DAB8();
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    v0[12] = static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v3 = &v2[OBJC_IVAR____TtC11photosfacedP33_8C086EDF4440DE29CC98029F05504C4213DeviceMonitor_classCConnected];
    swift_beginAccess();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007E9D0;
    v4[2] = v3;
    return _swift_task_switch(sub_10007E128, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(2);
  }
}

uint64_t sub_10007E9D0(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void **)(*v1 + 88);
  *(unsigned char *)(*v1 + 112) = a1;
  swift_task_dealloc();
  swift_endAccess();
  swift_release();

  uint64_t v4 = *(void *)(v2 + 80);
  uint64_t v5 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_10007EB48, v5, v4);
}

uint64_t sub_10007EB48()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 112);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10007EBB0()
{
  v1[5] = v0;
  v1[6] = type metadata accessor for CommunicationActor();
  v1[7] = static CommunicationActor.shared.getter();
  v1[8] = sub_100081044(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[9] = v3;
  v1[10] = v2;
  return _swift_task_switch(sub_10007EC80, v3, v2);
}

uint64_t sub_10007EC80()
{
  uint64_t v1 = (char *)sub_10007DAB8();
  v0[11] = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    v0[12] = static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v3 = &v2[OBJC_IVAR____TtC11photosfacedP33_8C086EDF4440DE29CC98029F05504C4213DeviceMonitor_pluggedIn];
    swift_beginAccess();
    uint64_t v4 = (void *)swift_task_alloc();
    v0[13] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_10007E614;
    v4[2] = v3;
    return _swift_task_switch(sub_10007E128, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
    return v5(2);
  }
}

uint64_t sub_10007EDF4()
{
  return _swift_deallocClassInstance(v0, 32, 7);
}

uint64_t type metadata accessor for NetworkMonitor()
{
  return self;
}

uint64_t sub_10007EF0C(char a1)
{
  uint64_t v3 = sub_100005CB0(&qword_1000F3A50);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[1])
  {
    uint64_t v8 = *v1;
    *uint64_t v1 = a1 & 1;
    *((unsigned char *)v1 + 8) = 0;
    uint64_t v9 = *(void *)(v8 + 16);
    if (v9)
    {
      uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
      uint64_t v10 = v4 + 16;
      uint64_t v11 = v12;
      unint64_t v13 = (*(unsigned __int8 *)(v10 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 64);
      uint64_t v17 = v8;
      uint64_t v14 = v8 + v13;
      uint64_t v15 = *(void *)(v10 + 56);
      char v16 = a1 & 1;
      do
      {
        v11(v7, v14, v3);
        char v18 = v16;
        CheckedContinuation.resume(returning:)();
        (*(void (**)(char *, uint64_t))(v10 - 8))(v7, v3);
        v14 += v15;
        --v9;
      }
      while (v9);
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    *uint64_t v1 = a1 & 1;
    *((unsigned char *)v1 + 8) = 0;
  }
  return result;
}

uint64_t sub_10007F144(uint64_t a1, char a2)
{
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_beginAccess();
  sub_10007EF0C(a2 & 1);
  swift_endAccess();
  swift_release();
  return swift_release();
}

id sub_10007F514()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceMonitor();
  return [super dealloc];
}

uint64_t type metadata accessor for DeviceMonitor()
{
  return self;
}

uint64_t sub_10007F614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 16);
}

uint64_t sub_10007F61C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_10007F6B4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 2;
          unsigned int v9 = v12 + 2;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 1)
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v5) = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  return v3;
}

uint64_t sub_10007F830(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
}

void *sub_10007F930(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10007FA6C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 1;
      swift_bridgeObjectRetain();
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 0;
    }
  }
  return a1;
}

void *sub_10007FC88(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    *a1 = *(void *)a2;
    char v10 = 1;
  }
  else
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_10007FDC0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      swift_bridgeObjectRelease();
    }
    else {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v18 = 1;
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 0;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_10007FFD8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_10008010C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1000802D4);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1000802FC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1000803B4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for WaitingDeviceProperty()
{
  return sub_100009140();
}

uint64_t sub_1000804A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100005CB0((uint64_t *)&unk_1000F3A60);
  uint64_t v6 = sub_100005CB0(&qword_1000F3A50);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1000D7AB0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 16))(v9 + v8, a1, v6);
  swift_bridgeObjectRetain();
  sub_10008074C(v9);
  uint64_t result = sub_100081030(*(void *)a3, *(unsigned char *)(a3 + 8));
  *(void *)a3 = a2;
  *(unsigned char *)(a3 + 8) = 1;
  return result;
}

uint64_t sub_1000805F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_1000D1DA8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10008074C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v23 = v4 + v2;
  }
  else {
    int64_t v23 = v4;
  }
  unint64_t v3 = sub_1000D1FC4(isUniquelyReferenced_nonNull_native, v23, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = *(void *)(v3 + 16);
  uint64_t v10 = (*(void *)(v3 + 24) >> 1) - v9;
  uint64_t v11 = *(void *)(sub_100005CB0(&qword_1000F3A50) - 8);
  uint64_t v12 = *(void *)(v11 + 72);
  if (v10 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = v3 + v13 + v12 * v9;
  unint64_t v15 = a1 + v13;
  uint64_t v16 = v12 * v8;
  unint64_t v17 = v14 + v16;
  unint64_t v18 = v15 + v16;
  if (v15 < v17 && v14 < v18) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v20 = *(void *)(v3 + 16);
  BOOL v21 = __OFADD__(v20, v8);
  uint64_t v22 = v20 + v8;
  if (!v21)
  {
    *(void *)(v3 + 16) = v22;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100080900(uint64_t a1)
{
  return sub_100080B04(a1, (uint64_t (*)(void))sub_1000D1FD8, (uint64_t *)&unk_1000F3A70);
}

uint64_t sub_100080920(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_1000D2258(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100080AC4(uint64_t a1)
{
  return sub_100080B04(a1, (uint64_t (*)(void))sub_1000D24C0, &qword_1000F2E30);
}

uint64_t sub_100080AE4(uint64_t a1)
{
  return sub_100080B04(a1, (uint64_t (*)(void))sub_1000D24D4, (uint64_t *)&unk_1000F3A80);
}

uint64_t sub_100080B04(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(sub_100005CB0(a3) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100080CBC(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Log.default.getter();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v20 = a2;
    uint64_t v15 = v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v21 = v8;
    uint64_t v23 = v16;
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v22 = sub_100007E88(v20, a3, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v15 + 12) = 1024;
    LODWORD(v22) = a1 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: %{BOOL}d", (uint8_t *)v15, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v17 = type metadata accessor for CommunicationActor();
  __chkstk_darwin(v17);
  *(&v19 - 2) = v6;
  *((unsigned char *)&v19 - 8) = a1 & 1;
  return static CommunicationActor.assumeOnQueue<A>(_:)();
}

uint64_t sub_100080F40()
{
  return sub_10007F144(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100080F70()
{
  return sub_10007F144(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100080FA0()
{
  return sub_10007F144(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100080FD0()
{
  return sub_10007F144(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100081000()
{
  return sub_10007F144(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_100081030(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10008103C(uint64_t a1)
{
  return sub_1000804A4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100081044(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_100081090(uint64_t a1)
{
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    v13[1] = v1;
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_100054824(0, v6, 0);
    uint64_t v7 = v16;
    uint64_t v8 = *(void *)(type metadata accessor for StoredPhoto() - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v14 = *(void *)(v8 + 72);
    do
    {
      StoredPhoto.localIdentifier.getter();
      uint64_t v16 = v7;
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1)
      {
        sub_100054824(v10 > 1, v11 + 1, 1);
        uint64_t v7 = v16;
      }
      v7[2] = v11 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))((unint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11, v5, v15);
      v9 += v14;
      --v6;
    }
    while (v6);
  }
  return v7;
}

char *sub_100081278(uint64_t a1)
{
  uint64_t v39 = sub_100005CB0(&qword_1000F2E40);
  uint64_t v3 = *(void *)(v39 - 8);
  uint64_t v4 = __chkstk_darwin(v39);
  uint64_t v37 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v38 = (char *)v31 - v6;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = (char *)&_swiftEmptyArrayStorage;
  if (v11)
  {
    v31[1] = v1;
    id v44 = (char *)&_swiftEmptyArrayStorage;
    sub_100054824(0, v11, 0);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v35 = *(void *)(v3 + 72);
    uint64_t v36 = v8;
    os_log_t v33 = *(void (**)(void, void, void))(v8 + 16);
    uint64_t v34 = v10;
    uint64_t v43 = v8 + 16;
    uint64_t v14 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    os_log_type_t v32 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    do
    {
      int64_t v42 = v11;
      uint64_t v15 = v39;
      uint64_t v16 = *(int *)(v39 + 48);
      uint64_t v17 = *(int *)(v39 + 64);
      uint64_t v18 = v7;
      uint64_t v19 = v38;
      uint64_t v20 = (void (*)(char *, uint64_t, uint64_t))v33;
      v33(v38, v13, v18);
      uint64_t v21 = *(void *)(v13 + v16);
      *(void *)&v19[v16] = v21;
      LOBYTE(v16) = *(unsigned char *)(v13 + v17);
      v19[v17] = v16;
      uint64_t v40 = *(int *)(v15 + 48);
      uint64_t v41 = v13;
      uint64_t v22 = *(int *)(v15 + 64);
      uint64_t v23 = *v14;
      uint64_t v24 = (uint64_t)v37;
      uint64_t v25 = v19;
      uint64_t v7 = v18;
      (*v14)(v37, v25, v18);
      *(void *)(v24 + v40) = v21;
      *(unsigned char *)(v24 + v22) = v16;
      unint64_t v26 = v34;
      v20(v34, v24, v18);
      sub_100016B90(v24, &qword_1000F2E40);
      uint64_t v12 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100054824(0, *((void *)v12 + 2) + 1, 1);
        uint64_t v12 = v44;
      }
      unint64_t v28 = *((void *)v12 + 2);
      unint64_t v27 = *((void *)v12 + 3);
      uint64_t v29 = v36;
      uint64_t v14 = v32;
      if (v28 >= v27 >> 1)
      {
        sub_100054824(v27 > 1, v28 + 1, 1);
        uint64_t v12 = v44;
      }
      *((void *)v12 + 2) = v28 + 1;
      v23(&v12[((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v28], v26, v7);
      id v44 = v12;
      uint64_t v13 = v41 + v35;
      int64_t v11 = v42 - 1;
    }
    while (v42 != 1);
  }
  return v12;
}

uint64_t sub_1000815AC()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for CommunicationActor();
  v1[4] = static CommunicationActor.shared.getter();
  v1[5] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_10008167C, v3, v2);
}

uint64_t sub_10008167C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 16);
  type metadata accessor for AlbumID();
  swift_retain();
  sub_100005CB0(&qword_1000F2970);
  sub_1000CD730(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  PhotosXPCServer.registerTrackFace<A, B>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerUntrackFace(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceList<A>(type:callback:)();
  swift_release();
  swift_retain();
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  PhotosXPCServer.registerFetchFace<A>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceByDay(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerProvideAssetList<A>(type:callback:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  *(void *)(v0 + 64) = v2;
  swift_retain();
  return _swift_task_switch(sub_100081914, v2, 0);
}

uint64_t sub_100081914()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F4070;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(2, (uint64_t)&unk_1000F4078, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_1000819E4, v3, v4);
}

uint64_t sub_1000819E4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return _swift_task_switch(sub_100081A54, v1, 0);
}

uint64_t sub_100081A54()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F4088;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(0, (uint64_t)&unk_1000F4090, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_100081B24, v3, v4);
}

uint64_t sub_100081B24()
{
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_10004C994(0x50802u >> (8 * v1), (uint64_t)&unk_1000F40A0, v2);
  swift_release();
  swift_release();
  swift_retain();
  sub_100004804(v1, (uint64_t)&unk_1000F40B0, v2);
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_10004C974(0x70A04u >> (8 * v3), (uint64_t)&unk_1000F40C0, v4);
  swift_release();
  swift_release();
  swift_retain();
  sub_100003E64(v3, (uint64_t)&unk_1000F40D0, v4);
  swift_release();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100081D50()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for CommunicationActor();
  v1[4] = static CommunicationActor.shared.getter();
  v1[5] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_100081E20, v3, v2);
}

uint64_t sub_100081E20()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 16);
  type metadata accessor for ShuffleID();
  swift_retain();
  sub_100005CB0(&qword_1000F2970);
  sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  PhotosXPCServer.registerTrackFace<A, B>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerUntrackFace(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceList<A>(type:callback:)();
  swift_release();
  swift_retain();
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  PhotosXPCServer.registerFetchFace<A>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceByDay(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerProvideAssetList<A>(type:callback:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  *(void *)(v0 + 64) = v2;
  swift_retain();
  return _swift_task_switch(sub_1000820B8, v2, 0);
}

uint64_t sub_1000820B8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F3F18;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(2, (uint64_t)&unk_1000F3F20, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_100082188, v3, v4);
}

uint64_t sub_100082188()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return _swift_task_switch(sub_1000821F8, v1, 0);
}

uint64_t sub_1000821F8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F3F30;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(0, (uint64_t)&unk_1000F3F38, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_1000822C8, v3, v4);
}

uint64_t sub_1000822C8()
{
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_10004C954(0x50802u >> (8 * v1), (uint64_t)&unk_1000F3F48, v2);
  swift_release();
  swift_release();
  swift_retain();
  sub_100004804(v1, (uint64_t)&unk_1000F3F58, v2);
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_10004C55C(0x70A04u >> (8 * v3), (uint64_t)&unk_1000F3F68, v4);
  swift_release();
  swift_release();
  swift_retain();
  sub_100003E64(v3, (uint64_t)&unk_1000F3F78, v4);
  swift_release();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1000824F4()
{
  v1[2] = v0;
  v1[3] = type metadata accessor for CommunicationActor();
  v1[4] = static CommunicationActor.shared.getter();
  v1[5] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[6] = v3;
  v1[7] = v2;
  return _swift_task_switch(sub_1000825C4, v3, v2);
}

uint64_t sub_1000825C4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v0 + 72) = *(unsigned char *)(v1 + 16);
  type metadata accessor for ShuffleID();
  swift_retain();
  sub_100005CB0(&qword_1000F2970);
  sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  sub_100005F48(&qword_1000F2990, &qword_1000F2970);
  PhotosXPCServer.registerTrackFace<A, B>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerUntrackFace(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceList<A>(type:callback:)();
  swift_release();
  swift_retain();
  sub_100005CB0(&qword_1000F29E0);
  sub_100005F48(&qword_1000F29E8, &qword_1000F29E0);
  PhotosXPCServer.registerFetchFace<A>(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerFetchFaceByDay(type:callback:)();
  swift_release();
  swift_retain();
  PhotosXPCServer.registerProvideAssetList<A>(type:callback:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  *(void *)(v0 + 64) = v2;
  swift_retain();
  return _swift_task_switch(sub_10008285C, v2, 0);
}

uint64_t sub_10008285C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F3D40;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(2, (uint64_t)&unk_1000F2930, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_10008292C, v3, v4);
}

uint64_t sub_10008292C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_retain();
  return _swift_task_switch(sub_10008299C, v1, 0);
}

uint64_t sub_10008299C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = &unk_1000F3D50;
  *(void *)(v2 + 24) = v1;
  swift_retain();
  sub_1000CE958(0, (uint64_t)&unk_1000F3D58, v2);
  swift_release();
  swift_release();
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  return _swift_task_switch(sub_100082A6C, v3, v4);
}

uint64_t sub_100082A6C()
{
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v1 = *(unsigned char *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 16);
  sub_10004C954(0x50802u >> (8 * v1), (uint64_t)&unk_1000F3D68, v2);
  swift_release();
  swift_release();
  swift_retain();
  sub_100004804(v1, (uint64_t)&unk_1000F3D78, v2);
  swift_release();
  swift_retain();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  char v3 = *(unsigned char *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_10004C55C(0x70A04u >> (8 * v3), (uint64_t)&unk_1000F3D88, v4);
  swift_release();
  swift_release();
  swift_retain();
  sub_100003E64(v3, (uint64_t)&unk_1000F3D98, v4);
  swift_release();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100082C98(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F3E80 + dword_1000F3E80);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_100082D58(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F3FD8 + dword_1000F3FD8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_100082E18(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F4198 + dword_1000F4198);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_100082ED8(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  uint64_t v4 = type metadata accessor for ShuffleID();
  v3[22] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[23] = v5;
  v3[24] = *(void *)(v5 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[27] = v6;
  v3[28] = *(void *)(v6 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for CommunicationActor();
  v3[31] = static CommunicationActor.shared.getter();
  v3[32] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[33] = v8;
  v3[34] = v7;
  return _swift_task_switch(sub_10008307C, v8, v7);
}

uint64_t sub_10008307C()
{
  unint64_t v28 = v0;
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  static Log.photos.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[35] = v5;
  v0[36] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[22];
    uint64_t v10 = v0[23];
    swift_release();
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[17] = sub_100007E88(v12, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v8 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = v0[28];
    uint64_t v14 = v0[29];
    uint64_t v16 = v0[27];
    swift_release();
    uint64_t v17 = PhotosFaceType.description.getter();
    v0[18] = sub_100007E88(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Tracking %s for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  else
  {
    uint64_t v20 = v0[28];
    uint64_t v19 = v0[29];
    uint64_t v21 = v0[27];
    (*(void (**)(void, void))(v0[23] + 8))(v0[26], v0[22]);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v22 = type metadata accessor for GalleryDatabase();
  uint64_t v23 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[37] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_1000834A4;
  uint64_t v25 = v0[20];
  return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v25, v22, v23);
}

uint64_t sub_1000834A4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_1000CDF44;
  }
  else {
    uint64_t v5 = sub_1000835E0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000835E0()
{
  if (static Platform.current.getter())
  {
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 168);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 280))(v5, *(void *)(v0 + 160), v6);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v0 + 328) = v10;
    *(void *)(v10 + 16) = v8;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v10 + v9, v5, v6);
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10008392C;
    uint64_t v12 = *(void *)(v0 + 160);
    return sub_100029588(v0 + 56, v12, (uint64_t)&unk_1000F3E90, v10);
  }
  else
  {
    *(void *)(v0 + 120) = sub_100005CB0(&qword_1000F2970);
    *(void *)(v0 + 128) = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    uint64_t v1 = sub_10003ED9C((uint64_t *)(v0 + 96));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000837F0;
    uint64_t v3 = *(void *)(v0 + 160);
    return sub_100027D8C((uint64_t)v1, v3, 1);
  }
}

uint64_t sub_1000837F0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_1000CDEF8;
  }
  else {
    uint64_t v5 = sub_1000CDF20;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008392C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_1000CDF2C;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_1000CDF24;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100083A48(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  uint64_t v4 = type metadata accessor for ShuffleID();
  v3[22] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[23] = v5;
  v3[24] = *(void *)(v5 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[27] = v6;
  v3[28] = *(void *)(v6 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for CommunicationActor();
  v3[31] = static CommunicationActor.shared.getter();
  v3[32] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[33] = v8;
  v3[34] = v7;
  return _swift_task_switch(sub_100083BEC, v8, v7);
}

uint64_t sub_100083BEC()
{
  unint64_t v28 = v0;
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  static Log.photos.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[35] = v5;
  v0[36] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[22];
    uint64_t v10 = v0[23];
    swift_release();
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[17] = sub_100007E88(v12, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v8 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = v0[28];
    uint64_t v14 = v0[29];
    uint64_t v16 = v0[27];
    swift_release();
    uint64_t v17 = PhotosFaceType.description.getter();
    v0[18] = sub_100007E88(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Tracking %s for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  else
  {
    uint64_t v20 = v0[28];
    uint64_t v19 = v0[29];
    uint64_t v21 = v0[27];
    (*(void (**)(void, void))(v0[23] + 8))(v0[26], v0[22]);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v22 = type metadata accessor for ShuffleDatabase();
  uint64_t v23 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[37] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_100084014;
  uint64_t v25 = v0[20];
  return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v25, v22, v23);
}

uint64_t sub_100084014()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_1000CDF44;
  }
  else {
    uint64_t v5 = sub_100084150;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100084150()
{
  if (static Platform.current.getter())
  {
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 168);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 280))(v5, *(void *)(v0 + 160), v6);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v0 + 328) = v10;
    *(void *)(v10 + 16) = v8;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v10 + v9, v5, v6);
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_10008392C;
    uint64_t v12 = *(void *)(v0 + 160);
    return sub_10002A218(v0 + 56, v12, (uint64_t)&unk_1000F3FE8, v10);
  }
  else
  {
    *(void *)(v0 + 120) = sub_100005CB0(&qword_1000F2970);
    *(void *)(v0 + 128) = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    uint64_t v1 = sub_10003ED9C((uint64_t *)(v0 + 96));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000837F0;
    uint64_t v3 = *(void *)(v0 + 160);
    return sub_100028570((uint64_t)v1, v3, 1);
  }
}

uint64_t sub_100084360(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  uint64_t v4 = type metadata accessor for AlbumID();
  v3[22] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[23] = v5;
  v3[24] = *(void *)(v5 + 64);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[27] = v6;
  v3[28] = *(void *)(v6 - 8);
  v3[29] = swift_task_alloc();
  v3[30] = type metadata accessor for CommunicationActor();
  v3[31] = static CommunicationActor.shared.getter();
  v3[32] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[33] = v8;
  v3[34] = v7;
  return _swift_task_switch(sub_100084504, v8, v7);
}

uint64_t sub_100084504()
{
  unint64_t v28 = v0;
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[20];
  static Log.photos.getter();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[35] = v5;
  v0[36] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v5(v1, v4, v2);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = v0[26];
    uint64_t v11 = v0[22];
    uint64_t v10 = v0[23];
    swift_release();
    sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[17] = sub_100007E88(v12, v13, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v8 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = v0[28];
    uint64_t v14 = v0[29];
    uint64_t v16 = v0[27];
    swift_release();
    uint64_t v17 = PhotosFaceType.description.getter();
    v0[18] = sub_100007E88(v17, v18, &v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Tracking %s for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  else
  {
    uint64_t v20 = v0[28];
    uint64_t v19 = v0[29];
    uint64_t v21 = v0[27];
    (*(void (**)(void, void))(v0[23] + 8))(v0[26], v0[22]);
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  uint64_t v22 = type metadata accessor for AlbumDatabase();
  uint64_t v23 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  uint64_t v24 = (void *)swift_task_alloc();
  v0[37] = v24;
  *uint64_t v24 = v0;
  v24[1] = sub_10008492C;
  uint64_t v25 = v0[20];
  return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v25, v22, v23);
}

uint64_t sub_10008492C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_100084C78;
  }
  else {
    uint64_t v5 = sub_100084A68;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100084A68()
{
  if (static Platform.current.getter())
  {
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v6 = *(void *)(v0 + 176);
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v8 = *(void *)(v0 + 168);
    (*(void (**)(uint64_t, void, uint64_t))(v0 + 280))(v5, *(void *)(v0 + 160), v6);
    unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v0 + 328) = v10;
    *(void *)(v10 + 16) = v8;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(v10 + v9, v5, v6);
    swift_retain();
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 336) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100084E3C;
    uint64_t v12 = *(void *)(v0 + 160);
    return sub_10002AEA8(v0 + 56, v12, (uint64_t)&unk_1000F41A8, v10);
  }
  else
  {
    *(void *)(v0 + 120) = sub_100005CB0(&qword_1000F2970);
    *(void *)(v0 + 128) = sub_100005F48(&qword_1000F2990, &qword_1000F2970);
    uint64_t v1 = sub_10003ED9C((uint64_t *)(v0 + 96));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100084D00;
    uint64_t v3 = *(void *)(v0 + 160);
    return sub_100028C38((uint64_t)v1, v3, 1);
  }
}

uint64_t sub_100084C78()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100084D00()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 272);
  uint64_t v4 = *(void *)(v2 + 264);
  if (v0) {
    uint64_t v5 = sub_10008503C;
  }
  else {
    uint64_t v5 = sub_100084F58;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100084E3C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 344) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_1000851B4;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 264);
    uint64_t v4 = *(void *)(v2 + 272);
    uint64_t v5 = sub_1000850D0;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100084F58()
{
  swift_release();
  sub_1000700FC((long long *)(v0 + 96), v0 + 16);
  sub_10003EB84((void *)(v0 + 16), *(void *)(v0 + 40));
  AsyncSequence.generic.getter();
  sub_100009090(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008503C()
{
  swift_release();
  sub_1000CB26C(v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000850D0()
{
  swift_release();
  sub_1000700FC((long long *)(v0 + 56), v0 + 16);
  sub_10003EB84((void *)(v0 + 16), *(void *)(v0 + 40));
  AsyncSequence.generic.getter();
  sub_100009090(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000851B4()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100085248(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000F3E78 + dword_1000F3E78);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005F94;
  return v5(a1);
}

uint64_t sub_1000852F8(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000F3FD0 + dword_1000F3FD0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005F94;
  return v5(a1);
}

uint64_t sub_1000853A8(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_1000F4190 + dword_1000F4190);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100005F94;
  return v5(a1);
}

uint64_t sub_100085458(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for CommunicationActor();
  v2[14] = static CommunicationActor.shared.getter();
  v2[15] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v6;
  v2[17] = v5;
  return _swift_task_switch(sub_1000855E0, v6, v5);
}

uint64_t sub_1000855E0()
{
  os_log_t v33 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[2] = sub_100007E88(0xD000000000000010, 0x80000001000D6950, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[3] = sub_100007E88(v8, v9, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[12];
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[8];
    swift_release();
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100007E88(v14, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s os_log_type_t type = %s, id: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v30);
  }
  else
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v19 = v0[9];
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[7];
    uint64_t v21 = v0[8];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  if (static Platform.current.getter())
  {
    char v26 = *(unsigned char *)(v0[6] + 16);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[18] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_100085B3C;
    uint64_t v28 = v0[5];
    return sub_1000044A8(v26, v28);
  }
  else
  {
    uint64_t v22 = type metadata accessor for GalleryDatabase();
    uint64_t v23 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[20] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100085D0C;
    uint64_t v25 = v0[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v25, v22, v23);
  }
}

uint64_t sub_100085B3C()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    return _swift_task_switch(sub_1000CDEF0, v3, v4);
  }
  else
  {
    uint64_t v5 = type metadata accessor for GalleryDatabase();
    uint64_t v6 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v7 = (void *)swift_task_alloc();
    v2[20] = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_100085D0C;
    uint64_t v8 = v2[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v8, v5, v6);
  }
}

uint64_t sub_100085D0C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1000CDEE8;
  }
  else {
    uint64_t v5 = sub_100085E48;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100085E48()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100085EDC;
  return sub_100059D90();
}

uint64_t sub_100085EDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_1000CDEEC;
  }
  else {
    uint64_t v5 = sub_1000CDF3C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100086018(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for CommunicationActor();
  v2[14] = static CommunicationActor.shared.getter();
  v2[15] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v6;
  v2[17] = v5;
  return _swift_task_switch(sub_1000861A0, v6, v5);
}

uint64_t sub_1000861A0()
{
  os_log_t v33 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[2] = sub_100007E88(0xD000000000000010, 0x80000001000D6950, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[3] = sub_100007E88(v8, v9, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[12];
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[8];
    swift_release();
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100007E88(v14, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s os_log_type_t type = %s, id: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v30);
  }
  else
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v19 = v0[9];
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[7];
    uint64_t v21 = v0[8];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  if (static Platform.current.getter())
  {
    char v26 = *(unsigned char *)(v0[6] + 16);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[18] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1000866FC;
    uint64_t v28 = v0[5];
    return sub_1000044A8(v26, v28);
  }
  else
  {
    uint64_t v22 = type metadata accessor for ShuffleDatabase();
    uint64_t v23 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[20] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100085D0C;
    uint64_t v25 = v0[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v25, v22, v23);
  }
}

uint64_t sub_1000866FC()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    return _swift_task_switch(sub_1000CDEF0, v3, v4);
  }
  else
  {
    uint64_t v5 = type metadata accessor for ShuffleDatabase();
    uint64_t v6 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v7 = (void *)swift_task_alloc();
    v2[20] = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_100085D0C;
    uint64_t v8 = v2[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v8, v5, v6);
  }
}

uint64_t sub_1000868CC(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for CommunicationActor();
  v2[14] = static CommunicationActor.shared.getter();
  v2[15] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[16] = v6;
  v2[17] = v5;
  return _swift_task_switch(sub_100086A54, v6, v5);
}

uint64_t sub_100086A54()
{
  os_log_t v33 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = v0[7];
  static Log.photos.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v4);
  swift_retain_n();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    v0[2] = sub_100007E88(0xD000000000000010, 0x80000001000D6950, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v8 = PhotosFaceType.description.getter();
    v0[3] = sub_100007E88(v8, v9, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v30 = v0[10];
    uint64_t v31 = v0[12];
    uint64_t v12 = v0[7];
    uint64_t v13 = v0[8];
    swift_release();
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[4] = sub_100007E88(v14, v15, &v32);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s os_log_type_t type = %s, id: %s", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v31, v30);
  }
  else
  {
    uint64_t v17 = v0[11];
    uint64_t v16 = v0[12];
    uint64_t v19 = v0[9];
    uint64_t v18 = v0[10];
    uint64_t v20 = v0[7];
    uint64_t v21 = v0[8];
    swift_release_n();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);

    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  if (static Platform.current.getter())
  {
    char v26 = *(unsigned char *)(v0[6] + 16);
    uint64_t v27 = (void *)swift_task_alloc();
    v0[18] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_100086FB0;
    uint64_t v28 = v0[5];
    return sub_1000044A8(v26, v28);
  }
  else
  {
    uint64_t v22 = type metadata accessor for AlbumDatabase();
    uint64_t v23 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
    uint64_t v24 = (void *)swift_task_alloc();
    v0[20] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_100087180;
    uint64_t v25 = v0[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v25, v22, v23);
  }
}

uint64_t sub_100086FB0()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[16];
    uint64_t v4 = v2[17];
    return _swift_task_switch(sub_100087610, v3, v4);
  }
  else
  {
    uint64_t v5 = type metadata accessor for AlbumDatabase();
    uint64_t v6 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
    uint64_t v7 = (void *)swift_task_alloc();
    v2[20] = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_100087180;
    uint64_t v8 = v2[5];
    return dispatch thunk of PhotosFaceIDDatabase.delete(id:)(v8, v5, v6);
  }
}

uint64_t sub_100087180()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_10008748C;
  }
  else {
    uint64_t v5 = sub_1000872BC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000872BC()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100087350;
  return sub_100059D90();
}

uint64_t sub_100087350()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 136);
  uint64_t v4 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v5 = sub_10008758C;
  }
  else {
    uint64_t v5 = sub_100087510;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008748C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100087510()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10008758C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100087610()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100087694()
{
  v0[2] = type metadata accessor for CommunicationActor();
  v0[3] = static CommunicationActor.shared.getter();
  uint64_t v1 = type metadata accessor for GalleryDatabase();
  uint64_t v2 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100087798;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v1, v2);
}

uint64_t sub_100087798(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000CDF38;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_1000CDF34;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100087980()
{
  v0[2] = type metadata accessor for CommunicationActor();
  v0[3] = static CommunicationActor.shared.getter();
  uint64_t v1 = type metadata accessor for ShuffleDatabase();
  uint64_t v2 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100087798;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v1, v2);
}

uint64_t sub_100087A84()
{
  v0[2] = type metadata accessor for CommunicationActor();
  v0[3] = static CommunicationActor.shared.getter();
  uint64_t v1 = type metadata accessor for AlbumDatabase();
  uint64_t v2 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[4] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100087798;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v1, v2);
}

uint64_t sub_100087B88(uint64_t a1)
{
  v1[2] = type metadata accessor for CommunicationActor();
  v1[3] = static CommunicationActor.shared.getter();
  uint64_t v3 = type metadata accessor for GalleryDatabase();
  uint64_t v4 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v5 = (void *)swift_task_alloc();
  v1[4] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100087798;
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(a1, v3, v4);
}

uint64_t sub_100087C94(uint64_t a1)
{
  v1[2] = type metadata accessor for CommunicationActor();
  v1[3] = static CommunicationActor.shared.getter();
  uint64_t v3 = type metadata accessor for ShuffleDatabase();
  uint64_t v4 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v5 = (void *)swift_task_alloc();
  v1[4] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100087798;
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(a1, v3, v4);
}

uint64_t sub_100087DA0(uint64_t a1)
{
  v1[2] = type metadata accessor for CommunicationActor();
  v1[3] = static CommunicationActor.shared.getter();
  uint64_t v3 = type metadata accessor for AlbumDatabase();
  uint64_t v4 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  uint64_t v5 = (void *)swift_task_alloc();
  v1[4] = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100087EAC;
  return dispatch thunk of PhotosFaceIDDatabase.queryByDay(id:)(a1, v3, v4);
}

uint64_t sub_100087EAC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 40) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000880FC;
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v9;
    uint64_t v8 = sub_100088094;
  }
  return _swift_task_switch(v8, v5, v7);
}

uint64_t sub_100088094()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 48);
  return v1(v2);
}

uint64_t sub_1000880FC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100088160(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for CommunicationActor();
  v2[5] = static CommunicationActor.shared.getter();
  v2[6] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000CDEDC, v4, v3);
}

uint64_t sub_100088230(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for CommunicationActor();
  v2[5] = static CommunicationActor.shared.getter();
  v2[6] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100088300, v4, v3);
}

uint64_t sub_100088300()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = sub_100019BA0(v1, (void *)1);
  sub_100012D6C(v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  uint64_t v5 = *(uint64_t (**)(void *))(v0 + 8);
  return v5(v4);
}

uint64_t sub_10008843C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  v2[4] = type metadata accessor for CommunicationActor();
  v2[5] = static CommunicationActor.shared.getter();
  v2[6] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10008850C, v4, v3);
}

uint64_t sub_10008850C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = sub_100018868(v1, 1);
  sub_100012D6C((uint64_t)v2);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  if (!v4)
  {
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    uint64_t v4 = _swiftEmptyArrayStorage;
  }
  uint64_t v5 = *(uint64_t (**)(void *))(v0 + 8);
  return v5(v4);
}

uint64_t sub_100088648()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F2968 + dword_1000F2968);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_1000886EC()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F2AE0 + dword_1000F2AE0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_100088790()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F2B48 + dword_1000F2B48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_100088834()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F3DA0 + dword_1000F3DA0);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_1000888D8()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F3F80 + dword_1000F3F80);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_10008897C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_1000F40D8 + dword_1000F40D8);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100005F94;
  return v3();
}

uint64_t sub_100088A20()
{
  v1[32] = v0;
  uint64_t v2 = type metadata accessor for StoredPhoto();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  sub_100005CB0(&qword_1000F3DA8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v3 = sub_100005CB0(&qword_1000F3DB0);
  v1[38] = v3;
  v1[39] = *(void *)(v3 - 8);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ShuffleID();
  v1[43] = v4;
  v1[44] = *(void *)(v4 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v1[52] = v5;
  v1[53] = *(void *)(v5 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0(&qword_1000F2E30);
  v1[58] = v6;
  v1[59] = *(void *)(v6 - 8);
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2E58);
  v1[69] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F3DB8);
  v1[70] = v7;
  v1[71] = *(void *)(v7 - 8);
  v1[72] = swift_task_alloc();
  uint64_t v8 = sub_100005CB0(&qword_1000F3DC0);
  v1[73] = v8;
  v1[74] = *(void *)(v8 - 8);
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v1[77] = v9;
  v1[78] = *(void *)(v9 - 8);
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  v1[81] = swift_task_alloc();
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SyncFacesRequest();
  v1[86] = v10;
  v1[87] = *(void *)(v10 - 8);
  v1[88] = swift_task_alloc();
  v1[89] = type metadata accessor for CommunicationActor();
  v1[90] = static CommunicationActor.shared.getter();
  uint64_t v11 = type metadata accessor for GalleryDatabase();
  v1[91] = v11;
  uint64_t v12 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  v1[92] = v12;
  uint64_t v13 = (void *)swift_task_alloc();
  v1[93] = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_10008903C;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v11, v12);
}

uint64_t sub_10008903C(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 752) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000CDECC;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v4[95] = a1;
    v4[96] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    v4[97] = v11;
    v4[98] = v12;
    uint64_t v8 = sub_10008923C;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_10008923C()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 760);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = (void *)swift_task_alloc();
  *uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for ShuffleProvider();
  *(void *)(v0 + 792) = v7;
  v6[1] = v7;
  v6[2] = v4;
  uint64_t v8 = sub_1000CD730(&qword_1000F3DC8, (void (*)(uint64_t))type metadata accessor for ShuffleProvider);
  *(void *)(v0 + 800) = v8;
  v6[3] = v8;
  v6[4] = v3;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v10 = sub_1000C9280(v1, KeyPath, v0 + 120, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
  *(void *)(v0 + 808) = v10;
  swift_release_n();
  swift_bridgeObjectRelease();
  if (v10[2]) {
    goto LABEL_8;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v11 = PhotosFaceType.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == PhotosFaceType.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_8:
    if (static TestProperties.ignoreSyncCache.getter())
    {
      *(void *)(v0 + 848) = v2;
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_100062D78(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
      static Log.session.getter();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v41 = v18;
        uint64_t v19 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v20 = PhotosFaceType.description.getter();
        *(void *)(v0 + 232) = sub_100007E88(v20, v21, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v19 + 12) = 2048;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v22 = _swiftEmptyArrayStorage[2];
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v42 = *(void *)(v0 + 680);
        uint64_t v23 = *(void *)(v0 + 624);
        uint64_t v24 = *(void *)(v0 + 616);
        swift_bridgeObjectRetain();
        swift_release();
        sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v25 = Set.description.getter();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 248) = sub_100007E88(v25, v27, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v41, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v28(v42, v24);
      }
      else
      {
        uint64_t v32 = *(void *)(v0 + 680);
        uint64_t v33 = *(void *)(v0 + 624);
        uint64_t v34 = *(void *)(v0 + 616);
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v28(v32, v34);
      }
      *(void *)(v0 + 856) = v28;
      uint64_t v35 = *(void *)(v0 + 256);
      *(void *)(v0 + 864) = *(void *)(v35 + 96);
      *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v35 + 16);
      *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
      uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v38 = v37;
      uint64_t v29 = sub_100089D24;
      uint64_t v30 = v36;
      uint64_t v31 = v38;
    }
    else
    {
      *(void *)(v0 + 816) = *(void *)(*(void *)(v0 + 256) + 104);
      uint64_t v29 = sub_100089B48;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    return _swift_task_switch(v29, v30, v31);
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v15) {
    goto LABEL_8;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100089B48()
{
  *(void *)(v0 + 824) = OBJC_IVAR____TtC11photosfaced10PhotoCache_database;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 832) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100089BF0;
  return PhotosFaceDatabase.storedPhotos()();
}

uint64_t sub_100089BF0(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  *(void *)(*(void *)v2 + 840) = a1;
  swift_task_dealloc();
  if (v1)
  {
    v3[154] = v1;
    uint64_t v4 = v3[98];
    uint64_t v5 = v3[97];
    uint64_t v6 = sub_1000CDEC4;
  }
  else
  {
    uint64_t v6 = sub_100094814;
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100089D24()
{
  char v1 = *(unsigned char *)(v0 + 1244);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 848);
  sub_100064E64(0x70A04u >> (8 * v1), *(void *)(v0 + 704), 1, *(void *)(v0 + 608));
  *(void *)(v0 + 880) = v2;
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 776);
  if (v2) {
    uint64_t v5 = sub_1000CDEC8;
  }
  else {
    uint64_t v5 = sub_100089DDC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100089DDC()
{
  (*(void (**)(void, void, void))(v0[74] + 16))(v0[75], v0[76], v0[73]);
  sub_100005F48(&qword_1000F3DD0, &qword_1000F3DC0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = v0[107];
  v0[112] = _swiftEmptyArrayStorage;
  v0[111] = v1;
  uint64_t v2 = v0[96];
  uint64_t v3 = static CommunicationActor.shared.getter();
  v0[113] = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F3DD8, &qword_1000F3DB8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[114] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100089F58;
  uint64_t v6 = v0[70];
  uint64_t v7 = v0[69];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 5, v6, v4);
}

uint64_t sub_100089F58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 784);
  uint64_t v4 = *(void *)(v2 + 776);
  if (v0) {
    uint64_t v5 = sub_10008BFF8;
  }
  else {
    uint64_t v5 = sub_10008A084;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008A084()
{
  uint64_t v240 = v0;
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    uint64_t v57 = *(void *)(v0 + 544);
    uint64_t v58 = *(void *)(v0 + 536);
    unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v59(v57, v1, v2);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v60(v58, v57, v2);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v62 = *(void *)(v0 + 896);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v62 = sub_1000D24C0(0, *(void *)(v62 + 16) + 1, 1, v62);
    }
    unint64_t v64 = *(void *)(v62 + 16);
    unint64_t v63 = *(void *)(v62 + 24);
    unint64_t v65 = v64 + 1;
    v233 = (void (*)(unint64_t, uint64_t, uint64_t))v59;
    if (v64 >= v63 >> 1)
    {
      uint64_t v199 = sub_1000D24C0(v63 > 1, v64 + 1, 1, v62);
      unint64_t v65 = v64 + 1;
      unint64_t v62 = v199;
    }
    *(void *)(v0 + 928) = v62;
    uint64_t v66 = *(void *)(v0 + 544);
    uint64_t v67 = *(void *)(v0 + 536);
    uint64_t v68 = *(void *)(v0 + 528);
    uint64_t v69 = *(void *)(v0 + 520);
    uint64_t v228 = *(void *)(v0 + 512);
    uint64_t v71 = *(void *)(v0 + 464);
    uint64_t v70 = *(void *)(v0 + 472);
    *(void *)(v62 + 16) = v65;
    v233(v62+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v64, v67, v71);
    static Log.photos.getter();
    v60(v68, v66, v71);
    v60(v69, v66, v71);
    v60(v228, v66, v71);
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v72, v73))
    {
      os_log_type_t v217 = v73;
      v219 = v72;
      v222 = (uint64_t *)(v0 + 192);
      uint64_t v74 = (_DWORD *)swift_slowAlloc();
      *(void *)(v0 + 192) = swift_slowAlloc();
      v234 = v74;
      *uint64_t v74 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v75 = (uint64_t *)(v0 + 216);
      uint64_t v76 = *(void *)(v0 + 528);
      uint64_t v78 = *(void *)(v0 + 464);
      uint64_t v77 = *(void *)(v0 + 472);
      uint64_t v79 = *(void *)(SyncedPhotosFace.uncached.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      v225 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      v225(v76, v78);
      *(void *)(v0 + 200) = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v234 + 6) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v80 = *(void *)(v0 + 520);
      uint64_t v81 = *(void *)(v0 + 456);
      uint64_t v82 = *(void *)(v0 + 464);
      uint64_t v83 = *(void *)(v0 + 424);
      uint64_t v206 = *(void *)(v0 + 416);
      uint64_t v84 = *(void *)(v0 + 408);
      uint64_t v85 = *(void *)(v0 + 344);
      uint64_t v86 = *(void *)(v0 + 352);
      SyncedPhotosFace.id.getter();
      sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      dispatch thunk of PhotosFaceID.id.getter();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
      swift_release();
      v225(v80, v82);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v89 = v88;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v206);
      *(void *)(v0 + 208) = sub_100007E88(v87, v89, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v234 + 11) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = SyncedPhotosFace.uncached.getter();
      int64_t v91 = *(void *)(v90 + 16);
      if (v91)
      {
        uint64_t v92 = *(void *)(v0 + 272);
        *(void *)(v0 + 216) = _swiftEmptyArrayStorage;
        sub_100054824(0, v91, 0);
        unint64_t v93 = v90 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
        uint64_t v94 = *(void *)(v92 + 72);
        char v95 = *(void (**)(void, unint64_t, void))(v92 + 16);
        do
        {
          v95(*(void *)(v0 + 280), v93, *(void *)(v0 + 264));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v97 = *(void *)(v0 + 272);
          uint64_t v96 = *(void *)(v0 + 280);
          uint64_t v98 = *(void *)(v0 + 264);
          StoredPhoto.localIdentifier.getter();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
          uint64_t v99 = *(void *)(v0 + 216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054824(0, *(void *)(v99 + 16) + 1, 1);
            uint64_t v99 = *v75;
          }
          unint64_t v101 = *(void *)(v99 + 16);
          unint64_t v100 = *(void *)(v99 + 24);
          if (v101 >= v100 >> 1)
          {
            sub_100054824(v100 > 1, v101 + 1, 1);
            uint64_t v99 = *v75;
          }
          uint64_t v103 = *(void *)(v0 + 424);
          uint64_t v102 = *(void *)(v0 + 432);
          uint64_t v104 = *(void *)(v0 + 416);
          *(void *)(v99 + 16) = v101 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v103 + 32))(v99+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v101, v102, v104);
          *(void *)(v0 + 216) = v99;
          v93 += v94;
          --v91;
        }
        while (v91);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v229 = (void *)(v0 + 856);
      os_log_t logb = *(os_log_t *)(v0 + 672);
      uint64_t v212 = *(void (**)(os_log_t, uint64_t))(v0 + 856);
      uint64_t v114 = *(void *)(v0 + 616);
      uint64_t v113 = v225;
      v225(*(void *)(v0 + 512), *(void *)(v0 + 464));
      uint64_t v115 = Array.description.getter();
      unint64_t v117 = v116;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 224) = sub_100007E88(v115, v117, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v219, v217, "Caching %ld for face %s, photos = %s", (uint8_t *)v234, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v212(logb, v114);
    }
    else
    {
      v229 = (void *)(v0 + 888);
      v235 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
      uint64_t v108 = *(void *)(v0 + 672);
      uint64_t v109 = *(void *)(v0 + 616);
      uint64_t v110 = *(void *)(v0 + 528);
      uint64_t v111 = *(void *)(v0 + 520);
      uint64_t v112 = *(void *)(v0 + 464);
      uint64_t v113 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v113(*(void *)(v0 + 512), v112);
      v113(v111, v112);
      v113(v110, v112);

      v235(v108, v109);
    }
    *(void *)(v0 + 944) = *v229;
    *(void *)(v0 + 936) = v113;
    *(void *)(v0 + 952) = *(void *)(*(void *)(v0 + 256) + 104);
    *(void *)(v0 + 960) = SyncedPhotosFace.uncached.getter();
    return _swift_task_switch(sub_10008D944, 0, 0);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 568) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 560));
  uint64_t v4 = *(void *)(v0 + 920);
  *(void *)(v0 + 984) = 0;
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 736);
  uint64_t v8 = *(void *)(v0 + 728);
  uint64_t v9 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)swift_task_alloc();
  *uint64_t v10 = v9;
  v10[1] = v6;
  v10[2] = v8;
  v10[3] = v5;
  v10[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000C9E5C(v12, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 792);
  uint64_t v16 = *(void *)(v0 + 736);
  uint64_t v17 = *(void *)(v0 + 728);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v19 = (void *)swift_task_alloc();
  *uint64_t v19 = v18;
  v19[1] = v15;
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v16;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v21 = sub_1000CBDF4((uint64_t)v13, v20);
  *(void *)(v0 + 1000) = v21;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v22, v23))
  {
    uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v106 = *(void *)(v0 + 656);
    uint64_t v107 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v105(v106, v107);
    goto LABEL_55;
  }
  os_log_type_t v208 = v23;
  log = v22;
  uint64_t v24 = swift_slowAlloc();
  uint64_t v238 = swift_slowAlloc();
  *(_DWORD *)uint64_t v24 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v25 = *(void *)(v21 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v25;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v26 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v26, v27, &v238);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v24 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v28 = *(void *)(v21 + 16);
  if (!v28)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v230 = *(void *)(v0 + 656);
    v236 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v118 = *(void *)(v0 + 616);
    uint64_t v119 = Array.description.getter();
    uint64_t v120 = (uint8_t *)v24;
    unint64_t v122 = v121;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v119, v122, &v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v208, "Received %ld %s: %s", v120, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v236(v230, v118);
LABEL_55:
    unint64_t v54 = *(void *)(v0 + 352);
    os_log_t v49 = *(void **)(v0 + 304);
    uint64_t v123 = *(void *)(v0 + 312);
    char v124 = *(unsigned char *)(v21 + 32);
    *(unsigned char *)(v0 + 1245) = v124;
    uint64_t v125 = -1;
    uint64_t v126 = -1 << v124;
    if (-(-1 << v124) < 64) {
      uint64_t v125 = ~(-1 << -(char)(-1 << v124));
    }
    unint64_t v127 = v125 & *(void *)(v21 + 64);
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v123 + 56);
    int v48 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v48;
    *(void *)(v0 + 1024) = v48;
    *(void *)(v0 + 1016) = v48;
    *(void *)(v0 + 1008) = v48;
    swift_bridgeObjectRetain();
    if (v127)
    {
      uint64_t v128 = 0;
      unint64_t v129 = __clz(__rbit64(v127));
      uint64_t v130 = (v127 - 1) & v127;
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
LABEL_59:
      uint64_t v131 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v54 + 16))(v131, v43[6] + *(void *)(v54 + 72) * v129, *(void *)(v0 + 344));
      *(void *)(v131 + *((int *)v49 + 12)) = *(void *)(v43[7] + 8 * v129);
      (*v38)(v131, 0, 1, v49);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    }
    unint64_t v51 = 63 - v126;
    if ((unint64_t)(63 - v126) <= 0x7F)
    {
      uint64_t v128 = 0;
    }
    else
    {
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
      unint64_t v132 = v43[9];
      if (v132)
      {
        uint64_t v128 = 1;
LABEL_63:
        uint64_t v130 = (v132 - 1) & v132;
        unint64_t v129 = __clz(__rbit64(v132)) + (v128 << 6);
        goto LABEL_59;
      }
      if (v51 < 0xC0)
      {
        uint64_t v128 = 1;
      }
      else
      {
        unint64_t v132 = v43[10];
        if (v132)
        {
          uint64_t v128 = 2;
          goto LABEL_63;
        }
        if (v51 < 0x100)
        {
          uint64_t v128 = 2;
        }
        else
        {
          unint64_t v132 = v43[11];
          if (v132)
          {
            uint64_t v128 = 3;
            goto LABEL_63;
          }
LABEL_108:
          if (v51 < 0x140)
          {
            uint64_t v128 = 3;
          }
          else
          {
            unint64_t v132 = v43[12];
            if (v132)
            {
              uint64_t v128 = 4;
              goto LABEL_63;
            }
            uint64_t v200 = 0;
            uint64_t v201 = v51 >> 6;
            uint64_t v202 = 5;
            if (v201 > 5) {
              uint64_t v202 = v201;
            }
            uint64_t v203 = v202 - 5;
            while (v203 != v200)
            {
              unint64_t v132 = v43[v200++ + 13];
              if (v132)
              {
                uint64_t v128 = v200 + 4;
                goto LABEL_63;
              }
            }
            uint64_t v128 = v201 - 1;
          }
        }
      }
    }
    (*v38)(*(void *)(v0 + 288), 1, 1, v49);
    uint64_t v130 = 0;
LABEL_66:
    *(void *)(v0 + 1048) = v130;
    *(void *)(v0 + 1040) = v128;
    uint64_t v133 = *(void *)(v0 + 304);
    uint64_t v134 = *(void *)(v0 + 312);
    uint64_t v135 = *(void *)(v0 + 296);
    sub_100055708(*(void *)(v0 + 288), v135, &qword_1000F3DA8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v135, 1, v133) == 1)
    {
      uint64_t v136 = *(void *)(v0 + 1000);
      swift_release();
      swift_release();
      uint64_t v137 = *(void *)(v136 + 16);
      swift_bridgeObjectRelease();
      if (v137) {
        sub_100009944(*(unsigned char *)(v0 + 1244));
      }
      uint64_t v138 = *(void *)(v0 + 704);
      uint64_t v139 = *(void *)(v0 + 696);
      uint64_t v140 = *(void *)(v0 + 688);
      uint64_t v141 = *(void *)(v0 + 608);
      uint64_t v142 = *(void *)(v0 + 592);
      uint64_t v143 = *(void *)(v0 + 584);
      if (*(void *)(v0 + 984))
      {
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
      }
      else
      {
        (*(void (**)(void, void))(v142 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
      }
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v144 = *(uint64_t (**)(void))(v0 + 8);
      return v144();
    }
    else
    {
      uint64_t v146 = *(void *)(v0 + 392);
      uint64_t v145 = *(void *)(v0 + 400);
      uint64_t v147 = *(void *)(v0 + 344);
      uint64_t v148 = *(void *)(v0 + 352);
      uint64_t v149 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v149;
      (*(void (**)(uint64_t))(v148 + 32))(v145);
      static Log.session.getter();
      uint64_t v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
      *(void *)(v0 + 1064) = v150;
      *(void *)(v0 + 1072) = (v148 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v150(v146, v145, v147);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v151 = Logger.logObject.getter();
      os_log_type_t v152 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v151, v152))
      {
        os_log_type_t loga = v152;
        uint64_t v218 = v149;
        v220 = (uint64_t *)(v0 + 88);
        uint64_t v153 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v221 = v153;
        *(_DWORD *)uint64_t v153 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        v213 = v151;
        v215 = v48;
        v223 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v154 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v154, v155, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v153 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v157 = *(void *)(v0 + 384);
        uint64_t v156 = *(void *)(v0 + 392);
        uint64_t v158 = *(void *)(v0 + 344);
        uint64_t v159 = *(void *)(v0 + 352);
        v150(v157, v156, v158);
        swift_release();
        int v160 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v160(v156, v158);
        sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v161 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v163 = v162;
        uint64_t v207 = v160;
        v160(v157, v158);
        *(void *)(v0 + 104) = sub_100007E88(v161, v163, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v221 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v164 = *(void *)(v0 + 800);
        uint64_t v165 = *(void *)(v0 + 792);
        uint64_t v166 = *(void *)(v0 + 736);
        uint64_t v167 = *(void *)(v0 + 728);
        uint64_t v168 = *(void *)(v0 + 344);
        v169 = (void *)swift_task_alloc();
        void *v169 = v168;
        v169[1] = v165;
        v169[2] = v167;
        v169[3] = v164;
        v169[4] = v166;
        uint64_t v170 = swift_getKeyPath();
        swift_task_dealloc();
        int64_t v171 = *(void *)(v218 + 16);
        if (v171)
        {
          uint64_t v172 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
          sub_100054958(0, v171, 0);
          uint64_t v173 = v218 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
          v226 = *(void (**)(void, uint64_t, void))(v172 + 16);
          uint64_t v231 = *(void *)(v172 + 72);
          do
          {
            v226(*(void *)(v0 + 504), v173, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v174 = *(void *)(v0 + 504);
            uint64_t v176 = *(void *)(v0 + 464);
            uint64_t v175 = *(void *)(v0 + 472);
            uint64_t v177 = v170;
            swift_getAtKeyPath();
            swift_release();
            uint64_t v179 = *(void *)(v0 + 16);
            uint64_t v178 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v174, v176);
            uint64_t v180 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v180 + 16) + 1, 1);
              uint64_t v180 = *v223;
            }
            unint64_t v182 = *(void *)(v180 + 16);
            unint64_t v181 = *(void *)(v180 + 24);
            if (v182 >= v181 >> 1)
            {
              sub_100054958(v181 > 1, v182 + 1, 1);
              uint64_t v180 = *v223;
            }
            *(void *)(v180 + 16) = v182 + 1;
            uint64_t v183 = v180 + 16 * v182;
            *(void *)(v183 + 32) = v179;
            *(void *)(v183 + 40) = v178;
            v173 += v231;
            --v171;
            uint64_t v170 = v177;
          }
          while (v171);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v190 = *(void *)(v0 + 648);
        uint64_t v191 = *(void *)(v0 + 616);
        uint64_t v192 = Array.description.getter();
        unint64_t v194 = v193;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v192, v194, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v213, loga, "Inserting %s %s: %s", (uint8_t *)v221, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        int v48 = v215;
        v215(v190, v191);
        v189 = v207;
      }
      else
      {
        uint64_t v237 = *(void *)(v0 + 648);
        uint64_t v184 = *(void *)(v0 + 616);
        uint64_t v185 = *(void *)(v0 + 392);
        uint64_t v186 = *(void *)(v0 + 344);
        uint64_t v187 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v188 = v185;
        v189 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
        v189(v188, v186);
        swift_release_n();
        swift_bridgeObjectRelease();

        v48(v237, v184);
      }
      *(void *)(v0 + 1088) = v48;
      *(void *)(v0 + 1080) = v189;
      uint64_t v195 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v195;
      *uint64_t v195 = v0;
      v195[1] = sub_10008F624;
      uint64_t v196 = *(void *)(v0 + 736);
      uint64_t v197 = *(void *)(v0 + 728);
      uint64_t v198 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v198, v197, v196);
    }
  }
  uint64_t v205 = v24;
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v216 = *(void *)(v0 + 304);
  v239 = _swiftEmptyArrayStorage;
  sub_100054958(0, v28, 0);
  uint64_t v30 = sub_1000C6DEC(v21);
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  v214 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v35 = v21;
  for (int64_t i = v28 - 1; ; --i)
  {
    uint64_t v37 = *(void *)(v0 + 336);
    uint64_t v36 = *(void *)(v0 + 344);
    uint64_t v38 = *(void (***)(uint64_t, uint64_t, uint64_t, void *))(v0 + 320);
    uint64_t v39 = *(void *)(v0 + 328);
    uint64_t v40 = *(int *)(v216 + 48);
    char v41 = v34 & 1;
    uint64_t v227 = v32;
    uint64_t v232 = v30;
    uint64_t v42 = sub_1000C6EF4(v37, v30, v32, v34 & 1, v35, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v37 + v40) = v42;
    (*v214)(v39, v37, v36);
    *(void *)(v39 + *(int *)(v216 + 48)) = v42;
    uint64_t v43 = &qword_1000F3DB0;
    sub_100055708(v39, (uint64_t)v38, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v37, &qword_1000F3DB0);
    uint64_t v44 = sub_1000B7804((uint64_t)v38, v0 + 152, (void (*)(void))&type metadata accessor for GalleryDatabase, &qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v46 = *(void *)(v0 + 320);
    if (v4) {
      break;
    }
    uint64_t v47 = v44;
    int v48 = v45;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    os_log_t v49 = v239;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v49[2] + 1, 1);
      os_log_t v49 = v239;
    }
    unint64_t v51 = v227;
    uint64_t v50 = v232;
    unint64_t v53 = v49[2];
    unint64_t v52 = v49[3];
    unint64_t v54 = v53 + 1;
    if (v53 >= v52 >> 1)
    {
      sub_100054958(v52 > 1, v53 + 1, 1);
      unint64_t v51 = v227;
      uint64_t v50 = v232;
      os_log_t v49 = v239;
    }
    v49[2] = v54;
    uint64_t v55 = &v49[2 * v53];
    v55[4] = v47;
    v55[5] = v48;
    uint64_t v35 = v21;
    if (v50 < 0 || v50 >= -(-1 << *(unsigned char *)(v21 + 32)))
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (((*(void *)(v21 + 64 + (((unint64_t)v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
      goto LABEL_106;
    }
    if (*(_DWORD *)(v21 + 36) != v51) {
      goto LABEL_107;
    }
    uint64_t v56 = _HashTable.occupiedBucket(after:)();
    if (!i)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v205;
      goto LABEL_54;
    }
    uint64_t v30 = v56;
    uint64_t v4 = 0;
    char v34 = 0;
    uint64_t v32 = *(unsigned int *)(v21 + 36);
  }
  swift_bridgeObjectRelease();
  sub_100016B90(v46, &qword_1000F3DB0);
  sub_1000CAC30(v232, v227, v41);
  return swift_release();
}

uint64_t sub_10008BFF8()
{
  uint64_t v172 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 568) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 560));
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 984) = v1;
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 736);
  uint64_t v5 = *(void *)(v0 + 728);
  uint64_t v6 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  uint64_t v7 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  *uint64_t v8 = v6;
  v8[1] = v3;
  v8[2] = v5;
  v8[3] = v2;
  void v8[4] = v4;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000C9E5C(v10, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *((void *)v11 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 168) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v16 = *(void *)(v7 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v14, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v0 + 856))(*(void *)(v0 + 664), *(void *)(v0 + 616));
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v0 + 800);
  uint64_t v18 = *(void *)(v0 + 792);
  uint64_t v19 = *(void *)(v0 + 736);
  uint64_t v20 = *(void *)(v0 + 728);
  uint64_t v21 = *(void *)(v0 + 344);
  uint64_t v22 = (void *)swift_task_alloc();
  *uint64_t v22 = v21;
  v22[1] = v18;
  void v22[2] = v20;
  v22[3] = v17;
  v22[4] = v19;
  uint64_t v23 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v24 = sub_1000CBDF4((uint64_t)v11, v23);
  *(void *)(v0 + 1000) = v24;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  v169 = (void *)v0;
  if (!os_log_type_enabled(v25, v26))
  {
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v56 = *(void *)(v0 + 656);
    uint64_t v57 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v55(v56, v57);
    goto LABEL_34;
  }
  os_log_type_t v150 = v26;
  log = v25;
  uint64_t v158 = (void (*)(void, void))(v0 + 152);
  uint64_t v159 = v24;
  uint64_t v27 = swift_slowAlloc();
  uint64_t v170 = swift_slowAlloc();
  *(_DWORD *)uint64_t v27 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v28 = *(void *)(v24 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v28;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v29 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v29, v30, &v170);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v27 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v31 = *(void *)(v24 + 16);
  if (!v31)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v164 = *(void *)(v0 + 656);
    uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v58 = *(void *)(v0 + 616);
    uint64_t v59 = Array.description.getter();
    uint64_t v60 = (uint8_t *)v27;
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v59, v62, &v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v150, "Received %ld %s: %s", v60, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v167(v164, v58);
LABEL_34:
    uint64_t v41 = *(void *)(v0 + 352);
    int v48 = *(void **)(v0 + 304);
    uint64_t v63 = *(void *)(v0 + 312);
    char v64 = *(unsigned char *)(v24 + 32);
    *(unsigned char *)(v0 + 1245) = v64;
    uint64_t v65 = -1;
    uint64_t v66 = -1 << v64;
    if (-(-1 << v64) < 64) {
      uint64_t v65 = ~(-1 << -(char)(-1 << v64));
    }
    unint64_t v67 = v65 & *(void *)(v24 + 64);
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v63 + 56);
    uint64_t v68 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v68;
    *(void *)(v0 + 1024) = v68;
    *(void *)(v0 + 1016) = v68;
    *(void *)(v0 + 1008) = v68;
    swift_bridgeObjectRetain();
    uint64_t v158 = v68;
    if (v67)
    {
      uint64_t v69 = 0;
      unint64_t v70 = __clz(__rbit64(v67));
      uint64_t v71 = (v67 - 1) & v67;
      uint64_t v45 = *(void **)(v0 + 1000);
LABEL_38:
      uint64_t v72 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v41 + 16))(v72, v45[6] + *(void *)(v41 + 72) * v70, *(void *)(v0 + 344));
      *(void *)(v72 + *((int *)v48 + 12)) = *(void *)(v45[7] + 8 * v70);
      (*v38)(v72, 0, 1, v48);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v50 = 63 - v66;
    if ((unint64_t)(63 - v66) <= 0x7F)
    {
      uint64_t v69 = 0;
      goto LABEL_44;
    }
    uint64_t v45 = *(void **)(v0 + 1000);
    unint64_t v73 = v45[9];
    if (v73)
    {
      uint64_t v69 = 1;
    }
    else
    {
      if (v50 < 0xC0)
      {
        uint64_t v69 = 1;
        goto LABEL_44;
      }
      unint64_t v73 = v45[10];
      if (v73)
      {
        uint64_t v69 = 2;
      }
      else
      {
        if (v50 < 0x100)
        {
          uint64_t v69 = 2;
          goto LABEL_44;
        }
        unint64_t v73 = v45[11];
        if (!v73) {
          goto LABEL_88;
        }
        uint64_t v69 = 3;
      }
    }
LABEL_42:
    uint64_t v71 = (v73 - 1) & v73;
    unint64_t v70 = __clz(__rbit64(v73)) + (v69 << 6);
    goto LABEL_38;
  }
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v156 = *(void *)(v0 + 304);
  int64_t v171 = _swiftEmptyArrayStorage;
  sub_100054958(0, v31, 0);
  uint64_t v33 = sub_1000C6DEC(v24);
  unint64_t v35 = v34;
  char v37 = v36 & 1;
  uint64_t v154 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v24;
  for (int64_t i = v31 - 1; ; --i)
  {
    uint64_t v40 = *(void *)(v0 + 336);
    uint64_t v39 = *(void *)(v0 + 344);
    uint64_t v41 = *(void *)(v0 + 320);
    uint64_t v42 = *(void *)(v0 + 328);
    uint64_t v43 = *(int *)(v156 + 48);
    unint64_t v163 = v35;
    uint64_t v166 = v33;
    uint64_t v44 = sub_1000C6EF4(v40, v33, v35, v37 & 1, (uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v40 + v43) = v44;
    (*v154)(v42, v40, v39);
    *(void *)(v42 + *(int *)(v156 + 48)) = v44;
    sub_100055708(v42, v41, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v40, &qword_1000F3DB0);
    uint64_t v45 = (void *)sub_1000B7804(v41, (uint64_t)v158, (void (*)(void))&type metadata accessor for GalleryDatabase, &qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v47 = v46;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    int v48 = v171;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v48[2] + 1, 1);
      int v48 = v171;
    }
    unint64_t v50 = v163;
    uint64_t v49 = v166;
    unint64_t v52 = v48[2];
    unint64_t v51 = v48[3];
    if (v52 >= v51 >> 1)
    {
      sub_100054958(v51 > 1, v52 + 1, 1);
      unint64_t v50 = v163;
      uint64_t v49 = v166;
      int v48 = v171;
    }
    v48[2] = v52 + 1;
    unint64_t v53 = &v48[2 * v52];
    v53[4] = v45;
    v53[5] = v47;
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v159;
    if (v49 < 0 || v49 >= -(-1 << *(unsigned char *)(v159 + 32))) {
      break;
    }
    if (((*(void *)(v159 + 64 + (((unint64_t)v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_86;
    }
    if (*(_DWORD *)(v159 + 36) != v50) {
      goto LABEL_87;
    }
    uint64_t v54 = _HashTable.occupiedBucket(after:)();
    if (!i)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v159;
      goto LABEL_33;
    }
    uint64_t v33 = v54;
    char v37 = 0;
    unint64_t v35 = *(unsigned int *)(v159 + 36);
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  if (v50 < 0x140)
  {
    uint64_t v69 = 3;
  }
  else
  {
    unint64_t v73 = v45[12];
    if (v73)
    {
      uint64_t v69 = 4;
      goto LABEL_42;
    }
    uint64_t v145 = 0;
    uint64_t v146 = v50 >> 6;
    uint64_t v147 = 5;
    if (v146 > 5) {
      uint64_t v147 = v146;
    }
    uint64_t v148 = v147 - 5;
    while (v148 != v145)
    {
      unint64_t v73 = v45[v145++ + 13];
      if (v73)
      {
        uint64_t v69 = v145 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v69 = v146 - 1;
  }
LABEL_44:
  (*v38)(*(void *)(v0 + 288), 1, 1, v48);
  uint64_t v71 = 0;
LABEL_45:
  *(void *)(v0 + 1048) = v71;
  *(void *)(v0 + 1040) = v69;
  uint64_t v74 = v0;
  uint64_t v75 = *(void *)(v0 + 312);
  uint64_t v76 = *(void *)(v74 + 296);
  uint64_t v77 = *(void *)(v74 + 304);
  sub_100055708(*(void *)(v74 + 288), v76, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v77) == 1)
  {
    uint64_t v78 = *(void *)(v74 + 1000);
    swift_release();
    swift_release();
    uint64_t v79 = *(void *)(v78 + 16);
    swift_bridgeObjectRelease();
    if (v79) {
      sub_100009944(*(unsigned char *)(v74 + 1244));
    }
    uint64_t v80 = *(void *)(v74 + 704);
    uint64_t v81 = *(void *)(v74 + 696);
    uint64_t v82 = *(void *)(v74 + 688);
    uint64_t v83 = *(void *)(v74 + 608);
    uint64_t v84 = *(void *)(v74 + 592);
    uint64_t v85 = *(void *)(v74 + 584);
    if (*(void *)(v74 + 984))
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
    }
    else
    {
      (*(void (**)(void, void))(v84 + 8))(*(void *)(v74 + 608), *(void *)(v74 + 584));
    }
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v86 = *(uint64_t (**)(void))(v74 + 8);
    return v86();
  }
  else
  {
    uint64_t v88 = *(void *)(v74 + 392);
    uint64_t v87 = *(void *)(v74 + 400);
    uint64_t v89 = *(void *)(v74 + 344);
    uint64_t v90 = *(void *)(v74 + 352);
    uint64_t v91 = *(void *)(*(void *)(v74 + 296) + *(int *)(*(void *)(v74 + 304) + 48));
    *(void *)(v74 + 1056) = v91;
    (*(void (**)(uint64_t))(v90 + 32))(v87);
    static Log.session.getter();
    uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
    *(void *)(v74 + 1064) = v92;
    *(void *)(v74 + 1072) = (v90 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v168 = v92;
    v92(v88, v87, v89);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v93 = Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v93, v94))
    {
      os_log_type_t loga = v94;
      uint64_t v153 = v93;
      unint64_t v155 = (uint64_t *)(v74 + 88);
      uint64_t v95 = swift_slowAlloc();
      *(void *)(v74 + 88) = swift_slowAlloc();
      uint64_t v157 = v95;
      *(_DWORD *)uint64_t v95 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      int v160 = (uint64_t *)(v74 + 112);
      swift_release();
      swift_release();
      uint64_t v96 = PhotosFaceType.description.getter();
      *(void *)(v74 + 96) = sub_100007E88(v96, v97, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v95 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v99 = *(void *)(v74 + 384);
      uint64_t v98 = *(void *)(v74 + 392);
      uint64_t v100 = v169[44];
      uint64_t v101 = v169[43];
      v168(v99, v98, v101);
      swift_release();
      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v102(v98, v101);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v103 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v105 = v104;
      uint64_t v149 = v102;
      v102(v99, v101);
      v169[13] = sub_100007E88(v103, v105, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v157 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v106 = v169[100];
      uint64_t v107 = v169[99];
      uint64_t v108 = v169[92];
      uint64_t v109 = v169[91];
      uint64_t v110 = v169[43];
      uint64_t v111 = (void *)swift_task_alloc();
      void *v111 = v110;
      v111[1] = v107;
      v111[2] = v109;
      v111[3] = v106;
      v111[4] = v108;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v112 = *(void *)(v91 + 16);
      if (v112)
      {
        uint64_t v113 = v169[59];
        v169[14] = _swiftEmptyArrayStorage;
        sub_100054958(0, v112, 0);
        uint64_t v114 = v91 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
        unint64_t v162 = *(void (**)(void, uint64_t, void))(v113 + 16);
        uint64_t v165 = *(void *)(v113 + 72);
        uint64_t v115 = v169;
        do
        {
          v162(v115[63], v114, v115[58]);
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v116 = v115[63];
          uint64_t v117 = v169[59];
          uint64_t v118 = v169[58];
          swift_getAtKeyPath();
          swift_release();
          uint64_t v119 = v169[2];
          uint64_t v120 = v169[3];
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
          uint64_t v115 = v169;
          uint64_t v121 = v169[14];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v121 + 16) + 1, 1);
            uint64_t v121 = *v160;
          }
          unint64_t v123 = *(void *)(v121 + 16);
          unint64_t v122 = *(void *)(v121 + 24);
          if (v123 >= v122 >> 1)
          {
            sub_100054958(v122 > 1, v123 + 1, 1);
            uint64_t v121 = *v160;
          }
          *(void *)(v121 + 16) = v123 + 1;
          uint64_t v124 = v121 + 16 * v123;
          *(void *)(v124 + 32) = v119;
          *(void *)(v124 + 40) = v120;
          v114 += v165;
          --v112;
        }
        while (v112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v115 = v169;
      }
      uint64_t v135 = v115[81];
      uint64_t v136 = v115[77];
      uint64_t v137 = Array.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      v115[16] = sub_100007E88(v137, v139, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v153, loga, "Inserting %s %s: %s", (uint8_t *)v157, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v140 = v135;
      uint64_t v133 = v158;
      v158(v140, v136);
      uint64_t v131 = v149;
    }
    else
    {
      uint64_t v125 = *(void *)(v74 + 648);
      uint64_t v126 = v169[77];
      uint64_t v127 = v169[49];
      uint64_t v128 = v169[44];
      uint64_t v129 = v169[43];
      swift_bridgeObjectRelease();
      uint64_t v130 = v127;
      uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
      v131(v130, v129);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v132 = v125;
      uint64_t v133 = v158;
      v158(v132, v126);
      uint64_t v115 = v169;
    }
    v115[136] = v133;
    v115[135] = v131;
    uint64_t v141 = (void *)swift_task_alloc();
    v115[137] = v141;
    void *v141 = v115;
    v141[1] = sub_10008F624;
    uint64_t v142 = v115[92];
    uint64_t v143 = v115[91];
    uint64_t v144 = v115[50];
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v144, v143, v142);
  }
}

uint64_t sub_10008D944()
{
  v0[23] = v0[120];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[121] = v1;
  uint64_t v2 = sub_100005CB0(&qword_1000F3DE8);
  uint64_t v3 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
  *uint64_t v1 = v0;
  v1[1] = sub_10008DA48;
  uint64_t v4 = v0[119];
  uint64_t v5 = v0[33];
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F3DE0, v4, v2, v5, v3);
}

uint64_t sub_10008DA48()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 976) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10008DCB8;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v3 = sub_10008DB88;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10008DB88()
{
  (*(void (**)(void, void))(v0 + 936))(*(void *)(v0 + 544), *(void *)(v0 + 464));
  uint64_t v1 = *(void *)(v0 + 944);
  *(void *)(v0 + 896) = *(void *)(v0 + 928);
  *(void *)(v0 + 888) = v1;
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = static CommunicationActor.shared.getter();
  *(void *)(v0 + 904) = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F3DD8, &qword_1000F3DB8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100089F58;
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 552);
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 40, v6, v4);
}

uint64_t sub_10008DCB8()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 784);
  uint64_t v2 = *(void *)(v0 + 776);
  return _swift_task_switch(sub_10008DD20, v2, v1);
}

uint64_t sub_10008DD20()
{
  uint64_t v174 = v0;
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 560);
  (*(void (**)(void, void))(v0 + 936))(*(void *)(v0 + 544), *(void *)(v0 + 464));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 976);
  *(void *)(v0 + 984) = v4;
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 736);
  uint64_t v8 = *(void *)(v0 + 728);
  uint64_t v9 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  uint64_t v10 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  *uint64_t v11 = v9;
  v11[1] = v6;
  void v11[2] = v8;
  v11[3] = v5;
  void v11[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000C9E5C(v13, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *((void *)v14 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 168) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void *)(v10 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v17, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v0 + 856))(*(void *)(v0 + 664), *(void *)(v0 + 616));
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(v0 + 800);
  uint64_t v21 = *(void *)(v0 + 792);
  uint64_t v22 = *(void *)(v0 + 736);
  uint64_t v23 = *(void *)(v0 + 728);
  uint64_t v24 = *(void *)(v0 + 344);
  uint64_t v25 = (void *)swift_task_alloc();
  *uint64_t v25 = v24;
  v25[1] = v21;
  v25[2] = v23;
  v25[3] = v20;
  v25[4] = v22;
  uint64_t v26 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v27 = sub_1000CBDF4((uint64_t)v14, v26);
  *(void *)(v0 + 1000) = v27;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v28, v29))
  {
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v60 = *(void *)(v0 + 656);
    uint64_t v61 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v59(v60, v61);
    goto LABEL_34;
  }
  os_log_type_t v150 = v29;
  log = v28;
  uint64_t v161 = v27;
  uint64_t v30 = swift_slowAlloc();
  uint64_t v172 = swift_slowAlloc();
  *(_DWORD *)uint64_t v30 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v31 = *(void *)(v27 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v32 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v32, v33, &v172);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v30 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v34 = *(void *)(v27 + 16);
  if (!v34)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v166 = *(void *)(v0 + 656);
    uint64_t v170 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v62 = *(void *)(v0 + 616);
    uint64_t v63 = Array.description.getter();
    char v64 = (uint8_t *)v30;
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v63, v66, &v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v150, "Received %ld %s: %s", v64, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v170(v166, v62);
LABEL_34:
    uint64_t v45 = *(void *)(v0 + 352);
    unint64_t v52 = *(void **)(v0 + 304);
    uint64_t v67 = *(void *)(v0 + 312);
    char v68 = *(unsigned char *)(v27 + 32);
    *(unsigned char *)(v0 + 1245) = v68;
    uint64_t v69 = -1;
    uint64_t v70 = -1 << v68;
    if (-(-1 << v68) < 64) {
      uint64_t v69 = ~(-1 << -(char)(-1 << v68));
    }
    unint64_t v71 = v69 & *(void *)(v27 + 64);
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v67 + 56);
    uint64_t v42 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v42;
    *(void *)(v0 + 1024) = v42;
    *(void *)(v0 + 1016) = v42;
    *(void *)(v0 + 1008) = v42;
    swift_bridgeObjectRetain();
    if (v71)
    {
      uint64_t v72 = 0;
      unint64_t v73 = __clz(__rbit64(v71));
      uint64_t v74 = (v71 - 1) & v71;
      uint64_t v49 = *(void **)(v0 + 1000);
LABEL_38:
      uint64_t v75 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v45 + 16))(v75, v49[6] + *(void *)(v45 + 72) * v73, *(void *)(v0 + 344));
      *(void *)(v75 + *((int *)v52 + 12)) = *(void *)(v49[7] + 8 * v73);
      (*v41)(v75, 0, 1, v52);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v54 = 63 - v70;
    if ((unint64_t)(63 - v70) <= 0x7F)
    {
      uint64_t v72 = 0;
      goto LABEL_44;
    }
    uint64_t v49 = *(void **)(v0 + 1000);
    unint64_t v76 = v49[9];
    if (v76)
    {
      uint64_t v72 = 1;
    }
    else
    {
      if (v54 < 0xC0)
      {
        uint64_t v72 = 1;
        goto LABEL_44;
      }
      unint64_t v76 = v49[10];
      if (v76)
      {
        uint64_t v72 = 2;
      }
      else
      {
        if (v54 < 0x100)
        {
          uint64_t v72 = 2;
          goto LABEL_44;
        }
        unint64_t v76 = v49[11];
        if (!v76) {
          goto LABEL_87;
        }
        uint64_t v72 = 3;
      }
    }
LABEL_42:
    uint64_t v74 = (v76 - 1) & v76;
    unint64_t v73 = __clz(__rbit64(v76)) + (v72 << 6);
    goto LABEL_38;
  }
  uint64_t v149 = v30;
  uint64_t v35 = *(void *)(v0 + 352);
  uint64_t v157 = *(void *)(v0 + 304);
  uint64_t v173 = _swiftEmptyArrayStorage;
  sub_100054958(0, v34, 0);
  uint64_t v36 = sub_1000C6DEC(v27);
  unint64_t v38 = v37;
  char v40 = v39 & 1;
  unint64_t v155 = (void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v27;
  int64_t v163 = v34 - 1;
  uint64_t v42 = (void (*)(void, void))v157;
  while (1)
  {
    uint64_t v44 = *(void *)(v0 + 336);
    uint64_t v43 = *(void *)(v0 + 344);
    uint64_t v45 = *(void *)(v0 + 320);
    uint64_t v46 = *(void *)(v0 + 328);
    uint64_t v47 = *(int *)(v157 + 48);
    unint64_t v165 = v38;
    uint64_t v169 = v36;
    uint64_t v48 = sub_1000C6EF4(v44, v36, v38, v40 & 1, (uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v44 + v47) = v48;
    (*v155)(v46, v44, v43);
    *(void *)(v46 + *(int *)(v157 + 48)) = v48;
    sub_100055708(v46, v45, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v44, &qword_1000F3DB0);
    uint64_t v49 = (void *)sub_1000B7804(v45, v0 + 152, (void (*)(void))&type metadata accessor for GalleryDatabase, &qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
    uint64_t v51 = v50;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    unint64_t v52 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v52[2] + 1, 1);
      unint64_t v52 = v173;
    }
    unint64_t v54 = v165;
    uint64_t v53 = v169;
    unint64_t v56 = v52[2];
    unint64_t v55 = v52[3];
    if (v56 >= v55 >> 1)
    {
      sub_100054958(v55 > 1, v56 + 1, 1);
      unint64_t v54 = v165;
      uint64_t v53 = v169;
      unint64_t v52 = v173;
    }
    uint64_t v52[2] = v56 + 1;
    uint64_t v57 = &v52[2 * v56];
    v57[4] = v49;
    v57[5] = v51;
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v161;
    if (v53 < 0 || v53 >= -(-1 << *(unsigned char *)(v161 + 32))) {
      break;
    }
    if (((*(void *)(v161 + 64 + (((unint64_t)v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
      goto LABEL_85;
    }
    if (*(_DWORD *)(v161 + 36) != v54) {
      goto LABEL_86;
    }
    uint64_t v58 = _HashTable.occupiedBucket(after:)();
    if (!v163)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v27 = v161;
      uint64_t v30 = v149;
      goto LABEL_33;
    }
    uint64_t v36 = v58;
    char v40 = 0;
    unint64_t v38 = *(unsigned int *)(v161 + 36);
    --v163;
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  if (v54 < 0x140)
  {
    uint64_t v72 = 3;
  }
  else
  {
    unint64_t v76 = v49[12];
    if (v76)
    {
      uint64_t v72 = 4;
      goto LABEL_42;
    }
    uint64_t v145 = 0;
    uint64_t v146 = v54 >> 6;
    uint64_t v147 = 5;
    if (v146 > 5) {
      uint64_t v147 = v146;
    }
    uint64_t v148 = v147 - 5;
    while (v148 != v145)
    {
      unint64_t v76 = v49[v145++ + 13];
      if (v76)
      {
        uint64_t v72 = v145 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v72 = v146 - 1;
  }
LABEL_44:
  (*v41)(*(void *)(v0 + 288), 1, 1, v52);
  uint64_t v74 = 0;
LABEL_45:
  *(void *)(v0 + 1048) = v74;
  *(void *)(v0 + 1040) = v72;
  uint64_t v77 = *(void *)(v0 + 304);
  uint64_t v78 = *(void *)(v0 + 312);
  uint64_t v79 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v79, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77) == 1)
  {
    uint64_t v80 = *(void *)(v0 + 1000);
    swift_release();
    swift_release();
    uint64_t v81 = *(void *)(v80 + 16);
    swift_bridgeObjectRelease();
    if (v81) {
      sub_100009944(*(unsigned char *)(v0 + 1244));
    }
    uint64_t v82 = *(void *)(v0 + 704);
    uint64_t v83 = *(void *)(v0 + 696);
    uint64_t v84 = *(void *)(v0 + 688);
    uint64_t v85 = *(void *)(v0 + 608);
    uint64_t v86 = *(void *)(v0 + 592);
    uint64_t v87 = *(void *)(v0 + 584);
    if (*(void *)(v0 + 984))
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    }
    else
    {
      (*(void (**)(void, void))(v86 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
    }
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v88 = *(uint64_t (**)(void))(v0 + 8);
    return v88();
  }
  else
  {
    int v160 = v42;
    uint64_t v90 = *(void *)(v0 + 392);
    uint64_t v89 = *(void *)(v0 + 400);
    uint64_t v91 = *(void *)(v0 + 344);
    uint64_t v92 = *(void *)(v0 + 352);
    uint64_t v93 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v93;
    (*(void (**)(uint64_t))(v92 + 32))(v89);
    static Log.session.getter();
    os_log_type_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
    *(void *)(v0 + 1064) = v94;
    *(void *)(v0 + 1072) = (v92 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v94(v90, v89, v91);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v167 = v94;
      os_log_type_t v153 = v96;
      uint64_t v156 = v93;
      uint64_t v158 = (uint64_t *)(v0 + 88);
      uint64_t v97 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      uint64_t v159 = v97;
      *(_DWORD *)uint64_t v97 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v154 = v95;
      unint64_t v162 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v98 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v98, v99, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v97 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v101 = *(void *)(v0 + 384);
      uint64_t v100 = *(void *)(v0 + 392);
      uint64_t v103 = *(void *)(v0 + 344);
      uint64_t v102 = *(void *)(v0 + 352);
      v167(v101, v100, v103);
      swift_release();
      unint64_t v104 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v104(v100, v103);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v107 = v106;
      uint64_t v151 = v104;
      v104(v101, v103);
      *(void *)(v0 + 104) = sub_100007E88(v105, v107, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v159 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v108 = *(void *)(v0 + 800);
      uint64_t v109 = *(void *)(v0 + 792);
      uint64_t v110 = *(void *)(v0 + 736);
      uint64_t v111 = *(void *)(v0 + 728);
      uint64_t v112 = *(void *)(v0 + 344);
      uint64_t v113 = (void *)swift_task_alloc();
      *uint64_t v113 = v112;
      v113[1] = v109;
      v113[2] = v111;
      v113[3] = v108;
      v113[4] = v110;
      uint64_t v114 = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v115 = *(void *)(v156 + 16);
      if (v115)
      {
        uint64_t v116 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v115, 0);
        uint64_t v117 = v156 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
        uint64_t v164 = *(void (**)(void, uint64_t, void))(v116 + 16);
        uint64_t v168 = *(void *)(v116 + 72);
        do
        {
          v164(*(void *)(v0 + 504), v117, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v118 = *(void *)(v0 + 504);
          uint64_t v119 = *(void *)(v0 + 464);
          uint64_t v120 = *(void *)(v0 + 472);
          uint64_t v121 = v114;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v123 = *(void *)(v0 + 16);
          uint64_t v122 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v119);
          uint64_t v124 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v124 + 16) + 1, 1);
            uint64_t v124 = *v162;
          }
          unint64_t v126 = *(void *)(v124 + 16);
          unint64_t v125 = *(void *)(v124 + 24);
          if (v126 >= v125 >> 1)
          {
            sub_100054958(v125 > 1, v126 + 1, 1);
            uint64_t v124 = *v162;
          }
          *(void *)(v124 + 16) = v126 + 1;
          uint64_t v127 = v124 + 16 * v126;
          *(void *)(v127 + 32) = v123;
          *(void *)(v127 + 40) = v122;
          v117 += v168;
          --v115;
          uint64_t v114 = v121;
        }
        while (v115);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v135 = *(void *)(v0 + 648);
      uint64_t v136 = *(void *)(v0 + 616);
      uint64_t v137 = Array.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v137, v139, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v154, v153, "Inserting %s %s: %s", (uint8_t *)v159, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v140 = v135;
      uint64_t v133 = v160;
      v160(v140, v136);
      uint64_t v132 = v151;
    }
    else
    {
      uint64_t v171 = *(void *)(v0 + 648);
      uint64_t v128 = *(void *)(v0 + 616);
      uint64_t v129 = *(void *)(v0 + 392);
      uint64_t v130 = *(void *)(v0 + 344);
      uint64_t v131 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
      v132(v129, v130);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v133 = v160;
      v160(v171, v128);
    }
    *(void *)(v0 + 1088) = v133;
    *(void *)(v0 + 1080) = v132;
    uint64_t v141 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v141;
    void *v141 = v0;
    v141[1] = sub_10008F624;
    uint64_t v142 = *(void *)(v0 + 736);
    uint64_t v143 = *(void *)(v0 + 728);
    uint64_t v144 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v144, v143, v142);
  }
}

uint64_t sub_10008F624()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_100090C58;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_10008F748;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10008F748()
{
  uint64_t v1 = *(void *)(v0 + 1056);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 1112) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 472);
    uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 1240) = v6;
    *(void *)(v0 + 1120) = *(void *)(v4 + 56);
    *(void *)(v0 + 1128) = v5;
    unint64_t v139 = *(void (**)(void, void))(v0 + 1024);
    uint64_t v141 = *(uint64_t **)(v0 + 1080);
    *(void *)(v0 + 1136) = 0;
    uint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
    uint64_t v8 = *(void *)(v0 + 488);
    unint64_t v7 = *(void *)(v0 + 496);
    uint64_t v151 = *(void *)(v0 + 480);
    uint64_t v9 = *(void *)(v0 + 400);
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v11 = *(void *)(v0 + 344);
    v5(v7, v1 + ((v6 + 32) & ~(unint64_t)v6), v3);
    static Log.photos.getter();
    v5(v8, v7, v3);
    v145(v10, v9, v11);
    v5(v151, v7, v3);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v142 = v13;
      uint64_t v146 = v12;
      uint64_t v148 = (uint64_t *)(v0 + 56);
      uint64_t v14 = swift_slowAlloc();
      *(void *)(v0 + 56) = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *(void *)(v0 + 488);
      uint64_t v17 = *(void *)(v0 + 464);
      uint64_t v16 = *(void *)(v0 + 472);
      uint64_t v18 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v137(v15, v17);
      *(void *)(v0 + 64) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
      uint64_t v20 = *(void *)(v0 + 448);
      uint64_t v22 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 424);
      uint64_t v23 = *(void *)(v0 + 376);
      uint64_t v24 = *(void *)(v0 + 344);
      dispatch thunk of PhotosFaceID.id.getter();
      swift_release();
      v19(v23, v24);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      *(void *)(v0 + 72) = sub_100007E88(v25, v27, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
      uint64_t v132 = *(void *)(v0 + 640);
      uint64_t v28 = *(void *)(v0 + 616);
      uint64_t v29 = *(void *)(v0 + 480);
      uint64_t v30 = *(void *)(v0 + 464);
      SyncedPhotosFace.photos.getter();
      swift_release();
      uint64_t v31 = v137;
      v137(v29, v30);
      uint64_t v32 = Array.description.getter();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_100007E88(v32, v34, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v146, v142, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v135(v132, v28);
      uint64_t v35 = *(uint64_t **)(v0 + 1080);
      uint64_t v36 = *(void (**)(void, void))(v0 + 1016);
    }
    else
    {
      uint64_t v149 = *(void *)(v0 + 616);
      uint64_t v152 = *(void *)(v0 + 640);
      uint64_t v51 = *(void *)(v0 + 488);
      uint64_t v52 = *(void *)(v0 + 464);
      uint64_t v53 = *(void *)(v0 + 376);
      uint64_t v54 = *(void *)(v0 + 344);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v31(*(void *)(v0 + 480), v52);
      ((void (*)(uint64_t, uint64_t))v141)(v53, v54);
      uint64_t v35 = v141;
      v31(v51, v52);

      uint64_t v36 = v139;
      v139(v152, v149);
    }
    *(void *)(v0 + 1160) = v35;
    *(void *)(v0 + 1152) = v36;
    *(void *)(v0 + 1144) = v31;
    uint64_t v55 = SyncedPhotosFace.photos.getter();
    *(void *)(v0 + 1168) = v55;
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v56 = SyncedPhotosFace.day.getter();
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 1176) = v57;
    void *v57 = v0;
    v57[1] = sub_100091ECC;
    uint64_t v58 = *(void *)(v0 + 736);
    uint64_t v59 = *(void *)(v0 + 728);
    uint64_t v60 = *(void *)(v0 + 440);
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v55, v60, v56, v59, v58);
  }
  swift_bridgeObjectRelease();
  unint64_t v37 = *(void (**)(void, void))(v0 + 1088);
  unint64_t v38 = *(void (**)(void, void))(v0 + 1032);
  uint64_t v39 = *(void *)(v0 + 1024);
  uint64_t v40 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
  unint64_t v43 = *(void *)(v0 + 1048);
  int64_t v44 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = v38;
  *(void *)(v0 + 1024) = v39;
  uint64_t v140 = v38;
  if (v43)
  {
    uint64_t v45 = (v43 - 1) & v43;
    unint64_t v46 = __clz(__rbit64(v43)) | (v44 << 6);
    uint64_t v47 = *(void *)(v0 + 1000);
LABEL_12:
    uint64_t v48 = *(void *)(v0 + 304);
    uint64_t v49 = *(void *)(v0 + 312);
    uint64_t v50 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v50, *(void *)(v47 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v46, *(void *)(v0 + 344));
    *(void *)(v50 + *(int *)(v48 + 48)) = *(void *)(*(void *)(v47 + 56) + 8 * v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  int64_t v61 = v44 + 1;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  int64_t v62 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v61 < v62)
  {
    uint64_t v47 = *(void *)(v0 + 1000);
    uint64_t v63 = v47 + 64;
    unint64_t v64 = *(void *)(v47 + 64 + 8 * v61);
    if (v64)
    {
LABEL_20:
      uint64_t v45 = (v64 - 1) & v64;
      unint64_t v46 = __clz(__rbit64(v64)) + (v61 << 6);
      int64_t v44 = v61;
      goto LABEL_12;
    }
    int64_t v65 = v44 + 2;
    ++v44;
    if (v61 + 1 < v62)
    {
      unint64_t v64 = *(void *)(v63 + 8 * v65);
      if (v64)
      {
LABEL_23:
        int64_t v61 = v65;
        goto LABEL_20;
      }
      int64_t v44 = v61 + 1;
      if (v61 + 2 < v62)
      {
        unint64_t v64 = *(void *)(v63 + 8 * (v61 + 2));
        if (v64)
        {
          v61 += 2;
          goto LABEL_20;
        }
        int64_t v65 = v61 + 3;
        int64_t v44 = v61 + 2;
        if (v61 + 3 < v62)
        {
          unint64_t v64 = *(void *)(v63 + 8 * v65);
          if (v64) {
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v61 = v65 + 1;
            if (__OFADD__(v65, 1)) {
              break;
            }
            if (v61 >= v62)
            {
              int64_t v44 = v62 - 1;
              goto LABEL_34;
            }
            unint64_t v64 = *(void *)(v63 + 8 * v61);
            ++v65;
            if (v64) {
              goto LABEL_20;
            }
          }
LABEL_68:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
        }
      }
    }
  }
LABEL_34:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v45 = 0;
LABEL_35:
  *(void *)(v0 + 1048) = v45;
  *(void *)(v0 + 1040) = v44;
  uint64_t v66 = *(void *)(v0 + 304);
  uint64_t v67 = *(void *)(v0 + 312);
  uint64_t v68 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v68, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v66) != 1)
  {
    os_log_type_t v153 = v37;
    uint64_t v144 = (uint64_t *)(v0 + 88);
    uint64_t v79 = *(void *)(v0 + 392);
    uint64_t v78 = *(void *)(v0 + 400);
    uint64_t v80 = *(void *)(v0 + 344);
    uint64_t v81 = *(void *)(v0 + 352);
    uint64_t v82 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v82;
    (*(void (**)(uint64_t))(v81 + 32))(v78);
    static Log.session.getter();
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
    *(void *)(v0 + 1064) = v83;
    *(void *)(v0 + 1072) = (v81 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v83(v79, v78, v80);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      os_log_type_t v150 = v83;
      os_log_type_t v133 = v85;
      uint64_t v136 = v82;
      log = v84;
      uint64_t v86 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      uint64_t v138 = v86;
      *(_DWORD *)uint64_t v86 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v143 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v87 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v87, v88, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v86 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = *(void *)(v0 + 384);
      uint64_t v89 = *(void *)(v0 + 392);
      uint64_t v91 = *(void *)(v0 + 344);
      uint64_t v92 = *(void *)(v0 + 352);
      v150(v90, v89, v91);
      swift_release();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v93(v89, v91);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v96 = v95;
      uint64_t v131 = v93;
      v93(v90, v91);
      uint64_t v97 = (uint64_t *)(v0 + 88);
      *(void *)(v0 + 104) = sub_100007E88(v94, v96, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v98 = *(void *)(v0 + 800);
      uint64_t v99 = *(void *)(v0 + 792);
      uint64_t v100 = *(void *)(v0 + 736);
      uint64_t v101 = *(void *)(v0 + 728);
      uint64_t v102 = *(void *)(v0 + 344);
      uint64_t v103 = (void *)swift_task_alloc();
      *uint64_t v103 = v102;
      v103[1] = v99;
      v103[2] = v101;
      v103[3] = v98;
      v103[4] = v100;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v104 = *(void *)(v136 + 16);
      if (v104)
      {
        uint64_t v105 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = &_swiftEmptyArrayStorage;
        sub_100054958(0, v104, 0);
        uint64_t v106 = v136 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
        uint64_t v147 = *(void *)(v105 + 72);
        unint64_t v107 = *(void (**)(void, uint64_t, void))(v105 + 16);
        do
        {
          v107(*(void *)(v0 + 504), v106, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v108 = *(void *)(v0 + 504);
          uint64_t v110 = *(void *)(v0 + 464);
          uint64_t v109 = *(void *)(v0 + 472);
          swift_getAtKeyPath();
          swift_release();
          uint64_t v112 = *(void *)(v0 + 16);
          uint64_t v111 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
          uint64_t v113 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v113 + 16) + 1, 1);
            uint64_t v113 = *v143;
          }
          unint64_t v115 = *(void *)(v113 + 16);
          unint64_t v114 = *(void *)(v113 + 24);
          if (v115 >= v114 >> 1)
          {
            sub_100054958(v114 > 1, v115 + 1, 1);
            uint64_t v113 = *v143;
          }
          *(void *)(v113 + 16) = v115 + 1;
          uint64_t v116 = v113 + 16 * v115;
          *(void *)(v116 + 32) = v112;
          *(void *)(v116 + 40) = v111;
          v106 += v147;
          --v104;
        }
        while (v104);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v97 = (uint64_t *)(v0 + 88);
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v125 = *(void *)(v0 + 616);
      uint64_t v154 = *(void *)(v0 + 648);
      uint64_t v126 = Array.description.getter();
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v126, v128, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v133, "Inserting %s %s: %s", (uint8_t *)v138, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v124 = v140;
      v140(v154, v125);
      uint64_t v123 = v131;
    }
    else
    {
      uint64_t v117 = *(void *)(v0 + 648);
      uint64_t v118 = *(void *)(v0 + 616);
      uint64_t v119 = *(void *)(v0 + 392);
      uint64_t v120 = *(void *)(v0 + 344);
      uint64_t v121 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v122 = v119;
      uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      v123(v122, v120);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v124 = v153;
      v153(v117, v118);
    }
    *(void *)(v0 + 1088) = v124;
    *(void *)(v0 + 1080) = v123;
    uint64_t v129 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v129;
    *uint64_t v129 = v0;
    v129[1] = sub_10008F624;
    uint64_t v42 = *(void *)(v0 + 736);
    uint64_t v41 = *(void *)(v0 + 728);
    uint64_t v40 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
  }
  uint64_t v69 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v70 = *(void *)(v69 + 16);
  swift_bridgeObjectRelease();
  if (v70) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v71 = *(void *)(v0 + 704);
  uint64_t v72 = *(void *)(v0 + 696);
  uint64_t v73 = *(void *)(v0 + 688);
  uint64_t v74 = *(void *)(v0 + 608);
  uint64_t v75 = *(void *)(v0 + 592);
  uint64_t v76 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
  }
  else
  {
    (*(void (**)(void, void))(v75 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = *(uint64_t (**)(void))(v0 + 8);
  return v77();
}

uint64_t sub_100090C58()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    unint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *unint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      unint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = &_swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    int64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_10008F624;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_100091ECC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[55];
    uint64_t v4 = v2[52];
    uint64_t v5 = v2[53];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_100093584;
  }
  else
  {
    (*(void (**)(void, void))(v2[53] + 8))(v2[55], v2[52]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_100092060;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_100092060()
{
  uint64_t v1 = *(void *)(v0 + 1112);
  uint64_t v2 = *(void *)(v0 + 1136) + 1;
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void (**)(void, void))(v0 + 1152);
    uint64_t v4 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    unint64_t v7 = *(void *)(v0 + 1048);
    int64_t v8 = *(void *)(v0 + 1040);
    *(void *)(v0 + 1032) = v3;
    *(void *)(v0 + 1024) = v3;
    if (v7)
    {
      uint64_t v9 = (v7 - 1) & v7;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      uint64_t v11 = *(void *)(v0 + 1000);
LABEL_4:
      uint64_t v12 = *(void *)(v0 + 304);
      uint64_t v13 = *(void *)(v0 + 312);
      uint64_t v14 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v14, *(void *)(v11 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v10, *(void *)(v0 + 344));
      *(void *)(v14 + *(int *)(v12 + 48)) = *(void *)(*(void *)(v11 + 56) + 8 * v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
      swift_bridgeObjectRetain();
LABEL_35:
      *(void *)(v0 + 1048) = v9;
      *(void *)(v0 + 1040) = v8;
      uint64_t v63 = *(void *)(v0 + 304);
      uint64_t v64 = *(void *)(v0 + 312);
      uint64_t v65 = *(void *)(v0 + 296);
      sub_100055708(*(void *)(v0 + 288), v65, &qword_1000F3DA8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v65, 1, v63) == 1)
      {
        uint64_t v66 = *(void *)(v0 + 1000);
        swift_release();
        swift_release();
        uint64_t v67 = *(void *)(v66 + 16);
        swift_bridgeObjectRelease();
        if (v67) {
          sub_100009944(*(unsigned char *)(v0 + 1244));
        }
        uint64_t v68 = *(void *)(v0 + 704);
        uint64_t v69 = *(void *)(v0 + 696);
        uint64_t v70 = *(void *)(v0 + 688);
        uint64_t v71 = *(void *)(v0 + 608);
        uint64_t v72 = *(void *)(v0 + 592);
        uint64_t v73 = *(void *)(v0 + 584);
        if (*(void *)(v0 + 984))
        {
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        }
        else
        {
          (*(void (**)(void, void))(v72 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
        }
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
        return v74();
      }
      uint64_t v137 = v3;
      uint64_t v138 = (uint64_t *)(v0 + 88);
      uint64_t v76 = *(void *)(v0 + 392);
      uint64_t v75 = *(void *)(v0 + 400);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = *(void *)(v0 + 352);
      uint64_t v79 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v79;
      (*(void (**)(uint64_t))(v78 + 32))(v75);
      static Log.session.getter();
      int64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
      *(void *)(v0 + 1064) = v80;
      *(void *)(v0 + 1072) = (v78 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v80(v76, v75, v77);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        os_log_type_t v130 = v82;
        uint64_t v133 = v79;
        log = v81;
        uint64_t v83 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v135 = v83;
        *(_DWORD *)uint64_t v83 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v141 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v84 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v84, v85, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v83 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v87 = *(void *)(v0 + 384);
        uint64_t v86 = *(void *)(v0 + 392);
        uint64_t v88 = *(void *)(v0 + 344);
        uint64_t v89 = *(void *)(v0 + 352);
        v80(v87, v86, v88);
        swift_release();
        unint64_t v90 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
        v90(v86, v88);
        sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v93 = v92;
        unint64_t v128 = v90;
        v90(v87, v88);
        *(void *)(v0 + 104) = sub_100007E88(v91, v93, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v94 = *(void *)(v0 + 800);
        uint64_t v95 = *(void *)(v0 + 792);
        uint64_t v96 = *(void *)(v0 + 736);
        uint64_t v97 = *(void *)(v0 + 728);
        uint64_t v98 = *(void *)(v0 + 344);
        uint64_t v99 = (void *)swift_task_alloc();
        void *v99 = v98;
        v99[1] = v95;
        v99[2] = v97;
        v99[3] = v94;
        v99[4] = v96;
        swift_getKeyPath();
        swift_task_dealloc();
        int64_t v100 = *(void *)(v133 + 16);
        if (v100)
        {
          uint64_t v101 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = &_swiftEmptyArrayStorage;
          sub_100054958(0, v100, 0);
          uint64_t v102 = v133 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
          uint64_t v144 = *(void *)(v101 + 72);
          unint64_t v103 = *(void (**)(void, uint64_t, void))(v101 + 16);
          do
          {
            v103(*(void *)(v0 + 504), v102, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v104 = *(void *)(v0 + 504);
            uint64_t v105 = *(void *)(v0 + 464);
            uint64_t v106 = *(void *)(v0 + 472);
            swift_getAtKeyPath();
            swift_release();
            uint64_t v108 = *(void *)(v0 + 16);
            uint64_t v107 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
            uint64_t v109 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v109 + 16) + 1, 1);
              uint64_t v109 = *v141;
            }
            unint64_t v111 = *(void *)(v109 + 16);
            unint64_t v110 = *(void *)(v109 + 24);
            if (v111 >= v110 >> 1)
            {
              sub_100054958(v110 > 1, v111 + 1, 1);
              uint64_t v109 = *v141;
            }
            *(void *)(v109 + 16) = v111 + 1;
            uint64_t v112 = v109 + 16 * v111;
            *(void *)(v112 + 32) = v108;
            *(void *)(v112 + 40) = v107;
            v102 += v144;
            --v100;
          }
          while (v100);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v149 = *(void *)(v0 + 648);
        uint64_t v122 = *(void *)(v0 + 616);
        uint64_t v123 = Array.description.getter();
        unint64_t v125 = v124;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v123, v125, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v130, "Inserting %s %s: %s", (uint8_t *)v135, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v121 = v137;
        v137(v149, v122);
        uint64_t v119 = v128;
      }
      else
      {
        uint64_t v113 = *(void *)(v0 + 648);
        uint64_t v114 = *(void *)(v0 + 616);
        uint64_t v115 = *(void *)(v0 + 392);
        uint64_t v116 = *(void *)(v0 + 344);
        uint64_t v117 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v118 = v115;
        uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
        v119(v118, v116);
        swift_release_n();
        swift_bridgeObjectRelease();

        uint64_t v120 = v113;
        uint64_t v121 = v137;
        v137(v120, v114);
      }
      *(void *)(v0 + 1088) = v121;
      *(void *)(v0 + 1080) = v119;
      uint64_t v126 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v126;
      void *v126 = v0;
      v126[1] = sub_10008F624;
      uint64_t v6 = *(void *)(v0 + 736);
      uint64_t v5 = *(void *)(v0 + 728);
      uint64_t v4 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
    }
    int64_t v58 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v59 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
      if (v58 >= v59) {
        goto LABEL_34;
      }
      uint64_t v11 = *(void *)(v0 + 1000);
      uint64_t v60 = v11 + 64;
      unint64_t v61 = *(void *)(v11 + 64 + 8 * v58);
      if (v61)
      {
LABEL_20:
        uint64_t v9 = (v61 - 1) & v61;
        unint64_t v10 = __clz(__rbit64(v61)) + (v58 << 6);
        int64_t v8 = v58;
        goto LABEL_4;
      }
      int64_t v62 = v8 + 2;
      ++v8;
      if (v58 + 1 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61)
      {
LABEL_23:
        int64_t v58 = v62;
        goto LABEL_20;
      }
      int64_t v8 = v58 + 1;
      if (v58 + 2 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * (v58 + 2));
      if (v61)
      {
        v58 += 2;
        goto LABEL_20;
      }
      int64_t v62 = v58 + 3;
      int64_t v8 = v58 + 2;
      if (v58 + 3 >= v59)
      {
LABEL_34:
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
        uint64_t v9 = 0;
        goto LABEL_35;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61) {
        goto LABEL_23;
      }
      while (1)
      {
        int64_t v58 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          break;
        }
        if (v58 >= v59)
        {
          int64_t v8 = v59 - 1;
          goto LABEL_34;
        }
        unint64_t v61 = *(void *)(v60 + 8 * v58);
        ++v62;
        if (v61) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
  }
  unint64_t v139 = *(uint64_t **)(v0 + 1160);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v15 = *(void *)(v0 + 1136) + 1;
  *(void *)(v0 + 1136) = v15;
  uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1128);
  uint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v18 = *(void *)(v0 + 488);
  unint64_t v17 = *(void *)(v0 + 496);
  uint64_t v142 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 464);
  uint64_t v20 = *(void *)(v0 + 400);
  uint64_t v21 = *(void *)(v0 + 376);
  uint64_t v22 = *(void *)(v0 + 344);
  v16(v17, *(void *)(v0 + 1056)+ ((*(unsigned __int8 *)(v0 + 1240) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1240))+ *(void *)(v0 + 1120) * v15, v19);
  static Log.photos.getter();
  v16(v18, v17, v19);
  v145(v21, v20, v22);
  v16(v142, v17, v19);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v23, v24))
  {
    os_log_type_t v140 = v24;
    uint64_t v143 = v23;
    uint64_t v146 = (uint64_t *)(v0 + 56);
    uint64_t v25 = swift_slowAlloc();
    *(void *)(v0 + 56) = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = *(void *)(v0 + 488);
    uint64_t v28 = *(void *)(v0 + 464);
    uint64_t v27 = *(void *)(v0 + 472);
    uint64_t v29 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v134(v26, v28);
    *(void *)(v0 + 64) = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v31 = *(void *)(v0 + 448);
    uint64_t v33 = *(void *)(v0 + 416);
    uint64_t v32 = *(void *)(v0 + 424);
    uint64_t v34 = *(void *)(v0 + 376);
    uint64_t v35 = *(void *)(v0 + 344);
    dispatch thunk of PhotosFaceID.id.getter();
    swift_release();
    v30(v34, v35);
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v38 = v37;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    *(void *)(v0 + 72) = sub_100007E88(v36, v38, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
    uint64_t v129 = *(void *)(v0 + 640);
    uint64_t v39 = *(void *)(v0 + 616);
    uint64_t v40 = *(void *)(v0 + 480);
    uint64_t v41 = *(void *)(v0 + 464);
    SyncedPhotosFace.photos.getter();
    swift_release();
    uint64_t v42 = v134;
    v134(v40, v41);
    uint64_t v43 = Array.description.getter();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_100007E88(v43, v45, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v143, v140, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v132(v129, v39);
    uint64_t v46 = *(uint64_t **)(v0 + 1080);
    uint64_t v47 = *(void (**)(void, void))(v0 + 1016);
  }
  else
  {
    uint64_t v147 = *(void *)(v0 + 616);
    uint64_t v148 = *(void *)(v0 + 640);
    uint64_t v48 = *(void *)(v0 + 488);
    uint64_t v49 = *(void *)(v0 + 464);
    uint64_t v50 = *(void *)(v0 + 376);
    uint64_t v51 = *(void *)(v0 + 344);
    uint64_t v42 = *(void (**)(void, uint64_t))(*(void *)(v0 + 472) + 8);
    v42(*(void *)(v0 + 480), v49);
    ((void (*)(uint64_t, uint64_t))v139)(v50, v51);
    uint64_t v46 = v139;
    v42(v48, v49);

    v136(v148, v147);
    uint64_t v47 = v136;
  }
  *(void *)(v0 + 1160) = v46;
  *(void *)(v0 + 1152) = v47;
  *(void *)(v0 + 1144) = v42;
  uint64_t v52 = SyncedPhotosFace.photos.getter();
  *(void *)(v0 + 1168) = v52;
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v53 = SyncedPhotosFace.day.getter();
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1176) = v54;
  *uint64_t v54 = v0;
  v54[1] = sub_100091ECC;
  uint64_t v55 = *(void *)(v0 + 736);
  uint64_t v56 = *(void *)(v0 + 728);
  uint64_t v57 = *(void *)(v0 + 440);
  return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v52, v57, v53, v56, v55);
}

uint64_t sub_100093584()
{
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    unint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *uint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    int64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      uint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      unint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = &_swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    uint64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_10008F624;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_100094814()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000948B8;
  uint64_t v2 = *(void *)(v0 + 840);
  return PhotosFaceDatabase.timePositions(for:)(v2);
}

uint64_t sub_1000948B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100094FBC;
  }
  else
  {
    *(void *)(v4 + 1208) = a1;
    uint64_t v5 = sub_1000949E0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000949E0()
{
  uint64_t v1 = v0[150];
  uint64_t v2 = sub_1000C9738(v0[151], (uint64_t (*)(void, void, void))sub_1000C9278, v0[102]);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100081278((uint64_t)v2);
  v0[152] = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100062D78(v4);
  swift_bridgeObjectRelease();
  os_log_type_t v6 = sub_10005F794((uint64_t)v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[153] = sub_10005F660((uint64_t)v6);
  swift_release();
  uint64_t v7 = v0[98];
  uint64_t v8 = v0[97];
  return _swift_task_switch(sub_100094AF4, v8, v7);
}

uint64_t sub_100094AF4()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 1224);
  *(void *)(v0 + 848) = *(void *)(v0 + 1216);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100062D78(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
  static Log.session.getter();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v23 = v4;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v6 = PhotosFaceType.description.getter();
    *(void *)(v0 + 232) = sub_100007E88(v6, v7, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 240) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 680);
    uint64_t v10 = *(void *)(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 616);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = Set.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = sub_100007E88(v12, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v23, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 680);
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 616);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  *(void *)(v0 + 856) = v15;
  uint64_t v19 = *(void *)(v0 + 256);
  *(void *)(v0 + 864) = *(void *)(v19 + 96);
  *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v19 + 16);
  *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
  uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100089D24, v21, v20);
}

uint64_t sub_100094FBC()
{
  swift_bridgeObjectRelease();
  v0[154] = v0[150];
  uint64_t v1 = v0[98];
  uint64_t v2 = v0[97];
  return _swift_task_switch(sub_1000CDEC4, v2, v1);
}

uint64_t sub_10009502C()
{
  v1[32] = v0;
  uint64_t v2 = type metadata accessor for StoredPhoto();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  sub_100005CB0(&qword_1000F3DA8);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v3 = sub_100005CB0(&qword_1000F3DB0);
  v1[38] = v3;
  v1[39] = *(void *)(v3 - 8);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for ShuffleID();
  v1[43] = v4;
  v1[44] = *(void *)(v4 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v1[52] = v5;
  v1[53] = *(void *)(v5 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0(&qword_1000F2E30);
  v1[58] = v6;
  v1[59] = *(void *)(v6 - 8);
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2E58);
  v1[69] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F3DB8);
  v1[70] = v7;
  v1[71] = *(void *)(v7 - 8);
  v1[72] = swift_task_alloc();
  uint64_t v8 = sub_100005CB0(&qword_1000F3DC0);
  v1[73] = v8;
  v1[74] = *(void *)(v8 - 8);
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v1[77] = v9;
  v1[78] = *(void *)(v9 - 8);
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  v1[81] = swift_task_alloc();
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SyncFacesRequest();
  v1[86] = v10;
  v1[87] = *(void *)(v10 - 8);
  v1[88] = swift_task_alloc();
  v1[89] = type metadata accessor for CommunicationActor();
  v1[90] = static CommunicationActor.shared.getter();
  uint64_t v11 = type metadata accessor for ShuffleDatabase();
  v1[91] = v11;
  uint64_t v12 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  v1[92] = v12;
  unint64_t v13 = (void *)swift_task_alloc();
  v1[93] = v13;
  *unint64_t v13 = v1;
  v13[1] = sub_100095648;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v11, v12);
}

uint64_t sub_100095648(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 752) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000CDECC;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v4[95] = a1;
    v4[96] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    v4[97] = v11;
    v4[98] = v12;
    uint64_t v8 = sub_100095848;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_100095848()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 760);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = (void *)swift_task_alloc();
  *uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for ShuffleProvider();
  *(void *)(v0 + 792) = v7;
  v6[1] = v7;
  v6[2] = v4;
  uint64_t v8 = sub_1000CD730(&qword_1000F3DC8, (void (*)(uint64_t))type metadata accessor for ShuffleProvider);
  *(void *)(v0 + 800) = v8;
  v6[3] = v8;
  v6[4] = v3;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v10 = sub_1000C9280(v1, KeyPath, v0 + 120, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
  *(void *)(v0 + 808) = v10;
  swift_release_n();
  swift_bridgeObjectRelease();
  if (v10[2]) {
    goto LABEL_8;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v11 = PhotosFaceType.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == PhotosFaceType.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_8:
    if (static TestProperties.ignoreSyncCache.getter())
    {
      *(void *)(v0 + 848) = v2;
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_100062D78(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
      static Log.session.getter();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v41 = v18;
        uint64_t v19 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v20 = PhotosFaceType.description.getter();
        *(void *)(v0 + 232) = sub_100007E88(v20, v21, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v19 + 12) = 2048;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v22 = _swiftEmptyArrayStorage[2];
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v42 = *(void *)(v0 + 680);
        uint64_t v23 = *(void *)(v0 + 624);
        uint64_t v24 = *(void *)(v0 + 616);
        swift_bridgeObjectRetain();
        swift_release();
        sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v25 = Set.description.getter();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 248) = sub_100007E88(v25, v27, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v41, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v28(v42, v24);
      }
      else
      {
        uint64_t v32 = *(void *)(v0 + 680);
        uint64_t v33 = *(void *)(v0 + 624);
        uint64_t v34 = *(void *)(v0 + 616);
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v28(v32, v34);
      }
      *(void *)(v0 + 856) = v28;
      uint64_t v35 = *(void *)(v0 + 256);
      *(void *)(v0 + 864) = *(void *)(v35 + 96);
      *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v35 + 16);
      *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
      uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v38 = v37;
      unint64_t v29 = sub_100096330;
      uint64_t v30 = v36;
      uint64_t v31 = v38;
    }
    else
    {
      *(void *)(v0 + 816) = *(void *)(*(void *)(v0 + 256) + 104);
      unint64_t v29 = sub_100096154;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    return _swift_task_switch(v29, v30, v31);
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v15) {
    goto LABEL_8;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_100096154()
{
  *(void *)(v0 + 824) = OBJC_IVAR____TtC11photosfaced10PhotoCache_database;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 832) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000961FC;
  return PhotosFaceDatabase.storedPhotos()();
}

uint64_t sub_1000961FC(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  *(void *)(*(void *)v2 + 840) = a1;
  swift_task_dealloc();
  if (v1)
  {
    v3[154] = v1;
    uint64_t v4 = v3[98];
    uint64_t v5 = v3[97];
    uint64_t v6 = sub_1000CDEC4;
  }
  else
  {
    uint64_t v6 = sub_1000A0E20;
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_100096330()
{
  char v1 = *(unsigned char *)(v0 + 1244);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 848);
  sub_100064E64(0x70A04u >> (8 * v1), *(void *)(v0 + 704), 1, *(void *)(v0 + 608));
  *(void *)(v0 + 880) = v2;
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 776);
  if (v2) {
    uint64_t v5 = sub_1000CDEC8;
  }
  else {
    uint64_t v5 = sub_1000963E8;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000963E8()
{
  (*(void (**)(void, void, void))(v0[74] + 16))(v0[75], v0[76], v0[73]);
  sub_100005F48(&qword_1000F3DD0, &qword_1000F3DC0);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = v0[107];
  v0[112] = _swiftEmptyArrayStorage;
  v0[111] = v1;
  uint64_t v2 = v0[96];
  uint64_t v3 = static CommunicationActor.shared.getter();
  v0[113] = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F3DD8, &qword_1000F3DB8);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[114] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100096564;
  uint64_t v6 = v0[70];
  uint64_t v7 = v0[69];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 5, v6, v4);
}

uint64_t sub_100096564()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 784);
  uint64_t v4 = *(void *)(v2 + 776);
  if (v0) {
    uint64_t v5 = sub_100098604;
  }
  else {
    uint64_t v5 = sub_100096690;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100096690()
{
  uint64_t v240 = v0;
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    uint64_t v57 = *(void *)(v0 + 544);
    uint64_t v58 = *(void *)(v0 + 536);
    int64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v59(v57, v1, v2);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v60(v58, v57, v2);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v62 = *(void *)(v0 + 896);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v62 = sub_1000D24C0(0, *(void *)(v62 + 16) + 1, 1, v62);
    }
    unint64_t v64 = *(void *)(v62 + 16);
    unint64_t v63 = *(void *)(v62 + 24);
    unint64_t v65 = v64 + 1;
    v233 = (void (*)(unint64_t, uint64_t, uint64_t))v59;
    if (v64 >= v63 >> 1)
    {
      uint64_t v199 = sub_1000D24C0(v63 > 1, v64 + 1, 1, v62);
      unint64_t v65 = v64 + 1;
      unint64_t v62 = v199;
    }
    *(void *)(v0 + 928) = v62;
    uint64_t v66 = *(void *)(v0 + 544);
    uint64_t v67 = *(void *)(v0 + 536);
    uint64_t v68 = *(void *)(v0 + 528);
    uint64_t v69 = *(void *)(v0 + 520);
    uint64_t v228 = *(void *)(v0 + 512);
    uint64_t v71 = *(void *)(v0 + 464);
    uint64_t v70 = *(void *)(v0 + 472);
    *(void *)(v62 + 16) = v65;
    v233(v62+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v64, v67, v71);
    static Log.photos.getter();
    v60(v68, v66, v71);
    v60(v69, v66, v71);
    v60(v228, v66, v71);
    unint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v72, v73))
    {
      os_log_type_t v217 = v73;
      v219 = v72;
      v222 = (uint64_t *)(v0 + 192);
      uint64_t v74 = (_DWORD *)swift_slowAlloc();
      *(void *)(v0 + 192) = swift_slowAlloc();
      v234 = v74;
      *uint64_t v74 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v75 = (uint64_t *)(v0 + 216);
      uint64_t v76 = *(void *)(v0 + 528);
      uint64_t v78 = *(void *)(v0 + 464);
      uint64_t v77 = *(void *)(v0 + 472);
      uint64_t v79 = *(void *)(SyncedPhotosFace.uncached.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      v225 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      v225(v76, v78);
      *(void *)(v0 + 200) = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v234 + 6) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v80 = *(void *)(v0 + 520);
      uint64_t v81 = *(void *)(v0 + 456);
      uint64_t v82 = *(void *)(v0 + 464);
      uint64_t v83 = *(void *)(v0 + 424);
      uint64_t v206 = *(void *)(v0 + 416);
      uint64_t v84 = *(void *)(v0 + 408);
      uint64_t v85 = *(void *)(v0 + 344);
      uint64_t v86 = *(void *)(v0 + 352);
      SyncedPhotosFace.id.getter();
      sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      dispatch thunk of PhotosFaceID.id.getter();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
      swift_release();
      v225(v80, v82);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v89 = v88;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v206);
      *(void *)(v0 + 208) = sub_100007E88(v87, v89, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v234 + 11) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = SyncedPhotosFace.uncached.getter();
      int64_t v91 = *(void *)(v90 + 16);
      if (v91)
      {
        uint64_t v92 = *(void *)(v0 + 272);
        *(void *)(v0 + 216) = _swiftEmptyArrayStorage;
        sub_100054824(0, v91, 0);
        unint64_t v93 = v90 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
        uint64_t v94 = *(void *)(v92 + 72);
        uint64_t v95 = *(void (**)(void, unint64_t, void))(v92 + 16);
        do
        {
          v95(*(void *)(v0 + 280), v93, *(void *)(v0 + 264));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v97 = *(void *)(v0 + 272);
          uint64_t v96 = *(void *)(v0 + 280);
          uint64_t v98 = *(void *)(v0 + 264);
          StoredPhoto.localIdentifier.getter();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
          uint64_t v99 = *(void *)(v0 + 216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054824(0, *(void *)(v99 + 16) + 1, 1);
            uint64_t v99 = *v75;
          }
          unint64_t v101 = *(void *)(v99 + 16);
          unint64_t v100 = *(void *)(v99 + 24);
          if (v101 >= v100 >> 1)
          {
            sub_100054824(v100 > 1, v101 + 1, 1);
            uint64_t v99 = *v75;
          }
          uint64_t v103 = *(void *)(v0 + 424);
          uint64_t v102 = *(void *)(v0 + 432);
          uint64_t v104 = *(void *)(v0 + 416);
          *(void *)(v99 + 16) = v101 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v103 + 32))(v99+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v101, v102, v104);
          *(void *)(v0 + 216) = v99;
          v93 += v94;
          --v91;
        }
        while (v91);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v229 = (void *)(v0 + 856);
      os_log_t logb = *(os_log_t *)(v0 + 672);
      uint64_t v212 = *(void (**)(os_log_t, uint64_t))(v0 + 856);
      uint64_t v114 = *(void *)(v0 + 616);
      uint64_t v113 = v225;
      v225(*(void *)(v0 + 512), *(void *)(v0 + 464));
      uint64_t v115 = Array.description.getter();
      unint64_t v117 = v116;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 224) = sub_100007E88(v115, v117, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v219, v217, "Caching %ld for face %s, photos = %s", (uint8_t *)v234, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v212(logb, v114);
    }
    else
    {
      v229 = (void *)(v0 + 888);
      v235 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
      uint64_t v108 = *(void *)(v0 + 672);
      uint64_t v109 = *(void *)(v0 + 616);
      uint64_t v110 = *(void *)(v0 + 528);
      uint64_t v111 = *(void *)(v0 + 520);
      uint64_t v112 = *(void *)(v0 + 464);
      uint64_t v113 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v113(*(void *)(v0 + 512), v112);
      v113(v111, v112);
      v113(v110, v112);

      v235(v108, v109);
    }
    *(void *)(v0 + 944) = *v229;
    *(void *)(v0 + 936) = v113;
    *(void *)(v0 + 952) = *(void *)(*(void *)(v0 + 256) + 104);
    *(void *)(v0 + 960) = SyncedPhotosFace.uncached.getter();
    return _swift_task_switch(sub_100099F50, 0, 0);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 568) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 560));
  uint64_t v4 = *(void *)(v0 + 920);
  *(void *)(v0 + 984) = 0;
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 736);
  uint64_t v8 = *(void *)(v0 + 728);
  uint64_t v9 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)swift_task_alloc();
  *uint64_t v10 = v9;
  v10[1] = v6;
  v10[2] = v8;
  v10[3] = v5;
  v10[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000C9E5C(v12, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 792);
  uint64_t v16 = *(void *)(v0 + 736);
  uint64_t v17 = *(void *)(v0 + 728);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v19 = (void *)swift_task_alloc();
  *uint64_t v19 = v18;
  v19[1] = v15;
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v16;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v21 = sub_1000CBDF4((uint64_t)v13, v20);
  *(void *)(v0 + 1000) = v21;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v22, v23))
  {
    uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v106 = *(void *)(v0 + 656);
    uint64_t v107 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v105(v106, v107);
    goto LABEL_55;
  }
  os_log_type_t v208 = v23;
  log = v22;
  uint64_t v24 = swift_slowAlloc();
  uint64_t v238 = swift_slowAlloc();
  *(_DWORD *)uint64_t v24 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v25 = *(void *)(v21 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v25;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v26 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v26, v27, &v238);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v24 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v28 = *(void *)(v21 + 16);
  if (!v28)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v230 = *(void *)(v0 + 656);
    v236 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v118 = *(void *)(v0 + 616);
    uint64_t v119 = Array.description.getter();
    uint64_t v120 = (uint8_t *)v24;
    unint64_t v122 = v121;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v119, v122, &v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v208, "Received %ld %s: %s", v120, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v236(v230, v118);
LABEL_55:
    unint64_t v54 = *(void *)(v0 + 352);
    uint64_t v49 = *(void **)(v0 + 304);
    uint64_t v123 = *(void *)(v0 + 312);
    char v124 = *(unsigned char *)(v21 + 32);
    *(unsigned char *)(v0 + 1245) = v124;
    uint64_t v125 = -1;
    uint64_t v126 = -1 << v124;
    if (-(-1 << v124) < 64) {
      uint64_t v125 = ~(-1 << -(char)(-1 << v124));
    }
    unint64_t v127 = v125 & *(void *)(v21 + 64);
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v123 + 56);
    uint64_t v48 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v48;
    *(void *)(v0 + 1024) = v48;
    *(void *)(v0 + 1016) = v48;
    *(void *)(v0 + 1008) = v48;
    swift_bridgeObjectRetain();
    if (v127)
    {
      uint64_t v128 = 0;
      unint64_t v129 = __clz(__rbit64(v127));
      uint64_t v130 = (v127 - 1) & v127;
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
LABEL_59:
      uint64_t v131 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v54 + 16))(v131, v43[6] + *(void *)(v54 + 72) * v129, *(void *)(v0 + 344));
      *(void *)(v131 + *((int *)v49 + 12)) = *(void *)(v43[7] + 8 * v129);
      (*v38)(v131, 0, 1, v49);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    }
    unint64_t v51 = 63 - v126;
    if ((unint64_t)(63 - v126) <= 0x7F)
    {
      uint64_t v128 = 0;
    }
    else
    {
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
      unint64_t v132 = v43[9];
      if (v132)
      {
        uint64_t v128 = 1;
LABEL_63:
        uint64_t v130 = (v132 - 1) & v132;
        unint64_t v129 = __clz(__rbit64(v132)) + (v128 << 6);
        goto LABEL_59;
      }
      if (v51 < 0xC0)
      {
        uint64_t v128 = 1;
      }
      else
      {
        unint64_t v132 = v43[10];
        if (v132)
        {
          uint64_t v128 = 2;
          goto LABEL_63;
        }
        if (v51 < 0x100)
        {
          uint64_t v128 = 2;
        }
        else
        {
          unint64_t v132 = v43[11];
          if (v132)
          {
            uint64_t v128 = 3;
            goto LABEL_63;
          }
LABEL_108:
          if (v51 < 0x140)
          {
            uint64_t v128 = 3;
          }
          else
          {
            unint64_t v132 = v43[12];
            if (v132)
            {
              uint64_t v128 = 4;
              goto LABEL_63;
            }
            uint64_t v200 = 0;
            uint64_t v201 = v51 >> 6;
            uint64_t v202 = 5;
            if (v201 > 5) {
              uint64_t v202 = v201;
            }
            uint64_t v203 = v202 - 5;
            while (v203 != v200)
            {
              unint64_t v132 = v43[v200++ + 13];
              if (v132)
              {
                uint64_t v128 = v200 + 4;
                goto LABEL_63;
              }
            }
            uint64_t v128 = v201 - 1;
          }
        }
      }
    }
    (*v38)(*(void *)(v0 + 288), 1, 1, v49);
    uint64_t v130 = 0;
LABEL_66:
    *(void *)(v0 + 1048) = v130;
    *(void *)(v0 + 1040) = v128;
    uint64_t v133 = *(void *)(v0 + 304);
    uint64_t v134 = *(void *)(v0 + 312);
    uint64_t v135 = *(void *)(v0 + 296);
    sub_100055708(*(void *)(v0 + 288), v135, &qword_1000F3DA8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v135, 1, v133) == 1)
    {
      uint64_t v136 = *(void *)(v0 + 1000);
      swift_release();
      swift_release();
      uint64_t v137 = *(void *)(v136 + 16);
      swift_bridgeObjectRelease();
      if (v137) {
        sub_100009944(*(unsigned char *)(v0 + 1244));
      }
      uint64_t v138 = *(void *)(v0 + 704);
      uint64_t v139 = *(void *)(v0 + 696);
      uint64_t v140 = *(void *)(v0 + 688);
      uint64_t v141 = *(void *)(v0 + 608);
      uint64_t v142 = *(void *)(v0 + 592);
      uint64_t v143 = *(void *)(v0 + 584);
      if (*(void *)(v0 + 984))
      {
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
      }
      else
      {
        (*(void (**)(void, void))(v142 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
      }
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v144 = *(uint64_t (**)(void))(v0 + 8);
      return v144();
    }
    else
    {
      uint64_t v146 = *(void *)(v0 + 392);
      uint64_t v145 = *(void *)(v0 + 400);
      uint64_t v147 = *(void *)(v0 + 344);
      uint64_t v148 = *(void *)(v0 + 352);
      uint64_t v149 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v149;
      (*(void (**)(uint64_t))(v148 + 32))(v145);
      static Log.session.getter();
      uint64_t v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
      *(void *)(v0 + 1064) = v150;
      *(void *)(v0 + 1072) = (v148 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v150(v146, v145, v147);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v151 = Logger.logObject.getter();
      os_log_type_t v152 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v151, v152))
      {
        os_log_type_t loga = v152;
        uint64_t v218 = v149;
        v220 = (uint64_t *)(v0 + 88);
        uint64_t v153 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v221 = v153;
        *(_DWORD *)uint64_t v153 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        v213 = v151;
        v215 = v48;
        v223 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v154 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v154, v155, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v153 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v157 = *(void *)(v0 + 384);
        uint64_t v156 = *(void *)(v0 + 392);
        uint64_t v158 = *(void *)(v0 + 344);
        uint64_t v159 = *(void *)(v0 + 352);
        v150(v157, v156, v158);
        swift_release();
        int v160 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v160(v156, v158);
        sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v161 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v163 = v162;
        uint64_t v207 = v160;
        v160(v157, v158);
        *(void *)(v0 + 104) = sub_100007E88(v161, v163, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v221 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v164 = *(void *)(v0 + 800);
        uint64_t v165 = *(void *)(v0 + 792);
        uint64_t v166 = *(void *)(v0 + 736);
        uint64_t v167 = *(void *)(v0 + 728);
        uint64_t v168 = *(void *)(v0 + 344);
        uint64_t v169 = (void *)swift_task_alloc();
        void *v169 = v168;
        v169[1] = v165;
        v169[2] = v167;
        v169[3] = v164;
        v169[4] = v166;
        uint64_t v170 = swift_getKeyPath();
        swift_task_dealloc();
        int64_t v171 = *(void *)(v218 + 16);
        if (v171)
        {
          uint64_t v172 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
          sub_100054958(0, v171, 0);
          uint64_t v173 = v218 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
          v226 = *(void (**)(void, uint64_t, void))(v172 + 16);
          uint64_t v231 = *(void *)(v172 + 72);
          do
          {
            v226(*(void *)(v0 + 504), v173, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v174 = *(void *)(v0 + 504);
            uint64_t v176 = *(void *)(v0 + 464);
            uint64_t v175 = *(void *)(v0 + 472);
            uint64_t v177 = v170;
            swift_getAtKeyPath();
            swift_release();
            uint64_t v179 = *(void *)(v0 + 16);
            uint64_t v178 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v174, v176);
            uint64_t v180 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v180 + 16) + 1, 1);
              uint64_t v180 = *v223;
            }
            unint64_t v182 = *(void *)(v180 + 16);
            unint64_t v181 = *(void *)(v180 + 24);
            if (v182 >= v181 >> 1)
            {
              sub_100054958(v181 > 1, v182 + 1, 1);
              uint64_t v180 = *v223;
            }
            *(void *)(v180 + 16) = v182 + 1;
            uint64_t v183 = v180 + 16 * v182;
            *(void *)(v183 + 32) = v179;
            *(void *)(v183 + 40) = v178;
            v173 += v231;
            --v171;
            uint64_t v170 = v177;
          }
          while (v171);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v190 = *(void *)(v0 + 648);
        uint64_t v191 = *(void *)(v0 + 616);
        uint64_t v192 = Array.description.getter();
        unint64_t v194 = v193;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v192, v194, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v213, loga, "Inserting %s %s: %s", (uint8_t *)v221, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v48 = v215;
        v215(v190, v191);
        v189 = v207;
      }
      else
      {
        uint64_t v237 = *(void *)(v0 + 648);
        uint64_t v184 = *(void *)(v0 + 616);
        uint64_t v185 = *(void *)(v0 + 392);
        uint64_t v186 = *(void *)(v0 + 344);
        uint64_t v187 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v188 = v185;
        v189 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
        v189(v188, v186);
        swift_release_n();
        swift_bridgeObjectRelease();

        v48(v237, v184);
      }
      *(void *)(v0 + 1088) = v48;
      *(void *)(v0 + 1080) = v189;
      uint64_t v195 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v195;
      *uint64_t v195 = v0;
      v195[1] = sub_10009BC30;
      uint64_t v196 = *(void *)(v0 + 736);
      uint64_t v197 = *(void *)(v0 + 728);
      uint64_t v198 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v198, v197, v196);
    }
  }
  uint64_t v205 = v24;
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v216 = *(void *)(v0 + 304);
  v239 = _swiftEmptyArrayStorage;
  sub_100054958(0, v28, 0);
  uint64_t v30 = sub_1000C6DEC(v21);
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  v214 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v35 = v21;
  for (int64_t i = v28 - 1; ; --i)
  {
    uint64_t v37 = *(void *)(v0 + 336);
    uint64_t v36 = *(void *)(v0 + 344);
    uint64_t v38 = *(void (***)(uint64_t, uint64_t, uint64_t, void *))(v0 + 320);
    uint64_t v39 = *(void *)(v0 + 328);
    uint64_t v40 = *(int *)(v216 + 48);
    char v41 = v34 & 1;
    uint64_t v227 = v32;
    uint64_t v232 = v30;
    uint64_t v42 = sub_1000C6EF4(v37, v30, v32, v34 & 1, v35, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v37 + v40) = v42;
    (*v214)(v39, v37, v36);
    *(void *)(v39 + *(int *)(v216 + 48)) = v42;
    uint64_t v43 = &qword_1000F3DB0;
    sub_100055708(v39, (uint64_t)v38, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v37, &qword_1000F3DB0);
    uint64_t v44 = sub_1000B7804((uint64_t)v38, v0 + 152, (void (*)(void))&type metadata accessor for ShuffleDatabase, &qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v46 = *(void *)(v0 + 320);
    if (v4) {
      break;
    }
    uint64_t v47 = v44;
    uint64_t v48 = v45;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    uint64_t v49 = v239;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v49[2] + 1, 1);
      uint64_t v49 = v239;
    }
    unint64_t v51 = v227;
    uint64_t v50 = v232;
    unint64_t v53 = v49[2];
    unint64_t v52 = v49[3];
    unint64_t v54 = v53 + 1;
    if (v53 >= v52 >> 1)
    {
      sub_100054958(v52 > 1, v53 + 1, 1);
      unint64_t v51 = v227;
      uint64_t v50 = v232;
      uint64_t v49 = v239;
    }
    v49[2] = v54;
    uint64_t v55 = &v49[2 * v53];
    v55[4] = v47;
    v55[5] = v48;
    uint64_t v35 = v21;
    if (v50 < 0 || v50 >= -(-1 << *(unsigned char *)(v21 + 32)))
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (((*(void *)(v21 + 64 + (((unint64_t)v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
      goto LABEL_106;
    }
    if (*(_DWORD *)(v21 + 36) != v51) {
      goto LABEL_107;
    }
    uint64_t v56 = _HashTable.occupiedBucket(after:)();
    if (!i)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v205;
      goto LABEL_54;
    }
    uint64_t v30 = v56;
    uint64_t v4 = 0;
    char v34 = 0;
    uint64_t v32 = *(unsigned int *)(v21 + 36);
  }
  swift_bridgeObjectRelease();
  sub_100016B90(v46, &qword_1000F3DB0);
  sub_1000CAC30(v232, v227, v41);
  return swift_release();
}

uint64_t sub_100098604()
{
  uint64_t v172 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 568) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 560));
  uint64_t v1 = *(void *)(v0 + 40);
  *(void *)(v0 + 984) = v1;
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = *(void *)(v0 + 792);
  uint64_t v4 = *(void *)(v0 + 736);
  uint64_t v5 = *(void *)(v0 + 728);
  uint64_t v6 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  uint64_t v7 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  *uint64_t v8 = v6;
  v8[1] = v3;
  v8[2] = v5;
  v8[3] = v2;
  void v8[4] = v4;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000C9E5C(v10, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease();
  if (v1)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *((void *)v11 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 168) = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v16 = *(void *)(v7 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v14, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v0 + 856))(*(void *)(v0 + 664), *(void *)(v0 + 616));
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = *(void *)(v0 + 800);
  uint64_t v18 = *(void *)(v0 + 792);
  uint64_t v19 = *(void *)(v0 + 736);
  uint64_t v20 = *(void *)(v0 + 728);
  uint64_t v21 = *(void *)(v0 + 344);
  uint64_t v22 = (void *)swift_task_alloc();
  *uint64_t v22 = v21;
  v22[1] = v18;
  void v22[2] = v20;
  v22[3] = v17;
  v22[4] = v19;
  uint64_t v23 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v24 = sub_1000CBDF4((uint64_t)v11, v23);
  *(void *)(v0 + 1000) = v24;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  uint64_t v169 = (void *)v0;
  if (!os_log_type_enabled(v25, v26))
  {
    uint64_t v55 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v56 = *(void *)(v0 + 656);
    uint64_t v57 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v55(v56, v57);
    goto LABEL_34;
  }
  os_log_type_t v150 = v26;
  log = v25;
  uint64_t v158 = (void (*)(void, void))(v0 + 152);
  uint64_t v159 = v24;
  uint64_t v27 = swift_slowAlloc();
  uint64_t v170 = swift_slowAlloc();
  *(_DWORD *)uint64_t v27 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v28 = *(void *)(v24 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v28;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v27 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v29 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v29, v30, &v170);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v27 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v31 = *(void *)(v24 + 16);
  if (!v31)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v164 = *(void *)(v0 + 656);
    uint64_t v167 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v58 = *(void *)(v0 + 616);
    uint64_t v59 = Array.description.getter();
    uint64_t v60 = (uint8_t *)v27;
    unint64_t v62 = v61;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v59, v62, &v170);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v150, "Received %ld %s: %s", v60, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v167(v164, v58);
LABEL_34:
    uint64_t v41 = *(void *)(v0 + 352);
    uint64_t v48 = *(void **)(v0 + 304);
    uint64_t v63 = *(void *)(v0 + 312);
    char v64 = *(unsigned char *)(v24 + 32);
    *(unsigned char *)(v0 + 1245) = v64;
    uint64_t v65 = -1;
    uint64_t v66 = -1 << v64;
    if (-(-1 << v64) < 64) {
      uint64_t v65 = ~(-1 << -(char)(-1 << v64));
    }
    unint64_t v67 = v65 & *(void *)(v24 + 64);
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v63 + 56);
    uint64_t v68 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v68;
    *(void *)(v0 + 1024) = v68;
    *(void *)(v0 + 1016) = v68;
    *(void *)(v0 + 1008) = v68;
    swift_bridgeObjectRetain();
    uint64_t v158 = v68;
    if (v67)
    {
      uint64_t v69 = 0;
      unint64_t v70 = __clz(__rbit64(v67));
      uint64_t v71 = (v67 - 1) & v67;
      uint64_t v45 = *(void **)(v0 + 1000);
LABEL_38:
      uint64_t v72 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v41 + 16))(v72, v45[6] + *(void *)(v41 + 72) * v70, *(void *)(v0 + 344));
      *(void *)(v72 + *((int *)v48 + 12)) = *(void *)(v45[7] + 8 * v70);
      (*v38)(v72, 0, 1, v48);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v50 = 63 - v66;
    if ((unint64_t)(63 - v66) <= 0x7F)
    {
      uint64_t v69 = 0;
      goto LABEL_44;
    }
    uint64_t v45 = *(void **)(v0 + 1000);
    unint64_t v73 = v45[9];
    if (v73)
    {
      uint64_t v69 = 1;
    }
    else
    {
      if (v50 < 0xC0)
      {
        uint64_t v69 = 1;
        goto LABEL_44;
      }
      unint64_t v73 = v45[10];
      if (v73)
      {
        uint64_t v69 = 2;
      }
      else
      {
        if (v50 < 0x100)
        {
          uint64_t v69 = 2;
          goto LABEL_44;
        }
        unint64_t v73 = v45[11];
        if (!v73) {
          goto LABEL_88;
        }
        uint64_t v69 = 3;
      }
    }
LABEL_42:
    uint64_t v71 = (v73 - 1) & v73;
    unint64_t v70 = __clz(__rbit64(v73)) + (v69 << 6);
    goto LABEL_38;
  }
  uint64_t v32 = *(void *)(v0 + 352);
  uint64_t v156 = *(void *)(v0 + 304);
  int64_t v171 = _swiftEmptyArrayStorage;
  sub_100054958(0, v31, 0);
  uint64_t v33 = sub_1000C6DEC(v24);
  unint64_t v35 = v34;
  char v37 = v36 & 1;
  uint64_t v154 = (void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16);
  uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v24;
  for (int64_t i = v31 - 1; ; --i)
  {
    uint64_t v40 = *(void *)(v0 + 336);
    uint64_t v39 = *(void *)(v0 + 344);
    uint64_t v41 = *(void *)(v0 + 320);
    uint64_t v42 = *(void *)(v0 + 328);
    uint64_t v43 = *(int *)(v156 + 48);
    unint64_t v163 = v35;
    uint64_t v166 = v33;
    uint64_t v44 = sub_1000C6EF4(v40, v33, v35, v37 & 1, (uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v40 + v43) = v44;
    (*v154)(v42, v40, v39);
    *(void *)(v42 + *(int *)(v156 + 48)) = v44;
    sub_100055708(v42, v41, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v40, &qword_1000F3DB0);
    uint64_t v45 = (void *)sub_1000B7804(v41, (uint64_t)v158, (void (*)(void))&type metadata accessor for ShuffleDatabase, &qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v47 = v46;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    uint64_t v48 = v171;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v48[2] + 1, 1);
      uint64_t v48 = v171;
    }
    unint64_t v50 = v163;
    uint64_t v49 = v166;
    unint64_t v52 = v48[2];
    unint64_t v51 = v48[3];
    if (v52 >= v51 >> 1)
    {
      sub_100054958(v51 > 1, v52 + 1, 1);
      unint64_t v50 = v163;
      uint64_t v49 = v166;
      uint64_t v48 = v171;
    }
    v48[2] = v52 + 1;
    unint64_t v53 = &v48[2 * v52];
    v53[4] = v45;
    v53[5] = v47;
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v159;
    if (v49 < 0 || v49 >= -(-1 << *(unsigned char *)(v159 + 32))) {
      break;
    }
    if (((*(void *)(v159 + 64 + (((unint64_t)v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_86;
    }
    if (*(_DWORD *)(v159 + 36) != v50) {
      goto LABEL_87;
    }
    uint64_t v54 = _HashTable.occupiedBucket(after:)();
    if (!i)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v159;
      goto LABEL_33;
    }
    uint64_t v33 = v54;
    char v37 = 0;
    unint64_t v35 = *(unsigned int *)(v159 + 36);
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  if (v50 < 0x140)
  {
    uint64_t v69 = 3;
  }
  else
  {
    unint64_t v73 = v45[12];
    if (v73)
    {
      uint64_t v69 = 4;
      goto LABEL_42;
    }
    uint64_t v145 = 0;
    uint64_t v146 = v50 >> 6;
    uint64_t v147 = 5;
    if (v146 > 5) {
      uint64_t v147 = v146;
    }
    uint64_t v148 = v147 - 5;
    while (v148 != v145)
    {
      unint64_t v73 = v45[v145++ + 13];
      if (v73)
      {
        uint64_t v69 = v145 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v69 = v146 - 1;
  }
LABEL_44:
  (*v38)(*(void *)(v0 + 288), 1, 1, v48);
  uint64_t v71 = 0;
LABEL_45:
  *(void *)(v0 + 1048) = v71;
  *(void *)(v0 + 1040) = v69;
  uint64_t v74 = v0;
  uint64_t v75 = *(void *)(v0 + 312);
  uint64_t v76 = *(void *)(v74 + 296);
  uint64_t v77 = *(void *)(v74 + 304);
  sub_100055708(*(void *)(v74 + 288), v76, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v76, 1, v77) == 1)
  {
    uint64_t v78 = *(void *)(v74 + 1000);
    swift_release();
    swift_release();
    uint64_t v79 = *(void *)(v78 + 16);
    swift_bridgeObjectRelease();
    if (v79) {
      sub_100009944(*(unsigned char *)(v74 + 1244));
    }
    uint64_t v80 = *(void *)(v74 + 704);
    uint64_t v81 = *(void *)(v74 + 696);
    uint64_t v82 = *(void *)(v74 + 688);
    uint64_t v83 = *(void *)(v74 + 608);
    uint64_t v84 = *(void *)(v74 + 592);
    uint64_t v85 = *(void *)(v74 + 584);
    if (*(void *)(v74 + 984))
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v83, v85);
    }
    else
    {
      (*(void (**)(void, void))(v84 + 8))(*(void *)(v74 + 608), *(void *)(v74 + 584));
    }
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v86 = *(uint64_t (**)(void))(v74 + 8);
    return v86();
  }
  else
  {
    uint64_t v88 = *(void *)(v74 + 392);
    uint64_t v87 = *(void *)(v74 + 400);
    uint64_t v89 = *(void *)(v74 + 344);
    uint64_t v90 = *(void *)(v74 + 352);
    uint64_t v91 = *(void *)(*(void *)(v74 + 296) + *(int *)(*(void *)(v74 + 304) + 48));
    *(void *)(v74 + 1056) = v91;
    (*(void (**)(uint64_t))(v90 + 32))(v87);
    static Log.session.getter();
    uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 16);
    *(void *)(v74 + 1064) = v92;
    *(void *)(v74 + 1072) = (v90 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v168 = v92;
    v92(v88, v87, v89);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v93 = Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v93, v94))
    {
      os_log_type_t loga = v94;
      uint64_t v153 = v93;
      unint64_t v155 = (uint64_t *)(v74 + 88);
      uint64_t v95 = swift_slowAlloc();
      *(void *)(v74 + 88) = swift_slowAlloc();
      uint64_t v157 = v95;
      *(_DWORD *)uint64_t v95 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      int v160 = (uint64_t *)(v74 + 112);
      swift_release();
      swift_release();
      uint64_t v96 = PhotosFaceType.description.getter();
      *(void *)(v74 + 96) = sub_100007E88(v96, v97, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v95 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v99 = *(void *)(v74 + 384);
      uint64_t v98 = *(void *)(v74 + 392);
      uint64_t v100 = v169[44];
      uint64_t v101 = v169[43];
      v168(v99, v98, v101);
      swift_release();
      uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v100 + 8);
      v102(v98, v101);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v103 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v105 = v104;
      uint64_t v149 = v102;
      v102(v99, v101);
      v169[13] = sub_100007E88(v103, v105, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v157 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v106 = v169[100];
      uint64_t v107 = v169[99];
      uint64_t v108 = v169[92];
      uint64_t v109 = v169[91];
      uint64_t v110 = v169[43];
      uint64_t v111 = (void *)swift_task_alloc();
      void *v111 = v110;
      v111[1] = v107;
      v111[2] = v109;
      v111[3] = v106;
      v111[4] = v108;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v112 = *(void *)(v91 + 16);
      if (v112)
      {
        uint64_t v113 = v169[59];
        v169[14] = _swiftEmptyArrayStorage;
        sub_100054958(0, v112, 0);
        uint64_t v114 = v91 + ((*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80));
        unint64_t v162 = *(void (**)(void, uint64_t, void))(v113 + 16);
        uint64_t v165 = *(void *)(v113 + 72);
        uint64_t v115 = v169;
        do
        {
          v162(v115[63], v114, v115[58]);
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v116 = v115[63];
          uint64_t v117 = v169[59];
          uint64_t v118 = v169[58];
          swift_getAtKeyPath();
          swift_release();
          uint64_t v119 = v169[2];
          uint64_t v120 = v169[3];
          (*(void (**)(uint64_t, uint64_t))(v117 + 8))(v116, v118);
          uint64_t v115 = v169;
          uint64_t v121 = v169[14];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v121 + 16) + 1, 1);
            uint64_t v121 = *v160;
          }
          unint64_t v123 = *(void *)(v121 + 16);
          unint64_t v122 = *(void *)(v121 + 24);
          if (v123 >= v122 >> 1)
          {
            sub_100054958(v122 > 1, v123 + 1, 1);
            uint64_t v121 = *v160;
          }
          *(void *)(v121 + 16) = v123 + 1;
          uint64_t v124 = v121 + 16 * v123;
          *(void *)(v124 + 32) = v119;
          *(void *)(v124 + 40) = v120;
          v114 += v165;
          --v112;
        }
        while (v112);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v115 = v169;
      }
      uint64_t v135 = v115[81];
      uint64_t v136 = v115[77];
      uint64_t v137 = Array.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      v115[16] = sub_100007E88(v137, v139, v155);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v153, loga, "Inserting %s %s: %s", (uint8_t *)v157, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v140 = v135;
      uint64_t v133 = v158;
      v158(v140, v136);
      uint64_t v131 = v149;
    }
    else
    {
      uint64_t v125 = *(void *)(v74 + 648);
      uint64_t v126 = v169[77];
      uint64_t v127 = v169[49];
      uint64_t v128 = v169[44];
      uint64_t v129 = v169[43];
      swift_bridgeObjectRelease();
      uint64_t v130 = v127;
      uint64_t v131 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
      v131(v130, v129);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v132 = v125;
      uint64_t v133 = v158;
      v158(v132, v126);
      uint64_t v115 = v169;
    }
    v115[136] = v133;
    v115[135] = v131;
    uint64_t v141 = (void *)swift_task_alloc();
    v115[137] = v141;
    void *v141 = v115;
    v141[1] = sub_10009BC30;
    uint64_t v142 = v115[92];
    uint64_t v143 = v115[91];
    uint64_t v144 = v115[50];
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v144, v143, v142);
  }
}

uint64_t sub_100099F50()
{
  v0[23] = v0[120];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[121] = v1;
  uint64_t v2 = sub_100005CB0(&qword_1000F3DE8);
  uint64_t v3 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
  *uint64_t v1 = v0;
  v1[1] = sub_10009A054;
  uint64_t v4 = v0[119];
  uint64_t v5 = v0[33];
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F3F88, v4, v2, v5, v3);
}

uint64_t sub_10009A054()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 976) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10009A2C4;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v3 = sub_10009A194;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10009A194()
{
  (*(void (**)(void, void))(v0 + 936))(*(void *)(v0 + 544), *(void *)(v0 + 464));
  uint64_t v1 = *(void *)(v0 + 944);
  *(void *)(v0 + 896) = *(void *)(v0 + 928);
  *(void *)(v0 + 888) = v1;
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = static CommunicationActor.shared.getter();
  *(void *)(v0 + 904) = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F3DD8, &qword_1000F3DB8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100096564;
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 552);
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 40, v6, v4);
}

uint64_t sub_10009A2C4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 784);
  uint64_t v2 = *(void *)(v0 + 776);
  return _swift_task_switch(sub_10009A32C, v2, v1);
}

uint64_t sub_10009A32C()
{
  uint64_t v174 = v0;
  uint64_t v1 = *(void *)(v0 + 576);
  uint64_t v2 = *(void *)(v0 + 568);
  uint64_t v3 = *(void *)(v0 + 560);
  (*(void (**)(void, void))(v0 + 936))(*(void *)(v0 + 544), *(void *)(v0 + 464));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = *(void *)(v0 + 976);
  *(void *)(v0 + 984) = v4;
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 736);
  uint64_t v8 = *(void *)(v0 + 728);
  uint64_t v9 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  swift_bridgeObjectRetain();
  uint64_t v10 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  *uint64_t v11 = v9;
  v11[1] = v6;
  void v11[2] = v8;
  v11[3] = v5;
  void v11[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000C9E5C(v13, KeyPath, &qword_1000F2E30, (void (*)(BOOL, uint64_t, uint64_t))sub_100054978);
  swift_release();
  swift_bridgeObjectRelease();
  if (v4)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *((void *)v14 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 168) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void *)(v10 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 176) = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v17, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void, void))(v0 + 856))(*(void *)(v0 + 664), *(void *)(v0 + 616));
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(v0 + 800);
  uint64_t v21 = *(void *)(v0 + 792);
  uint64_t v22 = *(void *)(v0 + 736);
  uint64_t v23 = *(void *)(v0 + 728);
  uint64_t v24 = *(void *)(v0 + 344);
  uint64_t v25 = (void *)swift_task_alloc();
  *uint64_t v25 = v24;
  v25[1] = v21;
  v25[2] = v23;
  v25[3] = v20;
  v25[4] = v22;
  uint64_t v26 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v27 = sub_1000CBDF4((uint64_t)v14, v26);
  *(void *)(v0 + 1000) = v27;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v28, v29))
  {
    uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v60 = *(void *)(v0 + 656);
    uint64_t v61 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v59(v60, v61);
    goto LABEL_34;
  }
  os_log_type_t v150 = v29;
  log = v28;
  uint64_t v161 = v27;
  uint64_t v30 = swift_slowAlloc();
  uint64_t v172 = swift_slowAlloc();
  *(_DWORD *)uint64_t v30 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v31 = *(void *)(v27 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v31;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v30 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v32 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v32, v33, &v172);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v30 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v34 = *(void *)(v27 + 16);
  if (!v34)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v166 = *(void *)(v0 + 656);
    uint64_t v170 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v62 = *(void *)(v0 + 616);
    uint64_t v63 = Array.description.getter();
    char v64 = (uint8_t *)v30;
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v63, v66, &v172);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v150, "Received %ld %s: %s", v64, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v170(v166, v62);
LABEL_34:
    uint64_t v45 = *(void *)(v0 + 352);
    unint64_t v52 = *(void **)(v0 + 304);
    uint64_t v67 = *(void *)(v0 + 312);
    char v68 = *(unsigned char *)(v27 + 32);
    *(unsigned char *)(v0 + 1245) = v68;
    uint64_t v69 = -1;
    uint64_t v70 = -1 << v68;
    if (-(-1 << v68) < 64) {
      uint64_t v69 = ~(-1 << -(char)(-1 << v68));
    }
    unint64_t v71 = v69 & *(void *)(v27 + 64);
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v67 + 56);
    uint64_t v42 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v42;
    *(void *)(v0 + 1024) = v42;
    *(void *)(v0 + 1016) = v42;
    *(void *)(v0 + 1008) = v42;
    swift_bridgeObjectRetain();
    if (v71)
    {
      uint64_t v72 = 0;
      unint64_t v73 = __clz(__rbit64(v71));
      uint64_t v74 = (v71 - 1) & v71;
      uint64_t v49 = *(void **)(v0 + 1000);
LABEL_38:
      uint64_t v75 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v45 + 16))(v75, v49[6] + *(void *)(v45 + 72) * v73, *(void *)(v0 + 344));
      *(void *)(v75 + *((int *)v52 + 12)) = *(void *)(v49[7] + 8 * v73);
      (*v41)(v75, 0, 1, v52);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v54 = 63 - v70;
    if ((unint64_t)(63 - v70) <= 0x7F)
    {
      uint64_t v72 = 0;
      goto LABEL_44;
    }
    uint64_t v49 = *(void **)(v0 + 1000);
    unint64_t v76 = v49[9];
    if (v76)
    {
      uint64_t v72 = 1;
    }
    else
    {
      if (v54 < 0xC0)
      {
        uint64_t v72 = 1;
        goto LABEL_44;
      }
      unint64_t v76 = v49[10];
      if (v76)
      {
        uint64_t v72 = 2;
      }
      else
      {
        if (v54 < 0x100)
        {
          uint64_t v72 = 2;
          goto LABEL_44;
        }
        unint64_t v76 = v49[11];
        if (!v76) {
          goto LABEL_87;
        }
        uint64_t v72 = 3;
      }
    }
LABEL_42:
    uint64_t v74 = (v76 - 1) & v76;
    unint64_t v73 = __clz(__rbit64(v76)) + (v72 << 6);
    goto LABEL_38;
  }
  uint64_t v149 = v30;
  uint64_t v35 = *(void *)(v0 + 352);
  uint64_t v157 = *(void *)(v0 + 304);
  uint64_t v173 = _swiftEmptyArrayStorage;
  sub_100054958(0, v34, 0);
  uint64_t v36 = sub_1000C6DEC(v27);
  unint64_t v38 = v37;
  char v40 = v39 & 1;
  unint64_t v155 = (void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v27;
  int64_t v163 = v34 - 1;
  uint64_t v42 = (void (*)(void, void))v157;
  while (1)
  {
    uint64_t v44 = *(void *)(v0 + 336);
    uint64_t v43 = *(void *)(v0 + 344);
    uint64_t v45 = *(void *)(v0 + 320);
    uint64_t v46 = *(void *)(v0 + 328);
    uint64_t v47 = *(int *)(v157 + 48);
    unint64_t v165 = v38;
    uint64_t v169 = v36;
    uint64_t v48 = sub_1000C6EF4(v44, v36, v38, v40 & 1, (uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for ShuffleID);
    *(void *)(v44 + v47) = v48;
    (*v155)(v46, v44, v43);
    *(void *)(v46 + *(int *)(v157 + 48)) = v48;
    sub_100055708(v46, v45, &qword_1000F3DB0);
    swift_bridgeObjectRetain();
    sub_100016B90(v44, &qword_1000F3DB0);
    uint64_t v49 = (void *)sub_1000B7804(v45, v0 + 152, (void (*)(void))&type metadata accessor for ShuffleDatabase, &qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
    uint64_t v51 = v50;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F3DB0);
    unint64_t v52 = v173;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v52[2] + 1, 1);
      unint64_t v52 = v173;
    }
    unint64_t v54 = v165;
    uint64_t v53 = v169;
    unint64_t v56 = v52[2];
    unint64_t v55 = v52[3];
    if (v56 >= v55 >> 1)
    {
      sub_100054958(v55 > 1, v56 + 1, 1);
      unint64_t v54 = v165;
      uint64_t v53 = v169;
      unint64_t v52 = v173;
    }
    uint64_t v52[2] = v56 + 1;
    uint64_t v57 = &v52[2 * v56];
    v57[4] = v49;
    v57[5] = v51;
    uint64_t v41 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v161;
    if (v53 < 0 || v53 >= -(-1 << *(unsigned char *)(v161 + 32))) {
      break;
    }
    if (((*(void *)(v161 + 64 + (((unint64_t)v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v53) & 1) == 0) {
      goto LABEL_85;
    }
    if (*(_DWORD *)(v161 + 36) != v54) {
      goto LABEL_86;
    }
    uint64_t v58 = _HashTable.occupiedBucket(after:)();
    if (!v163)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v27 = v161;
      uint64_t v30 = v149;
      goto LABEL_33;
    }
    uint64_t v36 = v58;
    char v40 = 0;
    unint64_t v38 = *(unsigned int *)(v161 + 36);
    --v163;
  }
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  if (v54 < 0x140)
  {
    uint64_t v72 = 3;
  }
  else
  {
    unint64_t v76 = v49[12];
    if (v76)
    {
      uint64_t v72 = 4;
      goto LABEL_42;
    }
    uint64_t v145 = 0;
    uint64_t v146 = v54 >> 6;
    uint64_t v147 = 5;
    if (v146 > 5) {
      uint64_t v147 = v146;
    }
    uint64_t v148 = v147 - 5;
    while (v148 != v145)
    {
      unint64_t v76 = v49[v145++ + 13];
      if (v76)
      {
        uint64_t v72 = v145 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v72 = v146 - 1;
  }
LABEL_44:
  (*v41)(*(void *)(v0 + 288), 1, 1, v52);
  uint64_t v74 = 0;
LABEL_45:
  *(void *)(v0 + 1048) = v74;
  *(void *)(v0 + 1040) = v72;
  uint64_t v77 = *(void *)(v0 + 304);
  uint64_t v78 = *(void *)(v0 + 312);
  uint64_t v79 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v79, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77) == 1)
  {
    uint64_t v80 = *(void *)(v0 + 1000);
    swift_release();
    swift_release();
    uint64_t v81 = *(void *)(v80 + 16);
    swift_bridgeObjectRelease();
    if (v81) {
      sub_100009944(*(unsigned char *)(v0 + 1244));
    }
    uint64_t v82 = *(void *)(v0 + 704);
    uint64_t v83 = *(void *)(v0 + 696);
    uint64_t v84 = *(void *)(v0 + 688);
    uint64_t v85 = *(void *)(v0 + 608);
    uint64_t v86 = *(void *)(v0 + 592);
    uint64_t v87 = *(void *)(v0 + 584);
    if (*(void *)(v0 + 984))
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    }
    else
    {
      (*(void (**)(void, void))(v86 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
    }
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v88 = *(uint64_t (**)(void))(v0 + 8);
    return v88();
  }
  else
  {
    int v160 = v42;
    uint64_t v90 = *(void *)(v0 + 392);
    uint64_t v89 = *(void *)(v0 + 400);
    uint64_t v91 = *(void *)(v0 + 344);
    uint64_t v92 = *(void *)(v0 + 352);
    uint64_t v93 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v93;
    (*(void (**)(uint64_t))(v92 + 32))(v89);
    static Log.session.getter();
    os_log_type_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
    *(void *)(v0 + 1064) = v94;
    *(void *)(v0 + 1072) = (v92 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v94(v90, v89, v91);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v167 = v94;
      os_log_type_t v153 = v96;
      uint64_t v156 = v93;
      uint64_t v158 = (uint64_t *)(v0 + 88);
      uint64_t v97 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      uint64_t v159 = v97;
      *(_DWORD *)uint64_t v97 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v154 = v95;
      unint64_t v162 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v98 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v98, v99, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v97 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v101 = *(void *)(v0 + 384);
      uint64_t v100 = *(void *)(v0 + 392);
      uint64_t v103 = *(void *)(v0 + 344);
      uint64_t v102 = *(void *)(v0 + 352);
      v167(v101, v100, v103);
      swift_release();
      unint64_t v104 = *(void (**)(uint64_t, uint64_t))(v102 + 8);
      v104(v100, v103);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v107 = v106;
      uint64_t v151 = v104;
      v104(v101, v103);
      *(void *)(v0 + 104) = sub_100007E88(v105, v107, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v159 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v108 = *(void *)(v0 + 800);
      uint64_t v109 = *(void *)(v0 + 792);
      uint64_t v110 = *(void *)(v0 + 736);
      uint64_t v111 = *(void *)(v0 + 728);
      uint64_t v112 = *(void *)(v0 + 344);
      uint64_t v113 = (void *)swift_task_alloc();
      *uint64_t v113 = v112;
      v113[1] = v109;
      v113[2] = v111;
      v113[3] = v108;
      v113[4] = v110;
      uint64_t v114 = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v115 = *(void *)(v156 + 16);
      if (v115)
      {
        uint64_t v116 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v115, 0);
        uint64_t v117 = v156 + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
        uint64_t v164 = *(void (**)(void, uint64_t, void))(v116 + 16);
        uint64_t v168 = *(void *)(v116 + 72);
        do
        {
          v164(*(void *)(v0 + 504), v117, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v118 = *(void *)(v0 + 504);
          uint64_t v119 = *(void *)(v0 + 464);
          uint64_t v120 = *(void *)(v0 + 472);
          uint64_t v121 = v114;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v123 = *(void *)(v0 + 16);
          uint64_t v122 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v118, v119);
          uint64_t v124 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v124 + 16) + 1, 1);
            uint64_t v124 = *v162;
          }
          unint64_t v126 = *(void *)(v124 + 16);
          unint64_t v125 = *(void *)(v124 + 24);
          if (v126 >= v125 >> 1)
          {
            sub_100054958(v125 > 1, v126 + 1, 1);
            uint64_t v124 = *v162;
          }
          *(void *)(v124 + 16) = v126 + 1;
          uint64_t v127 = v124 + 16 * v126;
          *(void *)(v127 + 32) = v123;
          *(void *)(v127 + 40) = v122;
          v117 += v168;
          --v115;
          uint64_t v114 = v121;
        }
        while (v115);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v135 = *(void *)(v0 + 648);
      uint64_t v136 = *(void *)(v0 + 616);
      uint64_t v137 = Array.description.getter();
      unint64_t v139 = v138;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v137, v139, v158);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v154, v153, "Inserting %s %s: %s", (uint8_t *)v159, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v140 = v135;
      uint64_t v133 = v160;
      v160(v140, v136);
      uint64_t v132 = v151;
    }
    else
    {
      uint64_t v171 = *(void *)(v0 + 648);
      uint64_t v128 = *(void *)(v0 + 616);
      uint64_t v129 = *(void *)(v0 + 392);
      uint64_t v130 = *(void *)(v0 + 344);
      uint64_t v131 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
      v132(v129, v130);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v133 = v160;
      v160(v171, v128);
    }
    *(void *)(v0 + 1088) = v133;
    *(void *)(v0 + 1080) = v132;
    uint64_t v141 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v141;
    void *v141 = v0;
    v141[1] = sub_10009BC30;
    uint64_t v142 = *(void *)(v0 + 736);
    uint64_t v143 = *(void *)(v0 + 728);
    uint64_t v144 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v144, v143, v142);
  }
}

uint64_t sub_10009BC30()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_10009D264;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_10009BD54;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_10009BD54()
{
  uint64_t v1 = *(void *)(v0 + 1056);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 1112) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 472);
    uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 1240) = v6;
    *(void *)(v0 + 1120) = *(void *)(v4 + 56);
    *(void *)(v0 + 1128) = v5;
    unint64_t v139 = *(void (**)(void, void))(v0 + 1024);
    uint64_t v141 = *(uint64_t **)(v0 + 1080);
    *(void *)(v0 + 1136) = 0;
    uint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
    uint64_t v8 = *(void *)(v0 + 488);
    unint64_t v7 = *(void *)(v0 + 496);
    uint64_t v151 = *(void *)(v0 + 480);
    uint64_t v9 = *(void *)(v0 + 400);
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v11 = *(void *)(v0 + 344);
    v5(v7, v1 + ((v6 + 32) & ~(unint64_t)v6), v3);
    static Log.photos.getter();
    v5(v8, v7, v3);
    v145(v10, v9, v11);
    v5(v151, v7, v3);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v142 = v13;
      uint64_t v146 = v12;
      uint64_t v148 = (uint64_t *)(v0 + 56);
      uint64_t v14 = swift_slowAlloc();
      *(void *)(v0 + 56) = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *(void *)(v0 + 488);
      uint64_t v17 = *(void *)(v0 + 464);
      uint64_t v16 = *(void *)(v0 + 472);
      uint64_t v18 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v137(v15, v17);
      *(void *)(v0 + 64) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
      uint64_t v20 = *(void *)(v0 + 448);
      uint64_t v22 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 424);
      uint64_t v23 = *(void *)(v0 + 376);
      uint64_t v24 = *(void *)(v0 + 344);
      dispatch thunk of PhotosFaceID.id.getter();
      swift_release();
      v19(v23, v24);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      *(void *)(v0 + 72) = sub_100007E88(v25, v27, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
      uint64_t v132 = *(void *)(v0 + 640);
      uint64_t v28 = *(void *)(v0 + 616);
      uint64_t v29 = *(void *)(v0 + 480);
      uint64_t v30 = *(void *)(v0 + 464);
      SyncedPhotosFace.photos.getter();
      swift_release();
      uint64_t v31 = v137;
      v137(v29, v30);
      uint64_t v32 = Array.description.getter();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_100007E88(v32, v34, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v146, v142, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v135(v132, v28);
      uint64_t v35 = *(uint64_t **)(v0 + 1080);
      uint64_t v36 = *(void (**)(void, void))(v0 + 1016);
    }
    else
    {
      uint64_t v149 = *(void *)(v0 + 616);
      uint64_t v152 = *(void *)(v0 + 640);
      uint64_t v51 = *(void *)(v0 + 488);
      uint64_t v52 = *(void *)(v0 + 464);
      uint64_t v53 = *(void *)(v0 + 376);
      uint64_t v54 = *(void *)(v0 + 344);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v31(*(void *)(v0 + 480), v52);
      ((void (*)(uint64_t, uint64_t))v141)(v53, v54);
      uint64_t v35 = v141;
      v31(v51, v52);

      uint64_t v36 = v139;
      v139(v152, v149);
    }
    *(void *)(v0 + 1160) = v35;
    *(void *)(v0 + 1152) = v36;
    *(void *)(v0 + 1144) = v31;
    uint64_t v55 = SyncedPhotosFace.photos.getter();
    *(void *)(v0 + 1168) = v55;
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v56 = SyncedPhotosFace.day.getter();
    uint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 1176) = v57;
    void *v57 = v0;
    v57[1] = sub_10009E4D8;
    uint64_t v58 = *(void *)(v0 + 736);
    uint64_t v59 = *(void *)(v0 + 728);
    uint64_t v60 = *(void *)(v0 + 440);
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v55, v60, v56, v59, v58);
  }
  swift_bridgeObjectRelease();
  unint64_t v37 = *(void (**)(void, void))(v0 + 1088);
  unint64_t v38 = *(void (**)(void, void))(v0 + 1032);
  uint64_t v39 = *(void *)(v0 + 1024);
  uint64_t v40 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
  unint64_t v43 = *(void *)(v0 + 1048);
  int64_t v44 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = v38;
  *(void *)(v0 + 1024) = v39;
  uint64_t v140 = v38;
  if (v43)
  {
    uint64_t v45 = (v43 - 1) & v43;
    unint64_t v46 = __clz(__rbit64(v43)) | (v44 << 6);
    uint64_t v47 = *(void *)(v0 + 1000);
LABEL_12:
    uint64_t v48 = *(void *)(v0 + 304);
    uint64_t v49 = *(void *)(v0 + 312);
    uint64_t v50 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v50, *(void *)(v47 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v46, *(void *)(v0 + 344));
    *(void *)(v50 + *(int *)(v48 + 48)) = *(void *)(*(void *)(v47 + 56) + 8 * v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  int64_t v61 = v44 + 1;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  int64_t v62 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v61 < v62)
  {
    uint64_t v47 = *(void *)(v0 + 1000);
    uint64_t v63 = v47 + 64;
    unint64_t v64 = *(void *)(v47 + 64 + 8 * v61);
    if (v64)
    {
LABEL_20:
      uint64_t v45 = (v64 - 1) & v64;
      unint64_t v46 = __clz(__rbit64(v64)) + (v61 << 6);
      int64_t v44 = v61;
      goto LABEL_12;
    }
    int64_t v65 = v44 + 2;
    ++v44;
    if (v61 + 1 < v62)
    {
      unint64_t v64 = *(void *)(v63 + 8 * v65);
      if (v64)
      {
LABEL_23:
        int64_t v61 = v65;
        goto LABEL_20;
      }
      int64_t v44 = v61 + 1;
      if (v61 + 2 < v62)
      {
        unint64_t v64 = *(void *)(v63 + 8 * (v61 + 2));
        if (v64)
        {
          v61 += 2;
          goto LABEL_20;
        }
        int64_t v65 = v61 + 3;
        int64_t v44 = v61 + 2;
        if (v61 + 3 < v62)
        {
          unint64_t v64 = *(void *)(v63 + 8 * v65);
          if (v64) {
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v61 = v65 + 1;
            if (__OFADD__(v65, 1)) {
              break;
            }
            if (v61 >= v62)
            {
              int64_t v44 = v62 - 1;
              goto LABEL_34;
            }
            unint64_t v64 = *(void *)(v63 + 8 * v61);
            ++v65;
            if (v64) {
              goto LABEL_20;
            }
          }
LABEL_68:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
        }
      }
    }
  }
LABEL_34:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v45 = 0;
LABEL_35:
  *(void *)(v0 + 1048) = v45;
  *(void *)(v0 + 1040) = v44;
  uint64_t v66 = *(void *)(v0 + 304);
  uint64_t v67 = *(void *)(v0 + 312);
  uint64_t v68 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v68, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v66) != 1)
  {
    os_log_type_t v153 = v37;
    uint64_t v144 = (uint64_t *)(v0 + 88);
    uint64_t v79 = *(void *)(v0 + 392);
    uint64_t v78 = *(void *)(v0 + 400);
    uint64_t v80 = *(void *)(v0 + 344);
    uint64_t v81 = *(void *)(v0 + 352);
    uint64_t v82 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v82;
    (*(void (**)(uint64_t))(v81 + 32))(v78);
    static Log.session.getter();
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
    *(void *)(v0 + 1064) = v83;
    *(void *)(v0 + 1072) = (v81 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v83(v79, v78, v80);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      os_log_type_t v150 = v83;
      os_log_type_t v133 = v85;
      uint64_t v136 = v82;
      log = v84;
      uint64_t v86 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      uint64_t v138 = v86;
      *(_DWORD *)uint64_t v86 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v143 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v87 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v87, v88, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v86 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = *(void *)(v0 + 384);
      uint64_t v89 = *(void *)(v0 + 392);
      uint64_t v91 = *(void *)(v0 + 344);
      uint64_t v92 = *(void *)(v0 + 352);
      v150(v90, v89, v91);
      swift_release();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v93(v89, v91);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v96 = v95;
      uint64_t v131 = v93;
      v93(v90, v91);
      uint64_t v97 = (uint64_t *)(v0 + 88);
      *(void *)(v0 + 104) = sub_100007E88(v94, v96, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v98 = *(void *)(v0 + 800);
      uint64_t v99 = *(void *)(v0 + 792);
      uint64_t v100 = *(void *)(v0 + 736);
      uint64_t v101 = *(void *)(v0 + 728);
      uint64_t v102 = *(void *)(v0 + 344);
      uint64_t v103 = (void *)swift_task_alloc();
      *uint64_t v103 = v102;
      v103[1] = v99;
      v103[2] = v101;
      v103[3] = v98;
      v103[4] = v100;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v104 = *(void *)(v136 + 16);
      if (v104)
      {
        uint64_t v105 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v104, 0);
        uint64_t v106 = v136 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
        uint64_t v147 = *(void *)(v105 + 72);
        unint64_t v107 = *(void (**)(void, uint64_t, void))(v105 + 16);
        do
        {
          v107(*(void *)(v0 + 504), v106, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v108 = *(void *)(v0 + 504);
          uint64_t v110 = *(void *)(v0 + 464);
          uint64_t v109 = *(void *)(v0 + 472);
          swift_getAtKeyPath();
          swift_release();
          uint64_t v112 = *(void *)(v0 + 16);
          uint64_t v111 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
          uint64_t v113 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v113 + 16) + 1, 1);
            uint64_t v113 = *v143;
          }
          unint64_t v115 = *(void *)(v113 + 16);
          unint64_t v114 = *(void *)(v113 + 24);
          if (v115 >= v114 >> 1)
          {
            sub_100054958(v114 > 1, v115 + 1, 1);
            uint64_t v113 = *v143;
          }
          *(void *)(v113 + 16) = v115 + 1;
          uint64_t v116 = v113 + 16 * v115;
          *(void *)(v116 + 32) = v112;
          *(void *)(v116 + 40) = v111;
          v106 += v147;
          --v104;
        }
        while (v104);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v97 = (uint64_t *)(v0 + 88);
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v125 = *(void *)(v0 + 616);
      uint64_t v154 = *(void *)(v0 + 648);
      uint64_t v126 = Array.description.getter();
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v126, v128, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v133, "Inserting %s %s: %s", (uint8_t *)v138, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v124 = v140;
      v140(v154, v125);
      uint64_t v123 = v131;
    }
    else
    {
      uint64_t v117 = *(void *)(v0 + 648);
      uint64_t v118 = *(void *)(v0 + 616);
      uint64_t v119 = *(void *)(v0 + 392);
      uint64_t v120 = *(void *)(v0 + 344);
      uint64_t v121 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v122 = v119;
      uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      v123(v122, v120);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v124 = v153;
      v153(v117, v118);
    }
    *(void *)(v0 + 1088) = v124;
    *(void *)(v0 + 1080) = v123;
    uint64_t v129 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v129;
    *uint64_t v129 = v0;
    v129[1] = sub_10009BC30;
    uint64_t v42 = *(void *)(v0 + 736);
    uint64_t v41 = *(void *)(v0 + 728);
    uint64_t v40 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
  }
  uint64_t v69 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v70 = *(void *)(v69 + 16);
  swift_bridgeObjectRelease();
  if (v70) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v71 = *(void *)(v0 + 704);
  uint64_t v72 = *(void *)(v0 + 696);
  uint64_t v73 = *(void *)(v0 + 688);
  uint64_t v74 = *(void *)(v0 + 608);
  uint64_t v75 = *(void *)(v0 + 592);
  uint64_t v76 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
  }
  else
  {
    (*(void (**)(void, void))(v75 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = *(uint64_t (**)(void))(v0 + 8);
  return v77();
}

uint64_t sub_10009D264()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    unint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *unint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      unint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    int64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_10009BC30;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_10009E4D8()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[55];
    uint64_t v4 = v2[52];
    uint64_t v5 = v2[53];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_10009FB90;
  }
  else
  {
    (*(void (**)(void, void))(v2[53] + 8))(v2[55], v2[52]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_10009E66C;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_10009E66C()
{
  uint64_t v1 = *(void *)(v0 + 1112);
  uint64_t v2 = *(void *)(v0 + 1136) + 1;
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void (**)(void, void))(v0 + 1152);
    uint64_t v4 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    unint64_t v7 = *(void *)(v0 + 1048);
    int64_t v8 = *(void *)(v0 + 1040);
    *(void *)(v0 + 1032) = v3;
    *(void *)(v0 + 1024) = v3;
    if (v7)
    {
      uint64_t v9 = (v7 - 1) & v7;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      uint64_t v11 = *(void *)(v0 + 1000);
LABEL_4:
      uint64_t v12 = *(void *)(v0 + 304);
      uint64_t v13 = *(void *)(v0 + 312);
      uint64_t v14 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v14, *(void *)(v11 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v10, *(void *)(v0 + 344));
      *(void *)(v14 + *(int *)(v12 + 48)) = *(void *)(*(void *)(v11 + 56) + 8 * v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
      swift_bridgeObjectRetain();
LABEL_35:
      *(void *)(v0 + 1048) = v9;
      *(void *)(v0 + 1040) = v8;
      uint64_t v63 = *(void *)(v0 + 304);
      uint64_t v64 = *(void *)(v0 + 312);
      uint64_t v65 = *(void *)(v0 + 296);
      sub_100055708(*(void *)(v0 + 288), v65, &qword_1000F3DA8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v65, 1, v63) == 1)
      {
        uint64_t v66 = *(void *)(v0 + 1000);
        swift_release();
        swift_release();
        uint64_t v67 = *(void *)(v66 + 16);
        swift_bridgeObjectRelease();
        if (v67) {
          sub_100009944(*(unsigned char *)(v0 + 1244));
        }
        uint64_t v68 = *(void *)(v0 + 704);
        uint64_t v69 = *(void *)(v0 + 696);
        uint64_t v70 = *(void *)(v0 + 688);
        uint64_t v71 = *(void *)(v0 + 608);
        uint64_t v72 = *(void *)(v0 + 592);
        uint64_t v73 = *(void *)(v0 + 584);
        if (*(void *)(v0 + 984))
        {
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        }
        else
        {
          (*(void (**)(void, void))(v72 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
        }
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
        return v74();
      }
      uint64_t v137 = v3;
      uint64_t v138 = (uint64_t *)(v0 + 88);
      uint64_t v76 = *(void *)(v0 + 392);
      uint64_t v75 = *(void *)(v0 + 400);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = *(void *)(v0 + 352);
      uint64_t v79 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v79;
      (*(void (**)(uint64_t))(v78 + 32))(v75);
      static Log.session.getter();
      int64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
      *(void *)(v0 + 1064) = v80;
      *(void *)(v0 + 1072) = (v78 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v80(v76, v75, v77);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        os_log_type_t v130 = v82;
        uint64_t v133 = v79;
        log = v81;
        uint64_t v83 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v135 = v83;
        *(_DWORD *)uint64_t v83 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v141 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v84 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v84, v85, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v83 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v87 = *(void *)(v0 + 384);
        uint64_t v86 = *(void *)(v0 + 392);
        uint64_t v88 = *(void *)(v0 + 344);
        uint64_t v89 = *(void *)(v0 + 352);
        v80(v87, v86, v88);
        swift_release();
        unint64_t v90 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
        v90(v86, v88);
        sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
        uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v93 = v92;
        unint64_t v128 = v90;
        v90(v87, v88);
        *(void *)(v0 + 104) = sub_100007E88(v91, v93, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v94 = *(void *)(v0 + 800);
        uint64_t v95 = *(void *)(v0 + 792);
        uint64_t v96 = *(void *)(v0 + 736);
        uint64_t v97 = *(void *)(v0 + 728);
        uint64_t v98 = *(void *)(v0 + 344);
        uint64_t v99 = (void *)swift_task_alloc();
        void *v99 = v98;
        v99[1] = v95;
        v99[2] = v97;
        v99[3] = v94;
        v99[4] = v96;
        swift_getKeyPath();
        swift_task_dealloc();
        int64_t v100 = *(void *)(v133 + 16);
        if (v100)
        {
          uint64_t v101 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
          sub_100054958(0, v100, 0);
          uint64_t v102 = v133 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
          uint64_t v144 = *(void *)(v101 + 72);
          unint64_t v103 = *(void (**)(void, uint64_t, void))(v101 + 16);
          do
          {
            v103(*(void *)(v0 + 504), v102, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v104 = *(void *)(v0 + 504);
            uint64_t v105 = *(void *)(v0 + 464);
            uint64_t v106 = *(void *)(v0 + 472);
            swift_getAtKeyPath();
            swift_release();
            uint64_t v108 = *(void *)(v0 + 16);
            uint64_t v107 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
            uint64_t v109 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v109 + 16) + 1, 1);
              uint64_t v109 = *v141;
            }
            unint64_t v111 = *(void *)(v109 + 16);
            unint64_t v110 = *(void *)(v109 + 24);
            if (v111 >= v110 >> 1)
            {
              sub_100054958(v110 > 1, v111 + 1, 1);
              uint64_t v109 = *v141;
            }
            *(void *)(v109 + 16) = v111 + 1;
            uint64_t v112 = v109 + 16 * v111;
            *(void *)(v112 + 32) = v108;
            *(void *)(v112 + 40) = v107;
            v102 += v144;
            --v100;
          }
          while (v100);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v149 = *(void *)(v0 + 648);
        uint64_t v122 = *(void *)(v0 + 616);
        uint64_t v123 = Array.description.getter();
        unint64_t v125 = v124;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v123, v125, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v130, "Inserting %s %s: %s", (uint8_t *)v135, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v121 = v137;
        v137(v149, v122);
        uint64_t v119 = v128;
      }
      else
      {
        uint64_t v113 = *(void *)(v0 + 648);
        uint64_t v114 = *(void *)(v0 + 616);
        uint64_t v115 = *(void *)(v0 + 392);
        uint64_t v116 = *(void *)(v0 + 344);
        uint64_t v117 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v118 = v115;
        uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
        v119(v118, v116);
        swift_release_n();
        swift_bridgeObjectRelease();

        uint64_t v120 = v113;
        uint64_t v121 = v137;
        v137(v120, v114);
      }
      *(void *)(v0 + 1088) = v121;
      *(void *)(v0 + 1080) = v119;
      uint64_t v126 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v126;
      void *v126 = v0;
      v126[1] = sub_10009BC30;
      uint64_t v6 = *(void *)(v0 + 736);
      uint64_t v5 = *(void *)(v0 + 728);
      uint64_t v4 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
    }
    int64_t v58 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v59 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
      if (v58 >= v59) {
        goto LABEL_34;
      }
      uint64_t v11 = *(void *)(v0 + 1000);
      uint64_t v60 = v11 + 64;
      unint64_t v61 = *(void *)(v11 + 64 + 8 * v58);
      if (v61)
      {
LABEL_20:
        uint64_t v9 = (v61 - 1) & v61;
        unint64_t v10 = __clz(__rbit64(v61)) + (v58 << 6);
        int64_t v8 = v58;
        goto LABEL_4;
      }
      int64_t v62 = v8 + 2;
      ++v8;
      if (v58 + 1 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61)
      {
LABEL_23:
        int64_t v58 = v62;
        goto LABEL_20;
      }
      int64_t v8 = v58 + 1;
      if (v58 + 2 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * (v58 + 2));
      if (v61)
      {
        v58 += 2;
        goto LABEL_20;
      }
      int64_t v62 = v58 + 3;
      int64_t v8 = v58 + 2;
      if (v58 + 3 >= v59)
      {
LABEL_34:
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
        uint64_t v9 = 0;
        goto LABEL_35;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61) {
        goto LABEL_23;
      }
      while (1)
      {
        int64_t v58 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          break;
        }
        if (v58 >= v59)
        {
          int64_t v8 = v59 - 1;
          goto LABEL_34;
        }
        unint64_t v61 = *(void *)(v60 + 8 * v58);
        ++v62;
        if (v61) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
  }
  unint64_t v139 = *(uint64_t **)(v0 + 1160);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v15 = *(void *)(v0 + 1136) + 1;
  *(void *)(v0 + 1136) = v15;
  uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1128);
  uint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v18 = *(void *)(v0 + 488);
  unint64_t v17 = *(void *)(v0 + 496);
  uint64_t v142 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 464);
  uint64_t v20 = *(void *)(v0 + 400);
  uint64_t v21 = *(void *)(v0 + 376);
  uint64_t v22 = *(void *)(v0 + 344);
  v16(v17, *(void *)(v0 + 1056)+ ((*(unsigned __int8 *)(v0 + 1240) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1240))+ *(void *)(v0 + 1120) * v15, v19);
  static Log.photos.getter();
  v16(v18, v17, v19);
  v145(v21, v20, v22);
  v16(v142, v17, v19);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v23, v24))
  {
    os_log_type_t v140 = v24;
    uint64_t v143 = v23;
    uint64_t v146 = (uint64_t *)(v0 + 56);
    uint64_t v25 = swift_slowAlloc();
    *(void *)(v0 + 56) = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = *(void *)(v0 + 488);
    uint64_t v28 = *(void *)(v0 + 464);
    uint64_t v27 = *(void *)(v0 + 472);
    uint64_t v29 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v134(v26, v28);
    *(void *)(v0 + 64) = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v31 = *(void *)(v0 + 448);
    uint64_t v33 = *(void *)(v0 + 416);
    uint64_t v32 = *(void *)(v0 + 424);
    uint64_t v34 = *(void *)(v0 + 376);
    uint64_t v35 = *(void *)(v0 + 344);
    dispatch thunk of PhotosFaceID.id.getter();
    swift_release();
    v30(v34, v35);
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v38 = v37;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    *(void *)(v0 + 72) = sub_100007E88(v36, v38, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
    uint64_t v129 = *(void *)(v0 + 640);
    uint64_t v39 = *(void *)(v0 + 616);
    uint64_t v40 = *(void *)(v0 + 480);
    uint64_t v41 = *(void *)(v0 + 464);
    SyncedPhotosFace.photos.getter();
    swift_release();
    uint64_t v42 = v134;
    v134(v40, v41);
    uint64_t v43 = Array.description.getter();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_100007E88(v43, v45, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v143, v140, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v132(v129, v39);
    uint64_t v46 = *(uint64_t **)(v0 + 1080);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
  }
  else
  {
    uint64_t v147 = *(void *)(v0 + 616);
    uint64_t v148 = *(void *)(v0 + 640);
    uint64_t v48 = *(void *)(v0 + 488);
    uint64_t v49 = *(void *)(v0 + 464);
    uint64_t v50 = *(void *)(v0 + 376);
    uint64_t v51 = *(void *)(v0 + 344);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
    v42(*(void *)(v0 + 480), v49);
    ((void (*)(uint64_t, uint64_t))v139)(v50, v51);
    uint64_t v46 = v139;
    v42(v48, v49);

    v136(v148, v147);
    uint64_t v47 = v136;
  }
  *(void *)(v0 + 1160) = v46;
  *(void *)(v0 + 1152) = v47;
  *(void *)(v0 + 1144) = v42;
  uint64_t v52 = SyncedPhotosFace.photos.getter();
  *(void *)(v0 + 1168) = v52;
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v53 = SyncedPhotosFace.day.getter();
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1176) = v54;
  *uint64_t v54 = v0;
  v54[1] = sub_10009E4D8;
  uint64_t v55 = *(void *)(v0 + 736);
  uint64_t v56 = *(void *)(v0 + 728);
  uint64_t v57 = *(void *)(v0 + 440);
  return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v52, v57, v53, v56, v55);
}

uint64_t sub_10009FB90()
{
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    unint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *uint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F3DA8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    int64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      uint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      unint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    uint64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_10009BC30;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_1000A0E20()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A0EC4;
  uint64_t v2 = *(void *)(v0 + 840);
  return PhotosFaceDatabase.timePositions(for:)(v2);
}

uint64_t sub_1000A0EC4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100094FBC;
  }
  else
  {
    *(void *)(v4 + 1208) = a1;
    uint64_t v5 = sub_1000A0FEC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000A0FEC()
{
  uint64_t v1 = v0[150];
  uint64_t v2 = sub_1000C9738(v0[151], (uint64_t (*)(void, void, void))sub_1000C9278, v0[102]);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100081278((uint64_t)v2);
  v0[152] = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100062D78(v4);
  swift_bridgeObjectRelease();
  os_log_type_t v6 = sub_10005F794((uint64_t)v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[153] = sub_10005F660((uint64_t)v6);
  swift_release();
  uint64_t v7 = v0[98];
  uint64_t v8 = v0[97];
  return _swift_task_switch(sub_1000A1100, v8, v7);
}

uint64_t sub_1000A1100()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 1224);
  *(void *)(v0 + 848) = *(void *)(v0 + 1216);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100062D78(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
  static Log.session.getter();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v23 = v4;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v6 = PhotosFaceType.description.getter();
    *(void *)(v0 + 232) = sub_100007E88(v6, v7, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 240) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 680);
    uint64_t v10 = *(void *)(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 616);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = Set.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = sub_100007E88(v12, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v23, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 680);
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 616);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  *(void *)(v0 + 856) = v15;
  uint64_t v19 = *(void *)(v0 + 256);
  *(void *)(v0 + 864) = *(void *)(v19 + 96);
  *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v19 + 16);
  *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
  uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100096330, v21, v20);
}

uint64_t sub_1000A15C8()
{
  v1[32] = v0;
  uint64_t v2 = type metadata accessor for StoredPhoto();
  v1[33] = v2;
  v1[34] = *(void *)(v2 - 8);
  v1[35] = swift_task_alloc();
  sub_100005CB0(&qword_1000F40E0);
  v1[36] = swift_task_alloc();
  v1[37] = swift_task_alloc();
  uint64_t v3 = sub_100005CB0(&qword_1000F40E8);
  v1[38] = v3;
  v1[39] = *(void *)(v3 - 8);
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for AlbumID();
  v1[43] = v4;
  v1[44] = *(void *)(v4 - 8);
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v1[47] = swift_task_alloc();
  v1[48] = swift_task_alloc();
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for UUID();
  v1[52] = v5;
  v1[53] = *(void *)(v5 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  uint64_t v6 = sub_100005CB0((uint64_t *)&unk_1000F3A80);
  v1[58] = v6;
  v1[59] = *(void *)(v6 - 8);
  v1[60] = swift_task_alloc();
  v1[61] = swift_task_alloc();
  v1[62] = swift_task_alloc();
  v1[63] = swift_task_alloc();
  v1[64] = swift_task_alloc();
  v1[65] = swift_task_alloc();
  v1[66] = swift_task_alloc();
  v1[67] = swift_task_alloc();
  v1[68] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2EC8);
  v1[69] = swift_task_alloc();
  uint64_t v7 = sub_100005CB0(&qword_1000F40F0);
  v1[70] = v7;
  v1[71] = *(void *)(v7 - 8);
  v1[72] = swift_task_alloc();
  uint64_t v8 = sub_100005CB0(&qword_1000F40F8);
  v1[73] = v8;
  v1[74] = *(void *)(v8 - 8);
  v1[75] = swift_task_alloc();
  v1[76] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Logger();
  v1[77] = v9;
  v1[78] = *(void *)(v9 - 8);
  v1[79] = swift_task_alloc();
  v1[80] = swift_task_alloc();
  v1[81] = swift_task_alloc();
  v1[82] = swift_task_alloc();
  v1[83] = swift_task_alloc();
  v1[84] = swift_task_alloc();
  v1[85] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for SyncFacesRequest();
  v1[86] = v10;
  v1[87] = *(void *)(v10 - 8);
  v1[88] = swift_task_alloc();
  v1[89] = type metadata accessor for CommunicationActor();
  v1[90] = static CommunicationActor.shared.getter();
  uint64_t v11 = type metadata accessor for AlbumDatabase();
  v1[91] = v11;
  uint64_t v12 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  v1[92] = v12;
  unint64_t v13 = (void *)swift_task_alloc();
  v1[93] = v13;
  *unint64_t v13 = v1;
  v13[1] = sub_1000A1BE4;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v11, v12);
}

uint64_t sub_1000A1BE4(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 752) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v8 = sub_1000A26F0;
    uint64_t v9 = v5;
    uint64_t v10 = v7;
  }
  else
  {
    v4[95] = a1;
    v4[96] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
    uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v10 = v12;
    v4[97] = v11;
    v4[98] = v12;
    uint64_t v8 = sub_1000A1DE4;
    uint64_t v9 = v11;
  }
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1000A1DE4()
{
  uint64_t v44 = v0;
  uint64_t v1 = *(void *)(v0 + 760);
  uint64_t v2 = *(void *)(v0 + 752);
  uint64_t v3 = *(void *)(v0 + 736);
  uint64_t v4 = *(void *)(v0 + 728);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v6 = (void *)swift_task_alloc();
  *uint64_t v6 = v5;
  uint64_t v7 = type metadata accessor for AlbumProvider();
  *(void *)(v0 + 792) = v7;
  v6[1] = v7;
  v6[2] = v4;
  uint64_t v8 = sub_1000CD730(&qword_1000F4100, (void (*)(uint64_t))type metadata accessor for AlbumProvider);
  *(void *)(v0 + 800) = v8;
  v6[3] = v8;
  v6[4] = v3;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v10 = sub_1000C9280(v1, KeyPath, v0 + 120, (uint64_t (*)(void))&type metadata accessor for AlbumID);
  *(void *)(v0 + 808) = v10;
  swift_release_n();
  swift_bridgeObjectRelease();
  if (v10[2]) {
    goto LABEL_8;
  }
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v11 = PhotosFaceType.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == PhotosFaceType.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_8:
    if (static TestProperties.ignoreSyncCache.getter())
    {
      *(void *)(v0 + 848) = v2;
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_100062D78(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
      static Log.session.getter();
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        os_log_type_t v41 = v18;
        uint64_t v19 = swift_slowAlloc();
        v43[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        swift_release();
        swift_release();
        uint64_t v20 = PhotosFaceType.description.getter();
        *(void *)(v0 + 232) = sub_100007E88(v20, v21, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v19 + 12) = 2048;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v22 = _swiftEmptyArrayStorage[2];
        swift_release();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = v22;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v19 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v42 = *(void *)(v0 + 680);
        uint64_t v23 = *(void *)(v0 + 624);
        uint64_t v24 = *(void *)(v0 + 616);
        swift_bridgeObjectRetain();
        swift_release();
        sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v25 = Set.description.getter();
        unint64_t v27 = v26;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 248) = sub_100007E88(v25, v27, v43);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v17, v41, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v19, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
        v28(v42, v24);
      }
      else
      {
        uint64_t v32 = *(void *)(v0 + 680);
        uint64_t v33 = *(void *)(v0 + 624);
        uint64_t v34 = *(void *)(v0 + 616);
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();

        uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v28(v32, v34);
      }
      *(void *)(v0 + 856) = v28;
      uint64_t v35 = *(void *)(v0 + 256);
      *(void *)(v0 + 864) = *(void *)(v35 + 96);
      *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v35 + 16);
      *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
      uint64_t v36 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v38 = v37;
      unint64_t v29 = sub_1000A2B54;
      uint64_t v30 = v36;
      uint64_t v31 = v38;
    }
    else
    {
      *(void *)(v0 + 816) = *(void *)(*(void *)(v0 + 256) + 104);
      unint64_t v29 = sub_1000A2978;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
    }
    return _swift_task_switch(v29, v30, v31);
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (v15) {
    goto LABEL_8;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = *(uint64_t (**)(void))(v0 + 8);
  return v39();
}

uint64_t sub_1000A26F0()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000A2978()
{
  *(void *)(v0 + 824) = OBJC_IVAR____TtC11photosfaced10PhotoCache_database;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 832) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000A2A20;
  return PhotosFaceDatabase.storedPhotos()();
}

uint64_t sub_1000A2A20(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  *(void *)(*(void *)v2 + 840) = a1;
  swift_task_dealloc();
  if (v1)
  {
    v3[154] = v1;
    uint64_t v4 = v3[98];
    uint64_t v5 = v3[97];
    uint64_t v6 = sub_1000AE05C;
  }
  else
  {
    uint64_t v6 = sub_1000AD844;
    uint64_t v5 = 0;
    uint64_t v4 = 0;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000A2B54()
{
  char v1 = *(unsigned char *)(v0 + 1244);
  swift_release();
  uint64_t v2 = *(void *)(v0 + 848);
  sub_1000657F8(0x70A04u >> (8 * v1), *(void *)(v0 + 704), 1, *(void *)(v0 + 608));
  *(void *)(v0 + 880) = v2;
  uint64_t v3 = *(void *)(v0 + 784);
  uint64_t v4 = *(void *)(v0 + 776);
  if (v2) {
    uint64_t v5 = sub_1000A2D88;
  }
  else {
    uint64_t v5 = sub_1000A2C0C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A2C0C()
{
  (*(void (**)(void, void, void))(v0[74] + 16))(v0[75], v0[76], v0[73]);
  sub_100005F48(&qword_1000F4108, &qword_1000F40F8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = v0[107];
  v0[112] = _swiftEmptyArrayStorage;
  v0[111] = v1;
  uint64_t v2 = v0[96];
  uint64_t v3 = static CommunicationActor.shared.getter();
  v0[113] = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F4110, &qword_1000F40F0);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[114] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000A3034;
  uint64_t v6 = v0[70];
  uint64_t v7 = v0[69];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 5, v6, v4);
}

uint64_t sub_1000A2D88()
{
  uint64_t v1 = v0[88];
  uint64_t v2 = v0[87];
  uint64_t v3 = v0[86];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1000A3034()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 920) = v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 784);
  uint64_t v4 = *(void *)(v2 + 776);
  if (v0) {
    uint64_t v5 = sub_1000A5090;
  }
  else {
    uint64_t v5 = sub_1000A3160;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A3160()
{
  uint64_t v240 = v0;
  uint64_t v1 = *(void *)(v0 + 552);
  uint64_t v2 = *(void *)(v0 + 464);
  uint64_t v3 = *(void *)(v0 + 472);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) != 1)
  {
    uint64_t v57 = *(void *)(v0 + 544);
    uint64_t v58 = *(void *)(v0 + 536);
    int64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
    v59(v57, v1, v2);
    uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v60(v58, v57, v2);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v62 = *(void *)(v0 + 896);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v62 = sub_1000D24D4(0, *(void *)(v62 + 16) + 1, 1, v62);
    }
    unint64_t v64 = *(void *)(v62 + 16);
    unint64_t v63 = *(void *)(v62 + 24);
    unint64_t v65 = v64 + 1;
    v233 = (void (*)(unint64_t, uint64_t, uint64_t))v59;
    if (v64 >= v63 >> 1)
    {
      uint64_t v199 = sub_1000D24D4(v63 > 1, v64 + 1, 1, v62);
      unint64_t v65 = v64 + 1;
      unint64_t v62 = v199;
    }
    *(void *)(v0 + 928) = v62;
    uint64_t v66 = *(void *)(v0 + 544);
    uint64_t v67 = *(void *)(v0 + 536);
    uint64_t v68 = *(void *)(v0 + 528);
    uint64_t v69 = *(void *)(v0 + 520);
    uint64_t v228 = *(void *)(v0 + 512);
    uint64_t v71 = *(void *)(v0 + 464);
    uint64_t v70 = *(void *)(v0 + 472);
    *(void *)(v62 + 16) = v65;
    v233(v62+ ((*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80))+ *(void *)(v70 + 72) * v64, v67, v71);
    static Log.photos.getter();
    v60(v68, v66, v71);
    v60(v69, v66, v71);
    v60(v228, v66, v71);
    unint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v72, v73))
    {
      os_log_type_t v217 = v73;
      v219 = v72;
      v222 = (uint64_t *)(v0 + 192);
      uint64_t v74 = (_DWORD *)swift_slowAlloc();
      *(void *)(v0 + 192) = swift_slowAlloc();
      v234 = v74;
      *uint64_t v74 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v75 = (uint64_t *)(v0 + 216);
      uint64_t v76 = *(void *)(v0 + 528);
      uint64_t v78 = *(void *)(v0 + 464);
      uint64_t v77 = *(void *)(v0 + 472);
      uint64_t v79 = *(void *)(SyncedPhotosFace.uncached.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      v225 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
      v225(v76, v78);
      *(void *)(v0 + 200) = v79;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *((_WORD *)v234 + 6) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v80 = *(void *)(v0 + 520);
      uint64_t v81 = *(void *)(v0 + 456);
      uint64_t v82 = *(void *)(v0 + 464);
      uint64_t v83 = *(void *)(v0 + 424);
      uint64_t v206 = *(void *)(v0 + 416);
      uint64_t v84 = *(void *)(v0 + 408);
      uint64_t v85 = *(void *)(v0 + 344);
      uint64_t v86 = *(void *)(v0 + 352);
      SyncedPhotosFace.id.getter();
      sub_1000CD730(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      dispatch thunk of PhotosFaceID.id.getter();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v84, v85);
      swift_release();
      v225(v80, v82);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v89 = v88;
      (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v81, v206);
      *(void *)(v0 + 208) = sub_100007E88(v87, v89, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *((_WORD *)v234 + 11) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = SyncedPhotosFace.uncached.getter();
      int64_t v91 = *(void *)(v90 + 16);
      if (v91)
      {
        uint64_t v92 = *(void *)(v0 + 272);
        *(void *)(v0 + 216) = _swiftEmptyArrayStorage;
        sub_100054824(0, v91, 0);
        unint64_t v93 = v90 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
        uint64_t v94 = *(void *)(v92 + 72);
        uint64_t v95 = *(void (**)(void, unint64_t, void))(v92 + 16);
        do
        {
          v95(*(void *)(v0 + 280), v93, *(void *)(v0 + 264));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v97 = *(void *)(v0 + 272);
          uint64_t v96 = *(void *)(v0 + 280);
          uint64_t v98 = *(void *)(v0 + 264);
          StoredPhoto.localIdentifier.getter();
          swift_release();
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v96, v98);
          uint64_t v99 = *(void *)(v0 + 216);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054824(0, *(void *)(v99 + 16) + 1, 1);
            uint64_t v99 = *v75;
          }
          unint64_t v101 = *(void *)(v99 + 16);
          unint64_t v100 = *(void *)(v99 + 24);
          if (v101 >= v100 >> 1)
          {
            sub_100054824(v100 > 1, v101 + 1, 1);
            uint64_t v99 = *v75;
          }
          uint64_t v103 = *(void *)(v0 + 424);
          uint64_t v102 = *(void *)(v0 + 432);
          uint64_t v104 = *(void *)(v0 + 416);
          *(void *)(v99 + 16) = v101 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v103 + 32))(v99+ ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80))+ *(void *)(v103 + 72) * v101, v102, v104);
          *(void *)(v0 + 216) = v99;
          v93 += v94;
          --v91;
        }
        while (v91);
      }
      swift_bridgeObjectRelease();
      swift_release();
      v229 = (void *)(v0 + 856);
      os_log_t logb = *(os_log_t *)(v0 + 672);
      uint64_t v212 = *(void (**)(os_log_t, uint64_t))(v0 + 856);
      uint64_t v114 = *(void *)(v0 + 616);
      uint64_t v113 = v225;
      v225(*(void *)(v0 + 512), *(void *)(v0 + 464));
      uint64_t v115 = Array.description.getter();
      unint64_t v117 = v116;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 224) = sub_100007E88(v115, v117, v222);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v219, v217, "Caching %ld for face %s, photos = %s", (uint8_t *)v234, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v212(logb, v114);
    }
    else
    {
      v229 = (void *)(v0 + 888);
      v235 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
      uint64_t v108 = *(void *)(v0 + 672);
      uint64_t v109 = *(void *)(v0 + 616);
      uint64_t v110 = *(void *)(v0 + 528);
      uint64_t v111 = *(void *)(v0 + 520);
      uint64_t v112 = *(void *)(v0 + 464);
      uint64_t v113 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v113(*(void *)(v0 + 512), v112);
      v113(v111, v112);
      v113(v110, v112);

      v235(v108, v109);
    }
    *(void *)(v0 + 944) = *v229;
    *(void *)(v0 + 936) = v113;
    *(void *)(v0 + 952) = *(void *)(*(void *)(v0 + 256) + 104);
    *(void *)(v0 + 960) = SyncedPhotosFace.uncached.getter();
    return _swift_task_switch(sub_1000A6978, 0, 0);
  }
  (*(void (**)(void, void))(*(void *)(v0 + 568) + 8))(*(void *)(v0 + 576), *(void *)(v0 + 560));
  uint64_t v4 = *(void *)(v0 + 920);
  *(void *)(v0 + 984) = 0;
  uint64_t v5 = *(void *)(v0 + 800);
  uint64_t v6 = *(void *)(v0 + 792);
  uint64_t v7 = *(void *)(v0 + 736);
  uint64_t v8 = *(void *)(v0 + 728);
  uint64_t v9 = *(void *)(v0 + 344);
  *(void *)(v0 + 992) = sub_1000CD730(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  swift_bridgeObjectRetain();
  static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)swift_task_alloc();
  *uint64_t v10 = v9;
  v10[1] = v6;
  v10[2] = v8;
  v10[3] = v5;
  v10[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000C9E5C(v12, KeyPath, (uint64_t *)&unk_1000F3A80, (void (*)(BOOL, uint64_t, uint64_t))sub_1000549A8);
  swift_release();
  swift_bridgeObjectRelease_n();
  uint64_t v14 = *(void *)(v0 + 800);
  uint64_t v15 = *(void *)(v0 + 792);
  uint64_t v16 = *(void *)(v0 + 736);
  uint64_t v17 = *(void *)(v0 + 728);
  uint64_t v18 = *(void *)(v0 + 344);
  uint64_t v19 = (void *)swift_task_alloc();
  *uint64_t v19 = v18;
  v19[1] = v15;
  v19[2] = v17;
  v19[3] = v14;
  v19[4] = v16;
  uint64_t v20 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v21 = sub_1000CD258((uint64_t)v13, v20);
  *(void *)(v0 + 1000) = v21;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v22, v23))
  {
    uint64_t v105 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v106 = *(void *)(v0 + 656);
    uint64_t v107 = *(void *)(v0 + 616);
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v105(v106, v107);
    goto LABEL_55;
  }
  os_log_type_t v208 = v23;
  log = v22;
  uint64_t v24 = swift_slowAlloc();
  uint64_t v238 = swift_slowAlloc();
  *(_DWORD *)uint64_t v24 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v25 = *(void *)(v21 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 136) = v25;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v24 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v26 = PhotosFaceType.description.getter();
  *(void *)(v0 + 144) = sub_100007E88(v26, v27, &v238);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v24 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  int64_t v28 = *(void *)(v21 + 16);
  if (!v28)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_54:
    uint64_t v230 = *(void *)(v0 + 656);
    v236 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v118 = *(void *)(v0 + 616);
    uint64_t v119 = Array.description.getter();
    uint64_t v120 = (uint8_t *)v24;
    unint64_t v122 = v121;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 160) = sub_100007E88(v119, v122, &v238);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v208, "Received %ld %s: %s", v120, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v236(v230, v118);
LABEL_55:
    unint64_t v54 = *(void *)(v0 + 352);
    uint64_t v49 = *(void **)(v0 + 304);
    uint64_t v123 = *(void *)(v0 + 312);
    char v124 = *(unsigned char *)(v21 + 32);
    *(unsigned char *)(v0 + 1245) = v124;
    uint64_t v125 = -1;
    uint64_t v126 = -1 << v124;
    if (-(-1 << v124) < 64) {
      uint64_t v125 = ~(-1 << -(char)(-1 << v124));
    }
    unint64_t v127 = v125 & *(void *)(v21 + 64);
    uint64_t v38 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v123 + 56);
    uint64_t v48 = *(void (**)(void, void))(v0 + 856);
    *(void *)(v0 + 1032) = v48;
    *(void *)(v0 + 1024) = v48;
    *(void *)(v0 + 1016) = v48;
    *(void *)(v0 + 1008) = v48;
    swift_bridgeObjectRetain();
    if (v127)
    {
      uint64_t v128 = 0;
      unint64_t v129 = __clz(__rbit64(v127));
      uint64_t v130 = (v127 - 1) & v127;
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
LABEL_59:
      uint64_t v131 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(v54 + 16))(v131, v43[6] + *(void *)(v54 + 72) * v129, *(void *)(v0 + 344));
      *(void *)(v131 + *((int *)v49 + 12)) = *(void *)(v43[7] + 8 * v129);
      (*v38)(v131, 0, 1, v49);
      swift_bridgeObjectRetain();
      goto LABEL_66;
    }
    unint64_t v51 = 63 - v126;
    if ((unint64_t)(63 - v126) <= 0x7F)
    {
      uint64_t v128 = 0;
    }
    else
    {
      uint64_t v43 = *(uint64_t **)(v0 + 1000);
      unint64_t v132 = v43[9];
      if (v132)
      {
        uint64_t v128 = 1;
LABEL_63:
        uint64_t v130 = (v132 - 1) & v132;
        unint64_t v129 = __clz(__rbit64(v132)) + (v128 << 6);
        goto LABEL_59;
      }
      if (v51 < 0xC0)
      {
        uint64_t v128 = 1;
      }
      else
      {
        unint64_t v132 = v43[10];
        if (v132)
        {
          uint64_t v128 = 2;
          goto LABEL_63;
        }
        if (v51 < 0x100)
        {
          uint64_t v128 = 2;
        }
        else
        {
          unint64_t v132 = v43[11];
          if (v132)
          {
            uint64_t v128 = 3;
            goto LABEL_63;
          }
LABEL_108:
          if (v51 < 0x140)
          {
            uint64_t v128 = 3;
          }
          else
          {
            unint64_t v132 = v43[12];
            if (v132)
            {
              uint64_t v128 = 4;
              goto LABEL_63;
            }
            uint64_t v200 = 0;
            uint64_t v201 = v51 >> 6;
            uint64_t v202 = 5;
            if (v201 > 5) {
              uint64_t v202 = v201;
            }
            uint64_t v203 = v202 - 5;
            while (v203 != v200)
            {
              unint64_t v132 = v43[v200++ + 13];
              if (v132)
              {
                uint64_t v128 = v200 + 4;
                goto LABEL_63;
              }
            }
            uint64_t v128 = v201 - 1;
          }
        }
      }
    }
    (*v38)(*(void *)(v0 + 288), 1, 1, v49);
    uint64_t v130 = 0;
LABEL_66:
    *(void *)(v0 + 1048) = v130;
    *(void *)(v0 + 1040) = v128;
    uint64_t v133 = *(void *)(v0 + 304);
    uint64_t v134 = *(void *)(v0 + 312);
    uint64_t v135 = *(void *)(v0 + 296);
    sub_100055708(*(void *)(v0 + 288), v135, &qword_1000F40E0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v135, 1, v133) == 1)
    {
      uint64_t v136 = *(void *)(v0 + 1000);
      swift_release();
      swift_release();
      uint64_t v137 = *(void *)(v136 + 16);
      swift_bridgeObjectRelease();
      if (v137) {
        sub_100009944(*(unsigned char *)(v0 + 1244));
      }
      uint64_t v138 = *(void *)(v0 + 704);
      uint64_t v139 = *(void *)(v0 + 696);
      uint64_t v140 = *(void *)(v0 + 688);
      uint64_t v141 = *(void *)(v0 + 608);
      uint64_t v142 = *(void *)(v0 + 592);
      uint64_t v143 = *(void *)(v0 + 584);
      if (*(void *)(v0 + 984))
      {
        swift_willThrow();
        (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v141, v143);
      }
      else
      {
        (*(void (**)(void, void))(v142 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
      }
      (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v138, v140);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v144 = *(uint64_t (**)(void))(v0 + 8);
      return v144();
    }
    else
    {
      uint64_t v146 = *(void *)(v0 + 392);
      uint64_t v145 = *(void *)(v0 + 400);
      uint64_t v147 = *(void *)(v0 + 344);
      uint64_t v148 = *(void *)(v0 + 352);
      uint64_t v149 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v149;
      (*(void (**)(uint64_t))(v148 + 32))(v145);
      static Log.session.getter();
      uint64_t v150 = *(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 16);
      *(void *)(v0 + 1064) = v150;
      *(void *)(v0 + 1072) = (v148 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v150(v146, v145, v147);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v151 = Logger.logObject.getter();
      os_log_type_t v152 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v151, v152))
      {
        os_log_type_t loga = v152;
        uint64_t v218 = v149;
        v220 = (uint64_t *)(v0 + 88);
        uint64_t v153 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v221 = v153;
        *(_DWORD *)uint64_t v153 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        v213 = v151;
        v215 = v48;
        v223 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v154 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v154, v155, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v153 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v157 = *(void *)(v0 + 384);
        uint64_t v156 = *(void *)(v0 + 392);
        uint64_t v158 = *(void *)(v0 + 344);
        uint64_t v159 = *(void *)(v0 + 352);
        v150(v157, v156, v158);
        swift_release();
        int v160 = *(void (**)(uint64_t, uint64_t))(v159 + 8);
        v160(v156, v158);
        sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
        uint64_t v161 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v163 = v162;
        uint64_t v207 = v160;
        v160(v157, v158);
        *(void *)(v0 + 104) = sub_100007E88(v161, v163, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v221 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v164 = *(void *)(v0 + 800);
        uint64_t v165 = *(void *)(v0 + 792);
        uint64_t v166 = *(void *)(v0 + 736);
        uint64_t v167 = *(void *)(v0 + 728);
        uint64_t v168 = *(void *)(v0 + 344);
        uint64_t v169 = (void *)swift_task_alloc();
        void *v169 = v168;
        v169[1] = v165;
        v169[2] = v167;
        v169[3] = v164;
        v169[4] = v166;
        uint64_t v170 = swift_getKeyPath();
        swift_task_dealloc();
        int64_t v171 = *(void *)(v218 + 16);
        if (v171)
        {
          uint64_t v172 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
          sub_100054958(0, v171, 0);
          uint64_t v173 = v218 + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
          v226 = *(void (**)(void, uint64_t, void))(v172 + 16);
          uint64_t v231 = *(void *)(v172 + 72);
          do
          {
            v226(*(void *)(v0 + 504), v173, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v174 = *(void *)(v0 + 504);
            uint64_t v176 = *(void *)(v0 + 464);
            uint64_t v175 = *(void *)(v0 + 472);
            uint64_t v177 = v170;
            swift_getAtKeyPath();
            swift_release();
            uint64_t v179 = *(void *)(v0 + 16);
            uint64_t v178 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v174, v176);
            uint64_t v180 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v180 + 16) + 1, 1);
              uint64_t v180 = *v223;
            }
            unint64_t v182 = *(void *)(v180 + 16);
            unint64_t v181 = *(void *)(v180 + 24);
            if (v182 >= v181 >> 1)
            {
              sub_100054958(v181 > 1, v182 + 1, 1);
              uint64_t v180 = *v223;
            }
            *(void *)(v180 + 16) = v182 + 1;
            uint64_t v183 = v180 + 16 * v182;
            *(void *)(v183 + 32) = v179;
            *(void *)(v183 + 40) = v178;
            v173 += v231;
            --v171;
            uint64_t v170 = v177;
          }
          while (v171);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v190 = *(void *)(v0 + 648);
        uint64_t v191 = *(void *)(v0 + 616);
        uint64_t v192 = Array.description.getter();
        unint64_t v194 = v193;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v192, v194, v220);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v213, loga, "Inserting %s %s: %s", (uint8_t *)v221, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v48 = v215;
        v215(v190, v191);
        v189 = v207;
      }
      else
      {
        uint64_t v237 = *(void *)(v0 + 648);
        uint64_t v184 = *(void *)(v0 + 616);
        uint64_t v185 = *(void *)(v0 + 392);
        uint64_t v186 = *(void *)(v0 + 344);
        uint64_t v187 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v188 = v185;
        v189 = *(void (**)(uint64_t, uint64_t))(v187 + 8);
        v189(v188, v186);
        swift_release_n();
        swift_bridgeObjectRelease();

        v48(v237, v184);
      }
      *(void *)(v0 + 1088) = v48;
      *(void *)(v0 + 1080) = v189;
      uint64_t v195 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v195;
      *uint64_t v195 = v0;
      v195[1] = sub_1000A8654;
      uint64_t v196 = *(void *)(v0 + 736);
      uint64_t v197 = *(void *)(v0 + 728);
      uint64_t v198 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v198, v197, v196);
    }
  }
  uint64_t v205 = v24;
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v216 = *(void *)(v0 + 304);
  v239 = _swiftEmptyArrayStorage;
  sub_100054958(0, v28, 0);
  uint64_t v30 = sub_1000C6DEC(v21);
  uint64_t v32 = v31;
  char v34 = v33 & 1;
  v214 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v35 = v21;
  for (int64_t i = v28 - 1; ; --i)
  {
    uint64_t v37 = *(void *)(v0 + 336);
    uint64_t v36 = *(void *)(v0 + 344);
    uint64_t v38 = *(void (***)(uint64_t, uint64_t, uint64_t, void *))(v0 + 320);
    uint64_t v39 = *(void *)(v0 + 328);
    uint64_t v40 = *(int *)(v216 + 48);
    char v41 = v34 & 1;
    uint64_t v227 = v32;
    uint64_t v232 = v30;
    uint64_t v42 = sub_1000C6EF4(v37, v30, v32, v34 & 1, v35, (uint64_t (*)(void))&type metadata accessor for AlbumID);
    *(void *)(v37 + v40) = v42;
    (*v214)(v39, v37, v36);
    *(void *)(v39 + *(int *)(v216 + 48)) = v42;
    uint64_t v43 = &qword_1000F40E8;
    sub_100055708(v39, (uint64_t)v38, &qword_1000F40E8);
    swift_bridgeObjectRetain();
    sub_100016B90(v37, &qword_1000F40E8);
    uint64_t v44 = sub_1000B7B40((uint64_t)v38);
    uint64_t v46 = *(void *)(v0 + 320);
    if (v4) {
      break;
    }
    uint64_t v47 = v44;
    uint64_t v48 = v45;
    sub_100016B90(*(void *)(v0 + 320), &qword_1000F40E8);
    uint64_t v49 = v239;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v49[2] + 1, 1);
      uint64_t v49 = v239;
    }
    unint64_t v51 = v227;
    uint64_t v50 = v232;
    unint64_t v53 = v49[2];
    unint64_t v52 = v49[3];
    unint64_t v54 = v53 + 1;
    if (v53 >= v52 >> 1)
    {
      sub_100054958(v52 > 1, v53 + 1, 1);
      unint64_t v51 = v227;
      uint64_t v50 = v232;
      uint64_t v49 = v239;
    }
    v49[2] = v54;
    uint64_t v55 = &v49[2 * v53];
    v55[4] = v47;
    v55[5] = v48;
    uint64_t v35 = v21;
    if (v50 < 0 || v50 >= -(-1 << *(unsigned char *)(v21 + 32)))
    {
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
      goto LABEL_108;
    }
    if (((*(void *)(v21 + 64 + (((unint64_t)v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v50) & 1) == 0) {
      goto LABEL_106;
    }
    if (*(_DWORD *)(v21 + 36) != v51) {
      goto LABEL_107;
    }
    uint64_t v56 = _HashTable.occupiedBucket(after:)();
    if (!i)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = v205;
      goto LABEL_54;
    }
    uint64_t v30 = v56;
    uint64_t v4 = 0;
    char v34 = 0;
    uint64_t v32 = *(unsigned int *)(v21 + 36);
  }
  swift_bridgeObjectRelease();
  sub_100016B90(v46, &qword_1000F40E8);
  sub_1000CAC30(v232, v227, v41);
  return swift_release();
}

uint64_t sub_1000A5090()
{
  uint64_t v175 = v0;
  (*(void (**)(void, void))(v0[71] + 8))(v0[72], v0[70]);
  uint64_t v1 = v0[5];
  v0[123] = v1;
  uint64_t v2 = v0[100];
  uint64_t v3 = v0[99];
  uint64_t v4 = v0[92];
  uint64_t v5 = v0[91];
  uint64_t v6 = v0[43];
  v0[124] = sub_1000CD730(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  swift_bridgeObjectRetain();
  uint64_t v7 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)swift_task_alloc();
  *uint64_t v8 = v6;
  v8[1] = v3;
  v8[2] = v5;
  v8[3] = v2;
  void v8[4] = v4;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000C9E5C(v10, KeyPath, (uint64_t *)&unk_1000F3A80, (void (*)(BOOL, uint64_t, uint64_t))sub_1000549A8);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v172 = v0;
  if (v1)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *((void *)v11 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      v172[21] = v15;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v16 = *(void *)(v7 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v0 = v172;
      v172[22] = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v14, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    ((void (*)(void, void))v0[107])(v0[83], v0[77]);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v0[100];
  uint64_t v18 = v0[99];
  uint64_t v19 = v0[92];
  uint64_t v20 = v0[91];
  uint64_t v21 = v172[43];
  uint64_t v22 = (void *)swift_task_alloc();
  *uint64_t v22 = v21;
  v22[1] = v18;
  os_log_type_t v23 = v172;
  void v22[2] = v20;
  v22[3] = v17;
  v22[4] = v19;
  uint64_t v24 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v25 = sub_1000CD258((uint64_t)v11, v24);
  v172[125] = v25;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v26, v27))
  {
    uint64_t v58 = (void (*)(uint64_t, uint64_t))v172[107];
    uint64_t v59 = v172[82];
    uint64_t v60 = v172[77];
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v58(v59, v60);
    goto LABEL_34;
  }
  os_log_type_t v153 = v27;
  log = v26;
  uint64_t v164 = (void (*)(void, void))(v172 + 19);
  uint64_t v28 = swift_slowAlloc();
  uint64_t v173 = swift_slowAlloc();
  uint64_t v156 = (uint8_t *)v28;
  *(_DWORD *)uint64_t v28 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v29 = *(void *)(v25 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  v172[17] = v29;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v28 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v30 = PhotosFaceType.description.getter();
  v172[18] = sub_100007E88(v30, v31, &v173);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v28 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v25;
  int64_t v33 = *(void *)(v25 + 16);
  if (!v33)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v25 = (uint64_t)v32;
    uint64_t v61 = v23[82];
    uint64_t v62 = v23[77];
    int64_t v171 = (void (*)(uint64_t, uint64_t))v23[107];
    uint64_t v63 = Array.description.getter();
    unint64_t v65 = v64;
    swift_bridgeObjectRelease();
    v172[20] = sub_100007E88(v63, v65, &v173);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    os_log_type_t v23 = v172;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v153, "Received %ld %s: %s", v156, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v171(v61, v62);
LABEL_34:
    uint64_t v46 = (uint64_t *)v23[44];
    uint64_t v50 = (void *)v23[38];
    uint64_t v66 = v23[39];
    char v67 = *(unsigned char *)(v25 + 32);
    *((unsigned char *)v23 + 1245) = v67;
    uint64_t v68 = -1;
    uint64_t v69 = -1 << v67;
    if (-(-1 << v67) < 64) {
      uint64_t v68 = ~(-1 << -(char)(-1 << v67));
    }
    unint64_t v70 = v68 & *(void *)(v25 + 64);
    uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v66 + 56);
    uint64_t v71 = (void (*)(void, void))v23[107];
    v23[129] = v71;
    v23[128] = v71;
    v23[127] = v71;
    v23[126] = v71;
    swift_bridgeObjectRetain();
    uint64_t v164 = v71;
    if (v70)
    {
      uint64_t v72 = 0;
      unint64_t v73 = __clz(__rbit64(v70));
      uint64_t v74 = (v70 - 1) & v70;
      uint64_t v55 = (void *)v23[125];
LABEL_38:
      uint64_t v75 = v23[36];
      ((void (*)(uint64_t, unint64_t, void))v46[2])(v75, v55[6] + v46[9] * v73, v23[43]);
      *(void *)(v75 + *((int *)v50 + 12)) = *(void *)(v55[7] + 8 * v73);
      (*v32)(v75, 0, 1, v50);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v52 = 63 - v69;
    if ((unint64_t)(63 - v69) <= 0x7F)
    {
      uint64_t v72 = 0;
      goto LABEL_44;
    }
    uint64_t v55 = (void *)v23[125];
    unint64_t v76 = v55[9];
    if (v76)
    {
      uint64_t v72 = 1;
    }
    else
    {
      if (v52 < 0xC0)
      {
        uint64_t v72 = 1;
        goto LABEL_44;
      }
      unint64_t v76 = v55[10];
      if (v76)
      {
        uint64_t v72 = 2;
      }
      else
      {
        if (v52 < 0x100)
        {
          uint64_t v72 = 2;
          goto LABEL_44;
        }
        unint64_t v76 = v55[11];
        if (!v76) {
          goto LABEL_88;
        }
        uint64_t v72 = 3;
      }
    }
LABEL_42:
    uint64_t v74 = (v76 - 1) & v76;
    unint64_t v73 = __clz(__rbit64(v76)) + (v72 << 6);
    goto LABEL_38;
  }
  uint64_t v34 = v172[44];
  uint64_t v162 = v172[38];
  uint64_t v174 = _swiftEmptyArrayStorage;
  sub_100054958(0, v33, 0);
  uint64_t v35 = sub_1000C6DEC(v25);
  unint64_t v37 = v36;
  char v39 = v38 & 1;
  int v160 = (void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16);
  int64_t v166 = v33 - 1;
  os_log_type_t v23 = (void *)v162;
  while (1)
  {
    uint64_t v41 = v172[42];
    uint64_t v40 = v172[43];
    uint64_t v42 = v172[40];
    uint64_t v43 = v172[41];
    uint64_t v44 = *(int *)(v162 + 48);
    unint64_t v169 = v37;
    uint64_t v170 = v35;
    uint64_t v45 = sub_1000C6EF4(v41, v35, v37, v39 & 1, (uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for AlbumID);
    *(void *)(v41 + v44) = v45;
    (*v160)(v43, v41, v40);
    *(void *)(v43 + *(int *)(v162 + 48)) = v45;
    uint64_t v46 = &qword_1000F40E8;
    sub_100055708(v43, v42, &qword_1000F40E8);
    swift_bridgeObjectRetain();
    sub_100016B90(v41, &qword_1000F40E8);
    uint64_t v47 = sub_1000B7B40(v42);
    uint64_t v49 = v48;
    sub_100016B90(v172[40], &qword_1000F40E8);
    uint64_t v50 = v174;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v50[2] + 1, 1);
      uint64_t v50 = v174;
    }
    unint64_t v52 = v169;
    uint64_t v51 = v170;
    unint64_t v54 = v50[2];
    unint64_t v53 = v50[3];
    uint64_t v55 = (void *)(v54 + 1);
    if (v54 >= v53 >> 1)
    {
      sub_100054958(v53 > 1, v54 + 1, 1);
      unint64_t v52 = v169;
      uint64_t v51 = v170;
      uint64_t v50 = v174;
    }
    v50[2] = v55;
    uint64_t v56 = &v50[2 * v54];
    v56[4] = v47;
    v56[5] = v49;
    uint64_t v32 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v25;
    if (v51 < 0 || v51 >= -(-1 << *(unsigned char *)(v25 + 32))) {
      break;
    }
    if (((*(void *)(v25 + 64 + (((unint64_t)v51 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
      goto LABEL_86;
    }
    if (*(_DWORD *)(v25 + 36) != v52) {
      goto LABEL_87;
    }
    uint64_t v57 = _HashTable.occupiedBucket(after:)();
    if (!v166)
    {
      swift_release();
      swift_bridgeObjectRelease();
      os_log_type_t v23 = v172;
      goto LABEL_33;
    }
    uint64_t v35 = v57;
    char v39 = 0;
    unint64_t v37 = *(unsigned int *)(v25 + 36);
    --v166;
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  if (v52 < 0x140)
  {
    uint64_t v72 = 3;
  }
  else
  {
    unint64_t v76 = v55[12];
    if (v76)
    {
      uint64_t v72 = 4;
      goto LABEL_42;
    }
    uint64_t v149 = 0;
    uint64_t v150 = v52 >> 6;
    uint64_t v151 = 5;
    if (v150 > 5) {
      uint64_t v151 = v150;
    }
    uint64_t v152 = v151 - 5;
    while (v152 != v149)
    {
      unint64_t v76 = v55[v149++ + 13];
      if (v76)
      {
        uint64_t v72 = v149 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v72 = v150 - 1;
  }
LABEL_44:
  (*v32)(v23[36], 1, 1, v50);
  uint64_t v74 = 0;
LABEL_45:
  v23[131] = v74;
  v23[130] = v72;
  uint64_t v77 = v23[38];
  uint64_t v78 = v23[39];
  uint64_t v79 = v23[37];
  sub_100055708(v23[36], v79, &qword_1000F40E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v79, 1, v77) == 1)
  {
    uint64_t v80 = v23[125];
    swift_release();
    swift_release();
    uint64_t v81 = *(void *)(v80 + 16);
    swift_bridgeObjectRelease();
    if (v81) {
      sub_100009944(*((unsigned char *)v23 + 1244));
    }
    uint64_t v82 = v23[88];
    uint64_t v83 = v23[87];
    uint64_t v84 = v23[86];
    uint64_t v85 = v23[76];
    uint64_t v86 = v23[74];
    uint64_t v87 = v23[73];
    if (v23[123])
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    }
    else
    {
      (*(void (**)(void, void))(v86 + 8))(v23[76], v23[73]);
    }
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v82, v84);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v88 = (uint64_t (*)(void))v23[1];
    return v88();
  }
  else
  {
    uint64_t v90 = v23[49];
    uint64_t v89 = v23[50];
    int64_t v91 = v23;
    uint64_t v93 = v23[43];
    uint64_t v92 = v23[44];
    uint64_t v94 = *(void *)(v23[37] + *(int *)(v23[38] + 48));
    v91[132] = v94;
    (*(void (**)(uint64_t))(v92 + 32))(v89);
    static Log.session.getter();
    uint64_t v95 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
    v91[133] = v95;
    v91[134] = (v92 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v95(v90, v89, v93);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v96 = Logger.logObject.getter();
    os_log_type_t v97 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v96, v97))
    {
      uint64_t v167 = v95;
      os_log_type_t v157 = v97;
      uint64_t v159 = v94;
      uint64_t v161 = v91 + 11;
      uint64_t v98 = swift_slowAlloc();
      v91[11] = swift_slowAlloc();
      uint64_t v163 = v98;
      *(_DWORD *)uint64_t v98 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v158 = v96;
      uint64_t v165 = v172 + 14;
      swift_release();
      swift_release();
      uint64_t v99 = PhotosFaceType.description.getter();
      v172[12] = sub_100007E88(v99, v100, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v98 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      unint64_t v101 = v172;
      uint64_t v103 = v172[48];
      uint64_t v102 = v172[49];
      uint64_t v105 = v172[43];
      uint64_t v104 = v172[44];
      v167(v103, v102, v105);
      swift_release();
      uint64_t v106 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
      v106(v102, v105);
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v107 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v109 = v108;
      uint64_t v154 = v106;
      v106(v103, v105);
      v172[13] = sub_100007E88(v107, v109, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v163 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v110 = v172[100];
      uint64_t v111 = v172[99];
      uint64_t v112 = v172[92];
      uint64_t v113 = v172[91];
      uint64_t v114 = v172[43];
      uint64_t v115 = (void *)swift_task_alloc();
      *uint64_t v115 = v114;
      v115[1] = v111;
      v115[2] = v113;
      v115[3] = v110;
      v115[4] = v112;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v116 = *(void *)(v159 + 16);
      if (v116)
      {
        uint64_t v117 = v172[59];
        v172[14] = _swiftEmptyArrayStorage;
        sub_100054958(0, v116, 0);
        uint64_t v118 = v159 + ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80));
        uint64_t v168 = *(void *)(v117 + 72);
        uint64_t v119 = *(void (**)(void, uint64_t, void))(v117 + 16);
        do
        {
          v119(v172[63], v118, v172[58]);
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v120 = v172[63];
          uint64_t v121 = v172[58];
          uint64_t v122 = v172[59];
          swift_getAtKeyPath();
          swift_release();
          uint64_t v123 = v172[2];
          uint64_t v124 = v172[3];
          (*(void (**)(uint64_t, uint64_t))(v122 + 8))(v120, v121);
          uint64_t v125 = v172[14];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v125 + 16) + 1, 1);
            uint64_t v125 = *v165;
          }
          unint64_t v127 = *(void *)(v125 + 16);
          unint64_t v126 = *(void *)(v125 + 24);
          if (v127 >= v126 >> 1)
          {
            sub_100054958(v126 > 1, v127 + 1, 1);
            uint64_t v125 = *v165;
          }
          *(void *)(v125 + 16) = v127 + 1;
          uint64_t v128 = v125 + 16 * v127;
          *(void *)(v128 + 32) = v123;
          *(void *)(v128 + 40) = v124;
          v118 += v168;
          --v116;
        }
        while (v116);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        unint64_t v101 = v172;
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v139 = v101[81];
      uint64_t v140 = v101[77];
      uint64_t v141 = Array.description.getter();
      unint64_t v143 = v142;
      swift_bridgeObjectRelease();
      v101[16] = sub_100007E88(v141, v143, v161);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v158, v157, "Inserting %s %s: %s", (uint8_t *)v163, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v144 = v139;
      uint64_t v137 = v164;
      v164(v144, v140);
      uint64_t v135 = v154;
    }
    else
    {
      uint64_t v129 = v91[81];
      uint64_t v130 = v91[77];
      uint64_t v131 = v91[49];
      uint64_t v132 = v91[43];
      uint64_t v133 = v91[44];
      swift_bridgeObjectRelease();
      uint64_t v134 = v131;
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v133 + 8);
      v135(v134, v132);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v136 = v129;
      uint64_t v137 = v164;
      v164(v136, v130);
      unint64_t v101 = v91;
    }
    v101[136] = v137;
    v101[135] = v135;
    uint64_t v145 = (void *)swift_task_alloc();
    v101[137] = v145;
    void *v145 = v101;
    v145[1] = sub_1000A8654;
    uint64_t v146 = v101[92];
    uint64_t v147 = v101[91];
    uint64_t v148 = v101[50];
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v148, v147, v146);
  }
}

uint64_t sub_1000A6978()
{
  v0[23] = v0[120];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[121] = v1;
  uint64_t v2 = sub_100005CB0(&qword_1000F3DE8);
  uint64_t v3 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
  *uint64_t v1 = v0;
  v1[1] = sub_1000A6A7C;
  uint64_t v4 = v0[119];
  uint64_t v5 = v0[33];
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F4118, v4, v2, v5, v3);
}

uint64_t sub_1000A6A7C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 976) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1000A6CEC;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v3 = sub_1000A6BBC;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1000A6BBC()
{
  (*(void (**)(void, void))(v0 + 936))(*(void *)(v0 + 544), *(void *)(v0 + 464));
  uint64_t v1 = *(void *)(v0 + 944);
  *(void *)(v0 + 896) = *(void *)(v0 + 928);
  *(void *)(v0 + 888) = v1;
  uint64_t v2 = *(void *)(v0 + 768);
  uint64_t v3 = static CommunicationActor.shared.getter();
  *(void *)(v0 + 904) = v3;
  uint64_t v4 = sub_100005F48(&qword_1000F4110, &qword_1000F40F0);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 912) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1000A3034;
  uint64_t v6 = *(void *)(v0 + 560);
  uint64_t v7 = *(void *)(v0 + 552);
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v7, v3, v2, v0 + 40, v6, v4);
}

uint64_t sub_1000A6CEC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 784);
  uint64_t v2 = *(void *)(v0 + 776);
  return _swift_task_switch(sub_1000A6D54, v2, v1);
}

uint64_t sub_1000A6D54()
{
  uint64_t v178 = v0;
  uint64_t v1 = v0[72];
  uint64_t v2 = v0[71];
  uint64_t v3 = v0[70];
  ((void (*)(void, void))v0[117])(v0[68], v0[58]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = v0[122];
  v0[123] = v4;
  uint64_t v5 = v0[100];
  uint64_t v6 = v0[99];
  uint64_t v7 = v0[92];
  uint64_t v8 = v0[91];
  uint64_t v9 = v0[43];
  v0[124] = sub_1000CD730(&qword_1000F26F8, (void (*)(uint64_t))&type metadata accessor for AlbumID);
  swift_bridgeObjectRetain();
  uint64_t v10 = static SyncedPhotosFace.destreamify(_:)();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_task_alloc();
  *uint64_t v11 = v9;
  v11[1] = v6;
  void v11[2] = v8;
  v11[3] = v5;
  void v11[4] = v7;
  uint64_t KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_1000C9E5C(v13, KeyPath, (uint64_t *)&unk_1000F3A80, (void (*)(BOOL, uint64_t, uint64_t))sub_1000549A8);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v175 = v0;
  if (v4)
  {
    static Log.session.getter();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 134218240;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v18 = *((void *)v14 + 2);
      swift_release();
      swift_bridgeObjectRelease();
      v175[21] = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2048;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void *)(v10 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v0 = v175;
      v175[22] = v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "An error occurred during sync. Only %ld / %ld finished successfully.", (uint8_t *)v17, 0x16u);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    ((void (*)(void, void))v0[107])(v0[83], v0[77]);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v0[100];
  uint64_t v21 = v0[99];
  uint64_t v22 = v0[92];
  uint64_t v23 = v0[91];
  uint64_t v24 = v175[43];
  uint64_t v25 = (void *)swift_task_alloc();
  *uint64_t v25 = v24;
  v25[1] = v21;
  uint64_t v26 = v175;
  v25[2] = v23;
  v25[3] = v20;
  v25[4] = v22;
  uint64_t v27 = swift_getKeyPath();
  swift_task_dealloc();
  swift_retain();
  uint64_t v28 = sub_1000CD258((uint64_t)v14, v27);
  v175[125] = v28;
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v29, v30))
  {
    uint64_t v61 = (void (*)(uint64_t, uint64_t))v175[107];
    uint64_t v62 = v175[82];
    uint64_t v63 = v175[77];
    swift_bridgeObjectRelease_n();
    swift_release_n();

    v61(v62, v63);
    goto LABEL_34;
  }
  os_log_type_t v156 = v30;
  log = v29;
  uint64_t v167 = (void (*)(void, void))(v175 + 19);
  uint64_t v31 = swift_slowAlloc();
  uint64_t v176 = swift_slowAlloc();
  int v160 = (uint8_t *)v31;
  *(_DWORD *)uint64_t v31 = 134218498;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v32 = *(void *)(v28 + 16);
  swift_release();
  swift_bridgeObjectRelease();
  v175[17] = v32;
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  *(_WORD *)(v31 + 12) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  swift_release();
  swift_release();
  uint64_t v33 = PhotosFaceType.description.getter();
  v175[18] = sub_100007E88(v33, v34, &v176);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease();
  swift_release();
  *(_WORD *)(v31 + 22) = 2080;
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  uint64_t v35 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v28;
  int64_t v36 = *(void *)(v28 + 16);
  if (!v36)
  {
    swift_release();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v28 = (uint64_t)v35;
    uint64_t v64 = v26[82];
    uint64_t v65 = v26[77];
    uint64_t v174 = (void (*)(uint64_t, uint64_t))v26[107];
    uint64_t v66 = Array.description.getter();
    unint64_t v68 = v67;
    swift_bridgeObjectRelease();
    v175[20] = sub_100007E88(v66, v68, &v176);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v26 = v175;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v156, "Received %ld %s: %s", v160, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v174(v64, v65);
LABEL_34:
    uint64_t v49 = (uint64_t *)v26[44];
    unint64_t v53 = (void *)v26[38];
    uint64_t v69 = v26[39];
    char v70 = *(unsigned char *)(v28 + 32);
    *((unsigned char *)v26 + 1245) = v70;
    uint64_t v71 = -1;
    uint64_t v72 = -1 << v70;
    if (-(-1 << v70) < 64) {
      uint64_t v71 = ~(-1 << -(char)(-1 << v70));
    }
    unint64_t v73 = v71 & *(void *)(v28 + 64);
    uint64_t v35 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v69 + 56);
    uint64_t v74 = (void (*)(void, void))v26[107];
    v26[129] = v74;
    v26[128] = v74;
    v26[127] = v74;
    v26[126] = v74;
    swift_bridgeObjectRetain();
    uint64_t v167 = v74;
    if (v73)
    {
      uint64_t v75 = 0;
      unint64_t v76 = __clz(__rbit64(v73));
      uint64_t v77 = (v73 - 1) & v73;
      uint64_t v58 = (void *)v26[125];
LABEL_38:
      uint64_t v78 = v26[36];
      ((void (*)(uint64_t, unint64_t, void))v49[2])(v78, v58[6] + v49[9] * v76, v26[43]);
      *(void *)(v78 + *((int *)v53 + 12)) = *(void *)(v58[7] + 8 * v76);
      (*v35)(v78, 0, 1, v53);
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    unint64_t v55 = 63 - v72;
    if ((unint64_t)(63 - v72) <= 0x7F)
    {
      uint64_t v75 = 0;
      goto LABEL_44;
    }
    uint64_t v58 = (void *)v26[125];
    unint64_t v79 = v58[9];
    if (v79)
    {
      uint64_t v75 = 1;
    }
    else
    {
      if (v55 < 0xC0)
      {
        uint64_t v75 = 1;
        goto LABEL_44;
      }
      unint64_t v79 = v58[10];
      if (v79)
      {
        uint64_t v75 = 2;
      }
      else
      {
        if (v55 < 0x100)
        {
          uint64_t v75 = 2;
          goto LABEL_44;
        }
        unint64_t v79 = v58[11];
        if (!v79) {
          goto LABEL_88;
        }
        uint64_t v75 = 3;
      }
    }
LABEL_42:
    uint64_t v77 = (v79 - 1) & v79;
    unint64_t v76 = __clz(__rbit64(v79)) + (v75 << 6);
    goto LABEL_38;
  }
  uint64_t v37 = v175[44];
  uint64_t v165 = v175[38];
  uint64_t v177 = _swiftEmptyArrayStorage;
  sub_100054958(0, v36, 0);
  uint64_t v38 = sub_1000C6DEC(v28);
  unint64_t v40 = v39;
  char v42 = v41 & 1;
  uint64_t v163 = (void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16);
  int64_t v169 = v36 - 1;
  uint64_t v26 = (void *)v165;
  while (1)
  {
    uint64_t v44 = v175[42];
    uint64_t v43 = v175[43];
    uint64_t v45 = v175[40];
    uint64_t v46 = v175[41];
    uint64_t v47 = *(int *)(v165 + 48);
    unint64_t v172 = v40;
    uint64_t v173 = v38;
    uint64_t v48 = sub_1000C6EF4(v44, v38, v40, v42 & 1, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for AlbumID);
    *(void *)(v44 + v47) = v48;
    (*v163)(v46, v44, v43);
    *(void *)(v46 + *(int *)(v165 + 48)) = v48;
    uint64_t v49 = &qword_1000F40E8;
    sub_100055708(v46, v45, &qword_1000F40E8);
    swift_bridgeObjectRetain();
    sub_100016B90(v44, &qword_1000F40E8);
    uint64_t v50 = sub_1000B7B40(v45);
    uint64_t v52 = v51;
    sub_100016B90(v175[40], &qword_1000F40E8);
    unint64_t v53 = v177;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100054958(0, v53[2] + 1, 1);
      unint64_t v53 = v177;
    }
    unint64_t v55 = v172;
    uint64_t v54 = v173;
    unint64_t v57 = v53[2];
    unint64_t v56 = v53[3];
    uint64_t v58 = (void *)(v57 + 1);
    if (v57 >= v56 >> 1)
    {
      sub_100054958(v56 > 1, v57 + 1, 1);
      unint64_t v55 = v172;
      uint64_t v54 = v173;
      unint64_t v53 = v177;
    }
    v53[2] = v58;
    uint64_t v59 = &v53[2 * v57];
    v59[4] = v50;
    v59[5] = v52;
    uint64_t v35 = (void (**)(uint64_t, uint64_t, uint64_t, void *))v28;
    if (v54 < 0 || v54 >= -(-1 << *(unsigned char *)(v28 + 32))) {
      break;
    }
    if (((*(void *)(v28 + 64 + (((unint64_t)v54 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v54) & 1) == 0) {
      goto LABEL_86;
    }
    if (*(_DWORD *)(v28 + 36) != v55) {
      goto LABEL_87;
    }
    uint64_t v60 = _HashTable.occupiedBucket(after:)();
    if (!v169)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v26 = v175;
      goto LABEL_33;
    }
    uint64_t v38 = v60;
    char v42 = 0;
    unint64_t v40 = *(unsigned int *)(v28 + 36);
    --v169;
  }
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
LABEL_88:
  if (v55 < 0x140)
  {
    uint64_t v75 = 3;
  }
  else
  {
    unint64_t v79 = v58[12];
    if (v79)
    {
      uint64_t v75 = 4;
      goto LABEL_42;
    }
    uint64_t v152 = 0;
    uint64_t v153 = v55 >> 6;
    uint64_t v154 = 5;
    if (v153 > 5) {
      uint64_t v154 = v153;
    }
    uint64_t v155 = v154 - 5;
    while (v155 != v152)
    {
      unint64_t v79 = v58[v152++ + 13];
      if (v79)
      {
        uint64_t v75 = v152 + 4;
        goto LABEL_42;
      }
    }
    uint64_t v75 = v153 - 1;
  }
LABEL_44:
  (*v35)(v26[36], 1, 1, v53);
  uint64_t v77 = 0;
LABEL_45:
  v26[131] = v77;
  v26[130] = v75;
  uint64_t v80 = v26[38];
  uint64_t v81 = v26[39];
  uint64_t v82 = v26[37];
  sub_100055708(v26[36], v82, &qword_1000F40E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48))(v82, 1, v80) == 1)
  {
    uint64_t v83 = v26[125];
    swift_release();
    swift_release();
    uint64_t v84 = *(void *)(v83 + 16);
    swift_bridgeObjectRelease();
    if (v84) {
      sub_100009944(*((unsigned char *)v26 + 1244));
    }
    uint64_t v85 = v26[88];
    uint64_t v86 = v26[87];
    uint64_t v87 = v26[86];
    uint64_t v88 = v26[76];
    uint64_t v89 = v26[74];
    uint64_t v90 = v26[73];
    if (v26[123])
    {
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v88, v90);
    }
    else
    {
      (*(void (**)(void, void))(v89 + 8))(v26[76], v26[73]);
    }
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v91 = (uint64_t (*)(void))v26[1];
    return v91();
  }
  else
  {
    uint64_t v93 = v26[49];
    uint64_t v92 = v26[50];
    uint64_t v94 = v26;
    uint64_t v96 = v26[43];
    uint64_t v95 = v26[44];
    uint64_t v97 = *(void *)(v26[37] + *(int *)(v26[38] + 48));
    v94[132] = v97;
    (*(void (**)(uint64_t))(v95 + 32))(v92);
    static Log.session.getter();
    uint64_t v98 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16);
    v94[133] = v98;
    v94[134] = (v95 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v98(v93, v92, v96);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v99 = Logger.logObject.getter();
    os_log_type_t v100 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v170 = v98;
      os_log_type_t v159 = v100;
      uint64_t v162 = v97;
      uint64_t v164 = v94 + 11;
      uint64_t v101 = swift_slowAlloc();
      v94[11] = swift_slowAlloc();
      uint64_t v166 = v101;
      *(_DWORD *)uint64_t v101 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v161 = v99;
      uint64_t v168 = v175 + 14;
      swift_release();
      swift_release();
      uint64_t v102 = PhotosFaceType.description.getter();
      v175[12] = sub_100007E88(v102, v103, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v101 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v104 = v175;
      uint64_t v106 = v175[48];
      uint64_t v105 = v175[49];
      uint64_t v108 = v175[43];
      uint64_t v107 = v175[44];
      v170(v106, v105, v108);
      swift_release();
      unint64_t v109 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
      v109(v105, v108);
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v112 = v111;
      os_log_type_t v157 = v109;
      v109(v106, v108);
      v175[13] = sub_100007E88(v110, v112, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v166 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v113 = v175[100];
      uint64_t v114 = v175[99];
      uint64_t v115 = v175[92];
      uint64_t v116 = v175[91];
      uint64_t v117 = v175[43];
      uint64_t v118 = (void *)swift_task_alloc();
      void *v118 = v117;
      v118[1] = v114;
      v118[2] = v116;
      v118[3] = v113;
      v118[4] = v115;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v119 = *(void *)(v162 + 16);
      if (v119)
      {
        uint64_t v120 = v175[59];
        v175[14] = _swiftEmptyArrayStorage;
        sub_100054958(0, v119, 0);
        uint64_t v121 = v162 + ((*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80));
        uint64_t v171 = *(void *)(v120 + 72);
        uint64_t v122 = *(void (**)(void, uint64_t, void))(v120 + 16);
        do
        {
          v122(v175[63], v121, v175[58]);
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v123 = v175[63];
          uint64_t v124 = v175[58];
          uint64_t v125 = v175[59];
          swift_getAtKeyPath();
          swift_release();
          uint64_t v126 = v175[2];
          uint64_t v127 = v175[3];
          (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v123, v124);
          uint64_t v128 = v175[14];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v128 + 16) + 1, 1);
            uint64_t v128 = *v168;
          }
          unint64_t v130 = *(void *)(v128 + 16);
          unint64_t v129 = *(void *)(v128 + 24);
          if (v130 >= v129 >> 1)
          {
            sub_100054958(v129 > 1, v130 + 1, 1);
            uint64_t v128 = *v168;
          }
          *(void *)(v128 + 16) = v130 + 1;
          uint64_t v131 = v128 + 16 * v130;
          *(void *)(v131 + 32) = v126;
          *(void *)(v131 + 40) = v127;
          v121 += v171;
          --v119;
        }
        while (v119);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v104 = v175;
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v142 = v104[81];
      uint64_t v143 = v104[77];
      uint64_t v144 = Array.description.getter();
      unint64_t v146 = v145;
      swift_bridgeObjectRelease();
      v104[16] = sub_100007E88(v144, v146, v164);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v161, v159, "Inserting %s %s: %s", (uint8_t *)v166, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v147 = v142;
      uint64_t v140 = v167;
      v167(v147, v143);
      uint64_t v138 = v157;
    }
    else
    {
      uint64_t v132 = v94[81];
      uint64_t v133 = v94[77];
      uint64_t v134 = v94[49];
      uint64_t v135 = v94[43];
      uint64_t v136 = v94[44];
      swift_bridgeObjectRelease();
      uint64_t v137 = v134;
      uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v136 + 8);
      v138(v137, v135);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v139 = v132;
      uint64_t v140 = v167;
      v167(v139, v133);
      uint64_t v104 = v94;
    }
    v104[136] = v140;
    v104[135] = v138;
    uint64_t v148 = (void *)swift_task_alloc();
    v104[137] = v148;
    *uint64_t v148 = v104;
    v148[1] = sub_1000A8654;
    uint64_t v149 = v104[92];
    uint64_t v150 = v104[91];
    uint64_t v151 = v104[50];
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v151, v150, v149);
  }
}

uint64_t sub_1000A8654()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_1000A9C88;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 784);
    uint64_t v4 = *(void *)(v2 + 776);
    uint64_t v5 = sub_1000A8778;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000A8778()
{
  uint64_t v1 = *(void *)(v0 + 1056);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 1112) = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 464);
    uint64_t v4 = *(void *)(v0 + 472);
    uint64_t v5 = *(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16);
    v4 += 16;
    int v6 = *(_DWORD *)(v4 + 64);
    *(_DWORD *)(v0 + 1240) = v6;
    *(void *)(v0 + 1120) = *(void *)(v4 + 56);
    *(void *)(v0 + 1128) = v5;
    uint64_t v139 = *(void (**)(void, void))(v0 + 1024);
    uint64_t v141 = *(uint64_t **)(v0 + 1080);
    *(void *)(v0 + 1136) = 0;
    unint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
    uint64_t v8 = *(void *)(v0 + 488);
    unint64_t v7 = *(void *)(v0 + 496);
    uint64_t v151 = *(void *)(v0 + 480);
    uint64_t v9 = *(void *)(v0 + 400);
    uint64_t v10 = *(void *)(v0 + 376);
    uint64_t v11 = *(void *)(v0 + 344);
    v5(v7, v1 + ((v6 + 32) & ~(unint64_t)v6), v3);
    static Log.photos.getter();
    v5(v8, v7, v3);
    v145(v10, v9, v11);
    v5(v151, v7, v3);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v142 = v13;
      unint64_t v146 = v12;
      uint64_t v148 = (uint64_t *)(v0 + 56);
      uint64_t v14 = swift_slowAlloc();
      *(void *)(v0 + 56) = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 134218498;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v15 = *(void *)(v0 + 488);
      uint64_t v17 = *(void *)(v0 + 464);
      uint64_t v16 = *(void *)(v0 + 472);
      uint64_t v18 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v137(v15, v17);
      *(void *)(v0 + 64) = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v14 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
      uint64_t v20 = *(void *)(v0 + 448);
      uint64_t v22 = *(void *)(v0 + 416);
      uint64_t v21 = *(void *)(v0 + 424);
      uint64_t v23 = *(void *)(v0 + 376);
      uint64_t v24 = *(void *)(v0 + 344);
      dispatch thunk of PhotosFaceID.id.getter();
      swift_release();
      v19(v23, v24);
      sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v27 = v26;
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
      *(void *)(v0 + 72) = sub_100007E88(v25, v27, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v135 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
      uint64_t v132 = *(void *)(v0 + 640);
      uint64_t v28 = *(void *)(v0 + 616);
      uint64_t v29 = *(void *)(v0 + 480);
      uint64_t v30 = *(void *)(v0 + 464);
      SyncedPhotosFace.photos.getter();
      swift_release();
      uint64_t v31 = v137;
      v137(v29, v30);
      uint64_t v32 = Array.description.getter();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 80) = sub_100007E88(v32, v34, v148);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v146, v142, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v14, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v135(v132, v28);
      uint64_t v35 = *(uint64_t **)(v0 + 1080);
      int64_t v36 = *(void (**)(void, void))(v0 + 1016);
    }
    else
    {
      uint64_t v149 = *(void *)(v0 + 616);
      uint64_t v152 = *(void *)(v0 + 640);
      uint64_t v51 = *(void *)(v0 + 488);
      uint64_t v52 = *(void *)(v0 + 464);
      uint64_t v53 = *(void *)(v0 + 376);
      uint64_t v54 = *(void *)(v0 + 344);
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 472) + 8);
      v31(*(void *)(v0 + 480), v52);
      ((void (*)(uint64_t, uint64_t))v141)(v53, v54);
      uint64_t v35 = v141;
      v31(v51, v52);

      int64_t v36 = v139;
      v139(v152, v149);
    }
    *(void *)(v0 + 1160) = v35;
    *(void *)(v0 + 1152) = v36;
    *(void *)(v0 + 1144) = v31;
    uint64_t v55 = SyncedPhotosFace.photos.getter();
    *(void *)(v0 + 1168) = v55;
    dispatch thunk of PhotosFaceID.id.getter();
    uint64_t v56 = SyncedPhotosFace.day.getter();
    unint64_t v57 = (void *)swift_task_alloc();
    *(void *)(v0 + 1176) = v57;
    void *v57 = v0;
    v57[1] = sub_1000AAEFC;
    uint64_t v58 = *(void *)(v0 + 736);
    uint64_t v59 = *(void *)(v0 + 728);
    uint64_t v60 = *(void *)(v0 + 440);
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v55, v60, v56, v59, v58);
  }
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void (**)(void, void))(v0 + 1088);
  uint64_t v38 = *(void (**)(void, void))(v0 + 1032);
  uint64_t v39 = *(void *)(v0 + 1024);
  uint64_t v40 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
  unint64_t v43 = *(void *)(v0 + 1048);
  int64_t v44 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = v38;
  *(void *)(v0 + 1024) = v39;
  uint64_t v140 = v38;
  if (v43)
  {
    uint64_t v45 = (v43 - 1) & v43;
    unint64_t v46 = __clz(__rbit64(v43)) | (v44 << 6);
    uint64_t v47 = *(void *)(v0 + 1000);
LABEL_12:
    uint64_t v48 = *(void *)(v0 + 304);
    uint64_t v49 = *(void *)(v0 + 312);
    uint64_t v50 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v50, *(void *)(v47 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v46, *(void *)(v0 + 344));
    *(void *)(v50 + *(int *)(v48 + 48)) = *(void *)(*(void *)(v47 + 56) + 8 * v46);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
    swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  int64_t v61 = v44 + 1;
  if (__OFADD__(v44, 1))
  {
    __break(1u);
    goto LABEL_68;
  }
  int64_t v62 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v61 < v62)
  {
    uint64_t v47 = *(void *)(v0 + 1000);
    uint64_t v63 = v47 + 64;
    unint64_t v64 = *(void *)(v47 + 64 + 8 * v61);
    if (v64)
    {
LABEL_20:
      uint64_t v45 = (v64 - 1) & v64;
      unint64_t v46 = __clz(__rbit64(v64)) + (v61 << 6);
      int64_t v44 = v61;
      goto LABEL_12;
    }
    int64_t v65 = v44 + 2;
    ++v44;
    if (v61 + 1 < v62)
    {
      unint64_t v64 = *(void *)(v63 + 8 * v65);
      if (v64)
      {
LABEL_23:
        int64_t v61 = v65;
        goto LABEL_20;
      }
      int64_t v44 = v61 + 1;
      if (v61 + 2 < v62)
      {
        unint64_t v64 = *(void *)(v63 + 8 * (v61 + 2));
        if (v64)
        {
          v61 += 2;
          goto LABEL_20;
        }
        int64_t v65 = v61 + 3;
        int64_t v44 = v61 + 2;
        if (v61 + 3 < v62)
        {
          unint64_t v64 = *(void *)(v63 + 8 * v65);
          if (v64) {
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v61 = v65 + 1;
            if (__OFADD__(v65, 1)) {
              break;
            }
            if (v61 >= v62)
            {
              int64_t v44 = v62 - 1;
              goto LABEL_34;
            }
            unint64_t v64 = *(void *)(v63 + 8 * v61);
            ++v65;
            if (v64) {
              goto LABEL_20;
            }
          }
LABEL_68:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
        }
      }
    }
  }
LABEL_34:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v45 = 0;
LABEL_35:
  *(void *)(v0 + 1048) = v45;
  *(void *)(v0 + 1040) = v44;
  uint64_t v66 = *(void *)(v0 + 304);
  uint64_t v67 = *(void *)(v0 + 312);
  uint64_t v68 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v68, &qword_1000F40E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v68, 1, v66) != 1)
  {
    uint64_t v153 = v37;
    uint64_t v144 = (uint64_t *)(v0 + 88);
    uint64_t v79 = *(void *)(v0 + 392);
    uint64_t v78 = *(void *)(v0 + 400);
    uint64_t v80 = *(void *)(v0 + 344);
    uint64_t v81 = *(void *)(v0 + 352);
    uint64_t v82 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v82;
    (*(void (**)(uint64_t))(v81 + 32))(v78);
    static Log.session.getter();
    uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
    *(void *)(v0 + 1064) = v83;
    *(void *)(v0 + 1072) = (v81 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v83(v79, v78, v80);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v84 = Logger.logObject.getter();
    os_log_type_t v85 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v84, v85))
    {
      uint64_t v150 = v83;
      os_log_type_t v133 = v85;
      uint64_t v136 = v82;
      log = v84;
      uint64_t v86 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      uint64_t v138 = v86;
      *(_DWORD *)uint64_t v86 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v143 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v87 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v87, v88, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v86 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v90 = *(void *)(v0 + 384);
      uint64_t v89 = *(void *)(v0 + 392);
      uint64_t v91 = *(void *)(v0 + 344);
      uint64_t v92 = *(void *)(v0 + 352);
      v150(v90, v89, v91);
      swift_release();
      uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v92 + 8);
      v93(v89, v91);
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v96 = v95;
      uint64_t v131 = v93;
      v93(v90, v91);
      uint64_t v97 = (uint64_t *)(v0 + 88);
      *(void *)(v0 + 104) = sub_100007E88(v94, v96, v144);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v138 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v98 = *(void *)(v0 + 800);
      uint64_t v99 = *(void *)(v0 + 792);
      uint64_t v100 = *(void *)(v0 + 736);
      uint64_t v101 = *(void *)(v0 + 728);
      uint64_t v102 = *(void *)(v0 + 344);
      unint64_t v103 = (void *)swift_task_alloc();
      *unint64_t v103 = v102;
      v103[1] = v99;
      v103[2] = v101;
      v103[3] = v98;
      v103[4] = v100;
      swift_getKeyPath();
      swift_task_dealloc();
      int64_t v104 = *(void *)(v136 + 16);
      if (v104)
      {
        uint64_t v105 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v104, 0);
        uint64_t v106 = v136 + ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80));
        uint64_t v147 = *(void *)(v105 + 72);
        uint64_t v107 = *(void (**)(void, uint64_t, void))(v105 + 16);
        do
        {
          v107(*(void *)(v0 + 504), v106, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v108 = *(void *)(v0 + 504);
          uint64_t v110 = *(void *)(v0 + 464);
          uint64_t v109 = *(void *)(v0 + 472);
          swift_getAtKeyPath();
          swift_release();
          uint64_t v112 = *(void *)(v0 + 16);
          uint64_t v111 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v108, v110);
          uint64_t v113 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v113 + 16) + 1, 1);
            uint64_t v113 = *v143;
          }
          unint64_t v115 = *(void *)(v113 + 16);
          unint64_t v114 = *(void *)(v113 + 24);
          if (v115 >= v114 >> 1)
          {
            sub_100054958(v114 > 1, v115 + 1, 1);
            uint64_t v113 = *v143;
          }
          *(void *)(v113 + 16) = v115 + 1;
          uint64_t v116 = v113 + 16 * v115;
          *(void *)(v116 + 32) = v112;
          *(void *)(v116 + 40) = v111;
          v106 += v147;
          --v104;
        }
        while (v104);
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v97 = (uint64_t *)(v0 + 88);
      }
      else
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
      }
      uint64_t v125 = *(void *)(v0 + 616);
      uint64_t v154 = *(void *)(v0 + 648);
      uint64_t v126 = Array.description.getter();
      unint64_t v128 = v127;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v126, v128, v97);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v133, "Inserting %s %s: %s", (uint8_t *)v138, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v124 = v140;
      v140(v154, v125);
      uint64_t v123 = v131;
    }
    else
    {
      uint64_t v117 = *(void *)(v0 + 648);
      uint64_t v118 = *(void *)(v0 + 616);
      uint64_t v119 = *(void *)(v0 + 392);
      uint64_t v120 = *(void *)(v0 + 344);
      uint64_t v121 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v122 = v119;
      uint64_t v123 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
      v123(v122, v120);
      swift_release_n();
      swift_bridgeObjectRelease();

      uint64_t v124 = v153;
      v153(v117, v118);
    }
    *(void *)(v0 + 1088) = v124;
    *(void *)(v0 + 1080) = v123;
    unint64_t v129 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v129;
    *unint64_t v129 = v0;
    v129[1] = sub_1000A8654;
    uint64_t v42 = *(void *)(v0 + 736);
    uint64_t v41 = *(void *)(v0 + 728);
    uint64_t v40 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v40, v41, v42);
  }
  uint64_t v69 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v70 = *(void *)(v69 + 16);
  swift_bridgeObjectRelease();
  if (v70) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v71 = *(void *)(v0 + 704);
  uint64_t v72 = *(void *)(v0 + 696);
  uint64_t v73 = *(void *)(v0 + 688);
  uint64_t v74 = *(void *)(v0 + 608);
  uint64_t v75 = *(void *)(v0 + 592);
  uint64_t v76 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v74, v76);
  }
  else
  {
    (*(void (**)(void, void))(v75 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = *(uint64_t (**)(void))(v0 + 8);
  return v77();
}

uint64_t sub_1000A9C88()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    unint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *unint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F40E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      unint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    int64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_1000A8654;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_1000AAEFC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 1184) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[55];
    uint64_t v4 = v2[52];
    uint64_t v5 = v2[53];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_1000AC5B4;
  }
  else
  {
    (*(void (**)(void, void))(v2[53] + 8))(v2[55], v2[52]);
    swift_bridgeObjectRelease();
    uint64_t v6 = v2[98];
    uint64_t v7 = v2[97];
    uint64_t v8 = sub_1000AB090;
  }
  return _swift_task_switch(v8, v7, v6);
}

uint64_t sub_1000AB090()
{
  uint64_t v1 = *(void *)(v0 + 1112);
  uint64_t v2 = *(void *)(v0 + 1136) + 1;
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void (**)(void, void))(v0 + 1152);
    uint64_t v4 = (*(uint64_t (**)(void, void))(v0 + 1080))(*(void *)(v0 + 400), *(void *)(v0 + 344));
    unint64_t v7 = *(void *)(v0 + 1048);
    int64_t v8 = *(void *)(v0 + 1040);
    *(void *)(v0 + 1032) = v3;
    *(void *)(v0 + 1024) = v3;
    if (v7)
    {
      uint64_t v9 = (v7 - 1) & v7;
      unint64_t v10 = __clz(__rbit64(v7)) | (v8 << 6);
      uint64_t v11 = *(void *)(v0 + 1000);
LABEL_4:
      uint64_t v12 = *(void *)(v0 + 304);
      uint64_t v13 = *(void *)(v0 + 312);
      uint64_t v14 = *(void *)(v0 + 288);
      (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v14, *(void *)(v11 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v10, *(void *)(v0 + 344));
      *(void *)(v14 + *(int *)(v12 + 48)) = *(void *)(*(void *)(v11 + 56) + 8 * v10);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v14, 0, 1, v12);
      swift_bridgeObjectRetain();
LABEL_35:
      *(void *)(v0 + 1048) = v9;
      *(void *)(v0 + 1040) = v8;
      uint64_t v63 = *(void *)(v0 + 304);
      uint64_t v64 = *(void *)(v0 + 312);
      uint64_t v65 = *(void *)(v0 + 296);
      sub_100055708(*(void *)(v0 + 288), v65, &qword_1000F40E0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v65, 1, v63) == 1)
      {
        uint64_t v66 = *(void *)(v0 + 1000);
        swift_release();
        swift_release();
        uint64_t v67 = *(void *)(v66 + 16);
        swift_bridgeObjectRelease();
        if (v67) {
          sub_100009944(*(unsigned char *)(v0 + 1244));
        }
        uint64_t v68 = *(void *)(v0 + 704);
        uint64_t v69 = *(void *)(v0 + 696);
        uint64_t v70 = *(void *)(v0 + 688);
        uint64_t v71 = *(void *)(v0 + 608);
        uint64_t v72 = *(void *)(v0 + 592);
        uint64_t v73 = *(void *)(v0 + 584);
        if (*(void *)(v0 + 984))
        {
          swift_willThrow();
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v71, v73);
        }
        else
        {
          (*(void (**)(void, void))(v72 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
        }
        (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
        return v74();
      }
      uint64_t v137 = v3;
      uint64_t v138 = (uint64_t *)(v0 + 88);
      uint64_t v76 = *(void *)(v0 + 392);
      uint64_t v75 = *(void *)(v0 + 400);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = *(void *)(v0 + 352);
      uint64_t v79 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
      *(void *)(v0 + 1056) = v79;
      (*(void (**)(uint64_t))(v78 + 32))(v75);
      static Log.session.getter();
      int64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16);
      *(void *)(v0 + 1064) = v80;
      *(void *)(v0 + 1072) = (v78 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      v80(v76, v75, v77);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v81, v82))
      {
        os_log_type_t v130 = v82;
        uint64_t v133 = v79;
        log = v81;
        uint64_t v83 = swift_slowAlloc();
        *(void *)(v0 + 88) = swift_slowAlloc();
        uint64_t v135 = v83;
        *(_DWORD *)uint64_t v83 = 136315650;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v141 = (uint64_t *)(v0 + 112);
        swift_release();
        swift_release();
        uint64_t v84 = PhotosFaceType.description.getter();
        *(void *)(v0 + 96) = sub_100007E88(v84, v85, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v83 + 12) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v87 = *(void *)(v0 + 384);
        uint64_t v86 = *(void *)(v0 + 392);
        uint64_t v88 = *(void *)(v0 + 344);
        uint64_t v89 = *(void *)(v0 + 352);
        v80(v87, v86, v88);
        swift_release();
        unint64_t v90 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
        v90(v86, v88);
        sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
        uint64_t v91 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v93 = v92;
        unint64_t v128 = v90;
        v90(v87, v88);
        *(void *)(v0 + 104) = sub_100007E88(v91, v93, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v135 + 22) = 2080;
        static CommunicationActor.shared.getter();
        dispatch thunk of Actor.unownedExecutor.getter();
        if ((swift_task_isCurrentExecutor() & 1) == 0) {
          swift_task_reportUnexpectedExecutor();
        }
        uint64_t v94 = *(void *)(v0 + 800);
        uint64_t v95 = *(void *)(v0 + 792);
        uint64_t v96 = *(void *)(v0 + 736);
        uint64_t v97 = *(void *)(v0 + 728);
        uint64_t v98 = *(void *)(v0 + 344);
        uint64_t v99 = (void *)swift_task_alloc();
        void *v99 = v98;
        v99[1] = v95;
        v99[2] = v97;
        v99[3] = v94;
        v99[4] = v96;
        swift_getKeyPath();
        swift_task_dealloc();
        int64_t v100 = *(void *)(v133 + 16);
        if (v100)
        {
          uint64_t v101 = *(void *)(v0 + 472);
          *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
          sub_100054958(0, v100, 0);
          uint64_t v102 = v133 + ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80));
          uint64_t v144 = *(void *)(v101 + 72);
          unint64_t v103 = *(void (**)(void, uint64_t, void))(v101 + 16);
          do
          {
            v103(*(void *)(v0 + 504), v102, *(void *)(v0 + 464));
            static CommunicationActor.shared.getter();
            dispatch thunk of Actor.unownedExecutor.getter();
            if ((swift_task_isCurrentExecutor() & 1) == 0) {
              swift_task_reportUnexpectedExecutor();
            }
            uint64_t v104 = *(void *)(v0 + 504);
            uint64_t v105 = *(void *)(v0 + 464);
            uint64_t v106 = *(void *)(v0 + 472);
            swift_getAtKeyPath();
            swift_release();
            uint64_t v108 = *(void *)(v0 + 16);
            uint64_t v107 = *(void *)(v0 + 24);
            (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v104, v105);
            uint64_t v109 = *(void *)(v0 + 112);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_100054958(0, *(void *)(v109 + 16) + 1, 1);
              uint64_t v109 = *v141;
            }
            unint64_t v111 = *(void *)(v109 + 16);
            unint64_t v110 = *(void *)(v109 + 24);
            if (v111 >= v110 >> 1)
            {
              sub_100054958(v110 > 1, v111 + 1, 1);
              uint64_t v109 = *v141;
            }
            *(void *)(v109 + 16) = v111 + 1;
            uint64_t v112 = v109 + 16 * v111;
            *(void *)(v112 + 32) = v108;
            *(void *)(v112 + 40) = v107;
            v102 += v144;
            --v100;
          }
          while (v100);
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v149 = *(void *)(v0 + 648);
        uint64_t v122 = *(void *)(v0 + 616);
        uint64_t v123 = Array.description.getter();
        unint64_t v125 = v124;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 128) = sub_100007E88(v123, v125, v138);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, log, v130, "Inserting %s %s: %s", (uint8_t *)v135, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v121 = v137;
        v137(v149, v122);
        uint64_t v119 = v128;
      }
      else
      {
        uint64_t v113 = *(void *)(v0 + 648);
        uint64_t v114 = *(void *)(v0 + 616);
        uint64_t v115 = *(void *)(v0 + 392);
        uint64_t v116 = *(void *)(v0 + 344);
        uint64_t v117 = *(void *)(v0 + 352);
        swift_bridgeObjectRelease();
        uint64_t v118 = v115;
        uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
        v119(v118, v116);
        swift_release_n();
        swift_bridgeObjectRelease();

        uint64_t v120 = v113;
        uint64_t v121 = v137;
        v137(v120, v114);
      }
      *(void *)(v0 + 1088) = v121;
      *(void *)(v0 + 1080) = v119;
      uint64_t v126 = (void *)swift_task_alloc();
      *(void *)(v0 + 1096) = v126;
      void *v126 = v0;
      v126[1] = sub_1000A8654;
      uint64_t v6 = *(void *)(v0 + 736);
      uint64_t v5 = *(void *)(v0 + 728);
      uint64_t v4 = *(void *)(v0 + 400);
      return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
    }
    int64_t v58 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v59 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
      if (v58 >= v59) {
        goto LABEL_34;
      }
      uint64_t v11 = *(void *)(v0 + 1000);
      uint64_t v60 = v11 + 64;
      unint64_t v61 = *(void *)(v11 + 64 + 8 * v58);
      if (v61)
      {
LABEL_20:
        uint64_t v9 = (v61 - 1) & v61;
        unint64_t v10 = __clz(__rbit64(v61)) + (v58 << 6);
        int64_t v8 = v58;
        goto LABEL_4;
      }
      int64_t v62 = v8 + 2;
      ++v8;
      if (v58 + 1 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61)
      {
LABEL_23:
        int64_t v58 = v62;
        goto LABEL_20;
      }
      int64_t v8 = v58 + 1;
      if (v58 + 2 >= v59) {
        goto LABEL_34;
      }
      unint64_t v61 = *(void *)(v60 + 8 * (v58 + 2));
      if (v61)
      {
        v58 += 2;
        goto LABEL_20;
      }
      int64_t v62 = v58 + 3;
      int64_t v8 = v58 + 2;
      if (v58 + 3 >= v59)
      {
LABEL_34:
        (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
        uint64_t v9 = 0;
        goto LABEL_35;
      }
      unint64_t v61 = *(void *)(v60 + 8 * v62);
      if (v61) {
        goto LABEL_23;
      }
      while (1)
      {
        int64_t v58 = v62 + 1;
        if (__OFADD__(v62, 1)) {
          break;
        }
        if (v58 >= v59)
        {
          int64_t v8 = v59 - 1;
          goto LABEL_34;
        }
        unint64_t v61 = *(void *)(v60 + 8 * v58);
        ++v62;
        if (v61) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v4, v5, v6);
  }
  uint64_t v139 = *(uint64_t **)(v0 + 1160);
  uint64_t v136 = *(void (**)(uint64_t, uint64_t))(v0 + 1152);
  uint64_t v15 = *(void *)(v0 + 1136) + 1;
  *(void *)(v0 + 1136) = v15;
  uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v0 + 1128);
  unint64_t v145 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v18 = *(void *)(v0 + 488);
  unint64_t v17 = *(void *)(v0 + 496);
  uint64_t v142 = *(void *)(v0 + 480);
  uint64_t v19 = *(void *)(v0 + 464);
  uint64_t v20 = *(void *)(v0 + 400);
  uint64_t v21 = *(void *)(v0 + 376);
  uint64_t v22 = *(void *)(v0 + 344);
  v16(v17, *(void *)(v0 + 1056)+ ((*(unsigned __int8 *)(v0 + 1240) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 1240))+ *(void *)(v0 + 1120) * v15, v19);
  static Log.photos.getter();
  v16(v18, v17, v19);
  v145(v21, v20, v22);
  v16(v142, v17, v19);
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v23, v24))
  {
    os_log_type_t v140 = v24;
    uint64_t v143 = v23;
    unint64_t v146 = (uint64_t *)(v0 + 56);
    uint64_t v25 = swift_slowAlloc();
    *(void *)(v0 + 56) = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 134218498;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = *(void *)(v0 + 488);
    uint64_t v28 = *(void *)(v0 + 464);
    uint64_t v27 = *(void *)(v0 + 472);
    uint64_t v29 = *(void *)(SyncedPhotosFace.photos.getter() + 16);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v134 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v134(v26, v28);
    *(void *)(v0 + 64) = v29;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v25 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v31 = *(void *)(v0 + 448);
    uint64_t v33 = *(void *)(v0 + 416);
    uint64_t v32 = *(void *)(v0 + 424);
    uint64_t v34 = *(void *)(v0 + 376);
    uint64_t v35 = *(void *)(v0 + 344);
    dispatch thunk of PhotosFaceID.id.getter();
    swift_release();
    v30(v34, v35);
    sub_1000CD730(&qword_1000F2A38, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v38 = v37;
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    *(void *)(v0 + 72) = sub_100007E88(v36, v38, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v132 = *(void (**)(uint64_t, uint64_t))(v0 + 1016);
    uint64_t v129 = *(void *)(v0 + 640);
    uint64_t v39 = *(void *)(v0 + 616);
    uint64_t v40 = *(void *)(v0 + 480);
    uint64_t v41 = *(void *)(v0 + 464);
    SyncedPhotosFace.photos.getter();
    swift_release();
    uint64_t v42 = v134;
    v134(v40, v41);
    uint64_t v43 = Array.description.getter();
    unint64_t v45 = v44;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_100007E88(v43, v45, v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v143, v140, "Relating photos %ld for face %s, photos = %s", (uint8_t *)v25, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v132(v129, v39);
    uint64_t v46 = *(uint64_t **)(v0 + 1080);
    uint64_t v47 = *(void (**)(void, void))(v0 + 1016);
  }
  else
  {
    uint64_t v147 = *(void *)(v0 + 616);
    uint64_t v148 = *(void *)(v0 + 640);
    uint64_t v48 = *(void *)(v0 + 488);
    uint64_t v49 = *(void *)(v0 + 464);
    uint64_t v50 = *(void *)(v0 + 376);
    uint64_t v51 = *(void *)(v0 + 344);
    uint64_t v42 = *(void (**)(void, uint64_t))(*(void *)(v0 + 472) + 8);
    v42(*(void *)(v0 + 480), v49);
    ((void (*)(uint64_t, uint64_t))v139)(v50, v51);
    uint64_t v46 = v139;
    v42(v48, v49);

    v136(v148, v147);
    uint64_t v47 = v136;
  }
  *(void *)(v0 + 1160) = v46;
  *(void *)(v0 + 1152) = v47;
  *(void *)(v0 + 1144) = v42;
  uint64_t v52 = SyncedPhotosFace.photos.getter();
  *(void *)(v0 + 1168) = v52;
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v53 = SyncedPhotosFace.day.getter();
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1176) = v54;
  *uint64_t v54 = v0;
  v54[1] = sub_1000AAEFC;
  uint64_t v55 = *(void *)(v0 + 736);
  uint64_t v56 = *(void *)(v0 + 728);
  uint64_t v57 = *(void *)(v0 + 440);
  return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v52, v57, v53, v56, v55);
}

uint64_t sub_1000AC5B4()
{
  (*(void (**)(void, void))(v0 + 1144))(*(void *)(v0 + 496), *(void *)(v0 + 464));
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064);
  uint64_t v2 = *(void *)(v0 + 400);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 344);
  static Log.photos.getter();
  v1(v3, v2, v4);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v117 = v6;
    uint64_t v122 = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v115 = (void *)swift_slowAlloc();
    *(void *)(v0 + 48) = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    int64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v9 = *(void *)(v0 + 360);
    uint64_t v10 = *(void *)(v0 + 368);
    uint64_t v11 = *(void *)(v0 + 344);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1064))(v9, v10, v11);
    swift_release();
    v8(v10, v11);
    sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v14 = v13;
    v8(v9, v11);
    *(void *)(v7 + 4) = sub_100007E88(v12, v14, (uint64_t *)(v0 + 48));
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2112;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 856);
    unint64_t v110 = *(void (**)(uint64_t, uint64_t))(v0 + 856);
    uint64_t v112 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 616);
    uint64_t v108 = *(void *)(v0 + 400);
    uint64_t v18 = *(void *)(v0 + 344);
    swift_errorRetain();
    swift_release();
    uint64_t v19 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v7 + 14) = v19;
    *uint64_t v115 = v19;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v122, v117, "Failed to update face %s: %@", (uint8_t *)v7, 0x16u);
    sub_100005CB0(qword_1000F2278);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    v110(v16, v17);
    uint64_t v20 = v112(v108, v18);
  }
  else
  {
    uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 1080);
    uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v24 = *(void *)(v0 + 632);
    uint64_t v25 = *(void *)(v0 + 616);
    uint64_t v26 = *(void *)(v0 + 400);
    uint64_t v27 = *(void *)(v0 + 344);
    v23(*(void *)(v0 + 368), v27);

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    v120(v24, v25);
    uint64_t v15 = (void (**)(uint64_t, uint64_t))(v0 + 1008);
    uint64_t v20 = v23(v26, v27);
  }
  uint64_t v28 = *v15;
  unint64_t v29 = *(void *)(v0 + 1048);
  int64_t v30 = *(void *)(v0 + 1040);
  *(void *)(v0 + 1032) = *v15;
  *(void *)(v0 + 1024) = v28;
  *(void *)(v0 + 1016) = v28;
  *(void *)(v0 + 1008) = v28;
  if (v29)
  {
    uint64_t v31 = (v29 - 1) & v29;
    unint64_t v32 = __clz(__rbit64(v29)) | (v30 << 6);
    uint64_t v33 = *(void *)(v0 + 1000);
LABEL_10:
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 288);
    (*(void (**)(uint64_t, unint64_t, void))(*(void *)(v0 + 352) + 16))(v36, *(void *)(v33 + 48) + *(void *)(*(void *)(v0 + 352) + 72) * v32, *(void *)(v0 + 344));
    *(void *)(v36 + *(int *)(v34 + 48)) = *(void *)(*(void *)(v33 + 56) + 8 * v32);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v34);
    swift_bridgeObjectRetain();
    goto LABEL_29;
  }
  int64_t v37 = v30 + 1;
  if (__OFADD__(v30, 1))
  {
    __break(1u);
    goto LABEL_61;
  }
  int64_t v38 = (unint64_t)((1 << *(unsigned char *)(v0 + 1245)) + 63) >> 6;
  if (v37 < v38)
  {
    uint64_t v33 = *(void *)(v0 + 1000);
    uint64_t v39 = v33 + 64;
    unint64_t v40 = *(void *)(v33 + 64 + 8 * v37);
    if (v40)
    {
LABEL_14:
      uint64_t v31 = (v40 - 1) & v40;
      unint64_t v32 = __clz(__rbit64(v40)) + (v37 << 6);
      int64_t v30 = v37;
      goto LABEL_10;
    }
    int64_t v41 = v30 + 2;
    ++v30;
    if (v37 + 1 < v38)
    {
      unint64_t v40 = *(void *)(v39 + 8 * v41);
      if (v40)
      {
LABEL_17:
        int64_t v37 = v41;
        goto LABEL_14;
      }
      int64_t v30 = v37 + 1;
      if (v37 + 2 < v38)
      {
        unint64_t v40 = *(void *)(v39 + 8 * (v37 + 2));
        if (v40)
        {
          v37 += 2;
          goto LABEL_14;
        }
        int64_t v41 = v37 + 3;
        int64_t v30 = v37 + 2;
        if (v37 + 3 < v38)
        {
          unint64_t v40 = *(void *)(v39 + 8 * v41);
          if (v40) {
            goto LABEL_17;
          }
          while (1)
          {
            int64_t v37 = v41 + 1;
            if (__OFADD__(v41, 1)) {
              break;
            }
            if (v37 >= v38)
            {
              int64_t v30 = v38 - 1;
              goto LABEL_28;
            }
            unint64_t v40 = *(void *)(v39 + 8 * v37);
            ++v41;
            if (v40) {
              goto LABEL_14;
            }
          }
LABEL_61:
          __break(1u);
          return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
        }
      }
    }
  }
LABEL_28:
  (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 312) + 56))(*(void *)(v0 + 288), 1, 1, *(void *)(v0 + 304));
  uint64_t v31 = 0;
LABEL_29:
  *(void *)(v0 + 1048) = v31;
  *(void *)(v0 + 1040) = v30;
  uint64_t v42 = *(void *)(v0 + 304);
  uint64_t v43 = *(void *)(v0 + 312);
  uint64_t v44 = *(void *)(v0 + 296);
  sub_100055708(*(void *)(v0 + 288), v44, &qword_1000F40E0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v44, 1, v42) != 1)
  {
    uint64_t v55 = *(void *)(v0 + 392);
    uint64_t v54 = *(void *)(v0 + 400);
    uint64_t v56 = *(void *)(v0 + 344);
    uint64_t v57 = *(void *)(v0 + 352);
    uint64_t v58 = *(void *)(*(void *)(v0 + 296) + *(int *)(*(void *)(v0 + 304) + 48));
    *(void *)(v0 + 1056) = v58;
    (*(void (**)(uint64_t))(v57 + 32))(v54);
    static Log.session.getter();
    int64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 16);
    *(void *)(v0 + 1064) = v59;
    *(void *)(v0 + 1072) = (v57 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v59(v55, v54, v56);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v60 = Logger.logObject.getter();
    os_log_type_t v61 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v118 = v59;
      os_log_type_t v106 = v61;
      uint64_t v109 = v60;
      uint64_t v113 = v58;
      uint64_t v114 = (uint64_t *)(v0 + 88);
      uint64_t v62 = swift_slowAlloc();
      *(void *)(v0 + 88) = swift_slowAlloc();
      *(_DWORD *)uint64_t v62 = 136315650;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      unint64_t v111 = v28;
      uint64_t v116 = (uint64_t *)(v0 + 112);
      swift_release();
      swift_release();
      uint64_t v63 = PhotosFaceType.description.getter();
      *(void *)(v0 + 96) = sub_100007E88(v63, v64, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v62 + 12) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v66 = *(void *)(v0 + 384);
      uint64_t v65 = *(void *)(v0 + 392);
      uint64_t v67 = *(void *)(v0 + 344);
      uint64_t v68 = *(void *)(v0 + 352);
      v118(v66, v65, v67);
      swift_release();
      uint64_t v69 = *(void (**)(uint64_t, uint64_t))(v68 + 8);
      v69(v65, v67);
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v70 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v72 = v71;
      uint64_t v105 = v69;
      v69(v66, v67);
      *(void *)(v0 + 104) = sub_100007E88(v70, v72, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v107 = (uint8_t *)v62;
      *(_WORD *)(v62 + 22) = 2080;
      static CommunicationActor.shared.getter();
      dispatch thunk of Actor.unownedExecutor.getter();
      if ((swift_task_isCurrentExecutor() & 1) == 0) {
        swift_task_reportUnexpectedExecutor();
      }
      uint64_t v73 = *(void *)(v0 + 800);
      uint64_t v74 = *(void *)(v0 + 792);
      uint64_t v75 = *(void *)(v0 + 736);
      uint64_t v76 = *(void *)(v0 + 728);
      uint64_t v77 = *(void *)(v0 + 344);
      uint64_t v78 = (void *)swift_task_alloc();
      void *v78 = v77;
      v78[1] = v74;
      v78[2] = v76;
      v78[3] = v73;
      v78[4] = v75;
      uint64_t KeyPath = swift_getKeyPath();
      swift_task_dealloc();
      int64_t v80 = *(void *)(v113 + 16);
      if (v80)
      {
        uint64_t v81 = *(void *)(v0 + 472);
        *(void *)(v0 + 112) = _swiftEmptyArrayStorage;
        sub_100054958(0, v80, 0);
        uint64_t v82 = v113 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
        uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16);
        uint64_t v121 = *(void *)(v81 + 72);
        do
        {
          v119(*(void *)(v0 + 504), v82, *(void *)(v0 + 464));
          static CommunicationActor.shared.getter();
          dispatch thunk of Actor.unownedExecutor.getter();
          if ((swift_task_isCurrentExecutor() & 1) == 0) {
            swift_task_reportUnexpectedExecutor();
          }
          uint64_t v83 = *(void *)(v0 + 504);
          uint64_t v84 = *(void *)(v0 + 464);
          uint64_t v85 = *(void *)(v0 + 472);
          uint64_t v86 = KeyPath;
          swift_getAtKeyPath();
          swift_release();
          uint64_t v88 = *(void *)(v0 + 16);
          uint64_t v87 = *(void *)(v0 + 24);
          (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v83, v84);
          uint64_t v89 = *(void *)(v0 + 112);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_100054958(0, *(void *)(v89 + 16) + 1, 1);
            uint64_t v89 = *v116;
          }
          unint64_t v91 = *(void *)(v89 + 16);
          unint64_t v90 = *(void *)(v89 + 24);
          if (v91 >= v90 >> 1)
          {
            sub_100054958(v90 > 1, v91 + 1, 1);
            uint64_t v89 = *v116;
          }
          *(void *)(v89 + 16) = v91 + 1;
          uint64_t v92 = v89 + 16 * v91;
          *(void *)(v92 + 32) = v88;
          *(void *)(v92 + 40) = v87;
          v82 += v121;
          --v80;
          uint64_t KeyPath = v86;
        }
        while (v80);
      }
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v124 = *(void *)(v0 + 648);
      uint64_t v100 = *(void *)(v0 + 616);
      uint64_t v101 = Array.description.getter();
      unint64_t v103 = v102;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 128) = sub_100007E88(v101, v103, v114);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v109, v106, "Inserting %s %s: %s", v107, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v111(v124, v100);
      uint64_t v28 = v111;
      uint64_t v98 = v105;
    }
    else
    {
      uint64_t v123 = *(void *)(v0 + 648);
      uint64_t v93 = *(void *)(v0 + 616);
      uint64_t v94 = *(void *)(v0 + 392);
      uint64_t v95 = *(void *)(v0 + 344);
      uint64_t v96 = *(void *)(v0 + 352);
      swift_bridgeObjectRelease();
      uint64_t v97 = v94;
      uint64_t v98 = *(void (**)(uint64_t, uint64_t))(v96 + 8);
      v98(v97, v95);
      swift_release_n();
      swift_bridgeObjectRelease();

      v28(v123, v93);
    }
    *(void *)(v0 + 1088) = v28;
    *(void *)(v0 + 1080) = v98;
    uint64_t v104 = (void *)swift_task_alloc();
    *(void *)(v0 + 1096) = v104;
    void *v104 = v0;
    v104[1] = sub_1000A8654;
    uint64_t v22 = *(void *)(v0 + 736);
    uint64_t v21 = *(void *)(v0 + 728);
    uint64_t v20 = *(void *)(v0 + 400);
    return dispatch thunk of PhotosFaceIDDatabase.insert(id:)(v20, v21, v22);
  }
  uint64_t v45 = *(void *)(v0 + 1000);
  swift_release();
  swift_release();
  uint64_t v46 = *(void *)(v45 + 16);
  swift_bridgeObjectRelease();
  if (v46) {
    sub_100009944(*(unsigned char *)(v0 + 1244));
  }
  uint64_t v47 = *(void *)(v0 + 704);
  uint64_t v48 = *(void *)(v0 + 696);
  uint64_t v49 = *(void *)(v0 + 688);
  uint64_t v50 = *(void *)(v0 + 608);
  uint64_t v51 = *(void *)(v0 + 592);
  uint64_t v52 = *(void *)(v0 + 584);
  if (*(void *)(v0 + 984))
  {
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  }
  else
  {
    (*(void (**)(void, void))(v51 + 8))(*(void *)(v0 + 608), *(void *)(v0 + 584));
  }
  (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v47, v49);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v53 = *(uint64_t (**)(void))(v0 + 8);
  return v53();
}

uint64_t sub_1000AD844()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1000AD8E8;
  uint64_t v2 = *(void *)(v0 + 840);
  return PhotosFaceDatabase.timePositions(for:)(v2);
}

uint64_t sub_1000AD8E8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1200) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1000ADFEC;
  }
  else
  {
    *(void *)(v4 + 1208) = a1;
    uint64_t v5 = sub_1000ADA10;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1000ADA10()
{
  uint64_t v1 = v0[150];
  uint64_t v2 = sub_1000C9738(v0[151], (uint64_t (*)(void, void, void))sub_1000C9278, v0[102]);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_100081278((uint64_t)v2);
  v0[152] = v1;
  swift_bridgeObjectRelease();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_100062D78(v4);
  swift_bridgeObjectRelease();
  os_log_type_t v6 = sub_10005F794((uint64_t)v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[153] = sub_10005F660((uint64_t)v6);
  swift_release();
  uint64_t v7 = v0[98];
  uint64_t v8 = v0[97];
  return _swift_task_switch(sub_1000ADB24, v8, v7);
}

uint64_t sub_1000ADB24()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 1224);
  *(void *)(v0 + 848) = *(void *)(v0 + 1216);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_100062D78(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  SyncFacesRequest.init(trackedFaces:cachedIdentifiers:)();
  static Log.session.getter();
  swift_retain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v23 = v4;
    uint64_t v5 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315650;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    swift_release();
    swift_release();
    uint64_t v6 = PhotosFaceType.description.getter();
    *(void *)(v0 + 232) = sub_100007E88(v6, v7, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v8 = *(void *)(v1 + 16);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 240) = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = *(void *)(v0 + 680);
    uint64_t v10 = *(void *)(v0 + 624);
    uint64_t v11 = *(void *)(v0 + 616);
    swift_bridgeObjectRetain();
    swift_release();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = Set.description.getter();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 248) = sub_100007E88(v12, v14, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v23, "Requesting %s with %ld cached photos and faces: %s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    v15(v9, v11);
  }
  else
  {
    uint64_t v16 = *(void *)(v0 + 680);
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 616);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
    v15(v16, v18);
  }
  *(void *)(v0 + 856) = v15;
  uint64_t v19 = *(void *)(v0 + 256);
  *(void *)(v0 + 864) = *(void *)(v19 + 96);
  *(unsigned char *)(v0 + 1244) = *(unsigned char *)(v19 + 16);
  *(void *)(v0 + 872) = static CommunicationActor.shared.getter();
  uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000A2B54, v21, v20);
}

uint64_t sub_1000ADFEC()
{
  swift_bridgeObjectRelease();
  v0[154] = v0[150];
  uint64_t v1 = v0[98];
  uint64_t v2 = v0[97];
  return _swift_task_switch(sub_1000AE05C, v2, v1);
}

uint64_t sub_1000AE05C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000AE2F0(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F3DF8 + dword_1000F3DF8);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_1000AE3B0(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F3F90 + dword_1000F3F90);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_1000AE470(uint64_t a1, uint64_t a2)
{
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1000F4120 + dword_1000F4120);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100005F94;
  return v7(a1, a2);
}

uint64_t sub_1000AE530(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = sub_100005CB0(&qword_1000F2E30);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100005CB0(&qword_1000F3E00);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for CommunicationActor();
  v3[22] = static CommunicationActor.shared.getter();
  v3[23] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[24] = v8;
  v3[25] = v7;
  return _swift_task_switch(sub_1000AE730, v8, v7);
}

uint64_t sub_1000AE730()
{
  uint64_t v24 = v0;
  uint64_t v1 = SyncFacesRequest.cachedIdentifiers.getter();
  uint64_t v2 = sub_100062D78(v1);
  v0[26] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = SyncFacesRequest.trackedFaces.getter();
  v0[27] = sub_100062D78(v3);
  swift_bridgeObjectRelease();
  static Log.photos.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v22 = v5;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = *(void *)(v2 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v0[6] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v21 = v0[20];
    uint64_t v9 = v0[17];
    uint64_t v8 = v0[18];
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for UUID();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = Set.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[7] = sub_100007E88(v10, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v22, "Remote device has %ld cached, and is requesting faces: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v13(v21, v9);
  }
  else
  {
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[17];
    uint64_t v16 = v0[18];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[28] = v13;
  v0[29] = static CommunicationActor.shared.getter();
  uint64_t v17 = type metadata accessor for GalleryDatabase();
  uint64_t v18 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[30] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1000AEB68;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v17, v18);
}

uint64_t sub_1000AEB68(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_1000AF1BC;
  }
  else {
    uint64_t v6 = sub_1000AECD4;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000AECD4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1000AED38, v1, v2);
}

uint64_t sub_1000AED38()
{
  unint64_t v29 = v0;
  uint64_t v1 = PhotosFaceType.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == PhotosFaceType.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v0[31];
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v7 = (char *)v0[31];
      goto LABEL_10;
    }
    uint64_t v7 = sub_1000CA14C(v0[31], v0[27]);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v0[33] = v7;
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *((void *)v7 + 2);
    swift_release();
    swift_bridgeObjectRelease();
    v0[4] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = v0[19];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v25 = v0[17];
    swift_release();
    swift_release();
    uint64_t v12 = PhotosFaceType.description.getter();
    v0[5] = sub_100007E88(v12, v13, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sending %ld %s to remote device:", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v27(v26, v25);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[17];
    swift_release_n();
    swift_bridgeObjectRelease_n();

    v14(v15, v16);
  }
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[10];
  v0[2] = v7;
  uint64_t v19 = swift_task_alloc();
  v0[34] = v19;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[35] = v20;
  uint64_t v21 = sub_100005CB0(&qword_1000F3E18);
  uint64_t v22 = sub_100005CB0(&qword_1000F3E20);
  v0[36] = v22;
  uint64_t v23 = sub_100005F48(&qword_1000F3E28, &qword_1000F3E18);
  void *v20 = v0;
  v20[1] = sub_1000AF220;
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F3E10, v19, v21, v22, v23);
}

uint64_t sub_1000AF1BC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1000CDF40, v1, v2);
}

uint64_t sub_1000AF220(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000CDEE4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000CDED0;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1000AF358(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = sub_100005CB0(&qword_1000F2E30);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100005CB0(&qword_1000F3E00);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for CommunicationActor();
  v3[22] = static CommunicationActor.shared.getter();
  v3[23] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[24] = v8;
  v3[25] = v7;
  return _swift_task_switch(sub_1000AF558, v8, v7);
}

uint64_t sub_1000AF558()
{
  uint64_t v24 = v0;
  uint64_t v1 = SyncFacesRequest.cachedIdentifiers.getter();
  uint64_t v2 = sub_100062D78(v1);
  v0[26] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = SyncFacesRequest.trackedFaces.getter();
  v0[27] = sub_100062D78(v3);
  swift_bridgeObjectRelease();
  static Log.photos.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v22 = v5;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = *(void *)(v2 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v0[6] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v21 = v0[20];
    uint64_t v9 = v0[17];
    uint64_t v8 = v0[18];
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for UUID();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = Set.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[7] = sub_100007E88(v10, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v22, "Remote device has %ld cached, and is requesting faces: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v13(v21, v9);
  }
  else
  {
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[17];
    uint64_t v16 = v0[18];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    unint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[28] = v13;
  v0[29] = static CommunicationActor.shared.getter();
  uint64_t v17 = type metadata accessor for ShuffleDatabase();
  uint64_t v18 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[30] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1000AF990;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v17, v18);
}

uint64_t sub_1000AF990(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_1000AF1BC;
  }
  else {
    uint64_t v6 = sub_1000AFAFC;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000AFAFC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1000AFB60, v1, v2);
}

uint64_t sub_1000AFB60()
{
  unint64_t v29 = v0;
  uint64_t v1 = PhotosFaceType.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == PhotosFaceType.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v0[31];
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v7 = (char *)v0[31];
      goto LABEL_10;
    }
    uint64_t v7 = sub_1000CA14C(v0[31], v0[27]);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v0[33] = v7;
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *((void *)v7 + 2);
    swift_release();
    swift_bridgeObjectRelease();
    v0[4] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = v0[19];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v25 = v0[17];
    swift_release();
    swift_release();
    uint64_t v12 = PhotosFaceType.description.getter();
    v0[5] = sub_100007E88(v12, v13, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sending %ld %s to remote device:", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v27(v26, v25);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[17];
    swift_release_n();
    swift_bridgeObjectRelease_n();

    v14(v15, v16);
  }
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[10];
  v0[2] = v7;
  uint64_t v19 = swift_task_alloc();
  v0[34] = v19;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[35] = v20;
  uint64_t v21 = sub_100005CB0(&qword_1000F3E18);
  uint64_t v22 = sub_100005CB0(&qword_1000F3E20);
  v0[36] = v22;
  uint64_t v23 = sub_100005F48(&qword_1000F3E28, &qword_1000F3E18);
  void *v20 = v0;
  v20[1] = sub_1000AFFE4;
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F3FA0, v19, v21, v22, v23);
}

uint64_t sub_1000AFFE4(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000CDEE4;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000B011C;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1000B011C()
{
  uint64_t v1 = v0[37];
  swift_release();
  uint64_t v30 = *(void *)(v1 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v23 = v0[15];
    uint64_t v24 = v0[16];
    uint64_t v25 = v0[14];
    v0[3] = _swiftEmptyArrayStorage;
    sub_100005F48(&qword_1000F3E30, &qword_1000F3E20);
    Sequence.async.getter();
    swift_bridgeObjectRelease();
    sub_100005F48(&qword_1000F3E38, &qword_1000F3E00);
    AsyncSequence<>.throwing.getter();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  uint64_t v28 = v0[12];
  uint64_t v29 = v0[37] + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = *(void *)(v29 + 8 * v2);
    swift_bridgeObjectRetain();
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_4:
    ++v2;
    sub_100080AC4((uint64_t)v8);
    if (v2 == v30)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
  }
  uint64_t v31 = v2;
  unint64_t v5 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(v28 + 72);
  unint64_t v32 = *(void (**)(void, uint64_t, void))(v28 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    v32(v0[13], v6, v0[11]);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[11];
    uint64_t v11 = SyncedPhotosFace.streamify()();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v9, v10);
    uint64_t v12 = *(void *)(v11 + 16);
    int64_t v13 = v8[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v14 <= v8[3] >> 1)
    {
      if (*(void *)(v11 + 16)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v13 <= v14) {
        int64_t v16 = v13 + v12;
      }
      else {
        int64_t v16 = v13;
      }
      uint64_t v8 = (void *)sub_1000D24C0(isUniquelyReferenced_nonNull_native, v16, 1, (unint64_t)v8);
      if (*(void *)(v11 + 16))
      {
LABEL_22:
        uint64_t v17 = v8[2];
        if ((v8[3] >> 1) - v17 < v12) {
          goto LABEL_39;
        }
        uint64_t v18 = (char *)v8 + v5 + v17 * v7;
        if (v11 + v5 < (unint64_t)&v18[v12 * v7] && (unint64_t)v18 < v11 + v5 + v12 * v7) {
          return _fatalErrorMessage(_:_:file:line:flags:)();
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v20 = v8[2];
          BOOL v21 = __OFADD__(v20, v12);
          uint64_t v22 = v20 + v12;
          if (v21) {
            goto LABEL_40;
          }
          v8[2] = v22;
        }
        goto LABEL_10;
      }
    }
    if (v12)
    {
      __break(1u);
      break;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    v6 += v7;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v2 = v31;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1000B05B8(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  uint64_t v4 = sub_100005CB0((uint64_t *)&unk_1000F3A80);
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_100005CB0(&qword_1000F4128);
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Logger();
  v3[17] = v6;
  v3[18] = *(void *)(v6 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = swift_task_alloc();
  v3[21] = type metadata accessor for CommunicationActor();
  v3[22] = static CommunicationActor.shared.getter();
  v3[23] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[24] = v8;
  v3[25] = v7;
  return _swift_task_switch(sub_1000B07B8, v8, v7);
}

uint64_t sub_1000B07B8()
{
  uint64_t v24 = v0;
  uint64_t v1 = SyncFacesRequest.cachedIdentifiers.getter();
  uint64_t v2 = sub_100062D78(v1);
  v0[26] = v2;
  swift_bridgeObjectRelease();
  uint64_t v3 = SyncFacesRequest.trackedFaces.getter();
  v0[27] = sub_100062D78(v3);
  swift_bridgeObjectRelease();
  static Log.photos.getter();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t v22 = v5;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v7 = *(void *)(v2 + 16);
    swift_release();
    swift_bridgeObjectRelease();
    v0[6] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v21 = v0[20];
    uint64_t v9 = v0[17];
    uint64_t v8 = v0[18];
    swift_bridgeObjectRetain();
    swift_release();
    type metadata accessor for UUID();
    sub_1000CD730(&qword_1000F2648, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = Set.description.getter();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[7] = sub_100007E88(v10, v12, &v23);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v22, "Remote device has %ld cached, and is requesting faces: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    int64_t v13 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v13(v21, v9);
  }
  else
  {
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[17];
    uint64_t v16 = v0[18];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    int64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[28] = v13;
  v0[29] = static CommunicationActor.shared.getter();
  uint64_t v17 = type metadata accessor for AlbumDatabase();
  uint64_t v18 = sub_1000CD730(&qword_1000F2B20, (void (*)(uint64_t))&type metadata accessor for AlbumDatabase);
  uint64_t v19 = (void *)swift_task_alloc();
  v0[30] = v19;
  *uint64_t v19 = v0;
  v19[1] = sub_1000B0BF0;
  return dispatch thunk of PhotosFaceIDDatabase.queryList()(v17, v18);
}

uint64_t sub_1000B0BF0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 248) = a1;
  *(void *)(v3 + 256) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_1000B1244;
  }
  else {
    uint64_t v6 = sub_1000B0D5C;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1000B0D5C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1000B0DC0, v1, v2);
}

uint64_t sub_1000B0DC0()
{
  uint64_t v29 = v0;
  uint64_t v1 = PhotosFaceType.rawValue.getter();
  uint64_t v3 = v2;
  if (v1 == PhotosFaceType.rawValue.getter() && v3 == v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (char *)v0[31];
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      uint64_t v7 = (char *)v0[31];
      goto LABEL_10;
    }
    uint64_t v7 = sub_1000CA6AC(v0[31], v0[27]);
  }
  swift_bridgeObjectRelease();
LABEL_10:
  v0[33] = v7;
  swift_bridgeObjectRelease();
  static Log.session.getter();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 134218242;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v11 = *((void *)v7 + 2);
    swift_release();
    swift_bridgeObjectRelease();
    v0[4] = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v26 = v0[19];
    uint64_t v27 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v25 = v0[17];
    swift_release();
    swift_release();
    uint64_t v12 = PhotosFaceType.description.getter();
    v0[5] = sub_100007E88(v12, v13, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Sending %ld %s to remote device:", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v27(v26, v25);
  }
  else
  {
    uint64_t v14 = (void (*)(uint64_t, uint64_t))v0[28];
    uint64_t v15 = v0[19];
    uint64_t v16 = v0[17];
    swift_release_n();
    swift_bridgeObjectRelease_n();

    v14(v15, v16);
  }
  uint64_t v17 = v0[26];
  uint64_t v18 = v0[10];
  v0[2] = v7;
  uint64_t v19 = swift_task_alloc();
  v0[34] = v19;
  *(void *)(v19 + 16) = v18;
  *(void *)(v19 + 24) = v17;
  uint64_t v20 = (void *)swift_task_alloc();
  v0[35] = v20;
  uint64_t v21 = sub_100005CB0(&qword_1000F4140);
  uint64_t v22 = sub_100005CB0(&qword_1000F4148);
  v0[36] = v22;
  uint64_t v23 = sub_100005F48(&qword_1000F4150, &qword_1000F4140);
  void *v20 = v0;
  v20[1] = sub_1000B1350;
  return Sequence.asyncMap<A>(predicate:)(&unk_1000F4138, v19, v21, v22, v23);
}

uint64_t sub_1000B1244()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_1000B12A8, v1, v2);
}

uint64_t sub_1000B12A8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B1350(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[37] = a1;
  v3[38] = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000B1924;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v4 = v3[24];
    uint64_t v5 = v3[25];
    char v6 = sub_1000B1488;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_1000B1488()
{
  uint64_t v1 = v0[37];
  swift_release();
  uint64_t v30 = *(void *)(v1 + 16);
  if (!v30)
  {
    swift_bridgeObjectRelease();
LABEL_34:
    uint64_t v23 = v0[15];
    uint64_t v24 = v0[16];
    uint64_t v25 = v0[14];
    v0[3] = _swiftEmptyArrayStorage;
    sub_100005F48(&qword_1000F4158, &qword_1000F4148);
    Sequence.async.getter();
    swift_bridgeObjectRelease();
    sub_100005F48(&qword_1000F4160, &qword_1000F4128);
    AsyncSequence<>.throwing.getter();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
  uint64_t v28 = v0[12];
  uint64_t v29 = v0[37] + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v3 = *(void *)(v29 + 8 * v2);
    swift_bridgeObjectRetain();
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4) {
      break;
    }
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v8 = _swiftEmptyArrayStorage;
LABEL_4:
    ++v2;
    sub_100080AE4((uint64_t)v8);
    if (v2 == v30)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_34;
    }
  }
  uint64_t v31 = v2;
  unint64_t v5 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v6 = v3 + v5;
  uint64_t v7 = *(void *)(v28 + 72);
  unint64_t v32 = *(void (**)(void, uint64_t, void))(v28 + 16);
  swift_bridgeObjectRetain();
  uint64_t v8 = _swiftEmptyArrayStorage;
  while (1)
  {
    v32(v0[13], v6, v0[11]);
    static CommunicationActor.shared.getter();
    dispatch thunk of Actor.unownedExecutor.getter();
    if ((swift_task_isCurrentExecutor() & 1) == 0) {
      swift_task_reportUnexpectedExecutor();
    }
    uint64_t v9 = v0[13];
    uint64_t v10 = v0[11];
    uint64_t v11 = SyncedPhotosFace.streamify()();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v9, v10);
    uint64_t v12 = *(void *)(v11 + 16);
    int64_t v13 = v8[2];
    int64_t v14 = v13 + v12;
    if (__OFADD__(v13, v12)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v14 <= v8[3] >> 1)
    {
      if (*(void *)(v11 + 16)) {
        goto LABEL_22;
      }
    }
    else
    {
      if (v13 <= v14) {
        int64_t v16 = v13 + v12;
      }
      else {
        int64_t v16 = v13;
      }
      uint64_t v8 = (void *)sub_1000D24D4(isUniquelyReferenced_nonNull_native, v16, 1, (unint64_t)v8);
      if (*(void *)(v11 + 16))
      {
LABEL_22:
        uint64_t v17 = v8[2];
        if ((v8[3] >> 1) - v17 < v12) {
          goto LABEL_39;
        }
        uint64_t v18 = (char *)v8 + v5 + v17 * v7;
        if (v11 + v5 < (unint64_t)&v18[v12 * v7] && (unint64_t)v18 < v11 + v5 + v12 * v7) {
          return _fatalErrorMessage(_:_:file:line:flags:)();
        }
        swift_arrayInitWithCopy();
        if (v12)
        {
          uint64_t v20 = v8[2];
          BOOL v21 = __OFADD__(v20, v12);
          uint64_t v22 = v20 + v12;
          if (v21) {
            goto LABEL_40;
          }
          v8[2] = v22;
        }
        goto LABEL_10;
      }
    }
    if (v12)
    {
      __break(1u);
      break;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    v6 += v7;
    if (!--v4)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v2 = v31;
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_1000B1924()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B19D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for ShuffleID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for CommunicationActor();
  v3[10] = static CommunicationActor.shared.getter();
  v3[11] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B1B10, v7, v6);
}

uint64_t sub_1000B1B10()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = (uint64_t *)v0[2];
  uint64_t v5 = v0[3];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v3);
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v9 = generateElements<A>(isolation:_:)();
  swift_release();
  v6[3] = sub_100005CB0(&qword_1000F2A50);
  v6[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v6 = v9;
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000B1CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for ShuffleID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for CommunicationActor();
  v3[10] = static CommunicationActor.shared.getter();
  v3[11] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B1DDC, v7, v6);
}

uint64_t sub_1000B1DDC()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = (uint64_t *)v0[2];
  uint64_t v5 = v0[3];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v3);
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v9 = generateElements<A>(isolation:_:)();
  swift_release();
  v6[3] = sub_100005CB0(&qword_1000F2A50);
  v6[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v6 = v9;
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000B1F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  uint64_t v4 = type metadata accessor for AlbumID();
  v3[5] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[6] = v5;
  v3[7] = *(void *)(v5 + 64);
  v3[8] = swift_task_alloc();
  v3[9] = type metadata accessor for CommunicationActor();
  v3[10] = static CommunicationActor.shared.getter();
  v3[11] = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B20A8, v7, v6);
}

uint64_t sub_1000B20A8()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v6 = (uint64_t *)v0[2];
  uint64_t v5 = v0[3];
  swift_release();
  static CommunicationActor.shared.getter();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v8 + v7, v1, v3);
  swift_retain();
  sub_100005CB0(&qword_1000F2A28);
  uint64_t v9 = generateElements<A>(isolation:_:)();
  swift_release();
  v6[3] = sub_100005CB0(&qword_1000F2A50);
  v6[4] = sub_100005F48(&qword_1000F2A58, &qword_1000F2A50);
  *uint64_t v6 = v9;
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1000B223C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = sub_100005CB0(&qword_1000F2A28);
  v4[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ShuffleID();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[23] = v8;
  v4[24] = *(void *)(v8 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v4[26] = v9;
  v4[27] = *(void *)(v9 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v4[30] = swift_task_alloc();
  uint64_t v10 = sub_100005CB0(&qword_1000F31F0);
  v4[31] = v10;
  v4[32] = *(void *)(v10 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F31F8);
  v4[34] = v11;
  v4[35] = *(void *)(v11 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return _swift_task_switch(sub_1000B25C4, 0, 0);
}

uint64_t sub_1000B25C4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 304) = *(void *)(v1 + 96);
  *(unsigned char *)(v0 + 468) = *(unsigned char *)(v1 + 16);
  *(void *)(v0 + 312) = type metadata accessor for CommunicationActor();
  *(void *)(v0 + 320) = static CommunicationActor.shared.getter();
  *(void *)(v0 + 328) = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B26A4, v3, v2);
}

uint64_t sub_1000B26A4()
{
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100065330(0x50802u >> (8 * *(unsigned char *)(v0 + 468)), *(void *)(v0 + 80), 1, *(void *)(v0 + 296));
  *(void *)(v0 + 336) = 0;
  swift_release();
  return _swift_task_switch(sub_1000B27B8, 0, 0);
}

uint64_t sub_1000B27B8()
{
  (*(void (**)(void, void, void))(v0[35] + 16))(v0[36], v0[37], v0[34]);
  sub_100005F48(&qword_1000F3200, &qword_1000F31F8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[43] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000B28F8;
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_1000B28F8()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1000CDF4C;
  }
  else {
    uint64_t v1 = sub_1000B2A08;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1000B2A08()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    static Log.photos.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v44 = *(void *)(v0 + 272);
      uint64_t v45 = *(void *)(v0 + 296);
      uint64_t v42 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 280);
      uint64_t v10 = *(void *)(v0 + 176);
      uint64_t v40 = *(void *)(v0 + 192);
      uint64_t v41 = *(void *)(v0 + 184);
      uint64_t v12 = *(void *)(v0 + 160);
      uint64_t v11 = *(void *)(v0 + 168);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 24) = sub_100007E88(v14, v15, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v16 = PhotosFaceType.description.getter();
      *(void *)(v0 + 32) = sub_100007E88(v16, v17, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Completed tracking %s for type %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 296);
      uint64_t v29 = *(void *)(v0 + 272);
      uint64_t v30 = *(void *)(v0 + 280);
      uint64_t v31 = v8;
      uint64_t v32 = *(void *)(v0 + 192);
      uint64_t v33 = *(void *)(v0 + 200);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v34 = *(void *)(v0 + 184);
      uint64_t v37 = *(void *)(v0 + 160);
      uint64_t v36 = *(void *)(v0 + 168);

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v46, v29);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 232);
    uint64_t v19 = *(void *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v18, v1, v2);
    uint64_t v20 = *(void *)(v19 + 104);
    sub_100005CB0(&qword_1000F2CF8);
    *(void *)(v0 + 352) = *(void *)(v3 + 72);
    int v21 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 464) = v21;
    unint64_t v22 = (v21 + 32) & ~(unint64_t)v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 360) = v23;
    *(_OWORD *)(v23 + 16) = xmmword_1000D7AB0;
    uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    *(void *)(v0 + 368) = v24;
    *(void *)(v0 + 376) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v23 + v22, v18, v2);
    *(void *)(v0 + 40) = v23;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v25;
    uint64_t v26 = sub_100005CB0(&qword_1000F3DE8);
    uint64_t v27 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
    *uint64_t v25 = v0;
    v25[1] = sub_1000B2F84;
    uint64_t v28 = *(void *)(v0 + 208);
    return Sequence.asyncMap<A>(predicate:)(&unk_1000F3EA8, v20, v26, v28, v27);
  }
}

uint64_t sub_1000B2F84(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 392) = a1;
  *(void *)(v3 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1000CDF48;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1000B30A0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000B30A0()
{
  int64_t v1 = *(void *)(v0[49] + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v0[6] = _swiftEmptyArrayStorage;
    sub_100054824(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v2 = (void *)v0[6];
    do
    {
      StoredPhoto.localIdentifier.getter();
      v0[6] = v2;
      unint64_t v5 = v2[2];
      unint64_t v4 = v2[3];
      if (v5 >= v4 >> 1)
      {
        sub_100054824(v4 > 1, v5 + 1, 1);
        uint64_t v2 = (void *)v0[6];
      }
      ++v3;
      uint64_t v7 = v0[17];
      uint64_t v6 = v0[18];
      uint64_t v8 = v0[16];
      v2[2] = v5 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))((unint64_t)v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5, v6, v8);
    }
    while (v1 != v3);
  }
  v0[51] = v2;
  sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v9 = static TestProperties.fixedDay.getter();
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = v9;
    goto LABEL_12;
  }
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  uint64_t v14 = v0[13];
  Date.init()();
  Date.timeIntervalSinceReferenceDate.getter();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  static Duration.seconds(_:)();
  static TestProperties.albumRotationEpoch.getter();
  uint64_t v15 = static Duration./ infix(_:_:)();
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v15, v16, v17, v18, v19);
  }
  uint64_t v11 = (uint64_t)v20;
LABEL_12:
  uint64_t v21 = type metadata accessor for GalleryDatabase();
  uint64_t v22 = sub_1000CD730(&qword_1000F2978, (void (*)(uint64_t))&type metadata accessor for GalleryDatabase);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[52] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1000B337C;
  uint64_t v16 = v0[19];
  uint64_t v15 = (uint64_t)v2;
  uint64_t v17 = v11;
  uint64_t v18 = v21;
  uint64_t v19 = v22;
  return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v15, v16, v17, v18, v19);
}

uint64_t sub_1000B337C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[19];
    uint64_t v6 = v2 + 16;
    uint64_t v4 = v2[16];
    uint64_t v5 = v6[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v7 = sub_1000CDF30;
  }
  else
  {
    uint64_t v8 = v2[19];
    uint64_t v9 = v2[16];
    uint64_t v10 = v2[17];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v7 = sub_1000B3500;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1000B3500()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 432) = v2;
  if (!v2)
  {
    uint64_t v26 = *(void *)(v0 + 216);
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 232), *(void *)(v0 + 208));
    uint64_t v27 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1000B28F8;
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = v0 + 16;
    uint64_t v15 = v27;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v11, v12, v13, v14, v15);
  }
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 464) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 464);
  *(void *)(v0 + 440) = 0;
  (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 224), v1 + v3, *(void *)(v0 + 208));
  sub_100005CB0(&qword_1000F2DE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000D7AB0;
  uint64_t v5 = static TestProperties.fixedDay.getter();
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 104);
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    static Duration.seconds(_:)();
    static TestProperties.albumRotationEpoch.getter();
    uint64_t v10 = static Duration./ infix(_:_:)();
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          uint64_t v5 = (uint64_t)v16;
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v11, v12, v13, v14, v15);
  }
LABEL_7:
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v21 = *(void *)(v0 + 88);
  double v20 = *(uint64_t **)(v0 + 96);
  uint64_t v22 = *(int **)(v0 + 56);
  *(void *)(v4 + 32) = v5;
  uint64_t *v20 = v4;
  v17((char *)v20 + *(int *)(v21 + 48), v18, v19);
  uint64_t v29 = (uint64_t (*)(uint64_t))((char *)v22 + *v22);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1000B37EC;
  uint64_t v24 = *(void *)(v0 + 96);
  return v29(v24);
}

uint64_t sub_1000B37EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  sub_100016B90(*(void *)(v2 + 96), &qword_1000F2A28);
  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_1000CDEE0;
  }
  else
  {
    unint64_t v3 = sub_1000B392C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B392C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 440) + 1;
  unint64_t v3 = *(void (**)(void, void))(*(void *)(v0 + 216) + 8);
  v3(*(void *)(v0 + 224), *(void *)(v0 + 208));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    v3(*(void *)(v0 + 232), *(void *)(v0 + 208));
    uint64_t v4 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1000B28F8;
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 248);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = v0 + 16;
    uint64_t v11 = v4;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v8, v9, v10, v7, v11);
  }
  uint64_t v12 = *(void *)(v0 + 440) + 1;
  *(void *)(v0 + 440) = v12;
  (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 224), *(void *)(v0 + 392)+ ((*(unsigned __int8 *)(v0 + 464) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 464))+ *(void *)(v0 + 352) * v12, *(void *)(v0 + 208));
  sub_100005CB0(&qword_1000F2DE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000D7AB0;
  uint64_t v14 = static TestProperties.fixedDay.getter();
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 104);
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    static Duration.seconds(_:)();
    static TestProperties.albumRotationEpoch.getter();
    uint64_t v6 = static Duration./ infix(_:_:)();
    if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          uint64_t v14 = (uint64_t)v19;
          goto LABEL_10;
        }
LABEL_15:
        __break(1u);
        return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v8, v9, v10, v7, v11);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_10:
  double v20 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 368);
  uint64_t v21 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 88);
  uint64_t v23 = *(uint64_t **)(v0 + 96);
  uint64_t v25 = *(int **)(v0 + 56);
  *(void *)(v13 + 32) = v14;
  *uint64_t v23 = v13;
  v20((char *)v23 + *(int *)(v24 + 48), v21, v22);
  uint64_t v29 = (uint64_t (*)(uint64_t))((char *)v25 + *v25);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1000B37EC;
  uint64_t v27 = *(void *)(v0 + 96);
  return v29(v27);
}

uint64_t sub_1000B3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = sub_100005CB0(&qword_1000F2A28);
  v4[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for ShuffleID();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[23] = v8;
  v4[24] = *(void *)(v8 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v4[26] = v9;
  v4[27] = *(void *)(v9 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v4[30] = swift_task_alloc();
  uint64_t v10 = sub_100005CB0(&qword_1000F31F0);
  v4[31] = v10;
  v4[32] = *(void *)(v10 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F31F8);
  v4[34] = v11;
  v4[35] = *(void *)(v11 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return _swift_task_switch(sub_1000B3FC4, 0, 0);
}

uint64_t sub_1000B3FC4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 304) = *(void *)(v1 + 96);
  *(unsigned char *)(v0 + 468) = *(unsigned char *)(v1 + 16);
  *(void *)(v0 + 312) = type metadata accessor for CommunicationActor();
  *(void *)(v0 + 320) = static CommunicationActor.shared.getter();
  *(void *)(v0 + 328) = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B40A4, v3, v2);
}

uint64_t sub_1000B40A4()
{
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100065330(0x50802u >> (8 * *(unsigned char *)(v0 + 468)), *(void *)(v0 + 80), 1, *(void *)(v0 + 296));
  *(void *)(v0 + 336) = 0;
  swift_release();
  return _swift_task_switch(sub_1000B41B8, 0, 0);
}

uint64_t sub_1000B41B8()
{
  (*(void (**)(void, void, void))(v0[35] + 16))(v0[36], v0[37], v0[34]);
  sub_100005F48(&qword_1000F3200, &qword_1000F31F8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[43] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000B42F8;
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_1000B42F8()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1000CDF4C;
  }
  else {
    uint64_t v1 = sub_1000B4408;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1000B4408()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    static Log.photos.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v44 = *(void *)(v0 + 272);
      uint64_t v45 = *(void *)(v0 + 296);
      uint64_t v42 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 280);
      uint64_t v10 = *(void *)(v0 + 176);
      uint64_t v40 = *(void *)(v0 + 192);
      uint64_t v41 = *(void *)(v0 + 184);
      uint64_t v12 = *(void *)(v0 + 160);
      uint64_t v11 = *(void *)(v0 + 168);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_1000CD730(&qword_1000F2838, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 24) = sub_100007E88(v14, v15, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v16 = PhotosFaceType.description.getter();
      *(void *)(v0 + 32) = sub_100007E88(v16, v17, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Completed tracking %s for type %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 296);
      uint64_t v29 = *(void *)(v0 + 272);
      uint64_t v30 = *(void *)(v0 + 280);
      uint64_t v31 = v8;
      uint64_t v32 = *(void *)(v0 + 192);
      uint64_t v33 = *(void *)(v0 + 200);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v34 = *(void *)(v0 + 184);
      uint64_t v37 = *(void *)(v0 + 160);
      uint64_t v36 = *(void *)(v0 + 168);

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v46, v29);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 232);
    uint64_t v19 = *(void *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v18, v1, v2);
    uint64_t v20 = *(void *)(v19 + 104);
    sub_100005CB0(&qword_1000F2CF8);
    *(void *)(v0 + 352) = *(void *)(v3 + 72);
    int v21 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 464) = v21;
    unint64_t v22 = (v21 + 32) & ~(unint64_t)v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 360) = v23;
    *(_OWORD *)(v23 + 16) = xmmword_1000D7AB0;
    uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    *(void *)(v0 + 368) = v24;
    *(void *)(v0 + 376) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v23 + v22, v18, v2);
    *(void *)(v0 + 40) = v23;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v25;
    uint64_t v26 = sub_100005CB0(&qword_1000F3DE8);
    uint64_t v27 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
    *uint64_t v25 = v0;
    v25[1] = sub_1000B4984;
    uint64_t v28 = *(void *)(v0 + 208);
    return Sequence.asyncMap<A>(predicate:)(&unk_1000F4000, v20, v26, v28, v27);
  }
}

uint64_t sub_1000B4984(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 392) = a1;
  *(void *)(v3 + 400) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1000CDF48;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1000B4AA0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1000B4AA0()
{
  int64_t v1 = *(void *)(v0[49] + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    v0[6] = _swiftEmptyArrayStorage;
    sub_100054824(0, v1, 0);
    uint64_t v3 = 0;
    uint64_t v2 = (void *)v0[6];
    do
    {
      StoredPhoto.localIdentifier.getter();
      v0[6] = v2;
      unint64_t v5 = v2[2];
      unint64_t v4 = v2[3];
      if (v5 >= v4 >> 1)
      {
        sub_100054824(v4 > 1, v5 + 1, 1);
        uint64_t v2 = (void *)v0[6];
      }
      ++v3;
      uint64_t v7 = v0[17];
      uint64_t v6 = v0[18];
      uint64_t v8 = v0[16];
      v2[2] = v5 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))((unint64_t)v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v5, v6, v8);
    }
    while (v1 != v3);
  }
  v0[51] = v2;
  sub_1000CD730(&qword_1000F2810, (void (*)(uint64_t))&type metadata accessor for ShuffleID);
  dispatch thunk of PhotosFaceID.id.getter();
  uint64_t v9 = static TestProperties.fixedDay.getter();
  if ((v10 & 1) == 0)
  {
    uint64_t v11 = v9;
    goto LABEL_12;
  }
  uint64_t v13 = v0[14];
  uint64_t v12 = v0[15];
  uint64_t v14 = v0[13];
  Date.init()();
  Date.timeIntervalSinceReferenceDate.getter();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  static Duration.seconds(_:)();
  static TestProperties.albumRotationEpoch.getter();
  uint64_t v15 = static Duration./ infix(_:_:)();
  if ((~*(void *)&v20 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v20 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v20 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v15, v16, v17, v18, v19);
  }
  uint64_t v11 = (uint64_t)v20;
LABEL_12:
  uint64_t v21 = type metadata accessor for ShuffleDatabase();
  uint64_t v22 = sub_1000CD730(&qword_1000F2AB8, (void (*)(uint64_t))&type metadata accessor for ShuffleDatabase);
  uint64_t v23 = (void *)swift_task_alloc();
  v0[52] = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1000B4D7C;
  uint64_t v16 = v0[19];
  uint64_t v15 = (uint64_t)v2;
  uint64_t v17 = v11;
  uint64_t v18 = v21;
  uint64_t v19 = v22;
  return dispatch thunk of PhotosFaceIDDatabase.relate(photos:to:on:)(v15, v16, v17, v18, v19);
}

uint64_t sub_1000B4D7C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[19];
    uint64_t v6 = v2 + 16;
    uint64_t v4 = v2[16];
    uint64_t v5 = v6[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    uint64_t v7 = sub_1000CDF30;
  }
  else
  {
    uint64_t v8 = v2[19];
    uint64_t v9 = v2[16];
    uint64_t v10 = v2[17];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    uint64_t v7 = sub_1000B4F00;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_1000B4F00()
{
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 432) = v2;
  if (!v2)
  {
    uint64_t v26 = *(void *)(v0 + 216);
    swift_bridgeObjectRelease();
    (*(void (**)(void, void))(v26 + 8))(*(void *)(v0 + 232), *(void *)(v0 + 208));
    uint64_t v27 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1000B42F8;
    uint64_t v10 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 248);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = v0 + 16;
    uint64_t v15 = v27;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v11, v12, v13, v14, v15);
  }
  unint64_t v3 = (*(unsigned __int8 *)(v0 + 464) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 464);
  *(void *)(v0 + 440) = 0;
  (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 224), v1 + v3, *(void *)(v0 + 208));
  sub_100005CB0(&qword_1000F2DE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1000D7AB0;
  uint64_t v5 = static TestProperties.fixedDay.getter();
  if (v6)
  {
    uint64_t v8 = *(void *)(v0 + 112);
    uint64_t v7 = *(void *)(v0 + 120);
    uint64_t v9 = *(void *)(v0 + 104);
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    static Duration.seconds(_:)();
    static TestProperties.albumRotationEpoch.getter();
    uint64_t v10 = static Duration./ infix(_:_:)();
    if ((~*(void *)&v16 & 0x7FF0000000000000) != 0)
    {
      if (v16 > -9.22337204e18)
      {
        if (v16 < 9.22337204e18)
        {
          uint64_t v5 = (uint64_t)v16;
          goto LABEL_7;
        }
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v10, v11, v12, v13, v14, v15);
  }
LABEL_7:
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 224);
  uint64_t v19 = *(void *)(v0 + 208);
  uint64_t v21 = *(void *)(v0 + 88);
  double v20 = *(uint64_t **)(v0 + 96);
  uint64_t v22 = *(int **)(v0 + 56);
  *(void *)(v4 + 32) = v5;
  uint64_t *v20 = v4;
  v17((char *)v20 + *(int *)(v21 + 48), v18, v19);
  uint64_t v29 = (uint64_t (*)(uint64_t))((char *)v22 + *v22);
  uint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v23;
  *uint64_t v23 = v0;
  v23[1] = sub_1000B51EC;
  uint64_t v24 = *(void *)(v0 + 96);
  return v29(v24);
}

uint64_t sub_1000B51EC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 456) = v0;
  swift_task_dealloc();
  sub_100016B90(*(void *)(v2 + 96), &qword_1000F2A28);
  if (v0)
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = sub_1000CDEE0;
  }
  else
  {
    unint64_t v3 = sub_1000B532C;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1000B532C()
{
  uint64_t v1 = *(void *)(v0 + 432);
  uint64_t v2 = *(void *)(v0 + 440) + 1;
  unint64_t v3 = *(void (**)(void, void))(*(void *)(v0 + 216) + 8);
  v3(*(void *)(v0 + 224), *(void *)(v0 + 208));
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    v3(*(void *)(v0 + 232), *(void *)(v0 + 208));
    uint64_t v4 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1000B42F8;
    uint64_t v6 = *(void *)(v0 + 240);
    uint64_t v7 = *(void *)(v0 + 248);
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = v0 + 16;
    uint64_t v11 = v4;
    return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v8, v9, v10, v7, v11);
  }
  uint64_t v12 = *(void *)(v0 + 440) + 1;
  *(void *)(v0 + 440) = v12;
  (*(void (**)(void, unint64_t, void))(v0 + 368))(*(void *)(v0 + 224), *(void *)(v0 + 392)+ ((*(unsigned __int8 *)(v0 + 464) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 464))+ *(void *)(v0 + 352) * v12, *(void *)(v0 + 208));
  sub_100005CB0(&qword_1000F2DE0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1000D7AB0;
  uint64_t v14 = static TestProperties.fixedDay.getter();
  if (v15)
  {
    uint64_t v17 = *(void *)(v0 + 112);
    uint64_t v16 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 104);
    Date.init()();
    Date.timeIntervalSinceReferenceDate.getter();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    static Duration.seconds(_:)();
    static TestProperties.albumRotationEpoch.getter();
    uint64_t v6 = static Duration./ infix(_:_:)();
    if ((~*(void *)&v19 & 0x7FF0000000000000) != 0)
    {
      if (v19 > -9.22337204e18)
      {
        if (v19 < 9.22337204e18)
        {
          uint64_t v14 = (uint64_t)v19;
          goto LABEL_10;
        }
LABEL_15:
        __break(1u);
        return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v6, v8, v9, v10, v7, v11);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
LABEL_10:
  double v20 = *(void (**)(char *, uint64_t, uint64_t))(v0 + 368);
  uint64_t v21 = *(void *)(v0 + 224);
  uint64_t v22 = *(void *)(v0 + 208);
  uint64_t v24 = *(void *)(v0 + 88);
  uint64_t v23 = *(uint64_t **)(v0 + 96);
  uint64_t v25 = *(int **)(v0 + 56);
  *(void *)(v13 + 32) = v14;
  *uint64_t v23 = v13;
  v20((char *)v23 + *(int *)(v24 + 48), v21, v22);
  uint64_t v29 = (uint64_t (*)(uint64_t))((char *)v25 + *v25);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 448) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1000B51EC;
  uint64_t v27 = *(void *)(v0 + 96);
  return v29(v27);
}

uint64_t sub_1000B563C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a3;
  v4[10] = a4;
  v4[7] = a1;
  v4[8] = a2;
  v4[11] = sub_100005CB0(&qword_1000F2A28);
  v4[12] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for AlbumID();
  v4[20] = v7;
  v4[21] = *(void *)(v7 - 8);
  v4[22] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Logger();
  v4[23] = v8;
  v4[24] = *(void *)(v8 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoredPhoto();
  v4[26] = v9;
  v4[27] = *(void *)(v9 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  sub_100005CB0(&qword_1000F2A00);
  v4[30] = swift_task_alloc();
  uint64_t v10 = sub_100005CB0(&qword_1000F31F0);
  v4[31] = v10;
  v4[32] = *(void *)(v10 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v11 = sub_100005CB0(&qword_1000F31F8);
  v4[34] = v11;
  v4[35] = *(void *)(v11 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  return _swift_task_switch(sub_1000B59C4, 0, 0);
}

uint64_t sub_1000B59C4()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 304) = *(void *)(v1 + 96);
  *(unsigned char *)(v0 + 468) = *(unsigned char *)(v1 + 16);
  *(void *)(v0 + 312) = type metadata accessor for CommunicationActor();
  *(void *)(v0 + 320) = static CommunicationActor.shared.getter();
  *(void *)(v0 + 328) = sub_1000CD730(&qword_1000F1F70, (void (*)(uint64_t))&type metadata accessor for CommunicationActor);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000B5AA4, v3, v2);
}

uint64_t sub_1000B5AA4()
{
  swift_release();
  static CommunicationActor.shared.getter();
  dispatch thunk of Actor.unownedExecutor.getter();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    swift_task_reportUnexpectedExecutor();
  }
  sub_100065CC4(0x50802u >> (8 * *(unsigned char *)(v0 + 468)), *(void *)(v0 + 80), 1, *(void *)(v0 + 296));
  *(void *)(v0 + 336) = 0;
  swift_release();
  return _swift_task_switch(sub_1000B5BB8, 0, 0);
}

uint64_t sub_1000B5BB8()
{
  (*(void (**)(void, void, void))(v0[35] + 16))(v0[36], v0[37], v0[34]);
  sub_100005F48(&qword_1000F3200, &qword_1000F31F8);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100005F48(&qword_1000F3208, &qword_1000F31F0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[43] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1000B5E00;
  uint64_t v3 = v0[30];
  uint64_t v4 = v0[31];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, 0, 0, v0 + 2, v4, v1);
}

uint64_t sub_1000B5CF8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000B5E00()
{
  swift_task_dealloc();
  if (v0) {
    uint64_t v1 = sub_1000B648C;
  }
  else {
    uint64_t v1 = sub_1000B5F10;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1000B5F10()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 160);
    uint64_t v7 = *(void *)(v0 + 80);
    (*(void (**)(void, void))(*(void *)(v0 + 256) + 8))(*(void *)(v0 + 264), *(void *)(v0 + 248));
    static Log.photos.getter();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v44 = *(void *)(v0 + 272);
      uint64_t v45 = *(void *)(v0 + 296);
      uint64_t v42 = *(void *)(v0 + 200);
      uint64_t v43 = *(void *)(v0 + 280);
      uint64_t v10 = *(void *)(v0 + 176);
      uint64_t v40 = *(void *)(v0 + 192);
      uint64_t v41 = *(void *)(v0 + 184);
      uint64_t v12 = *(void *)(v0 + 160);
      uint64_t v11 = *(void *)(v0 + 168);
      uint64_t v13 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315394;
      sub_1000CD730(&qword_1000F2738, (void (*)(uint64_t))&type metadata accessor for AlbumID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 24) = sub_100007E88(v14, v15, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
      *(_WORD *)(v13 + 12) = 2080;
      uint64_t v16 = PhotosFaceType.description.getter();
      *(void *)(v0 + 32) = sub_100007E88(v16, v17, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Completed tracking %s for type %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v42, v41);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v45, v44);
    }
    else
    {
      uint64_t v46 = *(void *)(v0 + 296);
      uint64_t v29 = *(void *)(v0 + 272);
      uint64_t v30 = *(void *)(v0 + 280);
      uint64_t v31 = v8;
      uint64_t v32 = *(void *)(v0 + 192);
      uint64_t v33 = *(void *)(v0 + 200);
      uint64_t v35 = *(void *)(v0 + 176);
      uint64_t v34 = *(void *)(v0 + 184);
      uint64_t v37 = *(void *)(v0 + 160);
      uint64_t v36 = *(void *)(v0 + 168);

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v34);
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v46, v29);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 232);
    uint64_t v19 = *(void *)(v0 + 72);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v18, v1, v2);
    uint64_t v20 = *(void *)(v19 + 104);
    sub_100005CB0(&qword_1000F2CF8);
    *(void *)(v0 + 352) = *(void *)(v3 + 72);
    int v21 = *(_DWORD *)(v3 + 80);
    *(_DWORD *)(v0 + 464) = v21;
    unint64_t v22 = (v21 + 32) & ~(unint64_t)v21;
    uint64_t v23 = swift_allocObject();
    *(void *)(v0 + 360) = v23;
    *(_OWORD *)(v23 + 16) = xmmword_1000D7AB0;
    uint64_t v24 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    *(void *)(v0 + 368) = v24;
    *(void *)(v0 + 376) = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v24(v23 + v22, v18, v2);
    *(void *)(v0 + 40) = v23;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v25;
    uint64_t v26 = sub_100005CB0(&qword_1000F3DE8);
    uint64_t v27 = sub_100005F48(&qword_1000F3DF0, &qword_1000F3DE8);
    *uint64_t v25 = v0;
    v25[1] = sub_1000B65CC;
    uint64_t v28 = *(void *)(v0 + 208);
    return Sequence.asyncMap<A>(predicate:)(&unk_1000F41C0, v20, v26, v28, v27);
  }
}