uint64_t sub_10070785C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t *v31;
  uint64_t v32;

  v31 = a1;
  v7 = type metadata accessor for SDAirDropDiscoveredEndpoint(0);
  v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10000A844(&qword_10096D4B0);
  result = static _SetStorage.allocate(capacity:)();
  v10 = result;
  v30 = a2;
  if (a2 < 1) {
    v12 = 0;
  }
  else {
    v12 = *v31;
  }
  v13 = 0;
  v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v16 = v15 | (v13 << 6);
    }
    else
    {
      v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v30)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_37;
        }
        v18 = v31[v13];
        if (!v18)
        {
          v13 = v17 + 2;
          if (v17 + 2 >= v30) {
            goto LABEL_37;
          }
          v18 = v31[v13];
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v30) {
              goto LABEL_37;
            }
            v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v30) {
                  goto LABEL_37;
                }
                v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            v13 = v19;
          }
        }
      }
LABEL_24:
      v12 = (v18 - 1) & v18;
      v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    v20 = *(void *)(v32 + 72);
    sub_10070F0FC(*(void *)(a4 + 48) + v20 * v16, (uint64_t)v9, type metadata accessor for SDAirDropDiscoveredEndpoint);
    Hasher.init(_seed:)();
    sub_1003156D8();
    result = Hasher._finalize()();
    v21 = -1 << *(unsigned char *)(v10 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26) {
          v23 = 0;
        }
        v25 |= v27;
        v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    result = sub_10070F174((uint64_t)v9, *(void *)(v10 + 48) + v24 * v20, type metadata accessor for SDAirDropDiscoveredEndpoint);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100707B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  v6 = (void **)v5;
  v12 = (void *)*v5;
  unint64_t v14 = sub_1005838BC(a2, a3);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a4 & 1) == 0)
  {
    if (v19 >= v17 && (a4 & 1) == 0)
    {
      sub_10058E8E4();
      goto LABEL_7;
    }
    sub_100588EB0(v17, a4 & 1);
    uint64_t v26 = sub_1005838BC(a2, a3);
    if ((v18 & 1) == (v27 & 1))
    {
      unint64_t v14 = v26;
      v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7];
    uint64_t v22 = type metadata accessor for RegistrationState(0);
    uint64_t v29 = *(void *)(v22 - 8);
    unint64_t v23 = *(void *)(v29 + 72) * v14;
    sub_10070F174(v21 + v23, a5, type metadata accessor for RegistrationState);
    sub_10070F174(a1, v20[7] + v23, type metadata accessor for RegistrationState);
    v24 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
    return v24(a5, 0, 1, v22);
  }
LABEL_13:
  sub_1005953F0(v14, a2, a3, a1, v20);
  uint64_t v28 = type metadata accessor for RegistrationState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a5, 1, 1, v28);

  return swift_bridgeObjectRetain();
}

void *sub_100707DE8@<X0>(void *(*a1)(uint64_t *__return_ptr)@<X1>, void *a2@<X8>)
{
  uint64_t result = a1(&v5);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

void *sub_100707E2C(int a1, uint64_t a2)
{
  uint64_t v59 = sub_10000A844(&qword_10097F7F0);
  uint64_t v60 = sub_1002AE308(&qword_10097F7F8, &qword_10097F7F0);
  v58[0] = a2;
  v4 = sub_10026BB6C(v58, v59);
  __chkstk_darwin(v4);
  v6 = (uint64_t *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v7 + 16))(v6);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = sub_100278AE4(v55);
  uint64_t v9 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10000B740(0, &qword_10096B3E8);
    sub_100361188();
    Set.Iterator.init(_cocoa:)();
    uint64_t v9 = v61;
    uint64_t v10 = v62;
    long long v11 = v63;
    uint64_t v12 = v64;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
    uint64_t v10 = v9 + 56;
    uint64_t v14 = ~v13;
    uint64_t v15 = -v13;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    uint64_t v12 = v16 & *(void *)(v9 + 56);
    swift_bridgeObjectRetain();
    long long v11 = (unint64_t)v14;
  }
  uint64_t *v8 = v9;
  v8[1] = v10;
  *((_OWORD *)v8 + 1) = v11;
  v8[4] = v12;
  sub_1002AF758((uint64_t)v55, AssociatedTypeWitness);
  dispatch thunk of IteratorProtocol.next()();
  char v18 = (void *)v51;
  if (!(void)v51)
  {
    v47 = _swiftEmptyArrayStorage;
LABEL_34:
    sub_10024D338((uint64_t)v55);
    sub_10024D338((uint64_t)v58);
    return v47;
  }
  v47 = _swiftEmptyArrayStorage;
  uint64_t v19 = &OBJC_METACLASS___SDSuggestionBrowserContext;
  v20 = &selRef_setProducerScanEnabled_;
  *(void *)&long long v17 = 136315138;
  long long v49 = v17;
  unint64_t v46 = (unint64_t)"Unknown assertion state";
  v48 = (char *)&type metadata for Any + 8;
  int v50 = a1;
  while (1)
  {
    while (1)
    {
      uint64_t result = [self v20[480]];
      uint64_t v22 = result;
      if ((a1 & 1) == 0) {
        break;
      }
      if (!result) {
        goto LABEL_36;
      }
      id v25 = [v18 uniqueID];
      unsigned __int8 v26 = [v22 deviceEnabledAsKeyForIDSDeviceID:v25];

      if ((v26 & 1) == 0) {
        goto LABEL_9;
      }
LABEL_17:
      uint64_t result = [self sharedTransport];
      if (!result) {
        goto LABEL_37;
      }
      char v27 = result;
      id v28 = [v18 uniqueID];
      id v29 = [v27 idsDeviceForUniqueID:v28];

      if (!v29)
      {
        if (qword_10096A190 != -1) {
          swift_once();
        }
        uint64_t v30 = type metadata accessor for Logger();
        sub_10000B47C(v30, (uint64_t)qword_10097F520);
        id v31 = v18;
        v32 = Logger.logObject.getter();
        os_log_type_t v33 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = v19;
          uint64_t v35 = swift_slowAlloc();
          uint64_t v54 = swift_slowAlloc();
          *(_DWORD *)uint64_t v35 = v49;
          id v36 = [v31 uniqueID];
          if (v36)
          {
            v37 = v36;
            unint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v40 = v39;
          }
          else
          {
            *(void *)&long long v51 = 0;
            *((void *)&v51 + 1) = 0xE000000000000000;
            _StringGuts.grow(_:)(17);
            swift_bridgeObjectRelease();
            unint64_t v40 = v46 | 0x8000000000000000;
            unint64_t v38 = 0xD000000000000015;
          }
          *(void *)(v35 + 4) = sub_100254634(v38, v40, &v54);

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v32, v33, "Could not convert ID %s into ids device", (uint8_t *)v35, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v19 = v34;
          v20 = &selRef_setProducerScanEnabled_;
          LOBYTE(a1) = v50;
        }
        else
        {
        }
        goto LABEL_10;
      }
      id v41 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v47 = sub_100253AE4(0, v47[2] + 1, 1, v47);
      }
      unint64_t v43 = v47[2];
      unint64_t v42 = v47[3];
      if (v43 >= v42 >> 1) {
        v47 = sub_100253AE4((void *)(v42 > 1), v43 + 1, 1, v47);
      }
      uint64_t v52 = sub_10000B740(0, &qword_10097BB60);
      v53 = &off_1008E2510;
      *(void *)&long long v51 = v41;
      v44 = v47;
      v47[2] = v43 + 1;
      sub_1002AF688(&v51, (uint64_t)&v44[5 * v43 + 4]);

      sub_1002AF758((uint64_t)v55, AssociatedTypeWitness);
      dispatch thunk of IteratorProtocol.next()();
      char v18 = (void *)v51;
      if (!(void)v51) {
        goto LABEL_34;
      }
    }
    if (!result) {
      break;
    }
    id v23 = [v18 uniqueID];
    unsigned int v24 = [v22 deviceEnabledAsKey:v23];

    if (v24) {
      goto LABEL_17;
    }
LABEL_9:

LABEL_10:
    sub_1002AF758((uint64_t)v55, AssociatedTypeWitness);
    dispatch thunk of IteratorProtocol.next()();
    char v18 = (void *)v51;
    if (!(void)v51) {
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10070853C(uint64_t a1, unsigned int a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v246 = a4;
  uint64_t v245 = a3;
  uint64_t v12 = sub_10000A844(&qword_100974EA0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  v235 = (char *)v232 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v236 = (char *)v232 - v15;
  uint64_t v16 = sub_10000A844((uint64_t *)&unk_100974F20);
  __chkstk_darwin(v16 - 8);
  uint64_t v234 = (uint64_t)v232 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v240 = type metadata accessor for Date();
  os_log_t v239 = *(os_log_t *)(v240 - 8);
  __chkstk_darwin(v240);
  v238 = (char *)v232 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v248 = type metadata accessor for UUID();
  v247 = *(void (***)(char *, uint64_t))(v248 - 8);
  uint64_t v19 = __chkstk_darwin(v248);
  v237 = (char *)v232 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  v241 = (char *)v232 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  id v25 = (char *)v232 - v24;
  __chkstk_darwin(v23);
  char v27 = (char *)v232 - v26;
  uint64_t v28 = type metadata accessor for DispatchPredicate();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  id v31 = (void *)((char *)v232 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v257 = a6;
  uint64_t v258 = a7;
  v32 = sub_100278AE4(&v256);
  os_log_type_t v33 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16);
  uint64_t v34 = a6;
  uint64_t v35 = a5;
  v33(v32, a1, v34);
  id v36 = *(void **)(a5 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *id v31 = v36;
  (*(void (**)(void *, void, uint64_t))(v29 + 104))(v31, enum case for DispatchPredicate.onQueue(_:), v28);
  id v37 = v36;
  uint64_t v38 = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v29 + 8))(v31, v28);
  if (v38)
  {
    uint64_t v38 = (uint64_t)sub_10070E650(a2, v245, (uint64_t)v246);
    LODWORD(v31) = a2;
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v39 = type metadata accessor for Logger();
  uint64_t v40 = sub_10000B47C(v39, (uint64_t)qword_10097F520);
  sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
  id v41 = (id)v38;
  v242 = (void *)v40;
  unint64_t v42 = Logger.logObject.getter();
  os_log_type_t v43 = static os_log_type_t.error.getter();
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v245 = v35;
  id v246 = v41;
  LODWORD(v243) = v31;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    v233 = (void *)swift_slowAlloc();
    uint64_t v244 = swift_slowAlloc();
    uint64_t v250 = v244;
    *(_DWORD *)uint64_t v45 = 136315394;
    v232[1] = v45 + 4;
    uint64_t v46 = v254;
    uint64_t v47 = v255;
    sub_10026BB6C(&v253, v254);
    (*(void (**)(uint64_t, uint64_t))(v47 + 32))(v46, v47);
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v48 = v248;
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v51 = v50;
    v247[1](v27, v48);
    v249[0] = sub_100254634(v49, v51, &v250);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)&v253);
    *(_WORD *)(v45 + 12) = 2112;
    v249[0] = v41;
    id v52 = v41;
    id v53 = v41;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v233 = v52;

    _os_log_impl((void *)&_mh_execute_header, v42, v43, "Session %s failed with error: %@", (uint8_t *)v45, 0x16u);
    sub_10000A844(&qword_10096B850);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v35 = v245;
    swift_slowDealloc();
  }
  else
  {
    sub_10024D338((uint64_t)&v253);
  }
  uint64_t v54 = v257;
  uint64_t v55 = v258;
  sub_10026BB6C(&v256, v257);
  uint64_t v244 = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 40))(v54, v55);
  uint64_t v56 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions;
  uint64_t v57 = swift_beginAccess();
  uint64_t v58 = *(void *)(*(void *)v56 + 16);
  if (v58)
  {
    uint64_t v59 = (void *)(*(void *)v56 + 32);
    uint64_t v60 = v247 + 1;
    swift_bridgeObjectRetain();
    uint64_t v61 = v58 - 1;
    do
    {
      uint64_t v62 = v61;
      uint64_t v64 = v59[3];
      uint64_t v63 = v59[4];
      sub_10026BB6C(v59, v64);
      (*(void (**)(uint64_t))(*(void *)(*(void *)(v63 + 8) + 8) + 32))(v64);
      uint64_t v65 = v257;
      uint64_t v66 = v258;
      sub_10026BB6C(&v256, v257);
      (*(void (**)(uint64_t, uint64_t))(v66 + 32))(v65, v66);
      char v67 = static UUID.== infix(_:_:)();
      v68 = *v60;
      uint64_t v69 = v248;
      (*v60)(v25, v248);
      v68(v27, v69);
      if (v67) {
        break;
      }
      uint64_t v61 = v62 - 1;
      v59 += 5;
    }
    while (v62);
    uint64_t v57 = swift_bridgeObjectRelease();
    uint64_t v35 = v245;
  }
  else
  {
    char v67 = 0;
  }
  __chkstk_darwin(v57);
  v232[-2] = &v256;
  swift_beginAccess();
  uint64_t result = sub_100452294((uint64_t (*)(uint64_t))sub_100713430, (uint64_t)&v232[-4]);
  uint64_t v71 = *(void *)(*(void *)v56 + 16);
  if (v71 < result)
  {
    __break(1u);
    goto LABEL_94;
  }
  sub_1005A5820(result, v71);
  uint64_t v72 = swift_endAccess();
  __chkstk_darwin(v72);
  v232[-2] = &v256;
  uint64_t v73 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions;
  swift_beginAccess();
  uint64_t result = sub_100452254((uint64_t (*)(uint64_t))sub_100713430, (uint64_t)&v232[-4]);
  uint64_t v74 = *(void *)(*(void *)v73 + 16);
  if (v74 < result)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  sub_1005A5840(result, v74);
  uint64_t v75 = swift_endAccess();
  __chkstk_darwin(v75);
  v232[-2] = &v256;
  uint64_t v76 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions;
  swift_beginAccess();
  uint64_t result = sub_100451FAC((uint64_t (*)(uint64_t))sub_100710A70, (uint64_t)&v232[-4]);
  uint64_t v77 = *(void *)(*(void *)v76 + 16);
  if (v77 < result)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  sub_1005A5860(result, v77);
  uint64_t v78 = swift_endAccess();
  __chkstk_darwin(v78);
  v232[-2] = &v256;
  uint64_t v79 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions;
  swift_beginAccess();
  uint64_t result = sub_100451F6C((uint64_t (*)(uint64_t))sub_100713430, (uint64_t)&v232[-4]);
  uint64_t v80 = *(void *)(*(void *)v79 + 16);
  if (v80 >= result)
  {
    sub_1005A5880(result, v80);
    swift_endAccess();
    uint64_t v81 = v257;
    uint64_t v82 = v258;
    sub_10026BB6C(&v256, v257);
    (*(void (**)(uint64_t, uint64_t))(v82 + 88))(v81, v82);
    int v83 = (int)v243;
    uint64_t v84 = v248;
    v85 = v247;
    if (v243 != 33) {
      goto LABEL_24;
    }
    uint64_t v86 = v257;
    uint64_t v87 = v258;
    sub_10026BB6C(&v256, v257);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v87 + 64))(&v253, v86, v87);
    uint64_t v88 = v254;
    if (v254)
    {
      uint64_t v89 = v255;
      sub_10026BB6C(&v253, v254);
      uint64_t v90 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 8))(v88, v89);
      v92 = v91;
      sub_10024D338((uint64_t)&v253);
      if (v92)
      {
        uint64_t v93 = sub_100508E74(v244);
        UUID.init()();
        sub_1006DDD14(v93, v90, v92, (uint64_t)v27);
        swift_bridgeObjectRelease();
        v85[1](v27, v84);
        goto LABEL_24;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v253, &qword_10097BB50);
    }
    v94 = Logger.logObject.getter();
    os_log_type_t v95 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v94, v95))
    {
      v96 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v96 = 0;
      _os_log_impl((void *)&_mh_execute_header, v94, v95, "Got notEnabled error but coudln't determine who to disable pairing with", v96, 2u);
      swift_slowDealloc();
    }

LABEL_24:
    if (v244 != 8)
    {
      if (v244 != 5)
      {
        if (v244 != 4) {
          goto LABEL_73;
        }
        if (v83 == 22)
        {
          sub_1006E7B5C();
          uint64_t v97 = v257;
          uint64_t v98 = v258;
          sub_10026BB6C(&v256, v257);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v98 + 64))(&v253, v97, v98);
          uint64_t v99 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice;
          swift_beginAccess();
          sub_10026B410((uint64_t)&v253, v99, &qword_10097BB50);
          swift_endAccess();
        }
        uint64_t v100 = v257;
        uint64_t v101 = v258;
        sub_10026BB6C(&v256, v257);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v101 + 64))(&v253, v100, v101);
        uint64_t v102 = v254;
        if (!v254)
        {
          sub_10000A7E8((uint64_t)&v253, &qword_10097BB50);
          goto LABEL_72;
        }
        uint64_t v103 = v255;
        sub_10026BB6C(&v253, v254);
        Swift::Int v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v103 + 8))(v102, v103);
        Swift::Int v106 = v105;
        sub_10024D338((uint64_t)&v253);
        if (v106)
        {
          if (v83 == 9 || v83 == 24)
          {
            if (*(void *)(*(void *)(v35
                                       + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
                           + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
            {
              v233 = 0;
              swift_beginAccess();
              swift_retain();
              swift_retain();
              swift_bridgeObjectRetain();
              sub_100596448(&v250, v104, v106);
              swift_endAccess();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_72;
            }
          }
          else if (*(void *)(*(void *)(v35 {
                                          + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator)
          }
                              + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner))
          {
            v233 = 0;
            swift_beginAccess();
            swift_retain();
            swift_retain();
            sub_1005A1914(v104, v106);
            swift_endAccess();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
          }
          swift_bridgeObjectRelease();
        }
LABEL_72:
        uint64_t v183 = (uint64_t)v238;
        static Date.distantPast.getter();
        sub_1006D5DAC(v183);
        ((void (*)(uint64_t, uint64_t))v239[1].isa)(v183, v240);
        goto LABEL_73;
      }
      if (v83 != 10) {
        goto LABEL_73;
      }
      uint64_t v127 = v257;
      uint64_t v128 = v258;
      sub_10026BB6C(&v256, v257);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v128 + 64))(&v253, v127, v128);
      uint64_t v129 = v254;
      if (v254)
      {
        uint64_t v130 = v255;
        sub_10026BB6C(&v253, v254);
        uint64_t v131 = (*(uint64_t (**)(uint64_t, uint64_t))(v130 + 8))(v129, v130);
        uint64_t v133 = v132;
        sub_10024D338((uint64_t)&v253);
        if (v133)
        {
          swift_beginAccess();
          uint64_t v134 = v234;
          sub_1002A965C(v131, v133, v234);
          swift_endAccess();
          sub_10000A7E8(v134, (uint64_t *)&unk_100974F20);
          swift_bridgeObjectRelease();
          goto LABEL_73;
        }
      }
      else
      {
        sub_10000A7E8((uint64_t)&v253, &qword_10097BB50);
      }
      v233 = 0;
      sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
      v164 = Logger.logObject.getter();
      os_log_type_t v165 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v164, v165))
      {
        v166 = (uint8_t *)swift_slowAlloc();
        uint64_t v244 = swift_slowAlloc();
        uint64_t v250 = v244;
        *(_DWORD *)v166 = 136315138;
        v243 = v166 + 4;
        uint64_t v167 = v254;
        uint64_t v168 = v255;
        sub_10026BB6C(&v253, v254);
        v169 = *(void (**)(uint64_t, uint64_t))(v168 + 32);
        uint64_t v170 = v168;
        uint64_t v35 = v245;
        v169(v167, v170);
        sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v171 = dispatch thunk of CustomStringConvertible.description.getter();
        unint64_t v173 = v172;
        v85[1](v27, v248);
        v249[0] = sub_100254634(v171, v173, &v250);
        uint64_t v84 = v248;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10024D338((uint64_t)&v253);
        _os_log_impl((void *)&_mh_execute_header, v164, v165, "Could not find peer device for %s", v166, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10024D338((uint64_t)&v253);
      }

LABEL_73:
      sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
      sub_10000A844((uint64_t *)&unk_10096B440);
      sub_10000A844((uint64_t *)&unk_100972440);
      if (swift_dynamicCast())
      {
        sub_10024D338((uint64_t)&v250);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          goto LABEL_80;
        }
        v185 = (void *)Strong;
        uint64_t v186 = v257;
        uint64_t v187 = v258;
        sub_10026BB6C(&v256, v257);
        (*(void (**)(uint64_t, uint64_t))(v187 + 32))(v186, v187);
        v188.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        v85[1](v27, v84);
        [v185 manager:v35 didFailAuthenticationFor:v188.super.isa error:v246];
      }
      else
      {
        sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
        sub_10000A844(&qword_10096B430);
        if ((swift_dynamicCast() & 1) == 0
          || (sub_10024D338((uint64_t)&v250), (uint64_t v189 = swift_unknownObjectWeakLoadStrong()) == 0))
        {
LABEL_80:
          sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
          if (v67)
          {
            uint64_t v193 = v254;
            uint64_t v194 = v255;
            sub_10026BB6C(&v253, v254);
            unint64_t v195 = (*(uint64_t (**)(uint64_t, uint64_t))(v194 + 40))(v193, v194);
            if (v195 > 0xE || ((1 << v195) & 0x658E) == 0)
            {
              sub_10024D338((uint64_t)&v253);
              sub_100278C8C((uint64_t)&v256, (uint64_t)&v250);

              sub_10024D338((uint64_t)&v250);
              return sub_10024D338((uint64_t)&v256);
            }
            sub_10024D338((uint64_t)&v253);
            uint64_t v196 = *(void *)(v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v197 = v257;
            uint64_t v198 = v258;
            sub_10026BB6C(&v256, v257);
            unint64_t v199 = (*(uint64_t (**)(uint64_t, uint64_t))(v198 + 40))(v197, v198);
            LOBYTE(v197) = sub_100508B74(v199);
            uint64_t v200 = v257;
            uint64_t v201 = v258;
            sub_10026BB6C(&v256, v257);
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v201 + 64))(&v250, v200, v201);
            uint64_t v202 = sub_1005EA4B4(v197, (uint64_t)&v250);
            uint64_t v204 = v203;
            uint64_t ObjectType = swift_getObjectType();
            uint64_t v206 = (*(uint64_t (**)(uint64_t, uint64_t))(v204 + 56))(ObjectType, v204);
            uint64_t v207 = __chkstk_darwin(v206);
            v232[-4] = v202;
            v232[-3] = v204;
            v232[-2] = &v250;
            v232[-1] = v196;
            __chkstk_darwin(v207);
            v232[-2] = sub_10045AFA8;
            v232[-1] = v208;
            v210 = v209 + 4;
            os_unfair_lock_lock(v209 + 4);
            sub_10030F73C(v211);
            os_unfair_lock_unlock(v210);
            swift_unknownObjectRelease();

            v212 = &v250;
          }
          else
          {
            sub_10024D338((uint64_t)&v253);
            sub_100278C8C((uint64_t)&v256, (uint64_t)&v250);
            uint64_t v213 = v251;
            uint64_t v214 = v252;
            sub_10026BB6C(&v250, v251);
            unint64_t v215 = (*(uint64_t (**)(uint64_t, uint64_t))(v214 + 40))(v213, v214);
            if (v215 <= 0xE && ((1 << v215) & 0x658E) != 0)
            {
              sub_10024D338((uint64_t)&v250);

              return sub_10024D338((uint64_t)&v256);
            }
            sub_10024D338((uint64_t)&v250);
            uint64_t v216 = *(void *)(v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager);
            uint64_t v217 = v257;
            uint64_t v218 = v258;
            sub_10026BB6C(&v256, v257);
            unint64_t v219 = (*(uint64_t (**)(uint64_t, uint64_t))(v218 + 40))(v217, v218);
            LOBYTE(v217) = sub_100508B74(v219);
            uint64_t v220 = v257;
            uint64_t v221 = v258;
            sub_10026BB6C(&v256, v257);
            (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v221 + 64))(v249, v220, v221);
            uint64_t v222 = sub_1005EA4B4(v217, (uint64_t)v249);
            uint64_t v224 = v223;
            uint64_t v225 = swift_getObjectType();
            uint64_t v226 = (*(uint64_t (**)(uint64_t, uint64_t))(v224 + 56))(v225, v224);
            uint64_t v227 = __chkstk_darwin(v226);
            v232[-4] = v222;
            v232[-3] = v224;
            v232[-2] = v249;
            v232[-1] = v216;
            __chkstk_darwin(v227);
            v232[-2] = sub_10045AFA8;
            v232[-1] = v228;
            v230 = v229 + 4;
            os_unfair_lock_lock(v229 + 4);
            sub_10030F73C(v231);
            os_unfair_lock_unlock(v230);
            swift_unknownObjectRelease();

            v212 = v249;
          }
          sub_10000A7E8((uint64_t)v212, &qword_10097BB50);
          return sub_10024D338((uint64_t)&v256);
        }
        v190 = (void *)v189;
        uint64_t v191 = v257;
        uint64_t v192 = v258;
        sub_10026BB6C(&v256, v257);
        (*(void (**)(uint64_t, uint64_t))(v192 + 32))(v191, v192);
        v188.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        v85[1](v27, v84);
        [v190 manager:v35 didFailToEnableDeviceFor:v188.super.isa error:v246];
      }
      swift_unknownObjectRelease();

      goto LABEL_80;
    }
    uint64_t v107 = v257;
    uint64_t v108 = v258;
    sub_10026BB6C(&v256, v257);
    (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v108 + 64))(&v253, v107, v108);
    uint64_t v109 = v254;
    v233 = 0;
    if (v254)
    {
      uint64_t v110 = v255;
      sub_10026BB6C(&v253, v254);
      uint64_t v111 = (*(uint64_t (**)(uint64_t, uint64_t))(v110 + 8))(v109, v110);
      uint64_t v113 = v112;
      sub_10024D338((uint64_t)&v253);
      if (v113)
      {
        v114 = Logger.logObject.getter();
        os_log_type_t v115 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v114, v115))
        {
          v116 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v116 = 0;
          _os_log_impl((void *)&_mh_execute_header, v114, v115, "Registration failed, clearing registration date", v116, 2u);
          swift_slowDealloc();
        }

        swift_beginAccess();
        swift_bridgeObjectRetain();
        v117 = sub_1005803EC(&v253, v111, v113);
        uint64_t v119 = v118;
        uint64_t v120 = type metadata accessor for RegistrationState(0);
        v121 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 48);
        v122 = *v121;
        if (!(*v121)(v119, 1, v120)) {
          *(unsigned char *)(v119 + *(int *)(v120 + 20)) = 0;
        }
        ((void (*)(uint64_t *, void))v117)(&v253, 0);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v123 = sub_1005803EC(&v253, v111, v113);
        uint64_t v125 = v124;
        unsigned int v126 = v122(v124, 1, v120);
        uint64_t v35 = v245;
        v85 = v247;
        if (!v126)
        {
          sub_10000A7E8(v125, (uint64_t *)&unk_100975040);
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v239[7].isa)(v125, 1, 1, v240);
        }
        ((void (*)(uint64_t *, void))v123)(&v253, 0);
        swift_endAccess();
        swift_bridgeObjectRelease_n();
        uint64_t v84 = v248;
        goto LABEL_54;
      }
    }
    else
    {
      sub_10000A7E8((uint64_t)&v253, &qword_10097BB50);
    }
    sub_100278C8C((uint64_t)&v256, (uint64_t)&v253);
    v135 = Logger.logObject.getter();
    os_log_type_t v136 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v135, v136))
    {
      v137 = (uint8_t *)swift_slowAlloc();
      uint64_t v244 = swift_slowAlloc();
      uint64_t v250 = v244;
      *(_DWORD *)v137 = 136315138;
      uint64_t v240 = (uint64_t)(v137 + 4);
      uint64_t v138 = v254;
      uint64_t v139 = v255;
      sub_10026BB6C(&v253, v254);
      v140 = *(void (**)(uint64_t, uint64_t))(v139 + 32);
      uint64_t v141 = v139;
      uint64_t v35 = v245;
      v140(v138, v141);
      sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v142 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v144 = v143;
      v85[1](v27, v248);
      v249[0] = sub_100254634(v142, v144, &v250);
      uint64_t v84 = v248;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)&v253);
      _os_log_impl((void *)&_mh_execute_header, v135, v136, "Could not find peer device for %s", v137, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)&v253);
    }

LABEL_54:
    v145 = v241;
    v146 = v237;
    uint64_t v147 = (uint64_t)v236;
    uint64_t v148 = v35 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI;
    swift_beginAccess();
    sub_10024A330(v148, v147, &qword_100974EA0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85[6])(v147, 1, v84) == 1)
    {
      sub_10000A7E8(v147, &qword_100974EA0);
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t))v85[4])(v145, v147, v84);
      uint64_t v149 = swift_unknownObjectWeakLoadStrong();
      if (v149)
      {
        v150 = (void *)v149;
        ((void (*)(char *, char *, uint64_t))v85[2])(v146, v145, v84);
        v151 = Logger.logObject.getter();
        os_log_type_t v152 = static os_log_type_t.default.getter();
        int v153 = v152;
        if (os_log_type_enabled(v151, v152))
        {
          uint64_t v154 = swift_slowAlloc();
          v242 = (void *)swift_slowAlloc();
          uint64_t v240 = swift_slowAlloc();
          uint64_t v253 = v240;
          *(_DWORD *)uint64_t v154 = 138412546;
          os_log_t v239 = v151;
          type metadata accessor for SFAuthenticationError(0);
          LODWORD(v238) = v153;
          sub_10000BBC0(&qword_100977FB0, type metadata accessor for SFAuthenticationError);
          swift_allocError();
          _DWORD *v155 = v243;
          uint64_t v156 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v250 = v156;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v242 = v156;
          *(_WORD *)(v154 + 12) = 2080;
          sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v157 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v250 = sub_100254634(v157, v158, &v253);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          v159 = (void (**)(char *, uint64_t))v85[1];
          uint64_t v244 = (unint64_t)(v85 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v247 = v159;
          ((void (*)(char *, uint64_t))v159)(v146, v248);
          os_log_t v160 = v239;
          _os_log_impl((void *)&_mh_execute_header, v239, (os_log_type_t)v238, "Calling back to delegate with registration error %@ for sessionID %s", (uint8_t *)v154, 0x16u);
          sub_10000A844(&qword_10096B850);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          unsigned int v161 = v243;
          swift_slowDealloc();
          uint64_t v162 = v248;
          swift_slowDealloc();

          v163 = v85;
        }
        else
        {
          v177 = (void (**)(char *, uint64_t))v85[1];
          uint64_t v244 = (unint64_t)(v85 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          v247 = v177;
          ((void (*)(char *, uint64_t))v177)(v146, v84);

          v163 = v85;
          unsigned int v161 = v243;
          uint64_t v162 = v84;
        }
        v178 = v241;
        Class isa = UUID._bridgeToObjectiveC()().super.isa;
        id v180 = sub_10070E650(v161, 0, 0xE000000000000000);
        uint64_t v181 = v245;
        [v150 manager:v245 didFailAuthenticationFor:isa error:v180];

        uint64_t v35 = v181;
        swift_unknownObjectRelease();
        ((void (*)(char *, uint64_t))v247)(v178, v162);
        uint64_t v182 = (uint64_t)v235;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v163[7])(v235, 1, 1, v162);
        swift_beginAccess();
        sub_10026B410(v182, v148, &qword_100974EA0);
        swift_endAccess();
        v85 = v163;
        uint64_t v84 = v162;
      }
      else
      {
        v174 = Logger.logObject.getter();
        os_log_type_t v175 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v174, v175))
        {
          v176 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v176 = 0;
          _os_log_impl((void *)&_mh_execute_header, v174, v175, "Have session that is waiting but no delegate to report it to. This is bad.", v176, 2u);
          swift_slowDealloc();
        }

        v85[1](v145, v84);
        uint64_t v35 = v245;
      }
    }
    goto LABEL_73;
  }
LABEL_96:
  __break(1u);
  return result;
}

uint64_t sub_10070A644(Swift::UInt a1, void *a2, char *a3, uint64_t a4, char *a5)
{
  uint64_t v134 = a4;
  uint64_t v138 = a3;
  uint64_t v130 = type metadata accessor for Date();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v128 = (char *)&v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v9 - 8);
  os_log_type_t v136 = (char *)&v122 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  v135 = (char *)&v122 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v122 - v15;
  uint64_t v17 = type metadata accessor for DispatchPredicate();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v122 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  v144[3] = (id)sub_10000B740(0, &qword_10097BB60);
  v144[4] = &off_1008E2510;
  v144[0] = a2;
  uint64_t v21 = *(void **)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  void *v20 = v21;
  (*(void (**)(void *, void, uint64_t))(v18 + 104))(v20, enum case for DispatchPredicate.onQueue(_:), v17);
  id v22 = a2;
  id v23 = v21;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v18 + 8))(v20, v17);
  if (a2)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v24 = type metadata accessor for Logger();
  uint64_t v25 = sub_10000B47C(v24, (uint64_t)qword_10097F520);
  uint64_t v26 = v12 + 16;
  uint64_t v132 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v132(v16, v138, v11);
  sub_100278C8C((uint64_t)v144, (uint64_t)v141);
  uint64_t v137 = v25;
  char v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  uint64_t v29 = &selRef_ultraWideBandState;
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v131 = v12 + 16;
    uint64_t v127 = a5;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v124 = swift_slowAlloc();
    uint64_t v140 = v124;
    *(_DWORD *)uint64_t v30 = 136315650;
    unint64_t v126 = a1;
    uint64_t v31 = sub_10050938C();
    *(void *)&v139[0] = sub_100254634(v31, v32, &v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v139[0] = sub_100254634(v33, v34, &v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v125 = v12;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    *(_WORD *)(v30 + 22) = 2080;
    id v35 = [*sub_10026BB6C(v141, v142) uniqueIDOverride];
    if (v35)
    {
      id v36 = v35;
      unint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v39 = v38;
    }
    else
    {
      *(void *)&v139[0] = 0;
      *((void *)&v139[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v39 = 0x80000001007B7770;
      unint64_t v37 = 0xD000000000000015;
    }
    *(void *)&v139[0] = sub_100254634(v37, v39, &v140);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v141);
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "Begin authentication for %s sessionID %s with IDS ID %s", (uint8_t *)v30, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    a5 = v127;
    uint64_t v40 = v11;
    a1 = v126;
    uint64_t v12 = v125;
    uint64_t v26 = v131;
    uint64_t v29 = &selRef_ultraWideBandState;
    if (v126 <= 7)
    {
LABEL_10:
      if (((1 << a1) & 0xC4) != 0) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    sub_10024D338((uint64_t)v141);

    uint64_t v40 = v11;
    if (a1 <= 7) {
      goto LABEL_10;
    }
  }
  if (a1 < 9)
  {
    float v71 = 0.0;
    if (a1 - 1 <= 7) {
      float v71 = flt_100780FDC[a1 - 1];
    }
    int64_t v72 = sub_1005095DC(a1);
    BOOL v73 = sub_10057C16C(1uLL, v72);
    swift_bridgeObjectRelease();
    if (v73)
    {
      sub_1006CE38C((uint64_t)v141);
      uint64_t v74 = v142;
      if (v142)
      {
        uint64_t v75 = v143;
        sub_10026BB6C(v141, v142);
        uint64_t v76 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 64))(v74, v75);
        uint64_t v74 = v77;
        sub_10024D338((uint64_t)v141);
        float v78 = (float)v76;
      }
      else
      {
        sub_10000A7E8((uint64_t)v141, &qword_10097BB50);
        float v78 = 0.0;
      }
      float v96 = v78 + (float)((float)v74 / 10.0);
      if (v71 > v96)
      {
        uint64_t v97 = Logger.logObject.getter();
        os_log_type_t v98 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v97, v98))
        {
          uint64_t v99 = swift_slowAlloc();
          *(_DWORD *)uint64_t v99 = 134218240;
          v141[0] = v71;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v99 + 12) = 2048;
          v141[0] = v96;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v97, v98, "Remote Device version is unsupported. Need: %f, got: %f", (uint8_t *)v99, 0x16u);
          swift_slowDealloc();
        }

        unsigned int v79 = 15;
        goto LABEL_28;
      }
    }
    uint64_t v100 = v29;
    uint64_t v131 = v26;
    uint64_t v101 = a5;
    id v102 = v144[0];
    id v103 = [v144[0] modelIdentifier];
    uint64_t v123 = v40;
    if (v103)
    {
      Swift::Int v104 = v103;
      uint64_t v105 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v107 = v106;
    }
    else
    {
      uint64_t v105 = 0;
      uint64_t v107 = 0;
    }
    swift_beginAccess();
    type metadata accessor for StateMetrics(0);
    sub_100467C70(v105, v107, a1);
    swift_endAccess();
    id v108 = [v102 productBuildVersion];
    if (v108)
    {
      uint64_t v109 = v108;
      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v112 = v111;
    }
    else
    {
      uint64_t v110 = 0;
      uint64_t v112 = 0;
    }
    uint64_t v29 = v100;
    swift_beginAccess();
    sub_100467C70(v110, v112, a1);
    swift_endAccess();
    a5 = v101;
    uint64_t v40 = v123;
  }
LABEL_11:
  id v41 = v144[0];
  id v42 = [v144[0] v29[10]];
  if (!v42)
  {
    sub_100278C8C((uint64_t)v144, (uint64_t)v141);
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(void *)&v139[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      id v57 = [[(id)*sub_10026BB6C(v141, v142) description];
      uint64_t v58 = a5;
      uint64_t v59 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;

      uint64_t v62 = v59;
      a5 = v58;
      uint64_t v140 = sub_100254634(v62, v61, (uint64_t *)v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v141);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "No uniqueIDOverride in SDIDSDevice %s", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)v141);
    }

    unsigned int v79 = 10;
LABEL_28:
    id v80 = sub_10070E650(v79, 0, 0xE000000000000000);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v82 = (void *)Strong;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v82 manager:a5 didFailAuthenticationFor:isa error:v80];
      swift_unknownObjectRelease();
    }
    else
    {
    }
    return sub_10024D338((uint64_t)v144);
  }
  os_log_type_t v43 = v42;
  uint64_t v44 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v46 = v45;

  LOBYTE(v43) = sub_1006E5498(a1, v44, v46);
  swift_bridgeObjectRelease();
  if (v43)
  {
    if (a1 <= 7 && ((1 << a1) & 0xC4) != 0)
    {
LABEL_15:
      uint64_t v47 = v138;
      sub_1006DC7AC((uint64_t)v138, (uint64_t)v144, a1, (a1 > 0xE) | (0x1B73u >> a1) & 1, v134, (uint64_t)v141);
      uint64_t v48 = type metadata accessor for TaskPriority();
      uint64_t v49 = (uint64_t)v136;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v136, 1, 1, v48);
      sub_100278C8C((uint64_t)v141, (uint64_t)v139);
      unint64_t v50 = v135;
      v132(v135, v47, v40);
      unint64_t v51 = (*(unsigned __int8 *)(v12 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
      id v52 = (char *)swift_allocObject();
      *((void *)v52 + 2) = 0;
      *((void *)v52 + 3) = 0;
      sub_1002AF688(v139, (uint64_t)(v52 + 32));
      *((void *)v52 + 9) = a1;
      *((void *)v52 + 10) = a5;
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v52[v51], v50, v40);
      id v53 = a5;
      sub_10028CFA8(v49, (uint64_t)&unk_10097FA30, (uint64_t)v52);
      swift_release();
      sub_10024D338((uint64_t)v141);
      return sub_10024D338((uint64_t)v144);
    }
    if (a1 > 8)
    {
LABEL_36:
      if (a1 > 7 || ((1 << a1) & 0xC4) == 0)
      {
        if (a1 < 9)
        {
          sub_10070C874(a1, v41, v138, (uint64_t)a5);
          return sub_10024D338((uint64_t)v144);
        }
        if (a1 - 9 < 6) {
          sub_100611C18(3u);
        }
      }
      goto LABEL_15;
    }
    uint64_t v88 = *(uint64_t (**)(uint64_t))&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isWifiEnabled];
    uint64_t v89 = swift_retain();
    LOBYTE(v88) = v88(v89);
    swift_release();
    if (v88)
    {
      uint64_t v90 = *(uint64_t (**)(uint64_t))&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled];
      uint64_t v91 = swift_retain();
      LOBYTE(v90) = v90(v91);
      swift_release();
      if (v90) {
        goto LABEL_36;
      }
      v92 = Logger.logObject.getter();
      os_log_type_t v93 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v92, v93))
      {
        v94 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v94 = 0;
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "Bluetooth is disabled", v94, 2u);
        swift_slowDealloc();
      }

      unsigned int v95 = 17;
    }
    else
    {
      uint64_t v113 = Logger.logObject.getter();
      os_log_type_t v114 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v113, v114))
      {
        os_log_type_t v115 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v115 = 0;
        _os_log_impl((void *)&_mh_execute_header, v113, v114, "Wifi is disabled", v115, 2u);
        swift_slowDealloc();
      }

      unsigned int v95 = 16;
    }
    id v116 = sub_10070E650(v95, 0, 0xE000000000000000);
    uint64_t v117 = swift_unknownObjectWeakLoadStrong();
    if (v117)
    {
      uint64_t v118 = (void *)v117;
      Class v119 = UUID._bridgeToObjectiveC()().super.isa;
      [v118 manager:a5 didFailAuthenticationFor:v119 error:v116];
      swift_unknownObjectRelease();
    }
    uint64_t v120 = (uint64_t)v128;
    static Date.distantPast.getter();
    sub_1006D5DAC(v120);

    (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v120, v130);
  }
  else
  {
    uint64_t v63 = a5;
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = (uint8_t *)swift_slowAlloc();
      uint64_t v67 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315138;
      *(void *)&v139[0] = v67;
      swift_beginAccess();
      sub_10000BBC0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v68 = Dictionary.description.getter();
      unint64_t v70 = v69;
      swift_bridgeObjectRelease();
      uint64_t v140 = sub_100254634(v68, v70, (uint64_t *)v139);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Already processing authentication session, ongoing seesions: %s", v66, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v84 = sub_10070E650(0xAu, 0, 0xE000000000000000);
    uint64_t v85 = swift_unknownObjectWeakLoadStrong();
    if (v85)
    {
      uint64_t v86 = (void *)v85;
      Class v87 = UUID._bridgeToObjectiveC()().super.isa;
      [v86 manager:v63 didFailAuthenticationFor:v87 error:v84];
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return sub_10024D338((uint64_t)v144);
}

uint64_t sub_10070B744(Swift::UInt a1, uint64_t a2, char *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v130 = a4;
  uint64_t v135 = type metadata accessor for Date();
  uint64_t v126 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v125 = (char *)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v14 - 8);
  uint64_t v132 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for UUID();
  uint64_t v134 = *(void *)(v136 - 8);
  uint64_t v16 = __chkstk_darwin(v136);
  uint64_t v131 = (char *)&v121 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v121 - v18;
  uint64_t v20 = type metadata accessor for DispatchPredicate();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (uint64_t *)((char *)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v145[3] = a6;
  v145[4] = a7;
  uint64_t v138 = a7;
  uint64_t v24 = sub_100278AE4(v145);
  uint64_t v25 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 16);
  uint64_t v137 = a6;
  v25(v24, a2, a6);
  uint64_t v139 = a5;
  uint64_t v26 = *(void **)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  *id v23 = v26;
  (*(void (**)(void *, void, uint64_t))(v21 + 104))(v23, enum case for DispatchPredicate.onQueue(_:), v20);
  id v27 = v26;
  LOBYTE(v26) = _dispatchPreconditionTest(_:)();
  (*(void (**)(void *, uint64_t))(v21 + 8))(v23, v20);
  if (v26)
  {
    if (qword_10096A190 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v28 = type metadata accessor for Logger();
  uint64_t v29 = sub_10000B47C(v28, (uint64_t)qword_10097F520);
  uint64_t v30 = v134;
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v134 + 16);
  unint64_t v32 = a3;
  uint64_t v33 = v136;
  uint64_t v128 = v134 + 16;
  uint64_t v127 = v31;
  v31(v19, a3, v136);
  sub_100278C8C((uint64_t)v145, (uint64_t)v142);
  uint64_t v133 = v29;
  unint64_t v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v34, v35))
  {
    uint64_t v122 = v24;
    uint64_t v124 = a3;
    uint64_t v36 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    uint64_t v141 = v121;
    *(_DWORD *)uint64_t v36 = 136315650;
    unint64_t v123 = a1;
    uint64_t v37 = sub_10050938C();
    *(void *)&v140[0] = sub_100254634(v37, v38, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    sub_10000BBC0((unint64_t *)&qword_10096C470, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v140[0] = sub_100254634(v39, v40, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v33);
    *(_WORD *)(v36 + 22) = 2080;
    sub_10026BB6C(v142, v143);
    uint64_t v41 = (*(uint64_t (**)(uint64_t))(v138 + 8))(v137);
    uint64_t v43 = v30;
    if (v42)
    {
      unint64_t v44 = v42;
    }
    else
    {
      *(void *)&v140[0] = 0;
      *((void *)&v140[0] + 1) = 0xE000000000000000;
      _StringGuts.grow(_:)(17);
      swift_bridgeObjectRelease();
      unint64_t v44 = 0x80000001007B7770;
      uint64_t v41 = 0xD000000000000015;
    }
    *(void *)&v140[0] = sub_100254634(v41, v44, &v141);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10024D338((uint64_t)v142);
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "Begin authentication for %s sessionID %s with IDS ID %s", (uint8_t *)v36, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v32 = v124;
    uint64_t v45 = v135;
    uint64_t v33 = v136;
    a1 = v123;
    uint64_t v24 = v122;
    if (v123 <= 7)
    {
LABEL_10:
      if (((1 << a1) & 0xC4) != 0) {
        goto LABEL_11;
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v19, v33);
    sub_10024D338((uint64_t)v142);

    uint64_t v43 = v30;
    uint64_t v45 = v135;
    if (a1 <= 7) {
      goto LABEL_10;
    }
  }
  if (a1 < 9)
  {
    float v69 = 0.0;
    if (a1 - 1 <= 7) {
      float v69 = flt_100780FDC[a1 - 1];
    }
    int64_t v70 = sub_1005095DC(a1);
    BOOL v71 = sub_10057C16C(1uLL, v70);
    swift_bridgeObjectRelease();
    if (v71)
    {
      sub_1006CE38C((uint64_t)v142);
      uint64_t v72 = v143;
      if (v143)
      {
        uint64_t v73 = v144;
        sub_10026BB6C(v142, v143);
        uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 64))(v72, v73);
        uint64_t v72 = v75;
        sub_10024D338((uint64_t)v142);
        float v76 = (float)v74;
      }
      else
      {
        sub_10000A7E8((uint64_t)v142, &qword_10097BB50);
        float v76 = 0.0;
      }
      float v94 = v76 + (float)((float)v72 / 10.0);
      if (v69 > v94)
      {
        unsigned int v95 = Logger.logObject.getter();
        os_log_type_t v96 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v95, v96))
        {
          uint64_t v97 = swift_slowAlloc();
          *(_DWORD *)uint64_t v97 = 134218240;
          v142[0] = v69;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v97 + 12) = 2048;
          v142[0] = v94;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v95, v96, "Remote Device version is unsupported. Need: %f, got: %f", (uint8_t *)v97, 0x16u);
          swift_slowDealloc();
        }

        unsigned int v77 = 15;
        goto LABEL_28;
      }
    }
    os_log_type_t v98 = v24;
    uint64_t v99 = v138;
    uint64_t v100 = v32;
    uint64_t v101 = v137;
    uint64_t v102 = (*(uint64_t (**)(uint64_t, uint64_t))(v138 + 16))(v137, v138);
    uint64_t v104 = v103;
    swift_beginAccess();
    type metadata accessor for StateMetrics(0);
    sub_100467C70(v102, v104, a1);
    swift_endAccess();
    uint64_t v105 = *(uint64_t (**)(uint64_t, uint64_t))(v99 + 24);
    uint64_t v106 = v101;
    unint64_t v32 = v100;
    uint64_t v43 = v134;
    uint64_t v107 = v99;
    uint64_t v24 = v98;
    uint64_t v108 = v105(v106, v107);
    uint64_t v110 = v109;
    swift_beginAccess();
    uint64_t v33 = v136;
    uint64_t v111 = v110;
    uint64_t v45 = v135;
    sub_100467C70(v108, v111, a1);
    swift_endAccess();
  }
LABEL_11:
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v138 + 8))(v137);
  if (!v47)
  {
    sub_100278C8C((uint64_t)v145, (uint64_t)v142);
    uint64_t v56 = Logger.logObject.getter();
    os_log_type_t v57 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(void *)&v140[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 136315138;
      sub_10026BB6C(v142, v143);
      uint64_t v59 = (*(uint64_t (**)(uint64_t))(v138 + 72))(v137);
      uint64_t v141 = sub_100254634(v59, v60, (uint64_t *)v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10024D338((uint64_t)v142);
      _os_log_impl((void *)&_mh_execute_header, v56, v57, "No uniqueIDOverride in SDIDSDevice %s", v58, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_10024D338((uint64_t)v142);
    }

    unsigned int v77 = 10;
LABEL_28:
    id v78 = sub_10070E650(v77, 0, 0xE000000000000000);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v80 = (void *)Strong;
      Class isa = UUID._bridgeToObjectiveC()().super.isa;
      [v80 manager:v139 didFailAuthenticationFor:isa error:v78];
      swift_unknownObjectRelease();
    }
    else
    {
    }
    return sub_10024D338((uint64_t)v145);
  }
  char v48 = sub_1006E5498(a1, v46, v47);
  swift_bridgeObjectRelease();
  if (v48)
  {
    if (a1 <= 7 && ((1 << a1) & 0xC4) != 0)
    {
LABEL_15:
      uint64_t v49 = v139;
      sub_1006DC7AC((uint64_t)v32, (uint64_t)v145, a1, (a1 > 0xE) | (0x1B73u >> a1) & 1, v130, (uint64_t)v142);
      uint64_t v50 = type metadata accessor for TaskPriority();
      uint64_t v51 = (uint64_t)v132;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v132, 1, 1, v50);
      sub_100278C8C((uint64_t)v142, (uint64_t)v140);
      id v52 = v131;
      v127(v131, v32, v33);
      unint64_t v53 = (*(unsigned __int8 *)(v43 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v54 = (char *)swift_allocObject();
      *((void *)v54 + 2) = 0;
      *((void *)v54 + 3) = 0;
      sub_1002AF688(v140, (uint64_t)(v54 + 32));
      *((void *)v54 + 9) = a1;
      *((void *)v54 + 10) = v49;
      (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v54[v53], v52, v33);
      os_log_type_t v55 = v49;
      sub_10028CFA8(v51, (uint64_t)&unk_10097F848, (uint64_t)v54);
      swift_release();
      sub_10024D338((uint64_t)v142);
      return sub_10024D338((uint64_t)v145);
    }
    if (a1 > 8)
    {
LABEL_36:
      if (a1 > 7 || ((1 << a1) & 0xC4) == 0)
      {
        if (a1 < 9)
        {
          sub_10070CADC(a1, (uint64_t)v24, v32, (uint64_t)v139, v137, v138);
          return sub_10024D338((uint64_t)v145);
        }
        if (a1 - 9 < 6) {
          sub_100611C18(3u);
        }
      }
      goto LABEL_15;
    }
    uint64_t v86 = *(uint64_t (**)(uint64_t))&v139[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isWifiEnabled];
    uint64_t v87 = swift_retain();
    LOBYTE(v86) = v86(v87);
    swift_release();
    if (v86)
    {
      uint64_t v88 = *(uint64_t (**)(uint64_t))&v139[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled];
      uint64_t v89 = swift_retain();
      LOBYTE(v88) = v88(v89);
      swift_release();
      if (v88) {
        goto LABEL_36;
      }
      uint64_t v90 = Logger.logObject.getter();
      os_log_type_t v91 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v90, v91))
      {
        v92 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v92 = 0;
        _os_log_impl((void *)&_mh_execute_header, v90, v91, "Bluetooth is disabled", v92, 2u);
        swift_slowDealloc();
      }

      unsigned int v93 = 17;
    }
    else
    {
      uint64_t v112 = Logger.logObject.getter();
      os_log_type_t v113 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v112, v113))
      {
        os_log_type_t v114 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v114 = 0;
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "Wifi is disabled", v114, 2u);
        swift_slowDealloc();
      }

      unsigned int v93 = 16;
    }
    id v115 = sub_10070E650(v93, 0, 0xE000000000000000);
    uint64_t v116 = swift_unknownObjectWeakLoadStrong();
    if (v116)
    {
      uint64_t v117 = (void *)v116;
      Class v118 = UUID._bridgeToObjectiveC()().super.isa;
      [v117 manager:v139 didFailAuthenticationFor:v118 error:v115];
      swift_unknownObjectRelease();
    }
    uint64_t v119 = (uint64_t)v125;
    static Date.distantPast.getter();
    sub_1006D5DAC(v119);

    (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v119, v45);
  }
  else
  {
    unint64_t v61 = v139;
    uint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      *(_DWORD *)uint64_t v64 = 136315138;
      uint64_t v139 = (char *)(v64 + 4);
      *(void *)&v140[0] = v65;
      swift_beginAccess();
      sub_10000BBC0(&qword_10096C4C8, (void (*)(uint64_t))&type metadata accessor for UUID);
      swift_bridgeObjectRetain();
      uint64_t v66 = Dictionary.description.getter();
      unint64_t v68 = v67;
      swift_bridgeObjectRelease();
      uint64_t v141 = sub_100254634(v66, v68, (uint64_t *)v140);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v62, v63, "Already processing authentication session, ongoing seesions: %s", v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v82 = sub_10070E650(0xAu, 0, 0xE000000000000000);
    uint64_t v83 = swift_unknownObjectWeakLoadStrong();
    if (v83)
    {
      id v84 = (void *)v83;
      Class v85 = UUID._bridgeToObjectiveC()().super.isa;
      [v84 manager:v61 didFailAuthenticationFor:v85 error:v82];
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return sub_10024D338((uint64_t)v145);
}

uint64_t sub_10070C874(Swift::UInt a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for DispatchPredicate();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void *)((char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29[3] = sub_10000B740(0, &qword_10097BB60);
  v29[4] = &off_1008E2510;
  v29[0] = a2;
  uint64_t v12 = *(void **)(a4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, enum case for DispatchPredicate.onQueue(_:), v8);
  id v13 = a2;
  id v14 = v12;
  LOBYTE(a2) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (a2)
  {
    if (a1 <= 0xE && ((1 << a1) & 0x658E) != 0)
    {
      sub_100278C8C((uint64_t)v29, (uint64_t)v26);
      sub_1006E98F8(a1, a3, (uint64_t)v26, v23);
    }
    else
    {
      sub_100278C8C((uint64_t)v29, (uint64_t)v26);
      sub_1006E9ECC(a1, (uint64_t)a3, (uint64_t)v26, (uint64_t)v23);
    }
    sub_10000A7E8((uint64_t)v26, &qword_10097BB50);
    uint64_t v16 = v24;
    uint64_t v17 = v25;
    uint64_t v18 = sub_10026BB6C(v23, v24);
    uint64_t v27 = v16;
    uint64_t v28 = *(void *)(v17 + 8);
    uint64_t v19 = sub_100278AE4(v26);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v19, v18, v16);
    sub_10024D338((uint64_t)v23);
    uint64_t v20 = v27;
    uint64_t v21 = v28;
    sub_10026BB6C(v26, v27);
    (*(void (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
    sub_10024D338((uint64_t)v26);
    return sub_10024D338((uint64_t)v29);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10070CADC(Swift::UInt a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = type metadata accessor for DispatchPredicate();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (void *)((char *)&v27[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33[3] = a5;
  v33[4] = a6;
  uint64_t v16 = sub_100278AE4(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 16))(v16, a2, a5);
  uint64_t v17 = *(void **)(a4 + OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue);
  *uint64_t v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, enum case for DispatchPredicate.onQueue(_:), v12);
  id v18 = v17;
  LOBYTE(v17) = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if (v17)
  {
    if (a1 <= 0xE && ((1 << a1) & 0x658E) != 0)
    {
      sub_100278C8C((uint64_t)v33, (uint64_t)v30);
      sub_1006E98F8(a1, a3, (uint64_t)v30, v27);
    }
    else
    {
      sub_100278C8C((uint64_t)v33, (uint64_t)v30);
      sub_1006E9ECC(a1, (uint64_t)a3, (uint64_t)v30, (uint64_t)v27);
    }
    sub_10000A7E8((uint64_t)v30, &qword_10097BB50);
    uint64_t v20 = v28;
    uint64_t v21 = v29;
    uint64_t v22 = sub_10026BB6C(v27, v28);
    uint64_t v31 = v20;
    uint64_t v32 = *(void *)(v21 + 8);
    id v23 = sub_100278AE4(v30);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v23, v22, v20);
    sub_10024D338((uint64_t)v27);
    uint64_t v24 = v31;
    uint64_t v25 = v32;
    sub_10026BB6C(v30, v31);
    (*(void (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
    sub_10024D338((uint64_t)v30);
    return sub_10024D338((uint64_t)v33);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10070CD64(uint64_t a1, char a2, uint64_t a3)
{
  *(void *)(v3 + 312) = a3;
  *(unsigned char *)(v3 + 440) = a2;
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  *(void *)(v3 + 320) = v5;
  *(void *)(v3 + 328) = *(void *)(v5 - 8);
  *(void *)(v3 + 336) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for DispatchQoS();
  *(void *)(v3 + 344) = v6;
  *(void *)(v3 + 352) = *(void *)(v6 - 8);
  *(void *)(v3 + 360) = swift_task_alloc();
  *(void *)(v3 + 368) = type metadata accessor for SDAuthenticationCommonOperationInput();
  *(void *)(v3 + 376) = swift_task_alloc();
  *(void *)(v3 + 384) = swift_task_alloc();
  *(void *)(v3 + 392) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SDAuthenticationSessionExecutor();
  *(void *)(v3 + 400) = v7;
  *(void *)(v3 + 288) = v7;
  *(void *)(v3 + 296) = &off_1008DDF60;
  *(void *)(v3 + 264) = a1;
  swift_retain();
  return _swift_task_switch(sub_10070CEFC, 0, 0);
}

uint64_t sub_10070CEFC()
{
  v1 = sub_10026BB6C(v0 + 33, v0[50]);
  v0[51] = v1;
  uint64_t v2 = *v1;
  return _swift_task_switch(sub_10070CF6C, v2, 0);
}

uint64_t sub_10070CF6C()
{
  sub_100278C8C(**(void **)(v0 + 408) + 112, v0 + 64);
  return _swift_task_switch(sub_10070CFE0, 0, 0);
}

uint64_t sub_10070CFE0()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[12];
  sub_10026BB6C(v0 + 8, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  v0[52] = *(void *)(v1 + *(int *)(v2 + 28));
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  uint64_t v5 = sub_10026BB6C(v0 + 33, v0[36]);
  v0[53] = v5;
  uint64_t v6 = *v5;
  return _swift_task_switch(sub_10070D0C8, v6, 0);
}

uint64_t sub_10070D0C8()
{
  sub_100278C8C(**(void **)(v0 + 424) + 112, v0 + 104);
  return _swift_task_switch(sub_10070D13C, 0, 0);
}

uint64_t sub_10070D13C()
{
  uint64_t v1 = *(void *)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 384);
  uint64_t v3 = *(void *)(v0 + 368);
  int v4 = *(unsigned __int8 *)(v0 + 440);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(void *)(v0 + 136);
  sub_10026BB6C((void *)(v0 + 104), v5);
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  char v7 = *(unsigned char *)(v2 + *(int *)(v3 + 32));
  sub_10070EE60(v2, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  if (v1 == 6 && (v7 & 1) == 0 && v4)
  {
    uint64_t v8 = sub_10026BB6C((void *)(v0 + 264), *(void *)(v0 + 288));
    *(void *)(v0 + 432) = v8;
    uint64_t v9 = *v8;
    return _swift_task_switch(sub_10070D2E0, v9, 0);
  }
  else
  {
    sub_10024D338(v0 + 104);
    sub_10024D338(v0 + 64);
    sub_10024D338(v0 + 264);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_10070D2E0()
{
  sub_100278C8C(**(void **)(v0 + 432) + 112, v0 + 184);
  return _swift_task_switch(sub_10070D354, 0, 0);
}

uint64_t sub_10070D354()
{
  uint64_t v1 = *((void *)v0 + 47);
  uint64_t v14 = *((void *)v0 + 44);
  uint64_t v15 = *((void *)v0 + 43);
  uint64_t v10 = *((void *)v0 + 45);
  uint64_t v11 = *((void *)v0 + 42);
  uint64_t v13 = *((void *)v0 + 41);
  uint64_t v2 = (void *)*((void *)v0 + 39);
  uint64_t v12 = *((void *)v0 + 40);
  uint64_t v3 = *((void *)v0 + 26);
  uint64_t v4 = *((void *)v0 + 27);
  sub_10026BB6C((void *)v0 + 23, v3);
  (*(void (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  sub_100278C8C(v1 + 40, (uint64_t)(v0 + 9));
  sub_10070EE60(v1, (uint64_t (*)(void))type metadata accessor for SDAuthenticationCommonOperationInput);
  sub_10024D338((uint64_t)v0 + 184);
  sub_100278C8C((uint64_t)(v0 + 9), (uint64_t)(v0 + 14));
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v2;
  sub_1002AF688(v0 + 14, v5 + 24);
  *((void *)v0 + 6) = sub_100710A64;
  *((void *)v0 + 7) = v5;
  *((void *)v0 + 2) = _NSConcreteStackBlock;
  *((void *)v0 + 3) = 1107296256;
  *((void *)v0 + 4) = sub_100296520;
  *((void *)v0 + 5) = &unk_1008E6670;
  uint64_t v6 = _Block_copy(v0 + 1);
  id v7 = v2;
  static DispatchQoS.unspecified.getter();
  *((void *)v0 + 38) = _swiftEmptyArrayStorage;
  sub_10000BBC0((unint64_t *)&qword_10096C8E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10000A844((uint64_t *)&unk_10096C490);
  sub_1002AE308((unint64_t *)&qword_10096C8F0, (uint64_t *)&unk_10096C490);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v10, v15);
  sub_10024D338((uint64_t)(v0 + 9));
  swift_release();
  sub_10024D338((uint64_t)v0 + 104);
  sub_10024D338((uint64_t)(v0 + 4));
  sub_10024D338((uint64_t)v0 + 264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v8();
}

void sub_10070D688(void *a1, uint64_t a2, void *a3, uint64_t a4, unsigned char *a5)
{
  os_log_type_t v63 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = sub_10000A844((uint64_t *)&unk_100975040);
  __chkstk_darwin(v9 - 8);
  uint64_t v66 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70[3] = sub_10000B740(0, &qword_100974158);
  v70[4] = &off_1008DBBF8;
  v70[0] = a4;
  v69[3] = type metadata accessor for SDAuthenticationSecurityManager(0);
  v69[4] = &off_1008D7208;
  v69[0] = a2;
  swift_unknownObjectWeakInit();
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessions] = _swiftEmptyArrayStorage;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessions] = &_swiftEmptyDictionarySingleton;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionAuthTypes] = &_swiftEmptyDictionarySingleton;
  *(void *)&a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_nearbyActionAdvertiser] = 0;
  uint64_t v11 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
  a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics] = 2;
  uint64_t v12 = (int *)type metadata accessor for StateMetrics(0);
  uint64_t v13 = &v11[v12[5]];
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(&v11[v12[6]], 1, 1, v14);
  v15(&v11[v12[7]], 1, 1, v14);
  v15(&v11[v12[8]], 1, 1, v14);
  *(void *)&v11[v12[9]] = &_swiftEmptyDictionarySingleton;
  *(void *)&v11[v12[10]] = &_swiftEmptyDictionarySingleton;
  uint64_t v16 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiatorDeviceStream];
  *(_OWORD *)uint64_t v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  *((void *)v16 + 4) = 0;
  uint64_t v17 = &a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_previousUnlockClassCLockDevice];
  *((void *)v17 + 4) = 0;
  *(_OWORD *)uint64_t v17 = 0u;
  *((_OWORD *)v17 + 1) = 0u;
  a5[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestUnlockNotificationPosted] = 0;
  uint64_t v18 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationStateByDeviceID;
  uint64_t v19 = a5;
  *(void *)&a5[v18] = sub_1002460C0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v64 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_registrationManager] = 0;
  uint64_t v20 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lastMacThatDidMacUnlockPhone];
  *(_OWORD *)uint64_t v20 = 0u;
  *((_OWORD *)v20 + 1) = 0u;
  *((void *)v20 + 4) = 0;
  uint64_t v21 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_macUnlockPhoneSessionIDThatNeedsArmingUI];
  uint64_t v22 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser] = 0;
  uint64_t v23 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_authenticationStateChangesObservers;
  *(void *)&v19[v23] = sub_1002462EC((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_requestContinuationsBySessionID] = &_swiftEmptyDictionarySingleton;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager____lazy_storage___unlockVolumeManager] = 0;
  uint64_t v24 = OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue] = a1;
  sub_100278C8C((uint64_t)v69, (uint64_t)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_securityManager]);
  uint64_t v25 = v63;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportManager] = v63;
  v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_transportsReady] = 0;
  sub_100278C8C((uint64_t)v70, (uint64_t)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsService]);
  uint64_t v26 = (id (**)())&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_generateAWDLInfo];
  *uint64_t v26 = sub_1006CE950;
  v26[1] = 0;
  uint64_t v27 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_commonContextGenerator];
  *uint64_t v27 = sub_1006CEC14;
  v27[1] = 0;
  uint64_t v28 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_flowGenerator];
  *uint64_t v28 = sub_1006CF4B4;
  v28[1] = 0;
  uint64_t v29 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_sessionGenerator];
  *uint64_t v29 = sub_1006D47B8;
  v29[1] = 0;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a1;
  uint64_t v31 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingLockSessionGenerator];
  *uint64_t v31 = sub_10070EEF8;
  v31[1] = v30;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = a1;
  uint64_t v33 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_pairingKeySessionGenerator];
  *uint64_t v33 = sub_10070EF00;
  v33[1] = v32;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = a1;
  os_log_type_t v35 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_lockSessionGenerator];
  *os_log_type_t v35 = sub_10070EF08;
  v35[1] = v34;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a1;
  uint64_t v37 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionInitiatorGenerator];
  void *v37 = sub_10070EF10;
  v37[1] = v36;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a1;
  uint64_t v39 = &v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_keySessionGenerator];
  *uint64_t v39 = sub_10070EF18;
  v39[1] = v38;
  unint64_t v40 = (id (**)())&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isWifiEnabled];
  *unint64_t v40 = sub_1006D5154;
  v40[1] = 0;
  uint64_t v41 = (id (**)())&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_isBluetoothEnabled];
  *uint64_t v41 = sub_1006D5160;
  v41[1] = 0;
  unint64_t v42 = (id (**)(uint64_t))&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_autoUnlockEligibleDevices];
  *unint64_t v42 = sub_1006D51CC;
  v42[1] = 0;
  uint64_t v43 = (void (**)(uint64_t@<X8>))&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_idsDeviceForUniqueID];
  *uint64_t v43 = sub_1006D5288;
  v43[1] = 0;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_retryCount] = 0;
  type metadata accessor for SDAuthenticationBioArmUnarmedDevices();
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v44 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_streamContinuation;
  uint64_t v46 = sub_10000A844((uint64_t *)&unk_10096F950);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  *(void *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyInfoScanner) = 0;
  *(void *)(v44 + OBJC_IVAR____TtC16DaemoniOSLibrary36SDAuthenticationBioArmUnarmedDevices_nearbyActionScanner) = 0;
  *(void *)&v19[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_bioArmKeyInitiator] = v44;
  id v47 = a1;
  char v48 = v25;
  if (SFDeviceClassCodeGet() == 1)
  {
    uint64_t v49 = *(void **)&v19[v24];
    type metadata accessor for SDAuthenticationRegistrationManager();
    swift_allocObject();
    uint64_t v50 = sub_100330E08(v49, 0);
    *(void *)&v19[v64] = v50;
LABEL_5:

    swift_release();
    goto LABEL_7;
  }
  uint64_t v51 = v64;
  if (SFDeviceClassCodeGet() == 5)
  {
    id v52 = *(void **)&v19[v24];
    type metadata accessor for SDAuthenticationRegistrationManager();
    swift_allocObject();
    *(void *)&v19[v51] = sub_100330E08(v52, 1);
    goto LABEL_5;
  }

LABEL_7:
  v68.receiver = v19;
  v68.super_class = ObjectType;
  id v53 = [super init];
  *(void *)&v48[OBJC_IVAR____TtC16DaemoniOSLibrary32SDAuthenticationTransportManager_delegate + 8] = &off_1008E6058;
  swift_unknownObjectWeakAssign();
  uint64_t v54 = (char *)v53;
  uint64_t v55 = (uint64_t)v66;
  Date.init()();
  v15((char *)v55, 0, 1, v14);
  uint64_t v56 = &v54[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_metrics];
  swift_beginAccess();
  sub_10026B410(v55, (uint64_t)&v56[v12[5]], (uint64_t *)&unk_100975040);
  swift_endAccess();
  os_log_type_t v57 = *(NSObject **)&v54[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = v54;
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = sub_10070EF20;
  *(void *)(v59 + 24) = v58;
  aBlock[4] = sub_1005C1424;
  aBlock[5] = v59;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1006CDF68;
  aBlock[3] = &unk_1008E62F8;
  unint64_t v60 = _Block_copy(aBlock);
  unint64_t v61 = v54;
  swift_retain();
  swift_release();
  dispatch_sync(v57, v60);
  _Block_release(v60);
  LOBYTE(v57) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();

  if (v57)
  {
    __break(1u);
  }
  else
  {
    sub_10024D338((uint64_t)v70);
    sub_10024D338((uint64_t)v69);
  }
}

uint64_t sub_10070DF84(int a1)
{
  uint64_t v1 = 0xD000000000000012;
  switch(a1)
  {
    case 4:
      NSString v2 = String._bridgeToObjectiveC()();
      id v3 = (id)SFLocalizedStringForKey();

      if (!v3)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
        goto LABEL_45;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v4 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_5:
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = (id)SFLocalizedStringForKey();

      if (!v7) {
        goto LABEL_37;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v8 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_8:
      NSString v9 = String._bridgeToObjectiveC()();
      id v10 = (id)SFLocalizedStringForKey();

      if (!v10) {
        goto LABEL_38;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v11 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_11:
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = (id)SFLocalizedStringForKey();

      if (!v13) {
        goto LABEL_39;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v14 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_14:
      NSString v15 = String._bridgeToObjectiveC()();
      id v16 = (id)SFLocalizedStringForKey();

      if (!v16) {
        goto LABEL_40;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v17 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_17:
      NSString v18 = String._bridgeToObjectiveC()();
      id v19 = (id)SFLocalizedStringForKey();

      if (!v19) {
        goto LABEL_41;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v20 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_20:
      NSString v21 = String._bridgeToObjectiveC()();
      id v22 = (id)SFLocalizedStringForKey();

      if (!v22) {
        goto LABEL_42;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v23 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_23:
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = (id)SFLocalizedStringForKey();

      if (!v25) {
        goto LABEL_43;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v26 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_26:
      NSString v27 = String._bridgeToObjectiveC()();
      id v28 = (id)SFLocalizedStringForKey();

      if (!v28) {
        goto LABEL_44;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v29 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (v5) {
        goto LABEL_34;
      }
      __break(1u);
LABEL_29:
      NSString v30 = String._bridgeToObjectiveC()();
      id v31 = (id)SFLocalizedStringForKey();

      if (!v31)
      {
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

      NSString v32 = String._bridgeToObjectiveC()();
      id v5 = (id)SFLocalizedStringForKey();

      if (!v5)
      {
        __break(1u);
LABEL_32:
        NSString v33 = String._bridgeToObjectiveC()();
        id v34 = (id)SFLocalizedStringForKey();

        if (v34)
        {
          uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();

          NSString v35 = String._bridgeToObjectiveC()();
          id v5 = (id)SFLocalizedStringForKey();

          if (v5) {
            goto LABEL_34;
          }
LABEL_47:
          __break(1u);
          JUMPOUT(0x10070E5F0);
        }
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
LABEL_34:
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      return v1;
    case 5:
      goto LABEL_5;
    case 12:
      goto LABEL_8;
    case 17:
      goto LABEL_11;
    case 18:
      goto LABEL_14;
    case 19:
      goto LABEL_17;
    case 20:
      goto LABEL_20;
    case 23:
      return v1;
    case 25:
      goto LABEL_23;
    case 26:
      goto LABEL_26;
    case 27:
      goto LABEL_29;
    default:
      goto LABEL_32;
  }
}

id sub_10070E650(unsigned int a1, uint64_t a2, uint64_t a3)
{
  if (String.count.getter() < 1)
  {
    id v6 = (id)SFAuthenticationErrorToString();
    a2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    a3 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  id v8 = [self standardUserDefaults];
  NSString v9 = String._bridgeToObjectiveC()();
  unsigned __int8 v10 = [v8 BOOLForKey:v9];

  if (v10)
  {
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_10000B47C(v11, (uint64_t)qword_10097F520);
    NSString v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v12, v13))
    {
      NSString v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "OCEUseDebugMsg is set. Preserving debug message", v14, 2u);
      swift_slowDealloc();
    }

    swift_bridgeObjectRetain();
    unint64_t v15 = 0xE500000000000000;
    uint64_t v16 = 0x6775626544;
    uint64_t v17 = a2;
    uint64_t v18 = a3;
  }
  else
  {
    uint64_t v16 = sub_10070DF84(a1);
    unint64_t v15 = v19;
    uint64_t v17 = v20;
    uint64_t v18 = v21;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v31 = a1;
  sub_10000A844((uint64_t *)&unk_10097D2B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007709D0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v24;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v16;
  *(void *)(inited + 104) = v15;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v25;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v17;
  *(void *)(inited + 152) = v18;
  sub_100245A7C(inited);
  id v26 = objc_allocWithZone((Class)NSError);
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v29 = [v26 initWithDomain:v27 code:v31 userInfo:isa];

  return v29;
}

uint64_t sub_10070E978(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10000A6F0;
  return sub_1006DF480(a1, v4, v5, v6, v7, (uint64_t)(v1 + 6));
}

uint64_t sub_10070EA44()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000A6F0;
  v2[7] = v0 + 32;
  return _swift_task_switch(sub_1006DF0D8, 0, 0);
}

const char *sub_10070EAF0(unsigned int a1)
{
  if (a1 > 8) {
    return "?";
  }
  else {
    return (&off_1008E6D78)[(char)a1];
  }
}

uint64_t sub_10070EB18(uint64_t a1)
{
  return sub_10032E1A4(a1, v1);
}

uint64_t sub_10070EB20()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 72) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_10070EC10(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + 32;
  uint64_t v9 = v1 + v5;
  uint64_t v10 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000A6F0;
  return sub_1006E849C(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_10070ED40()
{
  return sub_1006E92C4(*(char **)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_10070ED4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10070ED5C()
{
  return swift_release();
}

uint64_t sub_10070ED68()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_10000A6F0;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return _swift_task_switch(sub_1006E584C, 0, 0);
}

uint64_t sub_10070EE60(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10070EEC0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10070EEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t)@<X4>, void *a6@<X8>)
{
  return sub_1006D4904(a1, a2, a3, a4, a5, *(void **)(v6 + 16), a6);
}

void sub_10070EF00(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1006D4A4C(a1, a2, a3, *(void **)(v4 + 16), a4);
}

uint64_t sub_10070EF08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1006D4B78(a1, a2, a3, a4, *(void **)(v5 + 16), a5);
}

uint64_t sub_10070EF10@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1006D4CBC(a1, a2, a3, a4, *(void **)(v5 + 16), a5);
}

uint64_t sub_10070EF18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1006D4EE4(a1, a2, a3, *(void **)(v4 + 16), a4);
}

void sub_10070EF20()
{
  sub_1006D5358(*(char **)(v0 + 16));
}

uint64_t sub_10070EF28()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10070EF38(uint64_t a1)
{
  if (a1 != 4 || SFDeviceClassCodeGet() == 1 || !SFDeviceIsRealityDevice()) {
    return;
  }
  uint64_t v1 = self;
  id v2 = [v1 sharedManager];
  if (!v2)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v3 = v2;
  [v2 updateLocalLTK];

  id v4 = [v1 sharedManager];
  if (!v4)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v5 = v4;
  [v4 loadRemoteLTKsIfNeeded];

  id v6 = [self sharedTransport];
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v7 = v6;
  id v8 = [v6 enabledAutoUnlockDevices];

  if (!v8)
  {
LABEL_15:
    __break(1u);
    return;
  }
  sub_10000B740(0, &qword_10096B3E8);
  sub_100361188();
  uint64_t v9 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  if ((v9 & 0xC000000000000001) != 0) {
    __CocoaSet.count.getter();
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_10070F0AC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10070F0E4(uint64_t a1)
{
  return sub_1006E7764(a1, v1);
}

void sub_10070F0EC()
{
}

void sub_10070F0F4()
{
}

uint64_t sub_10070F0FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_10070F164()
{
}

void sub_10070F16C()
{
}

uint64_t sub_10070F174(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10070F1DC()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10070F214()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000A6F0;
  return sub_1006F78FC();
}

void sub_10070F2C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, char a6, char a7)
{
  int64_t v10 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(a3 + 56);
  char v14 = a7 & 1;
  int64_t v27 = (unint64_t)(v11 + 63) >> 6;
  while (v13)
  {
    unint64_t v15 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    id v30 = *(id *)(*(void *)(a3 + 48) + 8 * v16);
    id v20 = v30;
    sub_1006DA918(&v30, a4, a5, a6, v14);
    char v22 = v21;

    if (v7) {
      return;
    }
    if (v22)
    {
      *(unint64_t *)((char *)a1 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v25++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v27)
  {
LABEL_27:
    swift_retain();
    sub_100707600(a1, a2, v25, a3, &qword_100979EB0);
    return;
  }
  unint64_t v18 = *(void *)(v26 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v26 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_10070F4EC(uint64_t a1, uint64_t *a2, void *a3, char a4, char a5)
{
  char v9 = a5 & 1;
  char v10 = *(unsigned char *)(a1 + 32);
  unsigned int v11 = v10 & 0x3F;
  unint64_t v12 = (unint64_t)((1 << v10) + 63) >> 6;
  uint64_t isStackAllocationSafe = a3;
  char v14 = (void *)isStackAllocationSafe;
  if (v11 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v23 = (uint64_t)&v23;
    __chkstk_darwin(isStackAllocationSafe);
    unint64_t v15 = (char *)&v23 - ((8 * v12 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v15, 8 * v12);
    id v16 = v14;
    sub_10070F2C8((unint64_t *)v15, v12, a1, a2, (uint64_t)v16, a4, v9);
    uint64_t v18 = v17;
    swift_release();

    if (v5) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v19 = (void *)swift_slowAlloc();
    bzero(v19, 8 * v12);
    id v20 = v14;
    sub_10070F2C8((unint64_t *)v19, v12, a1, a2, (uint64_t)v20, a4, v9);
    uint64_t v18 = v21;
    swift_release();

    swift_slowDealloc();
  }
  return v18;
}

uint64_t sub_10070F6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 584) = a5;
  *(void *)(v5 + 544) = a4;
  *(void *)(v5 + 536) = a3;
  *(void *)(v5 + 528) = a2;
  *(void *)(v5 + 520) = a1;
  return _swift_task_switch(sub_10070F704, 0, 0);
}

uint64_t sub_10070F704()
{
  uint64_t v1 = (void *)v0;
  uint64_t v18 = v0 + 80;
  uint64_t v19 = v0 + 512;
  char v2 = *(unsigned char *)(v0 + 584);
  uint64_t v3 = *(void *)(v0 + 544);
  uint64_t v4 = *(void *)(v0 + 536);
  uint64_t v5 = *(void *)(v0 + 528);
  uint64_t v6 = *(void *)(v0 + 520);
  id v7 = [self standardUserDefaults];
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 integerForKey:v8];

  if (v9) {
    uint64_t v10 = (uint64_t)v9;
  }
  else {
    uint64_t v10 = 45;
  }
  sub_10000A844(&qword_10097F870);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100770AC0;
  *(_DWORD *)(inited + 32) = 1030;
  uint64_t v12 = sub_10000A844(&qword_10096B540);
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 48) = v5;
  *(_DWORD *)(inited + 72) = 2;
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 80) = v4;
  *(void *)(inited + 88) = v3;
  *(_DWORD *)(inited + 112) = 1001;
  *(void *)(inited + 144) = &type metadata for Int;
  *(void *)(inited + 120) = v10;
  *(_DWORD *)(inited + 152) = 1060;
  *(void *)(inited + 184) = &type metadata for Bool;
  *(unsigned char *)(inited + 160) = 1;
  *(_DWORD *)(inited + 192) = 1034;
  *(void *)(inited + 224) = &type metadata for Bool;
  *(unsigned char *)(inited + 200) = 1;
  *(_DWORD *)(inited + 232) = 1033;
  *(void *)(inited + 264) = &type metadata for Int32;
  *(_DWORD *)(inited + 240) = (v2 & 1) == 0;
  unint64_t v13 = sub_100249FE0(inited);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10000A844(&qword_10096AB30);
  swift_arrayDestroy();
  id v14 = [objc_allocWithZone((Class)LAContext) init];
  v1[69] = v14;
  sub_10039F6E8(v13);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v1[70] = isa;
  swift_bridgeObjectRelease();
  v1[10] = v1;
  v1[15] = v19;
  v1[11] = sub_10070FA10;
  uint64_t v16 = swift_continuation_init();
  v1[52] = _NSConcreteStackBlock;
  v1[53] = 0x40000000;
  v1[54] = sub_1006F75D4;
  v1[55] = &unk_1008E6460;
  v1[56] = v16;
  [v14 evaluatePolicy:1013 options:isa];
  return _swift_continuation_await(v18);
}

uint64_t sub_10070FA10()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 568) = v1;
  if (v1) {
    char v2 = sub_10070FF1C;
  }
  else {
    char v2 = sub_10070FB20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10070FB20()
{
  uint64_t v1 = *(void **)(v0 + 552);

  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 496;
  *(void *)(v0 + 24) = sub_10070FC3C;
  uint64_t v2 = swift_continuation_init();
  *(void *)(v0 + 456) = _NSConcreteStackBlock;
  *(void *)(v0 + 464) = 0x40000000;
  *(void *)(v0 + 472) = sub_1006AFCF4;
  *(void *)(v0 + 480) = &unk_1008E6478;
  *(void *)(v0 + 488) = v2;
  [v1 credentialOfType:-9 reply:v0 + 456];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_10070FC3C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 576) = v1;
  if (v1) {
    uint64_t v2 = sub_10070FF98;
  }
  else {
    uint64_t v2 = sub_10070FD4C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10070FD4C()
{
  unint64_t v1 = *(void *)(v0 + 504);
  if (v1 >> 60 == 15)
  {
    uint64_t v2 = *(void **)(v0 + 552);
    sub_10024D280();
    swift_allocError();
    *(_DWORD *)uint64_t v3 = 10;
    *(void *)(v3 + 8) = 0xD00000000000001FLL;
    *(void *)(v3 + 16) = 0x80000001007C8100;
    swift_willThrow();

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 496);
    if (qword_10096A190 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_10000B47C(v7, (uint64_t)qword_10097F520);
    NSString v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Finished waiting for policy to evaluate", v10, 2u);
      swift_slowDealloc();
    }

    unsigned int v11 = *(uint64_t (**)(uint64_t, unint64_t))(v0 + 8);
    return v11(v6, v1);
  }
}

uint64_t sub_10070FF1C()
{
  unint64_t v1 = (void *)v0[70];
  uint64_t v2 = (void *)v0[69];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10070FF98()
{
  unint64_t v1 = *(void **)(v0 + 552);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10071000C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 3) & 0xFFFFFFFFFFFFFFFCLL) + 11) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((v6 + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_100710108()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 3) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v4 = (v3 + 11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void **)(v0 + 16);
  unsigned int v6 = *(_DWORD *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + v4);
  uint64_t v8 = *(void *)(v0 + v4 + 8);
  uint64_t v9 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_1006FCF00(v5, v0 + v2, v6, v7, v8, v9);
}

uint64_t sub_1007101B4()
{
  uint64_t v1 = *(void *)(sub_10000A844(&qword_10097F888) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10000A844(&qword_10096C6B0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v0 + v3, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0 + v3, v8);
  }
  unint64_t v10 = (v14 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = (v11 + v6 + 8) & ~v6;
  sub_10024D338(v0 + v10);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v12, v4);

  return _swift_deallocObject(v0, ((v7 + v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v6 | 7);
}

uint64_t sub_1007103B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_10000A844(&qword_10097F888) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 16);
  int v7 = *(_DWORD *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = *(void *)(v1 + 48);
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_10000A6F0;
  return sub_1006FD83C(a1, v12, v6, v7, v8, v9, v1 + v4, v1 + v5);
}

uint64_t sub_100710588()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100710654(uint64_t a1)
{
  type metadata accessor for UUID();
  unint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void **)(v1 + 24);

  sub_1006FF274(a1, v3, v4);
}

uint64_t sub_1007106CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_100701764(a1, v4, v5, v6, v7, v8, v1 + 56);
}

uint64_t sub_1007107A4()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1007108A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1006FFA0C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(_DWORD *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v0 + v2, *(void (**)(id))(v0 + v3), *(void *)(v0 + v3 + 8));
}

uint64_t sub_100710948()
{
  sub_10024D338(v0 + 32);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1007109A0()
{
  return sub_1006FF78C(*(_DWORD *)(v0 + 16), *(void *)(v0 + 24), v0 + 32, *(void *)(v0 + 72), *(void *)(v0 + 80), *(uint64_t (**)(uint64_t))(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
}

uint64_t sub_1007109BC()
{
  swift_bridgeObjectRelease();

  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100710A0C()
{
  return sub_1006FF5AC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(uint64_t (**)(uint64_t))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_100710A24()
{
  sub_10024D338(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100710A64()
{
  sub_1006F707C(*(char **)(v0 + 16), v0 + 24);
}

uint64_t sub_100710A70(void *a1)
{
  return sub_100701E6C(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_100710A90()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 104) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 40);
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100710B80(uint64_t a1)
{
  type metadata accessor for UUID();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v8 = v1[12];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1006EB304(a1, v3, v4, v5, (uint64_t)(v1 + 5), v6, v7, v8);
}

uint64_t sub_100710CD8()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10024D338(v0 + v6);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, ((((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100710DDC()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void *)(v0 + v4);
  uint64_t v7 = *(void *)(v0 + v4 + 8);
  uint64_t v8 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_1006ED478(v5, v0 + v2, v0 + v3, v6, v7, v8);
}

uint64_t sub_100710E90()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100710EA0()
{
  uint64_t v1 = sub_10000A844(&qword_10096C920);
  __chkstk_darwin(v1 - 8);
  unint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v4 = *(void **)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_queue];
  type metadata accessor for SDAuthenticationNearbyInfoAdvertiser();
  uint64_t v5 = swift_allocObject();
  id v6 = objc_allocWithZone((Class)SFService);
  id v7 = v4;
  id v8 = [v6 init];
  *(void *)(v5 + 16) = v8;
  [v8 setIdentifier:SFServiceIdentifierAutoUnlock];
  id v9 = v8;
  [v9 setDispatchQueue:v7];

  *(void *)&v0[OBJC_IVAR____TtC16DaemoniOSLibrary23SDAuthenticationManager_approveNearbyInfoAdvertiser] = v5;
  swift_release();
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 1, 1, v10);
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = 0;
  v11[3] = 0;
  v11[4] = v0;
  uint64_t v12 = v0;
  sub_10028CFA8((uint64_t)v3, (uint64_t)&unk_10097FA08, (uint64_t)v11);
  return swift_release();
}

void sub_100711040()
{
  os_eligibility_get_domain_answer();
  if (qword_10096A190 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_10000B47C(v0, (uint64_t)qword_10097F520);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 67109376;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v3 + 8) = 2048;
    swift_beginAccess();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Device is ineligible for Oneness due to error %d, answer %llu", (uint8_t *)v3, 0x12u);
    swift_slowDealloc();
  }

  sub_10024D280();
  swift_allocError();
  *(_DWORD *)uint64_t v4 = 35;
  *(void *)(v4 + 8) = 0xD00000000000001CLL;
  *(void *)(v4 + 16) = 0x80000001007C81C0;
  swift_willThrow();
}

uint64_t sub_1007112E4()
{
  swift_unknownObjectRelease();

  sub_10024D338(v0 + 48);

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_10071132C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[8] = v3;
  v4[9] = v0 + 48;
  v4[7] = v2;
  return _swift_task_switch(sub_1006EE448, 0, 0);
}

uint64_t sub_1007113EC()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006EE344, 0, 0);
}

uint64_t sub_1007114A0()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F015C, 0, 0);
}

uint64_t sub_100711554()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F015C, 0, 0);
}

uint64_t sub_100711608()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F025C, 0, 0);
}

uint64_t sub_1007116BC()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F0E40, 0, 0);
}

uint64_t sub_100711770()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F2988, 0, 0);
}

uint64_t sub_100711824()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F2888, 0, 0);
}

uint64_t sub_1007118D8()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F3710, 0, 0);
}

uint64_t sub_10071198C()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F4D8C, 0, 0);
}

uint64_t sub_100711A40()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F4D8C, 0, 0);
}

uint64_t sub_100711AF4()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F58F8, 0, 0);
}

uint64_t sub_100711BA8()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F63AC, 0, 0);
}

uint64_t sub_100711C5C()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F6F9C, 0, 0);
}

uint64_t sub_100711D10()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F4140, 0, 0);
}

uint64_t sub_100711DC4()
{
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100711E0C()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  void *v4 = v1;
  v4[1] = sub_10000A6F0;
  v4[7] = v2;
  v4[8] = v3;
  return _swift_task_switch(sub_1006F4140, 0, 0);
}

uint64_t sub_100711EBC()
{
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);
  unint64_t v1 = *(void *)(v0 + 80);
  if (v1 >> 60 != 15) {
    sub_100250CC4(*(void *)(v0 + 72), v1);
  }

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100711F14()
{
  uint64_t v2 = v0 + 32;
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  unint64_t v5 = *(unsigned __int8 *)(v0 + 88) | ((unint64_t)*(unsigned int *)(v0 + 92) << 32);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  void *v6 = v1;
  v6[1] = sub_10000A6F0;
  v6[9] = v4;
  v6[10] = v5;
  v6[7] = v2;
  v6[8] = v3;
  return _swift_task_switch(sub_1006E4734, 0, 0);
}

uint64_t sub_100711FE0()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[3] = v2;
  return _swift_task_switch(sub_1006E3610, 0, 0);
}

uint64_t sub_10071208C()
{
  uint64_t v1 = sub_10000A844(&qword_10097FA10);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, ((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v12);
}

uint64_t sub_10071222C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_10000A844(&qword_10097FA10) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + v6);
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = v1 + v9;
  uint64_t v15 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_10000A6F4;
  return sub_1006E1CA4(a1, v10, v11, v1 + v5, v12, v13, v14, v15);
}

uint64_t sub_1007123FC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

void sub_1007124EC()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (void *)*((void *)v0 + 2);
  uint64_t v4 = (void *)*((void *)v0 + 3);
  Swift::UInt v5 = *((void *)v0 + 4);
  unint64_t v6 = *(void **)&v0[(*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8];

  sub_1006E2CF0(v3, v4, v5, &v0[v2], v6);
}

uint64_t sub_100712584()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_10000A6F4;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return _swift_task_switch(sub_1006E584C, 0, 0);
}

uint64_t sub_100712680()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10071275C()
{
  uint64_t v2 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v3 = v0 + 32;
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *unint64_t v7 = v1;
  v7[1] = sub_10000A6F0;
  v7[9] = v5;
  v7[10] = v6;
  v7[7] = v3;
  v7[8] = v4;
  return _swift_task_switch(sub_1006E0380, 0, 0);
}

uint64_t sub_100712858()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000A6F0;
  v2[7] = v0 + 32;
  return _swift_task_switch(sub_1006DDB40, 0, 0);
}

uint64_t sub_100712904()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 88) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10024D338(v0 + 48);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_100712A0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10000A6F0;
  return sub_1006DB584(a1, v5, v6, v7, v8, (uint64_t)(v1 + 6), v9, v10);
}

uint64_t sub_100712B78()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  sub_10024D338(v0 + v6);

  return _swift_deallocObject(v0, v7 + 8, v5);
}

uint64_t sub_100712C78()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1006ED3BC(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v2, v0 + v3, *(void *)(v0 + ((v3 + 47) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_100712D14()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100712D24()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100712D64()
{
  uint64_t v2 = v0[2];
  unint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_10000A6F0;
  unint64_t v6 = (uint64_t (*)(uint64_t, void *, void *))((char *)&dword_10097FA68 + dword_10097FA68);
  return v6(v2, v3, v4);
}

uint64_t sub_100712E20()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100712E58(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10000A6F0;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10097FA88 + dword_10097FA88);
  return v6(a1, v4);
}

uint64_t sub_100712F10@<X0>(unsigned char *a1@<X8>)
{
  return sub_10030B734(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_100712F34()
{
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *unint64_t v3 = v1;
  v3[1] = sub_10000A6F0;
  v3[2] = v2;
  return _swift_task_switch(sub_1006D7518, 0, 0);
}

uint64_t sub_100712FE0()
{
  swift_unknownObjectRelease();
  sub_10024D338(v0 + 32);

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100713020()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000A6F0;
  v2[7] = v0 + 32;
  return _swift_task_switch(sub_1006DF0D8, 0, 0);
}

uint64_t sub_1007130CC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_100713198()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1006FB058(v2, v3);
}

uint64_t sub_1007131FC()
{
  swift_unknownObjectRelease();

  sub_10024D338(v0 + 40);

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_100713244(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *unint64_t v7 = v2;
  v7[1] = sub_10000A6F0;
  return sub_1006FB790(a1, v4, v5, v6, v1 + 5);
}

uint64_t sub_10071330C()
{
  swift_unknownObjectRelease();

  sub_10024D338(v0 + 56);

  return _swift_deallocObject(v0, 96, 7);
}

uint64_t sub_100713354(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10000A6F0;
  return sub_1006FC364(a1, v4, v5, v6, v7, v8, v1 + 56);
}

uint64_t sub_100713430(void *a1)
{
  return sub_100710A70(a1) & 1;
}

void sub_1007134E8(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 absoluteString];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Cannot share URL %@ for a process without read permissions", (uint8_t *)&v4, 0xCu);
}

uint64_t static CocoaError.fileNoSuchFile.getter()
{
  return static CocoaError.fileNoSuchFile.getter();
}

uint64_t type metadata accessor for CocoaError.Code()
{
  return type metadata accessor for CocoaError.Code();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t POSIXError._nsError.getter()
{
  return POSIXError._nsError.getter();
}

uint64_t type metadata accessor for POSIXError()
{
  return type metadata accessor for POSIXError();
}

uint64_t static FormatStyle<>.idsID.getter()
{
  return static FormatStyle<>.idsID.getter();
}

uint64_t static FormatStyle<>.publicKey.getter()
{
  return static FormatStyle<>.publicKey.getter();
}

uint64_t static FormatStyle<>.irk.getter()
{
  return static FormatStyle<>.irk.getter();
}

uint64_t static FormatStyle<>.oslog(_:)()
{
  return static FormatStyle<>.oslog(_:)();
}

uint64_t static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)()
{
  return static FormatStyle<>.byteCount(style:allowedUnits:spellsOutZero:includesActualByteCount:)();
}

uint64_t dispatch thunk of JSONDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t JSONDecoder.init()()
{
  return JSONDecoder.init()();
}

uint64_t type metadata accessor for JSONDecoder()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t dispatch thunk of JSONEncoder.encode<A>(_:)()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t JSONEncoder.init()()
{
  return JSONEncoder.init()();
}

uint64_t type metadata accessor for JSONEncoder()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t URLQueryItem.init(name:value:)()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t type metadata accessor for URLQueryItem()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t URLComponents.queryItems.setter()
{
  return URLComponents.queryItems.setter();
}

uint64_t URLComponents.init(url:resolvingAgainstBaseURL:)()
{
  return URLComponents.init(url:resolvingAgainstBaseURL:)();
}

uint64_t URLComponents.url.getter()
{
  return URLComponents.url.getter();
}

uint64_t URLComponents.host.setter()
{
  return URLComponents.host.setter();
}

uint64_t URLComponents.scheme.getter()
{
  return URLComponents.scheme.getter();
}

uint64_t URLComponents.scheme.setter()
{
  return URLComponents.scheme.setter();
}

uint64_t URLComponents.init()()
{
  return URLComponents.init()();
}

uint64_t type metadata accessor for URLComponents()
{
  return type metadata accessor for URLComponents();
}

uint64_t __DataStorage.init(bytes:length:)()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t __DataStorage._bytes.getter()
{
  return __DataStorage._bytes.getter();
}

uint64_t __DataStorage.init(length:)()
{
  return __DataStorage.init(length:)();
}

uint64_t __DataStorage._length.getter()
{
  return __DataStorage._length.getter();
}

uint64_t __DataStorage._offset.getter()
{
  return __DataStorage._offset.getter();
}

uint64_t type metadata accessor for __DataStorage()
{
  return type metadata accessor for __DataStorage();
}

uint64_t static DateComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)()
{
  return dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
}

uint64_t URLResourceValues.isDirectory.getter()
{
  return URLResourceValues.isDirectory.getter();
}

uint64_t URLResourceValues.typeIdentifier.getter()
{
  return URLResourceValues.typeIdentifier.getter();
}

uint64_t URLResourceValues.isExcludedFromBackup.setter()
{
  return URLResourceValues.isExcludedFromBackup.setter();
}

uint64_t URLResourceValues.contentType.getter()
{
  return URLResourceValues.contentType.getter();
}

uint64_t URLResourceValues.fileSize.getter()
{
  return URLResourceValues.fileSize.getter();
}

uint64_t URLResourceValues.init()()
{
  return URLResourceValues.init()();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t static _ErrorCodeProtocol.~= infix(_:_:)()
{
  return static _ErrorCodeProtocol.~= infix(_:_:)();
}

uint64_t dispatch thunk of PropertyListDecoder.decode<A>(_:from:)()
{
  return dispatch thunk of PropertyListDecoder.decode<A>(_:from:)();
}

uint64_t PropertyListDecoder.init()()
{
  return PropertyListDecoder.init()();
}

uint64_t type metadata accessor for PropertyListDecoder()
{
  return type metadata accessor for PropertyListDecoder();
}

uint64_t dispatch thunk of PropertyListEncoder.outputFormat.setter()
{
  return dispatch thunk of PropertyListEncoder.outputFormat.setter();
}

uint64_t dispatch thunk of PropertyListEncoder.encode<A>(_:)()
{
  return dispatch thunk of PropertyListEncoder.encode<A>(_:)();
}

uint64_t PropertyListEncoder.init()()
{
  return PropertyListEncoder.init()();
}

uint64_t type metadata accessor for PropertyListEncoder()
{
  return type metadata accessor for PropertyListEncoder();
}

uint64_t type metadata accessor for ByteCountFormatStyle.Style()
{
  return type metadata accessor for ByteCountFormatStyle.Style();
}

uint64_t static ByteCountFormatStyle.Units.all.getter()
{
  return static ByteCountFormatStyle.Units.all.getter();
}

uint64_t type metadata accessor for ByteCountFormatStyle.Units()
{
  return type metadata accessor for ByteCountFormatStyle.Units();
}

uint64_t type metadata accessor for ByteCountFormatStyle()
{
  return type metadata accessor for ByteCountFormatStyle();
}

uint64_t PersonNameComponents.givenName.getter()
{
  return PersonNameComponents.givenName.getter();
}

uint64_t PersonNameComponents.familyName.getter()
{
  return PersonNameComponents.familyName.getter();
}

uint64_t PersonNameComponents.middleName.getter()
{
  return PersonNameComponents.middleName.getter();
}

uint64_t PersonNameComponents.namePrefix.getter()
{
  return PersonNameComponents.namePrefix.getter();
}

uint64_t PersonNameComponents.nameSuffix.getter()
{
  return PersonNameComponents.nameSuffix.getter();
}

NSPersonNameComponents __swiftcall PersonNameComponents._bridgeToObjectiveC()()
{
  uint64_t v0 = (objc_class *)PersonNameComponents._bridgeToObjectiveC()();
  result._private = v1;
  result.super.Class isa = v0;
  return result;
}

uint64_t static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static PersonNameComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t PersonNameComponents.nickname.getter()
{
  return PersonNameComponents.nickname.getter();
}

uint64_t type metadata accessor for PersonNameComponents()
{
  return type metadata accessor for PersonNameComponents();
}

uint64_t dispatch thunk of NSKeyValueObservation.invalidate()()
{
  return dispatch thunk of NSKeyValueObservation.invalidate()();
}

uint64_t _BridgedStoredNSError.init(_:userInfo:)()
{
  return _BridgedStoredNSError.init(_:userInfo:)();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t type metadata accessor for NSFastEnumerationIterator()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t URL.isFileURL.getter()
{
  return URL.isFileURL.getter();
}

uint64_t URL.description.getter()
{
  return URL.description.getter();
}

uint64_t URL.relativePath.getter()
{
  return URL.relativePath.getter();
}

uint64_t URL.standardized.getter()
{
  return URL.standardized.getter();
}

uint64_t type metadata accessor for URL.DirectoryHint()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t URL.pathExtension.getter()
{
  return URL.pathExtension.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.resourceValues(forKeys:)()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t URL.init(fileURLWithPath:)()
{
  return URL.init(fileURLWithPath:)();
}

uint64_t URL.hasDirectoryPath.getter()
{
  return URL.hasDirectoryPath.getter();
}

uint64_t URL.lastPathComponent.getter()
{
  return URL.lastPathComponent.getter();
}

uint64_t URL.setResourceValues(_:)()
{
  return URL.setResourceValues(_:)();
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

uint64_t URL.appendingPathExtension(for:)()
{
  return URL.appendingPathExtension(for:)();
}

uint64_t URL.appendingPathComponent(_:isDirectory:)()
{
  return URL.appendingPathComponent(_:isDirectory:)();
}

uint64_t URL.appendingPathComponent(_:)()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t URL.appendingPathExtension(_:)()
{
  return URL.appendingPathExtension(_:)();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> URL.checkResourceIsReachable()()
{
  return URL.checkResourceIsReachable()();
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::String __swiftcall URL.path(percentEncoded:)(Swift::Bool percentEncoded)
{
  uint64_t v1 = URL.path(percentEncoded:)(percentEncoded);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t URL.path.getter()
{
  return URL.path.getter();
}

uint64_t URL.append<A>(path:directoryHint:)()
{
  return URL.append<A>(path:directoryHint:)();
}

uint64_t URL.scheme.getter()
{
  return URL.scheme.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t URL.init(filePath:directoryHint:relativeTo:)()
{
  return URL.init(filePath:directoryHint:relativeTo:)();
}

uint64_t URL.appending<A>(path:directoryHint:)()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

Swift::Void __swiftcall Data.LargeSlice.ensureUniqueReference()()
{
}

Swift::String __swiftcall Data.hexString()()
{
  uint64_t v0 = Data.hexString()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

Swift::Void __swiftcall Data.InlineSlice.ensureUniqueReference()()
{
}

uint64_t Data.description.getter()
{
  return Data.description.getter();
}

uint64_t Data.init(referencing:)()
{
  return Data.init(referencing:)();
}

uint64_t Data._copyContents(initializing:)()
{
  return Data._copyContents(initializing:)();
}

uint64_t Data.init(base64Encoded:options:)()
{
  return Data.init(base64Encoded:options:)();
}

uint64_t type metadata accessor for Data.RangeReference()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t Data._Representation.replaceSubrange(_:with:count:)()
{
  return Data._Representation.replaceSubrange(_:with:count:)();
}

uint64_t Data._Representation.append(contentsOf:)()
{
  return Data._Representation.append(contentsOf:)();
}

uint64_t Data._Representation.subscript.getter()
{
  return Data._Representation.subscript.getter();
}

uint64_t Data.withUnsafeBytes<A, B>(_:)()
{
  return Data.withUnsafeBytes<A, B>(_:)();
}

uint64_t Data.debugDescription.getter()
{
  return Data.debugDescription.getter();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

Swift::String __swiftcall Data.base64EncodedString(options:)(NSDataBase64EncodingOptions options)
{
  uint64_t v1 = Data.base64EncodedString(options:)(options);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Data.hash(into:)()
{
  return Data.hash(into:)();
}

uint64_t Data.write(to:options:)()
{
  return Data.write(to:options:)();
}

uint64_t Data.append(_:)()
{
  return Data.append(_:)();
}

uint64_t Data.subdata(in:)()
{
  return Data.subdata(in:)();
}

uint64_t type metadata accessor for Data.Iterator()
{
  return type metadata accessor for Data.Iterator();
}

uint64_t Data.Iterator.init(_:at:)()
{
  return Data.Iterator.init(_:at:)();
}

uint64_t Data.copyBytes(to:count:)()
{
  return Data.copyBytes(to:count:)();
}

uint64_t Data.subscript.getter()
{
  return Data.subscript.getter();
}

uint64_t Date.timeIntervalSinceReferenceDate.getter()
{
  return Date.timeIntervalSinceReferenceDate.getter();
}

uint64_t Date.description.getter()
{
  return Date.description.getter();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t static Date.distantFuture.getter()
{
  return static Date.distantFuture.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t Date.init(timeIntervalSince1970:)()
{
  return Date.init(timeIntervalSince1970:)();
}

uint64_t Date.timeIntervalSince1970.getter()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.formatted<A>(_:)()
{
  return Date.formatted<A>(_:)();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

uint64_t UUID.description.getter()
{
  return UUID.description.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.< infix(_:_:)()
{
  return static UUID.< infix(_:_:)();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init(uuid:)()
{
  return UUID.init(uuid:)();
}

uint64_t UUID.uuid.getter()
{
  return UUID.uuid.getter();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t static Locale._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Locale._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.date(byAdding:value:to:wrappingComponents:)()
{
  return Calendar.date(byAdding:value:to:wrappingComponents:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t type metadata accessor for ProductKitCatalog()
{
  return type metadata accessor for ProductKitCatalog();
}

uint64_t iosmacHardware.imageName.getter()
{
  return iosmacHardware.imageName.getter();
}

uint64_t type metadata accessor for iosmacHardware()
{
  return type metadata accessor for iosmacHardware();
}

uint64_t iosmacHardware.init(_:)()
{
  return iosmacHardware.init(_:)();
}

uint64_t isFeatureEnabled(_:)()
{
  return isFeatureEnabled(_:)();
}

uint64_t type metadata accessor for AKSRefKeyParam()
{
  return type metadata accessor for AKSRefKeyParam();
}

uint64_t dispatch thunk of AKSRefKeyParams.set_number(key:value:)()
{
  return dispatch thunk of AKSRefKeyParams.set_number(key:value:)();
}

uint64_t dispatch thunk of AKSRefKeyParams.set_data(key:value:)()
{
  return dispatch thunk of AKSRefKeyParams.set_data(key:value:)();
}

uint64_t dispatch thunk of AKSRefKeyParams.serialize()()
{
  return dispatch thunk of AKSRefKeyParams.serialize()();
}

uint64_t AKSRefKeyParams.init()()
{
  return AKSRefKeyParams.init()();
}

uint64_t type metadata accessor for AKSRefKeyParams()
{
  return type metadata accessor for AKSRefKeyParams();
}

uint64_t AKSKeyClass.rawValue.getter()
{
  return AKSKeyClass.rawValue.getter();
}

uint64_t type metadata accessor for AKSKeyClass()
{
  return type metadata accessor for AKSKeyClass();
}

uint64_t static _CFObject.== infix(_:_:)()
{
  return static _CFObject.== infix(_:_:)();
}

uint64_t _CFObject.hash(into:)()
{
  return _CFObject.hash(into:)();
}

uint64_t _CFObject.hashValue.getter()
{
  return _CFObject.hashValue.getter();
}

uint64_t LSKPublishedStatus.debugDescription.getter()
{
  return LSKPublishedStatus.debugDescription.getter();
}

uint64_t LSKPublishedStatusSequence.makeAsyncIterator()()
{
  return LSKPublishedStatusSequence.makeAsyncIterator()();
}

uint64_t LSKLocalStatusObservation.deviceIDSIdentifier.getter()
{
  return LSKLocalStatusObservation.deviceIDSIdentifier.getter();
}

uint64_t LSKLocalStatusObservation.value.getter()
{
  return LSKLocalStatusObservation.value.getter();
}

uint64_t LSKLocalStatusClient.init()()
{
  return LSKLocalStatusClient.init()();
}

uint64_t type metadata accessor for LSKLocalStatusClient()
{
  return type metadata accessor for LSKLocalStatusClient();
}

uint64_t type metadata accessor for LSKStatusOptions.DeviceType()
{
  return type metadata accessor for LSKStatusOptions.DeviceType();
}

uint64_t type metadata accessor for LSKStatusOptions.Scope()
{
  return type metadata accessor for LSKStatusOptions.Scope();
}

uint64_t LSKStatusOptions.init(scope:publishToDeviceTypes:)()
{
  return LSKStatusOptions.init(scope:publishToDeviceTypes:)();
}

uint64_t type metadata accessor for LSKStatusOptions()
{
  return type metadata accessor for LSKStatusOptions();
}

uint64_t LSKObservationsSequence.makeAsyncIterator()()
{
  return LSKObservationsSequence.makeAsyncIterator()();
}

uint64_t LSKKey.init(domain:name:)()
{
  return LSKKey.init(domain:name:)();
}

uint64_t type metadata accessor for LSKKey()
{
  return type metadata accessor for LSKKey();
}

uint64_t type metadata accessor for LSKDomain()
{
  return type metadata accessor for LSKDomain();
}

uint64_t NameDropIdentity.shared.unsafeMutableAddressor()
{
  return NameDropIdentity.shared.unsafeMutableAddressor();
}

uint64_t vCardContactProvider.init(data:)()
{
  return vCardContactProvider.init(data:)();
}

uint64_t vCardContactProvider.contacts()()
{
  return vCardContactProvider.contacts()();
}

uint64_t UTType.identifier.getter()
{
  return UTType.identifier.getter();
}

uint64_t static UTType.propertyList.getter()
{
  return static UTType.propertyList.getter();
}

uint64_t UTType.init(filenameExtension:conformingTo:)()
{
  return UTType.init(filenameExtension:conformingTo:)();
}

uint64_t static UTType._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UTType._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static UTType.data.getter()
{
  return static UTType.data.getter();
}

uint64_t static UTType.heic.getter()
{
  return static UTType.heic.getter();
}

uint64_t static UTType.jpeg.getter()
{
  return static UTType.jpeg.getter();
}

uint64_t static UTType.package.getter()
{
  return static UTType.package.getter();
}

uint64_t UTType.conforms(to:)()
{
  return UTType.conforms(to:)();
}

uint64_t UTType.isDynamic.getter()
{
  return UTType.isDynamic.getter();
}

uint64_t static UTType.livePhoto.getter()
{
  return static UTType.livePhoto.getter();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t UTType.init(_:)()
{
  return UTType.init(_:)();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.shouldShowWhatsNewCard(deviceAddress:)()
{
  return dispatch thunk of HeadphoneProxFeatureManager.shouldShowWhatsNewCard(deviceAddress:)();
}

uint64_t static HeadphoneProxFeatureManager.shared.getter()
{
  return static HeadphoneProxFeatureManager.shared.getter();
}

uint64_t dispatch thunk of HeadphoneProxFeatureManager.delegate.setter()
{
  return dispatch thunk of HeadphoneProxFeatureManager.delegate.setter();
}

uint64_t type metadata accessor for HeadphoneProxFeatureManager()
{
  return type metadata accessor for HeadphoneProxFeatureManager();
}

uint64_t os_log(_:dso:log:type:_:)()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t os_signpost(_:dso:log:name:signpostID:)()
{
  return os_signpost(_:dso:log:name:signpostID:)();
}

uint64_t OSSignpostID.init(log:object:)()
{
  return OSSignpostID.init(log:object:)();
}

uint64_t type metadata accessor for OSSignpostID()
{
  return type metadata accessor for OSSignpostID();
}

uint64_t static Logger.airDropNWClient.getter()
{
  return static Logger.airDropNWClient.getter();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t Logger.init(subsystem:category:)()
{
  return Logger.init(subsystem:category:)();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t XPC_ARRAY_APPEND.getter()
{
  return XPC_ARRAY_APPEND.getter();
}

uint64_t POSIXErrorCode.rawValue.getter()
{
  return POSIXErrorCode.rawValue.getter();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return AsyncPublisher.makeAsyncIterator()();
}

uint64_t CurrentValueSubject.send(completion:)()
{
  return CurrentValueSubject.send(completion:)();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.value.modify()
{
  return CurrentValueSubject.value.modify();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.value.setter()
{
  return CurrentValueSubject.value.setter();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t Just.map<A>(_:)()
{
  return Just.map<A>(_:)();
}

uint64_t Just.init(_:)()
{
  return Just.init(_:)();
}

uint64_t Published.init(initialValue:)()
{
  return Published.init(initialValue:)();
}

uint64_t Published.projectedValue.getter()
{
  return Published.projectedValue.getter();
}

uint64_t static Published.subscript.modify()
{
  return static Published.subscript.modify();
}

uint64_t static Published.subscript.getter()
{
  return static Published.subscript.getter();
}

uint64_t static Published.subscript.setter()
{
  return static Published.subscript.setter();
}

uint64_t type metadata accessor for Published()
{
  return type metadata accessor for Published();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.values.getter()
{
  return Publisher<>.values.getter();
}

uint64_t NWEndpoint.debugDescription.getter()
{
  return NWEndpoint.debugDescription.getter();
}

uint64_t NWEndpoint.nw.getter()
{
  return NWEndpoint.nw.getter();
}

uint64_t NWEndpoint.Host.init(stringLiteral:)()
{
  return NWEndpoint.Host.init(stringLiteral:)();
}

uint64_t NWEndpoint.Port.init(integerLiteral:)()
{
  return NWEndpoint.Port.init(integerLiteral:)();
}

uint64_t static NWEndpoint.Port.any.getter()
{
  return static NWEndpoint.Port.any.getter();
}

uint64_t type metadata accessor for NWEndpoint.Port()
{
  return type metadata accessor for NWEndpoint.Port();
}

uint64_t NWEndpoint.endpointUUID()()
{
  return NWEndpoint.endpointUUID()();
}

uint64_t NWEndpoint.txtRecord.getter()
{
  return NWEndpoint.txtRecord.getter();
}

uint64_t type metadata accessor for NWEndpoint()
{
  return type metadata accessor for NWEndpoint();
}

uint64_t NWListener.debugDescription.getter()
{
  return NWListener.debugDescription.getter();
}

uint64_t NWListener.__allocating_init(applicationService:using:)()
{
  return NWListener.__allocating_init(applicationService:using:)();
}

uint64_t NWListener.stateUpdateHandler.setter()
{
  return NWListener.stateUpdateHandler.setter();
}

uint64_t NWListener.newConnectionHandler.setter()
{
  return NWListener.newConnectionHandler.setter();
}

uint64_t type metadata accessor for NWListener.State()
{
  return type metadata accessor for NWListener.State();
}

uint64_t NWListener.start(queue:)()
{
  return NWListener.start(queue:)();
}

uint64_t NWListener.state.getter()
{
  return NWListener.state.getter();
}

uint64_t NWListener.init(using:on:)()
{
  return NWListener.init(using:on:)();
}

Swift::Void __swiftcall NWListener.cancel()()
{
}

uint64_t NWListener.Service.init(name:type:domain:txtRecord:)()
{
  return NWListener.Service.init(name:type:domain:txtRecord:)();
}

{
  return NWListener.Service.init(name:type:domain:txtRecord:)();
}

uint64_t type metadata accessor for NWListener.Service()
{
  return type metadata accessor for NWListener.Service();
}

uint64_t NWListener.service.setter()
{
  return NWListener.service.setter();
}

uint64_t type metadata accessor for NWListener()
{
  return type metadata accessor for NWListener();
}

uint64_t NWListener.__allocating_init(_:)()
{
  return NWListener.__allocating_init(_:)();
}

uint64_t type metadata accessor for NWInterface.InterfaceType()
{
  return type metadata accessor for NWInterface.InterfaceType();
}

uint64_t type metadata accessor for NWInterface.InterfaceSubtype()
{
  return type metadata accessor for NWInterface.InterfaceSubtype();
}

uint64_t NWInterface.name.getter()
{
  return NWInterface.name.getter();
}

uint64_t type metadata accessor for NWInterface()
{
  return type metadata accessor for NWInterface();
}

uint64_t NWInterface.init(_:)()
{
  return NWInterface.init(_:)();
}

uint64_t NWTXTRecord.data.getter()
{
  return NWTXTRecord.data.getter();
}

uint64_t type metadata accessor for NWTXTRecord.Entry()
{
  return type metadata accessor for NWTXTRecord.Entry();
}

uint64_t NWTXTRecord.getEntry(for:)()
{
  return NWTXTRecord.getEntry(for:)();
}

uint64_t type metadata accessor for NWTXTRecord()
{
  return type metadata accessor for NWTXTRecord();
}

uint64_t NWTXTRecord.init(_:)()
{
  return NWTXTRecord.init(_:)();
}

uint64_t NWTXTRecord.subscript.getter()
{
  return NWTXTRecord.subscript.getter();
}

uint64_t NWConnection.currentPath.getter()
{
  return NWConnection.currentPath.getter();
}

Swift::Void __swiftcall NWConnection.forceCancel()()
{
}

uint64_t NWConnection.debugDescription.getter()
{
  return NWConnection.debugDescription.getter();
}

uint64_t NWConnection.stateUpdateHandler.setter()
{
  return NWConnection.stateUpdateHandler.setter();
}

uint64_t NWConnection.nw.getter()
{
  return NWConnection.nw.getter();
}

uint64_t NWConnection.init(to:using:)()
{
  return NWConnection.init(to:using:)();
}

uint64_t static NWConnection.State.== infix(_:_:)()
{
  return static NWConnection.State.== infix(_:_:)();
}

uint64_t type metadata accessor for NWConnection.State()
{
  return type metadata accessor for NWConnection.State();
}

uint64_t NWConnection.start(queue:)()
{
  return NWConnection.start(queue:)();
}

uint64_t NWConnection.state.getter()
{
  return NWConnection.state.getter();
}

Swift::Void __swiftcall NWConnection.cancel()()
{
}

uint64_t type metadata accessor for NWConnection()
{
  return type metadata accessor for NWConnection();
}

uint64_t NWConnection.__allocating_init(_:)()
{
  return NWConnection.__allocating_init(_:)();
}

uint64_t NWParameters.includePeerToPeer.setter()
{
  return NWParameters.includePeerToPeer.setter();
}

uint64_t NWParameters.preferNoProxies.setter()
{
  return NWParameters.preferNoProxies.setter();
}

uint64_t NWParameters.requiredInterface.setter()
{
  return NWParameters.requiredInterface.setter();
}

uint64_t static NWParameters.applicationService.getter()
{
  return static NWParameters.applicationService.getter();
}

uint64_t NWParameters.requiredLocalEndpoint.setter()
{
  return NWParameters.requiredLocalEndpoint.setter();
}

uint64_t NWParameters.allowLocalEndpointReuse.setter()
{
  return NWParameters.allowLocalEndpointReuse.setter();
}

uint64_t NWParameters.requiredInterfaceSubtype.setter()
{
  return NWParameters.requiredInterfaceSubtype.setter();
}

uint64_t NWParameters.nw.getter()
{
  return NWParameters.nw.getter();
}

uint64_t static NWParameters.tcp.getter()
{
  return static NWParameters.tcp.getter();
}

uint64_t NWParameters.__allocating_init(tls:tcp:)()
{
  return NWParameters.__allocating_init(tls:tcp:)();
}

uint64_t static NWParameters.airDropNetworkBrowserParameters(domain:type:)()
{
  return static NWParameters.airDropNetworkBrowserParameters(domain:type:)();
}

uint64_t static NWParameters.airDropClientBrowserParameters(domain:type:bundleID:)()
{
  return static NWParameters.airDropClientBrowserParameters(domain:type:bundleID:)();
}

uint64_t NWParameters.init()()
{
  return NWParameters.init()();
}

uint64_t type metadata accessor for NWParameters()
{
  return type metadata accessor for NWParameters();
}

uint64_t NWParameters.__allocating_init(_:)()
{
  return NWParameters.__allocating_init(_:)();
}

uint64_t dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter()
{
  return dispatch thunk of NWProtocolTCP.Options.keepaliveIdle.setter();
}

uint64_t dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter()
{
  return dispatch thunk of NWProtocolTCP.Options.enableFastOpen.setter();
}

uint64_t dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter()
{
  return dispatch thunk of NWProtocolTCP.Options.enableKeepalive.setter();
}

uint64_t NWProtocolTCP.Options.init()()
{
  return NWProtocolTCP.Options.init()();
}

uint64_t type metadata accessor for NWProtocolTCP.Options()
{
  return type metadata accessor for NWProtocolTCP.Options();
}

uint64_t dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter()
{
  return dispatch thunk of NWProtocolTLS.Options.securityProtocolOptions.getter();
}

uint64_t NWProtocolTLS.Options.init()()
{
  return NWProtocolTLS.Options.init()();
}

uint64_t type metadata accessor for NWProtocolTLS.Options()
{
  return type metadata accessor for NWProtocolTLS.Options();
}

uint64_t NWPath.usesInterfaceType(_:)()
{
  return NWPath.usesInterfaceType(_:)();
}

uint64_t NWPath.usesInterfaceSubtype(_:)()
{
  return NWPath.usesInterfaceSubtype(_:)();
}

uint64_t NWPath.isDirect.getter()
{
  return NWPath.isDirect.getter();
}

uint64_t type metadata accessor for NWPath()
{
  return type metadata accessor for NWPath();
}

uint64_t type metadata accessor for NWError()
{
  return type metadata accessor for NWError();
}

uint64_t NWBrowser.Descriptor.Options.applicationServiceEndpointsOnly.setter()
{
  return NWBrowser.Descriptor.Options.applicationServiceEndpointsOnly.setter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.adhoc_paired.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.adhoc_paired.getter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.all.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.all.getter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.nfc.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.nfc.getter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.family.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.family.getter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.contacts.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.contacts.getter();
}

uint64_t static NWBrowser.Descriptor.Options.Scope.personal.getter()
{
  return static NWBrowser.Descriptor.Options.Scope.personal.getter();
}

uint64_t type metadata accessor for NWBrowser.Descriptor.Options.Scope()
{
  return type metadata accessor for NWBrowser.Descriptor.Options.Scope();
}

uint64_t NWBrowser.Descriptor.Options.init(scope:)()
{
  return NWBrowser.Descriptor.Options.init(scope:)();
}

uint64_t type metadata accessor for NWBrowser.Descriptor.Options()
{
  return type metadata accessor for NWBrowser.Descriptor.Options();
}

uint64_t type metadata accessor for NWBrowser.Descriptor()
{
  return type metadata accessor for NWBrowser.Descriptor();
}

uint64_t NWBrowser.stateUpdateHandler.setter()
{
  return NWBrowser.stateUpdateHandler.setter();
}

uint64_t NWBrowser.browseResultsChangedHandler.setter()
{
  return NWBrowser.browseResultsChangedHandler.setter();
}

uint64_t NWBrowser.init(for:using:)()
{
  return NWBrowser.init(for:using:)();
}

uint64_t type metadata accessor for NWBrowser.State()
{
  return type metadata accessor for NWBrowser.State();
}

uint64_t NWBrowser.start(queue:)()
{
  return NWBrowser.start(queue:)();
}

uint64_t NWBrowser.Result.interfaces.getter()
{
  return NWBrowser.Result.interfaces.getter();
}

uint64_t static NWBrowser.Result.Change.Flags.metadataChanged.getter()
{
  return static NWBrowser.Result.Change.Flags.metadataChanged.getter();
}

uint64_t type metadata accessor for NWBrowser.Result.Change.Flags()
{
  return type metadata accessor for NWBrowser.Result.Change.Flags();
}

uint64_t type metadata accessor for NWBrowser.Result.Change()
{
  return type metadata accessor for NWBrowser.Result.Change();
}

uint64_t type metadata accessor for NWBrowser.Result.Metadata()
{
  return type metadata accessor for NWBrowser.Result.Metadata();
}

uint64_t NWBrowser.Result.endpoint.getter()
{
  return NWBrowser.Result.endpoint.getter();
}

uint64_t NWBrowser.Result.metadata.getter()
{
  return NWBrowser.Result.metadata.getter();
}

uint64_t type metadata accessor for NWBrowser.Result()
{
  return type metadata accessor for NWBrowser.Result();
}

Swift::Void __swiftcall NWBrowser.cancel()()
{
}

uint64_t type metadata accessor for NWBrowser()
{
  return type metadata accessor for NWBrowser();
}

uint64_t static SFPlatform.isPlatform(_:)()
{
  return static SFPlatform.isPlatform(_:)();
}

uint64_t static SFPlatform.iOS.getter()
{
  return static SFPlatform.iOS.getter();
}

uint64_t static SFPlatform.tvOS.getter()
{
  return static SFPlatform.tvOS.getter();
}

uint64_t static SFPlatform.macOS.getter()
{
  return static SFPlatform.macOS.getter();
}

uint64_t static SFPlatform.watchOS.getter()
{
  return static SFPlatform.watchOS.getter();
}

uint64_t static SFPlatform.visionOS.getter()
{
  return static SFPlatform.visionOS.getter();
}

uint64_t type metadata accessor for SFPlatform()
{
  return type metadata accessor for SFPlatform();
}

uint64_t CodableError.description.getter()
{
  return CodableError.description.getter();
}

uint64_t CodableError.localizedDescription.getter()
{
  return CodableError.localizedDescription.getter();
}

uint64_t CodableError.domain.getter()
{
  return CodableError.domain.getter();
}

uint64_t type metadata accessor for CodableError()
{
  return type metadata accessor for CodableError();
}

uint64_t CodableError.init(_:)()
{
  return CodableError.init(_:)();
}

uint64_t VoidResponse.init()()
{
  return VoidResponse.init()();
}

uint64_t SFAirDropSend.ItemMetadata.fileBOMPath.getter()
{
  return SFAirDropSend.ItemMetadata.fileBOMPath.getter();
}

uint64_t SFAirDropSend.ItemMetadata.fileSubType.getter()
{
  return SFAirDropSend.ItemMetadata.fileSubType.getter();
}

uint64_t SFAirDropSend.ItemMetadata.fileIsDirectory.getter()
{
  return SFAirDropSend.ItemMetadata.fileIsDirectory.getter();
}

uint64_t SFAirDropSend.ItemMetadata.fileName.getter()
{
  return SFAirDropSend.ItemMetadata.fileName.getter();
}

uint64_t SFAirDropSend.ItemMetadata.fileSize.getter()
{
  return SFAirDropSend.ItemMetadata.fileSize.getter();
}

uint64_t SFAirDropSend.ItemMetadata.fileType.getter()
{
  return SFAirDropSend.ItemMetadata.fileType.getter();
}

uint64_t type metadata accessor for SFAirDropSend.ItemMetadata()
{
  return type metadata accessor for SFAirDropSend.ItemMetadata();
}

uint64_t SFAirDropSend.Failure.errorDescription.getter()
{
  return SFAirDropSend.Failure.errorDescription.getter();
}

uint64_t static SFAirDropSend.Failure.== infix(_:_:)()
{
  return static SFAirDropSend.Failure.== infix(_:_:)();
}

uint64_t type metadata accessor for SFAirDropSend.Failure()
{
  return type metadata accessor for SFAirDropSend.Failure();
}

uint64_t SFAirDropSend.Failure.init(_:)()
{
  return SFAirDropSend.Failure.init(_:)();
}

uint64_t SFAirDropSend.Request.endpointID.getter()
{
  return SFAirDropSend.Request.endpointID.getter();
}

uint64_t SFAirDropSend.Request.urlsPromise.getter()
{
  return SFAirDropSend.Request.urlsPromise.getter();
}

uint64_t SFAirDropSend.Request.urlsMetadata.getter()
{
  return SFAirDropSend.Request.urlsMetadata.getter();
}

uint64_t SFAirDropSend.Request.customPayload.getter()
{
  return SFAirDropSend.Request.customPayload.getter();
}

uint64_t SFAirDropSend.Request.requestSource.getter()
{
  return SFAirDropSend.Request.requestSource.getter();
}

uint64_t SFAirDropSend.Request.itemPreviewData.getter()
{
  return SFAirDropSend.Request.itemPreviewData.getter();
}

uint64_t SFAirDropSend.Request.requestWithType(_:)()
{
  return SFAirDropSend.Request.requestWithType(_:)();
}

uint64_t SFAirDropSend.Request.supportsPipelining.getter()
{
  return SFAirDropSend.Request.supportsPipelining.getter();
}

uint64_t SFAirDropSend.Request.id.getter()
{
  return SFAirDropSend.Request.id.getter();
}

uint64_t SFAirDropSend.Request.type.getter()
{
  return SFAirDropSend.Request.type.getter();
}

uint64_t SFAirDropSend.Request.urls.getter()
{
  return SFAirDropSend.Request.urls.getter();
}

uint64_t type metadata accessor for SFAirDropSend.Request()
{
  return type metadata accessor for SFAirDropSend.Request();
}

uint64_t SFAirDropSend.Transfer.endpointID.getter()
{
  return SFAirDropSend.Transfer.endpointID.getter();
}

uint64_t SFAirDropSend.Transfer.sendRequest.getter()
{
  return SFAirDropSend.Transfer.sendRequest.getter();
}

uint64_t SFAirDropSend.Transfer.receiverName.getter()
{
  return SFAirDropSend.Transfer.receiverName.getter();
}

uint64_t SFAirDropSend.Transfer.displayPriority.getter()
{
  return SFAirDropSend.Transfer.displayPriority.getter();
}

uint64_t SFAirDropSend.Transfer.bundleIdentifier.getter()
{
  return SFAirDropSend.Transfer.bundleIdentifier.getter();
}

uint64_t SFAirDropSend.Transfer.activeInterfaceType.getter()
{
  return SFAirDropSend.Transfer.activeInterfaceType.getter();
}

uint64_t SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)()
{
  return SFAirDropSend.Transfer.init(id:sendRequest:receiverName:startDate:state:displayPriority:bundleIdentifier:activeInterfaceType:presenter:)();
}

uint64_t SFAirDropSend.Transfer.id.getter()
{
  return SFAirDropSend.Transfer.id.getter();
}

uint64_t SFAirDropSend.Transfer.State.description.getter()
{
  return SFAirDropSend.Transfer.State.description.getter();
}

uint64_t SFAirDropSend.Transfer.State.metrics.getter()
{
  return SFAirDropSend.Transfer.State.metrics.getter();
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.State()
{
  return type metadata accessor for SFAirDropSend.Transfer.State();
}

uint64_t SFAirDropSend.Transfer.state.getter()
{
  return SFAirDropSend.Transfer.state.getter();
}

uint64_t SFAirDropSend.Transfer.update(activeInterfaceType:)()
{
  return SFAirDropSend.Transfer.update(activeInterfaceType:)();
}

uint64_t SFAirDropSend.Transfer.update(state:)()
{
  return SFAirDropSend.Transfer.update(state:)();
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult()
{
  return type metadata accessor for SFAirDropSend.Transfer.Metrics.TransferResult();
}

uint64_t SFAirDropSend.Transfer.Metrics.init(id:startDate:)()
{
  return SFAirDropSend.Transfer.Metrics.init(id:startDate:)();
}

uint64_t SFAirDropSend.Transfer.Metrics.result.getter()
{
  return SFAirDropSend.Transfer.Metrics.result.getter();
}

uint64_t SFAirDropSend.Transfer.Metrics.result.setter()
{
  return SFAirDropSend.Transfer.Metrics.result.setter();
}

uint64_t SFAirDropSend.Transfer.Metrics.endDate.setter()
{
  return SFAirDropSend.Transfer.Metrics.endDate.setter();
}

uint64_t type metadata accessor for SFAirDropSend.Transfer.Metrics()
{
  return type metadata accessor for SFAirDropSend.Transfer.Metrics();
}

uint64_t SFAirDropSend.Transfer.presenter.getter()
{
  return SFAirDropSend.Transfer.presenter.getter();
}

uint64_t SFAirDropSend.Transfer.startDate.getter()
{
  return SFAirDropSend.Transfer.startDate.getter();
}

uint64_t type metadata accessor for SFAirDropSend.Transfer()
{
  return type metadata accessor for SFAirDropSend.Transfer();
}

Swift::Void __swiftcall SFXPCListener.invalidate()()
{
}

uint64_t SFXPCListener.contextProvider.setter()
{
  return SFXPCListener.contextProvider.setter();
}

uint64_t SFXPCListener.__allocating_init(machServiceName:queue:)()
{
  return SFXPCListener.__allocating_init(machServiceName:queue:)();
}

uint64_t SFXPCListener.didAddConnectionHandler.setter()
{
  return SFXPCListener.didAddConnectionHandler.setter();
}

uint64_t SFXPCListener.didRemoveConnectionHandler.setter()
{
  return SFXPCListener.didRemoveConnectionHandler.setter();
}

Swift::Void __swiftcall SFXPCListener.resume()()
{
}

uint64_t SFProgressTask.initialValue.getter()
{
  return SFProgressTask.initialValue.getter();
}

uint64_t SFProgressTask.makeAsyncIterator()()
{
  return SFProgressTask.makeAsyncIterator()();
}

uint64_t SFProgressTask.split()()
{
  return SFProgressTask.split()();
}

uint64_t SFProgressTask.cancel(_:)()
{
  return SFProgressTask.cancel(_:)();
}

uint64_t SFProgressTask<>.xpc.getter()
{
  return SFProgressTask<>.xpc.getter();
}

uint64_t type metadata accessor for SFProgressTask()
{
  return type metadata accessor for SFProgressTask();
}

uint64_t SFProgressTask.init(_:initialProgress:operation:file:line:)()
{
  return SFProgressTask.init(_:initialProgress:operation:file:line:)();
}

uint64_t static DeviceLockState.== infix(_:_:)()
{
  return static DeviceLockState.== infix(_:_:)();
}

uint64_t type metadata accessor for DeviceLockState()
{
  return type metadata accessor for DeviceLockState();
}

uint64_t static SFAirDropClient.Identifier.== infix(_:_:)()
{
  return static SFAirDropClient.Identifier.== infix(_:_:)();
}

uint64_t type metadata accessor for SFAirDropClient.Identifier()
{
  return type metadata accessor for SFAirDropClient.Identifier();
}

uint64_t SFAirDropClient.__allocating_init(identifier:)()
{
  return SFAirDropClient.__allocating_init(identifier:)();
}

uint64_t SFAirDropClient.BoopAtADistance.ServerInfo.bonjourUUID.getter()
{
  return SFAirDropClient.BoopAtADistance.ServerInfo.bonjourUUID.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.ServerInfo.publicKeyData.getter()
{
  return SFAirDropClient.BoopAtADistance.ServerInfo.publicKeyData.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.ServerInfo.init(applicationLabel:publicKeyData:bonjourUUID:)()
{
  return SFAirDropClient.BoopAtADistance.ServerInfo.init(applicationLabel:publicKeyData:bonjourUUID:)();
}

uint64_t type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo()
{
  return type metadata accessor for SFAirDropClient.BoopAtADistance.ServerInfo();
}

uint64_t SFAirDropClient.BoopAtADistance.Transaction.identifier.getter()
{
  return SFAirDropClient.BoopAtADistance.Transaction.identifier.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.Transaction.isInitiator.getter()
{
  return SFAirDropClient.BoopAtADistance.Transaction.isInitiator.getter();
}

uint64_t type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction()
{
  return type metadata accessor for SFAirDropClient.BoopAtADistance.Transaction();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.deviceName.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.deviceName.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.identifier.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.identifier.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.deviceModel.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.deviceModel.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.isSameAccount.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.isSameAccount.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.isKnownIdentity.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.isKnownIdentity.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.applicationLabel.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.applicationLabel.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.remoteServerInfo.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.isUnsupportedApplicationLabel.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.isUnsupportedApplicationLabel.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.shouldForceSingleBandAWDLMode.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.shouldForceSingleBandAWDLMode.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.date.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.date.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.accountID.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.accountID.getter();
}

uint64_t SFAirDropClient.BoopAtADistance.TapEvent.contactID.getter()
{
  return SFAirDropClient.BoopAtADistance.TapEvent.contactID.getter();
}

uint64_t type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent()
{
  return type metadata accessor for SFAirDropClient.BoopAtADistance.TapEvent();
}

uint64_t static SFAirDropClient.nearFieldApplicationLabel.getter()
{
  return static SFAirDropClient.nearFieldApplicationLabel.getter();
}

uint64_t type metadata accessor for SFAirDropClient()
{
  return type metadata accessor for SFAirDropClient();
}

uint64_t SFAirDropReceive.AskRequest.senderIcon.getter()
{
  return SFAirDropReceive.AskRequest.senderIcon.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderIsMe.getter()
{
  return SFAirDropReceive.AskRequest.senderIsMe.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderEmail.getter()
{
  return SFAirDropReceive.AskRequest.senderEmail.getter();
}

uint64_t SFAirDropReceive.AskRequest.previewImage.getter()
{
  return SFAirDropReceive.AskRequest.previewImage.getter();
}

uint64_t SFAirDropReceive.AskRequest.canAutoAccept.getter()
{
  return SFAirDropReceive.AskRequest.canAutoAccept.getter();
}

uint64_t SFAirDropReceive.AskRequest.customPayload.getter()
{
  return SFAirDropReceive.AskRequest.customPayload.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderBundleID.getter()
{
  return SFAirDropReceive.AskRequest.senderBundleID.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderLastName.getter()
{
  return SFAirDropReceive.AskRequest.senderLastName.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderEmailHash.getter()
{
  return SFAirDropReceive.AskRequest.senderEmailHash.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderFirstName.getter()
{
  return SFAirDropReceive.AskRequest.senderFirstName.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderModelName.getter()
{
  return SFAirDropReceive.AskRequest.senderModelName.getter();
}

uint64_t SFAirDropReceive.AskRequest.itemsDescription.getter()
{
  return SFAirDropReceive.AskRequest.itemsDescription.getter();
}

uint64_t SFAirDropReceive.AskRequest.contactIdentifier.getter()
{
  return SFAirDropReceive.AskRequest.contactIdentifier.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderDisplayName.getter()
{
  return SFAirDropReceive.AskRequest.senderDisplayName.getter();
}

uint64_t SFAirDropReceive.AskRequest.smallPreviewImage.getter()
{
  return SFAirDropReceive.AskRequest.smallPreviewImage.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderComputerName.getter()
{
  return SFAirDropReceive.AskRequest.senderComputerName.getter();
}

uint64_t SFAirDropReceive.AskRequest.verifiableIdentity.getter()
{
  return SFAirDropReceive.AskRequest.verifiableIdentity.getter();
}

uint64_t SFAirDropReceive.AskRequest.senderCompositeName.getter()
{
  return SFAirDropReceive.AskRequest.senderCompositeName.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription()
{
  return type metadata accessor for SFAirDropReceive.AskRequest.AdvancedItemsDescription();
}

uint64_t SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter()
{
  return SFAirDropReceive.AskRequest.itemsDescriptionAdvanced.getter();
}

uint64_t SFAirDropReceive.AskRequest.init(id:type:transferTypes:canAutoAccept:verifiableIdentity:senderIsMe:contactIdentifier:senderBundleID:senderComputerName:senderModelName:senderEmail:senderEmailHash:senderCompositeName:senderFirstName:senderLastName:senderID:senderIcon:smallPreviewImage:previewImage:itemsDescription:itemsDescriptionAdvanced:urlItems:items:customPayload:)()
{
  return SFAirDropReceive.AskRequest.init(id:type:transferTypes:canAutoAccept:verifiableIdentity:senderIsMe:contactIdentifier:senderBundleID:senderComputerName:senderModelName:senderEmail:senderEmailHash:senderCompositeName:senderFirstName:senderLastName:senderID:senderIcon:smallPreviewImage:previewImage:itemsDescription:itemsDescriptionAdvanced:urlItems:items:customPayload:)();
}

uint64_t SFAirDropReceive.AskRequest.id.getter()
{
  return SFAirDropReceive.AskRequest.id.getter();
}

uint64_t SFAirDropReceive.AskRequest.type.getter()
{
  return SFAirDropReceive.AskRequest.type.getter();
}

uint64_t SFAirDropReceive.AskRequest.files.getter()
{
  return SFAirDropReceive.AskRequest.files.getter();
}

uint64_t SFAirDropReceive.AskRequest.items.getter()
{
  return SFAirDropReceive.AskRequest.items.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileBomPath.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.fileBomPath.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.fileSubType.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileIsDirectory.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.fileIsDirectory.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.init(convertMediaFormats:fileBomPath:fileIsDirectory:fileName:fileSubType:fileType:)()
{
  return SFAirDropReceive.AskRequest.ItemInfo.init(convertMediaFormats:fileBomPath:fileIsDirectory:fileName:fileSubType:fileType:)();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.convertMediaFormats.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.convertMediaFormats.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileName.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.fileName.getter();
}

uint64_t SFAirDropReceive.AskRequest.ItemInfo.fileType.getter()
{
  return SFAirDropReceive.AskRequest.ItemInfo.fileType.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo()
{
  return type metadata accessor for SFAirDropReceive.AskRequest.ItemInfo();
}

uint64_t SFAirDropReceive.AskRequest.senderID.getter()
{
  return SFAirDropReceive.AskRequest.senderID.getter();
}

uint64_t SFAirDropReceive.AskRequest.urlItems.getter()
{
  return SFAirDropReceive.AskRequest.urlItems.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.AskRequest()
{
  return type metadata accessor for SFAirDropReceive.AskRequest();
}

uint64_t type metadata accessor for SFAirDropReceive.AskResponse()
{
  return type metadata accessor for SFAirDropReceive.AskResponse();
}

uint64_t SFAirDropReceive.AcceptContext.customPayload.getter()
{
  return SFAirDropReceive.AcceptContext.customPayload.getter();
}

uint64_t SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)()
{
  return SFAirDropReceive.AcceptContext.init(shouldExtractMedia:customPayload:)();
}

uint64_t SFAirDropReceive.AcceptContext.shouldExtractMedia.getter()
{
  return SFAirDropReceive.AcceptContext.shouldExtractMedia.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.AcceptContext()
{
  return type metadata accessor for SFAirDropReceive.AcceptContext();
}

uint64_t SFAirDropReceive.ItemDestination.url.getter()
{
  return SFAirDropReceive.ItemDestination.url.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.ItemDestination()
{
  return type metadata accessor for SFAirDropReceive.ItemDestination();
}

uint64_t type metadata accessor for SFAirDropReceive.Failure()
{
  return type metadata accessor for SFAirDropReceive.Failure();
}

uint64_t SFAirDropReceive.Failure.init(_:)()
{
  return SFAirDropReceive.Failure.init(_:)();
}

uint64_t SFAirDropReceive.Transfer.askRequest.getter()
{
  return SFAirDropReceive.Transfer.askRequest.getter();
}

uint64_t SFAirDropReceive.Transfer.cancelAction.getter()
{
  return SFAirDropReceive.Transfer.cancelAction.getter();
}

uint64_t SFAirDropReceive.Transfer.didAutoAccept.getter()
{
  return SFAirDropReceive.Transfer.didAutoAccept.getter();
}

uint64_t SFAirDropReceive.Transfer.displayPriority.getter()
{
  return SFAirDropReceive.Transfer.displayPriority.getter();
}

uint64_t SFAirDropReceive.Transfer.isPreviewSensitive.getter()
{
  return SFAirDropReceive.Transfer.isPreviewSensitive.getter();
}

uint64_t SFAirDropReceive.Transfer.activeInterfaceType.getter()
{
  return SFAirDropReceive.Transfer.activeInterfaceType.getter();
}

uint64_t SFAirDropReceive.Transfer.id.getter()
{
  return SFAirDropReceive.Transfer.id.getter();
}

uint64_t SFAirDropReceive.Transfer.State.description.getter()
{
  return SFAirDropReceive.Transfer.State.description.getter();
}

uint64_t SFAirDropReceive.Transfer.State.permissionRequest.getter()
{
  return SFAirDropReceive.Transfer.State.permissionRequest.getter();
}

uint64_t SFAirDropReceive.Transfer.State.completedSuccessfully.getter()
{
  return SFAirDropReceive.Transfer.State.completedSuccessfully.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.State()
{
  return type metadata accessor for SFAirDropReceive.Transfer.State();
}

uint64_t SFAirDropReceive.Transfer.state.getter()
{
  return SFAirDropReceive.Transfer.state.getter();
}

uint64_t SFAirDropReceive.Transfer.update(activeInterfaceType:)()
{
  return SFAirDropReceive.Transfer.update(activeInterfaceType:)();
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult()
{
  return type metadata accessor for SFAirDropReceive.Transfer.Metrics.TransferResult();
}

uint64_t SFAirDropReceive.Transfer.Metrics.result.setter()
{
  return SFAirDropReceive.Transfer.Metrics.result.setter();
}

uint64_t SFAirDropReceive.Transfer.Metrics.endDate.setter()
{
  return SFAirDropReceive.Transfer.Metrics.endDate.setter();
}

uint64_t SFAirDropReceive.Transfer.Metrics.sensitive.setter()
{
  return SFAirDropReceive.Transfer.Metrics.sensitive.setter();
}

uint64_t SFAirDropReceive.Transfer.Metrics.init(startDate:)()
{
  return SFAirDropReceive.Transfer.Metrics.init(startDate:)();
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer.Metrics()
{
  return type metadata accessor for SFAirDropReceive.Transfer.Metrics();
}

uint64_t SFAirDropReceive.Transfer.presenter.getter()
{
  return SFAirDropReceive.Transfer.presenter.getter();
}

uint64_t SFAirDropReceive.Transfer.receiveID.getter()
{
  return SFAirDropReceive.Transfer.receiveID.getter();
}

uint64_t SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)()
{
  return SFAirDropReceive.Transfer.init(receiveID:startDate:state:displayPriority:askRequest:isPreviewSensitive:askResponse:didAutoAccept:cancelAction:activeInterfaceType:presenter:)();
}

uint64_t SFAirDropReceive.Transfer.startDate.getter()
{
  return SFAirDropReceive.Transfer.startDate.getter();
}

uint64_t type metadata accessor for SFAirDropReceive.Transfer()
{
  return type metadata accessor for SFAirDropReceive.Transfer();
}

uint64_t SFClientIdentity.accessLevel.getter()
{
  return SFClientIdentity.accessLevel.getter();
}

uint64_t SFClientIdentity.connectionID.getter()
{
  return SFClientIdentity.connectionID.getter();
}

uint64_t SFClientIdentity.bundleIdentifier.getter()
{
  return SFClientIdentity.bundleIdentifier.getter();
}

uint64_t type metadata accessor for SFClientIdentity()
{
  return type metadata accessor for SFClientIdentity();
}

uint64_t withProgressTask<A, B>(_:initialProgress:operation:)()
{
  return withProgressTask<A, B>(_:initialProgress:operation:)();
}

uint64_t SFNWInterfaceType.description.getter()
{
  return SFNWInterfaceType.description.getter();
}

uint64_t static SFNWInterfaceType.== infix(_:_:)()
{
  return static SFNWInterfaceType.== infix(_:_:)();
}

uint64_t SFNWInterfaceType.category()()
{
  return SFNWInterfaceType.category()();
}

uint64_t type metadata accessor for SFNWInterfaceType()
{
  return type metadata accessor for SFNWInterfaceType();
}

uint64_t SFXPCProgressTask.initialValue.getter()
{
  return SFXPCProgressTask.initialValue.getter();
}

uint64_t SFXPCProgressTask.makeAsyncIterator()()
{
  return SFXPCProgressTask.makeAsyncIterator()();
}

uint64_t type metadata accessor for KeyDataFormatStyle()
{
  return type metadata accessor for KeyDataFormatStyle();
}

uint64_t type metadata accessor for OSLogDateFormatter.Style()
{
  return type metadata accessor for OSLogDateFormatter.Style();
}

uint64_t type metadata accessor for OSLogDateFormatter()
{
  return type metadata accessor for OSLogDateFormatter();
}

uint64_t dispatch thunk of SFLockStateMonitor.lockState.getter()
{
  return dispatch thunk of SFLockStateMonitor.lockState.getter();
}

uint64_t dispatch thunk of SFLockStateMonitor.delegate.setter()
{
  return dispatch thunk of SFLockStateMonitor.delegate.setter();
}

uint64_t SFLockStateMonitor.init()()
{
  return SFLockStateMonitor.init()();
}

uint64_t type metadata accessor for SFLockStateMonitor()
{
  return type metadata accessor for SFLockStateMonitor();
}

uint64_t static SFClientAccessLevel.allowRestrictedBoop.getter()
{
  return static SFClientAccessLevel.allowRestrictedBoop.getter();
}

uint64_t type metadata accessor for SFClientAccessLevel()
{
  return type metadata accessor for SFClientAccessLevel();
}

uint64_t static SFSecurityScopedURL.consumeSandboxToken(item:)()
{
  return static SFSecurityScopedURL.consumeSandboxToken(item:)();
}

uint64_t SFSecurityScopedURL.url.getter()
{
  return SFSecurityScopedURL.url.getter();
}

uint64_t type metadata accessor for SFSecurityScopedURL()
{
  return type metadata accessor for SFSecurityScopedURL();
}

uint64_t SFSecurityScopedURL.init(_:readWrite:)()
{
  return SFSecurityScopedURL.init(_:readWrite:)();
}

uint64_t SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.transaction.getter()
{
  return SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.transaction.getter();
}

uint64_t SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.tap.getter()
{
  return SFAirDropInvocations.BoopAtADistanceUpdate.Parameters.tap.getter();
}

uint64_t SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter()
{
  return SFAirDropInvocations.BecomeTransferPresenter.Parameters.animationRect.getter();
}

uint64_t SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter()
{
  return SFAirDropInvocations.BecomeTransferPresenter.Parameters.clientIdentifier.getter();
}

uint64_t SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter()
{
  return SFAirDropUserDefaults.contactShareAfterAirDropEnabled.getter();
}

uint64_t SFAirDropUserDefaults.askToAirDropEnabled.getter()
{
  return SFAirDropUserDefaults.askToAirDropEnabled.getter();
}

uint64_t SFAirDropUserDefaults.boopToAirDropEnabled.getter()
{
  return SFAirDropUserDefaults.boopToAirDropEnabled.getter();
}

uint64_t SFAirDropUserDefaults.nearFieldSharingEnabled.getter()
{
  return SFAirDropUserDefaults.nearFieldSharingEnabled.getter();
}

uint64_t SFAirDropUserDefaults.description.getter()
{
  return SFAirDropUserDefaults.description.getter();
}

uint64_t SFAirDropUserDefaults.quicIdleTimeout.getter()
{
  return SFAirDropUserDefaults.quicIdleTimeout.getter();
}

uint64_t SFAirDropUserDefaults.verboseWalkAway.getter()
{
  return SFAirDropUserDefaults.verboseWalkAway.getter();
}

uint64_t SFAirDropUserDefaults.walkAwayEnabled.getter()
{
  return SFAirDropUserDefaults.walkAwayEnabled.getter();
}

uint64_t SFAirDropUserDefaults.alwaysAutoAccept.getter()
{
  return SFAirDropUserDefaults.alwaysAutoAccept.getter();
}

uint64_t SFAirDropUserDefaults.moveToAppEnabled.getter()
{
  return SFAirDropUserDefaults.moveToAppEnabled.getter();
}

uint64_t SFAirDropUserDefaults.a2aRangingAssumeFar.getter()
{
  return SFAirDropUserDefaults.a2aRangingAssumeFar.getter();
}

uint64_t SFAirDropUserDefaults.boopToActionEnabled.getter()
{
  return SFAirDropUserDefaults.boopToActionEnabled.getter();
}

uint64_t SFAirDropUserDefaults.cellularUsageEnabled.getter()
{
  return SFAirDropUserDefaults.cellularUsageEnabled.getter();
}

uint64_t SFAirDropUserDefaults.a2aRangingAssumeClose.getter()
{
  return SFAirDropUserDefaults.a2aRangingAssumeClose.getter();
}

uint64_t SFAirDropUserDefaults.alwaysExchangeContacts.getter()
{
  return SFAirDropUserDefaults.alwaysExchangeContacts.getter();
}

uint64_t SFAirDropUserDefaults.userDefaultDescriptions.getter()
{
  return SFAirDropUserDefaults.userDefaultDescriptions.getter();
}

uint64_t SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter()
{
  return SFAirDropUserDefaults.helloFeatureFlagsEnabled.getter();
}

uint64_t SFAirDropUserDefaults.sensitiveContentOverride.getter()
{
  return SFAirDropUserDefaults.sensitiveContentOverride.getter();
}

uint64_t SFAirDropUserDefaults.sensitivePreviewOverride.getter()
{
  return SFAirDropUserDefaults.sensitivePreviewOverride.getter();
}

uint64_t SFAirDropUserDefaults.nearFieldControllerEnabled.getter()
{
  return SFAirDropUserDefaults.nearFieldControllerEnabled.getter();
}

uint64_t SFAirDropUserDefaults.systemLevelProgressEnabled.getter()
{
  return SFAirDropUserDefaults.systemLevelProgressEnabled.getter();
}

uint64_t SFAirDropUserDefaults.boopInteractionTypeOverride.getter()
{
  return SFAirDropUserDefaults.boopInteractionTypeOverride.getter();
}

uint64_t SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter()
{
  return SFAirDropUserDefaults.overrideReceivedFilesPathiOS.getter();
}

uint64_t SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter()
{
  return SFAirDropUserDefaults.privateContactDiscoveryEnabled.getter();
}

uint64_t static SFAirDropUserDefaults.shared.getter()
{
  return static SFAirDropUserDefaults.shared.getter();
}

uint64_t SFAirDropUserDefaults.finalALPN.getter()
{
  return SFAirDropUserDefaults.finalALPN.getter();
}

uint64_t type metadata accessor for SFAirDropUserDefaults()
{
  return type metadata accessor for SFAirDropUserDefaults();
}

Swift::Void __swiftcall SFSandboxTokenURLPair.releaseSandboxExtension()()
{
}

uint64_t SFSandboxTokenURLPair.url.getter()
{
  return SFSandboxTokenURLPair.url.getter();
}

uint64_t type metadata accessor for SFSandboxTokenURLPair()
{
  return type metadata accessor for SFSandboxTokenURLPair();
}

uint64_t AirDropMachServiceName.getter()
{
  return AirDropMachServiceName.getter();
}

uint64_t type metadata accessor for SFInterventionResponse()
{
  return type metadata accessor for SFInterventionResponse();
}

uint64_t static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter()
{
  return static SFInterventionWorkflow.SprinboardSettings.userInfoKey.getter();
}

uint64_t SFInterventionWorkflow.SprinboardSettings.rawValue.getter()
{
  return SFInterventionWorkflow.SprinboardSettings.rawValue.getter();
}

uint64_t type metadata accessor for SFInterventionWorkflow.SprinboardSettings()
{
  return type metadata accessor for SFInterventionWorkflow.SprinboardSettings();
}

uint64_t SFInterventionWorkflow.rawValue.getter()
{
  return SFInterventionWorkflow.rawValue.getter();
}

uint64_t type metadata accessor for SFInterventionWorkflow()
{
  return type metadata accessor for SFInterventionWorkflow();
}

uint64_t SFNoThrowAsyncSequence.makeAsyncIterator()()
{
  return SFNoThrowAsyncSequence.makeAsyncIterator()();
}

uint64_t type metadata accessor for SFNoThrowAsyncSequence()
{
  return type metadata accessor for SFNoThrowAsyncSequence();
}

uint64_t SFNoThrowAsyncSequence.init<A>(_:)()
{
  return SFNoThrowAsyncSequence.init<A>(_:)();
}

{
  return SFNoThrowAsyncSequence.init<A>(_:)();
}

uint64_t SFProgressContinuation.fail(with:)()
{
  return SFProgressContinuation.fail(with:)();
}

uint64_t SFProgressContinuation.task.getter()
{
  return SFProgressContinuation.task.getter();
}

uint64_t SFProgressContinuation.yield(_:)()
{
  return SFProgressContinuation.yield(_:)();
}

uint64_t SFProgressContinuation.cancel(_:)()
{
  return SFProgressContinuation.cancel(_:)();
}

uint64_t SFProgressContinuation.finish(with:)()
{
  return SFProgressContinuation.finish(with:)();
}

uint64_t type metadata accessor for SFProgressContinuation()
{
  return type metadata accessor for SFProgressContinuation();
}

uint64_t SFProgressContinuation.init(_:initialProgress:file:line:)()
{
  return SFProgressContinuation.init(_:initialProgress:file:line:)();
}

uint64_t type metadata accessor for IDSIdentifierFormatStyle()
{
  return type metadata accessor for IDSIdentifierFormatStyle();
}

uint64_t SFTempPairingStateUpdate.connectionState.setter()
{
  return SFTempPairingStateUpdate.connectionState.setter();
}

uint64_t SFTempPairingStateUpdate.sharingName.setter()
{
  return SFTempPairingStateUpdate.sharingName.setter();
}

uint64_t SFTempPairingStateUpdate.nearbyDeviceNames.setter()
{
  return SFTempPairingStateUpdate.nearbyDeviceNames.setter();
}

uint64_t SFTempPairingStateUpdate.isNearbyDeviceClose.setter()
{
  return SFTempPairingStateUpdate.isNearbyDeviceClose.setter();
}

uint64_t SFTempPairingStateUpdate.connectedDeviceNames.setter()
{
  return SFTempPairingStateUpdate.connectedDeviceNames.setter();
}

uint64_t SFTempPairingStateUpdate.init()()
{
  return SFTempPairingStateUpdate.init()();
}

uint64_t type metadata accessor for SFTempPairingStateUpdate()
{
  return type metadata accessor for SFTempPairingStateUpdate();
}

uint64_t type metadata accessor for SFNWInterfaceTypeCategory()
{
  return type metadata accessor for SFNWInterfaceTypeCategory();
}

uint64_t SFXPCResilientAsyncSequence.makeAsyncIterator()()
{
  return SFXPCResilientAsyncSequence.makeAsyncIterator()();
}

uint64_t static SFMoveToAppShareSheetSettings.encodedFiles.getter()
{
  return static SFMoveToAppShareSheetSettings.encodedFiles.getter();
}

uint64_t SFMoveToAppShareSheetSettings.rawValue.getter()
{
  return SFMoveToAppShareSheetSettings.rawValue.getter();
}

uint64_t type metadata accessor for SFMoveToAppShareSheetSettings()
{
  return type metadata accessor for SFMoveToAppShareSheetSettings();
}

uint64_t SFItemDestinationAlertSettings.rawValue.getter()
{
  return SFItemDestinationAlertSettings.rawValue.getter();
}

uint64_t static SFItemDestinationAlertSettings.viewModel.getter()
{
  return static SFItemDestinationAlertSettings.viewModel.getter();
}

uint64_t type metadata accessor for SFItemDestinationAlertSettings()
{
  return type metadata accessor for SFItemDestinationAlertSettings();
}

uint64_t SFTempPairingSenderStateUpdate.init()()
{
  return SFTempPairingSenderStateUpdate.init()();
}

uint64_t type metadata accessor for SFTempPairingSenderStateUpdate()
{
  return type metadata accessor for SFTempPairingSenderStateUpdate();
}

uint64_t _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)()
{
  return _AnySFXPCSyncInvocableProtocol<>.invoke(with:context:client:parametersAsyncSequenceContainer:parametersBlockContainer:responseAsyncSequenceContainer:responseXPCBlockContainer:)();
}

uint64_t SFItemDestinationAlertViewModel.init(permissionRequest:)()
{
  return SFItemDestinationAlertViewModel.init(permissionRequest:)();
}

uint64_t type metadata accessor for SFItemDestinationAlertViewModel()
{
  return type metadata accessor for SFItemDestinationAlertViewModel();
}

uint64_t type metadata accessor for SFError()
{
  return type metadata accessor for SFError();
}

uint64_t tryCast<A>(_:as:description:file:line:)()
{
  return tryCast<A>(_:as:description:file:line:)();
}

uint64_t SFString.format(_:)()
{
  return SFString.format(_:)();
}

uint64_t type metadata accessor for SFString()
{
  return type metadata accessor for SFString();
}

uint64_t AirDropID.getter()
{
  return AirDropID.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.FailureType()
{
  return type metadata accessor for SFAirDrop.NearbySharingInteraction.FailureType();
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiator.setter()
{
  return SFAirDrop.NearbySharingInteraction.isInitiator.setter();
}

uint64_t SFAirDrop.NearbySharingInteraction.connectionTime.setter()
{
  return SFAirDrop.NearbySharingInteraction.connectionTime.setter();
}

uint64_t SFAirDrop.NearbySharingInteraction.PresenceContext.init()()
{
  return SFAirDrop.NearbySharingInteraction.PresenceContext.init()();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType()
{
  return type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext.InteractionType();
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.getter()
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.endpointIdentifier.getter();
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.init(type:transactionIdentifier:endpointIdentifier:contactIdentifier:deviceName:deviceModel:accountID:isSameAccount:)()
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.init(type:transactionIdentifier:endpointIdentifier:contactIdentifier:deviceName:deviceModel:accountID:isSameAccount:)();
}

uint64_t SFAirDrop.NearbySharingInteraction.ConnectionContext.type.getter()
{
  return SFAirDrop.NearbySharingInteraction.ConnectionContext.type.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext()
{
  return type metadata accessor for SFAirDrop.NearbySharingInteraction.ConnectionContext();
}

uint64_t SFAirDrop.NearbySharingInteraction.isInitiatorRoleExpected.setter()
{
  return SFAirDrop.NearbySharingInteraction.isInitiatorRoleExpected.setter();
}

uint64_t SFAirDrop.NearbySharingInteraction.id.getter()
{
  return SFAirDrop.NearbySharingInteraction.id.getter();
}

uint64_t SFAirDrop.NearbySharingInteraction.State.isConnected.getter()
{
  return SFAirDrop.NearbySharingInteraction.State.isConnected.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction.State()
{
  return type metadata accessor for SFAirDrop.NearbySharingInteraction.State();
}

uint64_t SFAirDrop.NearbySharingInteraction.init(state:id:)()
{
  return SFAirDrop.NearbySharingInteraction.init(state:id:)();
}

uint64_t SFAirDrop.NearbySharingInteraction.state.getter()
{
  return SFAirDrop.NearbySharingInteraction.state.getter();
}

uint64_t SFAirDrop.NearbySharingInteraction.state.setter()
{
  return SFAirDrop.NearbySharingInteraction.state.setter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingInteraction()
{
  return type metadata accessor for SFAirDrop.NearbySharingInteraction();
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.nearbySharingInteractionID.getter()
{
  return SFAirDrop.NearbySharingAssertionRequest.nearbySharingInteractionID.getter();
}

uint64_t SFAirDrop.NearbySharingAssertionRequest.explanation.getter()
{
  return SFAirDrop.NearbySharingAssertionRequest.explanation.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingAssertionRequest()
{
  return type metadata accessor for SFAirDrop.NearbySharingAssertionRequest();
}

uint64_t SFAirDrop.NearbySharingAssertion.init(nearbySharingInteractionID:explanation:client:)()
{
  return SFAirDrop.NearbySharingAssertion.init(nearbySharingInteractionID:explanation:client:)();
}

uint64_t SFAirDrop.NearbySharingAssertion.explanation.getter()
{
  return SFAirDrop.NearbySharingAssertion.explanation.getter();
}

uint64_t SFAirDrop.NearbySharingAssertion.id.getter()
{
  return SFAirDrop.NearbySharingAssertion.id.getter();
}

uint64_t SFAirDrop.NearbySharingAssertion.client.getter()
{
  return SFAirDrop.NearbySharingAssertion.client.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingAssertion()
{
  return type metadata accessor for SFAirDrop.NearbySharingAssertion();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingDiscovery.PollingType()
{
  return type metadata accessor for SFAirDrop.NearbySharingDiscovery.PollingType();
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.init(pollingType:applicationLabel:)()
{
  return SFAirDrop.NearbySharingDiscovery.Request.init(pollingType:applicationLabel:)();
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.pollingType.getter()
{
  return SFAirDrop.NearbySharingDiscovery.Request.pollingType.getter();
}

uint64_t SFAirDrop.NearbySharingDiscovery.Request.applicationLabel.getter()
{
  return SFAirDrop.NearbySharingDiscovery.Request.applicationLabel.getter();
}

uint64_t type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request()
{
  return type metadata accessor for SFAirDrop.NearbySharingDiscovery.Request();
}

uint64_t type metadata accessor for SFAirDrop.AskProgress()
{
  return type metadata accessor for SFAirDrop.AskProgress();
}

uint64_t SFAirDrop.ContactInfo.description.getter()
{
  return SFAirDrop.ContactInfo.description.getter();
}

uint64_t SFAirDrop.ContactInfo.accountHandle.getter()
{
  return SFAirDrop.ContactInfo.accountHandle.getter();
}

uint64_t SFAirDrop.ContactInfo.vcard.getter()
{
  return SFAirDrop.ContactInfo.vcard.getter();
}

uint64_t type metadata accessor for SFAirDrop.ContactInfo.Handle()
{
  return type metadata accessor for SFAirDrop.ContactInfo.Handle();
}

uint64_t SFAirDrop.ContactInfo.handle.getter()
{
  return SFAirDrop.ContactInfo.handle.getter();
}

uint64_t SFAirDrop.ContactInfo.fullName.getter()
{
  return SFAirDrop.ContactInfo.fullName.getter();
}

uint64_t SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)()
{
  return SFAirDrop.ContactInfo.init(givenName:fullName:handle:vcard:)();
}

uint64_t SFAirDrop.ContactInfo.givenName.getter()
{
  return SFAirDrop.ContactInfo.givenName.getter();
}

uint64_t type metadata accessor for SFAirDrop.ContactInfo()
{
  return type metadata accessor for SFAirDrop.ContactInfo();
}

uint64_t SFAirDrop.AcceptAction.Single.defaultAnswer.getter()
{
  return SFAirDrop.AcceptAction.Single.defaultAnswer.getter();
}

uint64_t SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)()
{
  return SFAirDrop.AcceptAction.Single.init(id:buttonConfiguration:prominent:hidden:defaultAnswer:operation:)();
}

uint64_t SFAirDrop.AcceptAction.Single.id.getter()
{
  return SFAirDrop.AcceptAction.Single.id.getter();
}

uint64_t SFAirDrop.AcceptAction.Composite.init(buttonConfiguration:actions:)()
{
  return SFAirDrop.AcceptAction.Composite.init(buttonConfiguration:actions:)();
}

uint64_t SFAirDrop.TransferType.exchangeType.getter()
{
  return SFAirDrop.TransferType.exchangeType.getter();
}

uint64_t static SFAirDrop.TransferType.transferType(for:)()
{
  return static SFAirDrop.TransferType.transferType(for:)();
}

uint64_t SFAirDrop.TransferType.description.getter()
{
  return SFAirDrop.TransferType.description.getter();
}

uint64_t SFAirDrop.TransferType.isPeerPayment.getter()
{
  return SFAirDrop.TransferType.isPeerPayment.getter();
}

uint64_t SFAirDrop.TransferType.isOnlyExchange.getter()
{
  return SFAirDrop.TransferType.isOnlyExchange.getter();
}

uint64_t static SFAirDrop.TransferType.== infix(_:_:)()
{
  return static SFAirDrop.TransferType.== infix(_:_:)();
}

uint64_t SFAirDrop.TransferType.isFiles.getter()
{
  return SFAirDrop.TransferType.isFiles.getter();
}

uint64_t SFAirDrop.TransferType.isLinks.getter()
{
  return SFAirDrop.TransferType.isLinks.getter();
}

uint64_t SFAirDrop.TransferType.isCustom.getter()
{
  return SFAirDrop.TransferType.isCustom.getter();
}

uint64_t type metadata accessor for SFAirDrop.TransferType()
{
  return type metadata accessor for SFAirDrop.TransferType();
}

uint64_t SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)()
{
  return SFAirDrop.DeclineAction.init(id:buttonConfiguration:hidden:operation:)();
}

uint64_t SFAirDrop.DeclineAction.id.getter()
{
  return SFAirDrop.DeclineAction.id.getter();
}

uint64_t type metadata accessor for SFAirDrop.DeclineAction()
{
  return type metadata accessor for SFAirDrop.DeclineAction();
}

uint64_t SFAirDrop.ContactRequest.description.getter()
{
  return SFAirDrop.ContactRequest.description.getter();
}

uint64_t static SFAirDrop.ContactRequest.== infix(_:_:)()
{
  return static SFAirDrop.ContactRequest.== infix(_:_:)();
}

uint64_t SFAirDrop.ContactRequest.contact.getter()
{
  return SFAirDrop.ContactRequest.contact.getter();
}

uint64_t type metadata accessor for SFAirDrop.ContactRequest()
{
  return type metadata accessor for SFAirDrop.ContactRequest();
}

uint64_t static SFAirDrop.DisplayPriority.== infix(_:_:)()
{
  return static SFAirDrop.DisplayPriority.== infix(_:_:)();
}

uint64_t type metadata accessor for SFAirDrop.DisplayPriority()
{
  return type metadata accessor for SFAirDrop.DisplayPriority();
}

uint64_t SFAirDrop.EndpointMetadata.init(imageData:)()
{
  return SFAirDrop.EndpointMetadata.init(imageData:)();
}

uint64_t SFAirDrop.PermissionRequest.isAnswered.getter()
{
  return SFAirDrop.PermissionRequest.isAnswered.getter();
}

uint64_t SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)()
{
  return SFAirDrop.PermissionRequest.InterventionAction.init(id:operation:)();
}

uint64_t SFAirDrop.PermissionRequest.id.getter()
{
  return SFAirDrop.PermissionRequest.id.getter();
}

uint64_t SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)()
{
  return SFAirDrop.PermissionRequest.init(id:requestDate:interventionWorkflow:action:isAnswered:)();
}

uint64_t SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)()
{
  return SFAirDrop.PermissionRequest.init(id:requestDate:style:isAnswered:)();
}

uint64_t SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)()
{
  return SFAirDrop.PermissionRequest.init(id:requestDate:title:prompt:acceptActions:declineAction:isAnswered:)();
}

uint64_t SFAirDrop.PermissionRequest.style.getter()
{
  return SFAirDrop.PermissionRequest.style.getter();
}

Swift::Void __swiftcall SFAirDrop.PermissionRequest.cancel()()
{
}

uint64_t type metadata accessor for SFAirDrop.PermissionRequest()
{
  return type metadata accessor for SFAirDrop.PermissionRequest();
}

uint64_t SFAirDrop.DeviceRelationship.rawValue.getter()
{
  return SFAirDrop.DeviceRelationship.rawValue.getter();
}

uint64_t type metadata accessor for SFAirDrop.DeviceRelationship()
{
  return type metadata accessor for SFAirDrop.DeviceRelationship();
}

uint64_t SFAirDrop.TransferIdentifier.shortIdentifier.getter()
{
  return SFAirDrop.TransferIdentifier.shortIdentifier.getter();
}

uint64_t SFAirDrop.TransferIdentifier.stringValue.getter()
{
  return SFAirDrop.TransferIdentifier.stringValue.getter();
}

uint64_t static SFAirDrop.TransferIdentifier.== infix(_:_:)()
{
  return static SFAirDrop.TransferIdentifier.== infix(_:_:)();
}

uint64_t SFAirDrop.TransferIdentifier.id.getter()
{
  return SFAirDrop.TransferIdentifier.id.getter();
}

uint64_t type metadata accessor for SFAirDrop.TransferIdentifier()
{
  return type metadata accessor for SFAirDrop.TransferIdentifier();
}

uint64_t SFAirDrop.TransferIdentifier.init(_:)()
{
  return SFAirDrop.TransferIdentifier.init(_:)();
}

{
  return SFAirDrop.TransferIdentifier.init(_:)();
}

uint64_t type metadata accessor for SFAirDrop.ButtonConfiguration()
{
  return type metadata accessor for SFAirDrop.ButtonConfiguration();
}

uint64_t SFAirDrop.Progress.percent.getter()
{
  return SFAirDrop.Progress.percent.getter();
}

uint64_t type metadata accessor for SFAirDrop.Progress()
{
  return type metadata accessor for SFAirDrop.Progress();
}

uint64_t SFAirDrop.TXTRecord.addToEndpoint(_:)()
{
  return SFAirDrop.TXTRecord.addToEndpoint(_:)();
}

uint64_t SFAirDrop.TXTRecord.init(deviceRelationship:)()
{
  return SFAirDrop.TXTRecord.init(deviceRelationship:)();
}

uint64_t type metadata accessor for SFAirDrop.TXTRecord()
{
  return type metadata accessor for SFAirDrop.TXTRecord();
}

uint64_t SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)()
{
  return SFAirDrop.Transfers.init(receiveTransfers:sendTransfers:)();
}

uint64_t static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)()
{
  return static SFAirDrop.Transfers.stream<A, B>(receiveTransferSeq:sendTransfersSeq:)();
}

uint64_t type metadata accessor for SFAirDrop.Transfers()
{
  return type metadata accessor for SFAirDrop.Transfers();
}

uint64_t type metadata accessor for DispatchTimeInterval()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t static DispatchTimeoutResult.== infix(_:_:)()
{
  return static DispatchTimeoutResult.== infix(_:_:)();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t static DispatchQoS.userInitiated.getter()
{
  return static DispatchQoS.userInitiated.getter();
}

uint64_t static DispatchQoS.default.getter()
{
  return static DispatchQoS.default.getter();
}

uint64_t static DispatchQoS.utility.getter()
{
  return static DispatchQoS.utility.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t type metadata accessor for DispatchData.Deallocator()
{
  return type metadata accessor for DispatchData.Deallocator();
}

uint64_t DispatchData.init(bytesNoCopy:deallocator:)()
{
  return DispatchData.init(bytesNoCopy:deallocator:)();
}

uint64_t DispatchData._bridgeToObjectiveC()()
{
  return DispatchData._bridgeToObjectiveC()();
}

uint64_t type metadata accessor for DispatchData()
{
  return type metadata accessor for DispatchData();
}

uint64_t static DispatchTime.distantFuture.getter()
{
  return static DispatchTime.distantFuture.getter();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t DispatchTime.advanced(by:)()
{
  return DispatchTime.advanced(by:)();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t DispatchWorkItem.init(flags:block:)()
{
  return DispatchWorkItem.init(flags:block:)();
}

uint64_t dispatch thunk of DispatchWorkItem.cancel()()
{
  return dispatch thunk of DispatchWorkItem.cancel()();
}

uint64_t type metadata accessor for DispatchWorkItem()
{
  return type metadata accessor for DispatchWorkItem();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t dispatch thunk of HashFunction.update(bufferPointer:)()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

uint64_t dispatch thunk of HashFunction.finalize()()
{
  return dispatch thunk of HashFunction.finalize()();
}

uint64_t dispatch thunk of HashFunction.init()()
{
  return dispatch thunk of HashFunction.init()();
}

uint64_t type metadata accessor for SHA256Digest()
{
  return type metadata accessor for SHA256Digest();
}

uint64_t type metadata accessor for SHA256()
{
  return type metadata accessor for SHA256();
}

uint64_t Array.init()()
{
  return Array.init()();
}

uint64_t CancellationError.init()()
{
  return CancellationError.init()();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.Keys.description.getter()
{
  return Dictionary.Keys.description.getter();
}

uint64_t Dictionary.Values.description.getter()
{
  return Dictionary.Values.description.getter();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t ClosedRange<>.interval.getter()
{
  return ClosedRange<>.interval.getter();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.data(using:allowLossyConversion:)()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t String.init<A>(bytes:encoding:)()
{
  return String.init<A>(bytes:encoding:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t static String.Encoding.utf8.getter()
{
  return static String.Encoding.utf8.getter();
}

uint64_t type metadata accessor for String.Encoding()
{
  return type metadata accessor for String.Encoding();
}

Swift::String __swiftcall String.init(_:)(NSString a1)
{
  uint64_t v1 = String.init(_:)(a1);
  result._object = v2;
  result._countAndFlagsBits = v1;
  return result;
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t String.init<A>(reflecting:)()
{
  return String.init<A>(reflecting:)();
}

uint64_t String.utf8CString.getter()
{
  return String.utf8CString.getter();
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t static String._uncheckedFromUTF8(_:)()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(after:)()
{
  return String.index(after:)();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t String.index(_:offsetBy:)()
{
  return String.index(_:offsetBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

uint64_t String.init(cString:)()
{
  return String.init(cString:)();
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

uint64_t String.UTF8View._foreignIndex(after:)()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t String.UTF8View._foreignIndex(_:offsetBy:)()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t String.UTF8View._foreignSubscript(position:)()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t String.UTF16View.index(_:offsetBy:)()
{
  return String.UTF16View.index(_:offsetBy:)();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

uint64_t String.hashValue.getter()
{
  return String.hashValue.getter();
}

Swift::String __swiftcall String.init(repeating:count:)(Swift::String repeating, Swift::Int count)
{
  uint64_t v2 = String.init(repeating:count:)(repeating._countAndFlagsBits, repeating._object, count);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t String.init<A>(_:radix:uppercase:)()
{
  return String.init<A>(_:radix:uppercase:)();
}

uint64_t String.subscript.getter()
{
  return String.subscript.getter();
}

{
  return String.subscript.getter();
}

uint64_t String.init<A>(_:)()
{
  return String.init<A>(_:)();
}

uint64_t Sequence.formatted<A>(_:)()
{
  return Sequence.formatted<A>(_:)();
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t Sequence.enumerated()()
{
  return Sequence.enumerated()();
}

uint64_t Sequence.reduce<A>(_:_:)()
{
  return Sequence.reduce<A>(_:_:)();
}

uint64_t Sequence.contains(where:)()
{
  return Sequence.contains(where:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t RawRepresentable<>.encode(to:)()
{
  return RawRepresentable<>.encode(to:)();
}

{
  return RawRepresentable<>.encode(to:)();
}

{
  return RawRepresentable<>.encode(to:)();
}

uint64_t RawRepresentable<>.init(from:)()
{
  return RawRepresentable<>.init(from:)();
}

{
  return RawRepresentable<>.init(from:)();
}

{
  return RawRepresentable<>.init(from:)();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t Array.debugDescription.getter()
{
  return Array.debugDescription.getter();
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.count.getter()
{
  return Array.count.getter();
}

uint64_t Array.append(_:)()
{
  return Array.append(_:)();
}

Swift::Void __swiftcall Array.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

NSNumber __swiftcall Bool._bridgeToObjectiveC()()
{
  return (NSNumber)Bool._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(throwing:)()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for CheckedContinuation()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t type metadata accessor for CancellationError()
{
  return type metadata accessor for CancellationError();
}

uint64_t TaskGroup.makeAsyncIterator()()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

uint64_t AsyncStream.Continuation.onTermination.setter()
{
  return AsyncStream.Continuation.onTermination.setter();
}

uint64_t AsyncStream.Continuation.yield(_:)()
{
  return AsyncStream.Continuation.yield(_:)();
}

Swift::Void __swiftcall AsyncStream.Continuation.finish()()
{
}

uint64_t AsyncStream.makeAsyncIterator()()
{
  return AsyncStream.makeAsyncIterator()();
}

uint64_t AsyncStream.init(_:bufferingPolicy:_:)()
{
  return AsyncStream.init(_:bufferingPolicy:_:)();
}

uint64_t static Task.== infix(_:_:)()
{
  return static Task.== infix(_:_:)();
}

uint64_t Task.hash(into:)()
{
  return Task.hash(into:)();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.noThrow(priority:operation:)()
{
  return static Task<>.noThrow(priority:operation:)();
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t static Task<>.checkCancellation()()
{
  return static Task<>.checkCancellation()();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t AsyncSequence<>.xpc.getter()
{
  return AsyncSequence<>.xpc.getter();
}

uint64_t AsyncThrowingStream.Continuation.onTermination.setter()
{
  return AsyncThrowingStream.Continuation.onTermination.setter();
}

uint64_t AsyncThrowingStream.Continuation.yield(_:)()
{
  return AsyncThrowingStream.Continuation.yield(_:)();
}

uint64_t AsyncThrowingStream.Continuation.finish(throwing:)()
{
  return AsyncThrowingStream.Continuation.finish(throwing:)();
}

uint64_t AsyncThrowingStream.makeAsyncIterator()()
{
  return AsyncThrowingStream.makeAsyncIterator()();
}

uint64_t type metadata accessor for AsyncThrowingStream()
{
  return type metadata accessor for AsyncThrowingStream();
}

uint64_t AsyncThrowingStream.init<>(_:bufferingPolicy:_:)()
{
  return AsyncThrowingStream.init<>(_:bufferingPolicy:_:)();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

uint64_t Double.write<A>(to:)()
{
  return Double.write<A>(to:)();
}

uint64_t Float.description.getter()
{
  return Float.description.getter();
}

uint64_t Float.write<A>(to:)()
{
  return Float.write<A>(to:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._forceBridgeFromObjectiveC(_:result:)()
{
  return static Set._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t dispatch thunk of RandomAccessCollection.index(_:offsetBy:)()
{
  return dispatch thunk of RandomAccessCollection.index(_:offsetBy:)();
}

uint64_t RandomAccessCollection<>.securityScopedURLs.getter()
{
  return RandomAccessCollection<>.securityScopedURLs.getter();
}

uint64_t RandomAccessCollection<>.urls.getter()
{
  return RandomAccessCollection<>.urls.getter();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.subscript.getter()
{
  return dispatch thunk of Collection.subscript.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t type metadata accessor for Range()
{
  return type metadata accessor for Range();
}

uint64_t NSProgress.estimatedTimeRemaining.getter()
{
  return NSProgress.estimatedTimeRemaining.getter();
}

uint64_t NSPredicate.init(format:_:)()
{
  return NSPredicate.init(format:_:)();
}

uint64_t NSDictionary.sf_optionalValue<A>(_:as:file:line:)()
{
  return NSDictionary.sf_optionalValue<A>(_:as:file:line:)();
}

uint64_t NSDictionary.sf_optionalValue<A>(_:as:cfTypeID:file:line:)()
{
  return NSDictionary.sf_optionalValue<A>(_:as:cfTypeID:file:line:)();
}

uint64_t NSDictionary.sf_value<A>(_:as:file:line:)()
{
  return NSDictionary.sf_value<A>(_:as:file:line:)();
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t static NSUserDefaults.airdrop.getter()
{
  return static NSUserDefaults.airdrop.getter();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNMutableContact.saveToContactStore()()
{
}

uint64_t static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject<A>(ofClass:from:)();
}

uint64_t static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t OS_dispatch_group.wait(timeout:)()
{
  return OS_dispatch_group.wait(timeout:)();
}

uint64_t OS_dispatch_group.notify(qos:flags:queue:execute:)()
{
  return OS_dispatch_group.notify(qos:flags:queue:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.Attributes()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.sync<A>(execute:)()
{
  return OS_dispatch_queue.sync<A>(execute:)();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t static OS_dispatch_source.TimerFlags.strict.getter()
{
  return static OS_dispatch_source.TimerFlags.strict.getter();
}

uint64_t type metadata accessor for OS_dispatch_source.TimerFlags()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t static OS_dispatch_source.makeTimerSource(flags:queue:)()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t OS_dispatch_source.setEventHandler(qos:flags:handler:)()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

uint64_t OS_dispatch_source.setEventHandler(handler:)()
{
  return OS_dispatch_source.setEventHandler(handler:)();
}

Swift::Void __swiftcall OS_dispatch_source.cancel()()
{
}

Swift::Void __swiftcall OS_dispatch_source.resume()()
{
}

Swift::Void __swiftcall OS_dispatch_source.activate()()
{
}

uint64_t static os_signpost_type_t.end.getter()
{
  return static os_signpost_type_t.end.getter();
}

uint64_t static os_signpost_type_t.begin.getter()
{
  return static os_signpost_type_t.begin.getter();
}

uint64_t NSNotificationCenter.Notifications.makeAsyncIterator()()
{
  return NSNotificationCenter.Notifications.makeAsyncIterator()();
}

uint64_t type metadata accessor for NSNotificationCenter.Notifications.Iterator()
{
  return type metadata accessor for NSNotificationCenter.Notifications.Iterator();
}

uint64_t NSNotificationCenter.notifications(named:object:)()
{
  return NSNotificationCenter.notifications(named:object:)();
}

uint64_t SCSensitivityAnalyzer.videoAnalysis(forFileAt:)()
{
  return SCSensitivityAnalyzer.videoAnalysis(forFileAt:)();
}

uint64_t type metadata accessor for OS_dispatch_queue_serial.Attributes()
{
  return type metadata accessor for OS_dispatch_queue_serial.Attributes();
}

uint64_t OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)()
{
  return OS_dispatch_queue_serial.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()()
{
  return OS_dispatch_queue_serial_executor.asUnownedSerialExecutor()();
}

uint64_t NSArray.makeIterator()()
{
  return NSArray.makeIterator()();
}

uint64_t NSArray.tryCastElements<A>(as:)()
{
  return NSArray.tryCastElements<A>(as:)();
}

NSNumber __swiftcall NSNumber.init(BOOLeanLiteral:)(Swift::Bool BOOLeanLiteral)
{
  return (NSNumber)NSNumber.init(BOOLeanLiteral:)(BOOLeanLiteral);
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSObject.hashValue.getter()
{
  return NSObject.hashValue.getter();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t CNContact.boopDefaultHandle.getter()
{
  return CNContact.boopDefaultHandle.getter();
}

uint64_t CNContact.boopPresentedName.getter()
{
  return CNContact.boopPresentedName.getter();
}

uint64_t CNContact.boopDefaultHandleIsEmail.getter()
{
  return CNContact.boopDefaultHandleIsEmail.getter();
}

uint64_t CNContact.vCardForBoopingDefaultHandle()()
{
  return CNContact.vCardForBoopingDefaultHandle()();
}

uint64_t Optional.unwrap(_:file:line:)()
{
  return Optional.unwrap(_:file:line:)();
}

uint64_t Optional.debugDescription.getter()
{
  return Optional.debugDescription.getter();
}

uint64_t Optional._bridgeToObjectiveC()()
{
  return Optional._bridgeToObjectiveC()();
}

uint64_t Optional.tryUnwrap(_:file:line:)()
{
  return Optional.tryUnwrap(_:file:line:)();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

uint64_t Substring.distance(from:to:)()
{
  return Substring.distance(from:to:)();
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.capitalized.getter()
{
  return StringProtocol.capitalized.getter();
}

uint64_t StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)()
{
  return StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
}

uint64_t StringProtocol.hash.getter()
{
  return StringProtocol.hash.getter();
}

uint64_t StringProtocol.range<A>(of:options:range:locale:)()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t StringProtocol.write(to:atomically:encoding:)()
{
  return StringProtocol.write(to:atomically:encoding:)();
}

uint64_t StringProtocol.cString(using:)()
{
  return StringProtocol.cString(using:)();
}

uint64_t StringProtocol.compare<A>(_:options:range:locale:)()
{
  return StringProtocol.compare<A>(_:options:range:locale:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t BinaryInteger.formatted<A>(_:)()
{
  return BinaryInteger.formatted<A>(_:)();
}

uint64_t dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)()
{
  return dispatch thunk of BinaryInteger.init<A>(truncatingIfNeeded:)();
}

uint64_t dispatch thunk of static BinaryInteger.& infix(_:_:)()
{
  return dispatch thunk of static BinaryInteger.& infix(_:_:)();
}

uint64_t dispatch thunk of static BinaryInteger.| infix(_:_:)()
{
  return dispatch thunk of static BinaryInteger.| infix(_:_:)();
}

uint64_t dispatch thunk of static BinaryInteger.~ prefix(_:)()
{
  return dispatch thunk of static BinaryInteger.~ prefix(_:)();
}

uint64_t dispatch thunk of static BinaryInteger.<< infix<A>(_:_:)()
{
  return dispatch thunk of static BinaryInteger.<< infix<A>(_:_:)();
}

uint64_t BinaryInteger.description.getter()
{
  return BinaryInteger.description.getter();
}

uint64_t dispatch thunk of BinaryInteger.init<A>(_:)()
{
  return dispatch thunk of BinaryInteger.init<A>(_:)();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t dispatch thunk of SetAlgebra.isSuperset(of:)()
{
  return dispatch thunk of SetAlgebra.isSuperset(of:)();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

NSObject __swiftcall AnyHashable._bridgeToObjectiveC()()
{
  return (NSObject)AnyHashable._bridgeToObjectiveC()();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t _StringGuts._slowWithCString<A>(_:)()
{
  return _StringGuts._slowWithCString<A>(_:)();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t DecodingError.Context.init(codingPath:debugDescription:underlyingError:)()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t type metadata accessor for DecodingError()
{
  return type metadata accessor for DecodingError();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t static ContinuousClock.now.getter()
{
  return static ContinuousClock.now.getter();
}

uint64_t static ContinuousClock.Instant.now.getter()
{
  return static ContinuousClock.Instant.now.getter();
}

uint64_t ContinuousClock.Instant.advanced(by:)()
{
  return ContinuousClock.Instant.advanced(by:)();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t dispatch thunk of static FixedWidthInteger.bitWidth.getter()
{
  return dispatch thunk of static FixedWidthInteger.bitWidth.getter();
}

uint64_t FixedWidthInteger.bigEndianBytes.getter()
{
  return FixedWidthInteger.bigEndianBytes.getter();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return dispatch thunk of static _ObjectiveCBridgeable._conditionallyBridgeFromObjectiveC(_:result:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

uint64_t KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedDecodingContainer.codingPath.getter()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t KeyedDecodingContainer.decodeIfPresent(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode(_:forKey:)()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t KeyedDecodingContainer.allKeys.getter()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode(_:forKey:)()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t AsyncCompactMapSequence.init(_:transform:)()
{
  return AsyncCompactMapSequence.init(_:transform:)();
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat()
{
  return type metadata accessor for DefaultStringInterpolation.PrintUtilsHexFormat();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(nilPrint:)();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:_:separator:)();
}

uint64_t DefaultStringInterpolation.appendInterpolation<A>(_:)()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)()
{
  return dispatch thunk of ExpressibleByIntegerLiteral.init(integerLiteral:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)()
{
  return dispatch thunk of _ExpressibleByBuiltinIntegerLiteral.init(_builtinIntegerLiteral:)();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error.flatDescription.getter()
{
  return Error.flatDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

NSNumber __swiftcall Int32._bridgeToObjectiveC()()
{
  return (NSNumber)Int32._bridgeToObjectiveC()();
}

uint64_t static Int64._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int64._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t print(_:separator:terminator:)()
{
  return print(_:separator:terminator:)();
}

uint64_t static Hasher._hash(seed:bytes:count:)()
{
  return static Hasher._hash(seed:bytes:count:)();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt16 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t type metadata accessor for Result()
{
  return type metadata accessor for Result();
}

uint64_t dispatch thunk of Decoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t dispatch thunk of Encoder.container<A>(keyedBy:)()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t TaskLocal.init(wrappedValue:)()
{
  return TaskLocal.init(wrappedValue:)();
}

uint64_t TaskLocal.get()()
{
  return TaskLocal.get()();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t ASPrintF()
{
  return _ASPrintF();
}

uint64_t BKSHIDServicesIsSmartCoverClosed()
{
  return _BKSHIDServicesIsSmartCoverClosed();
}

uint64_t BKSHIDServicesLastUserEventTime()
{
  return _BKSHIDServicesLastUserEventTime();
}

uint64_t BKSHIDServicesRequestHapticFeedback()
{
  return _BKSHIDServicesRequestHapticFeedback();
}

uint64_t BOMBomCommit()
{
  return _BOMBomCommit();
}

uint64_t BOMBomFree()
{
  return _BOMBomFree();
}

uint64_t BOMBomInsertFSObject()
{
  return _BOMBomInsertFSObject();
}

uint64_t BOMBomNew()
{
  return _BOMBomNew();
}

uint64_t BOMCopierCopyWithOptions()
{
  return _BOMCopierCopyWithOptions();
}

uint64_t BOMCopierFree()
{
  return _BOMCopierFree();
}

uint64_t BOMCopierNew()
{
  return _BOMCopierNew();
}

uint64_t BOMCopierSetCopyFileFinishedHandler()
{
  return _BOMCopierSetCopyFileFinishedHandler();
}

uint64_t BOMCopierSetCopyFileUpdateHandler()
{
  return _BOMCopierSetCopyFileUpdateHandler();
}

uint64_t BOMCopierSetFatalErrorHandler()
{
  return _BOMCopierSetFatalErrorHandler();
}

uint64_t BOMCopierSetFatalFileErrorHandler()
{
  return _BOMCopierSetFatalFileErrorHandler();
}

uint64_t BOMCopierSetFileConflictErrorHandler()
{
  return _BOMCopierSetFileConflictErrorHandler();
}

uint64_t BOMCopierSetFileErrorHandler()
{
  return _BOMCopierSetFileErrorHandler();
}

uint64_t BOMCopierSetUserData()
{
  return _BOMCopierSetUserData();
}

uint64_t BOMCopierUserData()
{
  return _BOMCopierUserData();
}

uint64_t BOMFSObjectFree()
{
  return _BOMFSObjectFree();
}

uint64_t BOMFSObjectNewFromPath()
{
  return _BOMFSObjectNewFromPath();
}

uint64_t BOMFSObjectSetPathName()
{
  return _BOMFSObjectSetPathName();
}

uint64_t BTAccessoryManagerGetDefault()
{
  return _BTAccessoryManagerGetDefault();
}

uint64_t BTAccessoryManagerRegisterCustomMessageClient()
{
  return _BTAccessoryManagerRegisterCustomMessageClient();
}

uint64_t BTAccessoryManagerSendCustomMessage()
{
  return _BTAccessoryManagerSendCustomMessage();
}

uint64_t BTDeviceAddressFromString()
{
  return _BTDeviceAddressFromString();
}

uint64_t BTDeviceFromAddress()
{
  return _BTDeviceFromAddress();
}

uint64_t BTSessionAttachWithQueue()
{
  return _BTSessionAttachWithQueue();
}

uint64_t BTSessionDetachWithQueue()
{
  return _BTSessionDetachWithQueue();
}

uint64_t BYSetupAssistantNeedsToRun()
{
  return _BYSetupAssistantNeedsToRun();
}

CFTimeInterval CACurrentMediaTime(void)
{
  return _CACurrentMediaTime();
}

void CCHmac(CCHmacAlgorithm algorithm, const void *key, size_t keyLength, const void *data, size_t dataLength, void *macOut)
{
}

CCRNGStatus CCRandomGenerateBytes(void *bytes, size_t count)
{
  return _CCRandomGenerateBytes(bytes, count);
}

unsigned __int8 *__cdecl CC_MD5(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_MD5(data, len, md);
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

CFAbsoluteTime CFAbsoluteTimeGetCurrent(void)
{
  return _CFAbsoluteTimeGetCurrent();
}

void CFArrayAppendValue(CFMutableArrayRef theArray, const void *value)
{
}

Boolean CFArrayContainsValue(CFArrayRef theArray, CFRange range, const void *value)
{
  return _CFArrayContainsValue(theArray, range, value);
}

CFArrayRef CFArrayCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreate(allocator, values, numValues, callBacks);
}

CFMutableArrayRef CFArrayCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFArrayCallBacks *callBacks)
{
  return _CFArrayCreateMutable(allocator, capacity, callBacks);
}

CFMutableArrayRef CFArrayCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFArrayRef theArray)
{
  return _CFArrayCreateMutableCopy(allocator, capacity, theArray);
}

CFIndex CFArrayGetCount(CFArrayRef theArray)
{
  return _CFArrayGetCount(theArray);
}

CFTypeID CFArrayGetTypeID(void)
{
  return _CFArrayGetTypeID();
}

const void *__cdecl CFArrayGetValueAtIndex(CFArrayRef theArray, CFIndex idx)
{
  return _CFArrayGetValueAtIndex(theArray, idx);
}

void CFArrayGetValues(CFArrayRef theArray, CFRange range, const void **values)
{
}

void CFArraySortValues(CFMutableArrayRef theArray, CFRange range, CFComparatorFunction comparator, void *context)
{
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return _CFAutorelease(arg);
}

void CFBagAddValue(CFMutableBagRef theBag, const void *value)
{
}

CFMutableBagRef CFBagCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFBagCallBacks *callBacks)
{
  return _CFBagCreateMutable(allocator, capacity, callBacks);
}

CFIndex CFBagGetCount(CFBagRef theBag)
{
  return _CFBagGetCount(theBag);
}

CFIndex CFBagGetCountOfValue(CFBagRef theBag, const void *value)
{
  return _CFBagGetCountOfValue(theBag, value);
}

void CFBagGetValues(CFBagRef theBag, const void **values)
{
}

void CFBagRemoveValue(CFMutableBagRef theBag, const void *value)
{
}

uint64_t CFBinaryPlistStreamedCreateDataEx()
{
  return _CFBinaryPlistStreamedCreateDataEx();
}

uint64_t CFBinaryPlistStreamedCreateWithBytesEx2()
{
  return _CFBinaryPlistStreamedCreateWithBytesEx2();
}

CFTypeID CFBooleanGetTypeID(void)
{
  return _CFBooleanGetTypeID();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return _CFBooleanGetValue(BOOLean);
}

CFStringRef CFBundleCopyLocalizedString(CFBundleRef bundle, CFStringRef key, CFStringRef value, CFStringRef tableName)
{
  return _CFBundleCopyLocalizedString(bundle, key, value, tableName);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return _CFBundleCreate(allocator, bundleURL);
}

CFBundleRef CFBundleGetBundleWithIdentifier(CFStringRef bundleID)
{
  return _CFBundleGetBundleWithIdentifier(bundleID);
}

CFDataRef CFDataCreate(CFAllocatorRef allocator, const UInt8 *bytes, CFIndex length)
{
  return _CFDataCreate(allocator, bytes, length);
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return _CFDataCreateMutable(allocator, capacity);
}

CFMutableDataRef CFDataCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDataRef theData)
{
  return _CFDataCreateMutableCopy(allocator, capacity, theData);
}

const UInt8 *__cdecl CFDataGetBytePtr(CFDataRef theData)
{
  return _CFDataGetBytePtr(theData);
}

CFIndex CFDataGetLength(CFDataRef theData)
{
  return _CFDataGetLength(theData);
}

UInt8 *__cdecl CFDataGetMutableBytePtr(CFMutableDataRef theData)
{
  return _CFDataGetMutableBytePtr(theData);
}

CFTypeID CFDataGetTypeID(void)
{
  return _CFDataGetTypeID();
}

CFDateRef CFDateCreate(CFAllocatorRef allocator, CFAbsoluteTime at)
{
  return _CFDateCreate(allocator, at);
}

CFTypeID CFDateGetTypeID(void)
{
  return _CFDateGetTypeID();
}

void CFDictionaryAddValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

CFDictionaryRef CFDictionaryCreate(CFAllocatorRef allocator, const void **keys, const void **values, CFIndex numValues, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreate(allocator, keys, values, numValues, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFDictionaryKeyCallBacks *keyCallBacks, const CFDictionaryValueCallBacks *valueCallBacks)
{
  return _CFDictionaryCreateMutable(allocator, capacity, keyCallBacks, valueCallBacks);
}

CFMutableDictionaryRef CFDictionaryCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFDictionaryRef theDict)
{
  return _CFDictionaryCreateMutableCopy(allocator, capacity, theDict);
}

CFIndex CFDictionaryGetCount(CFDictionaryRef theDict)
{
  return _CFDictionaryGetCount(theDict);
}

uint64_t CFDictionaryGetDouble()
{
  return _CFDictionaryGetDouble();
}

uint64_t CFDictionaryGetInt64()
{
  return _CFDictionaryGetInt64();
}

uint64_t CFDictionaryGetInt64Ranged()
{
  return _CFDictionaryGetInt64Ranged();
}

void CFDictionaryGetKeysAndValues(CFDictionaryRef theDict, const void **keys, const void **values)
{
}

CFTypeID CFDictionaryGetTypeID(void)
{
  return _CFDictionaryGetTypeID();
}

uint64_t CFDictionaryGetTypedValue()
{
  return _CFDictionaryGetTypedValue();
}

uint64_t CFDictionaryGetUUIDEx()
{
  return _CFDictionaryGetUUIDEx();
}

const void *__cdecl CFDictionaryGetValue(CFDictionaryRef theDict, const void *key)
{
  return _CFDictionaryGetValue(theDict, key);
}

void CFDictionaryRemoveAllValues(CFMutableDictionaryRef theDict)
{
}

void CFDictionaryRemoveValue(CFMutableDictionaryRef theDict, const void *key)
{
}

void CFDictionarySetValue(CFMutableDictionaryRef theDict, const void *key, const void *value)
{
}

Boolean CFEqual(CFTypeRef cf1, CFTypeRef cf2)
{
  return _CFEqual(cf1, cf2);
}

CFStringRef CFErrorCopyDescription(CFErrorRef err)
{
  return _CFErrorCopyDescription(err);
}

CFDictionaryRef CFErrorCopyUserInfo(CFErrorRef err)
{
  return _CFErrorCopyUserInfo(err);
}

CFErrorRef CFErrorCreate(CFAllocatorRef allocator, CFErrorDomain domain, CFIndex code, CFDictionaryRef userInfo)
{
  return _CFErrorCreate(allocator, domain, code, userInfo);
}

CFIndex CFErrorGetCode(CFErrorRef err)
{
  return _CFErrorGetCode(err);
}

CFErrorDomain CFErrorGetDomain(CFErrorRef err)
{
  return _CFErrorGetDomain(err);
}

CFTypeID CFErrorGetTypeID(void)
{
  return _CFErrorGetTypeID();
}

CFAllocatorRef CFGetAllocator(CFTypeRef cf)
{
  return _CFGetAllocator(cf);
}

uint64_t CFGetInt64()
{
  return _CFGetInt64();
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return _CFGetTypeID(cf);
}

CFStringRef CFHTTPMessageCopyHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField)
{
  return _CFHTTPMessageCopyHeaderFieldValue(message, headerField);
}

CFIndex CFHTTPMessageGetResponseStatusCode(CFHTTPMessageRef response)
{
  return _CFHTTPMessageGetResponseStatusCode(response);
}

CFTypeID CFHTTPMessageGetTypeID(void)
{
  return _CFHTTPMessageGetTypeID();
}

void CFHTTPMessageSetHeaderFieldValue(CFHTTPMessageRef message, CFStringRef headerField, CFStringRef value)
{
}

void CFNetServiceCancel(CFNetServiceRef theService)
{
}

CFNetServiceRef CFNetServiceCreate(CFAllocatorRef alloc, CFStringRef domain, CFStringRef serviceType, CFStringRef name, SInt32 port)
{
  return _CFNetServiceCreate(alloc, domain, serviceType, name, port);
}

CFStringRef CFNetServiceGetDomain(CFNetServiceRef theService)
{
  return _CFNetServiceGetDomain(theService);
}

CFStringRef CFNetServiceGetName(CFNetServiceRef theService)
{
  return _CFNetServiceGetName(theService);
}

CFStringRef CFNetServiceGetType(CFNetServiceRef theService)
{
  return _CFNetServiceGetType(theService);
}

Boolean CFNetServiceRegisterWithOptions(CFNetServiceRef theService, CFOptionFlags options, CFStreamError *error)
{
  return _CFNetServiceRegisterWithOptions(theService, options, error);
}

void CFNetServiceScheduleWithRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
}

Boolean CFNetServiceSetClient(CFNetServiceRef theService, CFNetServiceClientCallBack clientCB, CFNetServiceClientContext *clientContext)
{
  return _CFNetServiceSetClient(theService, clientCB, clientContext);
}

Boolean CFNetServiceSetTXTData(CFNetServiceRef theService, CFDataRef txtRecord)
{
  return _CFNetServiceSetTXTData(theService, txtRecord);
}

void CFNetServiceUnscheduleFromRunLoop(CFNetServiceRef theService, CFRunLoopRef runLoop, CFStringRef runLoopMode)
{
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return _CFNotificationCenterGetDarwinNotifyCenter();
}

CFNotificationCenterRef CFNotificationCenterGetLocalCenter(void)
{
  return _CFNotificationCenterGetLocalCenter();
}

void CFNotificationCenterPostNotification(CFNotificationCenterRef center, CFNotificationName name, const void *object, CFDictionaryRef userInfo, Boolean deliverImmediately)
{
}

void CFNotificationCenterRemoveEveryObserver(CFNotificationCenterRef center, const void *observer)
{
}

CFNumberRef CFNumberCreate(CFAllocatorRef allocator, CFNumberType theType, const void *valuePtr)
{
  return _CFNumberCreate(allocator, theType, valuePtr);
}

CFTypeID CFNumberGetTypeID(void)
{
  return _CFNumberGetTypeID();
}

Boolean CFNumberGetValue(CFNumberRef number, CFNumberType theType, void *valuePtr)
{
  return _CFNumberGetValue(number, theType, valuePtr);
}

uint64_t CFPhoneNumberCreate()
{
  return _CFPhoneNumberCreate();
}

uint64_t CFPhoneNumberCreateString()
{
  return _CFPhoneNumberCreateString();
}

Boolean CFPreferencesAppSynchronize(CFStringRef applicationID)
{
  return _CFPreferencesAppSynchronize(applicationID);
}

CFPropertyListRef CFPreferencesCopyAppValue(CFStringRef key, CFStringRef applicationID)
{
  return _CFPreferencesCopyAppValue(key, applicationID);
}

CFPropertyListRef CFPreferencesCopyValue(CFStringRef key, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesCopyValue(key, applicationID, userName, hostName);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return _CFPreferencesGetAppBooleanValue(key, applicationID, keyExistsAndHasValidFormat);
}

void CFPreferencesSetValue(CFStringRef key, CFPropertyListRef value, CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
}

Boolean CFPreferencesSynchronize(CFStringRef applicationID, CFStringRef userName, CFStringRef hostName)
{
  return _CFPreferencesSynchronize(applicationID, userName, hostName);
}

uint64_t CFPrefs_CopyKeys()
{
  return _CFPrefs_CopyKeys();
}

uint64_t CFPrefs_CopyTypedValue()
{
  return _CFPrefs_CopyTypedValue();
}

uint64_t CFPrefs_GetData()
{
  return _CFPrefs_GetData();
}

uint64_t CFPrefs_GetDouble()
{
  return _CFPrefs_GetDouble();
}

uint64_t CFPrefs_GetInt64()
{
  return _CFPrefs_GetInt64();
}

uint64_t CFPrefs_SetInt64()
{
  return _CFPrefs_SetInt64();
}

uint64_t CFPrefs_SetValue()
{
  return _CFPrefs_SetValue();
}

CFDataRef CFPropertyListCreateData(CFAllocatorRef allocator, CFPropertyListRef propertyList, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return _CFPropertyListCreateData(allocator, propertyList, format, options, error);
}

CFPropertyListRef CFPropertyListCreateWithData(CFAllocatorRef allocator, CFDataRef data, CFOptionFlags options, CFPropertyListFormat *format, CFErrorRef *error)
{
  return _CFPropertyListCreateWithData(allocator, data, options, format, error);
}

CFIndex CFPropertyListWrite(CFPropertyListRef propertyList, CFWriteStreamRef stream, CFPropertyListFormat format, CFOptionFlags options, CFErrorRef *error)
{
  return _CFPropertyListWrite(propertyList, stream, format, options, error);
}

void CFReadStreamClose(CFReadStreamRef stream)
{
}

CFErrorRef CFReadStreamCopyError(CFReadStreamRef stream)
{
  return _CFReadStreamCopyError(stream);
}

CFStreamStatus CFReadStreamGetStatus(CFReadStreamRef stream)
{
  return _CFReadStreamGetStatus(stream);
}

Boolean CFReadStreamOpen(CFReadStreamRef stream)
{
  return _CFReadStreamOpen(stream);
}

CFIndex CFReadStreamRead(CFReadStreamRef stream, UInt8 *buffer, CFIndex bufferLength)
{
  return _CFReadStreamRead(stream, buffer, bufferLength);
}

Boolean CFReadStreamSetClient(CFReadStreamRef stream, CFOptionFlags streamEvents, CFReadStreamClientCallBack clientCB, CFStreamClientContext *clientContext)
{
  return _CFReadStreamSetClient(stream, streamEvents, clientCB, clientContext);
}

void CFReadStreamSetDispatchQueue(CFReadStreamRef stream, dispatch_queue_t q)
{
}

Boolean CFReadStreamSetProperty(CFReadStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return _CFReadStreamSetProperty(stream, propertyName, propertyValue);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return _CFRetain(cf);
}

void CFRunLoopAddSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return _CFRunLoopGetCurrent();
}

CFRunLoopRef CFRunLoopGetMain(void)
{
  return _CFRunLoopGetMain();
}

void CFRunLoopRemoveSource(CFRunLoopRef rl, CFRunLoopSourceRef source, CFRunLoopMode mode)
{
}

Boolean CFSetContainsValue(CFSetRef theSet, const void *value)
{
  return _CFSetContainsValue(theSet, value);
}

CFSetRef CFSetCreate(CFAllocatorRef allocator, const void **values, CFIndex numValues, const CFSetCallBacks *callBacks)
{
  return _CFSetCreate(allocator, values, numValues, callBacks);
}

CFMutableSetRef CFSetCreateMutable(CFAllocatorRef allocator, CFIndex capacity, const CFSetCallBacks *callBacks)
{
  return _CFSetCreateMutable(allocator, capacity, callBacks);
}

CFMutableSetRef CFSetCreateMutableCopy(CFAllocatorRef allocator, CFIndex capacity, CFSetRef theSet)
{
  return _CFSetCreateMutableCopy(allocator, capacity, theSet);
}

CFIndex CFSetGetCount(CFSetRef theSet)
{
  return _CFSetGetCount(theSet);
}

void CFSetGetValues(CFSetRef theSet, const void **values)
{
}

void CFSetSetValue(CFMutableSetRef theSet, const void *value)
{
}

void CFStreamCreateBoundPair(CFAllocatorRef alloc, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream, CFIndex transferBufferSize)
{
}

void CFStreamCreatePairWithSocket(CFAllocatorRef alloc, CFSocketNativeHandle sock, CFReadStreamRef *readStream, CFWriteStreamRef *writeStream)
{
}

void CFStringAppend(CFMutableStringRef theString, CFStringRef appendedString)
{
}

void CFStringAppendFormat(CFMutableStringRef theString, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return _CFStringCompare(theString1, theString2, compareOptions);
}

CFStringRef CFStringCreateCopy(CFAllocatorRef alloc, CFStringRef theString)
{
  return _CFStringCreateCopy(alloc, theString);
}

CFDataRef CFStringCreateExternalRepresentation(CFAllocatorRef alloc, CFStringRef theString, CFStringEncoding encoding, UInt8 lossByte)
{
  return _CFStringCreateExternalRepresentation(alloc, theString, encoding, lossByte);
}

CFMutableStringRef CFStringCreateMutable(CFAllocatorRef alloc, CFIndex maxLength)
{
  return _CFStringCreateMutable(alloc, maxLength);
}

CFMutableStringRef CFStringCreateMutableCopy(CFAllocatorRef alloc, CFIndex maxLength, CFStringRef theString)
{
  return _CFStringCreateMutableCopy(alloc, maxLength, theString);
}

CFStringRef CFStringCreateWithBytes(CFAllocatorRef alloc, const UInt8 *bytes, CFIndex numBytes, CFStringEncoding encoding, Boolean isExternalRepresentation)
{
  return _CFStringCreateWithBytes(alloc, bytes, numBytes, encoding, isExternalRepresentation);
}

CFStringRef CFStringCreateWithCString(CFAllocatorRef alloc, const char *cStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithCString(alloc, cStr, encoding);
}

CFStringRef CFStringCreateWithFormat(CFAllocatorRef alloc, CFDictionaryRef formatOptions, CFStringRef format, ...)
{
  return _CFStringCreateWithFormat(alloc, formatOptions, format);
}

CFStringRef CFStringCreateWithPascalString(CFAllocatorRef alloc, ConstStr255Param pStr, CFStringEncoding encoding)
{
  return _CFStringCreateWithPascalString(alloc, pStr, encoding);
}

CFStringRef CFStringCreateWithSubstring(CFAllocatorRef alloc, CFStringRef str, CFRange range)
{
  return _CFStringCreateWithSubstring(alloc, str, range);
}

CFRange CFStringFind(CFStringRef theString, CFStringRef stringToFind, CFStringCompareFlags compareOptions)
{
  CFRange v5 = _CFStringFind(theString, stringToFind, compareOptions);
  CFIndex length = v5.length;
  CFIndex location = v5.location;
  result.CFIndex length = length;
  result.CFIndex location = location;
  return result;
}

CFIndex CFStringFindAndReplace(CFMutableStringRef theString, CFStringRef stringToFind, CFStringRef replacementString, CFRange rangeToSearch, CFStringCompareFlags compareOptions)
{
  return _CFStringFindAndReplace(theString, stringToFind, replacementString, rangeToSearch, compareOptions);
}

Boolean CFStringGetCString(CFStringRef theString, char *buffer, CFIndex bufferSize, CFStringEncoding encoding)
{
  return _CFStringGetCString(theString, buffer, bufferSize, encoding);
}

const char *__cdecl CFStringGetCStringPtr(CFStringRef theString, CFStringEncoding encoding)
{
  return _CFStringGetCStringPtr(theString, encoding);
}

UniChar CFStringGetCharacterAtIndex(CFStringRef theString, CFIndex idx)
{
  return _CFStringGetCharacterAtIndex(theString, idx);
}

SInt32 CFStringGetIntValue(CFStringRef str)
{
  return _CFStringGetIntValue(str);
}

CFIndex CFStringGetLength(CFStringRef theString)
{
  return _CFStringGetLength(theString);
}

CFIndex CFStringGetMaximumSizeForEncoding(CFIndex length, CFStringEncoding encoding)
{
  return _CFStringGetMaximumSizeForEncoding(length, encoding);
}

CFTypeID CFStringGetTypeID(void)
{
  return _CFStringGetTypeID();
}

Boolean CFStringHasPrefix(CFStringRef theString, CFStringRef prefix)
{
  return _CFStringHasPrefix(theString, prefix);
}

Boolean CFStringHasSuffix(CFStringRef theString, CFStringRef suffix)
{
  return _CFStringHasSuffix(theString, suffix);
}

void CFStringLowercase(CFMutableStringRef theString, CFLocaleRef locale)
{
}

void CFStringTrim(CFMutableStringRef theString, CFStringRef trimString)
{
}

CFURLRef CFURLCopyAbsoluteURL(CFURLRef relativeURL)
{
  return _CFURLCopyAbsoluteURL(relativeURL);
}

CFStringRef CFURLCopyFileSystemPath(CFURLRef anURL, CFURLPathStyle pathStyle)
{
  return _CFURLCopyFileSystemPath(anURL, pathStyle);
}

CFStringRef CFURLCopyHostName(CFURLRef anURL)
{
  return _CFURLCopyHostName(anURL);
}

CFStringRef CFURLCopyLastPathComponent(CFURLRef url)
{
  return _CFURLCopyLastPathComponent(url);
}

CFStringRef CFURLCopyPath(CFURLRef anURL)
{
  return _CFURLCopyPath(anURL);
}

Boolean CFURLCopyResourcePropertyForKey(CFURLRef url, CFStringRef key, void *propertyValueTypeRefPtr, CFErrorRef *error)
{
  return _CFURLCopyResourcePropertyForKey(url, key, propertyValueTypeRefPtr, error);
}

CFStringRef CFURLCopyScheme(CFURLRef anURL)
{
  return _CFURLCopyScheme(anURL);
}

CFStringRef CFURLCopyStrictPath(CFURLRef anURL, Boolean *isAbsolute)
{
  return _CFURLCopyStrictPath(anURL, isAbsolute);
}

CFURLRef CFURLCreateCopyDeletingLastPathComponent(CFAllocatorRef allocator, CFURLRef url)
{
  return _CFURLCreateCopyDeletingLastPathComponent(allocator, url);
}

CFURLRef CFURLCreateFilePathURL(CFAllocatorRef allocator, CFURLRef url, CFErrorRef *error)
{
  return _CFURLCreateFilePathURL(allocator, url, error);
}

CFURLRef CFURLCreateFromFileSystemRepresentation(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory)
{
  return _CFURLCreateFromFileSystemRepresentation(allocator, buffer, bufLen, isDirectory);
}

CFURLRef CFURLCreateFromFileSystemRepresentationRelativeToBase(CFAllocatorRef allocator, const UInt8 *buffer, CFIndex bufLen, Boolean isDirectory, CFURLRef baseURL)
{
  return _CFURLCreateFromFileSystemRepresentationRelativeToBase(allocator, buffer, bufLen, isDirectory, baseURL);
}

CFStringRef CFURLCreateStringByAddingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveUnescaped, CFStringRef legalURLCharactersToBeEscaped, CFStringEncoding encoding)
{
  return _CFURLCreateStringByAddingPercentEscapes(allocator, originalString, charactersToLeaveUnescaped, legalURLCharactersToBeEscaped, encoding);
}

CFStringRef CFURLCreateStringByReplacingPercentEscapes(CFAllocatorRef allocator, CFStringRef originalString, CFStringRef charactersToLeaveEscaped)
{
  return _CFURLCreateStringByReplacingPercentEscapes(allocator, originalString, charactersToLeaveEscaped);
}

CFURLRef CFURLCreateWithFileSystemPath(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory)
{
  return _CFURLCreateWithFileSystemPath(allocator, filePath, pathStyle, isDirectory);
}

CFURLRef CFURLCreateWithFileSystemPathRelativeToBase(CFAllocatorRef allocator, CFStringRef filePath, CFURLPathStyle pathStyle, Boolean isDirectory, CFURLRef baseURL)
{
  return _CFURLCreateWithFileSystemPathRelativeToBase(allocator, filePath, pathStyle, isDirectory, baseURL);
}

CFURLRef CFURLCreateWithString(CFAllocatorRef allocator, CFStringRef URLString, CFURLRef baseURL)
{
  return _CFURLCreateWithString(allocator, URLString, baseURL);
}

CFURLEnumeratorRef CFURLEnumeratorCreateForDirectoryURL(CFAllocatorRef alloc, CFURLRef directoryURL, CFURLEnumeratorOptions option, CFArrayRef propertyKeys)
{
  return _CFURLEnumeratorCreateForDirectoryURL(alloc, directoryURL, option, propertyKeys);
}

CFURLEnumeratorResult CFURLEnumeratorGetNextURL(CFURLEnumeratorRef enumerator, CFURLRef *url, CFErrorRef *error)
{
  return _CFURLEnumeratorGetNextURL(enumerator, url, error);
}

Boolean CFURLGetFileSystemRepresentation(CFURLRef url, Boolean resolveAgainstBase, UInt8 *buffer, CFIndex maxBufLen)
{
  return _CFURLGetFileSystemRepresentation(url, resolveAgainstBase, buffer, maxBufLen);
}

CFStringRef CFURLGetString(CFURLRef anURL)
{
  return _CFURLGetString(anURL);
}

CFTypeID CFURLGetTypeID(void)
{
  return _CFURLGetTypeID();
}

Boolean CFURLHasDirectoryPath(CFURLRef anURL)
{
  return _CFURLHasDirectoryPath(anURL);
}

uint64_t CFURLRequestSetShouldPipelineHTTP()
{
  return _CFURLRequestSetShouldPipelineHTTP();
}

uint64_t CFURLResponseCopyPeerAddress()
{
  return _CFURLResponseCopyPeerAddress();
}

Boolean CFURLSetResourcePropertyForKey(CFURLRef url, CFStringRef key, CFTypeRef propertyValue, CFErrorRef *error)
{
  return _CFURLSetResourcePropertyForKey(url, key, propertyValue, error);
}

SInt32 CFUserNotificationCancel(CFUserNotificationRef userNotification)
{
  return _CFUserNotificationCancel(userNotification);
}

CFUserNotificationRef CFUserNotificationCreate(CFAllocatorRef allocator, CFTimeInterval timeout, CFOptionFlags flags, SInt32 *error, CFDictionaryRef dictionary)
{
  return _CFUserNotificationCreate(allocator, timeout, flags, error, dictionary);
}

CFRunLoopSourceRef CFUserNotificationCreateRunLoopSource(CFAllocatorRef allocator, CFUserNotificationRef userNotification, CFUserNotificationCallBack callout, CFIndex order)
{
  return _CFUserNotificationCreateRunLoopSource(allocator, userNotification, callout, order);
}

void CFWriteStreamClose(CFWriteStreamRef stream)
{
}

CFErrorRef CFWriteStreamCopyError(CFWriteStreamRef stream)
{
  return _CFWriteStreamCopyError(stream);
}

CFWriteStreamRef CFWriteStreamCreateWithFile(CFAllocatorRef alloc, CFURLRef fileURL)
{
  return _CFWriteStreamCreateWithFile(alloc, fileURL);
}

Boolean CFWriteStreamOpen(CFWriteStreamRef stream)
{
  return _CFWriteStreamOpen(stream);
}

Boolean CFWriteStreamSetProperty(CFWriteStreamRef stream, CFStreamPropertyKey propertyName, CFTypeRef propertyValue)
{
  return _CFWriteStreamSetProperty(stream, propertyName, propertyValue);
}

CFIndex CFWriteStreamWrite(CFWriteStreamRef stream, const UInt8 *buffer, CFIndex bufferLength)
{
  return _CFWriteStreamWrite(stream, buffer, bufferLength);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return _CGColorEqualToColor(color1, color2);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return _CGColorSpaceCreateDeviceRGB();
}

uint64_t CGImageCreateByMatchingToColorSpace()
{
  return _CGImageCreateByMatchingToColorSpace();
}

uint64_t CGImageCreateThumb()
{
  return _CGImageCreateThumb();
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
}

void CGImageDestinationAddImageFromSource(CGImageDestinationRef idst, CGImageSourceRef isrc, size_t index, CFDictionaryRef properties)
{
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithData(data, type, count, options);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return _CGImageDestinationCreateWithURL(url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return _CGImageDestinationFinalize(idst);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return _CGImageGetHeight(image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return _CGImageGetWidth(image);
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return _CGImageRetain(image);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCopyPropertiesAtIndex(isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return _CGImageSourceCreateImageAtIndex(isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithData(data, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return _CGImageSourceCreateWithURL(url, options);
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return _CGImageSourceGetCount(isrc);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return _CGImageSourceGetType(isrc);
}

uint64_t CNUserInteractionIsRequired()
{
  return _CNUserInteractionIsRequired();
}

uint64_t CPCopyBundleIdentifierAndTeamFromAuditToken()
{
  return _CPCopyBundleIdentifierAndTeamFromAuditToken();
}

uint64_t CPCopyBundleIdentifierFromAuditToken()
{
  return _CPCopyBundleIdentifierFromAuditToken();
}

uint64_t CPPhoneNumberCopyActiveCountryCode()
{
  return _CPPhoneNumberCopyActiveCountryCode();
}

uint64_t CUDescriptionWithLevel()
{
  return _CUDescriptionWithLevel();
}

uint64_t CUDispatchTimerSet()
{
  return _CUDispatchTimerSet();
}

uint64_t CUMainQueue()
{
  return _CUMainQueue();
}

uint64_t CUNormalizeEmailAddress()
{
  return _CUNormalizeEmailAddress();
}

uint64_t CUNormalizePhoneNumber()
{
  return _CUNormalizePhoneNumber();
}

uint64_t CUPrintNSDataAddress()
{
  return _CUPrintNSDataAddress();
}

uint64_t CacheDeleteCopyPurgeableSpaceWithInfo()
{
  return _CacheDeleteCopyPurgeableSpaceWithInfo();
}

uint64_t CacheDeletePurgeAsync()
{
  return _CacheDeletePurgeAsync();
}

uint64_t CryptoAEADDecryptMessageOneShot()
{
  return _CryptoAEADDecryptMessageOneShot();
}

uint64_t CryptoAEADEncryptMessageOneShot()
{
  return _CryptoAEADEncryptMessageOneShot();
}

uint64_t CryptoHKDF()
{
  return _CryptoHKDF();
}

DNSServiceErrorType DNSServiceBrowse(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *regtype, const char *domain, DNSServiceBrowseReply callBack, void *context)
{
  return _DNSServiceBrowse(sdRef, flags, interfaceIndex, regtype, domain, callBack, context);
}

DNSServiceErrorType DNSServiceConstructFullName(char *const fullName, const char *const service, const char *const regtype, const char *const domain)
{
  return _DNSServiceConstructFullName(fullName, service, regtype, domain);
}

DNSServiceErrorType DNSServiceCreateConnection(DNSServiceRef *sdRef)
{
  return _DNSServiceCreateConnection(sdRef);
}

DNSServiceErrorType DNSServiceQueryRecord(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *fullname, uint16_t rrtype, uint16_t rrclass, DNSServiceQueryRecordReply callBack, void *context)
{
  return _DNSServiceQueryRecord(sdRef, flags, interfaceIndex, fullname, rrtype, rrclass, callBack, context);
}

void DNSServiceRefDeallocate(DNSServiceRef sdRef)
{
}

DNSServiceErrorType DNSServiceRegister(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, const char *host, uint16_t port, uint16_t txtLen, const void *txtRecord, DNSServiceRegisterReply callBack, void *context)
{
  return _DNSServiceRegister(sdRef, flags, interfaceIndex, name, regtype, domain, host, port, txtLen, txtRecord, callBack, context);
}

DNSServiceErrorType DNSServiceResolve(DNSServiceRef *sdRef, DNSServiceFlags flags, uint32_t interfaceIndex, const char *name, const char *regtype, const char *domain, DNSServiceResolveReply callBack, void *context)
{
  return _DNSServiceResolve(sdRef, flags, interfaceIndex, name, regtype, domain, callBack, context);
}

DNSServiceErrorType DNSServiceSetDispatchQueue(DNSServiceRef service, dispatch_queue_t queue)
{
  return _DNSServiceSetDispatchQueue(service, queue);
}

uint64_t DataToHexCStringEx()
{
  return _DataToHexCStringEx();
}

uint64_t DebugGetErrorString()
{
  return _DebugGetErrorString();
}

uint64_t DeviceOSVersionAtOrLater()
{
  return _DeviceOSVersionAtOrLater();
}

uint64_t DeviceOSVersionAtOrLaterEx()
{
  return _DeviceOSVersionAtOrLaterEx();
}

uint64_t FatalErrorF()
{
  return _FatalErrorF();
}

uint64_t GestaltCopyAnswer()
{
  return _GestaltCopyAnswer();
}

uint64_t GestaltGetBoolean()
{
  return _GestaltGetBoolean();
}

uint64_t GestaltGetDeviceClass()
{
  return _GestaltGetDeviceClass();
}

uint64_t GestaltProductTypeStringToDeviceClass()
{
  return _GestaltProductTypeStringToDeviceClass();
}

uint64_t IDSCopyForDevice()
{
  return _IDSCopyForDevice();
}

uint64_t IDSCopyIDForDevice()
{
  return _IDSCopyIDForDevice();
}

uint64_t IDSCopyLocalDeviceUniqueID()
{
  return _IDSCopyLocalDeviceUniqueID();
}

IOReturn IOAllowPowerChange(io_connect_t kernelPort, intptr_t notificationID)
{
  return _IOAllowPowerChange(kernelPort, notificationID);
}

kern_return_t IOConnectCallScalarMethod(mach_port_t connection, uint32_t selector, const uint64_t *input, uint32_t inputCnt, uint64_t *output, uint32_t *outputCnt)
{
  return _IOConnectCallScalarMethod(connection, selector, input, inputCnt, output, outputCnt);
}

kern_return_t IOConnectCallStructMethod(mach_port_t connection, uint32_t selector, const void *inputStruct, size_t inputStructCnt, void *outputStruct, size_t *outputStructCnt)
{
  return _IOConnectCallStructMethod(connection, selector, inputStruct, inputStructCnt, outputStruct, outputStructCnt);
}

uint64_t IOHIDEventCreateKeyboardEvent()
{
  return _IOHIDEventCreateKeyboardEvent();
}

uint64_t IOHIDEventGetIntegerValue()
{
  return _IOHIDEventGetIntegerValue();
}

uint64_t IOHIDEventGetType()
{
  return _IOHIDEventGetType();
}

CFArrayRef IOHIDEventSystemClientCopyServices(IOHIDEventSystemClientRef client)
{
  return _IOHIDEventSystemClientCopyServices(client);
}

uint64_t IOHIDEventSystemClientCreateWithType()
{
  return _IOHIDEventSystemClientCreateWithType();
}

uint64_t IOHIDEventSystemClientRegisterEventCallback()
{
  return _IOHIDEventSystemClientRegisterEventCallback();
}

uint64_t IOHIDEventSystemClientScheduleWithRunLoop()
{
  return _IOHIDEventSystemClientScheduleWithRunLoop();
}

uint64_t IOHIDEventSystemClientSetMatching()
{
  return _IOHIDEventSystemClientSetMatching();
}

uint64_t IOHIDServiceClientCopyEvent()
{
  return _IOHIDServiceClientCopyEvent();
}

CFRunLoopSourceRef IONotificationPortGetRunLoopSource(IONotificationPortRef notify)
{
  return _IONotificationPortGetRunLoopSource(notify);
}

kern_return_t IOObjectRelease(io_object_t object)
{
  return _IOObjectRelease(object);
}

CFDictionaryRef IOPMAssertionCopyProperties(IOPMAssertionID theAssertion)
{
  return _IOPMAssertionCopyProperties(theAssertion);
}

IOReturn IOPMAssertionCreateWithProperties(CFDictionaryRef AssertionProperties, IOPMAssertionID *AssertionID)
{
  return _IOPMAssertionCreateWithProperties(AssertionProperties, AssertionID);
}

uint64_t IOPMAssertionDeclareSystemActivity()
{
  return _IOPMAssertionDeclareSystemActivity();
}

IOReturn IOPMAssertionRelease(IOPMAssertionID AssertionID)
{
  return _IOPMAssertionRelease(AssertionID);
}

uint64_t IOPMConnectionGetSystemCapabilities()
{
  return _IOPMConnectionGetSystemCapabilities();
}

uint64_t IOPMGetCapabilitiesDescription()
{
  return _IOPMGetCapabilitiesDescription();
}

uint64_t IOPMGetLastWakeTime()
{
  return _IOPMGetLastWakeTime();
}

io_connect_t IORegisterForSystemPower(void *refcon, IONotificationPortRef *thePortRef, IOServiceInterestCallback callback, io_object_t *notifier)
{
  return _IORegisterForSystemPower(refcon, thePortRef, callback, notifier);
}

io_service_t IOServiceGetMatchingService(mach_port_t mainPort, CFDictionaryRef matching)
{
  return _IOServiceGetMatchingService(mainPort, matching);
}

CFMutableDictionaryRef IOServiceMatching(const char *name)
{
  return _IOServiceMatching(name);
}

kern_return_t IOServiceOpen(io_service_t service, task_port_t owningTask, uint32_t type, io_connect_t *connect)
{
  return _IOServiceOpen(service, owningTask, type, connect);
}

uint64_t IsAppleInternalBuild()
{
  return _IsAppleInternalBuild();
}

uint64_t LogCategoryCreateEx()
{
  return _LogCategoryCreateEx();
}

uint64_t LogCategory_Remove()
{
  return _LogCategory_Remove();
}

uint64_t LogControl()
{
  return _LogControl();
}

uint64_t LogPrintF()
{
  return _LogPrintF();
}

uint64_t LogSetAppID()
{
  return _LogSetAppID();
}

uint64_t LogShow()
{
  return _LogShow();
}

uint64_t MAECopyDCRTWithError()
{
  return _MAECopyDCRTWithError();
}

uint64_t MAECopyDCRTWithOptions()
{
  return _MAECopyDCRTWithOptions();
}

uint64_t MAEIssueDCRTWithCallback()
{
  return _MAEIssueDCRTWithCallback();
}

uint64_t MAEIssueDCRTWithCompletion()
{
  return _MAEIssueDCRTWithCompletion();
}

uint64_t MGCopyAnswer()
{
  return _MGCopyAnswer();
}

uint64_t MGCopyMultipleAnswers()
{
  return _MGCopyMultipleAnswers();
}

uint64_t MGGetBoolAnswer()
{
  return _MGGetBoolAnswer();
}

uint64_t MGGetStringAnswer()
{
  return _MGGetStringAnswer();
}

uint64_t MGIsQuestionValid()
{
  return _MGIsQuestionValid();
}

uint64_t MKBDeviceLockAssertion()
{
  return _MKBDeviceLockAssertion();
}

uint64_t MKBDeviceUnlockedSinceBoot()
{
  return _MKBDeviceUnlockedSinceBoot();
}

uint64_t MKBGetDeviceLockState()
{
  return _MKBGetDeviceLockState();
}

uint64_t MKBLockDevice()
{
  return _MKBLockDevice();
}

uint64_t MKBUnlockDevice()
{
  return _MKBUnlockDevice();
}

uint64_t MobileGestalt_get_current_device()
{
  return _MobileGestalt_get_current_device();
}

uint64_t MobileGestalt_get_deviceSupportsApplePencil()
{
  return _MobileGestalt_get_deviceSupportsApplePencil();
}

uint64_t NRWatchOSVersionForRemoteDevice()
{
  return _NRWatchOSVersionForRemoteDevice();
}

uint64_t NSAppendPrintF()
{
  return _NSAppendPrintF();
}

uint64_t NSArrayValidateClasses()
{
  return _NSArrayValidateClasses();
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

uint64_t NSDecodeNSArrayOfClassIfPresent()
{
  return _NSDecodeNSArrayOfClassIfPresent();
}

uint64_t NSDecodeObjectIfPresent()
{
  return _NSDecodeObjectIfPresent();
}

uint64_t NSDecodeStandardContainerIfPresent()
{
  return _NSDecodeStandardContainerIfPresent();
}

uint64_t NSDictionaryGetNSNumber()
{
  return _NSDictionaryGetNSNumber();
}

uint64_t NSErrorF()
{
  return _NSErrorF();
}

uint64_t NSErrorToOSStatus()
{
  return _NSErrorToOSStatus();
}

uint64_t NSErrorWithOSStatusF()
{
  return _NSErrorWithOSStatusF();
}

NSString *NSHomeDirectory(void)
{
  return _NSHomeDirectory();
}

void NSLog(NSString *format, ...)
{
}

uint64_t NSPrintF()
{
  return _NSPrintF();
}

uint64_t NSRequestConcreteImplementation()
{
  return _NSRequestConcreteImplementation();
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return _NSSearchPathForDirectoriesInDomains(directory, domainMask, expandTilde);
}

uint64_t NSStringFromBOOL()
{
  return _NSStringFromBOOL();
}

NSString *__cdecl NSStringFromCGSize(CGSize size)
{
  return _NSStringFromCGSize(size);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

NSString *__cdecl NSStringFromSelector(SEL aSelector)
{
  return _NSStringFromSelector(aSelector);
}

uint64_t NSStringLooksLikeBTAddress()
{
  return _NSStringLooksLikeBTAddress();
}

NSString *NSTemporaryDirectory(void)
{
  return _NSTemporaryDirectory();
}

uint64_t OPACKDecodeData()
{
  return _OPACKDecodeData();
}

uint64_t OPACKEncoderCreateData()
{
  return _OPACKEncoderCreateData();
}

uint64_t PBDataWriterWriteBOOLField()
{
  return _PBDataWriterWriteBOOLField();
}

uint64_t PBDataWriterWriteDataField()
{
  return _PBDataWriterWriteDataField();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return _PBDataWriterWriteDoubleField();
}

uint64_t PBDataWriterWriteInt32Field()
{
  return _PBDataWriterWriteInt32Field();
}

uint64_t PBDataWriterWriteStringField()
{
  return _PBDataWriterWriteStringField();
}

uint64_t PBDataWriterWriteUint32Field()
{
  return _PBDataWriterWriteUint32Field();
}

uint64_t PBReaderReadData()
{
  return _PBReaderReadData();
}

uint64_t PBReaderReadString()
{
  return _PBReaderReadString();
}

uint64_t PBReaderSkipValueWithTag()
{
  return _PBReaderSkipValueWithTag();
}

uint64_t PLLogTimeSensitiveRegisteredEvent()
{
  return _PLLogTimeSensitiveRegisteredEvent();
}

uint64_t PNCopyBestGuessNormalizedNumberForCountry()
{
  return _PNCopyBestGuessNormalizedNumberForCountry();
}

uint64_t RPCompanionLinkDeviceIsEqualToSFDevice()
{
  return _RPCompanionLinkDeviceIsEqualToSFDevice();
}

uint64_t RandomBytes()
{
  return _RandomBytes();
}

uint64_t SBGetIsAlive()
{
  return _SBGetIsAlive();
}

uint64_t SBGetScreenLockStatus()
{
  return _SBGetScreenLockStatus();
}

uint64_t SBSEventObserverGetValueForState()
{
  return _SBSEventObserverGetValueForState();
}

uint64_t SBSEventObserverInitialize()
{
  return _SBSEventObserverInitialize();
}

uint64_t SBSEventObserverStartObservingEvent()
{
  return _SBSEventObserverStartObservingEvent();
}

uint64_t SBSSpringBoardBlockableServerPort()
{
  return _SBSSpringBoardBlockableServerPort();
}

uint64_t SBSSpringBoardServerPort()
{
  return _SBSSpringBoardServerPort();
}

uint64_t SBSUndimScreen()
{
  return _SBSUndimScreen();
}

uint64_t SBUIIsSystemApertureEnabled()
{
  return _SBUIIsSystemApertureEnabled();
}

uint64_t SCDynamicStoreAddWatchedKey()
{
  return _SCDynamicStoreAddWatchedKey();
}

CFStringRef SCDynamicStoreCopyComputerName(SCDynamicStoreRef store, CFStringEncoding *nameEncoding)
{
  return _SCDynamicStoreCopyComputerName(store, nameEncoding);
}

CFStringRef SCDynamicStoreCopyLocalHostName(SCDynamicStoreRef store)
{
  return _SCDynamicStoreCopyLocalHostName(store);
}

CFPropertyListRef SCDynamicStoreCopyValue(SCDynamicStoreRef store, CFStringRef key)
{
  return _SCDynamicStoreCopyValue(store, key);
}

SCDynamicStoreRef SCDynamicStoreCreate(CFAllocatorRef allocator, CFStringRef name, SCDynamicStoreCallBack callout, SCDynamicStoreContext *context)
{
  return _SCDynamicStoreCreate(allocator, name, callout, context);
}

CFRunLoopSourceRef SCDynamicStoreCreateRunLoopSource(CFAllocatorRef allocator, SCDynamicStoreRef store, CFIndex order)
{
  return _SCDynamicStoreCreateRunLoopSource(allocator, store, order);
}

CFStringRef SCDynamicStoreKeyCreate(CFAllocatorRef allocator, CFStringRef fmt, ...)
{
  return _SCDynamicStoreKeyCreate(allocator, fmt);
}

CFStringRef SCDynamicStoreKeyCreateComputerName(CFAllocatorRef allocator)
{
  return _SCDynamicStoreKeyCreateComputerName(allocator);
}

CFStringRef SCDynamicStoreKeyCreateHostNames(CFAllocatorRef allocator)
{
  return _SCDynamicStoreKeyCreateHostNames(allocator);
}

CFStringRef SCDynamicStoreKeyCreateNetworkInterfaceEntity(CFAllocatorRef allocator, CFStringRef domain, CFStringRef ifname, CFStringRef entity)
{
  return _SCDynamicStoreKeyCreateNetworkInterfaceEntity(allocator, domain, ifname, entity);
}

uint64_t SCDynamicStoreRemoveWatchedKey()
{
  return _SCDynamicStoreRemoveWatchedKey();
}

Boolean SCDynamicStoreSetNotificationKeys(SCDynamicStoreRef store, CFArrayRef keys, CFArrayRef patterns)
{
  return _SCDynamicStoreSetNotificationKeys(store, keys, patterns);
}

Boolean SCDynamicStoreSetValue(SCDynamicStoreRef store, CFStringRef key, CFPropertyListRef value)
{
  return _SCDynamicStoreSetValue(store, key, value);
}

int SCError(void)
{
  return _SCError();
}

const char *__cdecl SCErrorString(int status)
{
  return _SCErrorString(status);
}

SCPreferencesRef SCPreferencesCreateWithAuthorization(CFAllocatorRef allocator, CFStringRef name, CFStringRef prefsID, AuthorizationRef authorization)
{
  return _SCPreferencesCreateWithAuthorization(allocator, name, prefsID, authorization);
}

Boolean SCPreferencesSetCallback(SCPreferencesRef prefs, SCPreferencesCallBack callout, SCPreferencesContext *context)
{
  return _SCPreferencesSetCallback(prefs, callout, context);
}

Boolean SCPreferencesSetDispatchQueue(SCPreferencesRef prefs, dispatch_queue_t queue)
{
  return _SCPreferencesSetDispatchQueue(prefs, queue);
}

uint64_t SFAWDEnsureInitialized()
{
  return _SFAWDEnsureInitialized();
}

uint64_t SFActivityScanTypesToString()
{
  return _SFActivityScanTypesToString();
}

uint64_t SFAddSuffixForCurrentDeviceClass()
{
  return _SFAddSuffixForCurrentDeviceClass();
}

uint64_t SFAdvertisementDescriptionFromPayloadData()
{
  return _SFAdvertisementDescriptionFromPayloadData();
}

uint64_t SFAirDropDownloadsURL()
{
  return _SFAirDropDownloadsURL();
}

uint64_t SFAirDropTransferFailureReasonToString()
{
  return _SFAirDropTransferFailureReasonToString();
}

uint64_t SFAirDropTransferStateToString()
{
  return _SFAirDropTransferStateToString();
}

uint64_t SFAirDropTransferUserResponseToString()
{
  return _SFAirDropTransferUserResponseToString();
}

uint64_t SFAirDropUrlSchemeIsSupported()
{
  return _SFAirDropUrlSchemeIsSupported();
}

uint64_t SFAppleIDAddCertificateToKeychain()
{
  return _SFAppleIDAddCertificateToKeychain();
}

uint64_t SFAppleIDCertificateAndKeyCounts()
{
  return _SFAppleIDCertificateAndKeyCounts();
}

uint64_t SFAppleIDCommonNameForCertificate()
{
  return _SFAppleIDCommonNameForCertificate();
}

uint64_t SFAppleIDCopyKeychainReferenceForKey()
{
  return _SFAppleIDCopyKeychainReferenceForKey();
}

uint64_t SFAppleIDCreateCertificateRequestPEMStringForKeyPair()
{
  return _SFAppleIDCreateCertificateRequestPEMStringForKeyPair();
}

uint64_t SFAppleIDCreateCertificateWithPEMString()
{
  return _SFAppleIDCreateCertificateWithPEMString();
}

uint64_t SFAppleIDCreateKeyPair()
{
  return _SFAppleIDCreateKeyPair();
}

uint64_t SFAppleIDExpirationDateForCertificate()
{
  return _SFAppleIDExpirationDateForCertificate();
}

uint64_t SFAppleIDParseValidationRecordData()
{
  return _SFAppleIDParseValidationRecordData();
}

uint64_t SFAppleIDParseValidationRecordDataSync()
{
  return _SFAppleIDParseValidationRecordDataSync();
}

uint64_t SFAppleIDRemoveAllCertificatesFromKeychain()
{
  return _SFAppleIDRemoveAllCertificatesFromKeychain();
}

uint64_t SFAppleIDRemoveAllKeysFromKeychain()
{
  return _SFAppleIDRemoveAllKeysFromKeychain();
}

uint64_t SFAppleIDVerifyCertificateChain()
{
  return _SFAppleIDVerifyCertificateChain();
}

uint64_t SFAppleIDVerifyCertificateChainSync()
{
  return _SFAppleIDVerifyCertificateChainSync();
}

uint64_t SFAuthenticationErrorToString()
{
  return _SFAuthenticationErrorToString();
}

uint64_t SFAuthenticationTypeToString()
{
  return _SFAuthenticationTypeToString();
}

uint64_t SFCombinedHashFromArray()
{
  return _SFCombinedHashFromArray();
}

uint64_t SFCompactStringFromCollection()
{
  return _SFCompactStringFromCollection();
}

uint64_t SFContentTypes()
{
  return _SFContentTypes();
}

uint64_t SFCreateCGImageFromData()
{
  return _SFCreateCGImageFromData();
}

uint64_t SFDashboardLogJSON()
{
  return _SFDashboardLogJSON();
}

uint64_t SFDataFromCGImage()
{
  return _SFDataFromCGImage();
}

uint64_t SFDataFromHexString()
{
  return _SFDataFromHexString();
}

uint64_t SFDateToStringRFC3339()
{
  return _SFDateToStringRFC3339();
}

uint64_t SFDeviceClassCodeGet()
{
  return _SFDeviceClassCodeGet();
}

uint64_t SFDeviceColorCodeGet()
{
  return _SFDeviceColorCodeGet();
}

uint64_t SFDeviceImageFromDeviceModel()
{
  return _SFDeviceImageFromDeviceModel();
}

uint64_t SFDeviceImageFromImageName()
{
  return _SFDeviceImageFromImageName();
}

uint64_t SFDeviceIsRealityDevice()
{
  return _SFDeviceIsRealityDevice();
}

uint64_t SFDeviceIsVirtualMachine()
{
  return _SFDeviceIsVirtualMachine();
}

uint64_t SFDeviceModel()
{
  return _SFDeviceModel();
}

uint64_t SFDeviceModelCodeGet()
{
  return _SFDeviceModelCodeGet();
}

uint64_t SFDeviceProductVersion()
{
  return _SFDeviceProductVersion();
}

uint64_t SFDeviceSupportsAirDrop()
{
  return _SFDeviceSupportsAirDrop();
}

uint64_t SFDeviceSupportsAutoUnlock()
{
  return _SFDeviceSupportsAutoUnlock();
}

uint64_t SFDeviceSupportsContinuity()
{
  return _SFDeviceSupportsContinuity();
}

uint64_t SFDeviceSupportsRapportOnlyAirDropDiscovery()
{
  return _SFDeviceSupportsRapportOnlyAirDropDiscovery();
}

uint64_t SFDeviceSupportsRemoteDisc()
{
  return _SFDeviceSupportsRemoteDisc();
}

uint64_t SFDeviceTimeLimitEveryoneMode()
{
  return _SFDeviceTimeLimitEveryoneMode();
}

uint64_t SFDeviceToRPCompanionLinkDevice()
{
  return _SFDeviceToRPCompanionLinkDevice();
}

uint64_t SFDispatchTimerSet()
{
  return _SFDispatchTimerSet();
}

uint64_t SFFakeFilesAndItemsArrayForURLs()
{
  return _SFFakeFilesAndItemsArrayForURLs();
}

uint64_t SFFilesAppAvailable()
{
  return _SFFilesAppAvailable();
}

uint64_t SFFullTextFromRTIDataPayload()
{
  return _SFFullTextFromRTIDataPayload();
}

uint64_t SFGenerateFileInfoForURL()
{
  return _SFGenerateFileInfoForURL();
}

uint64_t SFHexStringForBase64EncodedString()
{
  return _SFHexStringForBase64EncodedString();
}

uint64_t SFHexStringForData()
{
  return _SFHexStringForData();
}

uint64_t SFHexStringForDataEx()
{
  return _SFHexStringForDataEx();
}

uint64_t SFHighPriorityQueue()
{
  return _SFHighPriorityQueue();
}

uint64_t SFHomePodDisplayNameForDeviceName()
{
  return _SFHomePodDisplayNameForDeviceName();
}

uint64_t SFImageStackFromImages()
{
  return _SFImageStackFromImages();
}

uint64_t SFIsAllowedAirDropCredentialClient()
{
  return _SFIsAllowedAirDropCredentialClient();
}

uint64_t SFIsAnnounceCallsEnabled()
{
  return _SFIsAnnounceCallsEnabled();
}

uint64_t SFIsCalendarEvent()
{
  return _SFIsCalendarEvent();
}

uint64_t SFIsContact()
{
  return _SFIsContact();
}

uint64_t SFIsCoreType()
{
  return _SFIsCoreType();
}

uint64_t SFIsCredential()
{
  return _SFIsCredential();
}

uint64_t SFIsDeviceAppleTV()
{
  return _SFIsDeviceAppleTV();
}

uint64_t SFIsDeviceAudioAccessory()
{
  return _SFIsDeviceAudioAccessory();
}

uint64_t SFIsDevicePhone()
{
  return _SFIsDevicePhone();
}

uint64_t SFIsFindMyFriendsLink()
{
  return _SFIsFindMyFriendsLink();
}

uint64_t SFIsGreenTeaDevice()
{
  return _SFIsGreenTeaDevice();
}

uint64_t SFIsIPA()
{
  return _SFIsIPA();
}

uint64_t SFIsImage()
{
  return _SFIsImage();
}

uint64_t SFIsKeynoteLiveLink()
{
  return _SFIsKeynoteLiveLink();
}

uint64_t SFIsLivePhotos()
{
  return _SFIsLivePhotos();
}

uint64_t SFIsManagedConfigurationType()
{
  return _SFIsManagedConfigurationType();
}

uint64_t SFIsNewsLink()
{
  return _SFIsNewsLink();
}

uint64_t SFIsNote()
{
  return _SFIsNote();
}

uint64_t SFIsPDF()
{
  return _SFIsPDF();
}

uint64_t SFIsPass()
{
  return _SFIsPass();
}

uint64_t SFIsPasskeyCredentialLink()
{
  return _SFIsPasskeyCredentialLink();
}

uint64_t SFIsPencilHapticsEnabled()
{
  return _SFIsPencilHapticsEnabled();
}

uint64_t SFIsPhotosAssetBundle()
{
  return _SFIsPhotosAssetBundle();
}

uint64_t SFIsPlaygroundItem()
{
  return _SFIsPlaygroundItem();
}

uint64_t SFIsVideo()
{
  return _SFIsVideo();
}

uint64_t SFIsVoiceMemo()
{
  return _SFIsVoiceMemo();
}

uint64_t SFIsePub()
{
  return _SFIsePub();
}

uint64_t SFIsiCloudFamilyLink()
{
  return _SFIsiCloudFamilyLink();
}

uint64_t SFLocalizedNameForBluetoothProductID()
{
  return _SFLocalizedNameForBluetoothProductID();
}

uint64_t SFLocalizedStringEx()
{
  return _SFLocalizedStringEx();
}

uint64_t SFLocalizedStringForKey()
{
  return _SFLocalizedStringForKey();
}

uint64_t SFLocalizedStringForKeyInStringsFileNamed()
{
  return _SFLocalizedStringForKeyInStringsFileNamed();
}

uint64_t SFLostMode()
{
  return _SFLostMode();
}

uint64_t SFMainQueue()
{
  return _SFMainQueue();
}

uint64_t SFMetricsLog()
{
  return _SFMetricsLog();
}

uint64_t SFMetricsLogUnexpectedEvent()
{
  return _SFMetricsLogUnexpectedEvent();
}

uint64_t SFMinorWatchHardwareVersion()
{
  return _SFMinorWatchHardwareVersion();
}

uint64_t SFNodeAddBonjourProtocol()
{
  return _SFNodeAddBonjourProtocol();
}

uint64_t SFNodeAddDomain()
{
  return _SFNodeAddDomain();
}

uint64_t SFNodeAddKind()
{
  return _SFNodeAddKind();
}

uint64_t SFNodeAddWorkgroup()
{
  return _SFNodeAddWorkgroup();
}

uint64_t SFNodeCopyAppleID()
{
  return _SFNodeCopyAppleID();
}

uint64_t SFNodeCopyBonjourProtocols()
{
  return _SFNodeCopyBonjourProtocols();
}

uint64_t SFNodeCopyColor()
{
  return _SFNodeCopyColor();
}

uint64_t SFNodeCopyComputerName()
{
  return _SFNodeCopyComputerName();
}

uint64_t SFNodeCopyContactIdentifier()
{
  return _SFNodeCopyContactIdentifier();
}

uint64_t SFNodeCopyContactIdentifiers()
{
  return _SFNodeCopyContactIdentifiers();
}

uint64_t SFNodeCopyDisplayName()
{
  return _SFNodeCopyDisplayName();
}

uint64_t SFNodeCopyDomain()
{
  return _SFNodeCopyDomain();
}

uint64_t SFNodeCopyDomains()
{
  return _SFNodeCopyDomains();
}

uint64_t SFNodeCopyEmailHash()
{
  return _SFNodeCopyEmailHash();
}

uint64_t SFNodeCopyFirstName()
{
  return _SFNodeCopyFirstName();
}

uint64_t SFNodeCopyFlags()
{
  return _SFNodeCopyFlags();
}

uint64_t SFNodeCopyIDSDeviceIdentifier()
{
  return _SFNodeCopyIDSDeviceIdentifier();
}

uint64_t SFNodeCopyIconData()
{
  return _SFNodeCopyIconData();
}

uint64_t SFNodeCopyIconHash()
{
  return _SFNodeCopyIconHash();
}

uint64_t SFNodeCopyKinds()
{
  return _SFNodeCopyKinds();
}

uint64_t SFNodeCopyLastName()
{
  return _SFNodeCopyLastName();
}

uint64_t SFNodeCopyMediaCapabilities()
{
  return _SFNodeCopyMediaCapabilities();
}

uint64_t SFNodeCopyModel()
{
  return _SFNodeCopyModel();
}

uint64_t SFNodeCopyModelIdentifier()
{
  return _SFNodeCopyModelIdentifier();
}

uint64_t SFNodeCopyMountPoint()
{
  return _SFNodeCopyMountPoint();
}

uint64_t SFNodeCopyNetbiosName()
{
  return _SFNodeCopyNetbiosName();
}

uint64_t SFNodeCopyPhoneHash()
{
  return _SFNodeCopyPhoneHash();
}

uint64_t SFNodeCopyProtocols()
{
  return _SFNodeCopyProtocols();
}

uint64_t SFNodeCopyRangingData()
{
  return _SFNodeCopyRangingData();
}

uint64_t SFNodeCopyRapportFlags()
{
  return _SFNodeCopyRapportFlags();
}

uint64_t SFNodeCopyRealName()
{
  return _SFNodeCopyRealName();
}

uint64_t SFNodeCopySecondaryName()
{
  return _SFNodeCopySecondaryName();
}

uint64_t SFNodeCopyServiceName()
{
  return _SFNodeCopyServiceName();
}

uint64_t SFNodeCopySiblingNodes()
{
  return _SFNodeCopySiblingNodes();
}

uint64_t SFNodeCopyTransportBundleID()
{
  return _SFNodeCopyTransportBundleID();
}

uint64_t SFNodeCopyURL()
{
  return _SFNodeCopyURL();
}

uint64_t SFNodeCopyUserName()
{
  return _SFNodeCopyUserName();
}

uint64_t SFNodeCopyWorkgroup()
{
  return _SFNodeCopyWorkgroup();
}

uint64_t SFNodeCopyWorkgroups()
{
  return _SFNodeCopyWorkgroups();
}

uint64_t SFNodeCreate()
{
  return _SFNodeCreate();
}

uint64_t SFNodeCreateCopy()
{
  return _SFNodeCreateCopy();
}

uint64_t SFNodeGetDisplayName()
{
  return _SFNodeGetDisplayName();
}

uint64_t SFNodeGetSupportedMedia()
{
  return _SFNodeGetSupportedMedia();
}

uint64_t SFNodeGetTypeID()
{
  return _SFNodeGetTypeID();
}

uint64_t SFNodeIsContainer()
{
  return _SFNodeIsContainer();
}

uint64_t SFNodeIsMounted()
{
  return _SFNodeIsMounted();
}

uint64_t SFNodeIsNeighborhood()
{
  return _SFNodeIsNeighborhood();
}

uint64_t SFNodeIsRoot()
{
  return _SFNodeIsRoot();
}

uint64_t SFNodeIsServer()
{
  return _SFNodeIsServer();
}

uint64_t SFNodeIsSharePoint()
{
  return _SFNodeIsSharePoint();
}

uint64_t SFNodeRemoveBonjourProtocol()
{
  return _SFNodeRemoveBonjourProtocol();
}

uint64_t SFNodeRemoveKind()
{
  return _SFNodeRemoveKind();
}

uint64_t SFNodeSetAppleID()
{
  return _SFNodeSetAppleID();
}

uint64_t SFNodeSetBonjourProtocols()
{
  return _SFNodeSetBonjourProtocols();
}

uint64_t SFNodeSetColor()
{
  return _SFNodeSetColor();
}

uint64_t SFNodeSetComputerName()
{
  return _SFNodeSetComputerName();
}

uint64_t SFNodeSetConnectionState()
{
  return _SFNodeSetConnectionState();
}

uint64_t SFNodeSetContactIdentifier()
{
  return _SFNodeSetContactIdentifier();
}

uint64_t SFNodeSetContactIdentifiers()
{
  return _SFNodeSetContactIdentifiers();
}

uint64_t SFNodeSetDisplayName()
{
  return _SFNodeSetDisplayName();
}

uint64_t SFNodeSetDomain()
{
  return _SFNodeSetDomain();
}

uint64_t SFNodeSetEmailHash()
{
  return _SFNodeSetEmailHash();
}

uint64_t SFNodeSetFirstName()
{
  return _SFNodeSetFirstName();
}

uint64_t SFNodeSetFlags()
{
  return _SFNodeSetFlags();
}

uint64_t SFNodeSetHostName()
{
  return _SFNodeSetHostName();
}

uint64_t SFNodeSetIDSDeviceIdentifier()
{
  return _SFNodeSetIDSDeviceIdentifier();
}

uint64_t SFNodeSetIconData()
{
  return _SFNodeSetIconData();
}

uint64_t SFNodeSetIconHash()
{
  return _SFNodeSetIconHash();
}

uint64_t SFNodeSetLastName()
{
  return _SFNodeSetLastName();
}

uint64_t SFNodeSetMediaCapabilities()
{
  return _SFNodeSetMediaCapabilities();
}

uint64_t SFNodeSetModel()
{
  return _SFNodeSetModel();
}

uint64_t SFNodeSetMountPoint()
{
  return _SFNodeSetMountPoint();
}

uint64_t SFNodeSetNetbiosName()
{
  return _SFNodeSetNetbiosName();
}

uint64_t SFNodeSetNickName()
{
  return _SFNodeSetNickName();
}

uint64_t SFNodeSetPath()
{
  return _SFNodeSetPath();
}

uint64_t SFNodeSetPhoneHash()
{
  return _SFNodeSetPhoneHash();
}

uint64_t SFNodeSetPortNumber()
{
  return _SFNodeSetPortNumber();
}

uint64_t SFNodeSetRangingData()
{
  return _SFNodeSetRangingData();
}

uint64_t SFNodeSetRapportFlags()
{
  return _SFNodeSetRapportFlags();
}

uint64_t SFNodeSetRealName()
{
  return _SFNodeSetRealName();
}

uint64_t SFNodeSetSecondaryName()
{
  return _SFNodeSetSecondaryName();
}

uint64_t SFNodeSetSelectionReason()
{
  return _SFNodeSetSelectionReason();
}

uint64_t SFNodeSetServiceName()
{
  return _SFNodeSetServiceName();
}

uint64_t SFNodeSetSiblingNodes()
{
  return _SFNodeSetSiblingNodes();
}

uint64_t SFNodeSetSupportedMedia()
{
  return _SFNodeSetSupportedMedia();
}

uint64_t SFNodeSetTransportBundleID()
{
  return _SFNodeSetTransportBundleID();
}

uint64_t SFNodeSetURL()
{
  return _SFNodeSetURL();
}

uint64_t SFNodeSetUserName()
{
  return _SFNodeSetUserName();
}

uint64_t SFNodeSetWorkgroup()
{
  return _SFNodeSetWorkgroup();
}

uint64_t SFNodeSetWorkgroups()
{
  return _SFNodeSetWorkgroups();
}

uint64_t SFNormalizeEmailAddress()
{
  return _SFNormalizeEmailAddress();
}

uint64_t SFNormalizePhoneNumber()
{
  return _SFNormalizePhoneNumber();
}

uint64_t SFPlaygroundsAppAvailable()
{
  return _SFPlaygroundsAppAvailable();
}

uint64_t SFPowerLogEvent()
{
  return _SFPowerLogEvent();
}

uint64_t SFPowerLogTimeSensitiveEvent()
{
  return _SFPowerLogTimeSensitiveEvent();
}

uint64_t SFRTIDataPayloadForData()
{
  return _SFRTIDataPayloadForData();
}

uint64_t SFRemoteDeviceCanConnectOn5GHz()
{
  return _SFRemoteDeviceCanConnectOn5GHz();
}

uint64_t SFRemovableSystemAppAvailable()
{
  return _SFRemovableSystemAppAvailable();
}

uint64_t SFScaleAndRotateImage()
{
  return _SFScaleAndRotateImage();
}

uint64_t SFSharablePasswordAirDropURLEncryptedString()
{
  return _SFSharablePasswordAirDropURLEncryptedString();
}

uint64_t SFSharablePasswordAirDropUnencryptedURL()
{
  return _SFSharablePasswordAirDropUnencryptedURL();
}

uint64_t SFSharablePasswordForEncryptedAirDropURL()
{
  return _SFSharablePasswordForEncryptedAirDropURL();
}

uint64_t SFSharablePasswordForURL()
{
  return _SFSharablePasswordForURL();
}

uint64_t SFSharablePasswordForUnencryptedAirDropURL()
{
  return _SFSharablePasswordForUnencryptedAirDropURL();
}

uint64_t SFShareablePasswordForSSID()
{
  return _SFShareablePasswordForSSID();
}

uint64_t SFSharediCloudDocumentsLinkToAppName()
{
  return _SFSharediCloudDocumentsLinkToAppName();
}

uint64_t SFSharediCloudDocumentsLinkToFileName()
{
  return _SFSharediCloudDocumentsLinkToFileName();
}

uint64_t SFShortHashArrayDescription()
{
  return _SFShortHashArrayDescription();
}

uint64_t SFShouldShowRepairProxCard()
{
  return _SFShouldShowRepairProxCard();
}

uint64_t SFStoreDemoMode()
{
  return _SFStoreDemoMode();
}

uint64_t SFStringFromTimeInterval()
{
  return _SFStringFromTimeInterval();
}

uint64_t SFStringIsJSON()
{
  return _SFStringIsJSON();
}

uint64_t SFSuggestedAirDropThumbnailSize()
{
  return _SFSuggestedAirDropThumbnailSize();
}

uint64_t SFTestFlagsFromString()
{
  return _SFTestFlagsFromString();
}

uint64_t SFTextInputDataLogString()
{
  return _SFTextInputDataLogString();
}

uint64_t SFTruncateAirDropFilenameForUI()
{
  return _SFTruncateAirDropFilenameForUI();
}

uint64_t SFTruncateAirDropSenderNameForUI()
{
  return _SFTruncateAirDropSenderNameForUI();
}

uint64_t SFUpTicksDiffFromNowToString()
{
  return _SFUpTicksDiffFromNowToString();
}

uint64_t SFVoiceMemosAppAvailable()
{
  return _SFVoiceMemosAppAvailable();
}

uint64_t SFWalletAppAvailable()
{
  return _SFWalletAppAvailable();
}

uint64_t SFiTunesStoreLinkType()
{
  return _SFiTunesStoreLinkType();
}

uint64_t SNScanF()
{
  return _SNScanF();
}

uint64_t SecCertificateCopyCommonNames()
{
  return _SecCertificateCopyCommonNames();
}

SecKeyRef SecCertificateCopyKey(SecCertificateRef certificate)
{
  return _SecCertificateCopyKey(certificate);
}

uint64_t SecGenerateSelfSignedCertificate()
{
  return _SecGenerateSelfSignedCertificate();
}

OSStatus SecIdentityCopyCertificate(SecIdentityRef identityRef, SecCertificateRef *certificateRef)
{
  return _SecIdentityCopyCertificate(identityRef, certificateRef);
}

OSStatus SecIdentityCopyPrivateKey(SecIdentityRef identityRef, SecKeyRef *privateKeyRef)
{
  return _SecIdentityCopyPrivateKey(identityRef, privateKeyRef);
}

uint64_t SecIdentityCreate()
{
  return _SecIdentityCreate();
}

OSStatus SecItemAdd(CFDictionaryRef attributes, CFTypeRef *result)
{
  return _SecItemAdd(attributes, result);
}

OSStatus SecItemCopyMatching(CFDictionaryRef query, CFTypeRef *result)
{
  return _SecItemCopyMatching(query, result);
}

OSStatus SecItemDelete(CFDictionaryRef query)
{
  return _SecItemDelete(query);
}

OSStatus SecItemUpdate(CFDictionaryRef query, CFDictionaryRef attributesToUpdate)
{
  return _SecItemUpdate(query, attributesToUpdate);
}

SecKeyRef SecKeyCopyPublicKey(SecKeyRef key)
{
  return _SecKeyCopyPublicKey(key);
}

uint64_t SecKeyCopySubjectPublicKeyInfo()
{
  return _SecKeyCopySubjectPublicKeyInfo();
}

SecKeyRef SecKeyCreateRandomKey(CFDictionaryRef parameters, CFErrorRef *error)
{
  return _SecKeyCreateRandomKey(parameters, error);
}

uint64_t SecPasswordGenerate()
{
  return _SecPasswordGenerate();
}

int SecRandomCopyBytes(SecRandomRef rnd, size_t count, void *bytes)
{
  return _SecRandomCopyBytes(rnd, count, bytes);
}

CFTypeRef SecTaskCopyValueForEntitlement(SecTaskRef task, CFStringRef entitlement, CFErrorRef *error)
{
  return _SecTaskCopyValueForEntitlement(task, entitlement, error);
}

SecTaskRef SecTaskCreateWithAuditToken(CFAllocatorRef allocator, audit_token_t *token)
{
  return _SecTaskCreateWithAuditToken(allocator, token);
}

BOOL SecTrustEvaluateWithError(SecTrustRef trust, CFErrorRef *error)
{
  return _SecTrustEvaluateWithError(trust, error);
}

SecCertificateRef SecTrustGetCertificateAtIndex(SecTrustRef trust, CFIndex ix)
{
  return _SecTrustGetCertificateAtIndex(trust, ix);
}

CFIndex SecTrustGetCertificateCount(SecTrustRef trust)
{
  return _SecTrustGetCertificateCount(trust);
}

OSStatus SecTrustGetTrustResult(SecTrustRef trust, SecTrustResultType *result)
{
  return _SecTrustGetTrustResult(trust, result);
}

uint64_t SecondsToUpTicks()
{
  return _SecondsToUpTicks();
}

uint16_t TXTRecordGetCount(uint16_t txtLen, const void *txtRecord)
{
  return _TXTRecordGetCount(txtLen, txtRecord);
}

DNSServiceErrorType TXTRecordGetItemAtIndex(uint16_t txtLen, const void *txtRecord, uint16_t itemIndex, uint16_t keyBufLen, char *key, uint8_t *valueLen, const void **value)
{
  return _TXTRecordGetItemAtIndex(txtLen, txtRecord, itemIndex, keyBufLen, key, valueLen, value);
}

const void *__cdecl TXTRecordGetValuePtr(uint16_t txtLen, const void *txtRecord, const char *key, uint8_t *valueLen)
{
  return _TXTRecordGetValuePtr(txtLen, txtRecord, key, valueLen);
}

uint64_t TextSep()
{
  return _TextSep();
}

NSData *__cdecl UIImageJPEGRepresentation(UIImage *image, CGFloat compressionQuality)
{
  return _UIImageJPEGRepresentation(image, compressionQuality);
}

Boolean UTTypeConformsTo(CFStringRef inUTI, CFStringRef inConformsToUTI)
{
  return _UTTypeConformsTo(inUTI, inConformsToUTI);
}

CFDictionaryRef UTTypeCopyDeclaration(CFStringRef inUTI)
{
  return _UTTypeCopyDeclaration(inUTI);
}

CFStringRef UTTypeCopyDescription(CFStringRef inUTI)
{
  return _UTTypeCopyDescription(inUTI);
}

CFStringRef UTTypeCopyPreferredTagWithClass(CFStringRef inUTI, CFStringRef inTagClass)
{
  return _UTTypeCopyPreferredTagWithClass(inUTI, inTagClass);
}

CFStringRef UTTypeCreatePreferredIdentifierForTag(CFStringRef inTagClass, CFStringRef inTag, CFStringRef inConformingToUTI)
{
  return _UTTypeCreatePreferredIdentifierForTag(inTagClass, inTag, inConformingToUTI);
}

uint64_t UpTicksToMicroseconds()
{
  return _UpTicksToMicroseconds();
}

uint64_t UpTicksToMilliseconds()
{
  return _UpTicksToMilliseconds();
}

uint64_t UpTicksToSeconds()
{
  return _UpTicksToSeconds();
}

uint64_t UpTicksToSecondsF()
{
  return _UpTicksToSecondsF();
}

uint64_t WPAHashPSK()
{
  return _WPAHashPSK();
}

uint64_t WiFiCopyCurrentNetworkInfo()
{
  return _WiFiCopyCurrentNetworkInfo();
}

uint64_t WiFiCopyNetworkInfo()
{
  return _WiFiCopyNetworkInfo();
}

uint64_t WiFiDeviceClientCopyHostedNetworks()
{
  return _WiFiDeviceClientCopyHostedNetworks();
}

uint64_t WiFiDeviceClientCopyInterfaceStateInfo()
{
  return _WiFiDeviceClientCopyInterfaceStateInfo();
}

uint64_t WiFiDeviceClientCopyProperty()
{
  return _WiFiDeviceClientCopyProperty();
}

uint64_t WiFiDeviceClientGetInterfaceRoleIndex()
{
  return _WiFiDeviceClientGetInterfaceRoleIndex();
}

uint64_t WiFiDeviceClientIsInterfaceAWDL()
{
  return _WiFiDeviceClientIsInterfaceAWDL();
}

uint64_t WiFiDeviceClientRegister24GHzNetworkInCriticalStateCallback()
{
  return _WiFiDeviceClientRegister24GHzNetworkInCriticalStateCallback();
}

uint64_t WiFiDeviceClientRegisterHostApStateChangedCallback()
{
  return _WiFiDeviceClientRegisterHostApStateChangedCallback();
}

uint64_t WiFiDeviceClientRegisterPowerCallback()
{
  return _WiFiDeviceClientRegisterPowerCallback();
}

uint64_t WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback()
{
  return _WiFiDeviceClientRegisterVirtualInterfaceStateChangeCallback();
}

uint64_t WiFiDeviceClientStartNetwork()
{
  return _WiFiDeviceClientStartNetwork();
}

uint64_t WiFiDeviceClientStopNetwork()
{
  return _WiFiDeviceClientStopNetwork();
}

uint64_t WiFiManagerClientCopyDevices()
{
  return _WiFiManagerClientCopyDevices();
}

uint64_t WiFiManagerClientCopyFamilyHotspotPreferences()
{
  return _WiFiManagerClientCopyFamilyHotspotPreferences();
}

uint64_t WiFiManagerClientCopyInterfaces()
{
  return _WiFiManagerClientCopyInterfaces();
}

uint64_t WiFiManagerClientCopyMisPassword()
{
  return _WiFiManagerClientCopyMisPassword();
}

uint64_t WiFiManagerClientCopyNetworks()
{
  return _WiFiManagerClientCopyNetworks();
}

uint64_t WiFiManagerClientCreate()
{
  return _WiFiManagerClientCreate();
}

uint64_t WiFiManagerClientGetAutoInstantHotspotMode()
{
  return _WiFiManagerClientGetAutoInstantHotspotMode();
}

uint64_t WiFiManagerClientGetMISDiscoveryState()
{
  return _WiFiManagerClientGetMISDiscoveryState();
}

uint64_t WiFiManagerClientIsP2PAllowed()
{
  return _WiFiManagerClientIsP2PAllowed();
}

uint64_t WiFiManagerClientIsTetheringSupported()
{
  return _WiFiManagerClientIsTetheringSupported();
}

uint64_t WiFiManagerClientRegisterDeviceAttachmentCallback()
{
  return _WiFiManagerClientRegisterDeviceAttachmentCallback();
}

uint64_t WiFiManagerClientRegisterVirtInterfaceChangeCallback()
{
  return _WiFiManagerClientRegisterVirtInterfaceChangeCallback();
}

uint64_t WiFiManagerClientScheduleWithRunLoop()
{
  return _WiFiManagerClientScheduleWithRunLoop();
}

uint64_t WiFiManagerClientSetMISDiscoveryStateExt()
{
  return _WiFiManagerClientSetMISDiscoveryStateExt();
}

uint64_t WiFiManagerClientSetMISState()
{
  return _WiFiManagerClientSetMISState();
}

uint64_t WiFiManagerClientSetMisPassword()
{
  return _WiFiManagerClientSetMisPassword();
}

uint64_t WiFiManagerClientSetPower()
{
  return _WiFiManagerClientSetPower();
}

uint64_t WiFiNetworkGetChannel()
{
  return _WiFiNetworkGetChannel();
}

uint64_t WiFiNetworkGetProperty()
{
  return _WiFiNetworkGetProperty();
}

uint64_t WiFiNetworkGetSSID()
{
  return _WiFiNetworkGetSSID();
}

uint64_t WiFiNetworkGetShareMode()
{
  return _WiFiNetworkGetShareMode();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFHTTPServerConnectionCopyProperty()
{
  return __CFHTTPServerConnectionCopyProperty();
}

uint64_t _CFHTTPServerConnectionGetTypeID()
{
  return __CFHTTPServerConnectionGetTypeID();
}

uint64_t _CFHTTPServerConnectionInvalidate()
{
  return __CFHTTPServerConnectionInvalidate();
}

uint64_t _CFHTTPServerConnectionSetClient()
{
  return __CFHTTPServerConnectionSetClient();
}

uint64_t _CFHTTPServerConnectionSetProperty()
{
  return __CFHTTPServerConnectionSetProperty();
}

uint64_t _CFHTTPServerCopyProperty()
{
  return __CFHTTPServerCopyProperty();
}

uint64_t _CFHTTPServerCreateSelfSignedIdentity()
{
  return __CFHTTPServerCreateSelfSignedIdentity();
}

uint64_t _CFHTTPServerCreateService()
{
  return __CFHTTPServerCreateService();
}

uint64_t _CFHTTPServerInvalidate()
{
  return __CFHTTPServerInvalidate();
}

uint64_t _CFHTTPServerRequestCopyBodyStream()
{
  return __CFHTTPServerRequestCopyBodyStream();
}

uint64_t _CFHTTPServerRequestCopyProperty()
{
  return __CFHTTPServerRequestCopyProperty();
}

uint64_t _CFHTTPServerRequestCreateResponseMessage()
{
  return __CFHTTPServerRequestCreateResponseMessage();
}

uint64_t _CFHTTPServerResponseCopyProperty()
{
  return __CFHTTPServerResponseCopyProperty();
}

uint64_t _CFHTTPServerResponseCreateWithData()
{
  return __CFHTTPServerResponseCreateWithData();
}

uint64_t _CFHTTPServerResponseEnqueue()
{
  return __CFHTTPServerResponseEnqueue();
}

uint64_t _CFHTTPServerScheduleWithRunLoopAndMode()
{
  return __CFHTTPServerScheduleWithRunLoopAndMode();
}

uint64_t _CFHTTPServerSetProperty()
{
  return __CFHTTPServerSetProperty();
}

uint64_t _CFNetServiceCreateFromServiceName()
{
  return __CFNetServiceCreateFromServiceName();
}

uint64_t _CFNetServiceCreateFromURL()
{
  return __CFNetServiceCreateFromURL();
}

uint64_t _CFURLGetVolumePropertyFlags()
{
  return __CFURLGetVolumePropertyFlags();
}

uint64_t _CFURLRequestSetShouldPipelineNonIdempotentHTTP()
{
  return __CFURLRequestSetShouldPipelineNonIdempotentHTTP();
}

uint64_t _CFURLRequestSetShouldSkipPipelineProbe()
{
  return __CFURLRequestSetShouldSkipPipelineProbe();
}

uint64_t _CFXPCCreateCFObjectFromXPCObject()
{
  return __CFXPCCreateCFObjectFromXPCObject();
}

uint64_t _CFXPCCreateXPCObjectFromCFObject()
{
  return __CFXPCCreateXPCObjectFromCFObject();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return __CTServerConnectionCreateOnTargetQueue();
}

uint64_t _CTServerConnectionGetCellularDataSettings()
{
  return __CTServerConnectionGetCellularDataSettings();
}

uint64_t _IDSCopyIDForEmailAddress()
{
  return __IDSCopyIDForEmailAddress();
}

uint64_t _IDSCopyIDForPhoneNumberWithOptions()
{
  return __IDSCopyIDForPhoneNumberWithOptions();
}

uint64_t _LSCreateDeviceTypeIdentifierWithModelCode()
{
  return __LSCreateDeviceTypeIdentifierWithModelCode();
}

uint64_t _LogCategory_Initialize()
{
  return __LogCategory_Initialize();
}

uint64_t _NETRBClientAddLowLatencyFlow()
{
  return __NETRBClientAddLowLatencyFlow();
}

uint64_t _NETRBClientCreate()
{
  return __NETRBClientCreate();
}

uint64_t _NETRBClientDestroy()
{
  return __NETRBClientDestroy();
}

uint64_t _NETRBClientRemoveLowLatencyFlow()
{
  return __NETRBClientRemoveLowLatencyFlow();
}

uint64_t _NETRBClientSetGlobalServiceState()
{
  return __NETRBClientSetGlobalServiceState();
}

uint64_t _NETRBClientStopService()
{
  return __NETRBClientStopService();
}

uint64_t _SFNodeCreateWithXPCObject()
{
  return __SFNodeCreateWithXPCObject();
}

uint64_t _SFNodeXPCObjectCreate()
{
  return __SFNodeXPCObjectCreate();
}

uint64_t _UIActivityDefaultOpenApplicationLaunchServiceOptions()
{
  return __UIActivityDefaultOpenApplicationLaunchServiceOptions();
}

uint64_t _UIActivityOpenInApplicationTypeForActivityType()
{
  return __UIActivityOpenInApplicationTypeForActivityType();
}

uint64_t _UIApplicationCanOpenInPlaceByCopyingFromOriginalFile()
{
  return __UIApplicationCanOpenInPlaceByCopyingFromOriginalFile();
}

uint64_t _UIApplicationCanOpenInPlaceByReferenceOriginalFile()
{
  return __UIApplicationCanOpenInPlaceByReferenceOriginalFile();
}

uint64_t _UIEnumerateApplicationsInPreferredOrderForOpeningDocument()
{
  return __UIEnumerateApplicationsInPreferredOrderForOpeningDocument();
}

uint64_t _UIIsIWorkArchiveURL()
{
  return __UIIsIWorkArchiveURL();
}

uint64_t _UISUIActivityRealActivityTypeForOpeningDocumentWithApplicationID()
{
  return __UISUIActivityRealActivityTypeForOpeningDocumentWithApplicationID();
}

uint64_t _UISUIActivitySpecificMetadataForOpeningDocumentWithApplicationID()
{
  return __UISUIActivitySpecificMetadataForOpeningDocumentWithApplicationID();
}

uint64_t _UISecureDecodeExtensionItemsWithKey()
{
  return __UISecureDecodeExtensionItemsWithKey();
}

uint64_t _UISecureStandardPropertyListClasses()
{
  return __UISecureStandardPropertyListClasses();
}

uint64_t _UIStringByDeletingArchiveExtensions()
{
  return __UIStringByDeletingArchiveExtensions();
}

uint64_t _UTTypeCreateSuggestedFilename()
{
  return __UTTypeCreateSuggestedFilename();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

int *__error(void)
{
  return ___error();
}

double __exp10(double a1)
{
  return ___exp10(a1);
}

int __maskrune(__darwin_ct_rune_t a1, unint64_t a2)
{
  return ___maskrune(a1, a2);
}

uint64_t __strlcpy_chk()
{
  return ___strlcpy_chk();
}

{
}

{
}

os_activity_t _os_activity_create(void *dso, const char *description, os_activity_t activity, os_activity_flag_t flags)
{
  return __os_activity_create(dso, description, activity, flags);
}

uint64_t _os_feature_enabled_impl()
{
  return __os_feature_enabled_impl();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _set_user_dir_suffix()
{
  return __set_user_dir_suffix();
}

uint64_t _sl_dlopen()
{
  return __sl_dlopen();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

uint64_t airdrop_log()
{
  return _airdrop_log();
}

uint64_t airdrop_nw_log()
{
  return _airdrop_nw_log();
}

uint64_t airdrop_ui_log()
{
  return _airdrop_ui_log();
}

uint64_t aks_create_bag()
{
  return _aks_create_bag();
}

uint64_t aks_create_escrow_blob()
{
  return _aks_create_escrow_blob();
}

uint64_t aks_create_signing_key()
{
  return _aks_create_signing_key();
}

uint64_t aks_create_signing_key_with_params()
{
  return _aks_create_signing_key_with_params();
}

uint64_t aks_free_escrow_blob()
{
  return _aks_free_escrow_blob();
}

uint64_t aks_get_bag_uuid()
{
  return _aks_get_bag_uuid();
}

uint64_t aks_get_device_state()
{
  return _aks_get_device_state();
}

uint64_t aks_get_lock_state()
{
  return _aks_get_lock_state();
}

uint64_t aks_lock_bag()
{
  return _aks_lock_bag();
}

uint64_t aks_params_create()
{
  return _aks_params_create();
}

uint64_t aks_params_get_der()
{
  return _aks_params_get_der();
}

uint64_t aks_params_set_data()
{
  return _aks_params_set_data();
}

uint64_t aks_params_set_number()
{
  return _aks_params_set_number();
}

uint64_t aks_remote_peer_confirm()
{
  return _aks_remote_peer_confirm();
}

uint64_t aks_remote_peer_drop()
{
  return _aks_remote_peer_drop();
}

uint64_t aks_remote_peer_get_state()
{
  return _aks_remote_peer_get_state();
}

uint64_t aks_remote_peer_setup()
{
  return _aks_remote_peer_setup();
}

uint64_t aks_remote_session()
{
  return _aks_remote_session();
}

uint64_t aks_remote_session_reset()
{
  return _aks_remote_session_reset();
}

uint64_t aks_remote_session_reset_all()
{
  return _aks_remote_session_reset_all();
}

uint64_t aks_remote_session_step()
{
  return _aks_remote_session_step();
}

uint64_t aks_remote_session_token()
{
  return _aks_remote_session_token();
}

uint64_t aks_reset_session()
{
  return _aks_reset_session();
}

uint64_t aks_sign_signing_key()
{
  return _aks_sign_signing_key();
}

uint64_t aks_validate_local_key()
{
  return _aks_validate_local_key();
}

uint32_t arc4random(void)
{
  return _arc4random();
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return _arc4random_uniform(__upper_bound);
}

uint64_t asset_log()
{
  return _asset_log();
}

uint64_t authentications_log()
{
  return _authentications_log();
}

uint64_t auto_unlock_log()
{
  return _auto_unlock_log();
}

uint64_t b389_log()
{
  return _b389_log();
}

uint64_t browser_log()
{
  return _browser_log();
}

void bzero(void *a1, size_t a2)
{
}

void *__cdecl calloc(size_t __count, size_t __size)
{
  return _calloc(__count, __size);
}

uint64_t cc_clear()
{
  return _cc_clear();
}

uint64_t ccaes_ecb_decrypt_mode()
{
  return _ccaes_ecb_decrypt_mode();
}

uint64_t ccaes_ecb_encrypt_mode()
{
  return _ccaes_ecb_encrypt_mode();
}

uint64_t ccaes_gcm_decrypt_mode()
{
  return _ccaes_gcm_decrypt_mode();
}

uint64_t ccaes_gcm_encrypt_mode()
{
  return _ccaes_gcm_encrypt_mode();
}

uint64_t ccchacha20()
{
  return _ccchacha20();
}

uint64_t cccurve25519()
{
  return _cccurve25519();
}

uint64_t cccurve25519_make_pub()
{
  return _cccurve25519_make_pub();
}

uint64_t ccecb_init()
{
  return _ccecb_init();
}

uint64_t ccgcm_one_shot()
{
  return _ccgcm_one_shot();
}

uint64_t ccwrap_auth_decrypt()
{
  return _ccwrap_auth_decrypt();
}

uint64_t ccwrap_auth_encrypt()
{
  return _ccwrap_auth_encrypt();
}

uint64_t ccwrap_unwrapped_size()
{
  return _ccwrap_unwrapped_size();
}

uint64_t ccwrap_wrapped_size()
{
  return _ccwrap_wrapped_size();
}

uint64_t chacha20_poly1305_decrypt_all_96x32()
{
  return _chacha20_poly1305_decrypt_all_96x32();
}

uint64_t chacha20_poly1305_encrypt_all_96x32()
{
  return _chacha20_poly1305_encrypt_all_96x32();
}

uint64_t charging_log()
{
  return _charging_log();
}

__uint64_t clock_gettime_nsec_np(clockid_t __clock_id)
{
  return _clock_gettime_nsec_np(__clock_id);
}

int close(int a1)
{
  return _close(a1);
}

int compress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
{
  return _compress(dest, destLen, source, sourceLen);
}

uLong compressBound(uLong sourceLen)
{
  return _compressBound(sourceLen);
}

size_t confstr(int a1, char *a2, size_t a3)
{
  return _confstr(a1, a2, a3);
}

uint64_t daemon_log()
{
  return _daemon_log();
}

void dispatch_activate(dispatch_object_t object)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_block_cancel(dispatch_block_t block)
{
}

dispatch_block_t dispatch_block_create(dispatch_block_flags_t flags, dispatch_block_t block)
{
  return _dispatch_block_create(flags, block);
}

dispatch_queue_t dispatch_get_current_queue(void)
{
  return _dispatch_get_current_queue();
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

void dispatch_group_enter(dispatch_group_t group)
{
}

void dispatch_group_leave(dispatch_group_t group)
{
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_initially_inactive(dispatch_queue_attr_t attr)
{
  return _dispatch_queue_attr_make_initially_inactive(attr);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return _dispatch_queue_attr_make_with_qos_class(attr, qos_class, relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

void *__cdecl dispatch_queue_get_specific(dispatch_queue_t queue, const void *key)
{
  return _dispatch_queue_get_specific(queue, key);
}

void dispatch_queue_set_specific(dispatch_queue_t queue, const void *key, void *context, dispatch_function_t destructor)
{
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return _dispatch_set_qos_class_fallback();
}

void dispatch_source_cancel(dispatch_source_t source)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return _dispatch_source_create(type, handle, mask, queue);
}

void dispatch_source_set_cancel_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return _dispatch_source_testcancel(source);
}

void dispatch_suspend(dispatch_object_t object)
{
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

char *dlerror(void)
{
  return _dlerror();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return _dlopen(__path, __mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return _dlsym(__handle, __symbol);
}

uint64_t dyld_get_active_platform()
{
  return _dyld_get_active_platform();
}

char *__cdecl ether_ntoa(const ether_addr *a1)
{
  return _ether_ntoa(a1);
}

void exit(int a1)
{
}

long double exp(long double __x)
{
  return _exp(__x);
}

int ffsctl(int a1, unint64_t a2, void *a3, unsigned int a4)
{
  return _ffsctl(a1, a2, a3, a4);
}

long double fmod(long double __x, long double __y)
{
  return _fmod(__x, __y);
}

void free(void *a1)
{
}

void freeifaddrs(ifaddrs *a1)
{
}

int fsctl(const char *a1, unint64_t a2, void *a3, unsigned int a4)
{
  return _fsctl(a1, a2, a3, a4);
}

int getifaddrs(ifaddrs **a1)
{
  return _getifaddrs(a1);
}

pid_t getpid(void)
{
  return _getpid();
}

int gettimeofday(timeval *a1, void *a2)
{
  return _gettimeofday(a1, a2);
}

uid_t getuid(void)
{
  return _getuid();
}

uint64_t handoff_log()
{
  return _handoff_log();
}

char *__cdecl if_indextoname(unsigned int a1, char *a2)
{
  return _if_indextoname(a1, a2);
}

unsigned int if_nametoindex(const char *a1)
{
  return _if_nametoindex(a1);
}

char *__cdecl inet_ntoa(in_addr a1)
{
  return _inet_ntoa(a1);
}

uint64_t kdebug_trace()
{
  return _kdebug_trace();
}

tm *__cdecl localtime_r(const time_t *a1, tm *a2)
{
  return _localtime_r(a1, a2);
}

long double log10(long double __x)
{
  return _log10(__x);
}

uint64_t mach_absolute_time(void)
{
  return _mach_absolute_time();
}

uint64_t mach_continuous_time(void)
{
  return _mach_continuous_time();
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl malloc_type_calloc(size_t count, size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_calloc(count, size, type_id);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return _malloc_type_malloc(size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return _memset(__b, __c, __len);
}

errno_t memset_s(void *__s, rsize_t __smax, int __c, rsize_t __n)
{
  return _memset_s(__s, __smax, __c, __n);
}

int mkdir(const char *a1, mode_t a2)
{
  return _mkdir(a1, a2);
}

uint64_t mobileactivationErrorHasDomainAndErrorCode()
{
  return _mobileactivationErrorHasDomainAndErrorCode();
}

uint32_t notify_cancel(int token)
{
  return _notify_cancel(token);
}

uint32_t notify_get_state(int token, uint64_t *state64)
{
  return _notify_get_state(token, state64);
}

uint32_t notify_post(const char *name)
{
  return _notify_post(name);
}

uint32_t notify_register_check(const char *name, int *out_token)
{
  return _notify_register_check(name, out_token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return _notify_register_dispatch(name, out_token, queue, handler);
}

uint32_t notify_set_state(int token, uint64_t state64)
{
  return _notify_set_state(token, state64);
}

uint64_t nw_agent_change_state()
{
  return _nw_agent_change_state();
}

uint64_t nw_agent_client_copy_browse_descriptor()
{
  return _nw_agent_client_copy_browse_descriptor();
}

uint64_t nw_agent_client_copy_parameters()
{
  return _nw_agent_client_copy_parameters();
}

uint64_t nw_agent_create()
{
  return _nw_agent_create();
}

uint64_t nw_agent_get_uuid()
{
  return _nw_agent_get_uuid();
}

uint64_t nw_agent_set_browse_handlers()
{
  return _nw_agent_set_browse_handlers();
}

uint64_t nw_array_append()
{
  return _nw_array_append();
}

uint64_t nw_array_create()
{
  return _nw_array_create();
}

uint64_t nw_browse_descriptor_get_discover_application_service_endpoints_only()
{
  return _nw_browse_descriptor_get_discover_application_service_endpoints_only();
}

uint64_t nw_browse_descriptor_get_type()
{
  return _nw_browse_descriptor_get_type();
}

nw_parameters_t nw_connection_copy_parameters(nw_connection_t connection)
{
  return _nw_connection_copy_parameters(connection);
}

nw_protocol_metadata_t nw_connection_copy_protocol_metadata(nw_connection_t connection, nw_protocol_definition_t definition)
{
  return _nw_connection_copy_protocol_metadata(connection, definition);
}

uint64_t nw_connection_create_with_connection()
{
  return _nw_connection_create_with_connection();
}

void nw_connection_receive(nw_connection_t connection, uint32_t minimum_incomplete_length, uint32_t maximum_length, nw_connection_receive_completion_t completion)
{
}

void nw_connection_receive_message(nw_connection_t connection, nw_connection_receive_completion_t completion)
{
}

void nw_connection_send(nw_connection_t connection, dispatch_data_t content, nw_content_context_t context, BOOL is_complete, nw_connection_send_completion_t completion)
{
}

uint64_t nw_connection_set_internet_fallback_endpoint()
{
  return _nw_connection_set_internet_fallback_endpoint();
}

uint64_t nw_connection_set_read_close_handler()
{
  return _nw_connection_set_read_close_handler();
}

nw_protocol_metadata_t nw_content_context_copy_protocol_metadata(nw_content_context_t context, nw_protocol_definition_t protocol)
{
  return _nw_content_context_copy_protocol_metadata(context, protocol);
}

nw_content_context_t nw_content_context_create(const char *context_identifier)
{
  return _nw_content_context_create(context_identifier);
}

void nw_content_context_set_metadata_for_protocol(nw_content_context_t context, nw_protocol_metadata_t protocol_metadata)
{
}

nw_txt_record_t nw_endpoint_copy_txt_record(nw_endpoint_t endpoint)
{
  return _nw_endpoint_copy_txt_record(endpoint);
}

uint64_t nw_endpoint_create_application_service()
{
  return _nw_endpoint_create_application_service();
}

uint64_t nw_endpoint_create_application_service_with_alias()
{
  return _nw_endpoint_create_application_service_with_alias();
}

nw_endpoint_t nw_endpoint_create_bonjour_service(const char *name, const char *type, const char *domain)
{
  return _nw_endpoint_create_bonjour_service(name, type, domain);
}

uint64_t nw_endpoint_get_contact_id()
{
  return _nw_endpoint_get_contact_id();
}

uint64_t nw_endpoint_get_device_id()
{
  return _nw_endpoint_get_device_id();
}

uint64_t nw_endpoint_get_device_model()
{
  return _nw_endpoint_get_device_model();
}

uint64_t nw_endpoint_get_device_name()
{
  return _nw_endpoint_get_device_name();
}

uint64_t nw_endpoint_get_service_identifier()
{
  return _nw_endpoint_get_service_identifier();
}

uint64_t nw_endpoint_set_agent_identifier()
{
  return _nw_endpoint_set_agent_identifier();
}

uint64_t nw_endpoint_set_contact_id()
{
  return _nw_endpoint_set_contact_id();
}

uint64_t nw_endpoint_set_device_id()
{
  return _nw_endpoint_set_device_id();
}

uint64_t nw_endpoint_set_device_model()
{
  return _nw_endpoint_set_device_model();
}

uint64_t nw_endpoint_set_device_name()
{
  return _nw_endpoint_set_device_name();
}

uint64_t nw_endpoint_set_public_keys()
{
  return _nw_endpoint_set_public_keys();
}

uint64_t nw_endpoint_set_txt_record()
{
  return _nw_endpoint_set_txt_record();
}

CFErrorRef nw_error_copy_cf_error(nw_error_t error)
{
  return _nw_error_copy_cf_error(error);
}

uint64_t nw_http1_set_idle_timeout()
{
  return _nw_http1_set_idle_timeout();
}

uint64_t nw_http3_create_options()
{
  return _nw_http3_create_options();
}

uint64_t nw_http_create_metadata_for_request()
{
  return _nw_http_create_metadata_for_request();
}

uint64_t nw_http_create_metadata_for_response()
{
  return _nw_http_create_metadata_for_response();
}

uint64_t nw_http_fields_append()
{
  return _nw_http_fields_append();
}

uint64_t nw_http_messaging_create_options()
{
  return _nw_http_messaging_create_options();
}

uint64_t nw_http_metadata_copy_request()
{
  return _nw_http_metadata_copy_request();
}

uint64_t nw_http_metadata_copy_response()
{
  return _nw_http_metadata_copy_response();
}

uint64_t nw_http_metadata_enumerate_headers()
{
  return _nw_http_metadata_enumerate_headers();
}

uint64_t nw_http_request_access_path()
{
  return _nw_http_request_access_path();
}

uint64_t nw_http_request_create()
{
  return _nw_http_request_create();
}

uint64_t nw_http_response_create()
{
  return _nw_http_response_create();
}

uint64_t nw_http_response_create_well_known()
{
  return _nw_http_response_create_well_known();
}

uint64_t nw_http_response_get_status_code()
{
  return _nw_http_response_get_status_code();
}

uint64_t nw_interface_create_with_name()
{
  return _nw_interface_create_with_name();
}

nw_listener_t nw_listener_create(nw_parameters_t parameters)
{
  return _nw_listener_create(parameters);
}

uint64_t nw_listener_set_advertise_endpoints()
{
  return _nw_listener_set_advertise_endpoints();
}

nw_protocol_stack_t nw_parameters_copy_default_protocol_stack(nw_parameters_t parameters)
{
  return _nw_parameters_copy_default_protocol_stack(parameters);
}

uint64_t nw_parameters_create_application_service_quic()
{
  return _nw_parameters_create_application_service_quic();
}

uint64_t nw_parameters_create_application_service_quic_using_identity()
{
  return _nw_parameters_create_application_service_quic_using_identity();
}

uint64_t nw_parameters_get_attributed_bundle_identifier()
{
  return _nw_parameters_get_attributed_bundle_identifier();
}

uint64_t nw_parameters_get_pid()
{
  return _nw_parameters_get_pid();
}

uint64_t nw_parameters_set_account_id()
{
  return _nw_parameters_set_account_id();
}

uint64_t nw_parameters_set_attach_protocol_listener()
{
  return _nw_parameters_set_attach_protocol_listener();
}

void nw_parameters_set_include_peer_to_peer(nw_parameters_t parameters, BOOL include_peer_to_peer)
{
}

void nw_parameters_set_local_only(nw_parameters_t parameters, BOOL local_only)
{
}

void nw_parameters_set_multipath_service(nw_parameters_t parameters, nw_multipath_service_t multipath_service)
{
}

uint64_t nw_parameters_set_preferred_interface_subtypes()
{
  return _nw_parameters_set_preferred_interface_subtypes();
}

uint64_t nw_parameters_set_preferred_netagent_classes()
{
  return _nw_parameters_set_preferred_netagent_classes();
}

void nw_parameters_set_prohibit_constrained(nw_parameters_t parameters, BOOL prohibit_constrained)
{
}

void nw_parameters_set_prohibit_expensive(nw_parameters_t parameters, BOOL prohibit_expensive)
{
}

uint64_t nw_parameters_set_prohibited_interface_types()
{
  return _nw_parameters_set_prohibited_interface_types();
}

uint64_t nw_parameters_set_required_interface_subtype()
{
  return _nw_parameters_set_required_interface_subtype();
}

uint64_t nw_parameters_set_server_mode()
{
  return _nw_parameters_set_server_mode();
}

uint64_t nw_parameters_set_source_application_by_bundle_id()
{
  return _nw_parameters_set_source_application_by_bundle_id();
}

nw_path_status_t nw_path_get_status(nw_path_t path)
{
  return _nw_path_get_status(path);
}

void nw_path_monitor_cancel(nw_path_monitor_t monitor)
{
}

nw_path_monitor_t nw_path_monitor_create(void)
{
  return _nw_path_monitor_create();
}

void nw_path_monitor_set_queue(nw_path_monitor_t monitor, dispatch_queue_t queue)
{
}

void nw_path_monitor_set_update_handler(nw_path_monitor_t monitor, nw_path_monitor_update_handler_t update_handler)
{
}

void nw_path_monitor_start(nw_path_monitor_t monitor)
{
}

uint64_t nw_protocol_copy_http_connection_definition()
{
  return _nw_protocol_copy_http_connection_definition();
}

uint64_t nw_protocol_copy_http_definition()
{
  return _nw_protocol_copy_http_definition();
}

nw_protocol_definition_t nw_protocol_copy_tls_definition(void)
{
  return _nw_protocol_copy_tls_definition();
}

BOOL nw_protocol_options_is_quic(nw_protocol_options_t options)
{
  return _nw_protocol_options_is_quic(options);
}

void nw_protocol_stack_iterate_application_protocols(nw_protocol_stack_t stack, nw_protocol_stack_iterate_protocols_block_t iterate_block)
{
}

void nw_protocol_stack_prepend_application_protocol(nw_protocol_stack_t stack, nw_protocol_options_t protocol)
{
}

sec_protocol_options_t nw_quic_copy_sec_protocol_options(nw_protocol_options_t options)
{
  return _nw_quic_copy_sec_protocol_options(options);
}

void nw_quic_set_idle_timeout(nw_protocol_options_t options, uint32_t idle_timeout)
{
}

sec_protocol_metadata_t nw_tls_copy_sec_protocol_metadata(nw_protocol_metadata_t metadata)
{
  return _nw_tls_copy_sec_protocol_metadata(metadata);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

{
}

{
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_begin_catch(void *exc_buf)
{
  return _objc_begin_catch(exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyStruct(void *dest, const void *src, ptrdiff_t size, BOOL atomic, BOOL hasStrong)
{
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_throw(id exception)
{
}

id objc_getAssociatedObject(id object, const void *key)
{
  return _objc_getAssociatedObject(object, key);
}

Class objc_getClass(const char *name)
{
  return _objc_getClass(name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_isKindOfClass()
{
  return _objc_opt_isKindOfClass();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutorelease(id a1)
{
  return _a1;
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

id objc_retainBlock(id a1)
{
  return _objc_retainBlock(a1);
}

void objc_setAssociatedObject(id object, const void *key, id value, void *policy)
{
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

int objc_sync_enter(id obj)
{
  return _objc_sync_enter(obj);
}

int objc_sync_exit(id obj)
{
  return _objc_sync_exit(obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return _objc_unsafeClaimAutoreleasedReturnValue(a1);
}

int open(const char *a1, int a2, ...)
{
  return _open(a1, a2);
}

void os_activity_scope_enter(os_activity_t activity, os_activity_scope_state_t state)
{
}

void os_activity_scope_leave(os_activity_scope_state_t state)
{
}

uint64_t os_eligibility_get_domain_answer()
{
  return _os_eligibility_get_domain_answer();
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return _os_log_create(subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return _os_signpost_enabled(log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return _os_signpost_id_generate(log);
}

os_signpost_id_t os_signpost_id_make_with_pointer(os_log_t log, const void *ptr)
{
  return _os_signpost_id_make_with_pointer(log, ptr);
}

uint64_t os_state_add_handler()
{
  return _os_state_add_handler();
}

uint64_t os_state_remove_handler()
{
  return _os_state_remove_handler();
}

uint64_t os_transaction_create()
{
  return _os_transaction_create();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t paired_unlock_log()
{
  return _paired_unlock_log();
}

int printf(const char *a1, ...)
{
  return _printf(a1);
}

int proc_name(int pid, void *buffer, uint32_t buffersize)
{
  return _proc_name(pid, buffer, buffersize);
}

int pthread_mutex_lock(pthread_mutex_t *a1)
{
  return _pthread_mutex_lock(a1);
}

int pthread_mutex_unlock(pthread_mutex_t *a1)
{
  return _pthread_mutex_unlock(a1);
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return _realpath_DARWIN_EXTSN(a1, a2);
}

BOOL remove(const std::__fs::filesystem::path *__p, std::error_code *__ec)
{
  return _remove(__p, __ec);
}

int removefile(const char *path, removefile_state_t state, removefile_flags_t flags)
{
  return _removefile(path, state, flags);
}

void rename(const std::__fs::filesystem::path *__from, const std::__fs::filesystem::path *__to, std::error_code *__ec)
{
}

uint64_t sandbox_check_by_audit_token()
{
  return _sandbox_check_by_audit_token();
}

uint64_t sandbox_extension_consume()
{
  return _sandbox_extension_consume();
}

uint64_t sandbox_extension_issue_file()
{
  return _sandbox_extension_issue_file();
}

uint64_t sandbox_extension_release()
{
  return _sandbox_extension_release();
}

SecIdentityRef sec_identity_copy_ref(sec_identity_t identity)
{
  return _sec_identity_copy_ref(identity);
}

sec_identity_t sec_identity_create(SecIdentityRef identity)
{
  return _sec_identity_create(identity);
}

sec_identity_t sec_identity_create_with_certificates(SecIdentityRef identity, CFArrayRef certificates)
{
  return _sec_identity_create_with_certificates(identity, certificates);
}

uint64_t sec_protocol_metadata_copy_sec_trust()
{
  return _sec_protocol_metadata_copy_sec_trust();
}

void sec_protocol_options_add_tls_application_protocol(sec_protocol_options_t options, const char *application_protocol)
{
}

uint64_t sec_protocol_options_clear_tls_application_protocols()
{
  return _sec_protocol_options_clear_tls_application_protocols();
}

void sec_protocol_options_set_challenge_block(sec_protocol_options_t options, sec_protocol_challenge_t challenge_block, dispatch_queue_t challenge_queue)
{
}

void sec_protocol_options_set_local_identity(sec_protocol_options_t options, sec_identity_t identity)
{
}

uint64_t sec_protocol_options_set_nw_protocol_joining_context()
{
  return _sec_protocol_options_set_nw_protocol_joining_context();
}

void sec_protocol_options_set_peer_authentication_optional(sec_protocol_options_t options, BOOL peer_authentication_optional)
{
}

void sec_protocol_options_set_peer_authentication_required(sec_protocol_options_t options, BOOL peer_authentication_required)
{
}

void sec_protocol_options_set_verify_block(sec_protocol_options_t options, sec_protocol_verify_t verify_block, dispatch_queue_t verify_block_queue)
{
}

SecTrustRef sec_trust_copy_ref(sec_trust_t trust)
{
  return _sec_trust_copy_ref(trust);
}

int setsockopt(int a1, int a2, int a3, const void *a4, socklen_t a5)
{
  return _setsockopt(a1, a2, a3, a4, a5);
}

uint64_t sf_dispatch_on_main_queue()
{
  return _sf_dispatch_on_main_queue();
}

uint64_t sharingXPCHelperLog()
{
  return _sharingXPCHelperLog();
}

uint64_t sharing_persistent_log()
{
  return _sharing_persistent_log();
}

void (__cdecl *__cdecl signal(int a1, void (__cdecl *a2)(int)))(int)
{
  return _signal(a1, a2);
}

int socketpair(int a1, int a2, int a3, int *a4)
{
  return _socketpair(a1, a2, a3, a4);
}

int sscanf(const char *a1, const char *a2, ...)
{
  return _sscanf(a1, a2);
}

int strcmp(const char *__s1, const char *__s2)
{
  return _strcmp(__s1, __s2);
}

uint64_t streams_log()
{
  return _streams_log();
}

char *__cdecl strerror(int __errnum)
{
  return _strerror(__errnum);
}

size_t strlen(const char *__s)
{
  return _strlen(__s);
}

int strncasecmp(const char *a1, const char *a2, size_t a3)
{
  return _strncasecmp(a1, a2, a3);
}

uint64_t strnicmp_prefix()
{
  return _strnicmp_prefix();
}

uint64_t strnicmpx()
{
  return _strnicmpx();
}

uint64_t strtoll(const char *__str, char **__endptr, int __base)
{
  return _strtoll(__str, __endptr, __base);
}

unint64_t strtoul(const char *__str, char **__endptr, int __base)
{
  return _strtoul(__str, __endptr, __base);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_continuation_resume()
{
  return _swift_continuation_resume();
}

uint64_t swift_continuation_throwingResume()
{
  return _swift_continuation_throwingResume();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_deallocPartialClassInstance()
{
  return _swift_deallocPartialClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCProtocolConditional()
{
  return _swift_dynamicCastObjCProtocolConditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_task_isCancelled()
{
  return _swift_task_isCancelled();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

int sysctl(int *a1, u_int a2, void *a3, size_t *a4, void *a5, size_t a6)
{
  return _sysctl(a1, a2, a3, a4, a5, a6);
}

uint64_t tailspin_dump_output()
{
  return _tailspin_dump_output();
}

uint64_t tethering_log()
{
  return _tethering_log();
}

int uncompress(Bytef *dest, uLongf *destLen, const Bytef *source, uLong sourceLen)
{
  return _uncompress(dest, destLen, source, sourceLen);
}

int usleep(useconds_t a1)
{
  return _usleep(a1);
}

uint64_t utilities_log()
{
  return _utilities_log();
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return _xpc_array_create(objects, count);
}

xpc_object_t xpc_array_create_empty(void)
{
  return _xpc_array_create_empty();
}

void xpc_array_set_string(xpc_object_t xarray, size_t index, const char *string)
{
}

void xpc_array_set_uint64(xpc_object_t xarray, size_t index, uint64_t value)
{
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

void xpc_connection_cancel(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return _xpc_connection_create_mach_service(name, targetq, flags);
}

uint64_t xpc_connection_get_audit_token()
{
  return _xpc_connection_get_audit_token();
}

void *__cdecl xpc_connection_get_context(xpc_connection_t connection)
{
  return _xpc_connection_get_context(connection);
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return _xpc_connection_get_pid(connection);
}

uint64_t xpc_connection_has_entitlement()
{
  return _xpc_connection_has_entitlement();
}

void xpc_connection_resume(xpc_connection_t connection)
{
}

void xpc_connection_send_barrier(xpc_connection_t connection, dispatch_block_t barrier)
{
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_set_context(xpc_connection_t connection, void *context)
{
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return _xpc_dictionary_create(keys, values, count);
}

xpc_object_t xpc_dictionary_get_dictionary(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_dictionary(xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_string(xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_uint64(xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return _xpc_dictionary_get_value(xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_int64(xpc_object_t xdict, const char *key, int64_t value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return _xpc_get_type(object);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return _xpc_string_get_string_ptr(xstring);
}

id objc_msgSend_CGColor(void *a1, const char *a2, ...)
{
  return _[a1 CGColor];
}

id objc_msgSend_CGImage(void *a1, const char *a2, ...)
{
  return _[a1 CGImage];
}

id objc_msgSend_CGImageForImageDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 CGImageForImageDescriptor:];
}

id objc_msgSend_CGImageWithCacheKey_contactIDs_type_(void *a1, const char *a2, ...)
{
  return [a1 CGImageWithCacheKey:x0 contactIDs:x1 type:x2];
}

id objc_msgSend_CGImgDataForActionPlatterWithTitle_tintColor_replyHandler_(void *a1, const char *a2, ...)
{
  return [a1 CGImgDataForActionPlatterWithTitle:tintColor:replyHandler:];
}

id objc_msgSend_CGImgDataForActivityMoreListEntryForActivityTitle_labelColor_activityCategory_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:activityCategory:replyHandler:");
}

id objc_msgSend_CGImgDataForActivityMoreListEntryForActivityTitle_labelColor_processOppositeColor_activityCategory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgDataForActivityMoreListEntryForActivityTitle:labelColor:processOppositeColor:activityCategory:");
}

id objc_msgSend_CGImgDataForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:");
}

id objc_msgSend_CGImgDataForNearbyBadgeWithCount_replyHandler_(void *a1, const char *a2, ...)
{
  return [a1 CGImgDataForNearbyBadgeWithCount:replyHandler:];
}

id objc_msgSend_CGImgDataForUIActivityTitles_foregroundColor_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgDataForUIActivityTitles:foregroundColor:replyHandler:");
}

id objc_msgSend_CGImgForActionPlatterWithTitle_tintColor_(void *a1, const char *a2, ...)
{
  return [a1 CGImgForActionPlatterWithTitle:tintColor:];
}

id objc_msgSend_CGImgForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_processOppositeColor_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:processOppositeColor:");
}

id objc_msgSend_CGImgForNearbyBadgeWithCount_(void *a1, const char *a2, ...)
{
  return [a1 CGImgForNearbyBadgeWithCount:];
}

id objc_msgSend_CGImgForUIActivityTitles_foregroundColor_processOppositeColor_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "CGImgForUIActivityTitles:foregroundColor:processOppositeColor:");
}

id objc_msgSend_GeneralContactKeysToFetch(void *a1, const char *a2, ...)
{
  return _[a1 GeneralContactKeysToFetch];
}

id objc_msgSend_HMACWithDSID_timeString_(void *a1, const char *a2, ...)
{
  return [a1 HMACWithDSID:timeString:];
}

id objc_msgSend_IDMSEnvironment(void *a1, const char *a2, ...)
{
  return _[a1 IDMSEnvironment];
}

id objc_msgSend_JSONObjectWithData_options_error_(void *a1, const char *a2, ...)
{
  return [a1 JSONObjectWithData:x0 options:x1 error:x2];
}

id objc_msgSend_MD5HashOfStrings_(void *a1, const char *a2, ...)
{
  return [a1 MD5HashOfStrings:];
}

id objc_msgSend_MIMEType(void *a1, const char *a2, ...)
{
  return _[a1 MIMEType];
}

id objc_msgSend_TTRAirDropNode(void *a1, const char *a2, ...)
{
  return _[a1 TTRAirDropNode];
}

id objc_msgSend_TTRPeopleSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 TTRPeopleSuggestion];
}

id objc_msgSend_URL(void *a1, const char *a2, ...)
{
  return _[a1 URL];
}

id objc_msgSend_URLByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:];
}

id objc_msgSend_URLByAppendingPathComponent_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 URLByAppendingPathComponent:isDirectory:];
}

id objc_msgSend_URLByDeletingLastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingLastPathComponent];
}

id objc_msgSend_URLByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 URLByDeletingPathExtension];
}

id objc_msgSend_URLByResolvingSymlinksInPath(void *a1, const char *a2, ...)
{
  return _[a1 URLByResolvingSymlinksInPath];
}

id objc_msgSend_URLForDirectory_inDomain_appropriateForURL_create_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "URLForDirectory:inDomain:appropriateForURL:create:error:");
}

id objc_msgSend_URLForRemounting_(void *a1, const char *a2, ...)
{
  return [a1 URLForRemounting:];
}

id objc_msgSend_URLForResource_withExtension_(void *a1, const char *a2, ...)
{
  return [a1 URLForResource:withExtension:];
}

id objc_msgSend_URLForUbiquityContainerIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 URLForUbiquityContainerIdentifier:];
}

id objc_msgSend_URLFromFileInfo_(void *a1, const char *a2, ...)
{
  return [a1 URLFromFileInfo:];
}

id objc_msgSend_URLOverrideForURL_(void *a1, const char *a2, ...)
{
  return [a1 URLOverrideForURL:];
}

id objc_msgSend_URLWithString_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:];
}

id objc_msgSend_URLWithString_relativeToURL_(void *a1, const char *a2, ...)
{
  return [a1 URLWithString:relativeToURL:];
}

id objc_msgSend_UTF8String(void *a1, const char *a2, ...)
{
  return _[a1 UTF8String];
}

id objc_msgSend_UUID(void *a1, const char *a2, ...)
{
  return _[a1 UUID];
}

id objc_msgSend_UUIDString(void *a1, const char *a2, ...)
{
  return _[a1 UUIDString];
}

id objc_msgSend__CFURLRequest(void *a1, const char *a2, ...)
{
  return _[a1 _CFURLRequest];
}

id objc_msgSend__CFURLResponse(void *a1, const char *a2, ...)
{
  return _[a1 _CFURLResponse];
}

id objc_msgSend__LSFailedToOpenURL_withBundle_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_LSFailedToOpenURL:withBundle:");
}

id objc_msgSend___handleAWDLDisabledIfNeededForRequest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "__handleAWDLDisabledIfNeededForRequest:");
}

id objc_msgSend__accountForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _accountForAppleID];
}

id objc_msgSend__accountState(void *a1, const char *a2, ...)
{
  return _[a1 _accountState];
}

id objc_msgSend__actionImage(void *a1, const char *a2, ...)
{
  return _[a1 _actionImage];
}

id objc_msgSend__actionImageForActionRepresentationImage_contentSizeCategory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_actionImageForActionRepresentationImage:contentSizeCategory:");
}

id objc_msgSend__activate(void *a1, const char *a2, ...)
{
  return _[a1 _activate];
}

id objc_msgSend__activateSecurityContext_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activateSecurityContext:");
}

id objc_msgSend__activateUIDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _activateUIDelayTimer];
}

id objc_msgSend__activitiesForFileURL_isContentManaged_sourceApplicationAuditTokenData_includeSourceApplicationInResults_supportedTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activitiesForFileURL:isContentManaged:sourceApplicationAuditTokenData:includeSourceApplicationInResults:supportedTypeIdentifiers:");
}

id objc_msgSend__activityFooterText(void *a1, const char *a2, ...)
{
  return _[a1 _activityFooterText];
}

id objc_msgSend__activityImage(void *a1, const char *a2, ...)
{
  return _[a1 _activityImage];
}

id objc_msgSend__activityImageForActionRepresentationImage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activityImageForActionRepresentationImage:");
}

id objc_msgSend__activityImageUTI(void *a1, const char *a2, ...)
{
  return _[a1 _activityImageUTI];
}

id objc_msgSend__activityMonitorCurrentLevelAndNeedsPoll_recentUserActivity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activityMonitorCurrentLevelAndNeedsPoll:recentUserActivity:")];
}

id objc_msgSend__activityMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorEnsureStarted];
}

id objc_msgSend__activityMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorEnsureStopped];
}

id objc_msgSend__activityMonitorLastUserEventDelta(void *a1, const char *a2, ...)
{
  return _[a1 _activityMonitorLastUserEventDelta];
}

id objc_msgSend__activityMonitorUpdateUserActive_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activityMonitorUpdateUserActive:");
}

id objc_msgSend__activitySettingsImage(void *a1, const char *a2, ...)
{
  return _[a1 _activitySettingsImage];
}

id objc_msgSend__activityStatusImage(void *a1, const char *a2, ...)
{
  return _[a1 _activityStatusImage];
}

id objc_msgSend__activityStatusTintColor(void *a1, const char *a2, ...)
{
  return _[a1 _activityStatusTintColor];
}

id objc_msgSend__activitySupportsPromiseURLs(void *a1, const char *a2, ...)
{
  return _[a1 _activitySupportsPromiseURLs];
}

id objc_msgSend__activityTypeUsingFallbackActivityTypeIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 _activityTypeUsingFallbackActivityTypeIfNecessary];
}

id objc_msgSend__activityWithActivityType_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_activityWithActivityType:session:");
}

id objc_msgSend__addAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _addAppleID:];
}

id objc_msgSend__addObservers(void *a1, const char *a2, ...)
{
  return _[a1 _addObservers];
}

id objc_msgSend__addPersonInfoToCache_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_addPersonInfoToCache:");
}

id objc_msgSend__addRequestWithID_content_type_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_addRequestWithID:content:type:");
}

id objc_msgSend__additionalInfoForRequest_toMessage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_additionalInfoForRequest:toMessage:");
}

id objc_msgSend__advertiserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _advertiserEnsureStopped];
}

id objc_msgSend__advertiserShouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 _advertiserShouldAdvertise];
}

id objc_msgSend__advertiserUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _advertiserUpdate];
}

id objc_msgSend__agentClientTokenForClient_(void *a1, const char *a2, ...)
{
  return [a1 _agentClientTokenForClient:];
}

id objc_msgSend__allowEnhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _allowEnhancedDiscovery];
}

id objc_msgSend__appMonitorAppList(void *a1, const char *a2, ...)
{
  return _[a1 _appMonitorAppList];
}

id objc_msgSend__appMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _appMonitorEnsureStarted];
}

id objc_msgSend__appMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _appMonitorEnsureStopped];
}

id objc_msgSend__appMonitorStringForState_(void *a1, const char *a2, ...)
{
  return [a1 _appMonitorStringForState:];
}

id objc_msgSend__appMonitorUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _appMonitorUpdate];
}

id objc_msgSend__applicationIconImageForFormat_precomposed_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_applicationIconImageForFormat:precomposed:");
}

id objc_msgSend__beforeActivity(void *a1, const char *a2, ...)
{
  return _[a1 _beforeActivity];
}

id objc_msgSend__bleActionDeviceChanged_(void *a1, const char *a2, ...)
{
  return [a1 _bleActionDeviceChanged:];
}

id objc_msgSend__bleActionDeviceFoundCandidate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleActionDeviceFoundCandidate:");
}

id objc_msgSend__bleActionDiscoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryEnsureStarted];
}

id objc_msgSend__bleActionDiscoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryEnsureStopped];
}

id objc_msgSend__bleActionDiscoveryShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionDiscoveryShouldStart];
}

id objc_msgSend__bleActionScanTimerActivate(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionScanTimerActivate];
}

id objc_msgSend__bleActionScanTimerInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _bleActionScanTimerInvalidate];
}

id objc_msgSend__bleDeviceNearbyEnter_(void *a1, const char *a2, ...)
{
  return [a1 _bleDeviceNearbyEnter:];
}

id objc_msgSend__bleDeviceNearbyExit_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleDeviceNearbyExit:");
}

id objc_msgSend__bleEncryptActivityLevel_(void *a1, const char *a2, ...)
{
  return [a1 _bleEncryptActivityLevel:];
}

id objc_msgSend__bleInfoDiscoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryEnsureStarted];
}

id objc_msgSend__bleInfoDiscoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryEnsureStopped];
}

id objc_msgSend__bleInfoDiscoveryShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _bleInfoDiscoveryShouldStart];
}

id objc_msgSend__bleNearbyActionAdvertiserEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserEnsureStarted];
}

id objc_msgSend__bleNearbyActionAdvertiserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserEnsureStopped];
}

id objc_msgSend__bleNearbyActionAdvertiserShouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionAdvertiserShouldAdvertise];
}

id objc_msgSend__bleNearbyActionScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerEnsureStarted];
}

id objc_msgSend__bleNearbyActionScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerEnsureStopped];
}

id objc_msgSend__bleNearbyActionScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyActionScannerShouldScan];
}

id objc_msgSend__bleNearbyInfoAdvertiserEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserEnsureStarted];
}

id objc_msgSend__bleNearbyInfoAdvertiserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserEnsureStopped];
}

id objc_msgSend__bleNearbyInfoAdvertiserLingerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserLingerIfNeeded];
}

id objc_msgSend__bleNearbyInfoAdvertiserLingerStart_(void *a1, const char *a2, ...)
{
  return [a1 _bleNearbyInfoAdvertiserLingerStart:];
}

id objc_msgSend__bleNearbyInfoAdvertiserShouldAddField3(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserShouldAddField3];
}

id objc_msgSend__bleNearbyInfoAdvertiserShouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserShouldAdvertise];
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdate(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoAdvertiserUpdate];
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleNearbyInfoAdvertiserUpdateAddAudioRoutingScore:");
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAddHotspotInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleNearbyInfoAdvertiserUpdateAddHotspotInfo:");
}

id objc_msgSend__bleNearbyInfoAdvertiserUpdateAdvertiseReason_(void *a1, const char *a2, ...)
{
  return [a1 _bleNearbyInfoAdvertiserUpdateAdvertiseReason:];
}

id objc_msgSend__bleNearbyInfoAdvertisingUpdateAddCameraState_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleNearbyInfoAdvertisingUpdateAddCameraState:");
}

id objc_msgSend__bleNearbyInfoReceivedData_cnx_peer_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleNearbyInfoReceivedData:cnx:peer:");
}

id objc_msgSend__bleNearbyInfoReceivedFrameType_src_end_cnx_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleNearbyInfoReceivedFrameType:src:end:cnx:");
}

id objc_msgSend__bleNearbyInfoScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerEnsureStarted];
}

id objc_msgSend__bleNearbyInfoScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerEnsureStopped];
}

id objc_msgSend__bleNearbyInfoScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleNearbyInfoScannerShouldScan];
}

id objc_msgSend__bleProximityPairingScannerEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerEnsureStarted];
}

id objc_msgSend__bleProximityPairingScannerEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerEnsureStopped];
}

id objc_msgSend__bleProximityPairingScannerShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _bleProximityPairingScannerShouldScan];
}

id objc_msgSend__bleProximityUpdateDeviceCloseNearbyActionDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleProximityUpdateDeviceCloseNearbyActionDevice:");
}

id objc_msgSend__bleProximityUpdateNearbyActionDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleProximityUpdateNearbyActionDevice:");
}

id objc_msgSend__bleProximityUpdateNearbyInfoDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleProximityUpdateNearbyInfoDevice:");
}

id objc_msgSend__bleUpdateAuthTagIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateAuthTagIfNeeded];
}

id objc_msgSend__bleUpdateMappingAndNearby(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateMappingAndNearby];
}

id objc_msgSend__bleUpdateMappingReset(void *a1, const char *a2, ...)
{
  return _[a1 _bleUpdateMappingReset];
}

id objc_msgSend__bleUpdateMappingWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 _bleUpdateMappingWithDevice:];
}

id objc_msgSend__bleUpdateScanner_typeFlag_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bleUpdateScanner:typeFlag:");
}

id objc_msgSend__bleUpdateUseCases_(void *a1, const char *a2, ...)
{
  return [a1 _bleUpdateUseCases:];
}

id objc_msgSend__bookmarkWithSandboxExtensionForExport(void *a1, const char *a2, ...)
{
  return _[a1 _bookmarkWithSandboxExtensionForExport];
}

id objc_msgSend__btPipeEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _btPipeEnsureStarted];
}

id objc_msgSend__btPipeEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _btPipeEnsureStopped];
}

id objc_msgSend__btSessionEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _btSessionEnsureStarted];
}

id objc_msgSend__btSessionEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _btSessionEnsureStopped];
}

id objc_msgSend__btSessionUsable(void *a1, const char *a2, ...)
{
  return _[a1 _btSessionUsable];
}

id objc_msgSend__bufferedBleDeviceFound_(void *a1, const char *a2, ...)
{
  return [a1 _bufferedBleDeviceFound:];
}

id objc_msgSend__bulletinsEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _bulletinsEnsureStarted];
}

id objc_msgSend__bundleIDForActivity_(void *a1, const char *a2, ...)
{
  return [a1 _bundleIDForActivity:];
}

id objc_msgSend__bundleIdentifierForActivity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_bundleIdentifierForActivity:");
}

id objc_msgSend__cachedPersonInfoWithEmailOrPhone_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_cachedPersonInfoWithEmailOrPhone:");
}

id objc_msgSend__callResponseHandlerWithInfo_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_callResponseHandlerWithInfo:error:");
}

id objc_msgSend__callResponseHandlerWithInfo_errorInfo_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_callResponseHandlerWithInfo:errorInfo:error:")];
}

id objc_msgSend__cameraStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 _cameraStateChanged];
}

id objc_msgSend__canTransition_(void *a1, const char *a2, ...)
{
  return [a1 _canTransition:];
}

id objc_msgSend__cancelCheckForEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _cancelCheckForEveryoneModeExpiry];
}

id objc_msgSend__cancelDonStateRetryTimers(void *a1, const char *a2, ...)
{
  return _[a1 _cancelDonStateRetryTimers];
}

id objc_msgSend__cancelWiFiRequest_(void *a1, const char *a2, ...)
{
  return [a1 _cancelWiFiRequest:];
}

id objc_msgSend__caseSensitiveBundleIDFromBundleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_caseSensitiveBundleIDFromBundleID:");
}

id objc_msgSend__checkConditionsForEnhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 _checkConditionsForEnhancedDiscovery];
}

id objc_msgSend__checkEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _checkEveryoneModeExpiry];
}

id objc_msgSend__checkIfAppleIDCertificateChainIsValidForIdentity_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_checkIfAppleIDCertificateChainIsValidForIdentity:completion:");
}

id objc_msgSend__cleanUpAccount_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_cleanUpAccount:");
}

id objc_msgSend__cleanup(void *a1, const char *a2, ...)
{
  return _[a1 _cleanup];
}

id objc_msgSend__clearAccount(void *a1, const char *a2, ...)
{
  return _[a1 _clearAccount];
}

id objc_msgSend__clearLegacyPreferencesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _clearLegacyPreferencesIfNeeded];
}

id objc_msgSend__clearPersonInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 _clearPersonInfoCache];
}

id objc_msgSend__clearSlotsForAirDropProxies_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_clearSlotsForAirDropProxies:");
}

id objc_msgSend__clientDeviceFound_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_clientDeviceFound:");
}

id objc_msgSend__clientDeviceLost_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_clientDeviceLost:");
}

id objc_msgSend__clientEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _clientEnsureStopped];
}

id objc_msgSend__clientShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _clientShouldStart];
}

id objc_msgSend__clientUpdateCoalesceTimerForDevice_identifier_(void *a1, const char *a2, ...)
{
  return [a1 _clientUpdateCoalesceTimerForDevice:identifier:];
}

id objc_msgSend__clinkEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _clinkEnsureStarted];
}

id objc_msgSend__clinkEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _clinkEnsureStopped];
}

id objc_msgSend__clinkHomePodHandleRequest_responseHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_clinkHomePodHandleRequest:responseHandler:)];
}

id objc_msgSend__clinkShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _clinkShouldStart];
}

id objc_msgSend__combinedDeviceForUIID_(void *a1, const char *a2, ...)
{
  return [a1 _combinedDeviceForUIID:];
}

id objc_msgSend__combinedDeviceIsSuppressed_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_combinedDeviceIsSuppressed:");
}

id objc_msgSend__combinedDevicePending(void *a1, const char *a2, ...)
{
  return _[a1 _combinedDevicePending];
}

id objc_msgSend__combinedDevicePrepareForCallTransferTrigger_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_combinedDevicePrepareForCallTransferTrigger:");
}

id objc_msgSend__commonCallCountChanged(void *a1, const char *a2, ...)
{
  return _[a1 _commonCallCountChanged];
}

id objc_msgSend__commonEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _commonEnsureStarted];
}

id objc_msgSend__commonEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _commonEnsureStopped];
}

id objc_msgSend__commonShouldAdvertiseChanged(void *a1, const char *a2, ...)
{
  return _[a1 _commonShouldAdvertiseChanged];
}

id objc_msgSend__companionLinkActivateWithRequest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_companionLinkActivateWithRequest:");
}

id objc_msgSend__companionLinkActivatedRequest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_companionLinkActivatedRequest:");
}

id objc_msgSend__companionLinkConnected(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkConnected];
}

id objc_msgSend__companionLinkEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkEnsureStarted];
}

id objc_msgSend__companionLinkEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkEnsureStopped];
}

id objc_msgSend__companionLinkFamilySupported(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkFamilySupported];
}

id objc_msgSend__companionLinkHandleLowLatencyFilterRequestOfType_request_options_responseHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_companionLinkHandleLowLatencyFilterRequestOfType:request:options:responseHandler:");
}

id objc_msgSend__companionLinkRegisterEvents(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkRegisterEvents];
}

id objc_msgSend__companionLinkShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _companionLinkShouldStart];
}

id objc_msgSend__companionLinkStartTetheringWithResponse_logCategory_modelID_productVersion_canConnectOn5GHz_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_companionLinkStartTetheringWithResponse:logCategory:modelID:productVersion:canConnectOn5GHz:");
}

id objc_msgSend__configure(void *a1, const char *a2, ...)
{
  return _[a1 _configure];
}

id objc_msgSend__configureActionsSectionForSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_configureActionsSectionForSession:");
}

id objc_msgSend__configurePeopleSuggestionsSectionForSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_configurePeopleSuggestionsSectionForSession:");
}

id objc_msgSend__configureSharingSectionsForSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_configureSharingSectionsForSession:");
}

id objc_msgSend__connectionHasEntitlement_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_connectionHasEntitlement:");
}

id objc_msgSend__copyIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_copyIdentityForAppleID:");
}

id objc_msgSend__copyMyAppleIDCertificate(void *a1, const char *a2, ...)
{
  return _[a1 _copyMyAppleIDCertificate];
}

id objc_msgSend__copyMyAppleIDSecIdentity(void *a1, const char *a2, ...)
{
  return _[a1 _copyMyAppleIDSecIdentity];
}

id objc_msgSend__createActionProxiesFromActivities_withTintColor_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createActionProxiesFromActivities:withTintColor:session:");
}

id objc_msgSend__createAttachmentsForURLsBeingShared_typeIdentifiersBeingShared_photosAssetIDs_processedImageResultsData_sandboxExtensionsByfileURLPath_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createAttachmentsForURLsBeingShared:typeIdentifiersBeingShared:photosAssetIDs:processedImageResultsData:sandboxExtensionsByfileURLPath:");
}

id objc_msgSend__createBrowseAgent(void *a1, const char *a2, ...)
{
  return _[a1 _createBrowseAgent];
}

id objc_msgSend__createDefaultPassword(void *a1, const char *a2, ...)
{
  return _[a1 _createDefaultPassword];
}

id objc_msgSend__createNISession(void *a1, const char *a2, ...)
{
  return _[a1 _createNISession];
}

id objc_msgSend__createNameLabelSlotWithString_textColor_maximumNumberOfLines_isAirDrop_ignoreNameWrapping_sessionConnection_hostConfig_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createNameLabelSlotWithString:textColor:maximumNumberOfLines:isAirDrop:ignoreNameWrapping:sessionConnection:hostConfig:");
}

id objc_msgSend__createNewPowerSourceContainer(void *a1, const char *a2, ...)
{
  return _[a1 _createNewPowerSourceContainer];
}

id objc_msgSend__createOSTransactionIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _createOSTransactionIfNeeded];
}

id objc_msgSend__createPeopleSuggestionNodesForSuggestions_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createPeopleSuggestionNodesForSuggestions:");
}

id objc_msgSend__createPeopleSuggestionsForSuggestions_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createPeopleSuggestionsForSuggestions:");
}

id objc_msgSend__createPlaceholderSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 _createPlaceholderSuggestions];
}

id objc_msgSend__createPredictionContextWithContext_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createPredictionContextWithContext:");
}

id objc_msgSend__createShareProxiesFromActivities_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createShareProxiesFromActivities:session:");
}

id objc_msgSend__createShareSheetContext(void *a1, const char *a2, ...)
{
  return _[a1 _createShareSheetContext];
}

id objc_msgSend__createSuggestionsForDuetSuggestions_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_createSuggestionsForDuetSuggestions:");
}

id objc_msgSend__crossPlatformUnifiedMeContactWithKeysToFetch_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_crossPlatformUnifiedMeContactWithKeysToFetch:error:");
}

id objc_msgSend__currentEveryoneModeExpiryInterval(void *a1, const char *a2, ...)
{
  return _[a1 _currentEveryoneModeExpiryInterval];
}

id objc_msgSend__deactivateSecurityContext_(void *a1, const char *a2, ...)
{
  return [a1 _deactivateSecurityContext:];
}

id objc_msgSend__deactivateUIDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _deactivateUIDelayTimer];
}

id objc_msgSend__defaultApplication(void *a1, const char *a2, ...)
{
  return _[a1 _defaultApplication];
}

id objc_msgSend__defaultFallbackActivityType(void *a1, const char *a2, ...)
{
  return _[a1 _defaultFallbackActivityType];
}

id objc_msgSend__defaultSortGroup(void *a1, const char *a2, ...)
{
  return _[a1 _defaultSortGroup];
}

id objc_msgSend__deliverDonnedEventToDevice_allowRetry_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deliverDonnedEventToDevice:allowRetry:");
}

id objc_msgSend__detailedDescription(void *a1, const char *a2, ...)
{
  return _[a1 _detailedDescription];
}

id objc_msgSend__deviceCanTriggerEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceCanTriggerEnhancedDiscovery:");
}

id objc_msgSend__deviceChanged_(void *a1, const char *a2, ...)
{
  return [a1 _deviceChanged:];
}

id objc_msgSend__deviceDiscoveryBLEDeviceChanged_type_changes_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryBLEDeviceChanged:type:changes:");
}

id objc_msgSend__deviceDiscoveryBLEDeviceFound_type_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryBLEDeviceFound:type:");
}

id objc_msgSend__deviceDiscoveryBLEDeviceLost_type_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryBLEDeviceLost:type:");
}

id objc_msgSend__deviceDiscoveryFastScanEvaluate_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryFastScanEvaluate:device:");
}

id objc_msgSend__deviceDiscoveryFastScanStart_device_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryFastScanStart:device:reason:");
}

id objc_msgSend__deviceDiscoveryFastScanStop_reset_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceDiscoveryFastScanStop:reset:reason:");
}

id objc_msgSend__deviceFound_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceFound:");
}

id objc_msgSend__deviceFound_andIsABufferedDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceFound:andIsABufferedDevice:");
}

id objc_msgSend__deviceHandlesDovePeaceSetup(void *a1, const char *a2, ...)
{
  return _[a1 _deviceHandlesDovePeaceSetup];
}

id objc_msgSend__deviceStoppedRequesting_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_deviceStoppedRequesting:");
}

id objc_msgSend__deviceToPreset_(void *a1, const char *a2, ...)
{
  return [a1 _deviceToPreset:];
}

id objc_msgSend__didFetchDuetSuggestions_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_didFetchDuetSuggestions:");
}

id objc_msgSend__didFinishLoadingLoader_cancelled_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_didFinishLoadingLoader:cancelled:");
}

id objc_msgSend__disableAppSSO(void *a1, const char *a2, ...)
{
  return _[a1 _disableAppSSO];
}

id objc_msgSend__disableEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return [a1 _disableEnhancedDiscovery:];
}

id objc_msgSend__disableRangeableNI(void *a1, const char *a2, ...)
{
  return _[a1 _disableRangeableNI];
}

id objc_msgSend__discoveryDeviceChanged_(void *a1, const char *a2, ...)
{
  return [a1 _discoveryDeviceChanged:];
}

id objc_msgSend__discoveryDeviceFound_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_discoveryDeviceFound:");
}

id objc_msgSend__discoveryDeviceLost_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_discoveryDeviceLost:");
}

id objc_msgSend__discoveryEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryEnsureStarted];
}

id objc_msgSend__discoveryEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryEnsureStopped];
}

id objc_msgSend__discoveryGroupForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_discoveryGroupForDevice:");
}

id objc_msgSend__discoverySessionStateChange_(void *a1, const char *a2, ...)
{
  return [a1 _discoverySessionStateChange:];
}

id objc_msgSend__discoveryUpdateClients(void *a1, const char *a2, ...)
{
  return _[a1 _discoveryUpdateClients];
}

id objc_msgSend__discoveryUpdateCombined_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_discoveryUpdateCombined:");
}

id objc_msgSend__enableEnhancedDiscovery_useCase_(void *a1, const char *a2, ...)
{
  return [a1 _enableEnhancedDiscovery:useCase:];
}

id objc_msgSend__enableRangeableIfNeededNI(void *a1, const char *a2, ...)
{
  return _[a1 _enableRangeableIfNeededNI];
}

id objc_msgSend__endpoint(void *a1, const char *a2, ...)
{
  return _[a1 _endpoint];
}

id objc_msgSend__enhancedDiscoveryScreenChange_(void *a1, const char *a2, ...)
{
  return [a1 _enhancedDiscoveryScreenChange:];
}

id objc_msgSend__ensureCbDiscoveryStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureCbDiscoveryStopped];
}

id objc_msgSend__ensureClientStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensureClientStarted];
}

id objc_msgSend__ensureClientStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureClientStopped];
}

id objc_msgSend__ensureKeychainCleaned_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_ensureKeychainCleaned:");
}

id objc_msgSend__ensurePeriodicVerifyTimerStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePeriodicVerifyTimerStarted];
}

id objc_msgSend__ensurePeriodicVerifyTimerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePeriodicVerifyTimerStopped];
}

id objc_msgSend__ensurePushStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePushStarted];
}

id objc_msgSend__ensurePushStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensurePushStopped];
}

id objc_msgSend__ensureServerStarted(void *a1, const char *a2, ...)
{
  return _[a1 _ensureServerStarted];
}

id objc_msgSend__ensureServerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureServerStopped];
}

id objc_msgSend__ensureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureStopped];
}

id objc_msgSend__ensureThrottledRetryTimerStartedWithSuggestedDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_ensureThrottledRetryTimerStartedWithSuggestedDelay:");
}

id objc_msgSend__ensureThrottledRetryTimerStopped(void *a1, const char *a2, ...)
{
  return _[a1 _ensureThrottledRetryTimerStopped];
}

id objc_msgSend__entitled_state_label_(void *a1, const char *a2, ...)
{
  return [a1 _entitled:state:label:];
}

id objc_msgSend__entitledService_state_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_entitledService:state:")];
}

id objc_msgSend__enumerateRemoteObjectProxiesUsingBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_enumerateRemoteObjectProxiesUsingBlock:");
}

id objc_msgSend__everyoneModeExpiryDate(void *a1, const char *a2, ...)
{
  return _[a1 _everyoneModeExpiryDate];
}

id objc_msgSend__everyoneModeExpiryInterval(void *a1, const char *a2, ...)
{
  return _[a1 _everyoneModeExpiryInterval];
}

id objc_msgSend__existingLoaderForSectionType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_existingLoaderForSectionType:");
}

id objc_msgSend__expireEveryoneModeAndOnlySetDefault_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_expireEveryoneModeAndOnlySetDefault:");
}

id objc_msgSend__extractTextFromFileURL_(void *a1, const char *a2, ...)
{
  return [a1 _extractTextFromFileURL:];
}

id objc_msgSend__extractTextFromPDFFileURL_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_extractTextFromPDFFileURL:");
}

id objc_msgSend__extractTextFromTextFileURL_(void *a1, const char *a2, ...)
{
  return [a1 _extractTextFromTextFileURL:];
}

id objc_msgSend__fastScanStart_(void *a1, const char *a2, ...)
{
  return [a1 _fastScanStart:];
}

id objc_msgSend__fastScanStop_reset_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_fastScanStop:reset:");
}

id objc_msgSend__fetchDuetSuggestionsWithPreheating_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_fetchDuetSuggestionsWithPreheating:");
}

id objc_msgSend__fetchShortcutWorkflowsForMatchingDictionaries_resolvedActivityItems_hostBundleID_iconSize_iconScale_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_fetchShortcutWorkflowsForMatchingDictionaries:resolvedActivityItems:hostBundleID:iconSize:iconScale:error:");
}

id objc_msgSend__fetchSuggestionsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSuggestionsIfNeeded];
}

id objc_msgSend__fetchSymptomsReport(void *a1, const char *a2, ...)
{
  return _[a1 _fetchSymptomsReport];
}

id objc_msgSend__fillXpcDictionaryDescriptor_descriptor_metaData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_fillXpcDictionaryDescriptor:descriptor:metaData:");
}

id objc_msgSend__filterForSharableURLs_(void *a1, const char *a2, ...)
{
  return [a1 _filterForSharableURLs:];
}

id objc_msgSend__firstMatchingDocumentProxyForActivityItems_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_firstMatchingDocumentProxyForActivityItems:");
}

id objc_msgSend__foundDevice_advertisementData_rssi_fields_(void *a1, const char *a2, ...)
{
  return [a1 _foundDevice:advertisementData:rssi:fields:];
}

id objc_msgSend__getInteractionsFromDBPerPeopleSuggestion_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_getInteractionsFromDBPerPeopleSuggestion:completion:");
}

id objc_msgSend__getMainActivityPerBundleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_getMainActivityPerBundleID:");
}

id objc_msgSend__groupActivitiesByBundleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_groupActivitiesByBundleID:");
}

id objc_msgSend__handleAWDLTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleAWDLTimerFired];
}

id objc_msgSend__handleAccountIdentifierValidationRecordMismatch(void *a1, const char *a2, ...)
{
  return _[a1 _handleAccountIdentifierValidationRecordMismatch];
}

id objc_msgSend__handleAppleIDChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDChangedNotification];
}

id objc_msgSend__handleAppleIDSignedInNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDSignedInNotification];
}

id objc_msgSend__handleAppleIDSignedOutNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleAppleIDSignedOutNotification];
}

id objc_msgSend__handleCertificate_intermediateCertificate_withTrustResult_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleCertificate:intermediateCertificate:withTrustResult:error:");
}

id objc_msgSend__handleCertificateCreateResponseError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleCertificateCreateResponseError:");
}

id objc_msgSend__handleCertificateFetchResponseError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleCertificateFetchResponseError:");
}

id objc_msgSend__handleCertificateStatusUpdate_forAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleCertificateStatusUpdate:forAppleID:");
}

id objc_msgSend__handleFindPersonResponse_forRequest_emailOrPhone_withError_queue_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleFindPersonResponse:forRequest:emailOrPhone:withError:queue:completion:");
}

id objc_msgSend__handleGSTokenIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleGSTokenIsAvailable];
}

id objc_msgSend__handleInfoResponse_forAppleID_infoRequest_certificateSerialNumber_withError_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleInfoResponse:forAppleID:infoRequest:certificateSerialNumber:withError:completion:");
}

id objc_msgSend__handleKeyBagFirstUnlockNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyBagFirstUnlockNotification];
}

id objc_msgSend__handleKeyPairAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyPairAvailable];
}

id objc_msgSend__handleKeyVerificationFailure(void *a1, const char *a2, ...)
{
  return _[a1 _handleKeyVerificationFailure];
}

id objc_msgSend__handlePeriodicVerifyTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handlePeriodicVerifyTimerFired];
}

id objc_msgSend__handlePolicyChange(void *a1, const char *a2, ...)
{
  return _[a1 _handlePolicyChange];
}

id objc_msgSend__handleReceivedCertificate(void *a1, const char *a2, ...)
{
  return _[a1 _handleReceivedCertificate];
}

id objc_msgSend__handleReceivedCertificateToken_privateKeyPersistentReference_forAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleReceivedCertificateToken:privateKeyPersistentReference:forAppleID:");
}

id objc_msgSend__handleReceivedIdentity_forAppleID_identityRequest_withError_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleReceivedIdentity:forAppleID:identityRequest:withError:completion:");
}

id objc_msgSend__handleSelectedNode_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleSelectedNode:session:");
}

id objc_msgSend__handleServerError_withStatusCode_nextSuggestedAttemptDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleServerError:withStatusCode:nextSuggestedAttemptDelay:");
}

id objc_msgSend__handleServerTaskCompletionWithError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleServerTaskCompletionWithError:");
}

id objc_msgSend__handleThrottledRetryTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 _handleThrottledRetryTimerFired];
}

id objc_msgSend__handleUILockStatusChangedNotification(void *a1, const char *a2, ...)
{
  return _[a1 _handleUILockStatusChangedNotification];
}

id objc_msgSend__handleURLRequestIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _handleURLRequestIsAvailable];
}

id objc_msgSend__handleUntrustedAppleIDCertificateChainForIdentity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleUntrustedAppleIDCertificateChainForIdentity:");
}

id objc_msgSend__handleUpdateForPoliciesByBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_handleUpdateForPoliciesByBundleIdentifier:");
}

id objc_msgSend__hapticsEnsurePrepared(void *a1, const char *a2, ...)
{
  return _[a1 _hapticsEnsurePrepared];
}

id objc_msgSend__hapticsFireNotificationSuccess(void *a1, const char *a2, ...)
{
  return _[a1 _hapticsFireNotificationSuccess];
}

id objc_msgSend__hasCollaborationEntitlementForConnection_(void *a1, const char *a2, ...)
{
  return [a1 _hasCollaborationEntitlementForConnection:];
}

id objc_msgSend__helpersClientPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_helpersClientPairingSucceeded:completion:");
}

id objc_msgSend__homePodEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_homePodEnsureStarted:completion:");
}

id objc_msgSend__homePodHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_homePodHandleResponse:completion:");
}

id objc_msgSend__identificationCheckFlagsAndACL(void *a1, const char *a2, ...)
{
  return _[a1 _identificationCheckFlagsAndACL];
}

id objc_msgSend__identificationDecryptActivityLevel_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationDecryptActivityLevel:device:authTag:identity:");
}

id objc_msgSend__identificationDecryptAudioRoutingScoreData_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationDecryptAudioRoutingScoreData:device:authTag:identity:");
}

id objc_msgSend__identificationDecryptHotspotData_device_authTag_identity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationDecryptHotspotData:device:authTag:identity:");
}

id objc_msgSend__identificationEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _identificationEnsureStarted];
}

id objc_msgSend__identificationEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _identificationEnsureStopped];
}

id objc_msgSend__identificationGetIdentities(void *a1, const char *a2, ...)
{
  return _[a1 _identificationGetIdentities];
}

id objc_msgSend__identificationHandleDeviceFound_flags_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationHandleDeviceFound:flags:");
}

id objc_msgSend__identificationHandleDeviceLost_flags_(void *a1, const char *a2, ...)
{
  return [a1 _identificationHandleDeviceLost:flags:];
}

id objc_msgSend__identificationHandleDiscoveryStop(void *a1, const char *a2, ...)
{
  return _[a1 _identificationHandleDiscoveryStop];
}

id objc_msgSend__identificationIdentifyDevice_sfDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationIdentifyDevice:sfDevice:");
}

id objc_msgSend__identificationReIdentify(void *a1, const char *a2, ...)
{
  return _[a1 _identificationReIdentify];
}

id objc_msgSend__identificationReIdentifySameAccountDevices_type_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_identificationReIdentifySameAccountDevices:type:");
}

id objc_msgSend__identifier(void *a1, const char *a2, ...)
{
  return _[a1 _identifier];
}

id objc_msgSend__identityForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _identityForAppleID:];
}

id objc_msgSend__idsAppleTVCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsAppleTVCount];
}

id objc_msgSend__idsBluetoothDeviceIDsForAnnouncements(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForAnnouncements];
}

id objc_msgSend__idsBluetoothDeviceIDsForHomePods(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForHomePods];
}

id objc_msgSend__idsBluetoothDeviceIDsForLEPipe(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForLEPipe];
}

id objc_msgSend__idsBluetoothDeviceIDsForMe(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForMe];
}

id objc_msgSend__idsBluetoothDeviceIDsForOneness(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForOneness];
}

id objc_msgSend__idsBluetoothDeviceIDsForSMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSMSRelay];
}

id objc_msgSend__idsBluetoothDeviceIDsForSharing(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSharing];
}

id objc_msgSend__idsBluetoothDeviceIDsForSharingLocked(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForSharingLocked];
}

id objc_msgSend__idsBluetoothDeviceIDsForiMessage(void *a1, const char *a2, ...)
{
  return _[a1 _idsBluetoothDeviceIDsForiMessage];
}

id objc_msgSend__idsContinuityDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsContinuityDeviceCount];
}

id objc_msgSend__idsDeviceArray(void *a1, const char *a2, ...)
{
  return _[a1 _idsDeviceArray];
}

id objc_msgSend__idsDeviceArrayLocked(void *a1, const char *a2, ...)
{
  return _[a1 _idsDeviceArrayLocked];
}

id objc_msgSend__idsDeviceIDForBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 _idsDeviceIDForBluetoothID:];
}

id objc_msgSend__idsEnsureCoalescersStopped(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureCoalescersStopped];
}

id objc_msgSend__idsEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureStarted];
}

id objc_msgSend__idsEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureStopped];
}

id objc_msgSend__idsEnsureSynced(void *a1, const char *a2, ...)
{
  return _[a1 _idsEnsureSynced];
}

id objc_msgSend__idsHasDefaultDevice(void *a1, const char *a2, ...)
{
  return _[a1 _idsHasDefaultDevice];
}

id objc_msgSend__idsHomePodCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsHomePodCount];
}

id objc_msgSend__idsLegacyClientDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsLegacyClientDeviceCount];
}

id objc_msgSend__idsLegacyHostDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsLegacyHostDeviceCount];
}

id objc_msgSend__idsMeDeviceChanged(void *a1, const char *a2, ...)
{
  return _[a1 _idsMeDeviceChanged];
}

id objc_msgSend__idsSendDashboardEntryToCompanion_(void *a1, const char *a2, ...)
{
  return [a1 _idsSendDashboardEntryToCompanion:];
}

id objc_msgSend__idsSendStateUpdate_asWaking_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_idsSendStateUpdate:asWaking:");
}

id objc_msgSend__idsShouldAdvertiseNearbyInfo(void *a1, const char *a2, ...)
{
  return _[a1 _idsShouldAdvertiseNearbyInfo];
}

id objc_msgSend__idsShouldEncryptActivityLevel(void *a1, const char *a2, ...)
{
  return _[a1 _idsShouldEncryptActivityLevel];
}

id objc_msgSend__idsTetheringClientDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsTetheringClientDeviceCount];
}

id objc_msgSend__idsTetheringHostDeviceCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsTetheringHostDeviceCount];
}

id objc_msgSend__idsTimerInfoInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _idsTimerInfoInvalidate];
}

id objc_msgSend__idsTriggerSync(void *a1, const char *a2, ...)
{
  return _[a1 _idsTriggerSync];
}

id objc_msgSend__idsTriggerSyncForAnimation_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_idsTriggerSyncForAnimation:");
}

id objc_msgSend__idsUpdateConnectedState(void *a1, const char *a2, ...)
{
  return _[a1 _idsUpdateConnectedState];
}

id objc_msgSend__idsVisionOS1Count(void *a1, const char *a2, ...)
{
  return _[a1 _idsVisionOS1Count];
}

id objc_msgSend__idsVisionOS2OrHigherCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsVisionOS2OrHigherCount];
}

id objc_msgSend__idsWatchCount(void *a1, const char *a2, ...)
{
  return _[a1 _idsWatchCount];
}

id objc_msgSend__imageData(void *a1, const char *a2, ...)
{
  return _[a1 _imageData];
}

id objc_msgSend__instructHostToPerformAirDropActivityWithNoContentView_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_instructHostToPerformAirDropActivityWithNoContentView:session:");
}

id objc_msgSend__instructHostToPerformExtensionActivity_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_instructHostToPerformExtensionActivity:session:");
}

id objc_msgSend__instructHostToPerformHostActivity_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_instructHostToPerformHostActivity:session:");
}

id objc_msgSend__instructHostToPerformShortcutActivity_singleUseToken_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_instructHostToPerformShortcutActivity:singleUseToken:session:");
}

id objc_msgSend__instructHostToPerformUserDefaultsActivityForCategory_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_instructHostToPerformUserDefaultsActivityForCategory:session:");
}

id objc_msgSend__invalidate(void *a1, const char *a2, ...)
{
  return _[a1 _invalidate];
}

id objc_msgSend__invalidateAWDLTimer(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAWDLTimer];
}

id objc_msgSend__invalidateAssertions(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateAssertions];
}

id objc_msgSend__invalidateCurrentRequest(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateCurrentRequest];
}

id objc_msgSend__invalidateWatchDiscoveryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _invalidateWatchDiscoveryIfNeeded];
}

id objc_msgSend__invalidateWiFiRequest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_invalidateWiFiRequest:");
}

id objc_msgSend__isBuiltinDerived(void *a1, const char *a2, ...)
{
  return _[a1 _isBuiltinDerived];
}

id objc_msgSend__isDeviceMountedAndScreenOff(void *a1, const char *a2, ...)
{
  return _[a1 _isDeviceMountedAndScreenOff];
}

id objc_msgSend__isEveryoneModeExpired(void *a1, const char *a2, ...)
{
  return _[a1 _isEveryoneModeExpired];
}

id objc_msgSend__isTaskInfoValid(void *a1, const char *a2, ...)
{
  return _[a1 _isTaskInfoValid];
}

id objc_msgSend__keychainCleanupTag(void *a1, const char *a2, ...)
{
  return _[a1 _keychainCleanupTag];
}

id objc_msgSend__launchAppWithMachServiceName_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_launchAppWithMachServiceName:");
}

id objc_msgSend__legacyBrowserEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _legacyBrowserEnsureStopped];
}

id objc_msgSend__legacyBrowserShouldBrowse(void *a1, const char *a2, ...)
{
  return _[a1 _legacyBrowserShouldBrowse];
}

id objc_msgSend__legacyBrowserShouldScan(void *a1, const char *a2, ...)
{
  return _[a1 _legacyBrowserShouldScan];
}

id objc_msgSend__legacyBrowserShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _legacyBrowserShouldStart];
}

id objc_msgSend__legacyBrowswerUpdateD2DState(void *a1, const char *a2, ...)
{
  return _[a1 _legacyBrowswerUpdateD2DState];
}

id objc_msgSend__legacy_serverRespondInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_legacy_serverRespondInfo:");
}

id objc_msgSend__loadActionProxy_configuration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadActionProxy:configuration:");
}

id objc_msgSend__loadAirDropProxy_forAirDropNode_configuration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadAirDropProxy:forAirDropNode:configuration:");
}

id objc_msgSend__loadGroupContactIdentityImage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadGroupContactIdentityImage:");
}

id objc_msgSend__loadIconForSuggestionNode_outIcon_outIconData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadIconForSuggestionNode:outIcon:outIconData:");
}

id objc_msgSend__loadPresentableActivitiesForAuditToken_(void *a1, const char *a2, ...)
{
  return [a1 _loadPresentableActivitiesForAuditToken:];
}

id objc_msgSend__loadPresentableActivitiesForSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadPresentableActivitiesForSession:");
}

id objc_msgSend__loadProxies_withTimeLimit_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadProxies:withTimeLimit:");
}

id objc_msgSend__loadProxySectionWithType_(void *a1, const char *a2, ...)
{
  return [a1 _loadProxySectionWithType:];
}

id objc_msgSend__loadSharingProxy_configuration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_loadSharingProxy:configuration:");
}

id objc_msgSend__loadTransferStore(void *a1, const char *a2, ...)
{
  return _[a1 _loadTransferStore];
}

id objc_msgSend__localAddressAndPort(void *a1, const char *a2, ...)
{
  return _[a1 _localAddressAndPort];
}

id objc_msgSend__lockStateHandleMessage_(void *a1, const char *a2, ...)
{
  return [a1 _lockStateHandleMessage:];
}

id objc_msgSend__lockStateUpdate_(void *a1, const char *a2, ...)
{
  return [a1 _lockStateUpdate:];
}

id objc_msgSend__logCategoryCreateWithLabel_sessionID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_logCategoryCreateWithLabel:sessionID:");
}

id objc_msgSend__lp_simplifiedDisplayString(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_lp_simplifiedDisplayString");
}

id objc_msgSend__messageFromPowerSource_(void *a1, const char *a2, ...)
{
  return [a1 _messageFromPowerSource:];
}

id objc_msgSend__messageHandleAllUpdate_(void *a1, const char *a2, ...)
{
  return [a1 _messageHandleAllUpdate:];
}

id objc_msgSend__messageHandleDashboardEntry_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_messageHandleDashboardEntry:");
}

id objc_msgSend__messageHandleIncomingData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_messageHandleIncomingData:");
}

id objc_msgSend__messageHandlePowerSourceUpdate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_messageHandlePowerSourceUpdate:");
}

id objc_msgSend__messageIDAdd_(void *a1, const char *a2, ...)
{
  return [a1 _messageIDAdd:];
}

id objc_msgSend__messageIDRemove_(void *a1, const char *a2, ...)
{
  return [a1 _messageIDRemove:];
}

id objc_msgSend__metaInfoValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 _metaInfoValueForKey:];
}

id objc_msgSend__motionEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _motionEnsureStarted];
}

id objc_msgSend__motionEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _motionEnsureStopped];
}

id objc_msgSend__motionShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _motionShouldStart];
}

id objc_msgSend__motionUpdate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_motionUpdate:)];
}

id objc_msgSend__moveDefaultApplicationToFrontForURL_activities_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_moveDefaultApplicationToFrontForURL:activities:");
}

id objc_msgSend__multipleUsersLoggedIn(void *a1, const char *a2, ...)
{
  return _[a1 _multipleUsersLoggedIn];
}

id objc_msgSend__myAppleID(void *a1, const char *a2, ...)
{
  return _[a1 _myAppleID];
}

id objc_msgSend__nanoRegistryRegisterChangesForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_nanoRegistryRegisterChangesForDevice:");
}

id objc_msgSend__nanoRegistryUnregisterChanges(void *a1, const char *a2, ...)
{
  return _[a1 _nanoRegistryUnregisterChanges];
}

id objc_msgSend__nearbyNetworkTypeForHotspotNetworkType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_nearbyNetworkTypeForHotspotNetworkType:");
}

id objc_msgSend__newDeviceOrRegion_region_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_newDeviceOrRegion:region:");
}

id objc_msgSend__newZeroingDataWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 _newZeroingDataWithBytes:x0 length:x1];
}

id objc_msgSend__notifyCameraConfigChange(void *a1, const char *a2, ...)
{
  return _[a1 _notifyCameraConfigChange];
}

id objc_msgSend__notifyRegionLost_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_notifyRegionLost:");
}

id objc_msgSend__openSetupURL_(void *a1, const char *a2, ...)
{
  return [a1 _openSetupURL:];
}

id objc_msgSend__orderedAvailableActivitiesForAuditToken_WithMatchingContextCustomizationBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_orderedAvailableActivitiesForAuditToken:WithMatchingContextCustomizationBlock:");
}

id objc_msgSend__parseCreateCertificateResponse_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_parseCreateCertificateResponse:error:");
}

id objc_msgSend__parseFetchCertificateResponse_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_parseFetchCertificateResponse:error:");
}

id objc_msgSend__parseFindPersonResponse_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_parseFindPersonResponse:error:");
}

id objc_msgSend__parseGetMyInfoResponse_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_parseGetMyInfoResponse:error:");
}

id objc_msgSend__parseServerResponse_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_parseServerResponse:error:");
}

id objc_msgSend__peerFoundInStateInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_peerFoundInStateInfo:");
}

id objc_msgSend__peopleSuggestionForIdentifier_outIndex_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_peopleSuggestionForIdentifier:outIndex:");
}

id objc_msgSend__peopleSuggestionNodeForNodeIdentifier_outIndex_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_peopleSuggestionNodeForNodeIdentifier:outIndex:");
}

id objc_msgSend__performKeyVerificationForIdentity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performKeyVerificationForIdentity:");
}

id objc_msgSend__performKeychainCount(void *a1, const char *a2, ...)
{
  return _[a1 _performKeychainCount];
}

id objc_msgSend__performLaunchServicesOpenWithDocumentOpenURL_launchServiceOptions_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performLaunchServicesOpenWithDocumentOpenURL:launchServiceOptions:completion:");
}

id objc_msgSend__performMigrations(void *a1, const char *a2, ...)
{
  return _[a1 _performMigrations];
}

id objc_msgSend__performOtherTaskWithInfo_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performOtherTaskWithInfo:completion:");
}

id objc_msgSend__performSelectedActivity_inSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performSelectedActivity:inSession:");
}

id objc_msgSend__performServerTaskWithInfo_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performServerTaskWithInfo:completion:")];
}

id objc_msgSend__performServiceInitiatedActivityInServiceWithActivity_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_performServiceInitiatedActivityInServiceWithActivity:session:");
}

id objc_msgSend__personInfoWithEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_personInfoWithEmailOrPhone:queue:completion:");
}

id objc_msgSend__pickableRoutesChanged(void *a1, const char *a2, ...)
{
  return _[a1 _pickableRoutesChanged];
}

id objc_msgSend__pinPairHandleRequest_(void *a1, const char *a2, ...)
{
  return [a1 _pinPairHandleRequest:];
}

id objc_msgSend__plugIn(void *a1, const char *a2, ...)
{
  return _[a1 _plugIn];
}

id objc_msgSend__postDeviceSetupNotificationForDevice_present_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_postDeviceSetupNotificationForDevice:present:");
}

id objc_msgSend__postNotificationForWombatState_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_postNotificationForWombatState:");
}

id objc_msgSend__postNotificationWithName_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_postNotificationWithName:");
}

id objc_msgSend__postPowerStatusNotificationForPowerSource_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_postPowerStatusNotificationForPowerSource:");
}

id objc_msgSend__postUserAlertForName_altDSID_logCategory_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_postUserAlertForName:altDSID:logCategory:completion:");
}

id objc_msgSend__powerSourceChanged_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_powerSourceChanged:");
}

id objc_msgSend__powerSourceContainerUpdate_device_batteryInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_powerSourceContainerUpdate:device:batteryInfo:");
}

id objc_msgSend__powerSourceEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _powerSourceEnsureStopped];
}

id objc_msgSend__powerSourceLost_(void *a1, const char *a2, ...)
{
  return [a1 _powerSourceLost:];
}

id objc_msgSend__powerSourceUpdatePairedDeviceInfo_(void *a1, const char *a2, ...)
{
  return [a1 _powerSourceUpdatePairedDeviceInfo:];
}

id objc_msgSend__powerSourcesUpdateForDevice_changes_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_powerSourcesUpdateForDevice:changes:");
}

id objc_msgSend__prefsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _prefsChanged];
}

id objc_msgSend__prefsChanged_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_prefsChanged:");
}

id objc_msgSend__primaryAccountChanged(void *a1, const char *a2, ...)
{
  return _[a1 _primaryAccountChanged];
}

id objc_msgSend__processRequestQueue(void *a1, const char *a2, ...)
{
  return _[a1 _processRequestQueue];
}

id objc_msgSend__provideFeedbackForNodeAtIndex_bundleID_suggestion_selectedActionBundleID_abandoned_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_provideFeedbackForNodeAtIndex:bundleID:suggestion:selectedActionBundleID:abandoned:");
}

id objc_msgSend__proxiedNotificationDidDismiss_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proxiedNotificationDidDismiss:reason:");
}

id objc_msgSend__proximityChanged_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityChanged:");
}

id objc_msgSend__proximityClientDeviceDidUnTrigger_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceDidUnTrigger:");
}

id objc_msgSend__proximityClientDeviceEnteredImmediate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceEnteredImmediate:");
}

id objc_msgSend__proximityClientDeviceEnteredNearby_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceEnteredNearby:");
}

id objc_msgSend__proximityClientDeviceExitedImmediate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceExitedImmediate:");
}

id objc_msgSend__proximityClientDeviceExitedNearby_(void *a1, const char *a2, ...)
{
  return [a1 _proximityClientDeviceExitedNearby:];
}

id objc_msgSend__proximityClientDeviceUpdated_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceUpdated:");
}

id objc_msgSend__proximityClientDeviceWasDismissed_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceWasDismissed:reason:");
}

id objc_msgSend__proximityClientDeviceWasSelected_(void *a1, const char *a2, ...)
{
  return [a1 _proximityClientDeviceWasSelected:];
}

id objc_msgSend__proximityClientDeviceWillTrigger_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientDeviceWillTrigger:");
}

id objc_msgSend__proximityClientSeedInitialDevices_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proximityClientSeedInitialDevices:");
}

id objc_msgSend__proximityClientSeedWillTriggerDeviceIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 _proximityClientSeedWillTriggerDeviceIfNeeded:];
}

id objc_msgSend__proximityEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _proximityEnsureStarted];
}

id objc_msgSend__proximityEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _proximityEnsureStopped];
}

id objc_msgSend__proxySectionForType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_proxySectionForType:");
}

id objc_msgSend__publish(void *a1, const char *a2, ...)
{
  return _[a1 _publish];
}

id objc_msgSend__queue(void *a1, const char *a2, ...)
{
  return _[a1 _queue];
}

id objc_msgSend__queueWithFallbackQOS(void *a1, const char *a2, ...)
{
  return _[a1 _queueWithFallbackQOS];
}

id objc_msgSend__readPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _readPrefs];
}

id objc_msgSend__registerForCellularSlicingAvailabilityNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForCellularSlicingAvailabilityNotifications];
}

id objc_msgSend__registerForMagicMountUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _registerForMagicMountUpdates];
}

id objc_msgSend__registerForWombatActivityNotification(void *a1, const char *a2, ...)
{
  return _[a1 _registerForWombatActivityNotification];
}

id objc_msgSend__registerForWombatActivityNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _registerForWombatActivityNotifications];
}

id objc_msgSend__remoteAddressAndPort(void *a1, const char *a2, ...)
{
  return _[a1 _remoteAddressAndPort];
}

id objc_msgSend__remoteObjectProxyForConnection_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_remoteObjectProxyForConnection:");
}

id objc_msgSend__remoteObjectProxyForConnection_usingBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_remoteObjectProxyForConnection:usingBlock:");
}

id objc_msgSend__removeAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _removeAppleID:];
}

id objc_msgSend__removeB389sFromTriggeredDevices(void *a1, const char *a2, ...)
{
  return _[a1 _removeB389sFromTriggeredDevices];
}

id objc_msgSend__removeDevice_(void *a1, const char *a2, ...)
{
  return [a1 _removeDevice:];
}

id objc_msgSend__removeFailedIndexes_forProxySection_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_removeFailedIndexes:forProxySection:");
}

id objc_msgSend__removeObservers(void *a1, const char *a2, ...)
{
  return _[a1 _removeObservers];
}

id objc_msgSend__removeSecondaryActivities_bundleIDToActivities_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_removeSecondaryActivities:bundleIDToActivities:");
}

id objc_msgSend__renewAccountIfNecessaryForCFUItems_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_renewAccountIfNecessaryForCFUItems:completion:");
}

id objc_msgSend__repairHandleCFUItemsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCFUItemsChanged];
}

id objc_msgSend__repairHandleCNSStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCNSStateChanged];
}

id objc_msgSend__repairHandleCompletion(void *a1, const char *a2, ...)
{
  return _[a1 _repairHandleCompletion];
}

id objc_msgSend__repairProblemFlagsChanged(void *a1, const char *a2, ...)
{
  return _[a1 _repairProblemFlagsChanged];
}

id objc_msgSend__repairSilentStart_(void *a1, const char *a2, ...)
{
  return [a1 _repairSilentStart:];
}

id objc_msgSend__repairUpdateIDSCache(void *a1, const char *a2, ...)
{
  return _[a1 _repairUpdateIDSCache];
}

id objc_msgSend__repairVPNError_(void *a1, const char *a2, ...)
{
  return [a1 _repairVPNError:];
}

id objc_msgSend__reportError_(void *a1, const char *a2, ...)
{
  return [a1 _reportError:];
}

id objc_msgSend__reportProgress_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_reportProgress:");
}

id objc_msgSend__reportProgress_info_(void *a1, const char *a2, ...)
{
  return [a1 _reportProgress:info:];
}

id objc_msgSend__reportProgressTriggeredDevice_(void *a1, const char *a2, ...)
{
  return [a1 _reportProgressTriggeredDevice:];
}

id objc_msgSend__requestIdentityForAppleID_certificateToken_privateKeyPersistentReference_withCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_requestIdentityForAppleID:certificateToken:privateKeyPersistentReference:withCompletion:");
}

id objc_msgSend__requestInfoForAppleID_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_requestInfoForAppleID:completion:");
}

id objc_msgSend__requestSandboxExtensionForDonatedImage_(void *a1, const char *a2, ...)
{
  return [a1 _requestSandboxExtensionForDonatedImage:];
}

id objc_msgSend__resetAllStates(void *a1, const char *a2, ...)
{
  return _[a1 _resetAllStates];
}

id objc_msgSend__resetManagerState(void *a1, const char *a2, ...)
{
  return _[a1 _resetManagerState];
}

id objc_msgSend__resetTriggers(void *a1, const char *a2, ...)
{
  return _[a1 _resetTriggers];
}

id objc_msgSend__responseHandlerWithIdentity_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_responseHandlerWithIdentity:error:")];
}

id objc_msgSend__restartAWDLTimer(void *a1, const char *a2, ...)
{
  return _[a1 _restartAWDLTimer];
}

id objc_msgSend__retrievePoliciesForBundleIdentifiers_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_retrievePoliciesForBundleIdentifiers:");
}

id objc_msgSend__riServerEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_riServerEnsureStarted:completion:")];
}

id objc_msgSend__routeForDevice_(void *a1, const char *a2, ...)
{
  return [a1 _routeForDevice:];
}

id objc_msgSend__routes(void *a1, const char *a2, ...)
{
  return _[a1 _routes];
}

id objc_msgSend__rpCompanionLinkDeviceForSFDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_rpCompanionLinkDeviceForSFDevice:");
}

id objc_msgSend__rtiEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _rtiEnsureStopped];
}

id objc_msgSend__rtiHandleInputDidBeginWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_rtiHandleInputDidBeginWithFlags:sessionInfo:");
}

id objc_msgSend__run(void *a1, const char *a2, ...)
{
  return _[a1 _run];
}

id objc_msgSend__runAdvertiser(void *a1, const char *a2, ...)
{
  return _[a1 _runAdvertiser];
}

id objc_msgSend__runCallHandoffStart_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_runCallHandoffStart:");
}

id objc_msgSend__runCallHandoffStartDelayTimer(void *a1, const char *a2, ...)
{
  return _[a1 _runCallHandoffStartDelayTimer];
}

id objc_msgSend__runConfirm(void *a1, const char *a2, ...)
{
  return _[a1 _runConfirm];
}

id objc_msgSend__runConnectGuestHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 _runConnectGuestHeadphones];
}

id objc_msgSend__runGuestiOSConnect(void *a1, const char *a2, ...)
{
  return _[a1 _runGuestiOSConnect];
}

id objc_msgSend__runGuestiOSPairSetupPublic(void *a1, const char *a2, ...)
{
  return _[a1 _runGuestiOSPairSetupPublic];
}

id objc_msgSend__runGuestiOSShareAudio(void *a1, const char *a2, ...)
{
  return _[a1 _runGuestiOSShareAudio];
}

id objc_msgSend__runGuestiOSShareAudioSendRequest(void *a1, const char *a2, ...)
{
  return _[a1 _runGuestiOSShareAudioSendRequest];
}

id objc_msgSend__runInit(void *a1, const char *a2, ...)
{
  return _[a1 _runInit];
}

id objc_msgSend__runScannerNearbyInfo(void *a1, const char *a2, ...)
{
  return _[a1 _runScannerNearbyInfo];
}

id objc_msgSend__runScannerProxPairing(void *a1, const char *a2, ...)
{
  return _[a1 _runScannerProxPairing];
}

id objc_msgSend__runSession(void *a1, const char *a2, ...)
{
  return _[a1 _runSession];
}

id objc_msgSend__runShowHeadphonesPairingInstructions(void *a1, const char *a2, ...)
{
  return _[a1 _runShowHeadphonesPairingInstructions];
}

id objc_msgSend__runStateVerify_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_runStateVerify:device:");
}

id objc_msgSend__runWaitForGuestHeadphones(void *a1, const char *a2, ...)
{
  return _[a1 _runWaitForGuestHeadphones];
}

id objc_msgSend__runWaitForGuestHeadphonesPairingMode(void *a1, const char *a2, ...)
{
  return _[a1 _runWaitForGuestHeadphonesPairingMode];
}

id objc_msgSend__runWaitForProxTrigger(void *a1, const char *a2, ...)
{
  return _[a1 _runWaitForProxTrigger];
}

id objc_msgSend__scheduleCheckForEveryoneModeExpiry(void *a1, const char *a2, ...)
{
  return _[a1 _scheduleCheckForEveryoneModeExpiry];
}

id objc_msgSend__scheduleCreateRetryWithDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_scheduleCreateRetryWithDelay:");
}

id objc_msgSend__scheduleFetchCertificateTaskWithDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_scheduleFetchCertificateTaskWithDelay:");
}

id objc_msgSend__scheduleFetchRetryWithDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_scheduleFetchRetryWithDelay:");
}

id objc_msgSend__scheduleLoadingBlock_synchronously_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_scheduleLoadingBlock:synchronously:");
}

id objc_msgSend__scheduleRunAfter_(void *a1, const char *a2, ...)
{
  return [a1 _scheduleRunAfter:];
}

id objc_msgSend__screenLocked(void *a1, const char *a2, ...)
{
  return _[a1 _screenLocked];
}

id objc_msgSend__sendCreateCertificateRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendCreateCertificateRequest];
}

id objc_msgSend__sendFetchCertificateRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendFetchCertificateRequest];
}

id objc_msgSend__sendMessage_frameType_service_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_sendMessage:frameType:service:session:");
}

id objc_msgSend__sendRTIPayload_(void *a1, const char *a2, ...)
{
  return [a1 _sendRTIPayload:];
}

id objc_msgSend__sendRequest(void *a1, const char *a2, ...)
{
  return _[a1 _sendRequest];
}

id objc_msgSend__serverEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _serverEnsureStarted];
}

id objc_msgSend__serverEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _serverEnsureStopped];
}

id objc_msgSend__serverSendTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_serverSendTextSessionDidBegin:");
}

id objc_msgSend__serviceEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _serviceEnsureStarted];
}

id objc_msgSend__serviceEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _serviceEnsureStopped];
}

id objc_msgSend__serviceShouldRequestAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 _serviceShouldRequestAutoFill];
}

id objc_msgSend__serviceShouldStart(void *a1, const char *a2, ...)
{
  return _[a1 _serviceShouldStart];
}

id objc_msgSend__serviceStopRequestingAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 _serviceStopRequestingAutoFill];
}

id objc_msgSend__serviceTimeoutInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 _serviceTimeoutInvalidate];
}

id objc_msgSend__serviceTimeoutStop(void *a1, const char *a2, ...)
{
  return _[a1 _serviceTimeoutStop];
}

id objc_msgSend__sessionHandlePairingSucceededResponse_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_sessionHandlePairingSucceededResponse:");
}

id objc_msgSend__sessionStart_(void *a1, const char *a2, ...)
{
  return [a1 _sessionStart:];
}

id objc_msgSend__sessionStop_(void *a1, const char *a2, ...)
{
  return [a1 _sessionStop:];
}

id objc_msgSend__setAccount_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setAccount:");
}

id objc_msgSend__setAppIsDocumentTypeOwner_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setAppIsDocumentTypeOwner:");
}

id objc_msgSend__setCertificateToken_privateKeyPersistentReference_forAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setCertificateToken:privateKeyPersistentReference:forAppleID:");
}

id objc_msgSend__setContactInfo_validationRecord_forAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setContactInfo:validationRecord:forAppleID:");
}

id objc_msgSend__setCurrentAppleIDContactInfo_validationRecord_(void *a1, const char *a2, ...)
{
  return [a1 _setCurrentAppleIDContactInfo:validationRecord:];
}

id objc_msgSend__setCurrentAppleIDIdentity_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setCurrentAppleIDIdentity:");
}

id objc_msgSend__setIdentity_forAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _setIdentity:forAppleID:];
}

id objc_msgSend__setIdentityLinkedToCurrentUser_forAppleID_(void *a1, const char *a2, ...)
{
  return [a1 _setIdentityLinkedToCurrentUser:forAppleID:];
}

id objc_msgSend__setIncludesAWDL_(void *a1, const char *a2, ...)
{
  return [a1 _setIncludesAWDL:];
}

id objc_msgSend__setLastConnectionDate_(void *a1, const char *a2, ...)
{
  return [a1 _setLastConnectionDate:];
}

id objc_msgSend__setLastSuccessfulConnectionDate_(void *a1, const char *a2, ...)
{
  return [a1 _setLastSuccessfulConnectionDate:];
}

id objc_msgSend__setMetaInfo_(void *a1, const char *a2, ...)
{
  return [a1 _setMetaInfo:];
}

id objc_msgSend__setMetaInfoValue_forKey_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setMetaInfoValue:forKey:");
}

id objc_msgSend__setPassword_(void *a1, const char *a2, ...)
{
  return [a1 _setPassword:];
}

id objc_msgSend__setQueue_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setQueue:");
}

id objc_msgSend__setSandboxExtensionData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setSandboxExtensionData:");
}

id objc_msgSend__setupAssertHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupAssertHandlers];
}

id objc_msgSend__setupBrowseHandlers(void *a1, const char *a2, ...)
{
  return _[a1 _setupBrowseHandlers];
}

id objc_msgSend__setupHandleCreateSession_data_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setupHandleCreateSession:data:");
}

id objc_msgSend__setupHandleSessionCreated_data_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setupHandleSessionCreated:data:");
}

id objc_msgSend__setupHandleSessionEncryptedFrame_type_cnx_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setupHandleSessionEncryptedFrame:type:cnx:");
}

id objc_msgSend__setupHandleSessionMessageType_src_end_cnx_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setupHandleSessionMessageType:src:end:cnx:session:");
}

id objc_msgSend__setupPolicy(void *a1, const char *a2, ...)
{
  return _[a1 _setupPolicy];
}

id objc_msgSend__setupSendCreateSession_cnx_(void *a1, const char *a2, ...)
{
  return [a1 _setupSendCreateSession:cnx];
}

id objc_msgSend__setupSendData_sessionIdentifier_cnx_clientSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_setupSendData:sessionIdentifier:cnx:clientSession:");
}

id objc_msgSend__shortcutActivitiesForMatchingDictionaries_resolvedActivityItems_hostBundleID_configuration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_shortcutActivitiesForMatchingDictionaries:resolvedActivityItems:hostBundleID:configuration:");
}

id objc_msgSend__shouldDeliverDonStateUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _shouldDeliverDonStateUpdates];
}

id objc_msgSend__shouldMediumPromptWithInfo_(void *a1, const char *a2, ...)
{
  return [a1 _shouldMediumPromptWithInfo:];
}

id objc_msgSend__shouldOfferPassword_(void *a1, const char *a2, ...)
{
  return [a1 _shouldOfferPassword:];
}

id objc_msgSend__shouldShowBatteryCard_inDevice_(void *a1, const char *a2, ...)
{
  return [a1 _shouldShowBatteryCard:inDevice:];
}

id objc_msgSend__showsInSystemActionGroup(void *a1, const char *a2, ...)
{
  return _[a1 _showsInSystemActionGroup];
}

id objc_msgSend__siriRemoteMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _siriRemoteMonitorEnsureStarted];
}

id objc_msgSend__siriRemoteMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _siriRemoteMonitorEnsureStopped];
}

id objc_msgSend__slicingLLPHSStateNotificationValueToString_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_slicingLLPHSStateNotificationValueToString:");
}

id objc_msgSend__start(void *a1, const char *a2, ...)
{
  return _[a1 _start];
}

id objc_msgSend__startAWDLWithInfo_(void *a1, const char *a2, ...)
{
  return [a1 _startAWDLWithInfo:];
}

id objc_msgSend__startClockWithResetIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 _startClockWithResetIfNeeded];
}

id objc_msgSend__startPairingUI_autoStart_repair_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_startPairingUI:autoStart:repair:");
}

id objc_msgSend__startRangingIfPeerFoundInStateInfo_awdlUpSameTime_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_startRangingIfPeerFoundInStateInfo:awdlUpSameTime:");
}

id objc_msgSend__startRangingWithNI(void *a1, const char *a2, ...)
{
  return _[a1 _startRangingWithNI];
}

id objc_msgSend__startStatusUI_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_startStatusUI:");
}

id objc_msgSend__startUIWithPhysicalCard_activationCode_testInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_startUIWithPhysicalCard:activationCode:testInfo:");
}

id objc_msgSend__stateDumpString(void *a1, const char *a2, ...)
{
  return _[a1 _stateDumpString];
}

id objc_msgSend__statusInfo(void *a1, const char *a2, ...)
{
  return _[a1 _statusInfo];
}

id objc_msgSend__stop(void *a1, const char *a2, ...)
{
  return _[a1 _stop];
}

id objc_msgSend__stopAWDL(void *a1, const char *a2, ...)
{
  return _[a1 _stopAWDL];
}

id objc_msgSend__stopClock_(void *a1, const char *a2, ...)
{
  return [a1 _stopClock:];
}

id objc_msgSend__stringFromActivityCategory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_stringFromActivityCategory:");
}

id objc_msgSend__supportedDevice_(void *a1, const char *a2, ...)
{
  return [a1 _supportedDevice:];
}

id objc_msgSend__sysMonitorD2DEncryptionIsAvailable(void *a1, const char *a2, ...)
{
  return _[a1 _sysMonitorD2DEncryptionIsAvailable];
}

id objc_msgSend__sysMonitorEnsureStarted(void *a1, const char *a2, ...)
{
  return _[a1 _sysMonitorEnsureStarted];
}

id objc_msgSend__sysMonitorEnsureStopped(void *a1, const char *a2, ...)
{
  return _[a1 _sysMonitorEnsureStopped];
}

id objc_msgSend__sysMonitorFamilyCount(void *a1, const char *a2, ...)
{
  return _[a1 _sysMonitorFamilyCount];
}

id objc_msgSend__sysMonitorFamilyMemberForAltDSID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_sysMonitorFamilyMemberForAltDSID:");
}

id objc_msgSend__sysMonitorFamilyMemberForAppleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_sysMonitorFamilyMemberForAppleID:");
}

id objc_msgSend__systemCanShowUIWithCounterpart_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_systemCanShowUIWithCounterpart:");
}

id objc_msgSend__systemCanTrigger(void *a1, const char *a2, ...)
{
  return _[a1 _systemCanTrigger];
}

id objc_msgSend__systemImageName(void *a1, const char *a2, ...)
{
  return _[a1 _systemImageName];
}

id objc_msgSend__systemStateRegisterObservers(void *a1, const char *a2, ...)
{
  return _[a1 _systemStateRegisterObservers];
}

id objc_msgSend__systemStateUnregisterObservers(void *a1, const char *a2, ...)
{
  return _[a1 _systemStateUnregisterObservers];
}

id objc_msgSend__testDeviceWithParams_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_testDeviceWithParams:");
}

id objc_msgSend__testingRegisterNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _testingRegisterNotifications];
}

id objc_msgSend__throttleEventDidOccur(void *a1, const char *a2, ...)
{
  return _[a1 _throttleEventDidOccur];
}

id objc_msgSend__throttleEventsReachedMax(void *a1, const char *a2, ...)
{
  return _[a1 _throttleEventsReachedMax];
}

id objc_msgSend__throttleMediumAllowsTrigger(void *a1, const char *a2, ...)
{
  return _[a1 _throttleMediumAllowsTrigger];
}

id objc_msgSend__throttleMediumSetTicks_(void *a1, const char *a2, ...)
{
  return [a1 _throttleMediumSetTicks:];
}

id objc_msgSend__thumbnailSize(void *a1, const char *a2, ...)
{
  return _[a1 _thumbnailSize];
}

id objc_msgSend__triggerDeviceProximity_(void *a1, const char *a2, ...)
{
  return [a1 _triggerDeviceProximity:];
}

id objc_msgSend__tvHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_tvHandleResponse:completion:");
}

id objc_msgSend__uiDismissWhenReady_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiDismissWhenReady:reason:");
}

id objc_msgSend__uiShowing(void *a1, const char *a2, ...)
{
  return _[a1 _uiShowing];
}

id objc_msgSend__uiStart_extraInfo_(void *a1, const char *a2, ...)
{
  return [_uiStart:extraInfo:];
}

id objc_msgSend__uiStartAppleTVSetup_extraInfo_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartAppleTVSetup:x0 extraInfo:x1];
}

id objc_msgSend__uiStartAuthenticateAccounts_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartAuthenticateAccounts:];
}

id objc_msgSend__uiStartHomeKitDeviceDetectedWithURL_(void *a1, const char *a2, ...)
{
  return [_uiStartHomeKitDeviceDetectedWithURL:];
}

id objc_msgSend__uiStartIfEnabled_extraInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartIfEnabled:extraInfo:");
}

id objc_msgSend__uiStartPair_extraInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartPair:extraInfo:");
}

id objc_msgSend__uiStartRepair_flags_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartRepair:flags:];
}

id objc_msgSend__uiStartSetupB238_extraInfo_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartSetupB238:x0 extraInfo:x1];
}

id objc_msgSend__uiStartSetupDovePeace_autoStart_(void *a1, const char *a2, ...)
{
  return [_uiStartSetupDovePeace:autoStart:];
}

id objc_msgSend__uiStartSetupWHA_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartSetupWHA:];
}

id objc_msgSend__uiStartSetupWatch_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartSetupWatch:];
}

id objc_msgSend__uiStartSetupiOS_autoStart_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartSetupiOS:autoStart:];
}

id objc_msgSend__uiStartTVLatencyBanner_forActionType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartTVLatencyBanner:forActionType:");
}

id objc_msgSend__uiStartTVLatencySetup_extraInfo_forActionType_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartTVLatencySetup:x0 extraInfo:x1 forActionType:x2];
}

id objc_msgSend__uiStartTVLatencySetup_forActionType_withBLEDevice_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartTVLatencySetup:x0 forActionType:x1 withBLEDevice:x2];
}

id objc_msgSend__uiStartWiFiPasswordSharing_(void *a1, const char *a2, ...)
{
  return [a1 _uiStartWiFiPasswordSharing:];
}

id objc_msgSend__uiStartWithDevice_viewControllerName_label_unlessApps_extraInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:label:unlessApps:extraInfo:");
}

id objc_msgSend__uiStartWithDevice_viewControllerName_xpcEndpoint_label_extraInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:xpcEndpoint:label:extraInfo:");
}

id objc_msgSend__uiStartWithDevice_viewControllerName_xpcEndpoint_label_unlessApps_extraInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStartWithDevice:viewControllerName:xpcEndpoint:label:unlessApps:extraInfo:");
}

id objc_msgSend__uiStop_(void *a1, const char *a2, ...)
{
  return [a1 _uiStop:];
}

id objc_msgSend__uiStopIfNeeded_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uiStopIfNeeded:reason:");
}

id objc_msgSend__uiStopIfNeededWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 _uiStopIfNeededWithDevice:];
}

id objc_msgSend__unitTest_disableExcludingSourceApplicationFromOpenActivities(void *a1, const char *a2, ...)
{
  return [a1 _unitTest_disableExcludingSourceApplicationFromOpenActivities];
}

id objc_msgSend__unlockDeviceFilterChangedForRequest_(void *a1, const char *a2, ...)
{
  return [a1 _unlockDeviceFilterChangedForRequest:];
}

id objc_msgSend__unlockReceivedFrameData_peer_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_unlockReceivedFrameData:peer:device:");
}

id objc_msgSend__unpublish(void *a1, const char *a2, ...)
{
  return _[a1 _unpublish];
}

id objc_msgSend__unregisterForCellularSlicingCapabilityNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForCellularSlicingCapabilityNotifications];
}

id objc_msgSend__unregisterForMagicMountUpdates(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForMagicMountUpdates];
}

id objc_msgSend__unregisterForWombatActivityNotification(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterForWombatActivityNotification];
}

id objc_msgSend__unregisterWombatActivityNotifications(void *a1, const char *a2, ...)
{
  return _[a1 _unregisterWombatActivityNotifications];
}

id objc_msgSend__update(void *a1, const char *a2, ...)
{
  return _[a1 _update];
}

id objc_msgSend__updateAccountInfoPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updateAccountInfoPrefs];
}

id objc_msgSend__updateAdvertisementSuppression_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_updateAdvertisementSuppression:");
}

id objc_msgSend__updateAppleID(void *a1, const char *a2, ...)
{
  return _[a1 _updateAppleID];
}

id objc_msgSend__updateBundleIdentifierMappings(void *a1, const char *a2, ...)
{
  return _[a1 _updateBundleIdentifierMappings];
}

id objc_msgSend__updateCameraState(void *a1, const char *a2, ...)
{
  return _[a1 _updateCameraState];
}

id objc_msgSend__updateCandidateIsNearby(void *a1, const char *a2, ...)
{
  return _[a1 _updateCandidateIsNearby];
}

id objc_msgSend__updateCounterpart_(void *a1, const char *a2, ...)
{
  return [a1 _updateCounterpart:];
}

id objc_msgSend__updateDonState(void *a1, const char *a2, ...)
{
  return _[a1 _updateDonState];
}

id objc_msgSend__updateEveryoneModeExpiryDateOnChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_updateEveryoneModeExpiryDateOnChange:");
}

id objc_msgSend__updateMetaInfoPrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updateMetaInfoPrefs];
}

id objc_msgSend__updateMyInfo(void *a1, const char *a2, ...)
{
  return _[a1 _updateMyInfo];
}

id objc_msgSend__updatePersonInfoCachePrefs(void *a1, const char *a2, ...)
{
  return _[a1 _updatePersonInfoCachePrefs];
}

id objc_msgSend__updateProxiesWithChangeDetails_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_updateProxiesWithChangeDetails:");
}

id objc_msgSend__updateShareSheetHostConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 _updateShareSheetHostConfiguration];
}

id objc_msgSend__updatedSessionInfoWithAppIcon_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_updatedSessionInfoWithAppIcon:");
}

id objc_msgSend__uploadSlotWithVectorData_cgImage_performCATransaction_hostConfiguration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uploadSlotWithVectorData:cgImage:performCATransaction:hostConfiguration:");
}

id objc_msgSend__uploadSlotWithVectorData_sfCGImageData_performCATransaction_hostConfiguration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_uploadSlotWithVectorData:sfCGImageData:performCATransaction:hostConfiguration:");
}

id objc_msgSend__uri(void *a1, const char *a2, ...)
{
  return _[a1 _uri];
}

id objc_msgSend__urlRequestWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _urlRequestWithCompletion:];
}

id objc_msgSend__urlWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 _urlWithCompletion:];
}

id objc_msgSend__useCasesToHexString_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_useCasesToHexString:");
}

id objc_msgSend__useLuxValue(void *a1, const char *a2, ...)
{
  return _[a1 _useLuxValue];
}

id objc_msgSend__useSymptomsReport(void *a1, const char *a2, ...)
{
  return _[a1 _useSymptomsReport];
}

id objc_msgSend__userAlertForMember_logCategory_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_userAlertForMember:logCategory:completion:");
}

id objc_msgSend__userDefaultsKeyForHash_(void *a1, const char *a2, ...)
{
  return [a1 _userDefaultsKeyForHash:];
}

id objc_msgSend__verifyState(void *a1, const char *a2, ...)
{
  return _[a1 _verifyState];
}

id objc_msgSend__wantsOriginalImageColor(void *a1, const char *a2, ...)
{
  return _[a1 _wantsOriginalImageColor];
}

id objc_msgSend__wasOldAgentIdentityQueried(void *a1, const char *a2, ...)
{
  return _[a1 _wasOldAgentIdentityQueried];
}

id objc_msgSend__watchEnsureStarted_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_watchEnsureStarted:completion:");
}

id objc_msgSend__watchFastScanStartIfAllowed_(void *a1, const char *a2, ...)
{
  return [a1 _watchFastScanStartIfAllowed:];
}

id objc_msgSend__watchFastScanStop(void *a1, const char *a2, ...)
{
  return _[a1 _watchFastScanStop];
}

id objc_msgSend__watchFound_(void *a1, const char *a2, ...)
{
  return [a1 _watchFound:];
}

id objc_msgSend__watchHandleResponse_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_watchHandleResponse:completion:");
}

id objc_msgSend__watchMigrating_(void *a1, const char *a2, ...)
{
  return [a1 _watchMigrating:];
}

id objc_msgSend__watchStartMigration_(void *a1, const char *a2, ...)
{
  return [a1 _watchStartMigration:];
}

id objc_msgSend__wristStateHandleMessage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_wristStateHandleMessage:");
}

id objc_msgSend__wristStateUpdate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "_wristStateUpdate:");
}

id objc_msgSend__xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 _xpcConnection];
}

id objc_msgSend_aa_altDSID(void *a1, const char *a2, ...)
{
  return [a1 aa_altDSID];
}

id objc_msgSend_aa_isManagedAppleID(void *a1, const char *a2, ...)
{
  return [a1 aa_isManagedAppleID];
}

id objc_msgSend_aa_primaryAppleAccount(void *a1, const char *a2, ...)
{
  return [a1 aa_primaryAppleAccount];
}

id objc_msgSend_aa_primaryEmail(void *a1, const char *a2, ...)
{
  return [a1 aa_primaryEmail];
}

id objc_msgSend_aa_updatePropertiesForAppleAccount_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "aa_updatePropertiesForAppleAccount:completion:");
}

id objc_msgSend_abandonment(void *a1, const char *a2, ...)
{
  return _[a1 abandonment];
}

id objc_msgSend_abbreviation(void *a1, const char *a2, ...)
{
  return _[a1 abbreviation];
}

id objc_msgSend_abortDevicePairingWithReason_(void *a1, const char *a2, ...)
{
  return [a1 abortDevicePairingWithReason:];
}

id objc_msgSend_abortPairingWithReason_(void *a1, const char *a2, ...)
{
  return [a1 abortPairingWithReason:];
}

id objc_msgSend_absoluteString(void *a1, const char *a2, ...)
{
  return _[a1 absoluteString];
}

id objc_msgSend_absoluteURL(void *a1, const char *a2, ...)
{
  return _[a1 absoluteURL];
}

id objc_msgSend_absoluteURLIfTopLevelFile_isDirectory_base_(void *a1, const char *a2, ...)
{
  return [a1 absoluteURLIfTopLevelFile:x0 isDirectory:x1 base:x2];
}

id objc_msgSend_acceleration(void *a1, const char *a2, ...)
{
  return _[a1 acceleration];
}

id objc_msgSend_accelerometerData(void *a1, const char *a2, ...)
{
  return _[a1 accelerometerData];
}

id objc_msgSend_accept(void *a1, const char *a2, ...)
{
  return _[a1 accept];
}

id objc_msgSend_acceptActionTriggered(void *a1, const char *a2, ...)
{
  return _[a1 acceptActionTriggered];
}

id objc_msgSend_accessibilityCache(void *a1, const char *a2, ...)
{
  return _[a1 accessibilityCache];
}

id objc_msgSend_accessibilityStringForSlotID_(void *a1, const char *a2, ...)
{
  return [a1 accessibilityStringForSlotID:];
}

id objc_msgSend_accessibleURLs(void *a1, const char *a2, ...)
{
  return _[a1 accessibleURLs];
}

id objc_msgSend_accessoryID(void *a1, const char *a2, ...)
{
  return _[a1 accessoryID];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_accountAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 accountAltDSID];
}

id objc_msgSend_accountForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 accountForAppleID:];
}

id objc_msgSend_accountHasPairedPeers(void *a1, const char *a2, ...)
{
  return _[a1 accountHasPairedPeers];
}

id objc_msgSend_accountHasTetheringSources(void *a1, const char *a2, ...)
{
  return _[a1 accountHasTetheringSources];
}

id objc_msgSend_accountID(void *a1, const char *a2, ...)
{
  return _[a1 accountID];
}

id objc_msgSend_accountIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 accountIdentifier];
}

id objc_msgSend_accountName(void *a1, const char *a2, ...)
{
  return _[a1 accountName];
}

id objc_msgSend_accountStatusForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 accountStatusForAppleID:];
}

id objc_msgSend_accountStore(void *a1, const char *a2, ...)
{
  return _[a1 accountStore];
}

id objc_msgSend_accountType(void *a1, const char *a2, ...)
{
  return _[a1 accountType];
}

id objc_msgSend_accountTypeWithAccountTypeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 accountTypeWithAccountTypeIdentifier:];
}

id objc_msgSend_accountWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 accountWithIdentifier:];
}

id objc_msgSend_accounts(void *a1, const char *a2, ...)
{
  return _[a1 accounts];
}

id objc_msgSend_accountsWithAccountType_(void *a1, const char *a2, ...)
{
  return [a1 accountsWithAccountType:];
}

id objc_msgSend_action(void *a1, const char *a2, ...)
{
  return _[a1 action];
}

id objc_msgSend_actionActivities(void *a1, const char *a2, ...)
{
  return _[a1 actionActivities];
}

id objc_msgSend_actionActivitiesByUUID(void *a1, const char *a2, ...)
{
  return _[a1 actionActivitiesByUUID];
}

id objc_msgSend_actionActivitiesInUserOrder(void *a1, const char *a2, ...)
{
  return _[a1 actionActivitiesInUserOrder];
}

id objc_msgSend_actionActivityUserDefaultsDidChangeWithSession_(void *a1, const char *a2, ...)
{
  return [a1 actionActivityUserDefaultsDidChangeWithSession:];
}

id objc_msgSend_actionForBundleProxy_(void *a1, const char *a2, ...)
{
  return [a1 actionForBundleProxy:];
}

id objc_msgSend_actionHandler(void *a1, const char *a2, ...)
{
  return _[a1 actionHandler];
}

id objc_msgSend_actionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 actionIdentifier];
}

id objc_msgSend_actionImage(void *a1, const char *a2, ...)
{
  return _[a1 actionImage];
}

id objc_msgSend_actionSelected_(void *a1, const char *a2, ...)
{
  return [a1 actionSelected:];
}

id objc_msgSend_actionUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 actionUserDefaults];
}

id objc_msgSend_actionsForModernReadyForOpen(void *a1, const char *a2, ...)
{
  return _[a1 actionsForModernReadyForOpen];
}

id objc_msgSend_activate(void *a1, const char *a2, ...)
{
  return _[a1 activate];
}

id objc_msgSend_activateAssertionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 activateAssertionWithIdentifier:];
}

id objc_msgSend_activateCalled(void *a1, const char *a2, ...)
{
  return _[a1 activateCalled];
}

id objc_msgSend_activateDirect(void *a1, const char *a2, ...)
{
  return _[a1 activateDirect];
}

id objc_msgSend_activateIfReady(void *a1, const char *a2, ...)
{
  return _[a1 activateIfReady];
}

id objc_msgSend_activateSuggestionBrowserForSession_withExtensionMatchingDictionaries_assetIdentifiers_urlsBeingShared_sandboxExtensionsByfileURLPath_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "activateSuggestionBrowserForSession:withExtensionMatchingDictionaries:assetIdentifiers:urlsBeingShared:sandboxExtensionsByfileURLPath:");
}

id objc_msgSend_activateSystemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 activateSystemMonitor];
}

id objc_msgSend_activateWithBundleID_(void *a1, const char *a2, ...)
{
  return [a1 activateWithBundleID:];
}

id objc_msgSend_activateWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 activateWithCompletion:];
}

id objc_msgSend_activateWithContext_(void *a1, const char *a2, ...)
{
  return [a1 activateWithContext:];
}

id objc_msgSend_activeAKSSessions(void *a1, const char *a2, ...)
{
  return _[a1 activeAKSSessions];
}

id objc_msgSend_activeAccount(void *a1, const char *a2, ...)
{
  return _[a1 activeAccount];
}

id objc_msgSend_activeCallCount(void *a1, const char *a2, ...)
{
  return _[a1 activeCallCount];
}

id objc_msgSend_activeConnection(void *a1, const char *a2, ...)
{
  return _[a1 activeConnection];
}

id objc_msgSend_activeConnections(void *a1, const char *a2, ...)
{
  return _[a1 activeConnections];
}

id objc_msgSend_activeDevice(void *a1, const char *a2, ...)
{
  return _[a1 activeDevice];
}

id objc_msgSend_activeDeviceDescription(void *a1, const char *a2, ...)
{
  return _[a1 activeDeviceDescription];
}

id objc_msgSend_activeDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 activeDeviceName];
}

id objc_msgSend_activeDevices(void *a1, const char *a2, ...)
{
  return _[a1 activeDevices];
}

id objc_msgSend_activeDevicesMatch(void *a1, const char *a2, ...)
{
  return _[a1 activeDevicesMatch];
}

id objc_msgSend_activeIDSDevice(void *a1, const char *a2, ...)
{
  return _[a1 activeIDSDevice];
}

id objc_msgSend_activePairedDeviceSelectorBlock(void *a1, const char *a2, ...)
{
  return _[a1 activePairedDeviceSelectorBlock];
}

id objc_msgSend_activeTVAutoFillPrompts(void *a1, const char *a2, ...)
{
  return _[a1 activeTVAutoFillPrompts];
}

id objc_msgSend_activeUserAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 activeUserAltDSID];
}

id objc_msgSend_activitiesForConfigurations_(void *a1, const char *a2, ...)
{
  return [a1 activitiesForConfigurations:];
}

id objc_msgSend_activitiesOrderedByUserActivityOrderForActivities_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "activitiesOrderedByUserActivityOrderForActivities:");
}

id objc_msgSend_activity(void *a1, const char *a2, ...)
{
  return _[a1 activity];
}

id objc_msgSend_activityCategory(void *a1, const char *a2, ...)
{
  return _[a1 activityCategory];
}

id objc_msgSend_activityConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 activityConfiguration];
}

id objc_msgSend_activityFooter(void *a1, const char *a2, ...)
{
  return _[a1 activityFooter];
}

id objc_msgSend_activityHelper(void *a1, const char *a2, ...)
{
  return _[a1 activityHelper];
}

id objc_msgSend_activityIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifier];
}

id objc_msgSend_activityIdentifierCopy(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifierCopy];
}

id objc_msgSend_activityIdentifierOpen(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifierOpen];
}

id objc_msgSend_activityIdentifierShare(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifierShare];
}

id objc_msgSend_activityIdentifiersInUserOrder(void *a1, const char *a2, ...)
{
  return _[a1 activityIdentifiersInUserOrder];
}

id objc_msgSend_activityImage(void *a1, const char *a2, ...)
{
  return _[a1 activityImage];
}

id objc_msgSend_activityImageUTI(void *a1, const char *a2, ...)
{
  return _[a1 activityImageUTI];
}

id objc_msgSend_activityIsHidden_(void *a1, const char *a2, ...)
{
  return [a1 activityIsHidden:];
}

id objc_msgSend_activityItemValueClasses(void *a1, const char *a2, ...)
{
  return _[a1 activityItemValueClasses];
}

id objc_msgSend_activityItemValueExtensionMatchingDictionaries(void *a1, const char *a2, ...)
{
  return _[a1 activityItemValueExtensionMatchingDictionaries];
}

id objc_msgSend_activityItemValues(void *a1, const char *a2, ...)
{
  return _[a1 activityItemValues];
}

id objc_msgSend_activityManager(void *a1, const char *a2, ...)
{
  return _[a1 activityManager];
}

id objc_msgSend_activityPayloadForAdvertisementPayload_command_requestedByDevice_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:");
}

id objc_msgSend_activityPayloadReplySuccess_(void *a1, const char *a2, ...)
{
  return [a1 activityPayloadReplySuccess:];
}

id objc_msgSend_activityProxyClassForActivityCategory_(void *a1, const char *a2, ...)
{
  return [a1 activityProxyClassForActivityCategory:];
}

id objc_msgSend_activityService(void *a1, const char *a2, ...)
{
  return _[a1 activityService];
}

id objc_msgSend_activityServiceDevicesChanged_(void *a1, const char *a2, ...)
{
  return [a1 activityServiceDevicesChanged:];
}

id objc_msgSend_activityServiceHasWatch(void *a1, const char *a2, ...)
{
  return _[a1 activityServiceHasWatch];
}

id objc_msgSend_activitySettingsImage(void *a1, const char *a2, ...)
{
  return _[a1 activitySettingsImage];
}

id objc_msgSend_activityStateWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "activityStateWithCompletion:");
}

id objc_msgSend_activityStatusImage(void *a1, const char *a2, ...)
{
  return _[a1 activityStatusImage];
}

id objc_msgSend_activityStatusTintColor(void *a1, const char *a2, ...)
{
  return _[a1 activityStatusTintColor];
}

id objc_msgSend_activitySupportsPromiseURLs(void *a1, const char *a2, ...)
{
  return _[a1 activitySupportsPromiseURLs];
}

id objc_msgSend_activityTitle(void *a1, const char *a2, ...)
{
  return _[a1 activityTitle];
}

id objc_msgSend_activityType(void *a1, const char *a2, ...)
{
  return _[a1 activityType];
}

id objc_msgSend_activityTypeForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 activityTypeForBundleIdentifier:];
}

id objc_msgSend_activityTypesToCreateInShareService(void *a1, const char *a2, ...)
{
  return _[a1 activityTypesToCreateInShareService];
}

id objc_msgSend_activityUUID(void *a1, const char *a2, ...)
{
  return _[a1 activityUUID];
}

id objc_msgSend_activityViewController_itemForActivityType_(void *a1, const char *a2, ...)
{
  return [a1 activityViewController:itemForActivityType:];
}

id objc_msgSend_activityViewControllerWithSessionID_findSupportedActivitiesWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 activityViewControllerWithSessionID:x0 findSupportedActivitiesWithCompletionHandler:x1];
}

id objc_msgSend_activityViewControllerWithSessionID_performActivityWithType_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "activityViewControllerWithSessionID:performActivityWithType:completionHandler:");
}

id objc_msgSend_activityViewControllerWithSessionID_selectedActionWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 activityViewControllerWithSessionID:selectedActionWithIdentifier:];
}

id objc_msgSend_activityViewControllerWithSessionID_selectedActivityWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 activityViewControllerWithSessionID:selectedActivityWithIdentifier:];
}

id objc_msgSend_actualHandles(void *a1, const char *a2, ...)
{
  return _[a1 actualHandles];
}

id objc_msgSend_adamID(void *a1, const char *a2, ...)
{
  return _[a1 adamID];
}

id objc_msgSend_adamIDs(void *a1, const char *a2, ...)
{
  return _[a1 adamIDs];
}

id objc_msgSend_adapterFamilyCode(void *a1, const char *a2, ...)
{
  return _[a1 adapterFamilyCode];
}

id objc_msgSend_adapterSharedSource(void *a1, const char *a2, ...)
{
  return _[a1 adapterSharedSource];
}

id objc_msgSend_adapterSourceID(void *a1, const char *a2, ...)
{
  return _[a1 adapterSourceID];
}

id objc_msgSend_addAdditionalInformationToMeCard_(void *a1, const char *a2, ...)
{
  return [a1 addAdditionalInformationToMeCard:];
}

id objc_msgSend_addAirDropPerson_(void *a1, const char *a2, ...)
{
  return [a1 addAirDropPerson:];
}

id objc_msgSend_addAppleID_(void *a1, const char *a2, ...)
{
  return [a1 addAppleID:];
}

id objc_msgSend_addAttribute_value_range_(void *a1, const char *a2, ...)
{
  return [a1 addAttribute:value:range:];
}

id objc_msgSend_addAttributedString_withAttachmentName_description_previewImage_itemIndex_(void *a1, const char *a2, ...)
{
  return [a1 addAttributedString:x0 withAttachmentName:x1 description:x2 previewImage:x3 itemIndex:x4];
}

id objc_msgSend_addAuthenticationStateChangesObserver_identifier_(void *a1, const char *a2, ...)
{
  return [a1 addAuthenticationStateChangesObserver:identifier:];
}

id objc_msgSend_addBonjourChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [a1 addBonjourChildrenFromCache:];
}

id objc_msgSend_addChild_withPendingUnitCount_(void *a1, const char *a2, ...)
{
  return [a1 addChild:withPendingUnitCount:];
}

id objc_msgSend_addClassroomChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [a1 addClassroomChildrenFromCache:];
}

id objc_msgSend_addClient_(void *a1, const char *a2, ...)
{
  return [a1 addClient:];
}

id objc_msgSend_addClient_forIdentifer_(void *a1, const char *a2, ...)
{
  return [a1 addClient:forIdentifer:];
}

id objc_msgSend_addClientForNode_shouldPublishProgress_(void *a1, const char *a2, ...)
{
  return [a1 addClientForNode:shouldPublishProgress:];
}

id objc_msgSend_addClientID_proxy_(void *a1, const char *a2, ...)
{
  return [a1 addClientID:proxy:];
}

id objc_msgSend_addConnectedChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [a1 addConnectedChildrenFromCache:];
}

id objc_msgSend_addData_ofType_withAttachmentName_description_previewImage_itemIndex_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addData:ofType:withAttachmentName:description:previewImage:itemIndex:");
}

id objc_msgSend_addDelegate_(void *a1, const char *a2, ...)
{
  return [a1 addDelegate:];
}

id objc_msgSend_addDelegate_queue_(void *a1, const char *a2, ...)
{
  return [a1 addDelegate:queue:];
}

id objc_msgSend_addDeviceIDMissingSessionKey_(void *a1, const char *a2, ...)
{
  return [a1 addDeviceIDMissingSessionKey:];
}

id objc_msgSend_addDiscoveryType_(void *a1, const char *a2, ...)
{
  return [a1 addDiscoveryType:];
}

id objc_msgSend_addEntriesFromDictionary_(void *a1, const char *a2, ...)
{
  return [a1 addEntriesFromDictionary:];
}

id objc_msgSend_addFakeRangingMeasurementIfAppropriateToNodesInCache_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addFakeRangingMeasurementIfAppropriateToNodesInCache:");
}

id objc_msgSend_addFile_withBase_toBom_(void *a1, const char *a2, ...)
{
  return [a1 addFile:withBase:toBom:];
}

id objc_msgSend_addFileURLToBom_file_base_propertyKeys_topLevel_(void *a1, const char *a2, ...)
{
  return [a1 addFileURLToBom:file:base:propertyKeys:topLevel:];
}

id objc_msgSend_addHashesAndValidationRecordToRequest_(void *a1, const char *a2, ...)
{
  return [a1 addHashesAndValidationRecordToRequest:];
}

id objc_msgSend_addIconPropertiesWithImage_toFakeTransferData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addIconPropertiesWithImage:toFakeTransferData:");
}

id objc_msgSend_addImage_withAttachmentName_description_previewImage_itemIndex_(void *a1, const char *a2, ...)
{
  return [a1 addImage:x0 withAttachmentName:x1 description:x2 previewImage:x3 itemIndex:x4];
}

id objc_msgSend_addIndex_(void *a1, const char *a2, ...)
{
  return [a1 addIndex:];
}

id objc_msgSend_addManagedChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [a1 addManagedChildrenFromCache:];
}

id objc_msgSend_addNearbyDelegate_(void *a1, const char *a2, ...)
{
  return [a1 addNearbyDelegate:];
}

id objc_msgSend_addNode_(void *a1, const char *a2, ...)
{
  return [a1 addNode:];
}

id objc_msgSend_addNotificationRequest_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addNotificationRequest:withCompletionHandler:];
}

id objc_msgSend_addNotificationsObservers(void *a1, const char *a2, ...)
{
  return _[a1 addNotificationsObservers];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addObserver_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:];
}

id objc_msgSend_addObserver_forKeyPath_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPath:options:context:];
}

id objc_msgSend_addObserver_forKeyPaths_options_context_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:forKeyPaths:options:context:];
}

id objc_msgSend_addObserver_selector_name_object_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:x0 selector:x1 name:x2 object:x3];
}

id objc_msgSend_addObserver_selector_name_object_suspensionBehavior_(void *a1, const char *a2, ...)
{
  return [a1 addObserver:a2 selector:a3 name:a4 object:a5 suspensionBehavior:a6];
}

id objc_msgSend_addObservers(void *a1, const char *a2, ...)
{
  return _[a1 addObservers];
}

id objc_msgSend_addObserversForTests(void *a1, const char *a2, ...)
{
  return _[a1 addObserversForTests];
}

id objc_msgSend_addOpenWithActions(void *a1, const char *a2, ...)
{
  return _[a1 addOpenWithActions];
}

id objc_msgSend_addOperation_(void *a1, const char *a2, ...)
{
  return [a1 addOperation:];
}

id objc_msgSend_addOperationWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 addOperationWithBlock:];
}

id objc_msgSend_addOperations_waitUntilFinished_(void *a1, const char *a2, ...)
{
  return [a1 addOperations:waitUntilFinished:];
}

id objc_msgSend_addOrUpdateIdentity_completion_(void *a1, const char *a2, ...)
{
  return [a1 addOrUpdateIdentity:completion:];
}

id objc_msgSend_addOrUpdateNodesForPerson_withChanges_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addOrUpdateNodesForPerson:withChanges:");
}

id objc_msgSend_addParentChain_file_base_(void *a1, const char *a2, ...)
{
  return [a1 addParentChain:file:base:];
}

id objc_msgSend_addPasses_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 addPasses:withCompletionHandler:];
}

id objc_msgSend_addPersonInfoToCache_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addPersonInfoToCache:");
}

id objc_msgSend_addPolicy_(void *a1, const char *a2, ...)
{
  return [a1 addPolicy:];
}

id objc_msgSend_addPreventExitForLocaleReason_(void *a1, const char *a2, ...)
{
  return [a1 addPreventExitForLocaleReason:];
}

id objc_msgSend_addProgressPropertiesWithBytesCopied_totalBytes_timeRemaining_filesCopied_toFakeTransferData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addProgressPropertiesWithBytesCopied:totalBytes:timeRemaining:filesCopied:toFakeTransferData:");
}

id objc_msgSend_addQueryToDictionary_name_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return [a1 addQueryToDictionary:x0 name:x1 type:x2 domain:x3 recordType:x4];
}

id objc_msgSend_addRapportChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [a1 addRapportChildrenFromCache:];
}

id objc_msgSend_addReason_(void *a1, const char *a2, ...)
{
  return [a1 addReason:];
}

id objc_msgSend_addRemoteLTK_ltkHash_ltkModDate_modernLTK_modernLTKHash_modernLTKModeDate_deviceID_(void *a1, const char *a2, ...)
{
  return [a1 addRemoteLTK:ltkHash:ltkModDate:modernLTK:modernLTKHash:modernLTKModeDate:deviceID:];
}

id objc_msgSend_addResourceWithType_fileURL_options_(void *a1, const char *a2, ...)
{
  return [a1 addResourceWithType:fileURL:options:];
}

id objc_msgSend_addResult_forProxySection_(void *a1, const char *a2, ...)
{
  return [a1 addResult:forProxySection:];
}

id objc_msgSend_addRetrieveTimer_(void *a1, const char *a2, ...)
{
  return [a1 addRetrieveTimer:];
}

id objc_msgSend_addService_(void *a1, const char *a2, ...)
{
  return [a1 addService:];
}

id objc_msgSend_addService_type_domain_interface_(void *a1, const char *a2, ...)
{
  return [a1 addService:x0 type:x1 domain:x2 interface:x3];
}

id objc_msgSend_addServiceClientForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 addServiceClientForIdentifier:];
}

id objc_msgSend_addStatusMonitorObservers(void *a1, const char *a2, ...)
{
  return _[a1 addStatusMonitorObservers];
}

id objc_msgSend_addString_withAttachmentName_description_previewImage_itemIndex_(void *a1, const char *a2, ...)
{
  return [a1 addString:x0 withAttachmentName:x1 description:x2 previewImage:x3 itemIndex:x4];
}

id objc_msgSend_addTarget_selector_forOperationEvents_delegateQueue_(void *a1, const char *a2, ...)
{
  return [a1 addTarget:x0 selector:x1 forOperationEvents:x2 delegateQueue:x3];
}

id objc_msgSend_addTimer_forMode_(void *a1, const char *a2, ...)
{
  return [a1 addTimer:forMode:];
}

id objc_msgSend_addToRecents_(void *a1, const char *a2, ...)
{
  return [a1 addToRecents:];
}

id objc_msgSend_addURL_withAttachmentName_description_previewImage_itemIndex_(void *a1, const char *a2, ...)
{
  return [a1 addURL:x0 withAttachmentName:x1 description:x2 previewImage:x3 itemIndex:x4];
}

id objc_msgSend_addWindowsChildrenFromCache_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "addWindowsChildrenFromCache:");
}

id objc_msgSend_address(void *a1, const char *a2, ...)
{
  return _[a1 address];
}

id objc_msgSend_addressString(void *a1, const char *a2, ...)
{
  return _[a1 addressString];
}

id objc_msgSend_adjustPropertiesForAutoAcceptSenderIsMe_(void *a1, const char *a2, ...)
{
  return [a1 adjustPropertiesForAutoAcceptSenderIsMe:];
}

id objc_msgSend_adjustPropertiesForPhotosBundles(void *a1, const char *a2, ...)
{
  return _[a1 adjustPropertiesForPhotosBundles];
}

id objc_msgSend_advertiseHashes(void *a1, const char *a2, ...)
{
  return _[a1 advertiseHashes];
}

id objc_msgSend_advertiseRate(void *a1, const char *a2, ...)
{
  return _[a1 advertiseRate];
}

id objc_msgSend_advertisementData(void *a1, const char *a2, ...)
{
  return _[a1 advertisementData];
}

id objc_msgSend_advertisementFields(void *a1, const char *a2, ...)
{
  return _[a1 advertisementFields];
}

id objc_msgSend_advertisementPayload(void *a1, const char *a2, ...)
{
  return _[a1 advertisementPayload];
}

id objc_msgSend_advertisingB389Found_(void *a1, const char *a2, ...)
{
  return [a1 advertisingB389Found:];
}

id objc_msgSend_advertisingB389Lost_(void *a1, const char *a2, ...)
{
  return [a1 advertisingB389Lost:];
}

id objc_msgSend_advertisingChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 advertisingChangedDate];
}

id objc_msgSend_agentClient(void *a1, const char *a2, ...)
{
  return _[a1 agentClient];
}

id objc_msgSend_aida_tokenForService_(void *a1, const char *a2, ...)
{
  return [a1 aida_tokenForService:];
}

id objc_msgSend_airDropAllowed(void *a1, const char *a2, ...)
{
  return _[a1 airDropAllowed];
}

id objc_msgSend_airDropClient_event_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropClient:event:withResults:");
}

id objc_msgSend_airDropConnection_event_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropConnection:event:withResults:");
}

id objc_msgSend_airDropController(void *a1, const char *a2, ...)
{
  return _[a1 airDropController];
}

id objc_msgSend_airDropController_didChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropController:didChange:");
}

id objc_msgSend_airDropInformation_didChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropInformation:didChange:");
}

id objc_msgSend_airDropNearbyCount(void *a1, const char *a2, ...)
{
  return _[a1 airDropNearbyCount];
}

id objc_msgSend_airDropNodes(void *a1, const char *a2, ...)
{
  return _[a1 airDropNodes];
}

id objc_msgSend_airDropNodesForDomain_(void *a1, const char *a2, ...)
{
  return [a1 airDropNodesForDomain:];
}

id objc_msgSend_airDropPeople(void *a1, const char *a2, ...)
{
  return _[a1 airDropPeople];
}

id objc_msgSend_airDropServer_event_withResults_(void *a1, const char *a2, ...)
{
  return [a1 airDropServer:event:withResults:];
}

id objc_msgSend_airDropSession_event_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropSession:event:withResults:");
}

id objc_msgSend_airDropStatus_didChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "airDropStatus:didChange:");
}

id objc_msgSend_airDropTransactionBegin_(void *a1, const char *a2, ...)
{
  return [a1 airDropTransactionBegin:];
}

id objc_msgSend_airDropTransactionEnd_(void *a1, const char *a2, ...)
{
  return [a1 airDropTransactionEnd:];
}

id objc_msgSend_airPods(void *a1, const char *a2, ...)
{
  return _[a1 airPods];
}

id objc_msgSend_airPodsMax(void *a1, const char *a2, ...)
{
  return _[a1 airPodsMax];
}

id objc_msgSend_airPodsPro(void *a1, const char *a2, ...)
{
  return _[a1 airPodsPro];
}

id objc_msgSend_airPodsSecondGeneration(void *a1, const char *a2, ...)
{
  return _[a1 airPodsSecondGeneration];
}

id objc_msgSend_airdropHash1(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash1];
}

id objc_msgSend_airdropHash2(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash2];
}

id objc_msgSend_airdropHash3(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash3];
}

id objc_msgSend_airdropHash4(void *a1, const char *a2, ...)
{
  return _[a1 airdropHash4];
}

id objc_msgSend_airdropNodeForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 airdropNodeForIdentifier:];
}

id objc_msgSend_airplaneModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 airplaneModeEnabled];
}

id objc_msgSend_aksAuthSessionForDeviceID_originator_usingEscrow_attestation_sessionType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "aksAuthSessionForDeviceID:originator:usingEscrow:attestation:sessionType:");
}

id objc_msgSend_aksAuthorizationSessionForDeviceID_attestation_originator_externalACMContext_sessionType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "aksAuthorizationSessionForDeviceID:attestation:originator:externalACMContext:sessionType:");
}

id objc_msgSend_aksPairingSessionForDeviceID_originator_errorCode_requiresAttestation_requiresEscrow_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "aksPairingSessionForDeviceID:originator:errorCode:requiresAttestation:requiresEscrow:");
}

id objc_msgSend_aksPeerAvailable(void *a1, const char *a2, ...)
{
  return _[a1 aksPeerAvailable];
}

id objc_msgSend_aksRegistrationSessionForDeviceID_originator_(void *a1, const char *a2, ...)
{
  return [a1 aksRegistrationSessionForDeviceID:originator:];
}

id objc_msgSend_aksSession(void *a1, const char *a2, ...)
{
  return _[a1 aksSession];
}

id objc_msgSend_aksSessionID(void *a1, const char *a2, ...)
{
  return _[a1 aksSessionID];
}

id objc_msgSend_aksSuccess(void *a1, const char *a2, ...)
{
  return _[a1 aksSuccess];
}

id objc_msgSend_alertManager(void *a1, const char *a2, ...)
{
  return _[a1 alertManager];
}

id objc_msgSend_alertManager_acceptingTransferWithRecordID_withDestinationURL_shouldExtractMediaFromPhotosBundlesForRecordID_(void *a1, const char *a2, ...)
{
  return [a1 alertManager:acceptingTransferWithRecordID:withDestinationURL:shouldExtractMediaFromPhotosBundlesForRecordID:];
}

id objc_msgSend_alertManager_cancelingTransferWithRecordID_withFailureReason_(void *a1, const char *a2, ...)
{
  return [a1 alertManager:cancelingTransferWithRecordID:withFailureReason:];
}

id objc_msgSend_alertMessageLocalizedKeyForTypeDicts_(void *a1, const char *a2, ...)
{
  return [a1 alertMessageLocalizedKeyForTypeDicts:];
}

id objc_msgSend_alertMessageLocalizedKeyForTypeDicts_senderIsMe_isVerifiableIdentity_isModernProgress_transferState_(void *a1, const char *a2, ...)
{
  return [a1 alertMessageLocalizedKeyForTypeDicts:x0, x1, x2, x3, x4, x5];
}

id objc_msgSend_alertOfUnlock(void *a1, const char *a2, ...)
{
  return _[a1 alertOfUnlock];
}

id objc_msgSend_alerted(void *a1, const char *a2, ...)
{
  return _[a1 alerted];
}

id objc_msgSend_aliases(void *a1, const char *a2, ...)
{
  return _[a1 aliases];
}

id objc_msgSend_aliasesForAccount_(void *a1, const char *a2, ...)
{
  return [a1 aliasesForAccount:];
}

id objc_msgSend_allEnabled(void *a1, const char *a2, ...)
{
  return _[a1 allEnabled];
}

id objc_msgSend_allHTTPHeaderFields(void *a1, const char *a2, ...)
{
  return _[a1 allHTTPHeaderFields];
}

id objc_msgSend_allInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 allInterfaces];
}

id objc_msgSend_allKeychainDevices(void *a1, const char *a2, ...)
{
  return _[a1 allKeychainDevices];
}

id objc_msgSend_allKeychainItems(void *a1, const char *a2, ...)
{
  return _[a1 allKeychainItems];
}

id objc_msgSend_allKeys(void *a1, const char *a2, ...)
{
  return _[a1 allKeys];
}

id objc_msgSend_allKeysForObject_(void *a1, const char *a2, ...)
{
  return [a1 allKeysForObject:];
}

id objc_msgSend_allObjects(void *a1, const char *a2, ...)
{
  return _[a1 allObjects];
}

id objc_msgSend_allPairedWatchDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 allPairedWatchDeviceIDs];
}

id objc_msgSend_allPeerBTIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 allPeerBTIdentifiers];
}

id objc_msgSend_allProxies(void *a1, const char *a2, ...)
{
  return _[a1 allProxies];
}

id objc_msgSend_allValues(void *a1, const char *a2, ...)
{
  return _[a1 allValues];
}

id objc_msgSend_allocWithZone_(void *a1, const char *a2, ...)
{
  return [a1 allocWithZone:];
}

id objc_msgSend_allowAskRequestFromPerson_(void *a1, const char *a2, ...)
{
  return [a1 allowAskRequestFromPerson:];
}

id objc_msgSend_allowProgressCircleToComplete(void *a1, const char *a2, ...)
{
  return _[a1 allowProgressCircleToComplete];
}

id objc_msgSend_allowsKeyedCoding(void *a1, const char *a2, ...)
{
  return _[a1 allowsKeyedCoding];
}

id objc_msgSend_altDSID(void *a1, const char *a2, ...)
{
  return _[a1 altDSID];
}

id objc_msgSend_altDSIDForAccount_(void *a1, const char *a2, ...)
{
  return [a1 altDSIDForAccount:];
}

id objc_msgSend_altDSIDNeedsFixing(void *a1, const char *a2, ...)
{
  return _[a1 altDSIDNeedsFixing];
}

id objc_msgSend_altProductID(void *a1, const char *a2, ...)
{
  return _[a1 altProductID];
}

id objc_msgSend_alwaysAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 alwaysAutoAccept];
}

id objc_msgSend_alwaysSendPayload(void *a1, const char *a2, ...)
{
  return _[a1 alwaysSendPayload];
}

id objc_msgSend_alwaysShowSetupRetry(void *a1, const char *a2, ...)
{
  return _[a1 alwaysShowSetupRetry];
}

id objc_msgSend_andPredicateWithSubpredicates_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "andPredicateWithSubpredicates:");
}

id objc_msgSend_anyLongTermKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 anyLongTermKeyForDeviceID:];
}

id objc_msgSend_anyObject(void *a1, const char *a2, ...)
{
  return _[a1 anyObject];
}

id objc_msgSend_appIconForCall_(void *a1, const char *a2, ...)
{
  return [a1 appIconForCall:];
}

id objc_msgSend_appIsDocumentTypeOwner(void *a1, const char *a2, ...)
{
  return _[a1 appIsDocumentTypeOwner];
}

id objc_msgSend_appLink(void *a1, const char *a2, ...)
{
  return _[a1 appLink];
}

id objc_msgSend_appLinksWithURL_limit_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "appLinksWithURL:limit:error:");
}

id objc_msgSend_appName(void *a1, const char *a2, ...)
{
  return _[a1 appName];
}

id objc_msgSend_appState(void *a1, const char *a2, ...)
{
  return _[a1 appState];
}

id objc_msgSend_appendAllNode_(void *a1, const char *a2, ...)
{
  return [a1 appendAllNode:];
}

id objc_msgSend_appendAttributedString_(void *a1, const char *a2, ...)
{
  return [a1 appendAttributedString:];
}

id objc_msgSend_appendBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 appendBytes:x0 length:x1];
}

id objc_msgSend_appendData_(void *a1, const char *a2, ...)
{
  return [a1 appendData:];
}

id objc_msgSend_appendFileURL_withBase_toItems_(void *a1, const char *a2, ...)
{
  return [a1 appendFileURL:withBase:toItems:];
}

id objc_msgSend_appendFormat_(void *a1, const char *a2, ...)
{
  return [a1 appendFormat:];
}

id objc_msgSend_appendHashToData_withType_(void *a1, const char *a2, ...)
{
  return [a1 appendHashToData:withType:];
}

id objc_msgSend_appendString_(void *a1, const char *a2, ...)
{
  return [a1 appendString:];
}

id objc_msgSend_appleID(void *a1, const char *a2, ...)
{
  return _[a1 appleID];
}

id objc_msgSend_appleIDAccountState(void *a1, const char *a2, ...)
{
  return _[a1 appleIDAccountState];
}

id objc_msgSend_appleIDAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 appleIDAccountWithAltDSID:];
}

id objc_msgSend_appleIDAccountWithAppleID_(void *a1, const char *a2, ...)
{
  return [a1 appleIDAccountWithAppleID:];
}

id objc_msgSend_appleIDAddProof_dispatchQueue_completion_(void *a1, const char *a2, ...)
{
  return [a1 appleIDAddProof:x0 dispatchQueue:x1 completion:x2];
}

id objc_msgSend_appleIDVerifyProof_dispatchQueue_completion_(void *a1, const char *a2, ...)
{
  return [a1 appleIDVerifyProof:x0 dispatchQueue:x1 completion:x2];
}

id objc_msgSend_applicationBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationBundleIdentifier];
}

id objc_msgSend_applicationExtension(void *a1, const char *a2, ...)
{
  return _[a1 applicationExtension];
}

id objc_msgSend_applicationExtensionRecords(void *a1, const char *a2, ...)
{
  return _[a1 applicationExtensionRecords];
}

id objc_msgSend_applicationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 applicationIdentifier];
}

id objc_msgSend_applicationInfoForApplication_completion_(void *a1, const char *a2, ...)
{
  return [a1 applicationInfoForApplication:completion:];
}

id objc_msgSend_applicationProxy(void *a1, const char *a2, ...)
{
  return _[a1 applicationProxy];
}

id objc_msgSend_applicationProxyForBundleProxy_(void *a1, const char *a2, ...)
{
  return [a1 applicationProxyForBundleProxy:];
}

id objc_msgSend_applicationProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 applicationProxyForIdentifier:];
}

id objc_msgSend_applicationProxyForSystemPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 applicationProxyForSystemPlaceholder];
}

id objc_msgSend_applicationStateForApplication_(void *a1, const char *a2, ...)
{
  return [a1 applicationStateForApplication:];
}

id objc_msgSend_applicationsAvailableForOpeningFromAirDropWithError_(void *a1, const char *a2, ...)
{
  return [a1 applicationsAvailableForOpeningFromAirDropWithError:];
}

id objc_msgSend_applicationsAvailableForOpeningURL_(void *a1, const char *a2, ...)
{
  return [a1 applicationsAvailableForOpeningURL:];
}

id objc_msgSend_applicationsAvailableForOpeningWithError_(void *a1, const char *a2, ...)
{
  return [a1 applicationsAvailableForOpeningWithError:];
}

id objc_msgSend_apply(void *a1, const char *a2, ...)
{
  return _[a1 apply];
}

id objc_msgSend_applySSLSettings_(void *a1, const char *a2, ...)
{
  return [a1 applySSLSettings:];
}

id objc_msgSend_approveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 approveBluetoothIDs];
}

id objc_msgSend_archivedDataWithRootObject_requiringSecureCoding_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "archivedDataWithRootObject:requiringSecureCoding:error:")
}

id objc_msgSend_armDevicesWaitingForUnlock(void *a1, const char *a2, ...)
{
  return _[a1 armDevicesWaitingForUnlock];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObjectsFromArray:];
}

id objc_msgSend_arrayForKey_(void *a1, const char *a2, ...)
{
  return [a1 arrayForKey:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithCapacity:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_askBodyDataInFormat_(void *a1, const char *a2, ...)
{
  return [a1 askBodyDataInFormat:];
}

id objc_msgSend_askEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "askEventForRecordID:withResults:");
}

id objc_msgSend_askRequestClientBundleID(void *a1, const char *a2, ...)
{
  return _[a1 askRequestClientBundleID];
}

id objc_msgSend_askToAirdropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 askToAirdropEnabled];
}

id objc_msgSend_assertionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 assertionIdentifier];
}

id objc_msgSend_assertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 assertionTimer];
}

id objc_msgSend_assetIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 assetIdentifiers];
}

id objc_msgSend_asyncBrowserWithSessionID_context_queue_timeout_(void *a1, const char *a2, ...)
{
  return [a1 asyncBrowserWithSessionID:x0 context:x1 queue:x2 timeout:x3];
}

id objc_msgSend_asyncSuggestInteractionsFromContext_timeout_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 asyncSuggestInteractionsFromContext:x0 timeout:x1 completionHandler:x2];
}

id objc_msgSend_asynchronousProxyLoadingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 asynchronousProxyLoadingEnabled];
}

id objc_msgSend_attachMIS(void *a1, const char *a2, ...)
{
  return _[a1 attachMIS];
}

id objc_msgSend_attachmentFromURL_(void *a1, const char *a2, ...)
{
  return [a1 attachmentFromURL:];
}

id objc_msgSend_attachmentNameForItem_(void *a1, const char *a2, ...)
{
  return [a1 attachmentNameForItem:];
}

id objc_msgSend_attachmentURL(void *a1, const char *a2, ...)
{
  return _[a1 attachmentURL];
}

id objc_msgSend_attachmentWithIdentifier_URL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 attachmentWithIdentifier:x0 URL:x1 options:x2 error:x3];
}

id objc_msgSend_attachments(void *a1, const char *a2, ...)
{
  return _[a1 attachments];
}

id objc_msgSend_attemptActivatedHandler(void *a1, const char *a2, ...)
{
  return _[a1 attemptActivatedHandler];
}

id objc_msgSend_attemptAutoUnlockForSiri(void *a1, const char *a2, ...)
{
  return _[a1 attemptAutoUnlockForSiri];
}

id objc_msgSend_attemptAutoUnlockForType_(void *a1, const char *a2, ...)
{
  return [a1 attemptAutoUnlockForType:];
}

id objc_msgSend_attemptAutoUnlockForType_externalACMContext_preventRadarNotification_bundlePath_appName_navBarTitle_reply_(void *a1, const char *a2, ...)
{
  return [a1 attemptAutoUnlockForType:x0 externalACMContext:x1 preventRadarNotification:x2 bundlePath:x3 appName:x4 navBarTitle:x5 reply:x6];
}

id objc_msgSend_attemptAutoUnlockWithoutNotifyingWatch(void *a1, const char *a2, ...)
{
  return _[a1 attemptAutoUnlockWithoutNotifyingWatch];
}

id objc_msgSend_attemptCount(void *a1, const char *a2, ...)
{
  return _[a1 attemptCount];
}

id objc_msgSend_attemptDevice(void *a1, const char *a2, ...)
{
  return _[a1 attemptDevice];
}

id objc_msgSend_attemptError(void *a1, const char *a2, ...)
{
  return _[a1 attemptError];
}

id objc_msgSend_attemptExternalACMContext(void *a1, const char *a2, ...)
{
  return _[a1 attemptExternalACMContext];
}

id objc_msgSend_attemptID(void *a1, const char *a2, ...)
{
  return _[a1 attemptID];
}

id objc_msgSend_attemptInProgress(void *a1, const char *a2, ...)
{
  return _[a1 attemptInProgress];
}

id objc_msgSend_attemptPrewarmed(void *a1, const char *a2, ...)
{
  return _[a1 attemptPrewarmed];
}

id objc_msgSend_attemptResults(void *a1, const char *a2, ...)
{
  return _[a1 attemptResults];
}

id objc_msgSend_attemptStart(void *a1, const char *a2, ...)
{
  return _[a1 attemptStart];
}

id objc_msgSend_attemptStartDate(void *a1, const char *a2, ...)
{
  return _[a1 attemptStartDate];
}

id objc_msgSend_attemptTime(void *a1, const char *a2, ...)
{
  return _[a1 attemptTime];
}

id objc_msgSend_attemptTimedOut(void *a1, const char *a2, ...)
{
  return _[a1 attemptTimedOut];
}

id objc_msgSend_attemptType(void *a1, const char *a2, ...)
{
  return _[a1 attemptType];
}

id objc_msgSend_attestedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return [a1 attestedDictionaryForDevice:];
}

id objc_msgSend_attributeForKey_(void *a1, const char *a2, ...)
{
  return [a1 attributeForKey:];
}

id objc_msgSend_attributedStrings(void *a1, const char *a2, ...)
{
  return _[a1 attributedStrings];
}

id objc_msgSend_attributesOfItemAtPath_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "attributesOfItemAtPath:error:")];
}

id objc_msgSend_auditToken(void *a1, const char *a2, ...)
{
  return _[a1 auditToken];
}

id objc_msgSend_authKitAccountWithAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 authKitAccountWithAltDSID:];
}

id objc_msgSend_authPrompt(void *a1, const char *a2, ...)
{
  return _[a1 authPrompt];
}

id objc_msgSend_authPromptIconData(void *a1, const char *a2, ...)
{
  return _[a1 authPromptIconData];
}

id objc_msgSend_authPromptIconHash(void *a1, const char *a2, ...)
{
  return _[a1 authPromptIconHash];
}

id objc_msgSend_authPromptInfoWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "authPromptInfoWithCompletionHandler:")];
}

id objc_msgSend_authSessionError(void *a1, const char *a2, ...)
{
  return _[a1 authSessionError];
}

id objc_msgSend_authSessionWithFlags_secret_(void *a1, const char *a2, ...)
{
  return [a1 authSessionWithFlags:secret:];
}

id objc_msgSend_authSessionWithFlags_secret_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 authSessionWithFlags:secret:errorCode:];
}

id objc_msgSend_authTag(void *a1, const char *a2, ...)
{
  return _[a1 authTag];
}

id objc_msgSend_authTagForData_type_error_(void *a1, const char *a2, ...)
{
  return [a1 authTagForData:x0 type:x1 error:x2];
}

id objc_msgSend_authTagOverride(void *a1, const char *a2, ...)
{
  return _[a1 authTagOverride];
}

id objc_msgSend_authToken(void *a1, const char *a2, ...)
{
  return _[a1 authToken];
}

id objc_msgSend_authenticateFor_sessionID_options_(void *a1, const char *a2, ...)
{
  return [a1 authenticateFor:sessionID:options:];
}

id objc_msgSend_authenticateWithContext_completion_(void *a1, const char *a2, ...)
{
  return [a1 authenticateWithContext:];
}

id objc_msgSend_authenticationMethod(void *a1, const char *a2, ...)
{
  return _[a1 authenticationMethod];
}

id objc_msgSend_authorizationStatus(void *a1, const char *a2, ...)
{
  return _[a1 authorizationStatus];
}

id objc_msgSend_autoFillDismissUserNotification(void *a1, const char *a2, ...)
{
  return _[a1 autoFillDismissUserNotification];
}

id objc_msgSend_autoFillPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return [a1 autoFillPairingSucceeded:completion:];
}

id objc_msgSend_autoFillPromptForPIN_throttleSeconds_(void *a1, const char *a2, ...)
{
  return [a1 autoFillPromptForPIN:throttleSeconds:];
}

id objc_msgSend_autoHotspotState(void *a1, const char *a2, ...)
{
  return _[a1 autoHotspotState];
}

id objc_msgSend_autoUnlockDevice(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockDevice];
}

id objc_msgSend_autoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockDeviceCache];
}

id objc_msgSend_autoUnlockDeviceForBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockDeviceForBluetoothID:];
}

id objc_msgSend_autoUnlockDeviceForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockDeviceForDeviceID:];
}

id objc_msgSend_autoUnlockDeviceForIDSDevice_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockDeviceForIDSDevice:];
}

id objc_msgSend_autoUnlockDeviceForIDSDevice_cloudPaired_cached_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockDeviceForIDSDevice:cloudPaired:cached:];
}

id objc_msgSend_autoUnlockEligibleDevicesWithCloudPairing_deviceType_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockEligibleDevicesWithCloudPairing:deviceType:];
}

id objc_msgSend_autoUnlockEligibleWatches(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEligibleWatches];
}

id objc_msgSend_autoUnlockEligibleWatchesWithCloudPairing_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "autoUnlockEligibleWatchesWithCloudPairing:");
}

id objc_msgSend_autoUnlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEnabled];
}

id objc_msgSend_autoUnlockEnabledUpdatedAfterFirstUnlock(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockEnabledUpdatedAfterFirstUnlock];
}

id objc_msgSend_autoUnlockFolderPath(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockFolderPath];
}

id objc_msgSend_autoUnlockService(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockService];
}

id objc_msgSend_autoUnlockStateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 autoUnlockStateWithCompletionHandler:];
}

id objc_msgSend_autoUnlockTransport(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockTransport];
}

id objc_msgSend_autoUnlockWatch(void *a1, const char *a2, ...)
{
  return _[a1 autoUnlockWatch];
}

id objc_msgSend_automotive(void *a1, const char *a2, ...)
{
  return _[a1 automotive];
}

id objc_msgSend_autoupdatingCurrentLocale(void *a1, const char *a2, ...)
{
  return _[a1 autoupdatingCurrentLocale];
}

id objc_msgSend_availableApplications(void *a1, const char *a2, ...)
{
  return _[a1 availableApplications];
}

id objc_msgSend_availableDevices(void *a1, const char *a2, ...)
{
  return _[a1 availableDevices];
}

id objc_msgSend_availableNodes(void *a1, const char *a2, ...)
{
  return _[a1 availableNodes];
}

id objc_msgSend_avatarImageSlotID(void *a1, const char *a2, ...)
{
  return _[a1 avatarImageSlotID];
}

id objc_msgSend_awdlDevice(void *a1, const char *a2, ...)
{
  return _[a1 awdlDevice];
}

id objc_msgSend_awdlInfo(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfo];
}

id objc_msgSend_awdlInfoData(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfoData];
}

id objc_msgSend_awdlInfoExchange(void *a1, const char *a2, ...)
{
  return _[a1 awdlInfoExchange];
}

id objc_msgSend_awdlInfoForPeerWithServiceName_(void *a1, const char *a2, ...)
{
  return [a1 awdlInfoForPeerWithServiceName:];
}

id objc_msgSend_awdlInterval(void *a1, const char *a2, ...)
{
  return _[a1 awdlInterval];
}

id objc_msgSend_awdlNetwork(void *a1, const char *a2, ...)
{
  return _[a1 awdlNetwork];
}

id objc_msgSend_awdlPeerList(void *a1, const char *a2, ...)
{
  return _[a1 awdlPeerList];
}

id objc_msgSend_awdlStart(void *a1, const char *a2, ...)
{
  return _[a1 awdlStart];
}

id objc_msgSend_awdlStartFailed(void *a1, const char *a2, ...)
{
  return _[a1 awdlStartFailed];
}

id objc_msgSend_awdlStartedHandler(void *a1, const char *a2, ...)
{
  return _[a1 awdlStartedHandler];
}

id objc_msgSend_awdlStarting(void *a1, const char *a2, ...)
{
  return _[a1 awdlStarting];
}

id objc_msgSend_awdlState(void *a1, const char *a2, ...)
{
  return _[a1 awdlState];
}

id objc_msgSend_awdlStateInfo(void *a1, const char *a2, ...)
{
  return _[a1 awdlStateInfo];
}

id objc_msgSend_awdlTimer(void *a1, const char *a2, ...)
{
  return _[a1 awdlTimer];
}

id objc_msgSend_awdlTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 awdlTimerFired];
}

id objc_msgSend_awdlTotal(void *a1, const char *a2, ...)
{
  return _[a1 awdlTotal];
}

id objc_msgSend_awdlUp(void *a1, const char *a2, ...)
{
  return _[a1 awdlUp];
}

id objc_msgSend_b463(void *a1, const char *a2, ...)
{
  return _[a1 b463];
}

id objc_msgSend_b494(void *a1, const char *a2, ...)
{
  return _[a1 b494];
}

id objc_msgSend_b498(void *a1, const char *a2, ...)
{
  return _[a1 b498];
}

id objc_msgSend_b507(void *a1, const char *a2, ...)
{
  return _[a1 b507];
}

id objc_msgSend_b607(void *a1, const char *a2, ...)
{
  return _[a1 b607];
}

id objc_msgSend_b688(void *a1, const char *a2, ...)
{
  return _[a1 b688];
}

id objc_msgSend_b698(void *a1, const char *a2, ...)
{
  return _[a1 b698];
}

id objc_msgSend_b768e(void *a1, const char *a2, ...)
{
  return _[a1 b768e];
}

id objc_msgSend_b768m(void *a1, const char *a2, ...)
{
  return _[a1 b768m];
}

id objc_msgSend_backlightState(void *a1, const char *a2, ...)
{
  return _[a1 backlightState];
}

id objc_msgSend_backwardsCompatibilityStatus(void *a1, const char *a2, ...)
{
  return _[a1 backwardsCompatibilityStatus];
}

id objc_msgSend_base64EncodedStringWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 base64EncodedStringWithOptions:];
}

id objc_msgSend_baseAcceleration(void *a1, const char *a2, ...)
{
  return _[a1 baseAcceleration];
}

id objc_msgSend_baseAccelerationSet(void *a1, const char *a2, ...)
{
  return _[a1 baseAccelerationSet];
}

id objc_msgSend_baseDict(void *a1, const char *a2, ...)
{
  return _[a1 baseDict];
}

id objc_msgSend_baseDictDecryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 baseDictDecryptionKeyForDeviceIdentifier:];
}

id objc_msgSend_baseDictEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 baseDictEncryptionKey];
}

id objc_msgSend_baseDictWrappingKey(void *a1, const char *a2, ...)
{
  return _[a1 baseDictWrappingKey];
}

id objc_msgSend_baseDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseDictionary];
}

id objc_msgSend_baseLocalKeysDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseLocalKeysDictionary];
}

id objc_msgSend_baseLocalKeysDictionaryForDevice_type_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "baseLocalKeysDictionaryForDevice:type:");
}

id objc_msgSend_baseModernSyncedDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseModernSyncedDictionary];
}

id objc_msgSend_baseRangingDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseRangingDictionary];
}

id objc_msgSend_baseRangingDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return [a1 baseRangingDictionaryForDevice:];
}

id objc_msgSend_baseResultsDictionaryForError_(void *a1, const char *a2, ...)
{
  return [a1 baseResultsDictionaryForError:];
}

id objc_msgSend_baseSyncedDictionary(void *a1, const char *a2, ...)
{
  return _[a1 baseSyncedDictionary];
}

id objc_msgSend_batteryInfo(void *a1, const char *a2, ...)
{
  return _[a1 batteryInfo];
}

id objc_msgSend_batteryLevel(void *a1, const char *a2, ...)
{
  return _[a1 batteryLevel];
}

id objc_msgSend_batteryLife(void *a1, const char *a2, ...)
{
  return _[a1 batteryLife];
}

id objc_msgSend_batteryState(void *a1, const char *a2, ...)
{
  return _[a1 batteryState];
}

id objc_msgSend_batteryType(void *a1, const char *a2, ...)
{
  return _[a1 batteryType];
}

id objc_msgSend_beganAttemptWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 beganAttemptWithDevice:];
}

id objc_msgSend_begin(void *a1, const char *a2, ...)
{
  return _[a1 begin];
}

id objc_msgSend_beginAKSSession(void *a1, const char *a2, ...)
{
  return _[a1 beginAKSSession];
}

id objc_msgSend_beginKeyRegistrationIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 beginKeyRegistrationIfNecessary];
}

id objc_msgSend_beginMigrationWithDevice_withCompletion_(void *a1, const char *a2, ...)
{
  return [a1 beginMigrationWithDevice:withCompletion:];
}

id objc_msgSend_beginUnlockIfNotOnLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 beginUnlockIfNotOnLockScreen];
}

id objc_msgSend_behaviorChangedAfterUpgrade(void *a1, const char *a2, ...)
{
  return _[a1 behaviorChangedAfterUpgrade];
}

id objc_msgSend_blackColor(void *a1, const char *a2, ...)
{
  return _[a1 blackColor];
}

id objc_msgSend_bleAdvertisementTimestampMachContinuous(void *a1, const char *a2, ...)
{
  return _[a1 bleAdvertisementTimestampMachContinuous];
}

id objc_msgSend_bleAppleManufacturerData(void *a1, const char *a2, ...)
{
  return _[a1 bleAppleManufacturerData];
}

id objc_msgSend_bleAuthTag(void *a1, const char *a2, ...)
{
  return _[a1 bleAuthTag];
}

id objc_msgSend_bleChannel(void *a1, const char *a2, ...)
{
  return _[a1 bleChannel];
}

id objc_msgSend_bleDevice(void *a1, const char *a2, ...)
{
  return _[a1 bleDevice];
}

id objc_msgSend_bleNearbyInfoSendFrameType_serviceType_data_peer_isSession_(void *a1, const char *a2, ...)
{
  return [a1 bleNearbyInfoSendFrameType:x0 serviceType:x1 data:x2 peer:x3 isSession:x4];
}

id objc_msgSend_bleProximityEstimatorForActionType_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bleProximityEstimatorForActionType:device:");
}

id objc_msgSend_bleProximityEstimatorsResetDeviceClose(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityEstimatorsResetDeviceClose];
}

id objc_msgSend_bleProximityInfo(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityInfo];
}

id objc_msgSend_bleProximityInfoForActionType_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bleProximityInfoForActionType:device:");
}

id objc_msgSend_bleProximityInfoForType_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bleProximityInfoForType:device:");
}

id objc_msgSend_bleProximityInfoForType_device_allInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bleProximityInfoForType:device:allInfo:");
}

id objc_msgSend_bleProximityRSSIEstimatorInfo(void *a1, const char *a2, ...)
{
  return _[a1 bleProximityRSSIEstimatorInfo];
}

id objc_msgSend_bleProximityRSSIThreshold_(void *a1, const char *a2, ...)
{
  return [a1 bleProximityRSSIThreshold];
}

id objc_msgSend_bleProximityRSSIThresholdForType_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bleProximityRSSIThresholdForType:device:");
}

id objc_msgSend_bleRSSI(void *a1, const char *a2, ...)
{
  return _[a1 bleRSSI];
}

id objc_msgSend_bluetoothActivatedWithError_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothActivatedWithError:];
}

id objc_msgSend_bluetoothAddress(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddress];
}

id objc_msgSend_bluetoothAddressData(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAddressData];
}

id objc_msgSend_bluetoothAllowedForScreenState(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothAllowedForScreenState];
}

id objc_msgSend_bluetoothDevicePaired_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDevicePaired:];
}

id objc_msgSend_bluetoothDeviceUnpaired_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDeviceUnpaired:];
}

id objc_msgSend_bluetoothDidSetPowerStateWithError_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothDidSetPowerStateWithError:];
}

id objc_msgSend_bluetoothEnabled(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothEnabled];
}

id objc_msgSend_bluetoothEnabledIncludingRestricted(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothEnabledIncludingRestricted];
}

id objc_msgSend_bluetoothErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothErrorCount];
}

id objc_msgSend_bluetoothID(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothID];
}

id objc_msgSend_bluetoothIDForIDSID_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothIDForIDSID:];
}

id objc_msgSend_bluetoothModel(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothModel];
}

id objc_msgSend_bluetoothMonitorInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothMonitorInvalidated];
}

id objc_msgSend_bluetoothProductID(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothProductID];
}

id objc_msgSend_bluetoothState(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothState];
}

id objc_msgSend_bluetoothStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothStateChanged];
}

id objc_msgSend_bluetoothStateChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 bluetoothStateChangedHandler];
}

id objc_msgSend_bluetoothUserInteractionStart_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothUserInteractionStart:];
}

id objc_msgSend_bluetoothUserInteractionStop_(void *a1, const char *a2, ...)
{
  return [a1 bluetoothUserInteractionStop:];
}

id objc_msgSend_body(void *a1, const char *a2, ...)
{
  return _[a1 body];
}

id objc_msgSend_bodyData(void *a1, const char *a2, ...)
{
  return _[a1 bodyData];
}

id objc_msgSend_boldSystemFontOfSize_(void *a1, const char *a2, ...)
{
  return [a1 boldSystemFontOfSize:];
}

id objc_msgSend_bomCopierCopy_destination_options_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bomCopierCopy:destination:options:");
}

id objc_msgSend_bomCopierCopyFileFinished_type_size_operation_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bomCopierCopyFileFinished:type:size:operation:");
}

id objc_msgSend_bomCopierFatalError_(void *a1, const char *a2, ...)
{
  return [a1 bomCopierFatalError:];
}

id objc_msgSend_bomCopierFatalFileError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bomCopierFatalFileError:");
}

id objc_msgSend_bonjourEnabled(void *a1, const char *a2, ...)
{
  return _[a1 bonjourEnabled];
}

id objc_msgSend_bonjourListenerUUID(void *a1, const char *a2, ...)
{
  return _[a1 bonjourListenerUUID];
}

id objc_msgSend_bonjourName(void *a1, const char *a2, ...)
{
  return _[a1 bonjourName];
}

id objc_msgSend_bonjourNodesDidChange_(void *a1, const char *a2, ...)
{
  return [a1 bonjourNodesDidChange:];
}

id objc_msgSend_bonjourNodesForDomain_(void *a1, const char *a2, ...)
{
  return [a1 bonjourNodesForDomain:];
}

id objc_msgSend_bonjourPTRDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 bonjourPTRDiscovery];
}

id objc_msgSend_bonjourPublisher_propertiesDidChange_(void *a1, const char *a2, ...)
{
  return [a1 bonjourPublisher:propertiesDidChange:];
}

id objc_msgSend_bonjourResolveComplete(void *a1, const char *a2, ...)
{
  return _[a1 bonjourResolveComplete];
}

id objc_msgSend_bonjourResolverDidChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bonjourResolverDidChange:");
}

id objc_msgSend_bonjourTXTRecordDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 bonjourTXTRecordDiscovery];
}

id objc_msgSend_bookmarkExportDataEncodedAsString(void *a1, const char *a2, ...)
{
  return _[a1 bookmarkExportDataEncodedAsString];
}

id objc_msgSend_BOOLForKey_(void *a1, const char *a2, ...)
{
  return [a1 BOOLForKey:];
}

id objc_msgSend_BOOLValue(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValue];
}

id objc_msgSend_BOOLValue_(void *a1, const char *a2, ...)
{
  return [a1 BOOLValue:];
}

id objc_msgSend_BOOLValueSafe(void *a1, const char *a2, ...)
{
  return _[a1 BOOLValueSafe];
}

id objc_msgSend_bottomLabelSlotID(void *a1, const char *a2, ...)
{
  return _[a1 bottomLabelSlotID];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_browseAgent(void *a1, const char *a2, ...)
{
  return _[a1 browseAgent];
}

id objc_msgSend_browseAllInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 browseAllInterfaces];
}

id objc_msgSend_browseResponse(void *a1, const char *a2, ...)
{
  return _[a1 browseResponse];
}

id objc_msgSend_browseStartTime(void *a1, const char *a2, ...)
{
  return _[a1 browseStartTime];
}

id objc_msgSend_browser_didUpdatePeople_deletedContactIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 browser:didUpdatePeople:deletedContactIdentifiers:];
}

id objc_msgSend_browserInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 browserInvalidated];
}

id objc_msgSend_browsing(void *a1, const char *a2, ...)
{
  return _[a1 browsing];
}

id objc_msgSend_btAddr(void *a1, const char *a2, ...)
{
  return _[a1 btAddr];
}

id objc_msgSend_btAddressData(void *a1, const char *a2, ...)
{
  return _[a1 btAddressData];
}

id objc_msgSend_btBootstrap(void *a1, const char *a2, ...)
{
  return _[a1 btBootstrap];
}

id objc_msgSend_btConnectedDeviceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 btConnectedDeviceMonitor];
}

id objc_msgSend_btOverall(void *a1, const char *a2, ...)
{
  return _[a1 btOverall];
}

id objc_msgSend_btleAdvertisementDataForStrings_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "btleAdvertisementDataForStrings:");
}

id objc_msgSend_bufferedDevicesPurgeBlock(void *a1, const char *a2, ...)
{
  return _[a1 bufferedDevicesPurgeBlock];
}

id objc_msgSend_buildNodes(void *a1, const char *a2, ...)
{
  return _[a1 buildNodes];
}

id objc_msgSend_bumpEncryptionKeyCounterValue(void *a1, const char *a2, ...)
{
  return _[a1 bumpEncryptionKeyCounterValue];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass:];
}

id objc_msgSend_bundleID(void *a1, const char *a2, ...)
{
  return _[a1 bundleID];
}

id objc_msgSend_bundleIDToActivities(void *a1, const char *a2, ...)
{
  return _[a1 bundleIDToActivities];
}

id objc_msgSend_bundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 bundleIdentifier];
}

id objc_msgSend_bundlePath(void *a1, const char *a2, ...)
{
  return _[a1 bundlePath];
}

id objc_msgSend_bundleProxy(void *a1, const char *a2, ...)
{
  return _[a1 bundleProxy];
}

id objc_msgSend_bundleProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 bundleProxyForIdentifier:];
}

id objc_msgSend_bundleProxyForiWorkURL_(void *a1, const char *a2, ...)
{
  return [a1 bundleProxyForiWorkURL:];
}

id objc_msgSend_bundleProxyFromCandidateIdentifiers_handlesURL_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bundleProxyFromCandidateIdentifiers:handlesURL:");
}

id objc_msgSend_bundleRecordWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "bundleRecordWithBundleIdentifier:allowPlaceholder:error:");
}

id objc_msgSend_bundleURL(void *a1, const char *a2, ...)
{
  return _[a1 bundleURL];
}

id objc_msgSend_bundleWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 bundleWithIdentifier:];
}

id objc_msgSend_bundleWithPath_(void *a1, const char *a2, ...)
{
  return [a1 bundleWithPath:];
}

id objc_msgSend_bypassLTKeyAbort(void *a1, const char *a2, ...)
{
  return _[a1 bypassLTKeyAbort];
}

id objc_msgSend_bytes(void *a1, const char *a2, ...)
{
  return _[a1 bytes];
}

id objc_msgSend_cacheCertificate_forRealName_(void *a1, const char *a2, ...)
{
  return [a1 cacheCertificate:forRealName:];
}

id objc_msgSend_cacheCount(void *a1, const char *a2, ...)
{
  return _[a1 cacheCount];
}

id objc_msgSend_cacheIconImageData_hash_appName_(void *a1, const char *a2, ...)
{
  return [a1 cacheIconImageData:x0 hash:x1 appName:x2];
}

id objc_msgSend_cacheIdentity_(void *a1, const char *a2, ...)
{
  return [a1 cacheIdentity:];
}

id objc_msgSend_cacheIsEmpty(void *a1, const char *a2, ...)
{
  return _[a1 cacheIsEmpty];
}

id objc_msgSend_cacheLookupKey(void *a1, const char *a2, ...)
{
  return _[a1 cacheLookupKey];
}

id objc_msgSend_cachedApproveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 cachedApproveBluetoothIDs];
}

id objc_msgSend_cachedBluetoothIDToUniqueIDs(void *a1, const char *a2, ...)
{
  return _[a1 cachedBluetoothIDToUniqueIDs];
}

id objc_msgSend_cachedDecryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 cachedDecryptionKeyForDeviceIdentifier:];
}

id objc_msgSend_cachedDeviceWiFiState(void *a1, const char *a2, ...)
{
  return _[a1 cachedDeviceWiFiState];
}

id objc_msgSend_cachedIDSDeviceIDsForBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 cachedIDSDeviceIDsForBluetoothID:];
}

id objc_msgSend_cachedMetrics(void *a1, const char *a2, ...)
{
  return _[a1 cachedMetrics];
}

id objc_msgSend_cachedPersonInfoWithEmailOrPhone_(void *a1, const char *a2, ...)
{
  return [a1 cachedPersonInfoWithEmailOrPhone:];
}

id objc_msgSend_cachedPolicyForActivityType_(void *a1, const char *a2, ...)
{
  return [a1 cachedPolicyForActivityType:];
}

id objc_msgSend_cachedPolicyForBundleID_(void *a1, const char *a2, ...)
{
  return [a1 cachedPolicyForBundleID:];
}

id objc_msgSend_cachedSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 cachedSessionKeys];
}

id objc_msgSend_cachedWatchWiFiState(void *a1, const char *a2, ...)
{
  return _[a1 cachedWatchWiFiState];
}

id objc_msgSend_calendarEvents(void *a1, const char *a2, ...)
{
  return _[a1 calendarEvents];
}

id objc_msgSend_calendarWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 calendarWithIdentifier:];
}

id objc_msgSend_callStackSymbols(void *a1, const char *a2, ...)
{
  return _[a1 callStackSymbols];
}

id objc_msgSend_callTransferInfoForDevice_(void *a1, const char *a2, ...)
{
  return [a1 callTransferInfoForDevice:];
}

id objc_msgSend_callUUID(void *a1, const char *a2, ...)
{
  return _[a1 callUUID];
}

id objc_msgSend_calledAWDLStarted(void *a1, const char *a2, ...)
{
  return _[a1 calledAWDLStarted];
}

id objc_msgSend_canAccessAirDropSettings_(void *a1, const char *a2, ...)
{
  return [a1 canAccessAirDropSettings:];
}

id objc_msgSend_canAccessFileURL_(void *a1, const char *a2, ...)
{
  return [a1 canAccessFileURL:];
}

id objc_msgSend_canAddPasses(void *a1, const char *a2, ...)
{
  return _[a1 canAddPasses];
}

id objc_msgSend_canAuthenticateFor_deviceID_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 canAuthenticateFor:deviceID:sessionID:];
}

id objc_msgSend_canAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 canAutoAccept];
}

id objc_msgSend_canCreateTokenSessionForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 canCreateTokenSessionForDeviceID:];
}

id objc_msgSend_canExpectSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 canExpectSuggestions];
}

id objc_msgSend_canHandleTransfer(void *a1, const char *a2, ...)
{
  return _[a1 canHandleTransfer];
}

id objc_msgSend_canHandleTransferRegardlessOfBundleID(void *a1, const char *a2, ...)
{
  return _[a1 canHandleTransferRegardlessOfBundleID];
}

id objc_msgSend_canHideActivity_(void *a1, const char *a2, ...)
{
  return [a1 canHideActivity:];
}

id objc_msgSend_canPerformUnlocks(void *a1, const char *a2, ...)
{
  return _[a1 canPerformUnlocks];
}

id objc_msgSend_canSuggestForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 canSuggestForDeviceID:];
}

id objc_msgSend_canTransition_(void *a1, const char *a2, ...)
{
  return [a1 canTransition:];
}

id objc_msgSend_cancel(void *a1, const char *a2, ...)
{
  return _[a1 cancel];
}

id objc_msgSend_cancel_(void *a1, const char *a2, ...)
{
  return [a1 cancel:];
}

id objc_msgSend_cancelAction(void *a1, const char *a2, ...)
{
  return _[a1 cancelAction];
}

id objc_msgSend_cancelActionTitleToAccompanyActions_(void *a1, const char *a2, ...)
{
  return [a1 cancelActionTitleToAccompanyActions:];
}

id objc_msgSend_cancelAirDropForNode_(void *a1, const char *a2, ...)
{
  return [a1 cancelAirDropForNode:];
}

id objc_msgSend_cancelAirDropRequests(void *a1, const char *a2, ...)
{
  return _[a1 cancelAirDropRequests];
}

id objc_msgSend_cancelAllLockSessionsForScanTimeout(void *a1, const char *a2, ...)
{
  return _[a1 cancelAllLockSessionsForScanTimeout];
}

id objc_msgSend_cancelAndDecline(void *a1, const char *a2, ...)
{
  return _[a1 cancelAndDecline];
}

id objc_msgSend_cancelAttemptsForDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 cancelAttemptsForDeviceUnlocked];
}

id objc_msgSend_cancelAutoUnlock(void *a1, const char *a2, ...)
{
  return _[a1 cancelAutoUnlock];
}

id objc_msgSend_cancelAutoUnlock_(void *a1, const char *a2, ...)
{
  return [a1 cancelAutoUnlock:];
}

id objc_msgSend_cancelCurrentSend(void *a1, const char *a2, ...)
{
  return _[a1 cancelCurrentSend];
}

id objc_msgSend_cancelEnablingAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 cancelEnablingAllDevices];
}

id objc_msgSend_cancelEnablingAutoUnlockForDevice_(void *a1, const char *a2, ...)
{
  return [a1 cancelEnablingAutoUnlockForDevice:];
}

id objc_msgSend_cancelEnablingAutoUnlockForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 cancelEnablingAutoUnlockForDeviceID:];
}

id objc_msgSend_cancelEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return [a1 cancelEventForRecordID:withResults:];
}

id objc_msgSend_cancelIdentityQueries(void *a1, const char *a2, ...)
{
  return _[a1 cancelIdentityQueries];
}

id objc_msgSend_cancelMagnetLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 cancelMagnetLinkTimer];
}

id objc_msgSend_cancelParallelRegistrationSessionsForDeviceID_newSessionID_(void *a1, const char *a2, ...)
{
  return [a1 cancelParallelRegistrationSessionsForDeviceID:newSessionID:];
}

id objc_msgSend_cancelSend(void *a1, const char *a2, ...)
{
  return _[a1 cancelSend];
}

id objc_msgSend_cancelSendingClassroom(void *a1, const char *a2, ...)
{
  return _[a1 cancelSendingClassroom];
}

id objc_msgSend_cancelSendingItemsToPersonWithID_sessionID_clientBundleID_(void *a1, const char *a2, ...)
{
  return [a1 cancelSendingItemsToPersonWithID:sessionID:clientBundleID:];
}

id objc_msgSend_cancelWiFiRequest(void *a1, const char *a2, ...)
{
  return _[a1 cancelWiFiRequest];
}

id objc_msgSend_cancelWiFiRequest_(void *a1, const char *a2, ...)
{
  return [a1 cancelWiFiRequest:];
}

id objc_msgSend_canceled(void *a1, const char *a2, ...)
{
  return _[a1 canceled];
}

id objc_msgSend_canceledAuthLockSessions(void *a1, const char *a2, ...)
{
  return _[a1 canceledAuthLockSessions];
}

id objc_msgSend_canceledPairingKeySessions(void *a1, const char *a2, ...)
{
  return _[a1 canceledPairingKeySessions];
}

id objc_msgSend_candidateIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 candidateIdentifiers];
}

id objc_msgSend_candidatesForShareSheetRanking(void *a1, const char *a2, ...)
{
  return _[a1 candidatesForShareSheetRanking];
}

id objc_msgSend_capabilitiesForCurrentDevice(void *a1, const char *a2, ...)
{
  return _[a1 capabilitiesForCurrentDevice];
}

id objc_msgSend_capitalizedString(void *a1, const char *a2, ...)
{
  return _[a1 capitalizedString];
}

id objc_msgSend_carplayConnected(void *a1, const char *a2, ...)
{
  return _[a1 carplayConnected];
}

id objc_msgSend_carplayStatusNotification_(void *a1, const char *a2, ...)
{
  return [a1 carplayStatusNotification:];
}

id objc_msgSend_caseInsensitiveCompare_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "caseInsensitiveCompare:");
}

id objc_msgSend_cellularDataEnabled_airplaneMode_(void *a1, const char *a2, ...)
{
  return [a1 cellularDataEnabled:airplaneMode:];
}

id objc_msgSend_certificateExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 certificateExpirationDate];
}

id objc_msgSend_certificateExpired(void *a1, const char *a2, ...)
{
  return _[a1 certificateExpired];
}

id objc_msgSend_certificatePersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 certificatePersistentReference];
}

id objc_msgSend_certificateToken(void *a1, const char *a2, ...)
{
  return _[a1 certificateToken];
}

id objc_msgSend_certificateTokenCreationDate(void *a1, const char *a2, ...)
{
  return _[a1 certificateTokenCreationDate];
}

id objc_msgSend_changeFlags(void *a1, const char *a2, ...)
{
  return _[a1 changeFlags];
}

id objc_msgSend_changedProxySections(void *a1, const char *a2, ...)
{
  return _[a1 changedProxySections];
}

id objc_msgSend_channel(void *a1, const char *a2, ...)
{
  return _[a1 channel];
}

id objc_msgSend_channelFlags(void *a1, const char *a2, ...)
{
  return _[a1 channelFlags];
}

id objc_msgSend_characterAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 characterAtIndex:];
}

id objc_msgSend_characterSetWithCharactersInString_(void *a1, const char *a2, ...)
{
  return [a1 characterSetWithCharactersInString:];
}

id objc_msgSend_chargeLevel(void *a1, const char *a2, ...)
{
  return _[a1 chargeLevel];
}

id objc_msgSend_charging(void *a1, const char *a2, ...)
{
  return _[a1 charging];
}

id objc_msgSend_checkActivityState(void *a1, const char *a2, ...)
{
  return _[a1 checkActivityState];
}

id objc_msgSend_checkDevicePairingState(void *a1, const char *a2, ...)
{
  return _[a1 checkDevicePairingState];
}

id objc_msgSend_checkDeviceRegion_(void *a1, const char *a2, ...)
{
  return [a1 checkDeviceRegion:];
}

id objc_msgSend_checkEntitlementWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 checkEntitlementWithHandler:];
}

id objc_msgSend_checkForBackupExclusion_(void *a1, const char *a2, ...)
{
  return [a1 checkForBackupExclusion:];
}

id objc_msgSend_checkForEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 checkForEscrowData];
}

id objc_msgSend_checkForLegacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 checkForLegacyEscrowData];
}

id objc_msgSend_checkKeyBagState(void *a1, const char *a2, ...)
{
  return _[a1 checkKeyBagState];
}

id objc_msgSend_checkLocalAttestedLTK(void *a1, const char *a2, ...)
{
  return _[a1 checkLocalAttestedLTK];
}

id objc_msgSend_checkLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 checkLocalLTK];
}

id objc_msgSend_checkPolicyForAirDropPeople(void *a1, const char *a2, ...)
{
  return _[a1 checkPolicyForAirDropPeople];
}

id objc_msgSend_checkPolicyForSuggestedPeople(void *a1, const char *a2, ...)
{
  return _[a1 checkPolicyForSuggestedPeople];
}

id objc_msgSend_checkRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 checkRemoteLTKForDeviceID:];
}

id objc_msgSend_checkRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 checkRemoteLTKs];
}

id objc_msgSend_checkResourceIsReachableAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 checkResourceIsReachableAndReturnError:];
}

id objc_msgSend_checkStepState(void *a1, const char *a2, ...)
{
  return _[a1 checkStepState];
}

id objc_msgSend_checkViewState(void *a1, const char *a2, ...)
{
  return _[a1 checkViewState];
}

id objc_msgSend_checkedActivityData(void *a1, const char *a2, ...)
{
  return _[a1 checkedActivityData];
}

id objc_msgSend_checkedCert(void *a1, const char *a2, ...)
{
  return _[a1 checkedCert];
}

id objc_msgSend_checkedStepData(void *a1, const char *a2, ...)
{
  return _[a1 checkedStepData];
}

id objc_msgSend_childrenForNode_(void *a1, const char *a2, ...)
{
  return [a1 childrenForNode:];
}

id objc_msgSend_chosenDevice(void *a1, const char *a2, ...)
{
  return _[a1 chosenDevice];
}

id objc_msgSend_claimRecord(void *a1, const char *a2, ...)
{
  return _[a1 claimRecord];
}

id objc_msgSend_classForOpenByCopyActivity(void *a1, const char *a2, ...)
{
  return _[a1 classForOpenByCopyActivity];
}

id objc_msgSend_classForOpenInPlaceActivity(void *a1, const char *a2, ...)
{
  return _[a1 classForOpenInPlaceActivity];
}

id objc_msgSend_classroomDelegate(void *a1, const char *a2, ...)
{
  return _[a1 classroomDelegate];
}

id objc_msgSend_cleanUpConnections(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpConnections];
}

id objc_msgSend_cleanUpProxySessions(void *a1, const char *a2, ...)
{
  return _[a1 cleanUpProxySessions];
}

id objc_msgSend_cleanUpTransfer_(void *a1, const char *a2, ...)
{
  return [a1 cleanUpTransfer:];
}

id objc_msgSend_cleanUpURL_(void *a1, const char *a2, ...)
{
  return [a1 cleanUpURL:];
}

id objc_msgSend_cleanupAirDropRequest_(void *a1, const char *a2, ...)
{
  return [a1 cleanupAirDropRequest:];
}

id objc_msgSend_cleanupRecordQuery_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return [a1 cleanupRecordQuery:x0 type:x1 domain:x2 recordType:x3];
}

id objc_msgSend_cleanupRecordQueryForKey_(void *a1, const char *a2, ...)
{
  return [a1 cleanupRecordQueryForKey:];
}

id objc_msgSend_cleanupRecordQueryForNetService_recordType_(void *a1, const char *a2, ...)
{
  return [a1 cleanupRecordQueryForNetService:recordType:];
}

id objc_msgSend_clearAccountAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 clearAccountAltDSID];
}

id objc_msgSend_clearAllDeviceIDsMissingSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 clearAllDeviceIDsMissingSessionKeys];
}

id objc_msgSend_clearAllKeysWithTokens(void *a1, const char *a2, ...)
{
  return _[a1 clearAllKeysWithTokens];
}

id objc_msgSend_clearAutoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 clearAutoUnlockDeviceCache];
}

id objc_msgSend_clearCache(void *a1, const char *a2, ...)
{
  return _[a1 clearCache];
}

id objc_msgSend_clearCacheAndNotify(void *a1, const char *a2, ...)
{
  return _[a1 clearCacheAndNotify];
}

id objc_msgSend_clearCacheWithSync_(void *a1, const char *a2, ...)
{
  return [a1 clearCacheWithSync:];
}

id objc_msgSend_clearComputerName(void *a1, const char *a2, ...)
{
  return _[a1 clearComputerName];
}

id objc_msgSend_clearDeviceList(void *a1, const char *a2, ...)
{
  return _[a1 clearDeviceList];
}

id objc_msgSend_clearLocalHostName(void *a1, const char *a2, ...)
{
  return _[a1 clearLocalHostName];
}

id objc_msgSend_clearMyAppleIDInfo(void *a1, const char *a2, ...)
{
  return _[a1 clearMyAppleIDInfo];
}

id objc_msgSend_clearMyIconAndHash(void *a1, const char *a2, ...)
{
  return _[a1 clearMyIconAndHash];
}

id objc_msgSend_clearNextDayTimer(void *a1, const char *a2, ...)
{
  return _[a1 clearNextDayTimer];
}

id objc_msgSend_clearPendingFollowUpItemsWithUniqueIdentifiers_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "clearPendingFollowUpItemsWithUniqueIdentifiers:error:");
}

id objc_msgSend_clearPersistedKeyRequests(void *a1, const char *a2, ...)
{
  return _[a1 clearPersistedKeyRequests];
}

id objc_msgSend_clearPersonInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 clearPersonInfoCache];
}

id objc_msgSend_clearPhoneAutoUnlockNotification_(void *a1, const char *a2, ...)
{
  return [a1 clearPhoneAutoUnlockNotification:];
}

id objc_msgSend_clearPhoneAutoUnlockUpsellNotification_(void *a1, const char *a2, ...)
{
  return [a1 clearPhoneAutoUnlockUpsellNotification:];
}

id objc_msgSend_clearRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 clearRemoteLTKs];
}

id objc_msgSend_clearStateForSession_(void *a1, const char *a2, ...)
{
  return [a1 clearStateForSession:];
}

id objc_msgSend_clearWirelessState(void *a1, const char *a2, ...)
{
  return _[a1 clearWirelessState];
}

id objc_msgSend_client(void *a1, const char *a2, ...)
{
  return _[a1 client];
}

id objc_msgSend_clientAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 clientAdvertisement];
}

id objc_msgSend_clientBundleID(void *a1, const char *a2, ...)
{
  return _[a1 clientBundleID];
}

id objc_msgSend_clientDismissUserNotification(void *a1, const char *a2, ...)
{
  return _[a1 clientDismissUserNotification];
}

id objc_msgSend_clientInputStream(void *a1, const char *a2, ...)
{
  return _[a1 clientInputStream];
}

id objc_msgSend_clientMap(void *a1, const char *a2, ...)
{
  return _[a1 clientMap];
}

id objc_msgSend_clientNotificationPostIfNeededForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "clientNotificationPostIfNeededForDevice:");
}

id objc_msgSend_clientNotificationRemoveForDevice_(void *a1, const char *a2, ...)
{
  return [a1 clientNotificationRemoveForDevice:];
}

id objc_msgSend_clientNotificationUpdateForDevice_rtiData_(void *a1, const char *a2, ...)
{
  return [a1 clientNotificationUpdateForDevice:rtiData:];
}

id objc_msgSend_clientOutputStream(void *a1, const char *a2, ...)
{
  return _[a1 clientOutputStream];
}

id objc_msgSend_clientPairingSucceeded_completion_(void *a1, const char *a2, ...)
{
  return [a1 clientPairingSucceeded:completion:];
}

id objc_msgSend_clientPromptForPIN_throttleSeconds_(void *a1, const char *a2, ...)
{
  return [a1 clientPromptForPIN:throttleSeconds:];
}

id objc_msgSend_clientProvidedError(void *a1, const char *a2, ...)
{
  return _[a1 clientProvidedError];
}

id objc_msgSend_clientProxy(void *a1, const char *a2, ...)
{
  return _[a1 clientProxy];
}

id objc_msgSend_clientQueue(void *a1, const char *a2, ...)
{
  return _[a1 clientQueue];
}

id objc_msgSend_clientSession(void *a1, const char *a2, ...)
{
  return _[a1 clientSession];
}

id objc_msgSend_clientTokens(void *a1, const char *a2, ...)
{
  return _[a1 clientTokens];
}

id objc_msgSend_clientUserDidTapNotification_(void *a1, const char *a2, ...)
{
  return [a1 clientUserDidTapNotification:];
}

id objc_msgSend_clinkDevice(void *a1, const char *a2, ...)
{
  return _[a1 clinkDevice];
}

id objc_msgSend_close(void *a1, const char *a2, ...)
{
  return _[a1 close];
}

id objc_msgSend_closeFile(void *a1, const char *a2, ...)
{
  return _[a1 closeFile];
}

id objc_msgSend_closeNode_(void *a1, const char *a2, ...)
{
  return [a1 closeNode:];
}

id objc_msgSend_closeProximityEstimatorMedium(void *a1, const char *a2, ...)
{
  return _[a1 closeProximityEstimatorMedium];
}

id objc_msgSend_closeProximityEstimatorSmall(void *a1, const char *a2, ...)
{
  return _[a1 closeProximityEstimatorSmall];
}

id objc_msgSend_closeStreamsForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 closeStreamsForIdentifier:];
}

id objc_msgSend_cloudPairRetryRecords(void *a1, const char *a2, ...)
{
  return _[a1 cloudPairRetryRecords];
}

id objc_msgSend_coalesceMe(void *a1, const char *a2, ...)
{
  return _[a1 coalesceMe];
}

id objc_msgSend_coalescedNodesForNewAvailableNodes_(void *a1, const char *a2, ...)
{
  return [a1 coalescedNodesForNewAvailableNodes:];
}

id objc_msgSend_code(void *a1, const char *a2, ...)
{
  return _[a1 code];
}

id objc_msgSend_colorArrayFromEcolor_icolor_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "colorArrayFromEcolor:icolor:")];
}

id objc_msgSend_colorCode(void *a1, const char *a2, ...)
{
  return _[a1 colorCode];
}

id objc_msgSend_colorWithRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 colorWithRed:x0 green:x1 blue:x2 alpha:x3];
}

id objc_msgSend_combineRecentAndConnectedNodes_(void *a1, const char *a2, ...)
{
  return [a1 combineRecentAndConnectedNodes:];
}

id objc_msgSend_combinedProblemFlags(void *a1, const char *a2, ...)
{
  return _[a1 combinedProblemFlags];
}

id objc_msgSend_commentChanged_comment_(void *a1, const char *a2, ...)
{
  return [a1 commentChanged:comment:];
}

id objc_msgSend_commit(void *a1, const char *a2, ...)
{
  return _[a1 commit];
}

id objc_msgSend_commonNameForCertificate_(void *a1, const char *a2, ...)
{
  return [a1 commonNameForCertificate:];
}

id objc_msgSend_companionCurrentlySyncing(void *a1, const char *a2, ...)
{
  return _[a1 companionCurrentlySyncing];
}

id objc_msgSend_companionDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 companionDeviceModel];
}

id objc_msgSend_companionIDForWatchID_(void *a1, const char *a2, ...)
{
  return [a1 companionIDForWatchID:];
}

id objc_msgSend_companionIDStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 companionIDStorageFilePath];
}

id objc_msgSend_companionLinkClient(void *a1, const char *a2, ...)
{
  return _[a1 companionLinkClient];
}

id objc_msgSend_companionNeedsUnlock(void *a1, const char *a2, ...)
{
  return _[a1 companionNeedsUnlock];
}

id objc_msgSend_companionStreamClosedStreams_(void *a1, const char *a2, ...)
{
  return [a1 companionStreamClosedStreams:];
}

id objc_msgSend_companionViewNotSyncing(void *a1, const char *a2, ...)
{
  return _[a1 companionViewNotSyncing];
}

id objc_msgSend_compare_(void *a1, const char *a2, ...)
{
  return [a1 compare:];
}

id objc_msgSend_compare_options_(void *a1, const char *a2, ...)
{
  return [a1 compare:options:];
}

id objc_msgSend_compareWithRPIdentity_(void *a1, const char *a2, ...)
{
  return [a1 compareWithRPIdentity:];
}

id objc_msgSend_compatibilityState(void *a1, const char *a2, ...)
{
  return _[a1 compatibilityState];
}

id objc_msgSend_completeAttemptIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 completeAttemptIfNecessary];
}

id objc_msgSend_completeAttemptPostNotification_(void *a1, const char *a2, ...)
{
  return [a1 completeAttemptPostNotification:];
}

id objc_msgSend_completeAutoUnlockWithNotification_(void *a1, const char *a2, ...)
{
  return [a1 completeAutoUnlockWithNotification:];
}

id objc_msgSend_completeExchange(void *a1, const char *a2, ...)
{
  return _[a1 completeExchange];
}

id objc_msgSend_completeSuccessfulAttempt(void *a1, const char *a2, ...)
{
  return _[a1 completeSuccessfulAttempt];
}

id objc_msgSend_completedAuthenticationSessionWithID_(void *a1, const char *a2, ...)
{
  return [a1 completedAuthenticationSessionWithID:];
}

id objc_msgSend_completedURLs(void *a1, const char *a2, ...)
{
  return _[a1 completedURLs];
}

id objc_msgSend_completedUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 completedUnitCount];
}

id objc_msgSend_completedUnlockWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 completedUnlockWithDevice:];
}

id objc_msgSend_completion(void *a1, const char *a2, ...)
{
  return _[a1 completion];
}

id objc_msgSend_completionHandler(void *a1, const char *a2, ...)
{
  return _[a1 completionHandler];
}

id objc_msgSend_completionHandlersByMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 completionHandlersByMessageIdentifier];
}

id objc_msgSend_components_fromDate_(void *a1, const char *a2, ...)
{
  return [a1 components:fromDate:];
}

id objc_msgSend_components_fromDate_toDate_options_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "components:fromDate:toDate:options:");
}

id objc_msgSend_componentsAreEqualTo_(void *a1, const char *a2, ...)
{
  return [a1 componentsAreEqualTo:];
}

id objc_msgSend_componentsJoinedByString_(void *a1, const char *a2, ...)
{
  return [a1 componentsJoinedByString:];
}

id objc_msgSend_componentsSeparatedByCharactersInSet_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "componentsSeparatedByCharactersInSet:");
}

id objc_msgSend_componentsSeparatedByString_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "componentsSeparatedByString:");
}

id objc_msgSend_componentsWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 componentsWithURL:x0 resolvingAgainstBaseURL:x1];
}

id objc_msgSend_compressionType(void *a1, const char *a2, ...)
{
  return _[a1 compressionType];
}

id objc_msgSend_computerName(void *a1, const char *a2, ...)
{
  return _[a1 computerName];
}

id objc_msgSend_computerToComputer(void *a1, const char *a2, ...)
{
  return _[a1 computerToComputer];
}

id objc_msgSend_confidence(void *a1, const char *a2, ...)
{
  return _[a1 confidence];
}

id objc_msgSend_configChangeType(void *a1, const char *a2, ...)
{
  return _[a1 configChangeType];
}

id objc_msgSend_configuration(void *a1, const char *a2, ...)
{
  return _[a1 configuration];
}

id objc_msgSend_configurationForContinuityDisplay(void *a1, const char *a2, ...)
{
  return _[a1 configurationForContinuityDisplay];
}

id objc_msgSend_configurationForDataSourceUpdateWithSession_(void *a1, const char *a2, ...)
{
  return [a1 configurationForDataSourceUpdateWithSession:];
}

id objc_msgSend_configurationForDefaultMainDisplayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 configurationForDefaultMainDisplayMonitor];
}

id objc_msgSend_configureAirDropNodesFromSuggestionNodes_shareUserDefaults_forSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "configureAirDropNodesFromSuggestionNodes:shareUserDefaults:forSession:");
}

id objc_msgSend_configureCBDiscoveryScreenOffPairing(void *a1, const char *a2, ...)
{
  return _[a1 configureCBDiscoveryScreenOffPairing];
}

id objc_msgSend_configureSettingsForAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 configureSettingsForAirDrop];
}

id objc_msgSend_confirmSession(void *a1, const char *a2, ...)
{
  return _[a1 confirmSession];
}

id objc_msgSend_confirmUnlockWithAuthSession_(void *a1, const char *a2, ...)
{
  return [a1 confirmUnlockWithAuthSession:];
}

id objc_msgSend_confirmation(void *a1, const char *a2, ...)
{
  return _[a1 confirmation];
}

id objc_msgSend_confirmationDuration(void *a1, const char *a2, ...)
{
  return _[a1 confirmationDuration];
}

id objc_msgSend_confirmationReceived(void *a1, const char *a2, ...)
{
  return _[a1 confirmationReceived];
}

id objc_msgSend_confirmationSendDate(void *a1, const char *a2, ...)
{
  return _[a1 confirmationSendDate];
}

id objc_msgSend_confirmationTimer(void *a1, const char *a2, ...)
{
  return _[a1 confirmationTimer];
}

id objc_msgSend_conflictResolvedURL_(void *a1, const char *a2, ...)
{
  return [a1 conflictResolvedURL:];
}

id objc_msgSend_connected(void *a1, const char *a2, ...)
{
  return _[a1 connected];
}

id objc_msgSend_connectedBluetoothDevices(void *a1, const char *a2, ...)
{
  return _[a1 connectedBluetoothDevices];
}

id objc_msgSend_connectedCallCount(void *a1, const char *a2, ...)
{
  return _[a1 connectedCallCount];
}

id objc_msgSend_connectedEnabled(void *a1, const char *a2, ...)
{
  return _[a1 connectedEnabled];
}

id objc_msgSend_connectedHosts(void *a1, const char *a2, ...)
{
  return _[a1 connectedHosts];
}

id objc_msgSend_connectedNodes(void *a1, const char *a2, ...)
{
  return _[a1 connectedNodes];
}

id objc_msgSend_connectedServices(void *a1, const char *a2, ...)
{
  return _[a1 connectedServices];
}

id objc_msgSend_connection(void *a1, const char *a2, ...)
{
  return _[a1 connection];
}

id objc_msgSend_connection_didReceiveIncomingMessage_(void *a1, const char *a2, ...)
{
  return [a1 connection:didReceiveIncomingMessage:];
}

id objc_msgSend_connectionDate(void *a1, const char *a2, ...)
{
  return _[a1 connectionDate];
}

id objc_msgSend_connectionEstablished_(void *a1, const char *a2, ...)
{
  return [a1 connectionEstablished:];
}

id objc_msgSend_connectionInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 connectionInvalidated];
}

id objc_msgSend_connectionInvalidated_(void *a1, const char *a2, ...)
{
  return [a1 connectionInvalidated:];
}

id objc_msgSend_connectionManagerDidInvalidate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "connectionManagerDidInvalidate:");
}

id objc_msgSend_connectionOverP2P_(void *a1, const char *a2, ...)
{
  return [a1 connectionOverP2P:];
}

id objc_msgSend_connectionState(void *a1, const char *a2, ...)
{
  return _[a1 connectionState];
}

id objc_msgSend_connectionTime(void *a1, const char *a2, ...)
{
  return _[a1 connectionTime];
}

id objc_msgSend_connectionWaitTime(void *a1, const char *a2, ...)
{
  return _[a1 connectionWaitTime];
}

id objc_msgSend_consolidateLatencies_(void *a1, const char *a2, ...)
{
  return [a1 consolidateLatencies:];
}

id objc_msgSend_consumeAuthTokenIfReady(void *a1, const char *a2, ...)
{
  return _[a1 consumeAuthTokenIfReady];
}

id objc_msgSend_consumeSandboxExtensions(void *a1, const char *a2, ...)
{
  return _[a1 consumeSandboxExtensions];
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _[a1 contact];
}

id objc_msgSend_contactForCall_(void *a1, const char *a2, ...)
{
  return [a1 contactForCall:];
}

id objc_msgSend_contactID(void *a1, const char *a2, ...)
{
  return _[a1 contactID];
}

id objc_msgSend_contactIDs(void *a1, const char *a2, ...)
{
  return _[a1 contactIDs];
}

id objc_msgSend_contactIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 contactIdentifier];
}

id objc_msgSend_contactIdentifierForMediumHashes_(void *a1, const char *a2, ...)
{
  return [a1 contactIdentifierForMediumHashes:];
}

id objc_msgSend_contactIdentifierIsBlocked_(void *a1, const char *a2, ...)
{
  return [a1 contactIdentifierIsBlocked:];
}

id objc_msgSend_contactInfo(void *a1, const char *a2, ...)
{
  return _[a1 contactInfo];
}

id objc_msgSend_contactIsBlocked_(void *a1, const char *a2, ...)
{
  return [a1 contactIsBlocked:];
}

id objc_msgSend_contactStore(void *a1, const char *a2, ...)
{
  return _[a1 contactStore];
}

id objc_msgSend_contactWithContactIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 contactWithContactIdentifier:];
}

id objc_msgSend_contactWithPreferredIdentifierForContacts_(void *a1, const char *a2, ...)
{
  return [a1 contactWithPreferredIdentifierForContacts:];
}

id objc_msgSend_contacts(void *a1, const char *a2, ...)
{
  return _[a1 contacts];
}

id objc_msgSend_contactsContainsShortHashes_(void *a1, const char *a2, ...)
{
  return [a1 contactsContainsShortHashes:];
}

id objc_msgSend_contactsForCombinedHash_(void *a1, const char *a2, ...)
{
  return [a1 contactsForCombinedHash:];
}

id objc_msgSend_contactsForEmailHash_phoneHash_(void *a1, const char *a2, ...)
{
  return [a1 contactsForEmailHash:phoneHash:];
}

id objc_msgSend_contactsIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 contactsIdentifiers];
}

id objc_msgSend_contactsWithData_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "contactsWithData:error:");
}

id objc_msgSend_contactsWithPhoneNumberOrEmail_keys_(void *a1, const char *a2, ...)
{
  return [a1 contactsWithPhoneNumberOrEmail:x0 keys:x1];
}

id objc_msgSend_containingAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 containingAppBundleIdentifier];
}

id objc_msgSend_containingBundle(void *a1, const char *a2, ...)
{
  return _[a1 containingBundle];
}

id objc_msgSend_containsHEIFImage(void *a1, const char *a2, ...)
{
  return _[a1 containsHEIFImage];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_containsString_(void *a1, const char *a2, ...)
{
  return [a1 containsString:];
}

id objc_msgSend_containsValueForKey_(void *a1, const char *a2, ...)
{
  return [a1 containsValueForKey:];
}

id objc_msgSend_containsVideoWithFormatEligibleForTranscoding(void *a1, const char *a2, ...)
{
  return _[a1 containsVideoWithFormatEligibleForTranscoding];
}

id objc_msgSend_contentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 contentSizeCategory];
}

id objc_msgSend_contextForMatchingByActivityItemValueClasses(void *a1, const char *a2, ...)
{
  return _[a1 contextForMatchingByActivityItemValueClasses];
}

id objc_msgSend_contextForStateRepair(void *a1, const char *a2, ...)
{
  return _[a1 contextForStateRepair];
}

id objc_msgSend_continuationStream_connectedToService_withFileHandle_acceptHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "continuationStream:connectedToService:withFileHandle:acceptHandler:");
}

id objc_msgSend_continuityCaptureLastUsedDate(void *a1, const char *a2, ...)
{
  return _[a1 continuityCaptureLastUsedDate];
}

id objc_msgSend_controlCenterVisible(void *a1, const char *a2, ...)
{
  return _[a1 controlCenterVisible];
}

id objc_msgSend_controlFlags(void *a1, const char *a2, ...)
{
  return _[a1 controlFlags];
}

id objc_msgSend_conversationIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 conversationIdentifier];
}

id objc_msgSend_conversionNeeded(void *a1, const char *a2, ...)
{
  return _[a1 conversionNeeded];
}

id objc_msgSend_convertAdvancedDescriptionToSimple_(void *a1, const char *a2, ...)
{
  return [a1 convertAdvancedDescriptionToSimple:];
}

id objc_msgSend_convertLivePhotoBundleIfNeeded_capabilities_conversionManager_queue_progressHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "convertLivePhotoBundleIfNeeded:capabilities:conversionManager:queue:progressHandler:completionHandler:");
}

id objc_msgSend_convertMediaItemFromURL_forMediaCapabilities_conversionManager_progressHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "convertMediaItemFromURL:forMediaCapabilities:conversionManager:progressHandler:completionHandler:");
}

id objc_msgSend_convertMediaItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 convertMediaItemsWithCompletionHandler:];
}

id objc_msgSend_convertMediaItemsWithFileURLs_clientBundleID_conversionManager_mediaCapabilities_supportsLivePhoto_supportsAssetBundles_supportsWideGamut_queue_progressHandler_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "convertMediaItemsWithFileURLs:clientBundleID:conversionManager:mediaCapabilities:supportsLivePhoto:supportsAssetBundles:supportsWideGamut:queue:progressHandler:completionHandler:");
}

id objc_msgSend_convertShareTargetToNode_(void *a1, const char *a2, ...)
{
  return [a1 convertShareTargetToNode:];
}

id objc_msgSend_convertURLStringsToURLs(void *a1, const char *a2, ...)
{
  return _[a1 convertURLStringsToURLs];
}

id objc_msgSend_convertWideGamutToClampedPhotoForURLs_outTmpDirectory_(void *a1, const char *a2, ...)
{
  return [a1 convertWideGamutToClampedPhotoForURLs:outTmpDirectory:];
}

id objc_msgSend_coordinateAccessWithIntents_queue_byAccessor_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "coordinateAccessWithIntents:queue:byAccessor:");
}

id objc_msgSend_coordinatedAlertRequestCancel_(void *a1, const char *a2, ...)
{
  return [a1 coordinatedAlertRequestCancel:];
}

id objc_msgSend_coordinatedAlertRequestFinish_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "coordinatedAlertRequestFinish:");
}

id objc_msgSend_coordinatedAlertRequestStart_(void *a1, const char *a2, ...)
{
  return [a1 coordinatedAlertRequestStart:];
}

id objc_msgSend_coordinator(void *a1, const char *a2, ...)
{
  return _[a1 coordinator];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_copyCarrierBundleValueWithDefault_key_bundleType_completion_(void *a1, const char *a2, ...)
{
  return [a1 copyCarrierBundleValueWithDefault:x0 key:x1 bundleType:x2 completion:x3];
}

id objc_msgSend_copyCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyCertificate];
}

id objc_msgSend_copyCertificateForRealName_(void *a1, const char *a2, ...)
{
  return [a1 copyCertificateForRealName:];
}

id objc_msgSend_copyConversationIdentityImageIconDataForImage_forConversationIdentifier_style_diameter_monogramsAsFlatImages_isContactImage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "copyConversationIdentityImageIconDataForImage:forConversationIdentifier:style:diameter:monogramsAsFlatImages:isContactImage:");
}

id objc_msgSend_copyIdentity(void *a1, const char *a2, ...)
{
  return _[a1 copyIdentity];
}

id objc_msgSend_copyIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 copyIdentityForAppleID:];
}

id objc_msgSend_copyIntermediateCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyIntermediateCertificate];
}

id objc_msgSend_copyItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 copyItemAtURL:toURL:error:];
}

id objc_msgSend_copyMyAppleIDAndReturnError_(void *a1, const char *a2, ...)
{
  return [a1 copyMyAppleIDAndReturnError:];
}

id objc_msgSend_copyMyAppleIDIntermediateCertificate(void *a1, const char *a2, ...)
{
  return _[a1 copyMyAppleIDIntermediateCertificate];
}

id objc_msgSend_copyMyAppleIDSecIdentity(void *a1, const char *a2, ...)
{
  return _[a1 copyMyAppleIDSecIdentity];
}

id objc_msgSend_copyNodeForService_(void *a1, const char *a2, ...)
{
  return [a1 copyNodeForService:];
}

id objc_msgSend_copyPrivateKey(void *a1, const char *a2, ...)
{
  return _[a1 copyPrivateKey];
}

id objc_msgSend_copyPropertyForKey_(void *a1, const char *a2, ...)
{
  return [a1 copyPropertyForKey:];
}

id objc_msgSend_copyReadStream(void *a1, const char *a2, ...)
{
  return _[a1 copyReadStream];
}

id objc_msgSend_copyReceiverPublicKeyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 copyReceiverPublicKeyForIdentifier:];
}

id objc_msgSend_copyReverseParentChain_base_(void *a1, const char *a2, ...)
{
  return [a1 copyReverseParentChain:nil base:nil];
}

id objc_msgSend_copyWithZone_(void *a1, const char *a2, ...)
{
  return [a1 copyWithZone:];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:x0, x1, x2];
}

id objc_msgSend_countForObject_(void *a1, const char *a2, ...)
{
  return [a1 countForObject:];
}

id objc_msgSend_counterpartIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 counterpartIdentifier];
}

id objc_msgSend_createAdvertisingInformation(void *a1, const char *a2, ...)
{
  return _[a1 createAdvertisingInformation];
}

id objc_msgSend_createAirDropProxyForNode_session_(void *a1, const char *a2, ...)
{
  return [a1 createAirDropProxyForNode:session:];
}

id objc_msgSend_createAuthTokenIfReady(void *a1, const char *a2, ...)
{
  return _[a1 createAuthTokenIfReady];
}

id objc_msgSend_createBlockToPerformBlockOnMainQueue_withDelay_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createBlockToPerformBlockOnMainQueue:withDelay:");
}

id objc_msgSend_createConnectionForEnabledEnterpriseConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 createConnectionForEnabledEnterpriseConfiguration];
}

id objc_msgSend_createDirectoryAtPath_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return [a1 createDirectoryAtPath:x0 withIntermediateDirectories:x1 attributes:x2 error:x3];
}

id objc_msgSend_createDirectoryAtURL_withIntermediateDirectories_attributes_error_(void *a1, const char *a2, ...)
{
  return [a1 createDirectoryAtURL:withIntermediateDirectories:attributes:error:];
}

id objc_msgSend_createFileAtPath_contents_attributes_(void *a1, const char *a2, ...)
{
  return [a1 createFileAtPath:x0 contents:x1 attributes:x2];
}

id objc_msgSend_createHostNameKey_(void *a1, const char *a2, ...)
{
  return [a1 createHostNameKey:];
}

id objc_msgSend_createLockSessionWithWatchDevice_(void *a1, const char *a2, ...)
{
  return [a1 createLockSessionWithWatchDevice:];
}

id objc_msgSend_createMailContentForRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createMailContentForRequest:completionHandler:")];
}

id objc_msgSend_createPairingKeySessionWithIdentifier_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return [a1 createPairingKeySessionWithIdentifier:deviceID:requestData:];
}

id objc_msgSend_createPeopleSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 createPeopleSuggestion];
}

id objc_msgSend_createPersonForAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 createPersonForAskRequest];
}

id objc_msgSend_createPlaceholderFiles(void *a1, const char *a2, ...)
{
  return _[a1 createPlaceholderFiles];
}

id objc_msgSend_createRadarForError_devices_rangingResults_(void *a1, const char *a2, ...)
{
  return [a1 createRadarForError:x0 devices:x1 rangingResults:x2];
}

id objc_msgSend_createRapportClientWithDestinationDevice_(void *a1, const char *a2, ...)
{
  return [a1 createRapportClientWithDestinationDevice:];
}

id objc_msgSend_createRegistrationKeySessionWithIdentifier_deviceID_requestData_locallyGenerated_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createRegistrationKeySessionWithIdentifier:deviceID:requestData:locallyGenerated:");
}

id objc_msgSend_createRegistrationLockSessionWithDeviceID_sessionID_requestData_(void *a1, const char *a2, ...)
{
  return [a1 createRegistrationLockSessionWithDeviceID:sessionID:requestData:];
}

id objc_msgSend_createSFNodeFromCNContacts_identifier_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createSFNodeFromCNContacts:identifier:device:");
}

id objc_msgSend_createSFNodeFromMyRPDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createSFNodeFromMyRPDevice:");
}

id objc_msgSend_createSFNodeFromRPPerson_(void *a1, const char *a2, ...)
{
  return [a1 createSFNodeFromRPPerson:];
}

id objc_msgSend_createSession(void *a1, const char *a2, ...)
{
  return _[a1 createSession];
}

id objc_msgSend_createSharingURLForCollaborationRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 createSharingURLForCollaborationRequest:completionHandler:];
}

id objc_msgSend_createSlot(void *a1, const char *a2, ...)
{
  return _[a1 createSlot];
}

id objc_msgSend_createSlotForContext_(void *a1, const char *a2, ...)
{
  return [a1 createSlotForContext:];
}

id objc_msgSend_createURLPayloadForData_ofType_withAttachmentName_description_previewImage_itemIndex_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "createURLPayloadForData:ofType:withAttachmentName:description:previewImage:itemIndex:completion:");
}

id objc_msgSend_createWiFiRequest(void *a1, const char *a2, ...)
{
  return _[a1 createWiFiRequest];
}

id objc_msgSend_creationRequestForAsset(void *a1, const char *a2, ...)
{
  return _[a1 creationRequestForAsset];
}

id objc_msgSend_creationRequestForAssetFromAssetBundle_(void *a1, const char *a2, ...)
{
  return [a1 creationRequestForAssetFromAssetBundle:];
}

id objc_msgSend_creationRequestForAssetFromVideoComplementBundle_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "creationRequestForAssetFromVideoComplementBundle:");
}

id objc_msgSend_credential(void *a1, const char *a2, ...)
{
  return _[a1 credential];
}

id objc_msgSend_credentialForTrust_(void *a1, const char *a2, ...)
{
  return [a1 credentialForTrust:];
}

id objc_msgSend_credentialLog_(void *a1, const char *a2, ...)
{
  return [a1 credentialLog:];
}

id objc_msgSend_credentialWithIdentity_certificates_persistence_(void *a1, const char *a2, ...)
{
  return [a1 credentialWithIdentity:x0 certificates:x1 persistence:x2];
}

id objc_msgSend_credentialsWithCompletionHandler_canConnectOn5GHz_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "credentialsWithCompletionHandler:canConnectOn5GHz:")
}

id objc_msgSend_cuFilteredArrayUsingBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "cuFilteredArrayUsingBlock:");
}

id objc_msgSend_cuValueForEntitlementNoCache_(void *a1, const char *a2, ...)
{
  return [a1 cuValueForEntitlementNoCache:];
}

id objc_msgSend_currentApplicationLabel(void *a1, const char *a2, ...)
{
  return _[a1 currentApplicationLabel];
}

id objc_msgSend_currentBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 currentBluetoothIDs];
}

id objc_msgSend_currentCalendar(void *a1, const char *a2, ...)
{
  return _[a1 currentCalendar];
}

id objc_msgSend_currentCall(void *a1, const char *a2, ...)
{
  return _[a1 currentCall];
}

id objc_msgSend_currentCalls(void *a1, const char *a2, ...)
{
  return _[a1 currentCalls];
}

id objc_msgSend_currentConnection(void *a1, const char *a2, ...)
{
  return _[a1 currentConnection];
}

id objc_msgSend_currentConsoleUser(void *a1, const char *a2, ...)
{
  return _[a1 currentConsoleUser];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_currentHandler(void *a1, const char *a2, ...)
{
  return _[a1 currentHandler];
}

id objc_msgSend_currentHistoryToken(void *a1, const char *a2, ...)
{
  return _[a1 currentHistoryToken];
}

id objc_msgSend_currentKnownNetworkProfile(void *a1, const char *a2, ...)
{
  return _[a1 currentKnownNetworkProfile];
}

id objc_msgSend_currentPreferredPollingType(void *a1, const char *a2, ...)
{
  return _[a1 currentPreferredPollingType];
}

id objc_msgSend_currentRequest(void *a1, const char *a2, ...)
{
  return _[a1 currentRequest];
}

id objc_msgSend_currentRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 currentRunLoop];
}

id objc_msgSend_currentSession(void *a1, const char *a2, ...)
{
  return _[a1 currentSession];
}

id objc_msgSend_currentState(void *a1, const char *a2, ...)
{
  return _[a1 currentState];
}

id objc_msgSend_currentTransaction(void *a1, const char *a2, ...)
{
  return _[a1 currentTransaction];
}

id objc_msgSend_currentUser(void *a1, const char *a2, ...)
{
  return _[a1 currentUser];
}

id objc_msgSend_customDestinationURL(void *a1, const char *a2, ...)
{
  return _[a1 customDestinationURL];
}

id objc_msgSend_customEntitlement_(void *a1, const char *a2, ...)
{
  return [a1 customEntitlement:];
}

id objc_msgSend_cycling(void *a1, const char *a2, ...)
{
  return _[a1 cycling];
}

id objc_msgSend_d2dEncryptionAvailable(void *a1, const char *a2, ...)
{
  return _[a1 d2dEncryptionAvailable];
}

id objc_msgSend_d2dEncryptionChanged(void *a1, const char *a2, ...)
{
  return _[a1 d2dEncryptionChanged];
}

id objc_msgSend_dailyMetricReporter(void *a1, const char *a2, ...)
{
  return _[a1 dailyMetricReporter];
}

id objc_msgSend_dailyMetrics(void *a1, const char *a2, ...)
{
  return _[a1 dailyMetrics];
}

id objc_msgSend_data(void *a1, const char *a2, ...)
{
  return _[a1 data];
}

id objc_msgSend_dataClassStringForDataClass_(void *a1, const char *a2, ...)
{
  return [a1 dataClassStringForDataClass:];
}

id objc_msgSend_dataDocuments(void *a1, const char *a2, ...)
{
  return _[a1 dataDocuments];
}

id objc_msgSend_dataFromHexString_(void *a1, const char *a2, ...)
{
  return [a1 dataFromHexString:];
}

id objc_msgSend_dataFromRange_documentAttributes_error_(void *a1, const char *a2, ...)
{
  return [a1 dataFromRange:x0 documentAttributes:x1 error:x2];
}

id objc_msgSend_dataFromTXTRecordDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dataFromTXTRecordDictionary:];
}

id objc_msgSend_dataFromUUID_(void *a1, const char *a2, ...)
{
  return [a1 dataFromUUID:];
}

id objc_msgSend_dataRepresentationForCurrentEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 dataRepresentationForCurrentEncryptionKey];
}

id objc_msgSend_dataSourceDidUpdateForSession_animated_(void *a1, const char *a2, ...)
{
  return [a1 dataSourceDidUpdateForSession:animated:];
}

id objc_msgSend_dataSourceUpdatedWithSessionConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 dataSourceUpdatedWithSessionConfiguration:];
}

id objc_msgSend_dataTaskWithRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 dataTaskWithRequest:];
}

id objc_msgSend_dataTypeForItem_(void *a1, const char *a2, ...)
{
  return [a1 dataTypeForItem:];
}

id objc_msgSend_dataUsingEncoding_(void *a1, const char *a2, ...)
{
  return [a1 dataUsingEncoding:];
}

id objc_msgSend_dataWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 dataWithBytes:];
}

id objc_msgSend_dataWithBytesNoCopy_length_freeWhenDone_(void *a1, const char *a2, ...)
{
  return [a1 dataWithBytesNoCopy:x0 length:x1 freeWhenDone:x2];
}

id objc_msgSend_dataWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dataWithCapacity:];
}

id objc_msgSend_dataWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfFile:x0 options:x1 error:x2];
}

id objc_msgSend_dataWithContentsOfURL_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfURL:];
}

id objc_msgSend_dataWithContentsOfURL_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithContentsOfURL:options:error:];
}

id objc_msgSend_dataWithData_(void *a1, const char *a2, ...)
{
  return [a1 dataWithData:];
}

id objc_msgSend_dataWithJSONObject_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithJSONObject:x0 options:x1 error:x2];
}

id objc_msgSend_dataWithLength_(void *a1, const char *a2, ...)
{
  return [a1 dataWithLength:];
}

id objc_msgSend_dataWithPropertyList_format_options_error_(void *a1, const char *a2, ...)
{
  return [a1 dataWithPropertyList:x0 format:x1 options:x2 error:x3];
}

id objc_msgSend_date(void *a1, const char *a2, ...)
{
  return _[a1 date];
}

id objc_msgSend_dateByAddingTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 dateByAddingTimeInterval:];
}

id objc_msgSend_dateCreated(void *a1, const char *a2, ...)
{
  return _[a1 dateCreated];
}

id objc_msgSend_dateWithTimeIntervalSince1970_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSince1970:];
}

id objc_msgSend_dateWithTimeIntervalSinceNow_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceNow:];
}

id objc_msgSend_dateWithTimeIntervalSinceReferenceDate_(void *a1, const char *a2, ...)
{
  return [a1 dateWithTimeIntervalSinceReferenceDate:];
}

id objc_msgSend_day(void *a1, const char *a2, ...)
{
  return _[a1 day];
}

id objc_msgSend_deactivate(void *a1, const char *a2, ...)
{
  return _[a1 deactivate];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 decimalDigitCharacterSet];
}

id objc_msgSend_declareSystemActivityAssertion(void *a1, const char *a2, ...)
{
  return _[a1 declareSystemActivityAssertion];
}

id objc_msgSend_decodeBoolForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeBoolForKey:];
}

id objc_msgSend_decodeDictionaryWithKeysOfClasses_objectsOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "decodeDictionaryWithKeysOfClasses:objectsOfClasses:forKey:");
}

id objc_msgSend_decodeDoubleForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeDoubleForKey:];
}

id objc_msgSend_decodeFloatForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeFloatForKey:];
}

id objc_msgSend_decodeInt32ForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeInt32ForKey:];
}

id objc_msgSend_decodeInt64ForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeInt64ForKey:];
}

id objc_msgSend_decodeIntegerForKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeIntegerForKey:];
}

id objc_msgSend_decodeObjectOfClass_forKey_(void *a1, const char *a2, ...)
{
  return [a1 decodeObjectOfClass:forKey:];
}

id objc_msgSend_decodeObjectOfClasses_forKey_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "decodeObjectOfClasses:forKey:");
}

id objc_msgSend_decrementAttemptCount(void *a1, const char *a2, ...)
{
  return _[a1 decrementAttemptCount];
}

id objc_msgSend_decryptMessage_authTag_nonce_bluetoothID_cachedDevices_errorCode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "decryptMessage:authTag:nonce:bluetoothID:cachedDevices:errorCode:");
}

id objc_msgSend_decryptedActivityLevel(void *a1, const char *a2, ...)
{
  return _[a1 decryptedActivityLevel];
}

id objc_msgSend_decryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 decryptionKey];
}

id objc_msgSend_decryptionKeyForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 decryptionKeyForDeviceIdentifier:];
}

id objc_msgSend_defaultAccountForFeature_completion_(void *a1, const char *a2, ...)
{
  return [a1 defaultAccountForFeature:completion:];
}

id objc_msgSend_defaultActionForBundleProxy_(void *a1, const char *a2, ...)
{
  return [a1 defaultActionForBundleProxy:];
}

id objc_msgSend_defaultCalendarForNewEvents(void *a1, const char *a2, ...)
{
  return _[a1 defaultCalendarForNewEvents];
}

id objc_msgSend_defaultCenter(void *a1, const char *a2, ...)
{
  return _[a1 defaultCenter];
}

id objc_msgSend_defaultConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 defaultConfiguration];
}

id objc_msgSend_defaultDatabaseDirectory(void *a1, const char *a2, ...)
{
  return _[a1 defaultDatabaseDirectory];
}

id objc_msgSend_defaultDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 defaultDiscoverableMode];
}

id objc_msgSend_defaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 defaultFolder];
}

id objc_msgSend_defaultManager(void *a1, const char *a2, ...)
{
  return _[a1 defaultManager];
}

id objc_msgSend_defaultOpenActionBundleID(void *a1, const char *a2, ...)
{
  return _[a1 defaultOpenActionBundleID];
}

id objc_msgSend_defaultOptions(void *a1, const char *a2, ...)
{
  return _[a1 defaultOptions];
}

id objc_msgSend_defaultSFNodeFlags(void *a1, const char *a2, ...)
{
  return _[a1 defaultSFNodeFlags];
}

id objc_msgSend_defaultShareModeCollaboration(void *a1, const char *a2, ...)
{
  return _[a1 defaultShareModeCollaboration];
}

id objc_msgSend_defaultSortGroup(void *a1, const char *a2, ...)
{
  return _[a1 defaultSortGroup];
}

id objc_msgSend_defaultStore(void *a1, const char *a2, ...)
{
  return _[a1 defaultStore];
}

id objc_msgSend_defaultWiFiDevice(void *a1, const char *a2, ...)
{
  return _[a1 defaultWiFiDevice];
}

id objc_msgSend_defaultWorkspace(void *a1, const char *a2, ...)
{
  return _[a1 defaultWorkspace];
}

id objc_msgSend_delayedStartTimer(void *a1, const char *a2, ...)
{
  return _[a1 delayedStartTimer];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_delegates(void *a1, const char *a2, ...)
{
  return _[a1 delegates];
}

id objc_msgSend_deleteAllEncryptionAndDecryptionKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllEncryptionAndDecryptionKeys];
}

id objc_msgSend_deleteAllEscrowSecrets(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllEscrowSecrets];
}

id objc_msgSend_deleteAllRangingKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteAllRangingKeys];
}

id objc_msgSend_deleteCharactersInRange_(void *a1, const char *a2, ...)
{
  return [a1 deleteCharactersInRange:];
}

id objc_msgSend_deleteEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 deleteEscrowData];
}

id objc_msgSend_deleteEscrowSecretForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 deleteEscrowSecretForDeviceID:];
}

id objc_msgSend_deleteEscrowSecretForPhones(void *a1, const char *a2, ...)
{
  return _[a1 deleteEscrowSecretForPhones];
}

id objc_msgSend_deleteLegacyCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyCompanionIDs];
}

id objc_msgSend_deleteLegacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyEscrowData];
}

id objc_msgSend_deleteLegacyWatchToCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 deleteLegacyWatchToCompanionIDs];
}

id objc_msgSend_deleteLocalAttestedLTK(void *a1, const char *a2, ...)
{
  return _[a1 deleteLocalAttestedLTK];
}

id objc_msgSend_deleteLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 deleteLongTermKeys];
}

id objc_msgSend_deletePersistedLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 deletePersistedLongTermKeys];
}

id objc_msgSend_deletePersonInfoCacheWithAccount_(void *a1, const char *a2, ...)
{
  return [a1 deletePersonInfoCacheWithAccount:];
}

id objc_msgSend_deleteRangingKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 deleteRangingKeyForDeviceID:];
}

id objc_msgSend_deleteRemoteLongTermKeyForDeviceID_modern_tombstone_(void *a1, const char *a2, ...)
{
  return [a1 deleteRemoteLongTermKeyForDeviceID:modern:tombstone:];
}

id objc_msgSend_deleteSlot_(void *a1, const char *a2, ...)
{
  return [a1 deleteSlot:];
}

id objc_msgSend_deregisterRequestID_(void *a1, const char *a2, ...)
{
  return [a1 deregisterRequestID:];
}

id objc_msgSend_deriveKeyFromSharedSecret_(void *a1, const char *a2, ...)
{
  return [a1 deriveKeyFromSharedSecret:];
}

id objc_msgSend_derivedIntentIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 derivedIntentIdentifier];
}

id objc_msgSend_description(void *a1, const char *a2, ...)
{
  return _[a1 description];
}

id objc_msgSend_descriptorForRequiredKeysForStyle_(void *a1, const char *a2, ...)
{
  return [a1 descriptorForRequiredKeysForStyle:];
}

id objc_msgSend_destIPAddress(void *a1, const char *a2, ...)
{
  return _[a1 destIPAddress];
}

id objc_msgSend_destPort(void *a1, const char *a2, ...)
{
  return _[a1 destPort];
}

id objc_msgSend_destination(void *a1, const char *a2, ...)
{
  return _[a1 destination];
}

id objc_msgSend_destinationDevice(void *a1, const char *a2, ...)
{
  return _[a1 destinationDevice];
}

id objc_msgSend_detachMIS(void *a1, const char *a2, ...)
{
  return _[a1 detachMIS];
}

id objc_msgSend_detailedDescription(void *a1, const char *a2, ...)
{
  return _[a1 detailedDescription];
}

id objc_msgSend_device(void *a1, const char *a2, ...)
{
  return _[a1 device];
}

id objc_msgSend_deviceActionType(void *a1, const char *a2, ...)
{
  return _[a1 deviceActionType];
}

id objc_msgSend_deviceChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceChangedHandler];
}

id objc_msgSend_deviceClassCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceClassCode];
}

id objc_msgSend_deviceColorCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceColorCode];
}

id objc_msgSend_deviceCurrentlyUnlockedByWatch(void *a1, const char *a2, ...)
{
  return _[a1 deviceCurrentlyUnlockedByWatch];
}

id objc_msgSend_deviceDidConnect_(void *a1, const char *a2, ...)
{
  return [a1 deviceDidConnect:];
}

id objc_msgSend_deviceDidUntriggerHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceDidUntriggerHandler];
}

id objc_msgSend_deviceDiscoveryDeviceChanged_changes_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryDeviceChanged:changes];
}

id objc_msgSend_deviceDiscoveryFastScanCancel_reason_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryFastScanCancel:reason:];
}

id objc_msgSend_deviceDiscoveryFastScanTrigger_reason_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryFastScanTrigger:reason:];
}

id objc_msgSend_deviceDiscoveryFoundDevice_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryFoundDevice:];
}

id objc_msgSend_deviceDiscoveryLostDevice_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryLostDevice:];
}

id objc_msgSend_deviceDiscoveryRequestStart_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryRequestStart:];
}

id objc_msgSend_deviceDiscoveryRequestStop_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "deviceDiscoveryRequestStop:");
}

id objc_msgSend_deviceDiscoveryRequestUpdate_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryRequestUpdate:];
}

id objc_msgSend_deviceDiscoveryScanStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryScanStateChanged:];
}

id objc_msgSend_deviceDiscoveryTriggerEnhancedDiscovery_reason_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryTriggerEnhancedDiscovery:reason:];
}

id objc_msgSend_deviceDiscoveryTriggerEnhancedDiscovery_reason_useCase_(void *a1, const char *a2, ...)
{
  return [a1 deviceDiscoveryTriggerEnhancedDiscovery:reason:useCase:];
}

id objc_msgSend_deviceEnabledAsKey_(void *a1, const char *a2, ...)
{
  return [a1 deviceEnabledAsKey:];
}

id objc_msgSend_deviceEnabledAsKeyForIDSDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 deviceEnabledAsKeyForIDSDeviceID:];
}

id objc_msgSend_deviceEnteredBioLockoutHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnteredBioLockoutHandler];
}

id objc_msgSend_deviceEnteredImmediateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnteredImmediateHandler];
}

id objc_msgSend_deviceEnteredNearbyHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceEnteredNearbyHandler];
}

id objc_msgSend_deviceExitedImmediateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceExitedImmediateHandler];
}

id objc_msgSend_deviceExitedNearbyHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceExitedNearbyHandler];
}

id objc_msgSend_deviceFilter(void *a1, const char *a2, ...)
{
  return _[a1 deviceFilter];
}

id objc_msgSend_deviceFlags(void *a1, const char *a2, ...)
{
  return _[a1 deviceFlags];
}

id objc_msgSend_deviceForFromID_(void *a1, const char *a2, ...)
{
  return [a1 deviceForFromID:];
}

id objc_msgSend_deviceForIDSDevice_(void *a1, const char *a2, ...)
{
  return [a1 deviceForIDSDevice:];
}

id objc_msgSend_deviceForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 deviceForIdentifier:];
}

id objc_msgSend_deviceFoundHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceFoundHandler];
}

id objc_msgSend_deviceID(void *a1, const char *a2, ...)
{
  return _[a1 deviceID];
}

id objc_msgSend_deviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDs];
}

id objc_msgSend_deviceIDsMissingSessionKey(void *a1, const char *a2, ...)
{
  return _[a1 deviceIDsMissingSessionKey];
}

id objc_msgSend_deviceIRKData(void *a1, const char *a2, ...)
{
  return _[a1 deviceIRKData];
}

id objc_msgSend_deviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 deviceIdentifier];
}

id objc_msgSend_deviceInfoChanged_model_ecolor_icolor_osxvers_(void *a1, const char *a2, ...)
{
  return [a1 deviceInfoChanged:x0 model:x1 ecolor:x2 icolor:x3 osxvers:x4];
}

id objc_msgSend_deviceInformation(void *a1, const char *a2, ...)
{
  return _[a1 deviceInformation];
}

id objc_msgSend_deviceIsEligibleForAirDrop_(void *a1, const char *a2, ...)
{
  return [a1 deviceIsEligibleForAirDrop:];
}

id objc_msgSend_deviceIsLocalDevice_(void *a1, const char *a2, ...)
{
  return [a1 deviceIsLocalDevice:];
}

id objc_msgSend_deviceIsPaired(void *a1, const char *a2, ...)
{
  return _[a1 deviceIsPaired];
}

id objc_msgSend_deviceKeyBagDisabled(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagDisabled];
}

id objc_msgSend_deviceKeyBagLocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagLocked];
}

id objc_msgSend_deviceKeyBagLocking(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagLocking];
}

id objc_msgSend_deviceKeyBagState(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagState];
}

id objc_msgSend_deviceKeyBagUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagUnlocked];
}

id objc_msgSend_deviceKeyBagUnlockedAndScreenOn(void *a1, const char *a2, ...)
{
  return _[a1 deviceKeyBagUnlockedAndScreenOn];
}

id objc_msgSend_deviceLostHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceLostHandler];
}

id objc_msgSend_deviceModel(void *a1, const char *a2, ...)
{
  return _[a1 deviceModel];
}

id objc_msgSend_deviceModelCode(void *a1, const char *a2, ...)
{
  return _[a1 deviceModelCode];
}

id objc_msgSend_deviceName(void *a1, const char *a2, ...)
{
  return _[a1 deviceName];
}

id objc_msgSend_deviceNameForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 deviceNameForDeviceID:];
}

id objc_msgSend_deviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 deviceNearby];
}

id objc_msgSend_deviceOffWristForSessionID(void *a1, const char *a2, ...)
{
  return _[a1 deviceOffWristForSessionID];
}

id objc_msgSend_devicePresenceNotifier(void *a1, const char *a2, ...)
{
  return _[a1 devicePresenceNotifier];
}

id objc_msgSend_devicePresencePreset(void *a1, const char *a2, ...)
{
  return _[a1 devicePresencePreset];
}

id objc_msgSend_deviceRequiresNewRanging(void *a1, const char *a2, ...)
{
  return _[a1 deviceRequiresNewRanging];
}

id objc_msgSend_deviceSupportsContinuity(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsContinuity];
}

id objc_msgSend_deviceSupportsRanging(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsRanging];
}

id objc_msgSend_deviceSupportsWAPI(void *a1, const char *a2, ...)
{
  return _[a1 deviceSupportsWAPI];
}

id objc_msgSend_deviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 deviceTimer];
}

id objc_msgSend_deviceTracked(void *a1, const char *a2, ...)
{
  return _[a1 deviceTracked];
}

id objc_msgSend_deviceType(void *a1, const char *a2, ...)
{
  return _[a1 deviceType];
}

id objc_msgSend_deviceTypeForDevice_(void *a1, const char *a2, ...)
{
  return [a1 deviceTypeForDevice:];
}

id objc_msgSend_deviceTypeForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 deviceTypeForDeviceID:];
}

id objc_msgSend_deviceTypeFromModelIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 deviceTypeFromModelIdentifier:];
}

id objc_msgSend_deviceUIUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceUIUnlocked];
}

id objc_msgSend_deviceUnlockedWithMask_(void *a1, const char *a2, ...)
{
  return [a1 deviceUnlockedWithMask:];
}

id objc_msgSend_deviceUpdateHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceUpdateHandler];
}

id objc_msgSend_deviceWasDismissedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasDismissedHandler];
}

id objc_msgSend_deviceWasDismissedHandlerEx(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasDismissedHandlerEx];
}

id objc_msgSend_deviceWasLocked(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasLocked];
}

id objc_msgSend_deviceWasSelectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasSelectedHandler];
}

id objc_msgSend_deviceWasUnlockedOnce(void *a1, const char *a2, ...)
{
  return _[a1 deviceWasUnlockedOnce];
}

id objc_msgSend_deviceWillTriggerHandler(void *a1, const char *a2, ...)
{
  return _[a1 deviceWillTriggerHandler];
}

id objc_msgSend_deviceWithDescriptor_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "deviceWithDescriptor:error:");
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_devicesForBTUUID_(void *a1, const char *a2, ...)
{
  return [a1 devicesForBTUUID:];
}

id objc_msgSend_devicesWithDiscoveryFlags_error_(void *a1, const char *a2, ...)
{
  return [a1 devicesWithDiscoveryFlags:x0 error:x1];
}

id objc_msgSend_devicesWithLTKs(void *a1, const char *a2, ...)
{
  return _[a1 devicesWithLTKs];
}

id objc_msgSend_dhSecretKey(void *a1, const char *a2, ...)
{
  return _[a1 dhSecretKey];
}

id objc_msgSend_diagnosticBLEModeStart_(void *a1, const char *a2, ...)
{
  return [a1 diagnosticBLEModeStart:];
}

id objc_msgSend_diagnosticBLEModeStop_(void *a1, const char *a2, ...)
{
  return [a1 diagnosticBLEModeStop:];
}

id objc_msgSend_diagnosticMockChanged_(void *a1, const char *a2, ...)
{
  return [a1 diagnosticMockChanged:];
}

id objc_msgSend_diagnosticMockFound_(void *a1, const char *a2, ...)
{
  return [a1 diagnosticMockFound:];
}

id objc_msgSend_diagnosticMockLost_(void *a1, const char *a2, ...)
{
  return [a1 diagnosticMockLost:];
}

id objc_msgSend_dictRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictRepresentation];
}

id objc_msgSend_dictionary(void *a1, const char *a2, ...)
{
  return _[a1 dictionary];
}

id objc_msgSend_dictionaryForKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryForKey:];
}

id objc_msgSend_dictionaryRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 dictionaryRepresentation];
}

id objc_msgSend_dictionaryWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithCapacity:];
}

id objc_msgSend_dictionaryWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithDictionary:];
}

id objc_msgSend_dictionaryWithObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObject:forKey:];
}

id objc_msgSend_dictionaryWithObjects_forKeys_count_(void *a1, const char *a2, ...)
{
  return [a1 dictionaryWithObjects:forKeys:count:];
}

id objc_msgSend_didCloseConnection(void *a1, const char *a2, ...)
{
  return _[a1 didCloseConnection];
}

id objc_msgSend_didDelayWorkDueToPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 didDelayWorkDueToPowerAssertion];
}

id objc_msgSend_didFail_(void *a1, const char *a2, ...)
{
  return [a1 didFail:];
}

id objc_msgSend_didFailToSendResponse_(void *a1, const char *a2, ...)
{
  return [a1 didFailToSendResponse:];
}

id objc_msgSend_didFinishLoading(void *a1, const char *a2, ...)
{
  return _[a1 didFinishLoading];
}

id objc_msgSend_didFinishPerformingActivityHandler(void *a1, const char *a2, ...)
{
  return _[a1 didFinishPerformingActivityHandler];
}

id objc_msgSend_didFinishSendingAskBodyData(void *a1, const char *a2, ...)
{
  return _[a1 didFinishSendingAskBodyData];
}

id objc_msgSend_didLosePeer_(void *a1, const char *a2, ...)
{
  return [a1 didLosePeer:];
}

id objc_msgSend_didPerformInServiceActivityWithIdentifier_completed_items_error_(void *a1, const char *a2, ...)
{
  return [a1 didPerformInServiceActivityWithIdentifier:completed:items:error:];
}

id objc_msgSend_didSendPayloadForActivityIdentifier_toDevice_error_(void *a1, const char *a2, ...)
{
  return [a1 didSendPayloadForActivityIdentifier:x0 toDevice:x1 error:x2];
}

id objc_msgSend_didStartSendingAskBodyData(void *a1, const char *a2, ...)
{
  return _[a1 didStartSendingAskBodyData];
}

id objc_msgSend_didUpdateAirDropTransferWithChange_(void *a1, const char *a2, ...)
{
  return [a1 didUpdateAirDropTransferWithChange:];
}

id objc_msgSend_directoryForTemporaryFiles(void *a1, const char *a2, ...)
{
  return _[a1 directoryForTemporaryFiles];
}

id objc_msgSend_disableAutoAccept(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoAccept];
}

id objc_msgSend_disableAutoAcceptForPhotosAssetBundles(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoAcceptForPhotosAssetBundles];
}

id objc_msgSend_disableAutoUnlockForAllWatches(void *a1, const char *a2, ...)
{
  return _[a1 disableAutoUnlockForAllWatches];
}

id objc_msgSend_disableAutoUnlockForDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 disableAutoUnlockForDevice:x0 completionHandler:x1];
}

id objc_msgSend_disableCompression(void *a1, const char *a2, ...)
{
  return _[a1 disableCompression];
}

id objc_msgSend_disableContinuityTLS(void *a1, const char *a2, ...)
{
  return _[a1 disableContinuityTLS];
}

id objc_msgSend_disableEncryption(void *a1, const char *a2, ...)
{
  return _[a1 disableEncryption];
}

id objc_msgSend_disableFor_idsDeviceID_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 disableFor:idsDeviceID:sessionID:];
}

id objc_msgSend_disableKeyPairingForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 disableKeyPairingForDeviceID:];
}

id objc_msgSend_disablePairingForAllKeyDevices(void *a1, const char *a2, ...)
{
  return _[a1 disablePairingForAllKeyDevices];
}

id objc_msgSend_disablePairingForAllLockPhones(void *a1, const char *a2, ...)
{
  return _[a1 disablePairingForAllLockPhones];
}

id objc_msgSend_disablePairingForDeviceID_pairingID_(void *a1, const char *a2, ...)
{
  return [a1 disablePairingForDeviceID:pairingID:];
}

id objc_msgSend_disablePairingWithKeyDevice_(void *a1, const char *a2, ...)
{
  return [a1 disablePairingWithKeyDevice:];
}

id objc_msgSend_disablePeopleSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 disablePeopleSuggestions];
}

id objc_msgSend_disablePictureQuery(void *a1, const char *a2, ...)
{
  return _[a1 disablePictureQuery];
}

id objc_msgSend_disablePipelining(void *a1, const char *a2, ...)
{
  return _[a1 disablePipelining];
}

id objc_msgSend_disableRotation(void *a1, const char *a2, ...)
{
  return _[a1 disableRotation];
}

id objc_msgSend_disableTLS(void *a1, const char *a2, ...)
{
  return _[a1 disableTLS];
}

id objc_msgSend_disableTethering(void *a1, const char *a2, ...)
{
  return _[a1 disableTethering];
}

id objc_msgSend_disableUnlockPairing(void *a1, const char *a2, ...)
{
  return _[a1 disableUnlockPairing];
}

id objc_msgSend_disableUnlockPairingForSecManager_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "disableUnlockPairingForSecManager:");
}

id objc_msgSend_disableUnlockPairingForSecurityManager_(void *a1, const char *a2, ...)
{
  return [a1 disableUnlockPairingForSecurityManager:];
}

id objc_msgSend_disableUnlockWithDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 disableUnlockWithDevice:completionHandler:];
}

id objc_msgSend_disabledAuthenticationSessionWithID_(void *a1, const char *a2, ...)
{
  return [a1 disabledAuthenticationSessionWithID:];
}

id objc_msgSend_disabledNodesUpdatedHandler(void *a1, const char *a2, ...)
{
  return _[a1 disabledNodesUpdatedHandler];
}

id objc_msgSend_disambiguatedModelName(void *a1, const char *a2, ...)
{
  return _[a1 disambiguatedModelName];
}

id objc_msgSend_discoverBodyDataInFormat_(void *a1, const char *a2, ...)
{
  return [a1 discoverBodyDataInFormat:];
}

id objc_msgSend_discoverabilityMetricsForNode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "discoverabilityMetricsForNode:");
}

id objc_msgSend_discoverabilitySignal(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignal];
}

id objc_msgSend_discoverabilitySignalsStream(void *a1, const char *a2, ...)
{
  return _[a1 discoverabilitySignalsStream];
}

id objc_msgSend_discoverableByContactsOnly(void *a1, const char *a2, ...)
{
  return _[a1 discoverableByContactsOnly];
}

id objc_msgSend_discoverableByEveryone(void *a1, const char *a2, ...)
{
  return _[a1 discoverableByEveryone];
}

id objc_msgSend_discoverableLevel(void *a1, const char *a2, ...)
{
  return _[a1 discoverableLevel];
}

id objc_msgSend_discoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 discoverableMode];
}

id objc_msgSend_discoveredDevices(void *a1, const char *a2, ...)
{
  return _[a1 discoveredDevices];
}

id objc_msgSend_discoveredPeople(void *a1, const char *a2, ...)
{
  return _[a1 discoveredPeople];
}

id objc_msgSend_discoveryContext(void *a1, const char *a2, ...)
{
  return _[a1 discoveryContext];
}

id objc_msgSend_discoveryDate(void *a1, const char *a2, ...)
{
  return _[a1 discoveryDate];
}

id objc_msgSend_discoveryFlags(void *a1, const char *a2, ...)
{
  return _[a1 discoveryFlags];
}

id objc_msgSend_discoveryMetric(void *a1, const char *a2, ...)
{
  return _[a1 discoveryMetric];
}

id objc_msgSend_discoveryTime(void *a1, const char *a2, ...)
{
  return _[a1 discoveryTime];
}

id objc_msgSend_discreteProgressWithTotalUnitCount_(void *a1, const char *a2, ...)
{
  return [a1 discreteProgressWithTotalUnitCount:];
}

id objc_msgSend_dismissNFCPrompt(void *a1, const char *a2, ...)
{
  return _[a1 dismissNFCPrompt];
}

id objc_msgSend_dismissNotification(void *a1, const char *a2, ...)
{
  return _[a1 dismissNotification];
}

id objc_msgSend_dismissPairedUnlockBanner(void *a1, const char *a2, ...)
{
  return _[a1 dismissPairedUnlockBanner];
}

id objc_msgSend_dismissReason(void *a1, const char *a2, ...)
{
  return _[a1 dismissReason];
}

id objc_msgSend_dispatchQueue(void *a1, const char *a2, ...)
{
  return _[a1 dispatchQueue];
}

id objc_msgSend_displayAppBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 displayAppBundleIdentifier];
}

id objc_msgSend_displayBars(void *a1, const char *a2, ...)
{
  return _[a1 displayBars];
}

id objc_msgSend_displayClamshellWaitTime(void *a1, const char *a2, ...)
{
  return _[a1 displayClamshellWaitTime];
}

id objc_msgSend_displayIcon(void *a1, const char *a2, ...)
{
  return _[a1 displayIcon];
}

id objc_msgSend_displayName(void *a1, const char *a2, ...)
{
  return _[a1 displayName];
}

id objc_msgSend_displayNameForContact_(void *a1, const char *a2, ...)
{
  return [a1 displayNameForContact:];
}

id objc_msgSend_displayNameForDomain_(void *a1, const char *a2, ...)
{
  return [a1 displayNameForDomain:];
}

id objc_msgSend_displayNameForLocale_(void *a1, const char *a2, ...)
{
  return [a1 displayNameForLocale:];
}

id objc_msgSend_displayOrClamshellWaitingDate(void *a1, const char *a2, ...)
{
  return _[a1 displayOrClamshellWaitingDate];
}

id objc_msgSend_distance(void *a1, const char *a2, ...)
{
  return _[a1 distance];
}

id objc_msgSend_distanceMeters(void *a1, const char *a2, ...)
{
  return _[a1 distanceMeters];
}

id objc_msgSend_doNotPostUnlockConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 doNotPostUnlockConfirmation];
}

id objc_msgSend_dockHasDownloadsFolder(void *a1, const char *a2, ...)
{
  return _[a1 dockHasDownloadsFolder];
}

id objc_msgSend_documentName(void *a1, const char *a2, ...)
{
  return _[a1 documentName];
}

id objc_msgSend_documentProxy(void *a1, const char *a2, ...)
{
  return _[a1 documentProxy];
}

id objc_msgSend_documentProxyForName_type_MIMEType_(void *a1, const char *a2, ...)
{
  return [a1 documentProxyForName:type:MIMEType:];
}

id objc_msgSend_documentProxyForURL_isContentManaged_sourceAuditToken_(void *a1, const char *a2, ...)
{
  return [a1 documentProxyForURL:x0 isContentManaged:x1 sourceAuditToken:x2];
}

id objc_msgSend_documentTraits(void *a1, const char *a2, ...)
{
  return _[a1 documentTraits];
}

id objc_msgSend_domain(void *a1, const char *a2, ...)
{
  return _[a1 domain];
}

id objc_msgSend_domainChildren(void *a1, const char *a2, ...)
{
  return _[a1 domainChildren];
}

id objc_msgSend_donateDeviceUnlockedWithMask_(void *a1, const char *a2, ...)
{
  return [a1 donateDeviceUnlockedWithMask:];
}

id objc_msgSend_donateTransferInteractionToDuet(void *a1, const char *a2, ...)
{
  return _[a1 donateTransferInteractionToDuet];
}

id objc_msgSend_doubleValue(void *a1, const char *a2, ...)
{
  return _[a1 doubleValue];
}

id objc_msgSend_downloadAssetsForQuery_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "downloadAssetsForQuery:");
}

id objc_msgSend_duetSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 duetSuggestions];
}

id objc_msgSend_duetSync(void *a1, const char *a2, ...)
{
  return _[a1 duetSync];
}

id objc_msgSend_dumpDBAtFileURL_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "dumpDBAtFileURL:");
}

id objc_msgSend_edPKData(void *a1, const char *a2, ...)
{
  return _[a1 edPKData];
}

id objc_msgSend_eduModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 eduModeEnabled];
}

id objc_msgSend_effectiveBlockedAppBundleIDs(void *a1, const char *a2, ...)
{
  return _[a1 effectiveBlockedAppBundleIDs];
}

id objc_msgSend_effectiveID(void *a1, const char *a2, ...)
{
  return _[a1 effectiveID];
}

id objc_msgSend_effectiveIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 effectiveIdentifier];
}

id objc_msgSend_ejectDisksIfNeeded_diskNames_(void *a1, const char *a2, ...)
{
  return [a1 ejectDisksIfNeeded:diskNames];
}

id objc_msgSend_ejectMountPoints_useAssistant_(void *a1, const char *a2, ...)
{
  return [a1 ejectMountPoints:useAssistant:];
}

id objc_msgSend_elements(void *a1, const char *a2, ...)
{
  return _[a1 elements];
}

id objc_msgSend_eligibleDevicesFilterCompatibleDevices_(void *a1, const char *a2, ...)
{
  return [a1 eligibleDevicesFilterCompatibleDevices:];
}

id objc_msgSend_eligibleDevicesRequestFromBundleID_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "eligibleDevicesRequestFromBundleID:withCompletionHandler:");
}

id objc_msgSend_emailAddress(void *a1, const char *a2, ...)
{
  return _[a1 emailAddress];
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 emailAddresses];
}

id objc_msgSend_emailAddressesForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 emailAddressesForAppleID:];
}

id objc_msgSend_emailOrPhone(void *a1, const char *a2, ...)
{
  return _[a1 emailOrPhone];
}

id objc_msgSend_emailOrPhoneForCombinedHash_(void *a1, const char *a2, ...)
{
  return [a1 emailOrPhoneForCombinedHash:];
}

id objc_msgSend_emailOrPhoneForEmailHash_phoneHash_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "emailOrPhoneForEmailHash:phoneHash:");
}

id objc_msgSend_enableAirDropAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 enableAirDropAdvertising];
}

id objc_msgSend_enableAirDropReceiving(void *a1, const char *a2, ...)
{
  return _[a1 enableAirDropReceiving];
}

id objc_msgSend_enableAutoUnlockWithDevice_passcode_(void *a1, const char *a2, ...)
{
  return [a1 enableAutoUnlockWithDevice:passcode:];
}

id objc_msgSend_enableBugs(void *a1, const char *a2, ...)
{
  return _[a1 enableBugs];
}

id objc_msgSend_enableContinuity(void *a1, const char *a2, ...)
{
  return _[a1 enableContinuity];
}

id objc_msgSend_enableDVZip(void *a1, const char *a2, ...)
{
  return _[a1 enableDVZip];
}

id objc_msgSend_enableDebugMode(void *a1, const char *a2, ...)
{
  return _[a1 enableDebugMode];
}

id objc_msgSend_enableDemoMode(void *a1, const char *a2, ...)
{
  return _[a1 enableDemoMode];
}

id objc_msgSend_enableDevice(void *a1, const char *a2, ...)
{
  return _[a1 enableDevice];
}

id objc_msgSend_enableFor_deviceID_passcode_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 enableFor:deviceID passcode:sessionID];
}

id objc_msgSend_enableHotspotFallback(void *a1, const char *a2, ...)
{
  return _[a1 enableHotspotFallback];
}

id objc_msgSend_enableHotspotForDevice_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 enableHotspotForDevice:withCompletionHandler:];
}

id objc_msgSend_enablePKZip(void *a1, const char *a2, ...)
{
  return _[a1 enablePKZip];
}

id objc_msgSend_enablePKZipCompression(void *a1, const char *a2, ...)
{
  return _[a1 enablePKZipCompression];
}

id objc_msgSend_enableShareSheetVectorSlots(void *a1, const char *a2, ...)
{
  return _[a1 enableShareSheetVectorSlots];
}

id objc_msgSend_enableStrangers(void *a1, const char *a2, ...)
{
  return _[a1 enableStrangers];
}

id objc_msgSend_enableStreamDebugging(void *a1, const char *a2, ...)
{
  return _[a1 enableStreamDebugging];
}

id objc_msgSend_enableUnlockForcingLTKTransfer_(void *a1, const char *a2, ...)
{
  return [a1 enableUnlockForcingLTKTransfer:];
}

id objc_msgSend_enableUnlockPairing(void *a1, const char *a2, ...)
{
  return _[a1 enableUnlockPairing];
}

id objc_msgSend_enableUnlockWithDevice_passcode_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 enableUnlockWithDevice:passcode:completionHandler:];
}

id objc_msgSend_enableWebloc(void *a1, const char *a2, ...)
{
  return _[a1 enableWebloc];
}

id objc_msgSend_enableXML(void *a1, const char *a2, ...)
{
  return _[a1 enableXML];
}

id objc_msgSend_enabledAuthenticationSessionWithID_(void *a1, const char *a2, ...)
{
  return [a1 enabledAuthenticationSessionWithID:];
}

id objc_msgSend_enabledAutoUnlockDevices(void *a1, const char *a2, ...)
{
  return _[a1 enabledAutoUnlockDevices];
}

id objc_msgSend_enabledAutoUnlockDevicesUsingCache_(void *a1, const char *a2, ...)
{
  return [a1 enabledAutoUnlockDevicesUsingCache:];
}

id objc_msgSend_enabledDevice_(void *a1, const char *a2, ...)
{
  return [a1 enabledDevice:];
}

id objc_msgSend_enclosureColor(void *a1, const char *a2, ...)
{
  return _[a1 enclosureColor];
}

id objc_msgSend_encodeBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeBool:forKey:];
}

id objc_msgSend_encodeDouble_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeDouble:forKey:];
}

id objc_msgSend_encodeFloat_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeFloat:x0 forKey:x1];
}

id objc_msgSend_encodeInt32_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeInt32:forKey:];
}

id objc_msgSend_encodeInt64_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeInt64:forKey:];
}

id objc_msgSend_encodeInteger_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeInteger:x0 forKey:x1];
}

id objc_msgSend_encodeObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 encodeObject:forKey:];
}

id objc_msgSend_encodedData(void *a1, const char *a2, ...)
{
  return _[a1 encodedData];
}

id objc_msgSend_encryptMessageData_deviceID_encryptedMessage_authTag_nonce_(void *a1, const char *a2, ...)
{
  return [a1 encryptMessageData:x0 deviceID:x1 encryptedMessage:x2 authTag:x3 nonce:x4];
}

id objc_msgSend_encryptedAdvertisingInformation(void *a1, const char *a2, ...)
{
  return _[a1 encryptedAdvertisingInformation];
}

id objc_msgSend_encryptedPayload(void *a1, const char *a2, ...)
{
  return _[a1 encryptedPayload];
}

id objc_msgSend_encryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 encryptionKey];
}

id objc_msgSend_endDate(void *a1, const char *a2, ...)
{
  return _[a1 endDate];
}

id objc_msgSend_endowmentNamespaces(void *a1, const char *a2, ...)
{
  return _[a1 endowmentNamespaces];
}

id objc_msgSend_endpointService(void *a1, const char *a2, ...)
{
  return _[a1 endpointService];
}

id objc_msgSend_endpointUUID(void *a1, const char *a2, ...)
{
  return _[a1 endpointUUID];
}

id objc_msgSend_engagedWithSheet(void *a1, const char *a2, ...)
{
  return _[a1 engagedWithSheet];
}

id objc_msgSend_enhancedDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 enhancedDiscovery];
}

id objc_msgSend_enqueueBadResponseForRequest_(void *a1, const char *a2, ...)
{
  return [a1 enqueueBadResponseForRequest:];
}

id objc_msgSend_enqueueConversionRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 enqueueConversionRequest:completionHandler:];
}

id objc_msgSend_enqueueResponse_code_body_(void *a1, const char *a2, ...)
{
  return [a1 enqueueResponse:code:body:];
}

id objc_msgSend_ensureStarted(void *a1, const char *a2, ...)
{
  return _[a1 ensureStarted];
}

id objc_msgSend_ensureTimerStartedForBufferedDevicesPurge(void *a1, const char *a2, ...)
{
  return _[a1 ensureTimerStartedForBufferedDevicesPurge];
}

id objc_msgSend_enumerateContactsWithFetchRequest_error_usingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateContactsWithFetchRequest:error:usingBlock:];
}

id objc_msgSend_enumerateKeysAndObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [a1 enumerateKeysAndObjectsUsingBlock:];
}

id objc_msgSend_enumerateObjectsUsingBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "enumerateObjectsUsingBlock:");
}

id objc_msgSend_enumeratorAtURL_includingPropertiesForKeys_options_errorHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:");
}

id objc_msgSend_enumeratorForChangeHistoryFetchRequest_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "enumeratorForChangeHistoryFetchRequest:error:");
}

id objc_msgSend_ephemeralSessionConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 ephemeralSessionConfiguration];
}

id objc_msgSend_error(void *a1, const char *a2, ...)
{
  return _[a1 error];
}

id objc_msgSend_errorCode(void *a1, const char *a2, ...)
{
  return _[a1 errorCode];
}

id objc_msgSend_errorCodeForBluetoothEnabled_wifiEnabled_faceIDEnabled_(void *a1, const char *a2, ...)
{
  return [a1 errorCodeForBluetoothEnabled:wifiEnabled:faceIDEnabled:];
}

id objc_msgSend_errorEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return [a1 errorEventForRecordID:withResults:];
}

id objc_msgSend_errorHandler(void *a1, const char *a2, ...)
{
  return _[a1 errorHandler];
}

id objc_msgSend_errorRequestingUnlock(void *a1, const char *a2, ...)
{
  return _[a1 errorRequestingUnlock];
}

id objc_msgSend_errorStringForBluetoothEnabled_wifiEnabled_faceIDEnabled_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "errorStringForBluetoothEnabled:wifiEnabled:faceIDEnabled:");
}

id objc_msgSend_errorType(void *a1, const char *a2, ...)
{
  return _[a1 errorType];
}

id objc_msgSend_errorWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 errorWithDomain:code:userInfo:];
}

id objc_msgSend_escrowCreationSessionAsOriginator_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 escrowCreationSessionAsOriginator:errorCode:];
}

id objc_msgSend_escrowData(void *a1, const char *a2, ...)
{
  return _[a1 escrowData];
}

id objc_msgSend_escrowSecret(void *a1, const char *a2, ...)
{
  return _[a1 escrowSecret];
}

id objc_msgSend_escrowSecretCreationDateForDeviceID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "escrowSecretCreationDateForDeviceID:");
}

id objc_msgSend_escrowSecretExistsForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "escrowSecretExistsForDevice:");
}

id objc_msgSend_escrowSecretForDevice_(void *a1, const char *a2, ...)
{
  return [a1 escrowSecretForDevice:];
}

id objc_msgSend_escrowSecretForDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 escrowSecretForDeviceID];
}

id objc_msgSend_escrowSecretWithAuthSession_(void *a1, const char *a2, ...)
{
  return [a1 escrowSecretWithAuthSession:];
}

id objc_msgSend_establishStashBagWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 establishStashBagWithCompletionHandler:];
}

id objc_msgSend_establishStashBagWithManifest_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "establishStashBagWithManifest:completionHandler:")];
}

id objc_msgSend_estimatedRSSI(void *a1, const char *a2, ...)
{
  return _[a1 estimatedRSSI];
}

id objc_msgSend_evaluateCert(void *a1, const char *a2, ...)
{
  return _[a1 evaluateCert];
}

id objc_msgSend_evaluateReceiverTrust_completion_(void *a1, const char *a2, ...)
{
  return [a1 evaluateReceiverTrust:];
}

id objc_msgSend_eventMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 eventMessageHandler];
}

id objc_msgSend_eventPayload(void *a1, const char *a2, ...)
{
  return _[a1 eventPayload];
}

id objc_msgSend_eventQueryWithPredicate_eventStreams_offset_limit_sortDescriptors_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:");
}

id objc_msgSend_exceptionWithName_reason_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 exceptionWithName:reason:userInfo:];
}

id objc_msgSend_exchageResponseDate(void *a1, const char *a2, ...)
{
  return _[a1 exchageResponseDate];
}

id objc_msgSend_exchangeResponse(void *a1, const char *a2, ...)
{
  return _[a1 exchangeResponse];
}

id objc_msgSend_excludeBackfills(void *a1, const char *a2, ...)
{
  return _[a1 excludeBackfills];
}

id objc_msgSend_excludedActivityCategories(void *a1, const char *a2, ...)
{
  return _[a1 excludedActivityCategories];
}

id objc_msgSend_excludedActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 excludedActivityTypes];
}

id objc_msgSend_executeQuery_error_(void *a1, const char *a2, ...)
{
  return [a1 executeQuery:error];
}

id objc_msgSend_executeReadWithAdaptiveCompression(void *a1, const char *a2, ...)
{
  return _[a1 executeReadWithAdaptiveCompression];
}

id objc_msgSend_executeWriteWithAdaptiveCompression(void *a1, const char *a2, ...)
{
  return _[a1 executeWriteWithAdaptiveCompression];
}

id objc_msgSend_existingCollaborativeModeForContentIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 existingCollaborativeModeForContentIdentifier:];
}

id objc_msgSend_expireDate(void *a1, const char *a2, ...)
{
  return _[a1 expireDate];
}

id objc_msgSend_expireTime(void *a1, const char *a2, ...)
{
  return _[a1 expireTime];
}

id objc_msgSend_exportedInterface(void *a1, const char *a2, ...)
{
  return _[a1 exportedInterface];
}

id objc_msgSend_extendedBioLockoutState_forUser_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "extendedBioLockoutState:forUser:error:");
}

id objc_msgSend_extension(void *a1, const char *a2, ...)
{
  return _[a1 extension];
}

id objc_msgSend_extensionItems(void *a1, const char *a2, ...)
{
  return _[a1 extensionItems];
}

id objc_msgSend_extensionWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "extensionWithIdentifier:error:");
}

id objc_msgSend_externalACMContext(void *a1, const char *a2, ...)
{
  return _[a1 externalACMContext];
}

id objc_msgSend_externalID(void *a1, const char *a2, ...)
{
  return _[a1 externalID];
}

id objc_msgSend_externalURL(void *a1, const char *a2, ...)
{
  return _[a1 externalURL];
}

id objc_msgSend_extraInfoData(void *a1, const char *a2, ...)
{
  return _[a1 extraInfoData];
}

id objc_msgSend_extractParameter_inString_(void *a1, const char *a2, ...)
{
  return [a1 extractParameter:inString:];
}

id objc_msgSend_faceIDEnabled(void *a1, const char *a2, ...)
{
  return _[a1 faceIDEnabled];
}

id objc_msgSend_failTransfer_withState_failureReason_(void *a1, const char *a2, ...)
{
  return [a1 failTransfer:withState:failureReason:];
}

id objc_msgSend_failedAttemptBeforeStarting_metricErrorString_(void *a1, const char *a2, ...)
{
  return [a1 failedAttemptBeforeStarting:metricErrorString:];
}

id objc_msgSend_failedAuthenticationSessionWithID_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "failedAuthenticationSessionWithID:error:");
}

id objc_msgSend_failedIndexes(void *a1, const char *a2, ...)
{
  return _[a1 failedIndexes];
}

id objc_msgSend_failedIndexesForProxySection_(void *a1, const char *a2, ...)
{
  return [a1 failedIndexesForProxySection:];
}

id objc_msgSend_failedToDisableDeviceForSessionID_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "failedToDisableDeviceForSessionID:error:");
}

id objc_msgSend_failedToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "failedToEnableDevice:error:");
}

id objc_msgSend_failedToEnableDeviceForSessionID_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "failedToEnableDeviceForSessionID:error:");
}

id objc_msgSend_failedUnlockWithError_(void *a1, const char *a2, ...)
{
  return [a1 failedUnlockWithError:];
}

id objc_msgSend_failureReason(void *a1, const char *a2, ...)
{
  return _[a1 failureReason];
}

id objc_msgSend_failureReasons(void *a1, const char *a2, ...)
{
  return _[a1 failureReasons];
}

id objc_msgSend_fakeBundleID(void *a1, const char *a2, ...)
{
  return _[a1 fakeBundleID];
}

id objc_msgSend_fallbackActivityType(void *a1, const char *a2, ...)
{
  return _[a1 fallbackActivityType];
}

id objc_msgSend_familyHotspotEnabled(void *a1, const char *a2, ...)
{
  return _[a1 familyHotspotEnabled];
}

id objc_msgSend_familyHotspotStateForAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 familyHotspotStateForAltDSID:];
}

id objc_msgSend_familyMembers(void *a1, const char *a2, ...)
{
  return _[a1 familyMembers];
}

id objc_msgSend_familyName(void *a1, const char *a2, ...)
{
  return _[a1 familyName];
}

id objc_msgSend_fastScanCancel_(void *a1, const char *a2, ...)
{
  return [a1 fastScanCancel:];
}

id objc_msgSend_fastScanMode(void *a1, const char *a2, ...)
{
  return _[a1 fastScanMode];
}

id objc_msgSend_favoriteActions(void *a1, const char *a2, ...)
{
  return _[a1 favoriteActions];
}

id objc_msgSend_favoriteApps(void *a1, const char *a2, ...)
{
  return _[a1 favoriteApps];
}

id objc_msgSend_featureFlags(void *a1, const char *a2, ...)
{
  return _[a1 featureFlags];
}

id objc_msgSend_feedbackForAction_delay_context_suggestions_numberOfVisibleSuggestions_sessionIdentifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "feedbackForAction:delay:context:suggestions:numberOfVisibleSuggestions:sessionIdentifier:");
}

id objc_msgSend_fetchAssetsWithLocalIdentifiers_options_(void *a1, const char *a2, ...)
{
  return [a1 fetchAssetsWithLocalIdentifiers:x0 options:x1];
}

id objc_msgSend_fetchDataStatusWithContext_(void *a1, const char *a2, ...)
{
  return [a1 fetchDataStatusWithContext:];
}

id objc_msgSend_fetchLTEShows4GWithContext_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "fetchLTEShows4GWithContext:");
}

id objc_msgSend_fetchSIMStatusWithContext_(void *a1, const char *a2, ...)
{
  return [a1 fetchSIMStatusWithContext:];
}

id objc_msgSend_fetchSignalStrengthWithContext_(void *a1, const char *a2, ...)
{
  return [a1 fetchSignalStrengthWithContext:];
}

id objc_msgSend_fetchStartDate(void *a1, const char *a2, ...)
{
  return _[a1 fetchStartDate];
}

id objc_msgSend_fetchSubscriptionContextWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "fetchSubscriptionContextWithCompletion:");
}

id objc_msgSend_fileComplete(void *a1, const char *a2, ...)
{
  return _[a1 fileComplete];
}

id objc_msgSend_fileDescriptor(void *a1, const char *a2, ...)
{
  return _[a1 fileDescriptor];
}

id objc_msgSend_fileExistsAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileExistsAtPath:];
}

id objc_msgSend_fileExistsAtPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "fileExistsAtPath:isDirectory:");
}

id objc_msgSend_fileHandle(void *a1, const char *a2, ...)
{
  return _[a1 fileHandle];
}

id objc_msgSend_fileHandleForReadingFromURL_error_(void *a1, const char *a2, ...)
{
  return [a1 fileHandleForReadingFromURL:error];
}

id objc_msgSend_fileHandleForUpdatingAtPath_(void *a1, const char *a2, ...)
{
  return [a1 fileHandleForUpdatingAtPath:];
}

id objc_msgSend_fileInfoExpectedClassForKeyMap(void *a1, const char *a2, ...)
{
  return _[a1 fileInfoExpectedClassForKeyMap];
}

id objc_msgSend_fileNodes(void *a1, const char *a2, ...)
{
  return _[a1 fileNodes];
}

id objc_msgSend_filePathURL(void *a1, const char *a2, ...)
{
  return _[a1 filePathURL];
}

id objc_msgSend_fileSystemRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 fileSystemRepresentation];
}

id objc_msgSend_fileType(void *a1, const char *a2, ...)
{
  return _[a1 fileType];
}

id objc_msgSend_fileURL(void *a1, const char *a2, ...)
{
  return _[a1 fileURL];
}

id objc_msgSend_fileURLWithFileSystemRepresentation_isDirectory_relativeToURL_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithFileSystemRepresentation:x0 isDirectory:x1 relativeToURL:x2];
}

id objc_msgSend_fileURLWithPath_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:];
}

id objc_msgSend_fileURLWithPath_isDirectory_(void *a1, const char *a2, ...)
{
  return [a1 fileURLWithPath:isDirectory:];
}

id objc_msgSend_fileZipper_event_withProperty_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "fileZipper:event:withProperty:");
}

id objc_msgSend_files(void *a1, const char *a2, ...)
{
  return _[a1 files];
}

id objc_msgSend_filesToCleanup(void *a1, const char *a2, ...)
{
  return _[a1 filesToCleanup];
}

id objc_msgSend_filteredArrayUsingPredicate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "filteredArrayUsingPredicate:");
}

id objc_msgSend_filteredSetUsingPredicate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "filteredSetUsingPredicate:");
}

id objc_msgSend_finalMessage(void *a1, const char *a2, ...)
{
  return _[a1 finalMessage];
}

id objc_msgSend_finalizeEscrowPairing_(void *a1, const char *a2, ...)
{
  return [a1 finalizeEscrowPairing:];
}

id objc_msgSend_finalizeRegistration(void *a1, const char *a2, ...)
{
  return _[a1 finalizeRegistration];
}

id objc_msgSend_findMyFriendsLink(void *a1, const char *a2, ...)
{
  return _[a1 findMyFriendsLink];
}

id objc_msgSend_findSupportedActivitiesCompletionHandler(void *a1, const char *a2, ...)
{
  return _[a1 findSupportedActivitiesCompletionHandler];
}

id objc_msgSend_finderAirDropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 finderAirDropEnabled];
}

id objc_msgSend_finderServer(void *a1, const char *a2, ...)
{
  return _[a1 finderServer];
}

id objc_msgSend_finishOperation(void *a1, const char *a2, ...)
{
  return _[a1 finishOperation];
}

id objc_msgSend_finishTasksAndInvalidate(void *a1, const char *a2, ...)
{
  return _[a1 finishTasksAndInvalidate];
}

id objc_msgSend_finishedEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "finishedEventForRecordID:withResults:");
}

id objc_msgSend_fire(void *a1, const char *a2, ...)
{
  return _[a1 fire];
}

id objc_msgSend_firedImpactHaptic(void *a1, const char *a2, ...)
{
  return _[a1 firedImpactHaptic];
}

id objc_msgSend_firstName(void *a1, const char *a2, ...)
{
  return _[a1 firstName];
}

id objc_msgSend_firstObject(void *a1, const char *a2, ...)
{
  return _[a1 firstObject];
}

id objc_msgSend_firstReceivedFilename(void *a1, const char *a2, ...)
{
  return _[a1 firstReceivedFilename];
}

id objc_msgSend_firstSend(void *a1, const char *a2, ...)
{
  return _[a1 firstSend];
}

id objc_msgSend_firstUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 firstUnlocked];
}

id objc_msgSend_fixAltDSIDIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 fixAltDSIDIfNeeded];
}

id objc_msgSend_fixRemoteLTKWithStatus_retryBlock_(void *a1, const char *a2, ...)
{
  return [a1 fixRemoteLTKWithStatus:retryBlock:];
}

id objc_msgSend_fixedRelativePath_(void *a1, const char *a2, ...)
{
  return [a1 fixedRelativePath:];
}

id objc_msgSend_flags(void *a1, const char *a2, ...)
{
  return _[a1 flags];
}

id objc_msgSend_flippedHotspotSwitch(void *a1, const char *a2, ...)
{
  return _[a1 flippedHotspotSwitch];
}

id objc_msgSend_floatForKey_(void *a1, const char *a2, ...)
{
  return [a1 floatForKey:];
}

id objc_msgSend_floatValue(void *a1, const char *a2, ...)
{
  return _[a1 floatValue];
}

id objc_msgSend_flush(void *a1, const char *a2, ...)
{
  return _[a1 flush];
}

id objc_msgSend_forceAWDL(void *a1, const char *a2, ...)
{
  return _[a1 forceAWDL];
}

id objc_msgSend_forceAWDLDeviceRefresh_(void *a1, const char *a2, ...)
{
  return [a1 forceAWDLDeviceRefresh:];
}

id objc_msgSend_forceBioLockoutForUser_error_(void *a1, const char *a2, ...)
{
  return [a1 forceBioLockoutForUser:error];
}

id objc_msgSend_forceManateeStateRefresh(void *a1, const char *a2, ...)
{
  return _[a1 forceManateeStateRefresh];
}

id objc_msgSend_formattedDate_(void *a1, const char *a2, ...)
{
  return [a1 formattedDate:];
}

id objc_msgSend_formattedHandles(void *a1, const char *a2, ...)
{
  return _[a1 formattedHandles];
}

id objc_msgSend_formattedPhoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 formattedPhoneNumber];
}

id objc_msgSend_foundBufferedPairingDevices_(void *a1, const char *a2, ...)
{
  return [a1 foundBufferedPairingDevices:];
}

id objc_msgSend_foundDeviceWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 foundDeviceWithDevice:];
}

id objc_msgSend_foundFirstPeer(void *a1, const char *a2, ...)
{
  return _[a1 foundFirstPeer];
}

id objc_msgSend_foundPeer(void *a1, const char *a2, ...)
{
  return _[a1 foundPeer];
}

id objc_msgSend_foundPeers(void *a1, const char *a2, ...)
{
  return _[a1 foundPeers];
}

id objc_msgSend_foundTicks(void *a1, const char *a2, ...)
{
  return _[a1 foundTicks];
}

id objc_msgSend_fractionCompleted(void *a1, const char *a2, ...)
{
  return _[a1 fractionCompleted];
}

id objc_msgSend_fromServerStorage(void *a1, const char *a2, ...)
{
  return _[a1 fromServerStorage];
}

id objc_msgSend_fullSizePhotoURL(void *a1, const char *a2, ...)
{
  return _[a1 fullSizePhotoURL];
}

id objc_msgSend_fullSizeVideoURL(void *a1, const char *a2, ...)
{
  return _[a1 fullSizeVideoURL];
}

id objc_msgSend_gapaFlags(void *a1, const char *a2, ...)
{
  return _[a1 gapaFlags];
}

id objc_msgSend_generateACMContextData(void *a1, const char *a2, ...)
{
  return _[a1 generateACMContextData];
}

id objc_msgSend_generateAppIconImageWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 generateAppIconImageWithOptions:];
}

id objc_msgSend_generateDebugInfo(void *a1, const char *a2, ...)
{
  return _[a1 generateDebugInfo];
}

id objc_msgSend_generateEscrowSecret(void *a1, const char *a2, ...)
{
  return _[a1 generateEscrowSecret];
}

id objc_msgSend_generateFakeTransferDataFromBundleID_files_items_itemsDescription_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "generateFakeTransferDataFromBundleID:files:items:itemsDescription:");
}

id objc_msgSend_generateLocalAttestedLTKIfNeccessaryWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "generateLocalAttestedLTKIfNeccessaryWithCompletion:");
}

id objc_msgSend_generateLocalLTKWithAttestation_(void *a1, const char *a2, ...)
{
  return [a1 generateLocalLTKWithAttestation:];
}

id objc_msgSend_generateLocalLTKWithAttestation_forceDCRTRetrievalWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 generateLocalLTKWithAttestation:forceDCRTRetrievalWithCompletion:];
}

id objc_msgSend_generateLocalLongTermKey_(void *a1, const char *a2, ...)
{
  return [a1 generateLocalLongTermKey:];
}

id objc_msgSend_generateNewEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 generateNewEncryptionKey];
}

id objc_msgSend_generateNextDayTimeOffset(void *a1, const char *a2, ...)
{
  return _[a1 generateNextDayTimeOffset];
}

id objc_msgSend_generatePreviewForFileURL_(void *a1, const char *a2, ...)
{
  return [a1 generatePreviewForFileURL:];
}

id objc_msgSend_generateSessionID(void *a1, const char *a2, ...)
{
  return _[a1 generateSessionID];
}

id objc_msgSend_generateSessionToken(void *a1, const char *a2, ...)
{
  return _[a1 generateSessionToken];
}

id objc_msgSend_generateSingleUseTokenForWorkflowIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "generateSingleUseTokenForWorkflowIdentifier:completion:");
}

id objc_msgSend_generateSpecialPreviewPhotoForRequestID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "generateSpecialPreviewPhotoForRequestID:");
}

id objc_msgSend_generateSymptomReportWithContext_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 generateSymptomReportWithContext:x0 completionHandler:x1];
}

id objc_msgSend_generatedError(void *a1, const char *a2, ...)
{
  return _[a1 generatedError];
}

id objc_msgSend_getAACPCapabilityBit_(void *a1, const char *a2, ...)
{
  return [a1 getAACPCapabilityBit:];
}

id objc_msgSend_getActivePairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 getActivePairedDevice];
}

id objc_msgSend_getAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 getAllDevices];
}

id objc_msgSend_getAllDevicesWithArchivedAltAccountDevicesMatching_(void *a1, const char *a2, ...)
{
  return [a1 getAllDevicesWithArchivedAltAccountDevicesMatching:];
}

id objc_msgSend_getAllDevicesWithArchivedDevices(void *a1, const char *a2, ...)
{
  return _[a1 getAllDevicesWithArchivedDevices];
}

id objc_msgSend_getAppLinkWithURL_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getAppLinkWithURL:];
}

id objc_msgSend_getAppName(void *a1, const char *a2, ...)
{
  return _[a1 getAppName];
}

id objc_msgSend_getAssetBundleForDeviceQuery_withRequestConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 getAssetBundleForDeviceQuery:withRequestConfiguration:];
}

id objc_msgSend_getBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 getBytes:x0 length:x1];
}

id objc_msgSend_getCallManagementConfig(void *a1, const char *a2, ...)
{
  return _[a1 getCallManagementConfig];
}

id objc_msgSend_getContactBackgroundStyle(void *a1, const char *a2, ...)
{
  return _[a1 getContactBackgroundStyle];
}

id objc_msgSend_getContinuationStreamsForMessage_bundleID_usingID_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "getContinuationStreamsForMessage:bundleID:usingID:completionHandler:");
}

id objc_msgSend_getDataStatus_completion_(void *a1, const char *a2, ...)
{
  return [a1 getDataStatus:completion:];
}

id objc_msgSend_getDevicesMatching_(void *a1, const char *a2, ...)
{
  return [a1 getDevicesMatching:];
}

id objc_msgSend_getFeatureName_(void *a1, const char *a2, ...)
{
  return [a1 getFeatureName:];
}

id objc_msgSend_getIdentitiesWithFlags_completion_(void *a1, const char *a2, ...)
{
  return [a1 getIdentitiesWithFlags:completion:];
}

id objc_msgSend_getInputStream_outputStream_(void *a1, const char *a2, ...)
{
  return [a1 getInputStream:outputStream:];
}

id objc_msgSend_getInterface_(void *a1, const char *a2, ...)
{
  return [a1 getInterface:];
}

id objc_msgSend_getMacAddressAsString(void *a1, const char *a2, ...)
{
  return _[a1 getMacAddressAsString];
}

id objc_msgSend_getNotificationSettingsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getNotificationSettingsWithCompletionHandler:];
}

id objc_msgSend_getOppositeBackgroundStyle_(void *a1, const char *a2, ...)
{
  return [a1 getOppositeBackgroundStyle:];
}

id objc_msgSend_getOppositeColor_(void *a1, const char *a2, ...)
{
  return [a1 getOppositeColor:];
}

id objc_msgSend_getPeerUUID(void *a1, const char *a2, ...)
{
  return _[a1 getPeerUUID];
}

id objc_msgSend_getPreferredDataSubscriptionContext_(void *a1, const char *a2, ...)
{
  return [a1 getPreferredDataSubscriptionContext:];
}

id objc_msgSend_getRed_green_blue_alpha_(void *a1, const char *a2, ...)
{
  return [a1 getRed:green:blue:alpha:];
}

id objc_msgSend_getRemoteAutoFillAvailabilityWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getRemoteAutoFillAvailabilityWithCompletionHandler:];
}

id objc_msgSend_getResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "getResourceValue:forKey:error:");
}

id objc_msgSend_getResultWhileDecryptingBytesInPlace_andCounter_withTag_version_(void *a1, const char *a2, ...)
{
  return [a1 getResultWhileDecryptingBytesInPlace:andCounter:withTag:version:];
}

id objc_msgSend_getSIMStatus_completion_(void *a1, const char *a2, ...)
{
  return [a1 getSIMStatus:x0 completion:x1];
}

id objc_msgSend_getScanningDeviceCandidates_(void *a1, const char *a2, ...)
{
  return [a1 getScanningDeviceCandidates:];
}

id objc_msgSend_getShareSheetSessionForSessionID_(void *a1, const char *a2, ...)
{
  return [a1 getShareSheetSessionForSessionID:];
}

id objc_msgSend_getSignalStrengthInfo_completion_(void *a1, const char *a2, ...)
{
  return [a1 getSignalStrengthInfo:x0 completion:x1];
}

id objc_msgSend_getSmartCoverState_usage_(void *a1, const char *a2, ...)
{
  return [a1 getSmartCoverState:usage:];
}

id objc_msgSend_getState_andReason_(void *a1, const char *a2, ...)
{
  return [a1 getState:andReason:];
}

id objc_msgSend_getStatusCode_(void *a1, const char *a2, ...)
{
  return [a1 getStatusCode:];
}

id objc_msgSend_getStreamsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getStreamsWithCompletionHandler:];
}

id objc_msgSend_getTagAndCounterWhileEncryptingBytesInPlace_forAdvertisementWithVersion_handler_(void *a1, const char *a2, ...)
{
  return [a1 getTagAndCounterWhileEncryptingBytesInPlace:forAdvertisementWithVersion:handler:];
}

id objc_msgSend_getTagWhileEncryptingBytesInPlace_counterValue_forAdvertisementWithVersion_(void *a1, const char *a2, ...)
{
  return [a1 getTagWhileEncryptingBytesInPlace:x0 counterValue:x1 forAdvertisementWithVersion:x2];
}

id objc_msgSend_getTransferRate(void *a1, const char *a2, ...)
{
  return _[a1 getTransferRate];
}

id objc_msgSend_getTransferSize(void *a1, const char *a2, ...)
{
  return _[a1 getTransferSize];
}

id objc_msgSend_getUUIDBytes_(void *a1, const char *a2, ...)
{
  return [a1 getUUIDBytes:];
}

id objc_msgSend_getUpsellNotificationBodyTextForEvent_(void *a1, const char *a2, ...)
{
  return [a1 getUpsellNotificationBodyTextForEvent:];
}

id objc_msgSend_getWatchNameForTesting(void *a1, const char *a2, ...)
{
  return _[a1 getWatchNameForTesting];
}

id objc_msgSend_getWristAndMotionStateWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 getWristAndMotionStateWithCompletionHandler:];
}

id objc_msgSend_givenName(void *a1, const char *a2, ...)
{
  return _[a1 givenName];
}

id objc_msgSend_greenColor(void *a1, const char *a2, ...)
{
  return _[a1 greenColor];
}

id objc_msgSend_group(void *a1, const char *a2, ...)
{
  return _[a1 group];
}

id objc_msgSend_groupMonogramImageDataForContacts_style_diameter_monogramsAsFlatImages_processOppositeBackgroundStyle_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "groupMonogramImageDataForContacts:style:diameter:monogramsAsFlatImages:processOppositeBackgroundStyle:");
}

id objc_msgSend_groupMonogramImageDataForContactsSync_style_diameter_backgroundStyle_monogramsAsFlatImages_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "groupMonogramImageDataForContactsSync:style:diameter:backgroundStyle:monogramsAsFlatImages:replyHandler:");
}

id objc_msgSend_groupName(void *a1, const char *a2, ...)
{
  return _[a1 groupName];
}

id objc_msgSend_gsToken(void *a1, const char *a2, ...)
{
  return _[a1 gsToken];
}

id objc_msgSend_handle(void *a1, const char *a2, ...)
{
  return _[a1 handle];
}

id objc_msgSend_handleAWDLInfo_(void *a1, const char *a2, ...)
{
  return [a1 handleAWDLInfo:];
}

id objc_msgSend_handleAWDLState_(void *a1, const char *a2, ...)
{
  return [a1 handleAWDLState:];
}

id objc_msgSend_handleAWDLUp(void *a1, const char *a2, ...)
{
  return _[a1 handleAWDLUp];
}

id objc_msgSend_handleAction(void *a1, const char *a2, ...)
{
  return _[a1 handleAction];
}

id objc_msgSend_handleActiveDeviceUpdated(void *a1, const char *a2, ...)
{
  return _[a1 handleActiveDeviceUpdated];
}

id objc_msgSend_handleActivityDetected_(void *a1, const char *a2, ...)
{
  return [a1 handleActivityDetected:];
}

id objc_msgSend_handleAirDropNodesChanged_sessionID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleAirDropNodesChanged:sessionID:");
}

id objc_msgSend_handleAirDropTransferUpdated_(void *a1, const char *a2, ...)
{
  return [a1 handleAirDropTransferUpdated:];
}

id objc_msgSend_handleAppleAccountSignIn(void *a1, const char *a2, ...)
{
  return _[a1 handleAppleAccountSignIn];
}

id objc_msgSend_handleAppleAccountSignOut(void *a1, const char *a2, ...)
{
  return _[a1 handleAppleAccountSignOut];
}

id objc_msgSend_handleAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleAskRequest];
}

id objc_msgSend_handleAuthPromptImageData_(void *a1, const char *a2, ...)
{
  return [a1 handleAuthPromptImageData:];
}

id objc_msgSend_handleAuthPromptRequest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleAuthPromptRequest:");
}

id objc_msgSend_handleAuthPromptResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleAuthPromptResponse:];
}

id objc_msgSend_handleBLEScanTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleBLEScanTimerFired];
}

id objc_msgSend_handleBioLockout(void *a1, const char *a2, ...)
{
  return _[a1 handleBioLockout];
}

id objc_msgSend_handleBioLockoutStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleBioLockoutStateChanged:];
}

id objc_msgSend_handleBrowserMessage_forConnection_(void *a1, const char *a2, ...)
{
  return [a1 handleBrowserMessage:forConnection:];
}

id objc_msgSend_handleButtonEvent_(void *a1, const char *a2, ...)
{
  return [a1 handleButtonEvent:];
}

id objc_msgSend_handleBytesAvailable(void *a1, const char *a2, ...)
{
  return _[a1 handleBytesAvailable];
}

id objc_msgSend_handleBytesForStream(void *a1, const char *a2, ...)
{
  return _[a1 handleBytesForStream];
}

id objc_msgSend_handleCanceledAfterSuccess(void *a1, const char *a2, ...)
{
  return _[a1 handleCanceledAfterSuccess];
}

id objc_msgSend_handleCarKitSessionStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleCarKitSessionStateChanged:];
}

id objc_msgSend_handleClassALongTermKeyRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleClassALongTermKeyRequest:];
}

id objc_msgSend_handleClassALongTermKeyResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleClassALongTermKeyResponse:];
}

id objc_msgSend_handleCleanUpAWDL(void *a1, const char *a2, ...)
{
  return _[a1 handleCleanUpAWDL];
}

id objc_msgSend_handleConfigState(void *a1, const char *a2, ...)
{
  return _[a1 handleConfigState];
}

id objc_msgSend_handleConfigurationState(void *a1, const char *a2, ...)
{
  return _[a1 handleConfigurationState];
}

id objc_msgSend_handleConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 handleConfirmationACK];
}

id objc_msgSend_handleConfirmationFailed(void *a1, const char *a2, ...)
{
  return _[a1 handleConfirmationFailed];
}

id objc_msgSend_handleConversionProgress_(void *a1, const char *a2, ...)
{
  return [a1 handleConversionProgress:];
}

id objc_msgSend_handleCreateEscrowSecret_(void *a1, const char *a2, ...)
{
  return [a1 handleCreateEscrowSecret:];
}

id objc_msgSend_handleDecryptionFailure_(void *a1, const char *a2, ...)
{
  return [a1 handleDecryptionFailure:];
}

id objc_msgSend_handleDelegateInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 handleDelegateInvalidated];
}

id objc_msgSend_handleDeviceAuthenticationSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleDeviceAuthenticationSetupRequest];
}

id objc_msgSend_handleDeviceUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 handleDeviceUnlocked];
}

id objc_msgSend_handleDisplayStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleDisplayStateChanged:];
}

id objc_msgSend_handleEncryptionKeyReply_forRequestRecord_fromDevice_transportLinkType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleEncryptionKeyReply:forRequestRecord:fromDevice:transportLinkType:");
}

id objc_msgSend_handleEncryptionKeyReplyRapport_options_forRequestRecord_fromDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleEncryptionKeyReplyRapport:options:forRequestRecord:fromDevice:");
}

id objc_msgSend_handleEncyptionKeyRequest_fromIDSDevice_withRequestIdentifier_transportType_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 handleEncyptionKeyRequest:x0 fromIDSDevice:x1 withRequestIdentifier:x2 transportType:x3 completionHandler:x4];
}

id objc_msgSend_handleEndpointsChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleEndpointsChanged:];
}

id objc_msgSend_handleEngravingData_(void *a1, const char *a2, ...)
{
  return [a1 handleEngravingData:];
}

id objc_msgSend_handleEscrowSessionRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleEscrowSessionRequest];
}

id objc_msgSend_handleEscrowSessionRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleEscrowSessionRequest:];
}

id objc_msgSend_handleEscrowSessionRequest_withUpdatedLongTermKey_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleEscrowSessionRequest:withUpdatedLongTermKey:");
}

id objc_msgSend_handleEvent_(void *a1, const char *a2, ...)
{
  return [a1 handleEvent:];
}

id objc_msgSend_handleEventWithData_(void *a1, const char *a2, ...)
{
  return [a1 handleEventWithData:];
}

id objc_msgSend_handleFailureInFunction_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleFailureInFunction:file:lineNumber:description:");
}

id objc_msgSend_handleFailureInMethod_object_file_lineNumber_description_(void *a1, const char *a2, ...)
{
  return [a1 handleFailureInMethod:x0 object:x1 file:x2 lineNumber:x3 description:x4];
}

id objc_msgSend_handleFinalize_(void *a1, const char *a2, ...)
{
  return [a1 handleFinalize:];
}

id objc_msgSend_handleForPredicate_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleForPredicate:error:");
}

id objc_msgSend_handleFoundBLEDevice_(void *a1, const char *a2, ...)
{
  return [a1 handleFoundBLEDevice:];
}

id objc_msgSend_handleFoundBLEDevice_available_lockedOnWrist_(void *a1, const char *a2, ...)
{
  return [a1 handleFoundBLEDevice:available:lockedOnWrist:];
}

id objc_msgSend_handleFoundHashes_rssi_(void *a1, const char *a2, ...)
{
  return [a1 handleFoundHashes:rssi:];
}

id objc_msgSend_handleFoundPeer_(void *a1, const char *a2, ...)
{
  return [a1 handleFoundPeer:];
}

id objc_msgSend_handleHeaderRead(void *a1, const char *a2, ...)
{
  return _[a1 handleHeaderRead];
}

id objc_msgSend_handleIncomingResponse_identifier_(void *a1, const char *a2, ...)
{
  return [a1 handleIncomingResponse:identifier];
}

id objc_msgSend_handleInitialResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleInitialResponse:];
}

id objc_msgSend_handleInputDidBeginWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return [a1 handleInputDidBeginWithFlags:sessionInfo:];
}

id objc_msgSend_handleInputDidEndWithFlags_sessionInfo_(void *a1, const char *a2, ...)
{
  return [a1 handleInputDidEndWithFlags:sessionInfo:];
}

id objc_msgSend_handleKeyBagLockStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 handleKeyBagLockStateChanged];
}

id objc_msgSend_handleKeyDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 handleKeyDeviceLocked];
}

id objc_msgSend_handleLTKRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleLTKRequest:];
}

id objc_msgSend_handleLTKResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleLTKResponse:];
}

id objc_msgSend_handleLTKTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleLTKTimerFired];
}

id objc_msgSend_handleLockConnectionStartedForSession_(void *a1, const char *a2, ...)
{
  return [a1 handleLockConnectionStartedForSession:];
}

id objc_msgSend_handleLockStateChanged(void *a1, const char *a2, ...)
{
  return _[a1 handleLockStateChanged];
}

id objc_msgSend_handleLongTermKeyRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleLongTermKeyRequest:];
}

id objc_msgSend_handleLongTermKeyResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleLongTermKeyResponse:];
}

id objc_msgSend_handleMessage_fromDeviceID_type_(void *a1, const char *a2, ...)
{
  return [a1 handleMessage:x0 fromDeviceID:x1 type:x2];
}

id objc_msgSend_handleMessageRead(void *a1, const char *a2, ...)
{
  return _[a1 handleMessageRead];
}

id objc_msgSend_handleMessageWithWrapper_(void *a1, const char *a2, ...)
{
  return [a1 handleMessageWithWrapper:];
}

id objc_msgSend_handleMessageWritten_(void *a1, const char *a2, ...)
{
  return [a1 handleMessageWritten:];
}

id objc_msgSend_handleMotionDetected_(void *a1, const char *a2, ...)
{
  return [a1 handleMotionDetected:];
}

id objc_msgSend_handleMoveToAppShareSheetCompletedWithSuccess_error_(void *a1, const char *a2, ...)
{
  return [a1 handleMoveToAppShareSheetCompletedWithSuccess:error:];
}

id objc_msgSend_handleMoveToAppShareSheetSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 handleMoveToAppShareSheetSucceeded];
}

id objc_msgSend_handleNetworkStarted_request_error_(void *a1, const char *a2, ...)
{
  return [a1 handleNetworkStarted:request:error:];
}

id objc_msgSend_handleNetworkStoppedWithError_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleNetworkStoppedWithError:error:");
}

id objc_msgSend_handleNewAccelerometerData(void *a1, const char *a2, ...)
{
  return _[a1 handleNewAccelerometerData];
}

id objc_msgSend_handleNewAdvertisementDevice_data_receivedViaScanning_withSuccessHandler_(void *a1, const char *a2, ...)
{
  return [a1 handleNewAdvertisementDevice:data:receivedViaScanning:withSuccessHandler:];
}

id objc_msgSend_handleNewConnection_(void *a1, const char *a2, ...)
{
  return [a1 handleNewConnection:];
}

id objc_msgSend_handleNotificationWasDismissed_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleNotificationWasDismissed:reason:");
}

id objc_msgSend_handleOpenedStream(void *a1, const char *a2, ...)
{
  return _[a1 handleOpenedStream];
}

id objc_msgSend_handleOpenedStream_(void *a1, const char *a2, ...)
{
  return [a1 handleOpenedStream:];
}

id objc_msgSend_handleOperationMessage_forConnection_(void *a1, const char *a2, ...)
{
  return [a1 handleOperationMessage:forConnection:];
}

id objc_msgSend_handlePairedSuccessfully(void *a1, const char *a2, ...)
{
  return _[a1 handlePairedSuccessfully];
}

id objc_msgSend_handlePastActivities_withStartDate_(void *a1, const char *a2, ...)
{
  return [a1 handlePastActivities:withStartDate:];
}

id objc_msgSend_handlePastActivitiesForPairedUnlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handlePastActivitiesForPairedUnlock:");
}

id objc_msgSend_handlePastActivitiesForPhoneAutoUnlock_withStartDate_(void *a1, const char *a2, ...)
{
  return [a1 handlePastActivitiesForPhoneAutoUnlock:withStartDate:];
}

id objc_msgSend_handlePastPedometerData_(void *a1, const char *a2, ...)
{
  return [a1 handlePastPedometerData:];
}

id objc_msgSend_handlePayloadReply_forRequestRecord_fromDevice_transportLinkType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handlePayloadReply:forRequestRecord:fromDevice:transportLinkType:");
}

id objc_msgSend_handlePayloadReplyRapport_options_forRequestRecord_fromDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handlePayloadReplyRapport:options:forRequestRecord:fromDevice:");
}

id objc_msgSend_handlePayloadRequest_fromIDSDevice_withRequestIdentifier_transportType_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handlePayloadRequest:fromIDSDevice:withRequestIdentifier:transportType:completionHandler:");
}

id objc_msgSend_handlePeerFound_(void *a1, const char *a2, ...)
{
  return [a1 handlePeerFound:];
}

id objc_msgSend_handlePeerInRange(void *a1, const char *a2, ...)
{
  return _[a1 handlePeerInRange];
}

id objc_msgSend_handlePeerOutOfRange(void *a1, const char *a2, ...)
{
  return _[a1 handlePeerOutOfRange];
}

id objc_msgSend_handleProxyConnectionStartedForSession_(void *a1, const char *a2, ...)
{
  return [a1 handleProxyConnectionStartedForSession:];
}

id objc_msgSend_handleRangingResults_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 handleRangingResults:errorCode:];
}

id objc_msgSend_handleRangingStarted(void *a1, const char *a2, ...)
{
  return _[a1 handleRangingStarted];
}

id objc_msgSend_handleRegistrationBegan(void *a1, const char *a2, ...)
{
  return _[a1 handleRegistrationBegan];
}

id objc_msgSend_handleRegistrationCompletedSuccessfully_(void *a1, const char *a2, ...)
{
  return [a1 handleRegistrationCompletedSuccessfully:];
}

id objc_msgSend_handleRegistrationFailedKeyLocked(void *a1, const char *a2, ...)
{
  return _[a1 handleRegistrationFailedKeyLocked];
}

id objc_msgSend_handleRelockRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleRelockRequest];
}

id objc_msgSend_handleRemoteLockStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleRemoteLockStateChanged:];
}

id objc_msgSend_handleRemoteRegistrationRequested(void *a1, const char *a2, ...)
{
  return _[a1 handleRemoteRegistrationRequested];
}

id objc_msgSend_handleRequiredStateDisabled(void *a1, const char *a2, ...)
{
  return _[a1 handleRequiredStateDisabled];
}

id objc_msgSend_handleResetState_(void *a1, const char *a2, ...)
{
  return [a1 handleResetState:];
}

id objc_msgSend_handleScanAssertionTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleScanAssertionTimerFired];
}

id objc_msgSend_handleScanResetTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleScanResetTimerFired];
}

id objc_msgSend_handleScanTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleScanTimerFired];
}

id objc_msgSend_handleServerRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleServerRequest:];
}

id objc_msgSend_handleSessionAuthToken_(void *a1, const char *a2, ...)
{
  return [a1 handleSessionAuthToken:];
}

id objc_msgSend_handleSessionKeyExchangeRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleSessionKeyExchangeRequest:];
}

id objc_msgSend_handleSessionKeyExchangeResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleSessionKeyExchangeResponse:];
}

id objc_msgSend_handleSetupCreateRecord_(void *a1, const char *a2, ...)
{
  return [a1 handleSetupCreateRecord:];
}

id objc_msgSend_handleSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 handleSetupRequest];
}

id objc_msgSend_handleSetupRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleSetupRequest:];
}

id objc_msgSend_handleSetupSessionCreated_(void *a1, const char *a2, ...)
{
  return [a1 handleSetupSessionCreated:];
}

id objc_msgSend_handleSetupSessionCreated_fromDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 handleSetupSessionCreated:fromDeviceID:];
}

id objc_msgSend_handleSleepWakeCallBack_messageArguement_(void *a1, const char *a2, ...)
{
  return [a1 handleSleepWakeCallBack:messageArguement:];
}

id objc_msgSend_handleSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 handleSpaceAvailable];
}

id objc_msgSend_handleSpaceForMessage(void *a1, const char *a2, ...)
{
  return _[a1 handleSpaceForMessage];
}

id objc_msgSend_handleStartLTK_(void *a1, const char *a2, ...)
{
  return [a1 handleStartLTK:];
}

id objc_msgSend_handleStashConfirmation_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleStashConfirmation:");
}

id objc_msgSend_handleStashKeyExchangeRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleStashKeyExchangeRequest:];
}

id objc_msgSend_handleStashKeyExchangeResponse_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleStashKeyExchangeResponse:");
}

id objc_msgSend_handleStashToken_(void *a1, const char *a2, ...)
{
  return [a1 handleStashToken:];
}

id objc_msgSend_handleStepData_(void *a1, const char *a2, ...)
{
  return [a1 handleStepData:];
}

id objc_msgSend_handleStreamRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleStreamRequest:];
}

id objc_msgSend_handleStreamResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleStreamResponse:];
}

id objc_msgSend_handleSuccessfulMessageSentWithIdentifier_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 handleSuccessfulMessageSentWithIdentifier:sessionID:];
}

id objc_msgSend_handleSuccessfulPairing(void *a1, const char *a2, ...)
{
  return _[a1 handleSuccessfulPairing];
}

id objc_msgSend_handleTerminalCallBack(void *a1, const char *a2, ...)
{
  return _[a1 handleTerminalCallBack];
}

id objc_msgSend_handleTextInputData_(void *a1, const char *a2, ...)
{
  return [a1 handleTextInputData:];
}

id objc_msgSend_handleTimerFired(void *a1, const char *a2, ...)
{
  return _[a1 handleTimerFired];
}

id objc_msgSend_handleUnlockConfirmation_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "handleUnlockConfirmation:");
}

id objc_msgSend_handleUnlockStateRequest_(void *a1, const char *a2, ...)
{
  return [a1 handleUnlockStateRequest:];
}

id objc_msgSend_handleUnlockStateResponse_(void *a1, const char *a2, ...)
{
  return [a1 handleUnlockStateResponse:];
}

id objc_msgSend_handleUsername_password_(void *a1, const char *a2, ...)
{
  return [a1 handleUsername:password:];
}

id objc_msgSend_handleWiFiPowerChanged_(void *a1, const char *a2, ...)
{
  return [a1 handleWiFiPowerChanged:];
}

id objc_msgSend_handleWiFiRequestInvalidated(void *a1, const char *a2, ...)
{
  return _[a1 handleWiFiRequestInvalidated];
}

id objc_msgSend_handlerForTransfer_(void *a1, const char *a2, ...)
{
  return [a1 handlerForTransfer:];
}

id objc_msgSend_handles(void *a1, const char *a2, ...)
{
  return _[a1 handles];
}

id objc_msgSend_handlingAppBundleID(void *a1, const char *a2, ...)
{
  return _[a1 handlingAppBundleID];
}

id objc_msgSend_handlingAppInstalled(void *a1, const char *a2, ...)
{
  return _[a1 handlingAppInstalled];
}

id objc_msgSend_hasActiveNearbySharingInteraction(void *a1, const char *a2, ...)
{
  return _[a1 hasActiveNearbySharingInteraction];
}

id objc_msgSend_hasAuthToken(void *a1, const char *a2, ...)
{
  return _[a1 hasAuthToken];
}

id objc_msgSend_hasBytesAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasBytesAvailable];
}

id objc_msgSend_hasCaseBT(void *a1, const char *a2, ...)
{
  return _[a1 hasCaseBT];
}

id objc_msgSend_hasCheckViewState(void *a1, const char *a2, ...)
{
  return _[a1 hasCheckViewState];
}

id objc_msgSend_hasDefaultDevice(void *a1, const char *a2, ...)
{
  return _[a1 hasDefaultDevice];
}

id objc_msgSend_hasDuplicates(void *a1, const char *a2, ...)
{
  return _[a1 hasDuplicates];
}

id objc_msgSend_hasEncryptedPayload(void *a1, const char *a2, ...)
{
  return _[a1 hasEncryptedPayload];
}

id objc_msgSend_hasErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 hasErrorCode];
}

id objc_msgSend_hasFailureReasons(void *a1, const char *a2, ...)
{
  return _[a1 hasFailureReasons];
}

id objc_msgSend_hasGroupImage(void *a1, const char *a2, ...)
{
  return _[a1 hasGroupImage];
}

id objc_msgSend_hasIconHash(void *a1, const char *a2, ...)
{
  return _[a1 hasIconHash];
}

id objc_msgSend_hasImageData(void *a1, const char *a2, ...)
{
  return _[a1 hasImageData];
}

id objc_msgSend_hasIsAuthenticatingForSiri(void *a1, const char *a2, ...)
{
  return _[a1 hasIsAuthenticatingForSiri];
}

id objc_msgSend_hasItemConformingToTypeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 hasItemConformingToTypeIdentifier:];
}

id objc_msgSend_hasKey(void *a1, const char *a2, ...)
{
  return _[a1 hasKey];
}

id objc_msgSend_hasKeyData(void *a1, const char *a2, ...)
{
  return _[a1 hasKeyData];
}

id objc_msgSend_hasKeyFailed(void *a1, const char *a2, ...)
{
  return _[a1 hasKeyFailed];
}

id objc_msgSend_hasLid(void *a1, const char *a2, ...)
{
  return _[a1 hasLid];
}

id objc_msgSend_hasLocalID(void *a1, const char *a2, ...)
{
  return _[a1 hasLocalID];
}

id objc_msgSend_hasLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 hasLongTermKey];
}

id objc_msgSend_hasLtk(void *a1, const char *a2, ...)
{
  return _[a1 hasLtk];
}

id objc_msgSend_hasLtkHash(void *a1, const char *a2, ...)
{
  return _[a1 hasLtkHash];
}

id objc_msgSend_hasLtkID(void *a1, const char *a2, ...)
{
  return _[a1 hasLtkID];
}

id objc_msgSend_hasMotion_(void *a1, const char *a2, ...)
{
  return [a1 hasMotion:];
}

id objc_msgSend_hasPairedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 hasPairedDeviceID];
}

id objc_msgSend_hasPairingID(void *a1, const char *a2, ...)
{
  return _[a1 hasPairingID];
}

id objc_msgSend_hasPasscodeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasPasscodeEnabled];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_hasRequestID(void *a1, const char *a2, ...)
{
  return _[a1 hasRequestID];
}

id objc_msgSend_hasResetReason(void *a1, const char *a2, ...)
{
  return _[a1 hasResetReason];
}

id objc_msgSend_hasSecret(void *a1, const char *a2, ...)
{
  return _[a1 hasSecret];
}

id objc_msgSend_hasSenderID(void *a1, const char *a2, ...)
{
  return _[a1 hasSenderID];
}

id objc_msgSend_hasSessionID(void *a1, const char *a2, ...)
{
  return _[a1 hasSessionID];
}

id objc_msgSend_hasSkipMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 hasSkipMotionCheck];
}

id objc_msgSend_hasSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 hasSpaceAvailable];
}

id objc_msgSend_hasSplitBattery(void *a1, const char *a2, ...)
{
  return _[a1 hasSplitBattery];
}

id objc_msgSend_hasSplitCaseColors(void *a1, const char *a2, ...)
{
  return _[a1 hasSplitCaseColors];
}

id objc_msgSend_hasSquareImage(void *a1, const char *a2, ...)
{
  return _[a1 hasSquareImage];
}

id objc_msgSend_hasStashToken(void *a1, const char *a2, ...)
{
  return _[a1 hasStashToken];
}

id objc_msgSend_hasStepData(void *a1, const char *a2, ...)
{
  return _[a1 hasStepData];
}

id objc_msgSend_hasSuccess(void *a1, const char *a2, ...)
{
  return _[a1 hasSuccess];
}

id objc_msgSend_hasSuffix_(void *a1, const char *a2, ...)
{
  return [a1 hasSuffix:];
}

id objc_msgSend_hasSupportsACK(void *a1, const char *a2, ...)
{
  return _[a1 hasSupportsACK];
}

id objc_msgSend_hasSupportsConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 hasSupportsConfirmationACK];
}

id objc_msgSend_hasToken(void *a1, const char *a2, ...)
{
  return _[a1 hasToken];
}

id objc_msgSend_hasUnlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 hasUnlockEnabled];
}

id objc_msgSend_hasUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 hasUnlocked];
}

id objc_msgSend_hasUserEditedActivityOrder(void *a1, const char *a2, ...)
{
  return _[a1 hasUserEditedActivityOrder];
}

id objc_msgSend_hasUsingRecord(void *a1, const char *a2, ...)
{
  return _[a1 hasUsingRecord];
}

id objc_msgSend_hasWatchNewLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 hasWatchNewLTKSyncStatus];
}

id objc_msgSend_hasWatchOldLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 hasWatchOldLTKSyncStatus];
}

id objc_msgSend_hash(void *a1, const char *a2, ...)
{
  return _[a1 hash];
}

id objc_msgSend_hashMatchesAnyRemoteLTKForDeviceID_ltkHash_isPreferred_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "hashMatchesAnyRemoteLTKForDeviceID:ltkHash:isPreferred:");
}

id objc_msgSend_hashTableWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 hashTableWithOptions:];
}

id objc_msgSend_header(void *a1, const char *a2, ...)
{
  return _[a1 header];
}

id objc_msgSend_headerFields(void *a1, const char *a2, ...)
{
  return _[a1 headerFields];
}

id objc_msgSend_headerWithLength_(void *a1, const char *a2, ...)
{
  return [a1 headerWithLength:];
}

id objc_msgSend_helper_didPickUsername_password_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "helper:didPickUsername:password:error:");
}

id objc_msgSend_helper_tryPIN_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "helper:tryPIN:");
}

id objc_msgSend_helper_userNotificationDidActivate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "helper:userNotificationDidActivate:");
}

id objc_msgSend_helper_userNotificationDidDismiss_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "helper:userNotificationDidDismiss:");
}

id objc_msgSend_helperConnection(void *a1, const char *a2, ...)
{
  return _[a1 helperConnection];
}

id objc_msgSend_helperStart_(void *a1, const char *a2, ...)
{
  return [a1 helperStart:];
}

id objc_msgSend_hexStringMacAddressFromData_(void *a1, const char *a2, ...)
{
  return [a1 hexStringMacAddressFromData:];
}

id objc_msgSend_hiddenActivities(void *a1, const char *a2, ...)
{
  return _[a1 hiddenActivities];
}

id objc_msgSend_hideSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 hideSuggestions];
}

id objc_msgSend_hintToken(void *a1, const char *a2, ...)
{
  return _[a1 hintToken];
}

id objc_msgSend_homePodHandoffContentForDevice_info_(void *a1, const char *a2, ...)
{
  return [a1 homePodHandoffContentForDevice:info:];
}

id objc_msgSend_homePodHandoffPostIfNeeded_info_(void *a1, const char *a2, ...)
{
  return [a1 homePodHandoffPostIfNeeded:info];
}

id objc_msgSend_homePodHandoffRemove_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "homePodHandoffRemove:reason:");
}

id objc_msgSend_homePodHandoffRemoveAll(void *a1, const char *a2, ...)
{
  return _[a1 homePodHandoffRemoveAll];
}

id objc_msgSend_homePodHandoffUpdateIfNeeded_info_(void *a1, const char *a2, ...)
{
  return [a1 homePodHandoffUpdateIfNeeded:info];
}

id objc_msgSend_homePodType(void *a1, const char *a2, ...)
{
  return _[a1 homePodType];
}

id objc_msgSend_horizontalAngle(void *a1, const char *a2, ...)
{
  return _[a1 horizontalAngle];
}

id objc_msgSend_host(void *a1, const char *a2, ...)
{
  return _[a1 host];
}

id objc_msgSend_hostAPNetwork(void *a1, const char *a2, ...)
{
  return _[a1 hostAPNetwork];
}

id objc_msgSend_hostActionActivityProxies(void *a1, const char *a2, ...)
{
  return _[a1 hostActionActivityProxies];
}

id objc_msgSend_hostActivityConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 hostActivityConfigurations];
}

id objc_msgSend_hostAppBundleID(void *a1, const char *a2, ...)
{
  return _[a1 hostAppBundleID];
}

id objc_msgSend_hostAppProcessName(void *a1, const char *a2, ...)
{
  return _[a1 hostAppProcessName];
}

id objc_msgSend_hostAuditTokenData(void *a1, const char *a2, ...)
{
  return _[a1 hostAuditTokenData];
}

id objc_msgSend_hostConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 hostConfiguration];
}

id objc_msgSend_hostHiddenActivityConfigurations(void *a1, const char *a2, ...)
{
  return _[a1 hostHiddenActivityConfigurations];
}

id objc_msgSend_hostIdiom(void *a1, const char *a2, ...)
{
  return _[a1 hostIdiom];
}

id objc_msgSend_hostIsOnlyUSBEthernet(void *a1, const char *a2, ...)
{
  return _[a1 hostIsOnlyUSBEthernet];
}

id objc_msgSend_hostLocale(void *a1, const char *a2, ...)
{
  return _[a1 hostLocale];
}

id objc_msgSend_hostName(void *a1, const char *a2, ...)
{
  return _[a1 hostName];
}

id objc_msgSend_hostShareActivityProxies(void *a1, const char *a2, ...)
{
  return _[a1 hostShareActivityProxies];
}

id objc_msgSend_hostTintColor(void *a1, const char *a2, ...)
{
  return _[a1 hostTintColor];
}

id objc_msgSend_hostTraitCollection(void *a1, const char *a2, ...)
{
  return _[a1 hostTraitCollection];
}

id objc_msgSend_hotspotChannel(void *a1, const char *a2, ...)
{
  return _[a1 hotspotChannel];
}

id objc_msgSend_hotspotDevice(void *a1, const char *a2, ...)
{
  return _[a1 hotspotDevice];
}

id objc_msgSend_hotspotInfo(void *a1, const char *a2, ...)
{
  return _[a1 hotspotInfo];
}

id objc_msgSend_hotspotInfoHandler(void *a1, const char *a2, ...)
{
  return _[a1 hotspotInfoHandler];
}

id objc_msgSend_hotspotManagerTetheringSupportChanged_(void *a1, const char *a2, ...)
{
  return [a1 hotspotManagerTetheringSupportChanged:];
}

id objc_msgSend_hotspotName(void *a1, const char *a2, ...)
{
  return _[a1 hotspotName];
}

id objc_msgSend_hotspotPassword(void *a1, const char *a2, ...)
{
  return _[a1 hotspotPassword];
}

id objc_msgSend_hour(void *a1, const char *a2, ...)
{
  return _[a1 hour];
}

id objc_msgSend_iCloudDriveIsAccessible(void *a1, const char *a2, ...)
{
  return _[a1 iCloudDriveIsAccessible];
}

id objc_msgSend_iCloudDriveURL(void *a1, const char *a2, ...)
{
  return _[a1 iCloudDriveURL];
}

id objc_msgSend_iCloudSharedPhotoLibraryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 iCloudSharedPhotoLibraryEnabled];
}

id objc_msgSend_iLifeLinks(void *a1, const char *a2, ...)
{
  return _[a1 iLifeLinks];
}

id objc_msgSend_iTunesStoreLinks(void *a1, const char *a2, ...)
{
  return _[a1 iTunesStoreLinks];
}

id objc_msgSend_iWorkApplicationName(void *a1, const char *a2, ...)
{
  return _[a1 iWorkApplicationName];
}

id objc_msgSend_iWorkDocumentName(void *a1, const char *a2, ...)
{
  return _[a1 iWorkDocumentName];
}

id objc_msgSend_iWorkLinks(void *a1, const char *a2, ...)
{
  return _[a1 iWorkLinks];
}

id objc_msgSend_icon(void *a1, const char *a2, ...)
{
  return _[a1 icon];
}

id objc_msgSend_iconCache(void *a1, const char *a2, ...)
{
  return _[a1 iconCache];
}

id objc_msgSend_iconData(void *a1, const char *a2, ...)
{
  return _[a1 iconData];
}

id objc_msgSend_iconForApplicationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 iconForApplicationIdentifier:];
}

id objc_msgSend_iconForSystemImageNamed_(void *a1, const char *a2, ...)
{
  return [a1 iconForSystemImageNamed:];
}

id objc_msgSend_iconHash(void *a1, const char *a2, ...)
{
  return _[a1 iconHash];
}

id objc_msgSend_iconImage(void *a1, const char *a2, ...)
{
  return _[a1 iconImage];
}

id objc_msgSend_iconImageData(void *a1, const char *a2, ...)
{
  return _[a1 iconImageData];
}

id objc_msgSend_iconImageDataForHash_(void *a1, const char *a2, ...)
{
  return [a1 iconImageDataForHash:];
}

id objc_msgSend_iconImageSlotID(void *a1, const char *a2, ...)
{
  return _[a1 iconImageSlotID];
}

id objc_msgSend_iconIndex(void *a1, const char *a2, ...)
{
  return _[a1 iconIndex];
}

id objc_msgSend_iconScale(void *a1, const char *a2, ...)
{
  return _[a1 iconScale];
}

id objc_msgSend_iconSize(void *a1, const char *a2, ...)
{
  return _[a1 iconSize];
}

id objc_msgSend_iconTransferStore(void *a1, const char *a2, ...)
{
  return _[a1 iconTransferStore];
}

id objc_msgSend_id(void *a1, const char *a2, ...)
{
  return _[a1 id];
}

id objc_msgSend_idSelfIdentity(void *a1, const char *a2, ...)
{
  return _[a1 idSelfIdentity];
}

id objc_msgSend_identifer(void *a1, const char *a2, ...)
{
  return _[a1 identifer];
}

id objc_msgSend_identifier(void *a1, const char *a2, ...)
{
  return _[a1 identifier];
}

id objc_msgSend_identifierForColor_(void *a1, const char *a2, ...)
{
  return [a1 identifierForColor:];
}

id objc_msgSend_identifiersForPerson_(void *a1, const char *a2, ...)
{
  return [a1 identifiersForPerson:];
}

id objc_msgSend_identitiesWithError_(void *a1, const char *a2, ...)
{
  return [a1 identitiesWithError:];
}

id objc_msgSend_identity(void *a1, const char *a2, ...)
{
  return _[a1 identity];
}

id objc_msgSend_identityForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 identityForAppleID:];
}

id objc_msgSend_identityQueryComplete(void *a1, const char *a2, ...)
{
  return _[a1 identityQueryComplete];
}

id objc_msgSend_idleTimeout(void *a1, const char *a2, ...)
{
  return _[a1 idleTimeout];
}

id objc_msgSend_idsAddCachedIDSIdentifier_device_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsAddCachedIDSIdentifier:device:");
}

id objc_msgSend_idsAddCachedIDSIdentifierToDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsAddCachedIDSIdentifierToDevice:");
}

id objc_msgSend_idsBluetoothDeviceIDsForLEPipe(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForLEPipe];
}

id objc_msgSend_idsBluetoothDeviceIDsForRIServers(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForRIServers];
}

id objc_msgSend_idsBluetoothDeviceIDsForSharing(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForSharing];
}

id objc_msgSend_idsBluetoothDeviceIDsForWatches(void *a1, const char *a2, ...)
{
  return _[a1 idsBluetoothDeviceIDsForWatches];
}

id objc_msgSend_idsController(void *a1, const char *a2, ...)
{
  return _[a1 idsController];
}

id objc_msgSend_idsController_didReceiveProtoData_forType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsController:didReceiveProtoData:forType:");
}

id objc_msgSend_idsController_didReceiveProtoData_forType_deviceID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsController:didReceiveProtoData:forType:deviceID:")];
}

id objc_msgSend_idsControllerNearbyStateChanged_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsControllerNearbyStateChanged:");
}

id objc_msgSend_idsControllerSpaceDidBecomeAvailable_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsControllerSpaceDidBecomeAvailable:");
}

id objc_msgSend_idsDevice(void *a1, const char *a2, ...)
{
  return _[a1 idsDevice];
}

id objc_msgSend_idsDeviceArray(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceArray];
}

id objc_msgSend_idsDeviceForBluetoothDeviceID_conflictDetected_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceForBluetoothDeviceID:x0 conflictDetected:x1];
}

id objc_msgSend_idsDeviceForBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceForBluetoothID:];
}

id objc_msgSend_idsDeviceForUniqueID_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceForUniqueID:];
}

id objc_msgSend_idsDeviceFromBTIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceFromBTIdentifier:];
}

id objc_msgSend_idsDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceID];
}

id objc_msgSend_idsDeviceIDsForBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceIDsForBluetoothID:];
}

id objc_msgSend_idsDeviceIDsForRIServers(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIDsForRIServers];
}

id objc_msgSend_idsDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIdentifier];
}

id objc_msgSend_idsDeviceIdentifierConflict(void *a1, const char *a2, ...)
{
  return _[a1 idsDeviceIdentifierConflict];
}

id objc_msgSend_idsDeviceWithUniqueID_onService_(void *a1, const char *a2, ...)
{
  return [a1 idsDeviceWithUniqueID:x0 onService:x1];
}

id objc_msgSend_idsDevicesAppendDescription_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "idsDevicesAppendDescription:");
}

id objc_msgSend_idsDevicesIDs(void *a1, const char *a2, ...)
{
  return _[a1 idsDevicesIDs];
}

id objc_msgSend_idsIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 idsIdentifier];
}

id objc_msgSend_idsIsSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 idsIsSignedIn];
}

id objc_msgSend_idsMacCountCache(void *a1, const char *a2, ...)
{
  return _[a1 idsMacCountCache];
}

id objc_msgSend_idsMacDeviceIDs(void *a1, const char *a2, ...)
{
  return _[a1 idsMacDeviceIDs];
}

id objc_msgSend_idsService(void *a1, const char *a2, ...)
{
  return _[a1 idsService];
}

id objc_msgSend_idsServiceClassA(void *a1, const char *a2, ...)
{
  return _[a1 idsServiceClassA];
}

id objc_msgSend_ignoresBatteryStatusIfCounterfeit(void *a1, const char *a2, ...)
{
  return _[a1 ignoresBatteryStatusIfCounterfeit];
}

id objc_msgSend_image(void *a1, const char *a2, ...)
{
  return _[a1 image];
}

id objc_msgSend_imageCachedForHash_device_(void *a1, const char *a2, ...)
{
  return [a1 imageCachedForHash:device:];
}

id objc_msgSend_imageConversionRequest(void *a1, const char *a2, ...)
{
  return _[a1 imageConversionRequest];
}

id objc_msgSend_imageData(void *a1, const char *a2, ...)
{
  return _[a1 imageData];
}

id objc_msgSend_imageDataAlreadyCached(void *a1, const char *a2, ...)
{
  return _[a1 imageDataAlreadyCached];
}

id objc_msgSend_imageForKey_contactIDs_(void *a1, const char *a2, ...)
{
  return [a1 imageForKey:contactIDs:];
}

id objc_msgSend_imageHash(void *a1, const char *a2, ...)
{
  return _[a1 imageHash];
}

id objc_msgSend_imageNamed_inBundle_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:inBundle:];
}

id objc_msgSend_imageNamed_inBundle_compatibleWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 imageNamed:x0 inBundle:x1 compatibleWithTraitCollection:x2];
}

id objc_msgSend_imagePath(void *a1, const char *a2, ...)
{
  return _[a1 imagePath];
}

id objc_msgSend_imageTitle(void *a1, const char *a2, ...)
{
  return _[a1 imageTitle];
}

id objc_msgSend_imageWithCGImage_(void *a1, const char *a2, ...)
{
  return [a1 imageWithCGImage:];
}

id objc_msgSend_imageWithCGImage_scale_orientation_(void *a1, const char *a2, ...)
{
  return [a1 imageWithCGImage:x0 scale:x1 orientation:x2];
}

id objc_msgSend_imageWithContentsOfFile_(void *a1, const char *a2, ...)
{
  return [a1 imageWithContentsOfFile:];
}

id objc_msgSend_imageWithData_(void *a1, const char *a2, ...)
{
  return [a1 imageWithData:];
}

id objc_msgSend_images(void *a1, const char *a2, ...)
{
  return _[a1 images];
}

id objc_msgSend_impactHaptic(void *a1, const char *a2, ...)
{
  return _[a1 impactHaptic];
}

id objc_msgSend_importData(void *a1, const char *a2, ...)
{
  return _[a1 importData];
}

id objc_msgSend_importICSData_intoCalendar_options_(void *a1, const char *a2, ...)
{
  return [a1 importICSData:x0 intoCalendar:x1 options:x2];
}

id objc_msgSend_importMemosForItems_completion_(void *a1, const char *a2, ...)
{
  return [a1 importMemosForItems:completion:];
}

id objc_msgSend_importMemosWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "importMemosWithCompletion:");
}

id objc_msgSend_importPassesWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 importPassesWithCompletion:];
}

id objc_msgSend_importRecordingWithSourceAudioURL_name_date_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 importRecordingWithSourceAudioURL:name:date:completionHandler:];
}

id objc_msgSend_importURLsWithError_(void *a1, const char *a2, ...)
{
  return [a1 importURLsWithError:];
}

id objc_msgSend_inCallUIBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 inCallUIBundleIdentifier];
}

id objc_msgSend_inConfigureState(void *a1, const char *a2, ...)
{
  return _[a1 inConfigureState];
}

id objc_msgSend_inPosition(void *a1, const char *a2, ...)
{
  return _[a1 inPosition];
}

id objc_msgSend_inRange(void *a1, const char *a2, ...)
{
  return _[a1 inRange];
}

id objc_msgSend_inactivePhysicalCardForFeatureIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 inactivePhysicalCardForFeatureIdentifier:x0 completion:x1];
}

id objc_msgSend_incomingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 incomingResponseIdentifier];
}

id objc_msgSend_incrementAttemptCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementAttemptCount];
}

id objc_msgSend_incrementCount(void *a1, const char *a2, ...)
{
  return _[a1 incrementCount];
}

id objc_msgSend_incrementTransfersCompleted(void *a1, const char *a2, ...)
{
  return _[a1 incrementTransfersCompleted];
}

id objc_msgSend_incrementTransfersInitiated(void *a1, const char *a2, ...)
{
  return _[a1 incrementTransfersInitiated];
}

id objc_msgSend_incrementedCountID(void *a1, const char *a2, ...)
{
  return _[a1 incrementedCountID];
}

id objc_msgSend_indexInApplicationDefinedActivities(void *a1, const char *a2, ...)
{
  return _[a1 indexInApplicationDefinedActivities];
}

id objc_msgSend_indexOfObject_(void *a1, const char *a2, ...)
{
  return [a1 indexOfObject:];
}

id objc_msgSend_indexSet(void *a1, const char *a2, ...)
{
  return _[a1 indexSet];
}

id objc_msgSend_indexSetWithIndexesInRange_(void *a1, const char *a2, ...)
{
  return [a1 indexSetWithIndexesInRange:];
}

id objc_msgSend_indexesOfObjectsPassingTest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "indexesOfObjectsPassingTest:");
}

id objc_msgSend_indicator(void *a1, const char *a2, ...)
{
  return _[a1 indicator];
}

id objc_msgSend_indicatorOverride(void *a1, const char *a2, ...)
{
  return _[a1 indicatorOverride];
}

id objc_msgSend_infoProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 infoProximityEstimator];
}

id objc_msgSend_init(void *a1, const char *a2, ...)
{
  return _[a1 init];
}

id objc_msgSend_initAsResponder_macAddress_key_(void *a1, const char *a2, ...)
{
  return [a1 initAsResponder:x0 macAddress:x1 key:x2];
}

id objc_msgSend_initBomWithFiles(void *a1, const char *a2, ...)
{
  return _[a1 initBomWithFiles];
}

id objc_msgSend_initForReadingFromData_error_(void *a1, const char *a2, ...)
{
  return [a1 initForReadingFromData:x0 error:x1];
}

id objc_msgSend_initRequiringSecureCoding_(void *a1, const char *a2, ...)
{
  return [a1 initRequiringSecureCoding:];
}

id objc_msgSend_initWithAccountIdentifier_emailOrPhone_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccountIdentifier:emailOrPhone:];
}

id objc_msgSend_initWithActivity_(void *a1, const char *a2, ...)
{
  return [a1 initWithActivity:];
}

id objc_msgSend_initWithAdvertisementVersion_advertisementPayload_options_device_(void *a1, const char *a2, ...)
{
  return [a1 initWithAdvertisementVersion:advertisementVersion advertisementPayload:advertisementPayload options:options device:device];
}

id objc_msgSend_initWithAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 initWithAltDSID:];
}

id objc_msgSend_initWithAppleID_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppleID:];
}

id objc_msgSend_initWithAppleID_altDSID_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppleID:altDSID:];
}

id objc_msgSend_initWithAppleID_certificateToken_privateKeyPersistentReference_(void *a1, const char *a2, ...)
{
  return [a1 initWithAppleID:x0 certificateToken:x1 privateKeyPersistentReference:x2];
}

id objc_msgSend_initWithApplicationExtension_partialShortcutWithName_identifier_image_sortValue_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplicationExtension:x0 partialShortcutWithName:x1 identifier:x2 image:x3 sortValue:x4];
}

id objc_msgSend_initWithApplicationLabel_pkData_bonjourListenerUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplicationLabel:pkData:bonjourListenerUUID:];
}

id objc_msgSend_initWithApplicationLabel_supportedApplicationLabels_pkData_bonjourListenerUUID_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplicationLabel:x0 supportedApplicationLabels:x1 pkData:x2 bonjourListenerUUID:x3];
}

id objc_msgSend_initWithApplicationProxy_documentProxy_isContentManaged_sourceApplicationAuditTokenData_appIsDocumentTypeOwner_supportedTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 initWithApplicationProxy:a2 documentProxy:a3 isContentManaged:a4 sourceApplicationAuditTokenData:a5 appIsDocumentTypeOwner:a6 supportedTypeIdentifiers:a7];
}

id objc_msgSend_initWithArray_(void *a1, const char *a2, ...)
{
  return [a1 initWithArray:];
}

id objc_msgSend_initWithAssetBundleAtURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithAssetBundleAtURL:];
}

id objc_msgSend_initWithAttributedString_previewImage_subject_(void *a1, const char *a2, ...)
{
  return [a1 initWithAttributedString:x0 previewImage:x1 subject:x2];
}

id objc_msgSend_initWithAttributesFromActivityConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithAttributesFromActivityConfiguration:];
}

id objc_msgSend_initWithAuthorData_streamHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithAuthorData:x0 streamHandler:x1];
}

id objc_msgSend_initWithAutoUnlockDevice_sessionID_bleDevice_(void *a1, const char *a2, ...)
{
  return [a1 initWithAutoUnlockDevice:sessionID:bleDevice:];
}

id objc_msgSend_initWithAwdlInfo_isRangingInitiator_rangingPeer_queueAvailableHandler_awdlStartedHandler_peerFoundHandler_rangingStartedHandler_rangingCompletedHandler_invalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithAwdlInfo:x0 isRangingInitiator:x1 rangingPeer:x2 queueAvailableHandler:x3 awdlStartedHandler:x4 peerFoundHandler:x5 rangingStartedHandler:x6 rangingCompletedHandler:x7 invalidationHandler:x8];
}

id objc_msgSend_initWithBLEDevice_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 initWithBLEDevice:sessionID:];
}

id objc_msgSend_initWithBase64EncodedString_options_(void *a1, const char *a2, ...)
{
  return [a1 initWithBase64EncodedString:x0 options:x1];
}

id objc_msgSend_initWithBluetoothAddress_(void *a1, const char *a2, ...)
{
  return [a1 initWithBluetoothAddress:];
}

id objc_msgSend_initWithBluetoothAddress_productID_(void *a1, const char *a2, ...)
{
  return [a1 initWithBluetoothAddress:productID:];
}

id objc_msgSend_initWithBluetoothModel_(void *a1, const char *a2, ...)
{
  return [a1 initWithBluetoothModel:];
}

id objc_msgSend_initWithBluetoothProductIdentifier_color_(void *a1, const char *a2, ...)
{
  return [a1 initWithBluetoothProductIdentifier:color:];
}

id objc_msgSend_initWithBundleAtURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleAtURL:];
}

id objc_msgSend_initWithBundleIDs_states_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIDs:states:];
}

id objc_msgSend_initWithBundleId_conversationId_derivedIntentId_handle_contactId_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleId:x0 conversationId:x1 derivedIntentId:x2 handle:x3 contactId:x4];
}

id objc_msgSend_initWithBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:];
}

id objc_msgSend_initWithBundleIdentifier_allowPlaceholder_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:x0 allowPlaceholder:x1 error:x2];
}

id objc_msgSend_initWithBundleIdentifier_requireValid_platform_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleIdentifier:x0 requireValid:x1 platform:x2 error:x3];
}

id objc_msgSend_initWithBundleType_(void *a1, const char *a2, ...)
{
  return [a1 initWithBundleType:];
}

id objc_msgSend_initWithBytes_length_(void *a1, const char *a2, ...)
{
  return [a1 initWithBytes:length:];
}

id objc_msgSend_initWithBytes_length_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithBytes:x0 length:x1 encoding:x2];
}

id objc_msgSend_initWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithCapacity:];
}

id objc_msgSend_initWithClient_browseDescriptor_browseResponse_(void *a1, const char *a2, ...)
{
  return [a1 initWithClient:browseDescriptor:browseResponse:];
}

id objc_msgSend_initWithClientIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithClientIdentifier:];
}

id objc_msgSend_initWithClientProxy_withIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithClientProxy:withIdentifier:];
}

id objc_msgSend_initWithCloudSharingRequest_result_(void *a1, const char *a2, ...)
{
  return [a1 initWithCloudSharingRequest:result:];
}

id objc_msgSend_initWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithConfiguration:];
}

id objc_msgSend_initWithConnection_(void *a1, const char *a2, ...)
{
  return [a1 initWithConnection:];
}

id objc_msgSend_initWithContact_icon_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithContact:x0 icon:x1 atIndex:x2 cacheLookupKey:x3];
}

id objc_msgSend_initWithContact_iconData_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithContact:x0 iconData:x1 atIndex:x2 cacheLookupKey:x3];
}

id objc_msgSend_initWithContacts_icon_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithContacts:x0 icon:x1 atIndex:x2 cacheLookupKey:x3];
}

id objc_msgSend_initWithContacts_iconData_atIndex_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithContacts:x0 iconData:x1 atIndex:x2 cacheLookupKey:x3];
}

id objc_msgSend_initWithContentsOfFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithContentsOfFile:x0 options:x1 error:x2];
}

id objc_msgSend_initWithCreationDate_UTI_photoLocalIdentifier_identifier_cloudIdentifier_contentURL_contentText_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "initWithCreationDate:UTI:photoLocalIdentifier:identifier:cloudIdentifier:contentURL:contentText:");
}

id objc_msgSend_initWithCreationDate_UTI_photoLocalIdentifier_identifier_cloudIdentifier_contentURL_contentText_imageData_(void *a1, const char *a2, ...)
{
  return [a1 initWithCreationDate:x0 UTI:x1 photoLocalIdentifier:x2 identifier:x3 cloudIdentifier:x4 contentURL:x5 contentText:x6 imageData:x7];
}

id objc_msgSend_initWithDaemonUsingConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 initWithDaemonUsingConfiguration:];
}

id objc_msgSend_initWithData_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:];
}

id objc_msgSend_initWithData_encoding_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:x0 encoding:x1];
}

id objc_msgSend_initWithData_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:error:];
}

id objc_msgSend_initWithData_type_previewImage_subject_name_(void *a1, const char *a2, ...)
{
  return [a1 initWithData:x0 type:x1 previewImage:x2 subject:x3 name:x4];
}

id objc_msgSend_initWithDelegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:];
}

id objc_msgSend_initWithDelegate_queue_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:v2 queue:v3];
}

id objc_msgSend_initWithDelegate_sessionID_fetchShortcutsBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithDelegate:x0 sessionID:x1 fetchShortcutsBlock:x2];
}

id objc_msgSend_initWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 initWithDevice:];
}

id objc_msgSend_initWithDevice_acceptor_(void *a1, const char *a2, ...)
{
  return [a1 initWithDevice:acceptor:];
}

id objc_msgSend_initWithDevice_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 initWithDevice:sessionID:];
}

id objc_msgSend_initWithDevice_sessionID_bleDevice_(void *a1, const char *a2, ...)
{
  return [a1 initWithDevice:x0 sessionID:x1 bleDevice:x2];
}

id objc_msgSend_initWithDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 initWithDeviceID:];
}

id objc_msgSend_initWithDeviceIdentifier_identifierType_deviceType_launchContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithDeviceIdentifier:identifierType:deviceType:launchContext:];
}

id objc_msgSend_initWithDictRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictRepresentation:];
}

id objc_msgSend_initWithDictionary_(void *a1, const char *a2, ...)
{
  return [a1 initWithDictionary:];
}

id objc_msgSend_initWithDispatchQueue_delegate_(void *a1, const char *a2, ...)
{
  return [a1 initWithDispatchQueue:delegate:];
}

id objc_msgSend_initWithDomain_code_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:x0 code:x1 userInfo:x2];
}

id objc_msgSend_initWithDomain_type_name_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:type:name:];
}

id objc_msgSend_initWithDomain_type_name_port_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:x0 type:x1 name:x2 port:x3];
}

id objc_msgSend_initWithDomain_types_(void *a1, const char *a2, ...)
{
  return [a1 initWithDomain:types:];
}

id objc_msgSend_initWithEnvironmentName_namedDelegatePort_queue_(void *a1, const char *a2, ...)
{
  return [a1 initWithEnvironmentName:namedDelegatePort:queue:];
}

id objc_msgSend_initWithFileDescriptor_(void *a1, const char *a2, ...)
{
  return [a1 initWithFileDescriptor:];
}

id objc_msgSend_initWithFilePresenter_(void *a1, const char *a2, ...)
{
  return [a1 initWithFilePresenter:];
}

id objc_msgSend_initWithFireDate_serviceIdentifier_target_selector_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 initWithFireDate:x0 serviceIdentifier:x1 target:x2 selector:x3 userInfo:x4];
}

id objc_msgSend_initWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 initWithFormat:];
}

id objc_msgSend_initWithHTTPUTLResponse_data_(void *a1, const char *a2, ...)
{
  return [a1 initWithHTTPUTLResponse:data];
}

id objc_msgSend_initWithHotspotDevice_startTime_requestID_(void *a1, const char *a2, ...)
{
  return [a1 initWithHotspotDevice:startTime:requestID:];
}

id objc_msgSend_initWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:];
}

id objc_msgSend_initWithIdentifier_bundleID_context_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 bundleID:x1 context:x2];
}

id objc_msgSend_initWithIdentifier_displayName_transportBundleIdentifier_contact_deviceModelIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 displayName:x1 transportBundleIdentifier:x2 contact:x3 deviceModelIdentifier:x4];
}

id objc_msgSend_initWithIdentifier_displayName_transportBundleIdentifier_contacts_formattedHandles_donatedImage_placeholder_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 displayName:x1 transportBundleIdentifier:x2 contacts:x3 formattedHandles:x4 donatedImage:x5 placeholder:x6];
}

id objc_msgSend_initWithIdentifier_initialInformation_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 initialInformation:x1];
}

id objc_msgSend_initWithIdentifier_queue_operation_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 queue:x1 operation:x2];
}

id objc_msgSend_initWithIdentifier_type_displayName_personId_personIdType_(void *a1, const char *a2, ...)
{
  return [a1 initWithIdentifier:x0 type:x1 displayName:x2 personId:x3 personIdType:x4];
}

id objc_msgSend_initWithImageTitle_(void *a1, const char *a2, ...)
{
  return [a1 initWithImageTitle:];
}

id objc_msgSend_initWithImageTitle_image_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithImageTitle:x0 image:x1 cacheLookupKey:x2];
}

id objc_msgSend_initWithImageTitle_imageData_cacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithImageTitle:x0 imageData:x1 cacheLookupKey:x2];
}

id objc_msgSend_initWithImportedFiles_openAppURL_assetIdentifiers_success_shouldOfferOpenAction_shouldCleanupItems_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "initWithImportedFiles:openAppURL:assetIdentifiers:success:shouldOfferOpenAction:shouldCleanupItems:");
}

id objc_msgSend_initWithInnerBoundary_outerBoundary_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithInnerBoundary:x0 outerBoundary:x1 error:x2];
}

id objc_msgSend_initWithInputStream_outputStream_isClient_(void *a1, const char *a2, ...)
{
  return [a1 initWithInputStream:x0 outputStream:x1 isClient:x2];
}

id objc_msgSend_initWithKeyOptions_valueOptions_capacity_(void *a1, const char *a2, ...)
{
  return [a1 initWithKeyOptions:valueOptions:capacity:];
}

id objc_msgSend_initWithKeysToFetch_(void *a1, const char *a2, ...)
{
  return [a1 initWithKeysToFetch:];
}

id objc_msgSend_initWithKind_(void *a1, const char *a2, ...)
{
  return [a1 initWithKind:];
}

id objc_msgSend_initWithKind_rootNode_(void *a1, const char *a2, ...)
{
  return [a1 initWithKind:rootNode:];
}

id objc_msgSend_initWithLabel_value_(void *a1, const char *a2, ...)
{
  return [a1 initWithLabel:x0 value:x1];
}

id objc_msgSend_initWithLength_(void *a1, const char *a2, ...)
{
  return [a1 initWithLength:];
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalLTK:x0 remoteLTK:x1 sessionType:x2 originator:x3 deviceID:x4];
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_escrowSecret_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalLTK:x0 remoteLTK:x1 sessionType:x2 originator:x3 deviceID:x4 escrowSecret:x5];
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_escrowSecret_usingEscrow_externalACMContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalLTK:x0 remoteLTK:x1 sessionType:x2 originator:x3 deviceID:x4 escrowSecret:x5 usingEscrow:x6 externalACMContext:x7];
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_externalACMContext_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalLTK:x0 remoteLTK:x1 sessionType:x2 originator:x3 deviceID:x4 externalACMContext:x5];
}

id objc_msgSend_initWithLocalLTK_remoteLTK_sessionType_originator_deviceID_usingEscrow_(void *a1, const char *a2, ...)
{
  return [a1 initWithLocalLTK:x0 remoteLTK:x1 sessionType:x2 originator:x3 deviceID:x4 usingEscrow:x5];
}

id objc_msgSend_initWithMacAddressAsData_secureRangingKeyID_(void *a1, const char *a2, ...)
{
  return [a1 initWithMacAddressAsData:x0 secureRangingKeyID:x1];
}

id objc_msgSend_initWithMachServiceName_(void *a1, const char *a2, ...)
{
  return [a1 initWithMachServiceName:];
}

id objc_msgSend_initWithName_devicePresencePreset_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:devicePresencePreset:];
}

id objc_msgSend_initWithName_identifier_advertisement_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:identifier:advertisement:];
}

id objc_msgSend_initWithName_password_channel_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:password:channel:];
}

id objc_msgSend_initWithName_type_domain_path_timeout_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:x0 type:x1 domain:x2 path:x3 timeout:x4];
}

id objc_msgSend_initWithNode_(void *a1, const char *a2, ...)
{
  return [a1 initWithNode:];
}

id objc_msgSend_initWithNode_protocol_flags_kind_(void *a1, const char *a2, ...)
{
  return [a1 initWithNode:x0 protocol:x1 flags:x2 kind:x3];
}

id objc_msgSend_initWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 initWithObjects:];
}

id objc_msgSend_initWithOpaqueRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 initWithOpaqueRepresentation:];
}

id objc_msgSend_initWithOptions_path_(void *a1, const char *a2, ...)
{
  return [a1 initWithOptions:x0 path:x1];
}

id objc_msgSend_initWithOrder_result_conditions_(void *a1, const char *a2, ...)
{
  return [a1 initWithOrder:x0 result:x1 conditions:x2];
}

id objc_msgSend_initWithPairingID_pairingStorePath_deviceName_(void *a1, const char *a2, ...)
{
  return [a1 initWithPairingID:x0 pairingStorePath:x1 deviceName:x2];
}

id objc_msgSend_initWithPeer_distanceMeters_initiator_shouldUnlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithPeer:x0 distanceMeters:x1 initiator:x2 shouldUnlock:x3];
}

id objc_msgSend_initWithPerson_handleValidationBlock_(void *a1, const char *a2, ...)
{
  return [a1 initWithPerson:x0 handleValidationBlock:x1];
}

id objc_msgSend_initWithPerson_items_forDiscovery_(void *a1, const char *a2, ...)
{
  return [a1 initWithPerson:x0 items:x1 forDiscovery:x2];
}

id objc_msgSend_initWithPerson_items_sandboxExtensions_(void *a1, const char *a2, ...)
{
  return [a1 initWithPerson:x0 items:x1 sandboxExtensions:x2];
}

id objc_msgSend_initWithPerspectiveData_perspectiveDataSize_CGImageData_(void *a1, const char *a2, ...)
{
  return [a1 initWithPerspectiveData:x0 perspectiveDataSize:x1 CGImageData:x2];
}

id objc_msgSend_initWithPlatformImage_(void *a1, const char *a2, ...)
{
  return [a1 initWithPlatformImage:];
}

id objc_msgSend_initWithPoliciesChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithPoliciesChangedHandler:];
}

id objc_msgSend_initWithPolicyChangeHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithPolicyChangeHandler:];
}

id objc_msgSend_initWithPort_identity_(void *a1, const char *a2, ...)
{
  return [a1 initWithPort:identity:];
}

id objc_msgSend_initWithPowerSource_(void *a1, const char *a2, ...)
{
  return [a1 initWithPowerSource:];
}

id objc_msgSend_initWithPriority_(void *a1, const char *a2, ...)
{
  return [a1 initWithPriority:];
}

id objc_msgSend_initWithProductID_(void *a1, const char *a2, ...)
{
  return [a1 initWithProductID:];
}

id objc_msgSend_initWithProtobufData_type_isResponse_(void *a1, const char *a2, ...)
{
  return [a1 initWithProtobufData:x0 type:x1 isResponse:x2];
}

id objc_msgSend_initWithProxySection_(void *a1, const char *a2, ...)
{
  return [a1 initWithProxySection:];
}

id objc_msgSend_initWithQueryResultHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithQueryResultHandler:];
}

id objc_msgSend_initWithQueue_(void *a1, const char *a2, ...)
{
  return [a1 initWithQueue:];
}

id objc_msgSend_initWithQueue_xrRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithQueue:x0 xrRenderingMode:x1];
}

id objc_msgSend_initWithRSSI_identifier_model_channel_machContinuousTimeSeconds_(void *a1, const char *a2, ...)
{
  return [a1 initWithRSSI:x0 identifier:x1 model:x2 channel:x3 machContinuousTimeSeconds:x4];
}

id objc_msgSend_initWithRTIPayload_(void *a1, const char *a2, ...)
{
  return [a1 initWithRTIPayload:];
}

id objc_msgSend_initWithReadStream_writeStream_(void *a1, const char *a2, ...)
{
  return [a1 initWithReadStream:x0 writeStream:x1];
}

id objc_msgSend_initWithRealName_displayName_formattedHandles_contactIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithRealName:x0 displayName:x1 formattedHandles:x2 contactIdentifier:x3];
}

id objc_msgSend_initWithRequest_wiFiManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequest:wiFiManager:];
}

id objc_msgSend_initWithRequestMessage_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequestMessage:];
}

id objc_msgSend_initWithRequestTypes_(void *a1, const char *a2, ...)
{
  return [a1 initWithRequestTypes:];
}

id objc_msgSend_initWithSecurityScopedResources_(void *a1, const char *a2, ...)
{
  return [a1 initWithSecurityScopedResources:];
}

id objc_msgSend_initWithSenderMetadata_(void *a1, const char *a2, ...)
{
  return [a1 initWithSenderMetadata:];
}

id objc_msgSend_initWithServer_xpcConnection_(void *a1, const char *a2, ...)
{
  return [a1 initWithServer:xpcConnection:];
}

id objc_msgSend_initWithService_(void *a1, const char *a2, ...)
{
  return [a1 initWithService:];
}

id objc_msgSend_initWithServiceName_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceName:];
}

id objc_msgSend_initWithServiceName_viewControllerClassName_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceName:viewControllerClassName:];
}

id objc_msgSend_initWithServiceType_(void *a1, const char *a2, ...)
{
  return [a1 initWithServiceType:];
}

id objc_msgSend_initWithSessionID_context_asynchronous_queue_timeout_(void *a1, const char *a2, ...)
{
  return [a1 initWithSessionID:x0 context:x1 asynchronous:x2 queue:x3 timeout:x4];
}

id objc_msgSend_initWithSessionID_queue_(void *a1, const char *a2, ...)
{
  return [a1 initWithSessionID:x0 queue:x1];
}

id objc_msgSend_initWithSessionID_xpcConnection_instantShareSheet_remoteShareSheet_xrRenderingMode_(void *a1, const char *a2, ...)
{
  return [a1 initWithSessionID:x0 xpcConnection:x1 instantShareSheet:x2 remoteShareSheet:x3 xrRenderingMode:x4];
}

id objc_msgSend_initWithSessionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithSessionIdentifier:];
}

id objc_msgSend_initWithSize_scale_(void *a1, const char *a2, ...)
{
  return [a1 initWithSize:x0 scale:x1];
}

id objc_msgSend_initWithSlotIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 initWithSlotIdentifier:];
}

id objc_msgSend_initWithSlotIdentifier_slotTextHeight_(void *a1, const char *a2, ...)
{
  return [a1 initWithSlotIdentifier:x0 slotTextHeight:x1];
}

id objc_msgSend_initWithState_progress_proxyIdentifier_displayName_status_(void *a1, const char *a2, ...)
{
  return [a1 initWithState:x0 progress:x1 proxyIdentifier:x2 displayName:x3 status:x4];
}

id objc_msgSend_initWithStreamHandler_(void *a1, const char *a2, ...)
{
  return [a1 initWithStreamHandler:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_initWithString_previewImage_subject_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:x0 previewImage:x1 subject:x2];
}

id objc_msgSend_initWithStyle_(void *a1, const char *a2, ...)
{
  return [a1 initWithStyle:];
}

id objc_msgSend_initWithSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuggestion:];
}

id objc_msgSend_initWithSuiteName_(void *a1, const char *a2, ...)
{
  return [a1 initWithSuiteName:];
}

id objc_msgSend_initWithText_(void *a1, const char *a2, ...)
{
  return [a1 initWithText:];
}

id objc_msgSend_initWithTransfer_(void *a1, const char *a2, ...)
{
  return [a1 initWithTransfer:];
}

id objc_msgSend_initWithTransferIdentifier_actionIdentifier_title_singleItemTitle_type_(void *a1, const char *a2, ...)
{
  return [a1 initWithTransferIdentifier:x0 actionIdentifier:x1 title:x2 singleItemTitle:x3 type:x4];
}

id objc_msgSend_initWithTransport_magnetTransport_keyManager_(void *a1, const char *a2, ...)
{
  return [a1 initWithTransport:v3 magnetTransport:v4 keyManager:v5];
}

id objc_msgSend_initWithType_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:];
}

id objc_msgSend_initWithType_appleID_info_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:appleID:info:];
}

id objc_msgSend_initWithType_proxies_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:proxies:];
}

id objc_msgSend_initWithType_subtype_isFile_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:subtype:isFile:];
}

id objc_msgSend_initWithType_suggestion_transportBundleID_(void *a1, const char *a2, ...)
{
  return [a1 initWithType:suggestion:transportBundleID:];
}

id objc_msgSend_initWithURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:];
}

id objc_msgSend_initWithURL_error_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:x0 error:x1];
}

id objc_msgSend_initWithURL_gsToken_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:gsToken:];
}

id objc_msgSend_initWithURL_previewImage_subject_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:previewImage:subject:];
}

id objc_msgSend_initWithURL_resolvingAgainstBaseURL_(void *a1, const char *a2, ...)
{
  return [a1 initWithURL:x0 resolvingAgainstBaseURL:x1];
}

id objc_msgSend_initWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 initWithUTF8String:];
}

id objc_msgSend_initWithUUIDBytes_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDBytes:];
}

id objc_msgSend_initWithUUIDString_(void *a1, const char *a2, ...)
{
  return [a1 initWithUUIDString:];
}

id objc_msgSend_initWithUnderlyingUserDefaults_activityDefaultsKey_(void *a1, const char *a2, ...)
{
  return [a1 initWithUnderlyingUserDefaults:activityDefaultsKey:];
}

id objc_msgSend_initWithUniqueIdentifier_name_(void *a1, const char *a2, ...)
{
  return [a1 initWithUniqueIdentifier:x0 name:x1];
}

id objc_msgSend_initWithUnlockEnabled_remotePasscodeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 initWithUnlockEnabled:remotePasscodeEnabled:];
}

id objc_msgSend_initWithUserDefaults_activityCategory_(void *a1, const char *a2, ...)
{
  return [a1 initWithUserDefaults:v1 activityCategory:v2];
}

id objc_msgSend_initWithWorkgroup_(void *a1, const char *a2, ...)
{
  return [a1 initWithWorkgroup:];
}

id objc_msgSend_initWithXPCConnection_(void *a1, const char *a2, ...)
{
  return [a1 initWithXPCConnection:];
}

id objc_msgSend_initialBatchSize(void *a1, const char *a2, ...)
{
  return _[a1 initialBatchSize];
}

id objc_msgSend_initialPhotosAssetDetails(void *a1, const char *a2, ...)
{
  return _[a1 initialPhotosAssetDetails];
}

id objc_msgSend_initialize(void *a1, const char *a2, ...)
{
  return _[a1 initialize];
}

id objc_msgSend_initializeAttemptState(void *a1, const char *a2, ...)
{
  return _[a1 initializeAttemptState];
}

id objc_msgSend_initializeCache(void *a1, const char *a2, ...)
{
  return _[a1 initializeCache];
}

id objc_msgSend_initializeCaptureBlock(void *a1, const char *a2, ...)
{
  return _[a1 initializeCaptureBlock];
}

id objc_msgSend_initializeMetrics(void *a1, const char *a2, ...)
{
  return _[a1 initializeMetrics];
}

id objc_msgSend_initializePSSuggesterCacheWithMaxSuggestionCount_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "initializePSSuggesterCacheWithMaxSuggestionCount:");
}

id objc_msgSend_initializeRemotePeer(void *a1, const char *a2, ...)
{
  return _[a1 initializeRemotePeer];
}

id objc_msgSend_initializeStateCaptureBlock(void *a1, const char *a2, ...)
{
  return _[a1 initializeStateCaptureBlock];
}

id objc_msgSend_initiateRemoteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 initiateRemoteUnlock];
}

id objc_msgSend_initiateStashBagCreationWithManifest_(void *a1, const char *a2, ...)
{
  return [a1 initiateStashBagCreationWithManifest:];
}

id objc_msgSend_insertObject_atIndex_(void *a1, const char *a2, ...)
{
  return [a1 insertObject:atIndex:];
}

id objc_msgSend_insideMediumBubble(void *a1, const char *a2, ...)
{
  return _[a1 insideMediumBubble];
}

id objc_msgSend_insideSmallBubble(void *a1, const char *a2, ...)
{
  return _[a1 insideSmallBubble];
}

id objc_msgSend_installAirPlayPreferencesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAirPlayPreferencesMonitor];
}

id objc_msgSend_installAirplaneModeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAirplaneModeMonitor];
}

id objc_msgSend_installAppleIDAccountInfoMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAppleIDAccountInfoMonitor];
}

id objc_msgSend_installAppleIDUsernameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installAppleIDUsernameMonitor];
}

id objc_msgSend_installBacklightMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBacklightMonitor];
}

id objc_msgSend_installBacklightServicesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBacklightServicesMonitor];
}

id objc_msgSend_installBluetoothMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBluetoothMonitor];
}

id objc_msgSend_installBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installBonjourNameMonitor];
}

id objc_msgSend_installCarPlayStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installCarPlayStatusMonitor];
}

id objc_msgSend_installClamshellStateChangeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installClamshellStateChangeMonitor];
}

id objc_msgSend_installContactsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installContactsMonitor];
}

id objc_msgSend_installCoreTelephonyMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installCoreTelephonyMonitor];
}

id objc_msgSend_installD2DEncryptionMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installD2DEncryptionMonitor];
}

id objc_msgSend_installDisplayConfigurationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installDisplayConfigurationMonitor];
}

id objc_msgSend_installDisplaySleepMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installDisplaySleepMonitor];
}

id objc_msgSend_installDynamicStoreCallBack(void *a1, const char *a2, ...)
{
  return _[a1 installDynamicStoreCallBack];
}

id objc_msgSend_installFinderSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installFinderSidebarPrefsMonitor];
}

id objc_msgSend_installKeyBagUnlockMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installKeyBagUnlockMonitor];
}

id objc_msgSend_installLocaleChangeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installLocaleChangeMonitor];
}

id objc_msgSend_installLowPowerModeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installLowPowerModeMonitor];
}

id objc_msgSend_installMISMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installMISMonitor];
}

id objc_msgSend_installManagedConfigurationMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installManagedConfigurationMonitor];
}

id objc_msgSend_installMirroringMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installMirroringMonitor];
}

id objc_msgSend_installSMBPreferencesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSMBPreferencesMonitor];
}

id objc_msgSend_installSSIDCacheMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSSIDCacheMonitor];
}

id objc_msgSend_installSleepNotification(void *a1, const char *a2, ...)
{
  return _[a1 installSleepNotification];
}

id objc_msgSend_installSleepStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSleepStateMonitor];
}

id objc_msgSend_installSleepWakeCallBack(void *a1, const char *a2, ...)
{
  return _[a1 installSleepWakeCallBack];
}

id objc_msgSend_installSmartCoverMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSmartCoverMonitor];
}

id objc_msgSend_installSmartCoverStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSmartCoverStatusMonitor];
}

id objc_msgSend_installSpringBoardStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSpringBoardStateMonitor];
}

id objc_msgSend_installSystemStateInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 installSystemStateInterfaces];
}

id objc_msgSend_installSystemUIMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installSystemUIMonitor];
}

id objc_msgSend_installUILockStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installUILockStatusMonitor];
}

id objc_msgSend_installUltraWideBandStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installUltraWideBandStateMonitor];
}

id objc_msgSend_installUserPictureMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installUserPictureMonitor];
}

id objc_msgSend_installVolumesMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installVolumesMonitor];
}

id objc_msgSend_installWiFiPasswordSharingMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWiFiPasswordSharingMonitor];
}

id objc_msgSend_installWifiInterfaceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWifiInterfaceMonitor];
}

id objc_msgSend_installWirelessCarPlayMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWirelessCarPlayMonitor];
}

id objc_msgSend_installWirelessMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWirelessMonitor];
}

id objc_msgSend_installWristStateMonitor(void *a1, const char *a2, ...)
{
  return _[a1 installWristStateMonitor];
}

id objc_msgSend_instantMessageAddresses(void *a1, const char *a2, ...)
{
  return _[a1 instantMessageAddresses];
}

id objc_msgSend_instantShareSheet(void *a1, const char *a2, ...)
{
  return _[a1 instantShareSheet];
}

id objc_msgSend_intValue(void *a1, const char *a2, ...)
{
  return _[a1 intValue];
}

id objc_msgSend_integerForKey_(void *a1, const char *a2, ...)
{
  return [a1 integerForKey:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_interactionBehavior(void *a1, const char *a2, ...)
{
  return _[a1 interactionBehavior];
}

id objc_msgSend_interactionControllerWithURL_(void *a1, const char *a2, ...)
{
  return [a1 interactionControllerWithURL:];
}

id objc_msgSend_interactionDirection(void *a1, const char *a2, ...)
{
  return _[a1 interactionDirection];
}

id objc_msgSend_interactionRecorder(void *a1, const char *a2, ...)
{
  return _[a1 interactionRecorder];
}

id objc_msgSend_interfaceWithProtocol_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "interfaceWithProtocol:");
}

id objc_msgSend_intermediateCertificateExpirationDate(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificateExpirationDate];
}

id objc_msgSend_intermediateCertificatePersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificatePersistentReference];
}

id objc_msgSend_intermediateCertificateSerialNumber(void *a1, const char *a2, ...)
{
  return _[a1 intermediateCertificateSerialNumber];
}

id objc_msgSend_internetLocationFile_(void *a1, const char *a2, ...)
{
  return [a1 internetLocationFile:];
}

id objc_msgSend_internetSharingEnabled(void *a1, const char *a2, ...)
{
  return _[a1 internetSharingEnabled];
}

id objc_msgSend_intersectOrderedSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectOrderedSet:];
}

id objc_msgSend_intersectsSet_(void *a1, const char *a2, ...)
{
  return [a1 intersectsSet:];
}

id objc_msgSend_invalidate(void *a1, const char *a2, ...)
{
  return _[a1 invalidate];
}

id objc_msgSend_invalidateAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAssertionTimer];
}

id objc_msgSend_invalidateAttempt(void *a1, const char *a2, ...)
{
  return _[a1 invalidateAttempt];
}

id objc_msgSend_invalidateCalled(void *a1, const char *a2, ...)
{
  return _[a1 invalidateCalled];
}

id objc_msgSend_invalidateConfirmationTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateConfirmationTimer];
}

id objc_msgSend_invalidateDelayedStartTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateDelayedStartTimer];
}

id objc_msgSend_invalidateEnableTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateEnableTimer];
}

id objc_msgSend_invalidateExistingSessionsForBLEDevice_incomingSessionID_(void *a1, const char *a2, ...)
{
  return [a1 invalidateExistingSessionsForBLEDevice:incomingSessionID:];
}

id objc_msgSend_invalidateGoodbyeTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateGoodbyeTimer];
}

id objc_msgSend_invalidateLongTermKeyTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateLongTermKeyTimer];
}

id objc_msgSend_invalidateMotionTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateMotionTimer];
}

id objc_msgSend_invalidateNetworkTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateNetworkTimer];
}

id objc_msgSend_invalidateOnQueue(void *a1, const char *a2, ...)
{
  return _[a1 invalidateOnQueue];
}

id objc_msgSend_invalidateOpenTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateOpenTimer];
}

id objc_msgSend_invalidateResponseTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateResponseTimer];
}

id objc_msgSend_invalidateScanAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanAssertionTimer];
}

id objc_msgSend_invalidateScanResetTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanResetTimer];
}

id objc_msgSend_invalidateScanTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanTimer];
}

id objc_msgSend_invalidateScanner(void *a1, const char *a2, ...)
{
  return _[a1 invalidateScanner];
}

id objc_msgSend_invalidateShareSheetContext(void *a1, const char *a2, ...)
{
  return _[a1 invalidateShareSheetContext];
}

id objc_msgSend_invalidateStashTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateStashTimer];
}

id objc_msgSend_invalidateStateTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateStateTimer];
}

id objc_msgSend_invalidateSuggestedDeviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSuggestedDeviceTimer];
}

id objc_msgSend_invalidateSuggestionService(void *a1, const char *a2, ...)
{
  return _[a1 invalidateSuggestionService];
}

id objc_msgSend_invalidateTimerIfReady(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTimerIfReady];
}

id objc_msgSend_invalidateTimerWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 invalidateTimerWithIdentifier:];
}

id objc_msgSend_invalidateTimers(void *a1, const char *a2, ...)
{
  return _[a1 invalidateTimers];
}

id objc_msgSend_invalidateTransaction_context_(void *a1, const char *a2, ...)
{
  return [a1 invalidateTransaction:context:];
}

id objc_msgSend_invalidateUnlockTimer(void *a1, const char *a2, ...)
{
  return _[a1 invalidateUnlockTimer];
}

id objc_msgSend_invalidateWithFlags_(void *a1, const char *a2, ...)
{
  return [a1 invalidateWithFlags:];
}

id objc_msgSend_invalidated(void *a1, const char *a2, ...)
{
  return _[a1 invalidated];
}

id objc_msgSend_invalidationHandler(void *a1, const char *a2, ...)
{
  return _[a1 invalidationHandler];
}

id objc_msgSend_invoke(void *a1, const char *a2, ...)
{
  return _[a1 invoke];
}

id objc_msgSend_ipProtocol(void *a1, const char *a2, ...)
{
  return _[a1 ipProtocol];
}

id objc_msgSend_ipVersion(void *a1, const char *a2, ...)
{
  return _[a1 ipVersion];
}

id objc_msgSend_is2GHz(void *a1, const char *a2, ...)
{
  return _[a1 is2GHz];
}

id objc_msgSend_isActivated(void *a1, const char *a2, ...)
{
  return _[a1 isActivated];
}

id objc_msgSend_isActive(void *a1, const char *a2, ...)
{
  return _[a1 isActive];
}

id objc_msgSend_isActiveDeviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 isActiveDeviceNearby];
}

id objc_msgSend_isActivityContinuationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isActivityContinuationAllowed];
}

id objc_msgSend_isAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 isAdvertising];
}

id objc_msgSend_isAirDropAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropAllowed];
}

id objc_msgSend_isAirDropAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropAvailable];
}

id objc_msgSend_isAirDropEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropEnabled];
}

id objc_msgSend_isAirDropReady(void *a1, const char *a2, ...)
{
  return _[a1 isAirDropReady];
}

id objc_msgSend_isAirPods(void *a1, const char *a2, ...)
{
  return _[a1 isAirPods];
}

id objc_msgSend_isAirPods_(void *a1, const char *a2, ...)
{
  return [a1 isAirPods:];
}

id objc_msgSend_isAllDay(void *a1, const char *a2, ...)
{
  return _[a1 isAllDay];
}

id objc_msgSend_isAppManaged_(void *a1, const char *a2, ...)
{
  return [a1 isAppManaged:];
}

id objc_msgSend_isApplicationAvailableToOpenURL_error_(void *a1, const char *a2, ...)
{
  return [a1 isApplicationAvailableToOpenURL:error];
}

id objc_msgSend_isApplicationAvailableToOpenURL_includePrivateURLSchemes_error_(void *a1, const char *a2, ...)
{
  return [a1 isApplicationAvailableToOpenURL:includePrivateURLSchemes:error:];
}

id objc_msgSend_isAsynchronous(void *a1, const char *a2, ...)
{
  return _[a1 isAsynchronous];
}

id objc_msgSend_isAuthenticatingForSiri(void *a1, const char *a2, ...)
{
  return _[a1 isAuthenticatingForSiri];
}

id objc_msgSend_isAutoUnlockAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isAutoUnlockAllowed];
}

id objc_msgSend_isAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isAvailable];
}

id objc_msgSend_isBackgroundCheckReadyForFeature_forDevice_(void *a1, const char *a2, ...)
{
  return [a1 isBackgroundCheckReadyForFeature:forDevice:];
}

id objc_msgSend_isBeingUsedForSiri(void *a1, const char *a2, ...)
{
  return _[a1 isBeingUsedForSiri];
}

id objc_msgSend_isBluetoothEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isBluetoothEnabled];
}

id objc_msgSend_isBuiltinDerived(void *a1, const char *a2, ...)
{
  return _[a1 isBuiltinDerived];
}

id objc_msgSend_isCacheReady(void *a1, const char *a2, ...)
{
  return _[a1 isCacheReady];
}

id objc_msgSend_isCancelled(void *a1, const char *a2, ...)
{
  return _[a1 isCancelled];
}

id objc_msgSend_isCarKitSessionWireless_(void *a1, const char *a2, ...)
{
  return [a1 isCarKitSessionWireless:];
}

id objc_msgSend_isClarityBoardEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isClarityBoardEnabled];
}

id objc_msgSend_isClassroom(void *a1, const char *a2, ...)
{
  return _[a1 isClassroom];
}

id objc_msgSend_isClassroomEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isClassroomEnabled];
}

id objc_msgSend_isCollaborative(void *a1, const char *a2, ...)
{
  return _[a1 isCollaborative];
}

id objc_msgSend_isCompressor(void *a1, const char *a2, ...)
{
  return _[a1 isCompressor];
}

id objc_msgSend_isConnected(void *a1, const char *a2, ...)
{
  return _[a1 isConnected];
}

id objc_msgSend_isContentManaged(void *a1, const char *a2, ...)
{
  return _[a1 isContentManaged];
}

id objc_msgSend_isCourse(void *a1, const char *a2, ...)
{
  return _[a1 isCourse];
}

id objc_msgSend_isCurrentlyPicked(void *a1, const char *a2, ...)
{
  return _[a1 isCurrentlyPicked];
}

id objc_msgSend_isDecompressor(void *a1, const char *a2, ...)
{
  return _[a1 isDecompressor];
}

id objc_msgSend_isDefaultPairedDevice(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDevice];
}

id objc_msgSend_isDefaultPairedDeviceNearby(void *a1, const char *a2, ...)
{
  return _[a1 isDefaultPairedDeviceNearby];
}

id objc_msgSend_isDeviceValidRIServer_(void *a1, const char *a2, ...)
{
  return [a1 isDeviceValidRIServer:];
}

id objc_msgSend_isDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isDisabled];
}

id objc_msgSend_isDisplayOff(void *a1, const char *a2, ...)
{
  return _[a1 isDisplayOff];
}

id objc_msgSend_isEmail_(void *a1, const char *a2, ...)
{
  return [a1 isEmail:];
}

id objc_msgSend_isEntitled(void *a1, const char *a2, ...)
{
  return _[a1 isEntitled];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToData_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToData:];
}

id objc_msgSend_isEqualToDate_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDate:];
}

id objc_msgSend_isEqualToDictionary_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToDictionary:];
}

id objc_msgSend_isEqualToIgnoringCase_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToIgnoringCase:];
}

id objc_msgSend_isEqualToNumber_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToNumber:];
}

id objc_msgSend_isEqualToPeer_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToPeer:];
}

id objc_msgSend_isEqualToSet_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToSet:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFaceIDEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isFaceIDEnabled];
}

id objc_msgSend_isFavorite(void *a1, const char *a2, ...)
{
  return _[a1 isFavorite];
}

id objc_msgSend_isFile(void *a1, const char *a2, ...)
{
  return _[a1 isFile];
}

id objc_msgSend_isFileURL(void *a1, const char *a2, ...)
{
  return _[a1 isFileURL];
}

id objc_msgSend_isGroup(void *a1, const char *a2, ...)
{
  return _[a1 isGroup];
}

id objc_msgSend_isHeySiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isHeySiriEnabled];
}

id objc_msgSend_isHomePodFamily(void *a1, const char *a2, ...)
{
  return _[a1 isHomePodFamily];
}

id objc_msgSend_isIncomingCommunicationBlockedForEmailAddress_(void *a1, const char *a2, ...)
{
  return [a1 isIncomingCommunicationBlockedForEmailAddress:];
}

id objc_msgSend_isIncomingCommunicationBlockedForPhoneNumber_(void *a1, const char *a2, ...)
{
  return [a1 isIncomingCommunicationBlockedForPhoneNumber:];
}

id objc_msgSend_isInstalled(void *a1, const char *a2, ...)
{
  return _[a1 isInstalled];
}

id objc_msgSend_isInstructor(void *a1, const char *a2, ...)
{
  return _[a1 isInstructor];
}

id objc_msgSend_isIntentsBased(void *a1, const char *a2, ...)
{
  return _[a1 isIntentsBased];
}

id objc_msgSend_isInvalid(void *a1, const char *a2, ...)
{
  return _[a1 isInvalid];
}

id objc_msgSend_isJustFiles(void *a1, const char *a2, ...)
{
  return _[a1 isJustFiles];
}

id objc_msgSend_isJustLinks(void *a1, const char *a2, ...)
{
  return _[a1 isJustLinks];
}

id objc_msgSend_isKeyAvailable_(void *a1, const char *a2, ...)
{
  return [a1 isKeyAvailable:];
}

id objc_msgSend_isKeyBagLocked(void *a1, const char *a2, ...)
{
  return _[a1 isKeyBagLocked];
}

id objc_msgSend_isKnown(void *a1, const char *a2, ...)
{
  return _[a1 isKnown];
}

id objc_msgSend_isKnownIdentity(void *a1, const char *a2, ...)
{
  return _[a1 isKnownIdentity];
}

id objc_msgSend_isLoading(void *a1, const char *a2, ...)
{
  return _[a1 isLoading];
}

id objc_msgSend_isLocallyGenerated(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyGenerated];
}

id objc_msgSend_isLocallyPaired(void *a1, const char *a2, ...)
{
  return _[a1 isLocallyPaired];
}

id objc_msgSend_isMagicHead(void *a1, const char *a2, ...)
{
  return _[a1 isMagicHead];
}

id objc_msgSend_isManateeAvailable_(void *a1, const char *a2, ...)
{
  return [a1 isManateeAvailable:];
}

id objc_msgSend_isMe(void *a1, const char *a2, ...)
{
  return _[a1 isMe];
}

id objc_msgSend_isMemberOfClass_(void *a1, const char *a2, ...)
{
  return [a1 isMemberOfClass:];
}

id objc_msgSend_isMirroringActive(void *a1, const char *a2, ...)
{
  return _[a1 isMirroringActive];
}

id objc_msgSend_isMobileActivationErrorNetworkError_(void *a1, const char *a2, ...)
{
  return [a1 isMobileActivationErrorNetworkError:];
}

id objc_msgSend_isModernProgress(void *a1, const char *a2, ...)
{
  return _[a1 isModernProgress];
}

id objc_msgSend_isMounted(void *a1, const char *a2, ...)
{
  return _[a1 isMounted];
}

id objc_msgSend_isMultiUser(void *a1, const char *a2, ...)
{
  return _[a1 isMultiUser];
}

id objc_msgSend_isMulticastAdvertisementsDisabled(void *a1, const char *a2, ...)
{
  return _[a1 isMulticastAdvertisementsDisabled];
}

id objc_msgSend_isNearby(void *a1, const char *a2, ...)
{
  return _[a1 isNearby];
}

id objc_msgSend_isNetworkHostAP_(void *a1, const char *a2, ...)
{
  return [a1 isNetworkHostAP:];
}

id objc_msgSend_isP2PAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isP2PAllowed];
}

id objc_msgSend_isPassLibraryAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isPassLibraryAvailable];
}

id objc_msgSend_isPasswordProximityAutoFillRequestingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPasswordProximityAutoFillRequestingAllowed];
}

id objc_msgSend_isPersonalHotspot(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalHotspot];
}

id objc_msgSend_isPersonalHotspotModificationAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isPersonalHotspotModificationAllowed];
}

id objc_msgSend_isPlaceholder(void *a1, const char *a2, ...)
{
  return _[a1 isPlaceholder];
}

id objc_msgSend_isProxCardEnrollmentSupportedForDevice_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardEnrollmentSupportedForDevice:];
}

id objc_msgSend_isProxCardShowedForFeature_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardShowedForFeature:];
}

id objc_msgSend_isProxCardSupportedByProductID_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardSupportedByProductID:];
}

id objc_msgSend_isProxCardSupportedForFeature_(void *a1, const char *a2, ...)
{
  return [a1 isProxCardSupportedForFeature:];
}

id objc_msgSend_isProximitySetupToNewDeviceAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isProximitySetupToNewDeviceAllowed];
}

id objc_msgSend_isRangingInitiator(void *a1, const char *a2, ...)
{
  return _[a1 isRangingInitiator];
}

id objc_msgSend_isReady(void *a1, const char *a2, ...)
{
  return _[a1 isReady];
}

id objc_msgSend_isRestricted(void *a1, const char *a2, ...)
{
  return _[a1 isRestricted];
}

id objc_msgSend_isScreenOnForBacklightState_(void *a1, const char *a2, ...)
{
  return [a1 isScreenOnForBacklightState:];
}

id objc_msgSend_isSharePlayAvailable(void *a1, const char *a2, ...)
{
  return _[a1 isSharePlayAvailable];
}

id objc_msgSend_isSiriEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isSiriEnabled];
}

id objc_msgSend_isSmartCoverClosed_(void *a1, const char *a2, ...)
{
  return [a1 isSmartCoverClosed:];
}

id objc_msgSend_isStale(void *a1, const char *a2, ...)
{
  return _[a1 isStale];
}

id objc_msgSend_isStatusUnknown(void *a1, const char *a2, ...)
{
  return _[a1 isStatusUnknown];
}

id objc_msgSend_isSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 isSuggestion];
}

id objc_msgSend_isTapToRadar(void *a1, const char *a2, ...)
{
  return _[a1 isTapToRadar];
}

id objc_msgSend_isTetheringInUse(void *a1, const char *a2, ...)
{
  return _[a1 isTetheringInUse];
}

id objc_msgSend_isTetheringSupported(void *a1, const char *a2, ...)
{
  return _[a1 isTetheringSupported];
}

id objc_msgSend_isUnknown(void *a1, const char *a2, ...)
{
  return _[a1 isUnknown];
}

id objc_msgSend_isUnsupportedApplicationLabel(void *a1, const char *a2, ...)
{
  return _[a1 isUnsupportedApplicationLabel];
}

id objc_msgSend_isUserDefaultsActivity(void *a1, const char *a2, ...)
{
  return _[a1 isUserDefaultsActivity];
}

id objc_msgSend_isValid(void *a1, const char *a2, ...)
{
  return _[a1 isValid];
}

id objc_msgSend_isValidKey(void *a1, const char *a2, ...)
{
  return _[a1 isValidKey];
}

id objc_msgSend_isVerifiableIdentity(void *a1, const char *a2, ...)
{
  return _[a1 isVerifiableIdentity];
}

id objc_msgSend_isWaitingToCompleteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 isWaitingToCompleteUnlock];
}

id objc_msgSend_isWarmingUp(void *a1, const char *a2, ...)
{
  return _[a1 isWarmingUp];
}

id objc_msgSend_isWiFiPasswordSharingAllowed(void *a1, const char *a2, ...)
{
  return _[a1 isWiFiPasswordSharingAllowed];
}

id objc_msgSend_isWifiCritical(void *a1, const char *a2, ...)
{
  return _[a1 isWifiCritical];
}

id objc_msgSend_isWifiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 isWifiEnabled];
}

id objc_msgSend_isWifiPersonalHotspot(void *a1, const char *a2, ...)
{
  return _[a1 isWifiPersonalHotspot];
}

id objc_msgSend_isiWorkURL(void *a1, const char *a2, ...)
{
  return _[a1 isiWorkURL];
}

id objc_msgSend_issuerID(void *a1, const char *a2, ...)
{
  return _[a1 issuerID];
}

id objc_msgSend_itemSourcesForNonFileURLDictionaries_fakeItemDuration_fakeItemBytes_fakeBundleID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "itemSourcesForNonFileURLDictionaries:fakeItemDuration:fakeItemBytes:fakeBundleID:");
}

id objc_msgSend_itemTypesForTransfer_(void *a1, const char *a2, ...)
{
  return [a1 itemTypesForTransfer:];
}

id objc_msgSend_items(void *a1, const char *a2, ...)
{
  return _[a1 items];
}

id objc_msgSend_itemsDescription(void *a1, const char *a2, ...)
{
  return _[a1 itemsDescription];
}

id objc_msgSend_itemsDescriptionAdvanced(void *a1, const char *a2, ...)
{
  return _[a1 itemsDescriptionAdvanced];
}

id objc_msgSend_kStatusContactsHashesChanged(void *a1, const char *a2, ...)
{
  return _[a1 kStatusContactsHashesChanged];
}

id objc_msgSend_kStatusMeCardChanged(void *a1, const char *a2, ...)
{
  return _[a1 kStatusMeCardChanged];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_keyAuthSessions(void *a1, const char *a2, ...)
{
  return _[a1 keyAuthSessions];
}

id objc_msgSend_keyClassForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 keyClassForDeviceID:];
}

id objc_msgSend_keyData(void *a1, const char *a2, ...)
{
  return _[a1 keyData];
}

id objc_msgSend_keyDerivedFromRelevantTraitCollectionProperties(void *a1, const char *a2, ...)
{
  return _[a1 keyDerivedFromRelevantTraitCollectionProperties];
}

id objc_msgSend_keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 keyDerivedFromRelevantTraitCollectionPropertiesWithOppositeUserInterfaceStyle];
}

id objc_msgSend_keyDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 keyDeviceLocked];
}

id objc_msgSend_keyDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 keyDeviceLocked:];
}

id objc_msgSend_keyDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 keyDeviceModel];
}

id objc_msgSend_keyExchangeDate(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeDate];
}

id objc_msgSend_keyExchangeDuration(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeDuration];
}

id objc_msgSend_keyExchangeInterval(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeInterval];
}

id objc_msgSend_keyExchangeResponseReceived(void *a1, const char *a2, ...)
{
  return _[a1 keyExchangeResponseReceived];
}

id objc_msgSend_keyFailed(void *a1, const char *a2, ...)
{
  return _[a1 keyFailed];
}

id objc_msgSend_keyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 keyIdentifier];
}

id objc_msgSend_keyManager(void *a1, const char *a2, ...)
{
  return _[a1 keyManager];
}

id objc_msgSend_keyPairingIDForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 keyPairingIDForDeviceID:];
}

id objc_msgSend_keyPairingSessions(void *a1, const char *a2, ...)
{
  return _[a1 keyPairingSessions];
}

id objc_msgSend_keyRegistrationSessionsByDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 keyRegistrationSessionsByDeviceID];
}

id objc_msgSend_keyRequestExchange(void *a1, const char *a2, ...)
{
  return _[a1 keyRequestExchange];
}

id objc_msgSend_keybagAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 keybagAssertionTimer];
}

id objc_msgSend_keychainDataForQuery_(void *a1, const char *a2, ...)
{
  return [a1 keychainDataForQuery:];
}

id objc_msgSend_keychainDevices_(void *a1, const char *a2, ...)
{
  return [a1 keychainDevices:];
}

id objc_msgSend_keynoteLiveLinks(void *a1, const char *a2, ...)
{
  return _[a1 keynoteLiveLinks];
}

id objc_msgSend_keysWithAKSTokens(void *a1, const char *a2, ...)
{
  return _[a1 keysWithAKSTokens];
}

id objc_msgSend_kind(void *a1, const char *a2, ...)
{
  return _[a1 kind];
}

id objc_msgSend_knowledgeStore(void *a1, const char *a2, ...)
{
  return _[a1 knowledgeStore];
}

id objc_msgSend_kvoObservingKeys(void *a1, const char *a2, ...)
{
  return _[a1 kvoObservingKeys];
}

id objc_msgSend_labelColor(void *a1, const char *a2, ...)
{
  return _[a1 labelColor];
}

id objc_msgSend_labelColorWithHostConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 labelColorWithHostConfiguration:];
}

id objc_msgSend_labelForSlotID_(void *a1, const char *a2, ...)
{
  return [a1 labelForSlotID:];
}

id objc_msgSend_labelSlotID(void *a1, const char *a2, ...)
{
  return _[a1 labelSlotID];
}

id objc_msgSend_lastActivityAdvertisement(void *a1, const char *a2, ...)
{
  return _[a1 lastActivityAdvertisement];
}

id objc_msgSend_lastAdvertisementOptions(void *a1, const char *a2, ...)
{
  return _[a1 lastAdvertisementOptions];
}

id objc_msgSend_lastAdvertisementPayload(void *a1, const char *a2, ...)
{
  return _[a1 lastAdvertisementPayload];
}

id objc_msgSend_lastCounter(void *a1, const char *a2, ...)
{
  return _[a1 lastCounter];
}

id objc_msgSend_lastDarkWakeDate(void *a1, const char *a2, ...)
{
  return _[a1 lastDarkWakeDate];
}

id objc_msgSend_lastDisconnectError(void *a1, const char *a2, ...)
{
  return _[a1 lastDisconnectError];
}

id objc_msgSend_lastLocalUnlockDate(void *a1, const char *a2, ...)
{
  return _[a1 lastLocalUnlockDate];
}

id objc_msgSend_lastLockedByRelock(void *a1, const char *a2, ...)
{
  return _[a1 lastLockedByRelock];
}

id objc_msgSend_lastName(void *a1, const char *a2, ...)
{
  return _[a1 lastName];
}

id objc_msgSend_lastObject(void *a1, const char *a2, ...)
{
  return _[a1 lastObject];
}

id objc_msgSend_lastPathComponent(void *a1, const char *a2, ...)
{
  return _[a1 lastPathComponent];
}

id objc_msgSend_lastProxyState(void *a1, const char *a2, ...)
{
  return _[a1 lastProxyState];
}

id objc_msgSend_lastSeenWatchDate(void *a1, const char *a2, ...)
{
  return _[a1 lastSeenWatchDate];
}

id objc_msgSend_lastSleepType(void *a1, const char *a2, ...)
{
  return _[a1 lastSleepType];
}

id objc_msgSend_lastSuccessfulDevice(void *a1, const char *a2, ...)
{
  return _[a1 lastSuccessfulDevice];
}

id objc_msgSend_lastTransferEvent(void *a1, const char *a2, ...)
{
  return _[a1 lastTransferEvent];
}

id objc_msgSend_lastUnlockDate(void *a1, const char *a2, ...)
{
  return _[a1 lastUnlockDate];
}

id objc_msgSend_lastUnlockedByPairedUnlock(void *a1, const char *a2, ...)
{
  return _[a1 lastUnlockedByPairedUnlock];
}

id objc_msgSend_lastUnlockedByWatch(void *a1, const char *a2, ...)
{
  return _[a1 lastUnlockedByWatch];
}

id objc_msgSend_lastUpdateTicks(void *a1, const char *a2, ...)
{
  return _[a1 lastUpdateTicks];
}

id objc_msgSend_lastUsedCounter(void *a1, const char *a2, ...)
{
  return _[a1 lastUsedCounter];
}

id objc_msgSend_laterDate_(void *a1, const char *a2, ...)
{
  return [a1 laterDate:];
}

id objc_msgSend_launchFilesToDefaultFolder(void *a1, const char *a2, ...)
{
  return _[a1 launchFilesToDefaultFolder];
}

id objc_msgSend_launchFilesToDefaultFolderWithURLs_defaultFolder_openURLs_completion_(void *a1, const char *a2, ...)
{
  return [a1 launchFilesToDefaultFolderWithURLs:x0 defaultFolder:x1 openURLs:x2 completion:x3];
}

id objc_msgSend_launchMoveToAppShareSheetForFiles_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "launchMoveToAppShareSheetForFiles:");
}

id objc_msgSend_launchRemoteAlertWithUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 launchRemoteAlertWithUserInfo:];
}

id objc_msgSend_layoutDirection(void *a1, const char *a2, ...)
{
  return _[a1 layoutDirection];
}

id objc_msgSend_lePipeDevices(void *a1, const char *a2, ...)
{
  return _[a1 lePipeDevices];
}

id objc_msgSend_legacyEscrowData(void *a1, const char *a2, ...)
{
  return _[a1 legacyEscrowData];
}

id objc_msgSend_legacyLocalLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 legacyLocalLongTermKey];
}

id objc_msgSend_legacyRemoteLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 legacyRemoteLongTermKey];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_linkClient(void *a1, const char *a2, ...)
{
  return _[a1 linkClient];
}

id objc_msgSend_linkedBeforeYukon(void *a1, const char *a2, ...)
{
  return _[a1 linkedBeforeYukon];
}

id objc_msgSend_linkedToCurrentUser(void *a1, const char *a2, ...)
{
  return _[a1 linkedToCurrentUser];
}

id objc_msgSend_listEligibleDevicesFor_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 listEligibleDevicesFor:completionHandler:];
}

id objc_msgSend_listener_didReceiveError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "listener:didReceiveError:");
}

id objc_msgSend_listener_didReceiveNewRequest_(void *a1, const char *a2, ...)
{
  return [a1 listener:didReceiveNewRequest:];
}

id objc_msgSend_listener_informationDidChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "listener:informationDidChange:");
}

id objc_msgSend_livePhotoConversionRequest(void *a1, const char *a2, ...)
{
  return _[a1 livePhotoConversionRequest];
}

id objc_msgSend_load(void *a1, const char *a2, ...)
{
  return _[a1 load];
}

id objc_msgSend_loadAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 loadAirDrop];
}

id objc_msgSend_loadAllPersistedTransfers(void *a1, const char *a2, ...)
{
  return _[a1 loadAllPersistedTransfers];
}

id objc_msgSend_loadBatchImageCacheData_cacheKey_mapCacheHitImage_runProxy_type_(void *a1, const char *a2, ...)
{
  return [a1 loadBatchImageCacheData:x0 cacheKey:x1 mapCacheHitImage:x2 runProxy:x3 type:x4];
}

id objc_msgSend_loadBonjour(void *a1, const char *a2, ...)
{
  return _[a1 loadBonjour];
}

id objc_msgSend_loadClassroom(void *a1, const char *a2, ...)
{
  return _[a1 loadClassroom];
}

id objc_msgSend_loadCloudPairRetries(void *a1, const char *a2, ...)
{
  return _[a1 loadCloudPairRetries];
}

id objc_msgSend_loadCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 loadCompanionIDs];
}

id objc_msgSend_loadConnected(void *a1, const char *a2, ...)
{
  return _[a1 loadConnected];
}

id objc_msgSend_loadDataImageFromImage_scaledSize_error_(void *a1, const char *a2, ...)
{
  return [a1 loadDataImageFromImage:x0 scaledSize:x1 error:x2];
}

id objc_msgSend_loadDecryptionKeyDataRepresentationForDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "loadDecryptionKeyDataRepresentationForDeviceIdentifier:");
}

id objc_msgSend_loadDomains(void *a1, const char *a2, ...)
{
  return _[a1 loadDomains];
}

id objc_msgSend_loadEncryptionKeyDataRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 loadEncryptionKeyDataRepresentation];
}

id objc_msgSend_loadHandler(void *a1, const char *a2, ...)
{
  return _[a1 loadHandler];
}

id objc_msgSend_loadIcon(void *a1, const char *a2, ...)
{
  return _[a1 loadIcon];
}

id objc_msgSend_loadIconHandler(void *a1, const char *a2, ...)
{
  return _[a1 loadIconHandler];
}

id objc_msgSend_loadItemForTypeIdentifier_options_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 loadItemForTypeIdentifier:x0 options:x1 completionHandler:x2];
}

id objc_msgSend_loadKeyDataRepresentationWithBaseDict_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "loadKeyDataRepresentationWithBaseDict:");
}

id objc_msgSend_loadLegacyWatchIDToCompanionIDMapping(void *a1, const char *a2, ...)
{
  return _[a1 loadLegacyWatchIDToCompanionIDMapping];
}

id objc_msgSend_loadLocalAttestedLTKIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalAttestedLTKIfNecessary];
}

id objc_msgSend_loadLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalLTK];
}

id objc_msgSend_loadLocalUniqueIDIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadLocalUniqueIDIfNeeded];
}

id objc_msgSend_loadLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 loadLongTermKeys];
}

id objc_msgSend_loadManaged(void *a1, const char *a2, ...)
{
  return _[a1 loadManaged];
}

id objc_msgSend_loadODisk(void *a1, const char *a2, ...)
{
  return _[a1 loadODisk];
}

id objc_msgSend_loadPresentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 loadPresentedBluetoothError];
}

id objc_msgSend_loadPresentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 loadPresentedWiFiError];
}

id objc_msgSend_loadPreviousSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 loadPreviousSessionIDs];
}

id objc_msgSend_loadProxySection_(void *a1, const char *a2, ...)
{
  return [a1 loadProxySection:];
}

id objc_msgSend_loadRapport(void *a1, const char *a2, ...)
{
  return _[a1 loadRapport];
}

id objc_msgSend_loadRemoteLTKsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 loadRemoteLTKsIfNeeded];
}

id objc_msgSend_loadSharePoints(void *a1, const char *a2, ...)
{
  return _[a1 loadSharePoints];
}

id objc_msgSend_loadSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 loadSidebarPrefsMonitor];
}

id objc_msgSend_loadSuggestedPeers(void *a1, const char *a2, ...)
{
  return _[a1 loadSuggestedPeers];
}

id objc_msgSend_loadTimeLimit(void *a1, const char *a2, ...)
{
  return _[a1 loadTimeLimit];
}

id objc_msgSend_loadWatchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 loadWatchIDsToPairingRecords];
}

id objc_msgSend_loadWindows(void *a1, const char *a2, ...)
{
  return _[a1 loadWindows];
}

id objc_msgSend_loadWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 loadWorkgroups];
}

id objc_msgSend_loadWrappingKeyData(void *a1, const char *a2, ...)
{
  return _[a1 loadWrappingKeyData];
}

id objc_msgSend_loadedIndexes(void *a1, const char *a2, ...)
{
  return _[a1 loadedIndexes];
}

id objc_msgSend_loaders(void *a1, const char *a2, ...)
{
  return _[a1 loaders];
}

id objc_msgSend_localAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 localAWDLInfo];
}

id objc_msgSend_localAttestedLTK(void *a1, const char *a2, ...)
{
  return _[a1 localAttestedLTK];
}

id objc_msgSend_localDeviceController(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceController];
}

id objc_msgSend_localDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceID];
}

id objc_msgSend_localDeviceIDSRegistered(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceIDSRegistered];
}

id objc_msgSend_localDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceLocked];
}

id objc_msgSend_localDeviceNeedsArming(void *a1, const char *a2, ...)
{
  return _[a1 localDeviceNeedsArming];
}

id objc_msgSend_localID(void *a1, const char *a2, ...)
{
  return _[a1 localID];
}

id objc_msgSend_localIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 localIdentifier];
}

id objc_msgSend_localLTK(void *a1, const char *a2, ...)
{
  return _[a1 localLTK];
}

id objc_msgSend_localLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 localLongTermKey];
}

id objc_msgSend_localPowerSource(void *a1, const char *a2, ...)
{
  return _[a1 localPowerSource];
}

id objc_msgSend_localTimeZone(void *a1, const char *a2, ...)
{
  return _[a1 localTimeZone];
}

id objc_msgSend_localizedDescription(void *a1, const char *a2, ...)
{
  return _[a1 localizedDescription];
}

id objc_msgSend_localizedName(void *a1, const char *a2, ...)
{
  return _[a1 localizedName];
}

id objc_msgSend_localizedStringForKey_value_table_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringForKey:value:table:];
}

id objc_msgSend_localizedStringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 localizedStringWithFormat:];
}

id objc_msgSend_lockAuthSessions(void *a1, const char *a2, ...)
{
  return _[a1 lockAuthSessions];
}

id objc_msgSend_lockDevice(void *a1, const char *a2, ...)
{
  return _[a1 lockDevice];
}

id objc_msgSend_lockKeyBagIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 lockKeyBagIfNeeded];
}

id objc_msgSend_lockPairingSessions(void *a1, const char *a2, ...)
{
  return _[a1 lockPairingSessions];
}

id objc_msgSend_lockRegistrationSessionsByDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 lockRegistrationSessionsByDeviceID];
}

id objc_msgSend_lockSessionToCurrentProcess(void *a1, const char *a2, ...)
{
  return _[a1 lockSessionToCurrentProcess];
}

id objc_msgSend_lockState(void *a1, const char *a2, ...)
{
  return _[a1 lockState];
}

id objc_msgSend_lockStateChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 lockStateChangedDate];
}

id objc_msgSend_lockWithBioLockOut(void *a1, const char *a2, ...)
{
  return _[a1 lockWithBioLockOut];
}

id objc_msgSend_lockedKeyBag(void *a1, const char *a2, ...)
{
  return _[a1 lockedKeyBag];
}

id objc_msgSend_locksWithAKSTokens(void *a1, const char *a2, ...)
{
  return _[a1 locksWithAKSTokens];
}

id objc_msgSend_logActivityType_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 logActivityType:sessionID:];
}

id objc_msgSend_logAirDropDiscoveryInfoForNode_(void *a1, const char *a2, ...)
{
  return [a1 logAirDropDiscoveryInfoForNode:];
}

id objc_msgSend_logAirDropSessionInfo(void *a1, const char *a2, ...)
{
  return _[a1 logAirDropSessionInfo];
}

id objc_msgSend_logAirDropTransactionForClientServer_beginEnd_count_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "logAirDropTransactionForClientServer:beginEnd:count:");
}

id objc_msgSend_logAutoUnlockStart(void *a1, const char *a2, ...)
{
  return _[a1 logAutoUnlockStart];
}

id objc_msgSend_logBluetoothIDCache(void *a1, const char *a2, ...)
{
  return _[a1 logBluetoothIDCache];
}

id objc_msgSend_logCategory(void *a1, const char *a2, ...)
{
  return _[a1 logCategory];
}

id objc_msgSend_logClientReceived(void *a1, const char *a2, ...)
{
  return _[a1 logClientReceived];
}

id objc_msgSend_logClientSent(void *a1, const char *a2, ...)
{
  return _[a1 logClientSent];
}

id objc_msgSend_logDashboardHandoffRequestViaTransportLinkType_type_success_rtt_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "logDashboardHandoffRequestViaTransportLinkType:type:success:rtt:");
}

id objc_msgSend_logDevices(void *a1, const char *a2, ...)
{
  return _[a1 logDevices];
}

id objc_msgSend_logDiscoveryWithHash_rssi_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "logDiscoveryWithHash:rssi:");
}

id objc_msgSend_logInterfaceUsedForSending_(void *a1, const char *a2, ...)
{
  return [a1 logInterfaceUsedForSending:];
}

id objc_msgSend_logMetrics(void *a1, const char *a2, ...)
{
  return _[a1 logMetrics];
}

id objc_msgSend_logMetricsWithSessionTime_(void *a1, const char *a2, ...)
{
  return [a1 logMetricsWithSessionTime:];
}

id objc_msgSend_logProtoBufReceived_(void *a1, const char *a2, ...)
{
  return [a1 logProtoBufReceived:];
}

id objc_msgSend_logProtoBufSend_(void *a1, const char *a2, ...)
{
  return [a1 logProtoBufSend:];
}

id objc_msgSend_logReceiverBundleID_forAppProxy_andURL_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "logReceiverBundleID:forAppProxy:andURL:");
}

id objc_msgSend_logReceiverBundleID_forURL_(void *a1, const char *a2, ...)
{
  return [a1 logReceiverBundleID:forURL:];
}

id objc_msgSend_logResults(void *a1, const char *a2, ...)
{
  return _[a1 logResults];
}

id objc_msgSend_logSenderIsBlocked(void *a1, const char *a2, ...)
{
  return _[a1 logSenderIsBlocked];
}

id objc_msgSend_logTransfer(void *a1, const char *a2, ...)
{
  return _[a1 logTransfer];
}

id objc_msgSend_logType(void *a1, const char *a2, ...)
{
  return _[a1 logType];
}

id objc_msgSend_logWiFiPowerState(void *a1, const char *a2, ...)
{
  return _[a1 logWiFiPowerState];
}

id objc_msgSend_loginID(void *a1, const char *a2, ...)
{
  return _[a1 loginID];
}

id objc_msgSend_longLongValue(void *a1, const char *a2, ...)
{
  return _[a1 longLongValue];
}

id objc_msgSend_longTermKey(void *a1, const char *a2, ...)
{
  return _[a1 longTermKey];
}

id objc_msgSend_longTermKeyForDevice_modern_(void *a1, const char *a2, ...)
{
  return [a1 longTermKeyForDevice:modern:];
}

id objc_msgSend_longTermKeyStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 longTermKeyStorageFilePath];
}

id objc_msgSend_longValue(void *a1, const char *a2, ...)
{
  return _[a1 longValue];
}

id objc_msgSend_lookUpValidAccountWithBroadwayActivationCode_testInfo_(void *a1, const char *a2, ...)
{
  return [a1 lookUpValidAccountWithBroadwayActivationCode:testInfo:];
}

id objc_msgSend_lookupPhysicalCardWithBroadwayActivationCode_testInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "lookupPhysicalCardWithBroadwayActivationCode:testInfo:");
}

id objc_msgSend_lostAllDevices(void *a1, const char *a2, ...)
{
  return _[a1 lostAllDevices];
}

id objc_msgSend_lostDeviceWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 lostDeviceWithDevice:];
}

id objc_msgSend_lostModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lostModeEnabled];
}

id objc_msgSend_lowPowerModeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 lowPowerModeEnabled];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_lteConnectionShows4G(void *a1, const char *a2, ...)
{
  return _[a1 lteConnectionShows4G];
}

id objc_msgSend_ltk(void *a1, const char *a2, ...)
{
  return _[a1 ltk];
}

id objc_msgSend_ltkExistsForKeyDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "ltkExistsForKeyDevice:");
}

id objc_msgSend_ltkExistsForKeyDevice_updateLTKs_(void *a1, const char *a2, ...)
{
  return [a1 ltkExistsForKeyDevice:updateLTKs:];
}

id objc_msgSend_ltkFileExists(void *a1, const char *a2, ...)
{
  return _[a1 ltkFileExists];
}

id objc_msgSend_ltkHash(void *a1, const char *a2, ...)
{
  return _[a1 ltkHash];
}

id objc_msgSend_ltkHashForLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 ltkHashForLocalLTK];
}

id objc_msgSend_ltkHashMatches(void *a1, const char *a2, ...)
{
  return _[a1 ltkHashMatches];
}

id objc_msgSend_ltkID(void *a1, const char *a2, ...)
{
  return _[a1 ltkID];
}

id objc_msgSend_ltkInfoForDeviceID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "ltkInfoForDeviceID:");
}

id objc_msgSend_ltkInfoForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "ltkInfoForDeviceID:modern:");
}

id objc_msgSend_ltkInfoForDeviceID_modern_attested_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "ltkInfoForDeviceID:modern:attested:");
}

id objc_msgSend_ltkKeyClassWithAttestation_(void *a1, const char *a2, ...)
{
  return [a1 ltkKeyClassWithAttestation:];
}

id objc_msgSend_ltkSyncStatusForDeviceID_hash_modern_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "ltkSyncStatusForDeviceID:hash:modern:");
}

id objc_msgSend_ltkSyncing(void *a1, const char *a2, ...)
{
  return _[a1 ltkSyncing];
}

id objc_msgSend_ltkTimer(void *a1, const char *a2, ...)
{
  return _[a1 ltkTimer];
}

id objc_msgSend_ltkTimerRetryCount(void *a1, const char *a2, ...)
{
  return _[a1 ltkTimerRetryCount];
}

id objc_msgSend_ltksExist(void *a1, const char *a2, ...)
{
  return _[a1 ltksExist];
}

id objc_msgSend_ltksForRequest_(void *a1, const char *a2, ...)
{
  return [a1 ltksForRequest:];
}

id objc_msgSend_macAddress(void *a1, const char *a2, ...)
{
  return _[a1 macAddress];
}

id objc_msgSend_macAddressData(void *a1, const char *a2, ...)
{
  return _[a1 macAddressData];
}

id objc_msgSend_machServiceName(void *a1, const char *a2, ...)
{
  return _[a1 machServiceName];
}

id objc_msgSend_magnetLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 magnetLinkTimer];
}

id objc_msgSend_magnetTransport(void *a1, const char *a2, ...)
{
  return _[a1 magnetTransport];
}

id objc_msgSend_mainBundle(void *a1, const char *a2, ...)
{
  return _[a1 mainBundle];
}

id objc_msgSend_mainLabelSlotHeight(void *a1, const char *a2, ...)
{
  return _[a1 mainLabelSlotHeight];
}

id objc_msgSend_mainLabelSlotID(void *a1, const char *a2, ...)
{
  return _[a1 mainLabelSlotID];
}

id objc_msgSend_mainQueue(void *a1, const char *a2, ...)
{
  return _[a1 mainQueue];
}

id objc_msgSend_mainRunLoop(void *a1, const char *a2, ...)
{
  return _[a1 mainRunLoop];
}

id objc_msgSend_mainScreen(void *a1, const char *a2, ...)
{
  return _[a1 mainScreen];
}

id objc_msgSend_mainThread(void *a1, const char *a2, ...)
{
  return _[a1 mainThread];
}

id objc_msgSend_makeActivatedConnection(void *a1, const char *a2, ...)
{
  return _[a1 makeActivatedConnection];
}

id objc_msgSend_makeDestinationDirectory(void *a1, const char *a2, ...)
{
  return _[a1 makeDestinationDirectory];
}

id objc_msgSend_makeDestinationDirectoryWithIdentifier_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "makeDestinationDirectoryWithIdentifier:error:");
}

id objc_msgSend_manager_connectedToService_withFileHandle_acceptHandler_(void *a1, const char *a2, ...)
{
  return [a1 manager:connectedToService:withFileHandle:acceptHandler:];
}

id objc_msgSend_managerID(void *a1, const char *a2, ...)
{
  return _[a1 managerID];
}

id objc_msgSend_manateeAvailable(void *a1, const char *a2, ...)
{
  return _[a1 manateeAvailable];
}

id objc_msgSend_manateeState(void *a1, const char *a2, ...)
{
  return _[a1 manateeState];
}

id objc_msgSend_mappedContactIdentifierForContactIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 mappedContactIdentifierForContactIdentifier:];
}

id objc_msgSend_mapsLinks(void *a1, const char *a2, ...)
{
  return _[a1 mapsLinks];
}

id objc_msgSend_masterChannel(void *a1, const char *a2, ...)
{
  return _[a1 masterChannel];
}

id objc_msgSend_matchedValue(void *a1, const char *a2, ...)
{
  return _[a1 matchedValue];
}

id objc_msgSend_maxCapacity(void *a1, const char *a2, ...)
{
  return _[a1 maxCapacity];
}

id objc_msgSend_maxConnectionsReached(void *a1, const char *a2, ...)
{
  return _[a1 maxConnectionsReached];
}

id objc_msgSend_maxPeople(void *a1, const char *a2, ...)
{
  return _[a1 maxPeople];
}

id objc_msgSend_maxTransferState(void *a1, const char *a2, ...)
{
  return _[a1 maxTransferState];
}

id objc_msgSend_maximumRangeOfUnit_(void *a1, const char *a2, ...)
{
  return [a1 maximumRangeOfUnit:];
}

id objc_msgSend_mayOpenFromManagedToUnmanaged(void *a1, const char *a2, ...)
{
  return _[a1 mayOpenFromManagedToUnmanaged];
}

id objc_msgSend_mayShareToAirDropForOriginatingAppBundleID_originatingAccountIsManaged_(void *a1, const char *a2, ...)
{
  return [a1 mayShareToAirDropForOriginatingAppBundleID:originatingAppBundleID originatingAccountIsManaged:originatingAccountIsManaged];
}

id objc_msgSend_meCard(void *a1, const char *a2, ...)
{
  return _[a1 meCard];
}

id objc_msgSend_meDeviceFMFDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceFMFDeviceID];
}

id objc_msgSend_meDeviceIDSDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIDSDeviceID];
}

id objc_msgSend_meDeviceIsMe(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceIsMe];
}

id objc_msgSend_meDeviceName(void *a1, const char *a2, ...)
{
  return _[a1 meDeviceName];
}

id objc_msgSend_medBubbleDelayed(void *a1, const char *a2, ...)
{
  return _[a1 medBubbleDelayed];
}

id objc_msgSend_mediaAccessControlSetting(void *a1, const char *a2, ...)
{
  return _[a1 mediaAccessControlSetting];
}

id objc_msgSend_mediaRouteID(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteID];
}

id objc_msgSend_mediaRouteIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaRouteIdentifier];
}

id objc_msgSend_mediaSystemIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 mediaSystemIdentifier];
}

id objc_msgSend_mediaTransferInfoFromInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "mediaTransferInfoFromInfo:");
}

id objc_msgSend_mediaType(void *a1, const char *a2, ...)
{
  return _[a1 mediaType];
}

id objc_msgSend_mediumBubbleVersion(void *a1, const char *a2, ...)
{
  return _[a1 mediumBubbleVersion];
}

id objc_msgSend_messageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 messageIdentifier];
}

id objc_msgSend_messageTimeout(void *a1, const char *a2, ...)
{
  return _[a1 messageTimeout];
}

id objc_msgSend_messageTimeoutFromServer(void *a1, const char *a2, ...)
{
  return _[a1 messageTimeoutFromServer];
}

id objc_msgSend_messageType(void *a1, const char *a2, ...)
{
  return _[a1 messageType];
}

id objc_msgSend_messageWithData_(void *a1, const char *a2, ...)
{
  return [a1 messageWithData:];
}

id objc_msgSend_messageWithIdentifier_didSendWithSuccess_error_(void *a1, const char *a2, ...)
{
  return [a1 messageWithIdentifier:didSendWithSuccess:error:];
}

id objc_msgSend_metaData(void *a1, const char *a2, ...)
{
  return _[a1 metaData];
}

id objc_msgSend_metaInfo(void *a1, const char *a2, ...)
{
  return _[a1 metaInfo];
}

id objc_msgSend_methodForSelector_(void *a1, const char *a2, ...)
{
  return [a1 methodForSelector:];
}

id objc_msgSend_metricDates(void *a1, const char *a2, ...)
{
  return _[a1 metricDates];
}

id objc_msgSend_metrics(void *a1, const char *a2, ...)
{
  return _[a1 metrics];
}

id objc_msgSend_migrateEscrowDataIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateEscrowDataIfNeeded];
}

id objc_msgSend_migrateLegacyCompanionIDs_(void *a1, const char *a2, ...)
{
  return [a1 migrateLegacyCompanionIDs];
}

id objc_msgSend_migrateLegacyWatchIDToCompanionIDs(void *a1, const char *a2, ...)
{
  return _[a1 migrateLegacyWatchIDToCompanionIDs];
}

id objc_msgSend_migrateOldKeysIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 migrateOldKeysIfNeeded];
}

id objc_msgSend_minPersonImageSize(void *a1, const char *a2, ...)
{
  return _[a1 minPersonImageSize];
}

id objc_msgSend_minRequiredTransferState(void *a1, const char *a2, ...)
{
  return _[a1 minRequiredTransferState];
}

id objc_msgSend_minimumVisibleShareActivities(void *a1, const char *a2, ...)
{
  return _[a1 minimumVisibleShareActivities];
}

id objc_msgSend_minusSet_(void *a1, const char *a2, ...)
{
  return [a1 minusSet:];
}

id objc_msgSend_minute(void *a1, const char *a2, ...)
{
  return _[a1 minute];
}

id objc_msgSend_misStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 misStateChanged:];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelCode(void *a1, const char *a2, ...)
{
  return _[a1 modelCode];
}

id objc_msgSend_modelCodeForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 modelCodeForIdentifier:];
}

id objc_msgSend_modelDescription(void *a1, const char *a2, ...)
{
  return _[a1 modelDescription];
}

id objc_msgSend_modelIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 modelIdentifier];
}

id objc_msgSend_modelIdentifierForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 modelIdentifierForDeviceID:];
}

id objc_msgSend_modelName(void *a1, const char *a2, ...)
{
  return _[a1 modelName];
}

id objc_msgSend_modelNameForDevice_(void *a1, const char *a2, ...)
{
  return [a1 modelNameForDevice:];
}

id objc_msgSend_modelWithProductID_(void *a1, const char *a2, ...)
{
  return [a1 modelWithProductID:];
}

id objc_msgSend_modernSyncedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return [a1 modernSyncedDictionaryForDevice:];
}

id objc_msgSend_modificationDataForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return [a1 modificationDataForDeviceID:modern:];
}

id objc_msgSend_monitorWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 monitorWithConfiguration:];
}

id objc_msgSend_monogramImageDataForContact_style_diameter_monogramsAsFlatImages_isContactImage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "monogramImageDataForContact:style:diameter:monogramsAsFlatImages:isContactImage:");
}

id objc_msgSend_monogramImageDataForContactSync_style_diameter_monogramsAsFlatImages_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "monogramImageDataForContactSync:style:diameter:monogramsAsFlatImages:replyHandler:");
}

id objc_msgSend_monogramImagesForMultipleContacts_style_diameter_monogramsAsFlatImages_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "monogramImagesForMultipleContacts:style:diameter:monogramsAsFlatImages:");
}

id objc_msgSend_monogramImagesForMultipleContactsSync_style_diameter_monogramAsFlatImages_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "monogramImagesForMultipleContactsSync:style:diameter:monogramAsFlatImages:replyHandler:");
}

id objc_msgSend_month(void *a1, const char *a2, ...)
{
  return _[a1 month];
}

id objc_msgSend_motionDetected(void *a1, const char *a2, ...)
{
  return _[a1 motionDetected];
}

id objc_msgSend_motionDetectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 motionDetectedHandler];
}

id objc_msgSend_motionDetector(void *a1, const char *a2, ...)
{
  return _[a1 motionDetector];
}

id objc_msgSend_motionManager(void *a1, const char *a2, ...)
{
  return _[a1 motionManager];
}

id objc_msgSend_motionTimer(void *a1, const char *a2, ...)
{
  return _[a1 motionTimer];
}

id objc_msgSend_mount(void *a1, const char *a2, ...)
{
  return _[a1 mount];
}

id objc_msgSend_mountPointsForServer_(void *a1, const char *a2, ...)
{
  return [a1 mountPointsForServer:];
}

id objc_msgSend_mountedVolumeURLsIncludingResourceValuesForKeys_options_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "mountedVolumeURLsIncludingResourceValuesForKeys:options:");
}

id objc_msgSend_moveFile_toDestination_(void *a1, const char *a2, ...)
{
  return [a1 moveFile:toDestination:];
}

id objc_msgSend_moveFilesToDestination(void *a1, const char *a2, ...)
{
  return _[a1 moveFilesToDestination];
}

id objc_msgSend_moveItemAtURL_toURL_error_(void *a1, const char *a2, ...)
{
  return [a1 moveItemAtURL:toURL:error:];
}

id objc_msgSend_moveToAppEnabled(void *a1, const char *a2, ...)
{
  return _[a1 moveToAppEnabled];
}

id objc_msgSend_moveToShareSheetCompletion(void *a1, const char *a2, ...)
{
  return _[a1 moveToShareSheetCompletion];
}

id objc_msgSend_multipleUsersLoggedIn(void *a1, const char *a2, ...)
{
  return _[a1 multipleUsersLoggedIn];
}

id objc_msgSend_mutableBytes(void *a1, const char *a2, ...)
{
  return _[a1 mutableBytes];
}

id objc_msgSend_mutableCopy(void *a1, const char *a2, ...)
{
  return _[a1 mutableCopy];
}

id objc_msgSend_myAccount(void *a1, const char *a2, ...)
{
  return _[a1 myAccount];
}

id objc_msgSend_myAltDSID(void *a1, const char *a2, ...)
{
  return _[a1 myAltDSID];
}

id objc_msgSend_myAppleID(void *a1, const char *a2, ...)
{
  return _[a1 myAppleID];
}

id objc_msgSend_myAppleIDCommonName(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDCommonName];
}

id objc_msgSend_myAppleIDEmailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDEmailAddresses];
}

id objc_msgSend_myAppleIDEmailHash(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDEmailHash];
}

id objc_msgSend_myAppleIDIsManaged(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDIsManaged];
}

id objc_msgSend_myAppleIDPhoneHash(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDPhoneHash];
}

id objc_msgSend_myAppleIDPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDPhoneNumbers];
}

id objc_msgSend_myAppleIDValidationRecord(void *a1, const char *a2, ...)
{
  return _[a1 myAppleIDValidationRecord];
}

id objc_msgSend_myIPAddress(void *a1, const char *a2, ...)
{
  return _[a1 myIPAddress];
}

id objc_msgSend_myMediumHashes(void *a1, const char *a2, ...)
{
  return _[a1 myMediumHashes];
}

id objc_msgSend_myShortHashesForAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 myShortHashesForAirDrop];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_nameForDevice_(void *a1, const char *a2, ...)
{
  return [a1 nameForDevice:];
}

id objc_msgSend_nanoRegistryDeviceForBluetoothIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 nanoRegistryDeviceForBluetoothIdentifier:];
}

id objc_msgSend_navBarTitle(void *a1, const char *a2, ...)
{
  return _[a1 navBarTitle];
}

id objc_msgSend_nearFieldController(void *a1, const char *a2, ...)
{
  return _[a1 nearFieldController];
}

id objc_msgSend_nearbyCountBadge(void *a1, const char *a2, ...)
{
  return _[a1 nearbyCountBadge];
}

id objc_msgSend_nearbyCountSlotID(void *a1, const char *a2, ...)
{
  return _[a1 nearbyCountSlotID];
}

id objc_msgSend_nearbyDeviceChangedDate(void *a1, const char *a2, ...)
{
  return _[a1 nearbyDeviceChangedDate];
}

id objc_msgSend_nearbyReceiverIsEligible(void *a1, const char *a2, ...)
{
  return _[a1 nearbyReceiverIsEligible];
}

id objc_msgSend_nearbyReceiverRequiresConfirmationWithContactID_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "nearbyReceiverRequiresConfirmationWithContactID:completionHandler:");
}

id objc_msgSend_nearbyServiceDevicesChanged_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "nearbyServiceDevicesChanged:");
}

id objc_msgSend_needsAWDL(void *a1, const char *a2, ...)
{
  return _[a1 needsAWDL];
}

id objc_msgSend_needsAction(void *a1, const char *a2, ...)
{
  return _[a1 needsAction];
}

id objc_msgSend_needsArming(void *a1, const char *a2, ...)
{
  return _[a1 needsArming];
}

id objc_msgSend_needsImageData(void *a1, const char *a2, ...)
{
  return _[a1 needsImageData];
}

id objc_msgSend_needsKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 needsKeyboard];
}

id objc_msgSend_needsKeyboardOnly(void *a1, const char *a2, ...)
{
  return _[a1 needsKeyboardOnly];
}

id objc_msgSend_needsNewImage(void *a1, const char *a2, ...)
{
  return _[a1 needsNewImage];
}

id objc_msgSend_needsOffWristBeforePairedUnlock(void *a1, const char *a2, ...)
{
  return _[a1 needsOffWristBeforePairedUnlock];
}

id objc_msgSend_needsRenewal(void *a1, const char *a2, ...)
{
  return _[a1 needsRenewal];
}

id objc_msgSend_needsSetup(void *a1, const char *a2, ...)
{
  return _[a1 needsSetup];
}

id objc_msgSend_needsStrictMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 needsStrictMotionCheck];
}

id objc_msgSend_needsUpdate(void *a1, const char *a2, ...)
{
  return _[a1 needsUpdate];
}

id objc_msgSend_neighborhoodNodes(void *a1, const char *a2, ...)
{
  return _[a1 neighborhoodNodes];
}

id objc_msgSend_netAgentUUID_(void *a1, const char *a2, ...)
{
  return [a1 netAgentUUID:];
}

id objc_msgSend_netRBTetheringSupported(void *a1, const char *a2, ...)
{
  return _[a1 netRBTetheringSupported];
}

id objc_msgSend_netServiceBrowser(void *a1, const char *a2, ...)
{
  return _[a1 netServiceBrowser];
}

id objc_msgSend_netbiosName(void *a1, const char *a2, ...)
{
  return _[a1 netbiosName];
}

id objc_msgSend_networkBrowser_nodesChangedForParent_protocol_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "networkBrowser:nodesChangedForParent:protocol:error:");
}

id objc_msgSend_networkBufferSpaceAvailable(void *a1, const char *a2, ...)
{
  return _[a1 networkBufferSpaceAvailable];
}

id objc_msgSend_networkEjecter_event_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "networkEjecter:event:withResults:");
}

id objc_msgSend_networkOperation_event_withResults_(void *a1, const char *a2, ...)
{
  return [a1 networkOperation:event:withResults:];
}

id objc_msgSend_networkResolver_event_withResults_(void *a1, const char *a2, ...)
{
  return [a1 networkResolver:event:withResults:];
}

id objc_msgSend_networkStatus(void *a1, const char *a2, ...)
{
  return _[a1 networkStatus];
}

id objc_msgSend_networkType(void *a1, const char *a2, ...)
{
  return _[a1 networkType];
}

id objc_msgSend_newDecryptionKeyFromDataRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 newDecryptionKeyFromDataRepresentation:];
}

id objc_msgSend_newDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 newDiscoverableMode];
}

id objc_msgSend_newEncryptionKey(void *a1, const char *a2, ...)
{
  return _[a1 newEncryptionKey];
}

id objc_msgSend_newHandleWithDefinition_configurationContext_(void *a1, const char *a2, ...)
{
  return [a1 newHandleWithDefinition:configurationContext:];
}

id objc_msgSend_newPayloadWithURL_description_previewImage_identifier_(void *a1, const char *a2, ...)
{
  return [a1 newPayloadWithURL:x0 description:x1 previewImage:x2 identifier:x3];
}

id objc_msgSend_newWithActivityConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 newWithActivityConfiguration:];
}

id objc_msgSend_nextCheckDate(void *a1, const char *a2, ...)
{
  return _[a1 nextCheckDate];
}

id objc_msgSend_nextCrossoverPersistentTimer(void *a1, const char *a2, ...)
{
  return _[a1 nextCrossoverPersistentTimer];
}

id objc_msgSend_nextDateForDayInterval_(void *a1, const char *a2, ...)
{
  return [a1 nextDateForDayInterval:];
}

id objc_msgSend_nextState(void *a1, const char *a2, ...)
{
  return _[a1 nextState];
}

id objc_msgSend_nfcTagReaderUIActivateWithEndpoint_params_completion_(void *a1, const char *a2, ...)
{
  return [a1 nfcTagReaderUIActivateWithEndpoint:x0 params:x1 completion:x2];
}

id objc_msgSend_niRangingPeer(void *a1, const char *a2, ...)
{
  return _[a1 niRangingPeer];
}

id objc_msgSend_niSession(void *a1, const char *a2, ...)
{
  return _[a1 niSession];
}

id objc_msgSend_nickname(void *a1, const char *a2, ...)
{
  return _[a1 nickname];
}

id objc_msgSend_nodeBrowser_nodesChangedForParent_protocol_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "nodeBrowser:nodesChangedForParent:protocol:error:")];
}

id objc_msgSend_nodeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 nodeIdentifier];
}

id objc_msgSend_nodeWithIdentifier_displayName_subtitle_avatarImageSlotID_transportImageSlotID_(void *a1, const char *a2, ...)
{
  return [a1 nodeWithIdentifier:x0 displayName:x1 subtitle:x2 avatarImageSlotID:x3 transportImageSlotID:x4];
}

id objc_msgSend_nodeWithIdentifier_peopleSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 nodeWithIdentifier:peopleSuggestion:];
}

id objc_msgSend_nodeWithIdentifier_suggestionNode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "nodeWithIdentifier:suggestionNode:");
}

id objc_msgSend_nodeWithSFNode_(void *a1, const char *a2, ...)
{
  return [a1 nodeWithSFNode:];
}

id objc_msgSend_nodes(void *a1, const char *a2, ...)
{
  return _[a1 nodes];
}

id objc_msgSend_nodesPotentiallyUpdated(void *a1, const char *a2, ...)
{
  return _[a1 nodesPotentiallyUpdated];
}

id objc_msgSend_nonBreakingActivityTitle_(void *a1, const char *a2, ...)
{
  return [a1 nonBreakingActivityTitle:];
}

id objc_msgSend_nonce(void *a1, const char *a2, ...)
{
  return _[a1 nonce];
}

id objc_msgSend_notification(void *a1, const char *a2, ...)
{
  return _[a1 notification];
}

id objc_msgSend_notificationBubble(void *a1, const char *a2, ...)
{
  return _[a1 notificationBubble];
}

id objc_msgSend_notificationDidDismiss_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notificationDidDismiss:reason:");
}

id objc_msgSend_notificationDurationSecs(void *a1, const char *a2, ...)
{
  return _[a1 notificationDurationSecs];
}

id objc_msgSend_notificationHaptic(void *a1, const char *a2, ...)
{
  return _[a1 notificationHaptic];
}

id objc_msgSend_notificationHomePodTypeForDevice_(void *a1, const char *a2, ...)
{
  return [a1 notificationHomePodTypeForDevice:];
}

id objc_msgSend_notificationInfo(void *a1, const char *a2, ...)
{
  return _[a1 notificationInfo];
}

id objc_msgSend_notificationModel(void *a1, const char *a2, ...)
{
  return _[a1 notificationModel];
}

id objc_msgSend_notificationTicks(void *a1, const char *a2, ...)
{
  return _[a1 notificationTicks];
}

id objc_msgSend_notificationTimer(void *a1, const char *a2, ...)
{
  return _[a1 notificationTimer];
}

id objc_msgSend_notificationType(void *a1, const char *a2, ...)
{
  return _[a1 notificationType];
}

id objc_msgSend_notificiationDidDismiss_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notificiationDidDismiss:");
}

id objc_msgSend_notified(void *a1, const char *a2, ...)
{
  return _[a1 notified];
}

id objc_msgSend_notifiedForProxy(void *a1, const char *a2, ...)
{
  return _[a1 notifiedForProxy];
}

id objc_msgSend_notifyBatteryStatus(void *a1, const char *a2, ...)
{
  return _[a1 notifyBatteryStatus];
}

id objc_msgSend_notifyBluetoothSample_(void *a1, const char *a2, ...)
{
  return [a1 notifyBluetoothSample:];
}

id objc_msgSend_notifyClient(void *a1, const char *a2, ...)
{
  return _[a1 notifyClient];
}

id objc_msgSend_notifyClient_(void *a1, const char *a2, ...)
{
  return [a1 notifyClient:];
}

id objc_msgSend_notifyClient_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyClient:withResults:");
}

id objc_msgSend_notifyClientAboutEject_(void *a1, const char *a2, ...)
{
  return [a1 notifyClientAboutEject:];
}

id objc_msgSend_notifyClientAboutResolve_(void *a1, const char *a2, ...)
{
  return [a1 notifyClientAboutResolve:];
}

id objc_msgSend_notifyClientAboutWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 notifyClientAboutWorkgroups];
}

id objc_msgSend_notifyClientForEvent_(void *a1, const char *a2, ...)
{
  return [a1 notifyClientForEvent:];
}

id objc_msgSend_notifyClientForEvent_withProperty_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyClientForEvent:withProperty:");
}

id objc_msgSend_notifyClientIfDone_(void *a1, const char *a2, ...)
{
  return [a1 notifyClientIfDone:];
}

id objc_msgSend_notifyClientOfBytesCopied_timeRemaining_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyClientOfBytesCopied:timeRemaining:")];
}

id objc_msgSend_notifyClientWithPosixError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyClientWithPosixError:");
}

id objc_msgSend_notifyDelegate(void *a1, const char *a2, ...)
{
  return _[a1 notifyDelegate];
}

id objc_msgSend_notifyDelegateWithError_(void *a1, const char *a2, ...)
{
  return [a1 notifyDelegateWithError:];
}

id objc_msgSend_notifyEnableStateWithError_(void *a1, const char *a2, ...)
{
  return [a1 notifyEnableStateWithError:];
}

id objc_msgSend_notifyForNonGenuineDevice_(void *a1, const char *a2, ...)
{
  return [a1 notifyForNonGenuineDevice:];
}

id objc_msgSend_notifyHostAPActivated(void *a1, const char *a2, ...)
{
  return _[a1 notifyHostAPActivated];
}

id objc_msgSend_notifyHostAPError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyHostAPError:");
}

id objc_msgSend_notifyObserverOfAttemptBeganWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserverOfAttemptBeganWithDevice:];
}

id objc_msgSend_notifyObserverOfEnabledDevice_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserverOfEnabledDevice:];
}

id objc_msgSend_notifyObserverOfFailedToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyObserverOfFailedToEnableDevice:error:");
}

id objc_msgSend_notifyObserverOfKeyDeviceLockWithDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyObserverOfKeyDeviceLockWithDevice:");
}

id objc_msgSend_notifyObservers_(void *a1, const char *a2, ...)
{
  return [a1 notifyObservers:];
}

id objc_msgSend_notifyObserversOfRemovedTransfer_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserversOfRemovedTransfer:];
}

id objc_msgSend_notifyObserversOfUnlockCompletionWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 notifyObserversOfUnlockCompletionWithDevice:];
}

id objc_msgSend_notifyObserversOfUnlockFailureWithResults_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyObserversOfUnlockFailureWithResults:error:");
}

id objc_msgSend_notifyObserversOfUpdatedTransfer_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyObserversOfUpdatedTransfer:");
}

id objc_msgSend_notifyProgress_force_(void *a1, const char *a2, ...)
{
  return [a1 notifyProgress:force:];
}

id objc_msgSend_notifySession_activitySelected_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifySession:activitySelected:");
}

id objc_msgSend_notifySession_favoritesProxies_suggestionProxies_activityCategory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifySession:favoritesProxies:suggestionProxies:activityCategory:");
}

id objc_msgSend_notifySession_personSelectedWithActivityType_(void *a1, const char *a2, ...)
{
  return [a1 notifySession:personSelectedWithActivityType:];
}

id objc_msgSend_notifySession_shortcutSelectedWithBundleID_singleUseToken_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifySession:shortcutSelectedWithBundleID:singleUseToken:");
}

id objc_msgSend_notifySession_withAirDropTransferChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifySession:withAirDropTransferChange:");
}

id objc_msgSend_notifyStashStateWithError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyStashStateWithError:");
}

id objc_msgSend_notifyStreamRequestWithError_(void *a1, const char *a2, ...)
{
  return [a1 notifyStreamRequestWithError:];
}

id objc_msgSend_notifyUnlockStateWithState_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "notifyUnlockStateWithState:error:");
}

id objc_msgSend_now(void *a1, const char *a2, ...)
{
  return _[a1 now];
}

id objc_msgSend_nq_awdlNetworkStarted(void *a1, const char *a2, ...)
{
  return [a1 nq_awdlNetworkStarted];
}

id objc_msgSend_nq_handleWiFiRequestInvalidated(void *a1, const char *a2, ...)
{
  return [a1 nq_handleWiFiRequestInvalidated];
}

id objc_msgSend_nq_handleWiFiRequestStartedWithStartAWDLHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "nq_handleWiFiRequestStartedWithStartAWDLHandler:");
}

id objc_msgSend_nsuuid(void *a1, const char *a2, ...)
{
  return _[a1 nsuuid];
}

id objc_msgSend_null(void *a1, const char *a2, ...)
{
  return _[a1 null];
}

id objc_msgSend_numberOfPushes(void *a1, const char *a2, ...)
{
  return _[a1 numberOfPushes];
}

id objc_msgSend_numberOfSteps(void *a1, const char *a2, ...)
{
  return _[a1 numberOfSteps];
}

id objc_msgSend_numberOfVisibleActionActivities(void *a1, const char *a2, ...)
{
  return _[a1 numberOfVisibleActionActivities];
}

id objc_msgSend_numberOfVisibleSharingActivities(void *a1, const char *a2, ...)
{
  return _[a1 numberOfVisibleSharingActivities];
}

id objc_msgSend_numberWithBool_(void *a1, const char *a2, ...)
{
  return [a1 numberWithBool:];
}

id objc_msgSend_numberWithDouble_(void *a1, const char *a2, ...)
{
  return [a1 numberWithDouble:];
}

id objc_msgSend_numberWithFloat_(void *a1, const char *a2, ...)
{
  return [a1 numberWithFloat:];
}

id objc_msgSend_numberWithInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInt:];
}

id objc_msgSend_numberWithInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithInteger:];
}

id objc_msgSend_numberWithLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithLong:];
}

id objc_msgSend_numberWithLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithLongLong:];
}

id objc_msgSend_numberWithUnsignedChar_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedChar:];
}

id objc_msgSend_numberWithUnsignedInt_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInt:];
}

id objc_msgSend_numberWithUnsignedInteger_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedInteger:];
}

id objc_msgSend_numberWithUnsignedLongLong_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedLongLong:];
}

id objc_msgSend_numberWithUnsignedShort_(void *a1, const char *a2, ...)
{
  return [a1 numberWithUnsignedShort:];
}

id objc_msgSend_obfuscatedMediumHashDataForStrings_(void *a1, const char *a2, ...)
{
  return [a1 obfuscatedMediumHashDataForStrings:];
}

id objc_msgSend_object(void *a1, const char *a2, ...)
{
  return _[a1 object];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_objectForKey_(void *a1, const char *a2, ...)
{
  return [a1 objectForKey:];
}

id objc_msgSend_objectForKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectForKeyedSubscript:];
}

id objc_msgSend_objectKey(void *a1, const char *a2, ...)
{
  return _[a1 objectKey];
}

id objc_msgSend_objectsAtIndexes_(void *a1, const char *a2, ...)
{
  return [a1 objectsAtIndexes:];
}

id objc_msgSend_observerTable(void *a1, const char *a2, ...)
{
  return _[a1 observerTable];
}

id objc_msgSend_observers(void *a1, const char *a2, ...)
{
  return _[a1 observers];
}

id objc_msgSend_odiskMountPointsForServer_(void *a1, const char *a2, ...)
{
  return [a1 odiskMountPointsForServer:];
}

id objc_msgSend_odiskNodes(void *a1, const char *a2, ...)
{
  return _[a1 odiskNodes];
}

id objc_msgSend_odiskNodesForDomain_(void *a1, const char *a2, ...)
{
  return [a1 odiskNodesForDomain:];
}

id objc_msgSend_onWrist(void *a1, const char *a2, ...)
{
  return _[a1 onWrist];
}

id objc_msgSend_oneHundredContinue_(void *a1, const char *a2, ...)
{
  return [a1 oneHundredContinue:];
}

id objc_msgSend_onlyRanging(void *a1, const char *a2, ...)
{
  return _[a1 onlyRanging];
}

id objc_msgSend_onqueue_autoUnlockEligibleDevices_deviceType_(void *a1, const char *a2, ...)
{
  return [a1 onqueue_autoUnlockEligibleDevices:deviceType:];
}

id objc_msgSend_onqueue_bluetoothDeviceIdentifiers(void *a1, const char *a2, ...)
{
  return [a1 onqueue_bluetoothDeviceIdentifiers];
}

id objc_msgSend_onqueue_bluetoothIDForIDSID_(void *a1, const char *a2, ...)
{
  return [a1 onqueue_bluetoothIDForIDSID:];
}

id objc_msgSend_onqueue_cleanUpFailedNetworkBringUp(void *a1, const char *a2, ...)
{
  return [a1 onqueue_cleanUpFailedNetworkBringUp];
}

id objc_msgSend_onqueue_connectionInvalidated_(void *a1, const char *a2, ...)
{
  return [a1 onqueue_connectionInvalidated:];
}

id objc_msgSend_onqueue_devicesWithLTKs(void *a1, const char *a2, ...)
{
  return [a1 onqueue_devicesWithLTKs];
}

id objc_msgSend_onqueue_enabledAutoUnlockDevicesUsingCache_(void *a1, const char *a2, ...)
{
  return [a1 onqueue_enabledAutoUnlockDevicesUsingCache:];
}

id objc_msgSend_onqueue_handleSwitchCondtionsChanged(void *a1, const char *a2, ...)
{
  return [a1 onqueue_handleSwitchCondtionsChanged];
}

id objc_msgSend_onqueue_startTetheringWithCompletionHandler_modelID_productVersion_canConnectOn5GHz_(void *a1, const char *a2, ...)
{
  return [a1 onqueue_startTetheringWithCompletionHandler:modelID:productVersion:canConnectOn5GHz:];
}

id objc_msgSend_onqueue_updateHostAPNetwork(void *a1, const char *a2, ...)
{
  return [a1 onqueue_updateHostAPNetwork];
}

id objc_msgSend_onqueue_updateTetheringSupported(void *a1, const char *a2, ...)
{
  return [a1 onqueue_updateTetheringSupported];
}

id objc_msgSend_opMode(void *a1, const char *a2, ...)
{
  return _[a1 opMode];
}

id objc_msgSend_opaqueRepresentation(void *a1, const char *a2, ...)
{
  return _[a1 opaqueRepresentation];
}

id objc_msgSend_open(void *a1, const char *a2, ...)
{
  return _[a1 open];
}

id objc_msgSend_openAppURL(void *a1, const char *a2, ...)
{
  return _[a1 openAppURL];
}

id objc_msgSend_openAppURLs(void *a1, const char *a2, ...)
{
  return _[a1 openAppURLs];
}

id objc_msgSend_openCompletedItemsWithFilesApp(void *a1, const char *a2, ...)
{
  return _[a1 openCompletedItemsWithFilesApp];
}

id objc_msgSend_openInActivitiesForItems_isContentManaged_sourceApplicationAuditTokenData_includeSourceApplicationInResults_supportedTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "openInActivitiesForItems:isContentManaged:sourceApplicationAuditTokenData:includeSourceApplicationInResults:supportedTypeIdentifiers:");
}

id objc_msgSend_openLinks(void *a1, const char *a2, ...)
{
  return _[a1 openLinks];
}

id objc_msgSend_openNode_forProtocol_flags_(void *a1, const char *a2, ...)
{
  return [a1 openNode:forProtocol:flags:];
}

id objc_msgSend_openPasswordManagerURL_(void *a1, const char *a2, ...)
{
  return [a1 openPasswordManagerURL:];
}

id objc_msgSend_openSensitiveURL_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:withOptions:];
}

id objc_msgSend_openSensitiveURL_withOptions_error_(void *a1, const char *a2, ...)
{
  return [a1 openSensitiveURL:x0 withOptions:x1 error:x2];
}

id objc_msgSend_openSetupURL_(void *a1, const char *a2, ...)
{
  return [a1 openSetupURL:];
}

id objc_msgSend_openStreams(void *a1, const char *a2, ...)
{
  return _[a1 openStreams];
}

id objc_msgSend_openURL_configuration_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 openURL:configuration:completionHandler:];
}

id objc_msgSend_openURL_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 openURL:withOptions:];
}

id objc_msgSend_openURLAnnotationsByURL(void *a1, const char *a2, ...)
{
  return _[a1 openURLAnnotationsByURL];
}

id objc_msgSend_openURLs_(void *a1, const char *a2, ...)
{
  return [a1 openURLs:];
}

id objc_msgSend_openURLs_bundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 openURLs:bundleIdentifier:];
}

id objc_msgSend_operatingSystemVersion(void *a1, const char *a2, ...)
{
  return _[a1 operatingSystemVersion];
}

id objc_msgSend_operationCount(void *a1, const char *a2, ...)
{
  return _[a1 operationCount];
}

id objc_msgSend_operationNameForPersonID_sessionID_clientBundleID_(void *a1, const char *a2, ...)
{
  return [a1 operationNameForPersonID:sessionID:clientBundleID:];
}

id objc_msgSend_operationToOpenResource_usingApplication_uniqueDocumentIdentifier_isContentManaged_sourceAuditToken_userInfo_options_delegate_(void *a1, const char *a2, ...)
{
  return [a1 operationToOpenResource:x0 usingApplication:x1 uniqueDocumentIdentifier:x2 isContentManaged:x3 sourceAuditToken:x4 userInfo:x5 options:x6 delegate:x7];
}

id objc_msgSend_operationToOpenResource_usingApplication_uniqueDocumentIdentifier_userInfo_delegate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "operationToOpenResource:usingApplication:uniqueDocumentIdentifier:userInfo:delegate:");
}

id objc_msgSend_operationToOpenResource_usingApplication_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 operationToOpenResource:x0 usingApplication:x1 userInfo:x2];
}

id objc_msgSend_operationToSendItems_fromBundleIdentifier_description_previewImageData_(void *a1, const char *a2, ...)
{
  return [a1 operationToSendItems:x0 fromBundleIdentifier:x1 description:x2 previewImageData:x3];
}

id objc_msgSend_operations(void *a1, const char *a2, ...)
{
  return _[a1 operations];
}

id objc_msgSend_opticalDisk_(void *a1, const char *a2, ...)
{
  return [a1 opticalDisk:];
}

id objc_msgSend_options(void *a1, const char *a2, ...)
{
  return _[a1 options];
}

id objc_msgSend_orderedActivities(void *a1, const char *a2, ...)
{
  return _[a1 orderedActivities];
}

id objc_msgSend_orderedAvailableActivitiesForMatchingContext_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "orderedAvailableActivitiesForMatchingContext:");
}

id objc_msgSend_orderedPresentableActivities(void *a1, const char *a2, ...)
{
  return _[a1 orderedPresentableActivities];
}

id objc_msgSend_orientation(void *a1, const char *a2, ...)
{
  return _[a1 orientation];
}

id objc_msgSend_originator(void *a1, const char *a2, ...)
{
  return _[a1 originator];
}

id objc_msgSend_osVersion(void *a1, const char *a2, ...)
{
  return _[a1 osVersion];
}

id objc_msgSend_otherProviderCancel(void *a1, const char *a2, ...)
{
  return _[a1 otherProviderCancel];
}

id objc_msgSend_otherSessionCancel(void *a1, const char *a2, ...)
{
  return _[a1 otherSessionCancel];
}

id objc_msgSend_otherStuff(void *a1, const char *a2, ...)
{
  return _[a1 otherStuff];
}

id objc_msgSend_outgoingResponseIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 outgoingResponseIdentifier];
}

id objc_msgSend_outstandingRequestsHasHotspotDeviceForID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "outstandingRequestsHasHotspotDeviceForID:");
}

id objc_msgSend_overrideActivityTitle(void *a1, const char *a2, ...)
{
  return _[a1 overrideActivityTitle];
}

id objc_msgSend_overrideScreenOff(void *a1, const char *a2, ...)
{
  return _[a1 overrideScreenOff];
}

id objc_msgSend_overrideScreenOffRescanInterval(void *a1, const char *a2, ...)
{
  return _[a1 overrideScreenOffRescanInterval];
}

id objc_msgSend_overrideTitle(void *a1, const char *a2, ...)
{
  return _[a1 overrideTitle];
}

id objc_msgSend_p2pAllowed(void *a1, const char *a2, ...)
{
  return _[a1 p2pAllowed];
}

id objc_msgSend_pages(void *a1, const char *a2, ...)
{
  return _[a1 pages];
}

id objc_msgSend_pairCheckTime(void *a1, const char *a2, ...)
{
  return _[a1 pairCheckTime];
}

id objc_msgSend_pairSetupWithFlags_completion_(void *a1, const char *a2, ...)
{
  return [a1 pairSetupWithFlags:];
}

id objc_msgSend_paired(void *a1, const char *a2, ...)
{
  return _[a1 paired];
}

id objc_msgSend_pairedAutoUnlockDevice(void *a1, const char *a2, ...)
{
  return _[a1 pairedAutoUnlockDevice];
}

id objc_msgSend_pairedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 pairedDeviceID];
}

id objc_msgSend_pairedDevices(void *a1, const char *a2, ...)
{
  return _[a1 pairedDevices];
}

id objc_msgSend_pairedPeerIsValid_(void *a1, const char *a2, ...)
{
  return [a1 pairedPeerIsValid:];
}

id objc_msgSend_pairedPeers(void *a1, const char *a2, ...)
{
  return _[a1 pairedPeers];
}

id objc_msgSend_pairedWatchLockState(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchLockState];
}

id objc_msgSend_pairedWatchSupportsRelock(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchSupportsRelock];
}

id objc_msgSend_pairedWatchWristState(void *a1, const char *a2, ...)
{
  return _[a1 pairedWatchWristState];
}

id objc_msgSend_pairedWatchWristStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 pairedWatchWristStateChanged:];
}

id objc_msgSend_pairingAgentDeviceIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 pairingAgentDeviceIdentifier];
}

id objc_msgSend_pairingCompatibilityState(void *a1, const char *a2, ...)
{
  return _[a1 pairingCompatibilityState];
}

id objc_msgSend_pairingDeriveKeyForIdentifier_keyLength_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingDeriveKeyForIdentifier:keyLength:");
}

id objc_msgSend_pairingID(void *a1, const char *a2, ...)
{
  return _[a1 pairingID];
}

id objc_msgSend_pairingIDForWatchID_(void *a1, const char *a2, ...)
{
  return [a1 pairingIDForWatchID:];
}

id objc_msgSend_pairingParseAccessoryStatusPayloadPtr_end_fields_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingParseAccessoryStatusPayloadPtr:end:fields:");
}

id objc_msgSend_pairingParsePayload_identifier_bleDevice_peerInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingParsePayload:identifier:bleDevice:peerInfo:");
}

id objc_msgSend_pairingRequestIsValidForDeviceID_messageContext_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingRequestIsValidForDeviceID:messageContext:");
}

id objc_msgSend_pairingStorePath(void *a1, const char *a2, ...)
{
  return _[a1 pairingStorePath];
}

id objc_msgSend_pairingUpdatePairedInfo_fields_bleDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingUpdatePairedInfo:fields:bleDevice:");
}

id objc_msgSend_pairingUpdatePairedInfoMB_fields_bleDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pairingUpdatePairedInfoMB:fields:bleDevice:");
}

id objc_msgSend_parseAskRequest(void *a1, const char *a2, ...)
{
  return _[a1 parseAskRequest];
}

id objc_msgSend_parseAskResponse_(void *a1, const char *a2, ...)
{
  return [a1 parseAskResponse:];
}

id objc_msgSend_parseDiscoverRequest(void *a1, const char *a2, ...)
{
  return _[a1 parseDiscoverRequest];
}

id objc_msgSend_parseDiscoverResponse_(void *a1, const char *a2, ...)
{
  return [a1 parseDiscoverResponse:];
}

id objc_msgSend_parseDomain_(void *a1, const char *a2, ...)
{
  return [a1 parseDomain:];
}

id objc_msgSend_parseHeader_(void *a1, const char *a2, ...)
{
  return [a1 parseHeader:];
}

id objc_msgSend_parseStatus3_productID_caseLEDColor_caseLEDStatus_(void *a1, const char *a2, ...)
{
  return [a1 parseStatus3:productID:caseLEDColor:caseLEDStatus:];
}

id objc_msgSend_partID(void *a1, const char *a2, ...)
{
  return _[a1 partID];
}

id objc_msgSend_partName(void *a1, const char *a2, ...)
{
  return _[a1 partName];
}

id objc_msgSend_passURL(void *a1, const char *a2, ...)
{
  return _[a1 passURL];
}

id objc_msgSend_passcode(void *a1, const char *a2, ...)
{
  return _[a1 passcode];
}

id objc_msgSend_passcodeEnabled(void *a1, const char *a2, ...)
{
  return _[a1 passcodeEnabled];
}

id objc_msgSend_passes(void *a1, const char *a2, ...)
{
  return _[a1 passes];
}

id objc_msgSend_passkeyCredential(void *a1, const char *a2, ...)
{
  return _[a1 passkeyCredential];
}

id objc_msgSend_password(void *a1, const char *a2, ...)
{
  return _[a1 password];
}

id objc_msgSend_passwordManagerURL(void *a1, const char *a2, ...)
{
  return _[a1 passwordManagerURL];
}

id objc_msgSend_passwordPickerStart_bundleID_localizedAppName_unlocalizedAppName_associatedDomains_appIconData_deviceName_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "passwordPickerStart:bundleID:localizedAppName:unlocalizedAppName:associatedDomains:appIconData:deviceName:completion:");
}

id objc_msgSend_path(void *a1, const char *a2, ...)
{
  return _[a1 path];
}

id objc_msgSend_pathExistsInPlaceholderInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pathExistsInPlaceholderInfo:");
}

id objc_msgSend_pathExtension(void *a1, const char *a2, ...)
{
  return _[a1 pathExtension];
}

id objc_msgSend_payload(void *a1, const char *a2, ...)
{
  return _[a1 payload];
}

id objc_msgSend_payloadDescription(void *a1, const char *a2, ...)
{
  return _[a1 payloadDescription];
}

id objc_msgSend_payloadFilterData(void *a1, const char *a2, ...)
{
  return _[a1 payloadFilterData];
}

id objc_msgSend_payloadWithData_version_(void *a1, const char *a2, ...)
{
  return [a1 payloadWithData:x0 version:x1];
}

id objc_msgSend_pdfs(void *a1, const char *a2, ...)
{
  return _[a1 pdfs];
}

id objc_msgSend_pearlDevice(void *a1, const char *a2, ...)
{
  return _[a1 pearlDevice];
}

id objc_msgSend_pedometerManager(void *a1, const char *a2, ...)
{
  return _[a1 pedometerManager];
}

id objc_msgSend_peerDevice(void *a1, const char *a2, ...)
{
  return _[a1 peerDevice];
}

id objc_msgSend_peerDisconnectedHandler(void *a1, const char *a2, ...)
{
  return _[a1 peerDisconnectedHandler];
}

id objc_msgSend_peerFoundHandler(void *a1, const char *a2, ...)
{
  return _[a1 peerFoundHandler];
}

id objc_msgSend_peerFoundInterval(void *a1, const char *a2, ...)
{
  return _[a1 peerFoundInterval];
}

id objc_msgSend_peerIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 peerIdentifier];
}

id objc_msgSend_peerInRange_(void *a1, const char *a2, ...)
{
  return [a1 peerInRange:];
}

id objc_msgSend_peerList(void *a1, const char *a2, ...)
{
  return _[a1 peerList];
}

id objc_msgSend_peerListFromAWDLInfo_(void *a1, const char *a2, ...)
{
  return [a1 peerListFromAWDLInfo:];
}

id objc_msgSend_peerMacAddress(void *a1, const char *a2, ...)
{
  return _[a1 peerMacAddress];
}

id objc_msgSend_pendingContentDurationSecs(void *a1, const char *a2, ...)
{
  return _[a1 pendingContentDurationSecs];
}

id objc_msgSend_pendingContentTicks(void *a1, const char *a2, ...)
{
  return _[a1 pendingContentTicks];
}

id objc_msgSend_pendingFollowUpItemsWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "pendingFollowUpItemsWithCompletion:");
}

id objc_msgSend_people(void *a1, const char *a2, ...)
{
  return _[a1 people];
}

id objc_msgSend_peopleBrowser(void *a1, const char *a2, ...)
{
  return _[a1 peopleBrowser];
}

id objc_msgSend_peopleNodes(void *a1, const char *a2, ...)
{
  return _[a1 peopleNodes];
}

id objc_msgSend_peopleSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 peopleSuggestion];
}

id objc_msgSend_peopleSuggestionBundleIds(void *a1, const char *a2, ...)
{
  return _[a1 peopleSuggestionBundleIds];
}

id objc_msgSend_peopleSuggestionNodes(void *a1, const char *a2, ...)
{
  return _[a1 peopleSuggestionNodes];
}

id objc_msgSend_peopleSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 peopleSuggestions];
}

id objc_msgSend_peopleSuggestionsTimeout(void *a1, const char *a2, ...)
{
  return _[a1 peopleSuggestionsTimeout];
}

id objc_msgSend_performActionWithBundleProxy_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "performActionWithBundleProxy:completionHandler:");
}

id objc_msgSend_performActivity(void *a1, const char *a2, ...)
{
  return _[a1 performActivity];
}

id objc_msgSend_performActivityCompletionHandler(void *a1, const char *a2, ...)
{
  return _[a1 performActivityCompletionHandler];
}

id objc_msgSend_performActivityInHostWithUUID_(void *a1, const char *a2, ...)
{
  return [a1 performActivityInHostWithUUID:];
}

id objc_msgSend_performActivityType(void *a1, const char *a2, ...)
{
  return _[a1 performActivityType];
}

id objc_msgSend_performAirDropActivityInHostWithNoContentView_(void *a1, const char *a2, ...)
{
  return [a1 performAirDropActivityInHostWithNoContentView:];
}

id objc_msgSend_performAuthorizationRequestsForContext_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 performAuthorizationRequestsForContext:withCompletionHandler:];
}

id objc_msgSend_performBatchExpungeWithAssets_deleteOptions_photoLibrary_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 performBatchExpungeWithAssets:x0 deleteOptions:x1 photoLibrary:x2 completionHandler:x3];
}

id objc_msgSend_performBlockForAllProgresses_(void *a1, const char *a2, ...)
{
  return [a1 performBlockForAllProgresses:];
}

id objc_msgSend_performChanges_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 performChanges:];
}

id objc_msgSend_performExtensionActivityInHostWithBundleID_request_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "performExtensionActivityInHostWithBundleID:request:");
}

id objc_msgSend_performLaunchServicesImportOpenWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "performLaunchServicesImportOpenWithCompletion:");
}

id objc_msgSend_performLaunchServicesInPlaceOpenWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 performLaunchServicesInPlaceOpenWithCompletion:];
}

id objc_msgSend_performRegistrationIfNecessaryForLockSession_error_(void *a1, const char *a2, ...)
{
  return [a1 performRegistrationIfNecessaryForLockSession:error:];
}

id objc_msgSend_performSelector_(void *a1, const char *a2, ...)
{
  return [a1 performSelector:];
}

id objc_msgSend_performShortcutActivityInHostWithBundleID_singleUseToken_(void *a1, const char *a2, ...)
{
  return [a1 performShortcutActivityInHostWithBundleID:singleUseToken:];
}

id objc_msgSend_performUpdate_(void *a1, const char *a2, ...)
{
  return [a1 performUpdate:];
}

id objc_msgSend_performUserDefaultsWithFavoritesProxies_suggestionProxies_orderedUUIDs_activityCategory_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "performUserDefaultsWithFavoritesProxies:suggestionProxies:orderedUUIDs:activityCategory:");
}

id objc_msgSend_periocularStatus(void *a1, const char *a2, ...)
{
  return _[a1 periocularStatus];
}

id objc_msgSend_persistImageForContact_withAppIcon_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "persistImageForContact:withAppIcon:");
}

id objc_msgSend_persistedTransfersBaseURL(void *a1, const char *a2, ...)
{
  return _[a1 persistedTransfersBaseURL];
}

id objc_msgSend_personHandle(void *a1, const char *a2, ...)
{
  return _[a1 personHandle];
}

id objc_msgSend_personHasAirDropEligibleDevice_(void *a1, const char *a2, ...)
{
  return [a1 personHasAirDropEligibleDevice:];
}

id objc_msgSend_personID(void *a1, const char *a2, ...)
{
  return _[a1 personID];
}

id objc_msgSend_personId(void *a1, const char *a2, ...)
{
  return _[a1 personId];
}

id objc_msgSend_personInfo(void *a1, const char *a2, ...)
{
  return _[a1 personInfo];
}

id objc_msgSend_personInfoCache(void *a1, const char *a2, ...)
{
  return _[a1 personInfoCache];
}

id objc_msgSend_personInfoChanged_flags_atag_cname_phash_ehash_nhash_(void *a1, const char *a2, ...)
{
  return [a1 personInfoChanged:x0 flags:x1 atag:x2 cname:x3 phash:x4 ehash:x5 nhash:x6];
}

id objc_msgSend_personInfoWithEmailOrPhone_completion_(void *a1, const char *a2, ...)
{
  return [a1 personInfoWithEmailOrPhone:completion:];
}

id objc_msgSend_personInfoWithEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "personInfoWithEmailOrPhone:queue:completion:");
}

id objc_msgSend_personalHotspotAllowed(void *a1, const char *a2, ...)
{
  return _[a1 personalHotspotAllowed];
}

id objc_msgSend_perspectiveDataForActionPlatterWithTitle_tintColor_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForActionPlatterWithTitle:tintColor:replyHandler:")
}

id objc_msgSend_perspectiveDataForActivityMoreListEntryForActivityTitle_labelColor_activityCategory_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForActivityMoreListEntryForActivityTitle:labelColor:activityCategory:replyHandler:");
}

id objc_msgSend_perspectiveDataForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:");
}

id objc_msgSend_perspectiveDataForNameLabelWithString_textColor_maxNumberOfLines_isAirDrop_ignoreNameWrapping_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForNameLabelWithString:textColor:maxNumberOfLines:isAirDrop:ignoreNameWrapping:replyHandler:");
}

id objc_msgSend_perspectiveDataForNearbyBadgeWithCount_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForNearbyBadgeWithCount:");
}

id objc_msgSend_perspectiveDataForNearbyBadgeWithCount_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForNearbyBadgeWithCount:replyHandler:");
}

id objc_msgSend_perspectiveDataForUIActivityTitle_textColor_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForUIActivityTitle:textColor:");
}

id objc_msgSend_perspectiveDataForUIActivityTitle_textColor_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "perspectiveDataForUIActivityTitle:textColor:replyHandler:");
}

id objc_msgSend_perspectiveDataSize(void *a1, const char *a2, ...)
{
  return _[a1 perspectiveDataSize];
}

id objc_msgSend_phoneAutoUnlockSupportedByDevice_(void *a1, const char *a2, ...)
{
  return [a1 phoneAutoUnlockSupportedByDevice:];
}

id objc_msgSend_phoneNumber(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumber];
}

id objc_msgSend_phoneNumberWithDigits_countryCode_(void *a1, const char *a2, ...)
{
  return [a1 phoneNumberWithDigits:x0 countryCode:x1];
}

id objc_msgSend_phoneNumberWithStringValue_(void *a1, const char *a2, ...)
{
  return [a1 phoneNumberWithStringValue:];
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumbers];
}

id objc_msgSend_phoneNumbersForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 phoneNumbersForAppleID:];
}

id objc_msgSend_phoneUnlockDate(void *a1, const char *a2, ...)
{
  return _[a1 phoneUnlockDate];
}

id objc_msgSend_photoOutboundSharingTmpDirectoryURL(void *a1, const char *a2, ...)
{
  return _[a1 photoOutboundSharingTmpDirectoryURL];
}

id objc_msgSend_photoURL(void *a1, const char *a2, ...)
{
  return _[a1 photoURL];
}

id objc_msgSend_photosAssetIDs(void *a1, const char *a2, ...)
{
  return _[a1 photosAssetIDs];
}

id objc_msgSend_physicalCardForFeatureIdentifier_activationCode_completion_(void *a1, const char *a2, ...)
{
  return [a1 physicalCardForFeatureIdentifier:activationCode:completion:];
}

id objc_msgSend_pickRoute_(void *a1, const char *a2, ...)
{
  return [a1 pickRoute:];
}

id objc_msgSend_pid(void *a1, const char *a2, ...)
{
  return _[a1 pid];
}

id objc_msgSend_pillUpdated(void *a1, const char *a2, ...)
{
  return _[a1 pillUpdated];
}

id objc_msgSend_pkData(void *a1, const char *a2, ...)
{
  return _[a1 pkData];
}

id objc_msgSend_placeholder(void *a1, const char *a2, ...)
{
  return _[a1 placeholder];
}

id objc_msgSend_placeholderDevice(void *a1, const char *a2, ...)
{
  return _[a1 placeholderDevice];
}

id objc_msgSend_placeholderForCreatedAsset(void *a1, const char *a2, ...)
{
  return _[a1 placeholderForCreatedAsset];
}

id objc_msgSend_placeholderSuggestion(void *a1, const char *a2, ...)
{
  return _[a1 placeholderSuggestion];
}

id objc_msgSend_plainItemsFromItemSources_(void *a1, const char *a2, ...)
{
  return [a1 plainItemsFromItemSources:];
}

id objc_msgSend_platformStore(void *a1, const char *a2, ...)
{
  return _[a1 platformStore];
}

id objc_msgSend_pluginKitProxyForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 pluginKitProxyForIdentifier:];
}

id objc_msgSend_policiesChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 policiesChangedHandler];
}

id objc_msgSend_policySession(void *a1, const char *a2, ...)
{
  return _[a1 policySession];
}

id objc_msgSend_port(void *a1, const char *a2, ...)
{
  return _[a1 port];
}

id objc_msgSend_portNumber(void *a1, const char *a2, ...)
{
  return _[a1 portNumber];
}

id objc_msgSend_positionBeforeActivityType(void *a1, const char *a2, ...)
{
  return _[a1 positionBeforeActivityType];
}

id objc_msgSend_possibleActions(void *a1, const char *a2, ...)
{
  return _[a1 possibleActions];
}

id objc_msgSend_postBeganUnlockingNotification(void *a1, const char *a2, ...)
{
  return _[a1 postBeganUnlockingNotification];
}

id objc_msgSend_postFollowUpItem_error_(void *a1, const char *a2, ...)
{
  return [a1 postFollowUpItem:error:];
}

id objc_msgSend_postFollowUpWithContext_error_(void *a1, const char *a2, ...)
{
  return [a1 postFollowUpWithContext:error:];
}

id objc_msgSend_postNotification(void *a1, const char *a2, ...)
{
  return _[a1 postNotification];
}

id objc_msgSend_postNotification_(void *a1, const char *a2, ...)
{
  return [a1 postNotification:];
}

id objc_msgSend_postNotification_forNeighborhood_(void *a1, const char *a2, ...)
{
  return [a1 postNotification:forNeighborhood:];
}

id objc_msgSend_postNotification_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotification:nil userInfo:nil];
}

id objc_msgSend_postNotificationForTransferStatus_progress_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationForTransferStatus:x0 progress:x1];
}

id objc_msgSend_postNotificationIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 postNotificationIfNeeded];
}

id objc_msgSend_postNotificationName_object_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:];
}

id objc_msgSend_postNotificationName_object_userInfo_(void *a1, const char *a2, ...)
{
  return [a1 postNotificationName:object:userInfo:];
}

id objc_msgSend_postNotificationName_object_userInfo_deliverImmediately_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "postNotificationName:object:userInfo:deliverImmediately:");
}

id objc_msgSend_postPairedUnlockBannerFor_needsLockButton_needsUpdate_(void *a1, const char *a2, ...)
{
  return [a1 postPairedUnlockBannerFor:needsLockButton:needsUpdate:];
}

id objc_msgSend_postSuggestionNotification(void *a1, const char *a2, ...)
{
  return _[a1 postSuggestionNotification];
}

id objc_msgSend_powerOn(void *a1, const char *a2, ...)
{
  return _[a1 powerOn];
}

id objc_msgSend_powerSource(void *a1, const char *a2, ...)
{
  return _[a1 powerSource];
}

id objc_msgSend_predicateForContactsMatchingEmailAddress_(void *a1, const char *a2, ...)
{
  return [a1 predicateForContactsMatchingEmailAddress:];
}

id objc_msgSend_predicateForContactsMatchingPhoneNumber_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "predicateForContactsMatchingPhoneNumber:");
}

id objc_msgSend_predicateForContactsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 predicateForContactsWithIdentifiers:];
}

id objc_msgSend_predicateForEventsWithStringValueInValues_(void *a1, const char *a2, ...)
{
  return [a1 predicateForEventsWithStringValueInValues:];
}

id objc_msgSend_predicateMatchingBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 predicateMatchingBundleIdentifier:];
}

id objc_msgSend_predicateWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithBlock:];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_preferVibrantIcons(void *a1, const char *a2, ...)
{
  return _[a1 preferVibrantIcons];
}

id objc_msgSend_preferredChannel(void *a1, const char *a2, ...)
{
  return _[a1 preferredChannel];
}

id objc_msgSend_preferredContentSizeCategory(void *a1, const char *a2, ...)
{
  return _[a1 preferredContentSizeCategory];
}

id objc_msgSend_preferredFilenameExtension(void *a1, const char *a2, ...)
{
  return _[a1 preferredFilenameExtension];
}

id objc_msgSend_preferredLocalizations(void *a1, const char *a2, ...)
{
  return _[a1 preferredLocalizations];
}

id objc_msgSend_preferredRemoteLTKForDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 preferredRemoteLTKForDeviceID];
}

id objc_msgSend_preferredThumbnailSize(void *a1, const char *a2, ...)
{
  return _[a1 preferredThumbnailSize];
}

id objc_msgSend_prefillDefaultsForGenuineCheckIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 prefillDefaultsForGenuineCheckIfNecessary];
}

id objc_msgSend_preflightConversionRequest_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 preflightConversionRequest:x0 completionHandler:x1];
}

id objc_msgSend_prefsChanged(void *a1, const char *a2, ...)
{
  return _[a1 prefsChanged];
}

id objc_msgSend_prepare(void *a1, const char *a2, ...)
{
  return _[a1 prepare];
}

id objc_msgSend_prepareForAcceptWithCompletion_(void *a1, const char *a2, ...)
{
  return [a1 prepareForAcceptWithCompletion:];
}

id objc_msgSend_prepareForNewEncryptionRequest(void *a1, const char *a2, ...)
{
  return _[a1 prepareForNewEncryptionRequest];
}

id objc_msgSend_prepareOrPerformOpenAction(void *a1, const char *a2, ...)
{
  return _[a1 prepareOrPerformOpenAction];
}

id objc_msgSend_preparePresentationWithBroadwayActivationCode_testInfo_(void *a1, const char *a2, ...)
{
  return [a1 preparePresentationWithBroadwayActivationCode:testInfo:];
}

id objc_msgSend_prepareWithActivityItemData_(void *a1, const char *a2, ...)
{
  return [a1 prepareWithActivityItemData:];
}

id objc_msgSend_prepareWithActivityItems_(void *a1, const char *a2, ...)
{
  return [a1 prepareWithActivityItems:];
}

id objc_msgSend_preprocessItems_forClientBundleID_receiverIdentifier_receiverSupportsURLs_receiverIsUnknown_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "preprocessItems:forClientBundleID:receiverIdentifier:receiverSupportsURLs:receiverIsUnknown:");
}

id objc_msgSend_present(void *a1, const char *a2, ...)
{
  return _[a1 present];
}

id objc_msgSend_presentWithContext_(void *a1, const char *a2, ...)
{
  return [a1 presentWithContext:];
}

id objc_msgSend_presentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 presentedBluetoothError];
}

id objc_msgSend_presentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 presentedWiFiError];
}

id objc_msgSend_preventExitForLocaleIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 preventExitForLocaleIfNeeded];
}

id objc_msgSend_preventExiting(void *a1, const char *a2, ...)
{
  return _[a1 preventExiting];
}

id objc_msgSend_preventIdleSleepAssertion(void *a1, const char *a2, ...)
{
  return _[a1 preventIdleSleepAssertion];
}

id objc_msgSend_previewImage(void *a1, const char *a2, ...)
{
  return _[a1 previewImage];
}

id objc_msgSend_previewImageDataForItem_(void *a1, const char *a2, ...)
{
  return [a1 previewImageDataForItem:];
}

id objc_msgSend_previewImageForItem_(void *a1, const char *a2, ...)
{
  return [a1 previewImageForItem:];
}

id objc_msgSend_previousKeyIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 previousKeyIdentifier];
}

id objc_msgSend_previousSessionIDs(void *a1, const char *a2, ...)
{
  return _[a1 previousSessionIDs];
}

id objc_msgSend_prewarmAutoUnlock(void *a1, const char *a2, ...)
{
  return _[a1 prewarmAutoUnlock];
}

id objc_msgSend_prewarmIdleStartDate(void *a1, const char *a2, ...)
{
  return _[a1 prewarmIdleStartDate];
}

id objc_msgSend_prewarmIdleTime(void *a1, const char *a2, ...)
{
  return _[a1 prewarmIdleTime];
}

id objc_msgSend_prewarmStart(void *a1, const char *a2, ...)
{
  return _[a1 prewarmStart];
}

id objc_msgSend_primaryAppleIDIsHSA2(void *a1, const char *a2, ...)
{
  return _[a1 primaryAppleIDIsHSA2];
}

id objc_msgSend_primaryClient(void *a1, const char *a2, ...)
{
  return _[a1 primaryClient];
}

id objc_msgSend_primaryPlacement(void *a1, const char *a2, ...)
{
  return _[a1 primaryPlacement];
}

id objc_msgSend_primeWithDiscoveryContext_(void *a1, const char *a2, ...)
{
  return [a1 primeWithDiscoveryContext:];
}

id objc_msgSend_primedSuggestionsQueue(void *a1, const char *a2, ...)
{
  return _[a1 primedSuggestionsQueue];
}

id objc_msgSend_printerNodes(void *a1, const char *a2, ...)
{
  return _[a1 printerNodes];
}

id objc_msgSend_privateContactDiscoveryEnabled(void *a1, const char *a2, ...)
{
  return _[a1 privateContactDiscoveryEnabled];
}

id objc_msgSend_privateKeyPersistentReference(void *a1, const char *a2, ...)
{
  return _[a1 privateKeyPersistentReference];
}

id objc_msgSend_problemFlags(void *a1, const char *a2, ...)
{
  return _[a1 problemFlags];
}

id objc_msgSend_processIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 processIdentifier];
}

id objc_msgSend_processNetworkStatistics_(void *a1, const char *a2, ...)
{
  return [a1 processNetworkStatistics:];
}

id objc_msgSend_processTXTRecordUpdate_rdlen_rdata_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "processTXTRecordUpdate:rdlen:rdata:");
}

id objc_msgSend_processedImageResultsData(void *a1, const char *a2, ...)
{
  return _[a1 processedImageResultsData];
}

id objc_msgSend_productBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 productBuildVersion];
}

id objc_msgSend_productID(void *a1, const char *a2, ...)
{
  return _[a1 productID];
}

id objc_msgSend_productID2(void *a1, const char *a2, ...)
{
  return _[a1 productID2];
}

id objc_msgSend_productIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 productIdentifier];
}

id objc_msgSend_productName(void *a1, const char *a2, ...)
{
  return _[a1 productName];
}

id objc_msgSend_productVersion(void *a1, const char *a2, ...)
{
  return _[a1 productVersion];
}

id objc_msgSend_progress(void *a1, const char *a2, ...)
{
  return _[a1 progress];
}

id objc_msgSend_progressEventForRecordID_withResults_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "progressEventForRecordID:withResults:")];
}

id objc_msgSend_prompt(void *a1, const char *a2, ...)
{
  return _[a1 prompt];
}

id objc_msgSend_promptForAdaptiveControlsProxForDevice_(void *a1, const char *a2, ...)
{
  return [a1 promptForAdaptiveControlsProxForDevice:];
}

id objc_msgSend_promptForApproval(void *a1, const char *a2, ...)
{
  return _[a1 promptForApproval];
}

id objc_msgSend_promptForHeadphoneProxFeature_forDevice_(void *a1, const char *a2, ...)
{
  return [a1 promptForHeadphoneProxFeature:forDevice:];
}

id objc_msgSend_promptForSiriNotificationsForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "promptForSiriNotificationsForDevice:");
}

id objc_msgSend_promptForSpatialAudioProfileForDevice_(void *a1, const char *a2, ...)
{
  return [a1 promptForSpatialAudioProfileForDevice:];
}

id objc_msgSend_promptForWhatsNewProxForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "promptForWhatsNewProxForDevice:");
}

id objc_msgSend_promptingForApproval(void *a1, const char *a2, ...)
{
  return _[a1 promptingForApproval];
}

id objc_msgSend_propertyForKey_(void *a1, const char *a2, ...)
{
  return [a1 propertyForKey:];
}

id objc_msgSend_propertyListWithData_options_format_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "propertyListWithData:options:format:error:");
}

id objc_msgSend_protectionSpace(void *a1, const char *a2, ...)
{
  return _[a1 protectionSpace];
}

id objc_msgSend_protobufDataFromRequest_(void *a1, const char *a2, ...)
{
  return [a1 protobufDataFromRequest:];
}

id objc_msgSend_protocol(void *a1, const char *a2, ...)
{
  return _[a1 protocol];
}

id objc_msgSend_provideFeedbackForNodeAtIndex_bundleID_selectedActionBundleID_abandoned_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "provideFeedbackForNodeAtIndex:bundleID:selectedActionBundleID:abandoned:");
}

id objc_msgSend_provideFeedbackForPeopleSuggestion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "provideFeedbackForPeopleSuggestion:");
}

id objc_msgSend_provideFeedbackForPeopleSuggestionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 provideFeedbackForPeopleSuggestionIdentifier:];
}

id objc_msgSend_provideFeedbackForSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 provideFeedbackForSuggestions:];
}

id objc_msgSend_provideSuggestLessFeedbackForShareSheetSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 provideSuggestLessFeedbackForShareSheetSuggestion:];
}

id objc_msgSend_provider(void *a1, const char *a2, ...)
{
  return _[a1 provider];
}

id objc_msgSend_proxPairProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 proxPairProximityEstimator];
}

id objc_msgSend_proxPairingLoggerAndInvalidationHandler_withLogLevel_andError_(void *a1, const char *a2, ...)
{
  return [a1 proxPairingLoggerAndInvalidationHandler:withLogLevel:andError:];
}

id objc_msgSend_proxPairingTicks(void *a1, const char *a2, ...)
{
  return _[a1 proxPairingTicks];
}

id objc_msgSend_proxies(void *a1, const char *a2, ...)
{
  return _[a1 proxies];
}

id objc_msgSend_proximityClient_dismissContentForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClient:dismissContentForDevice:");
}

id objc_msgSend_proximityClient_provideContent_forDevice_force_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClient:provideContent:forDevice:force:");
}

id objc_msgSend_proximityClient_stopSuppressingDevice_(void *a1, const char *a2, ...)
{
  return [a1 proximityClient:stopSuppressingDevice:];
}

id objc_msgSend_proximityClient_suppressDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClient:suppressDevice:");
}

id objc_msgSend_proximityClient_updateContent_forDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClient:updateContent:forDevice:");
}

id objc_msgSend_proximityClientDeviceDidUntriggerHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClientDeviceDidUntriggerHandler:");
}

id objc_msgSend_proximityClientDeviceEnteredImmediate_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceEnteredImmediate:];
}

id objc_msgSend_proximityClientDeviceEnteredNearby_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceEnteredNearby:];
}

id objc_msgSend_proximityClientDeviceExitedImmediate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClientDeviceExitedImmediate:");
}

id objc_msgSend_proximityClientDeviceExitedNearby_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceExitedNearby:];
}

id objc_msgSend_proximityClientDeviceUpdated_rssi_state_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceUpdated:rssi:state:];
}

id objc_msgSend_proximityClientDeviceWasDismissedHandler_reason_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityClientDeviceWasDismissedHandler:reason:");
}

id objc_msgSend_proximityClientDeviceWasSelectedHandler_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceWasSelectedHandler:];
}

id objc_msgSend_proximityClientDeviceWillTriggerHandler_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientDeviceWillTriggerHandler:];
}

id objc_msgSend_proximityClientStart_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientStart:];
}

id objc_msgSend_proximityClientStop_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientStop:];
}

id objc_msgSend_proximityClientUpdate_(void *a1, const char *a2, ...)
{
  return [a1 proximityClientUpdate:];
}

id objc_msgSend_proximityDeviceDidTrigger_(void *a1, const char *a2, ...)
{
  return [a1 proximityDeviceDidTrigger:];
}

id objc_msgSend_proximityEstimatorWithProximityInfo_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proximityEstimatorWithProximityInfo:");
}

id objc_msgSend_proxyBluetoothID(void *a1, const char *a2, ...)
{
  return _[a1 proxyBluetoothID];
}

id objc_msgSend_proxyConnectionTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyConnectionTime];
}

id objc_msgSend_proxyDeviceModel(void *a1, const char *a2, ...)
{
  return _[a1 proxyDeviceModel];
}

id objc_msgSend_proxyDiscoverTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyDiscoverTime];
}

id objc_msgSend_proxyDiscoveryTime(void *a1, const char *a2, ...)
{
  return _[a1 proxyDiscoveryTime];
}

id objc_msgSend_proxyErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 proxyErrorCode];
}

id objc_msgSend_proxyLoader_didLoadProxiesWithResult_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proxyLoader:didLoadProxiesWithResult:");
}

id objc_msgSend_proxyLoaderManager(void *a1, const char *a2, ...)
{
  return _[a1 proxyLoaderManager];
}

id objc_msgSend_proxyLoaderManager_didLoadProxiesWithChangeDetails_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proxyLoaderManager:didLoadProxiesWithChangeDetails:");
}

id objc_msgSend_proxyLoaderManagerDidFinishLoadingProxySection_cancelled_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "proxyLoaderManagerDidFinishLoadingProxySection:cancelled:");
}

id objc_msgSend_proxyNotAvailableForUnlock(void *a1, const char *a2, ...)
{
  return _[a1 proxyNotAvailableForUnlock];
}

id objc_msgSend_proxyRSSI(void *a1, const char *a2, ...)
{
  return _[a1 proxyRSSI];
}

id objc_msgSend_proxySection(void *a1, const char *a2, ...)
{
  return _[a1 proxySection];
}

id objc_msgSend_proxySections(void *a1, const char *a2, ...)
{
  return _[a1 proxySections];
}

id objc_msgSend_proxySessions(void *a1, const char *a2, ...)
{
  return _[a1 proxySessions];
}

id objc_msgSend_ptsScore(void *a1, const char *a2, ...)
{
  return _[a1 ptsScore];
}

id objc_msgSend_publish(void *a1, const char *a2, ...)
{
  return _[a1 publish];
}

id objc_msgSend_publishCellularSlicingEnabledAs_(void *a1, const char *a2, ...)
{
  return [a1 publishCellularSlicingEnabledAs:];
}

id objc_msgSend_publishWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 publishWithOptions:];
}

id objc_msgSend_purgeAssetsMatchingQuery_(void *a1, const char *a2, ...)
{
  return [a1 purgeAssetsMatchingQuery:];
}

id objc_msgSend_pushDateForPreventExitForLocaleReason_expirationDate_(void *a1, const char *a2, ...)
{
  return [a1 pushDateForPreventExitForLocaleReason:expirationDate:];
}

id objc_msgSend_pushPreventionDateForReason_newDate_(void *a1, const char *a2, ...)
{
  return [a1 pushPreventionDateForReason:newDate:];
}

id objc_msgSend_quarantineFile_(void *a1, const char *a2, ...)
{
  return [a1 quarantineFile:];
}

id objc_msgSend_query(void *a1, const char *a2, ...)
{
  return _[a1 query];
}

id objc_msgSend_queryActivityStartingFromDate_toDate_toQueue_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 queryActivityStartingFromDate:x0 toDate:x1 toQueue:x2 withHandler:x3];
}

id objc_msgSend_queryForBluetoothDevice_(void *a1, const char *a2, ...)
{
  return [a1 queryForBluetoothDevice:x0];
}

id objc_msgSend_queryInteractionsUsingPredicate_sortDescriptors_limit_error_(void *a1, const char *a2, ...)
{
  return [a1 queryInteractionsUsingPredicate:x0 sortDescriptors:x1 limit:x2 error:x3];
}

id objc_msgSend_queryItems(void *a1, const char *a2, ...)
{
  return _[a1 queryItems];
}

id objc_msgSend_queryKey_type_domain_recordType_(void *a1, const char *a2, ...)
{
  return [a1 queryKey:type:domain:recordType:];
}

id objc_msgSend_queryPedometerDataFromDate_toDate_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 queryPedometerDataFromDate:toDate:withHandler:];
}

id objc_msgSend_queryVerifiedIdentityForEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return [a1 queryVerifiedIdentityForEmailOrPhone:x0 queue:x1 completion:x2];
}

id objc_msgSend_queue(void *a1, const char *a2, ...)
{
  return _[a1 queue];
}

id objc_msgSend_queueAvailableHandler(void *a1, const char *a2, ...)
{
  return _[a1 queueAvailableHandler];
}

id objc_msgSend_queueFileDataForAcceptance_originalFileName_outError_(void *a1, const char *a2, ...)
{
  return [a1 queueFileDataForAcceptance:x0 originalFileName:x1 outError:x2];
}

id objc_msgSend_queuedBlocks(void *a1, const char *a2, ...)
{
  return _[a1 queuedBlocks];
}

id objc_msgSend_radioTechnology(void *a1, const char *a2, ...)
{
  return _[a1 radioTechnology];
}

id objc_msgSend_raise_format_(void *a1, const char *a2, ...)
{
  return [a1 raise:x0, x1];
}

id objc_msgSend_rangeOfCharacterFromSet_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfCharacterFromSet:];
}

id objc_msgSend_rangeOfCharacterFromSet_options_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfCharacterFromSet:options:];
}

id objc_msgSend_rangeOfString_(void *a1, const char *a2, ...)
{
  return [a1 rangeOfString:];
}

id objc_msgSend_rangeOfString_options_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "rangeOfString:options:");
}

id objc_msgSend_rangeable(void *a1, const char *a2, ...)
{
  return _[a1 rangeable];
}

id objc_msgSend_rangingCompletedHandler(void *a1, const char *a2, ...)
{
  return _[a1 rangingCompletedHandler];
}

id objc_msgSend_rangingDisabled(void *a1, const char *a2, ...)
{
  return _[a1 rangingDisabled];
}

id objc_msgSend_rangingErrorString(void *a1, const char *a2, ...)
{
  return _[a1 rangingErrorString];
}

id objc_msgSend_rangingInterval(void *a1, const char *a2, ...)
{
  return _[a1 rangingInterval];
}

id objc_msgSend_rangingKey(void *a1, const char *a2, ...)
{
  return _[a1 rangingKey];
}

id objc_msgSend_rangingKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 rangingKeyForDeviceID:];
}

id objc_msgSend_rangingMeasurement(void *a1, const char *a2, ...)
{
  return _[a1 rangingMeasurement];
}

id objc_msgSend_rangingPeer(void *a1, const char *a2, ...)
{
  return _[a1 rangingPeer];
}

id objc_msgSend_rangingStart(void *a1, const char *a2, ...)
{
  return _[a1 rangingStart];
}

id objc_msgSend_rangingStarted(void *a1, const char *a2, ...)
{
  return _[a1 rangingStarted];
}

id objc_msgSend_rangingStartedHandler(void *a1, const char *a2, ...)
{
  return _[a1 rangingStartedHandler];
}

id objc_msgSend_rangingTimedOut(void *a1, const char *a2, ...)
{
  return _[a1 rangingTimedOut];
}

id objc_msgSend_rangingTimeout(void *a1, const char *a2, ...)
{
  return _[a1 rangingTimeout];
}

id objc_msgSend_rankedGlobalSuggestionsFromContext_contactsOnly_(void *a1, const char *a2, ...)
{
  return [a1 rankedGlobalSuggestionsFromContext:contactsOnly:];
}

id objc_msgSend_rapportIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 rapportIdentifier];
}

id objc_msgSend_rawFiles(void *a1, const char *a2, ...)
{
  return _[a1 rawFiles];
}

id objc_msgSend_read(void *a1, const char *a2, ...)
{
  return _[a1 read];
}

id objc_msgSend_read_maxLength_(void *a1, const char *a2, ...)
{
  return [a1 read:x0 maxLength:x1];
}

id objc_msgSend_readClientStream(void *a1, const char *a2, ...)
{
  return _[a1 readClientStream];
}

id objc_msgSend_readConnectHosts(void *a1, const char *a2, ...)
{
  return _[a1 readConnectHosts];
}

id objc_msgSend_readData_length_fromStream_(void *a1, const char *a2, ...)
{
  return [a1 readData:length:fromStream:];
}

id objc_msgSend_readDataUpToLength_error_(void *a1, const char *a2, ...)
{
  return [a1 readDataUpToLength:error:];
}

id objc_msgSend_readIncomingChunk(void *a1, const char *a2, ...)
{
  return _[a1 readIncomingChunk];
}

id objc_msgSend_readKey(void *a1, const char *a2, ...)
{
  return _[a1 readKey];
}

id objc_msgSend_readMISState_andReason_(void *a1, const char *a2, ...)
{
  return [a1 readMISState:andReason:];
}

id objc_msgSend_readNonce(void *a1, const char *a2, ...)
{
  return _[a1 readNonce];
}

id objc_msgSend_readingIntentWithURL_options_(void *a1, const char *a2, ...)
{
  return [a1 readingIntentWithURL:x0 options:x1];
}

id objc_msgSend_realName(void *a1, const char *a2, ...)
{
  return _[a1 realName];
}

id objc_msgSend_realNameToNodeID(void *a1, const char *a2, ...)
{
  return _[a1 realNameToNodeID];
}

id objc_msgSend_realPathURL_(void *a1, const char *a2, ...)
{
  return [a1 realPathURL:];
}

id objc_msgSend_reason(void *a1, const char *a2, ...)
{
  return _[a1 reason];
}

id objc_msgSend_reasonType(void *a1, const char *a2, ...)
{
  return _[a1 reasonType];
}

id objc_msgSend_rebuildDB(void *a1, const char *a2, ...)
{
  return _[a1 rebuildDB];
}

id objc_msgSend_receivedAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 receivedAWDLInfo];
}

id objc_msgSend_receivedAdvertisement_(void *a1, const char *a2, ...)
{
  return [a1 receivedAdvertisement:];
}

id objc_msgSend_receivedApproveRequestForSessionID_info_(void *a1, const char *a2, ...)
{
  return [a1 receivedApproveRequestForSessionID:info:];
}

id objc_msgSend_receivedAuthPromptResponse(void *a1, const char *a2, ...)
{
  return _[a1 receivedAuthPromptResponse];
}

id objc_msgSend_receivedExchangeRequest(void *a1, const char *a2, ...)
{
  return _[a1 receivedExchangeRequest];
}

id objc_msgSend_receivedFrameHandler(void *a1, const char *a2, ...)
{
  return _[a1 receivedFrameHandler];
}

id objc_msgSend_receivedFramePeerHandler(void *a1, const char *a2, ...)
{
  return _[a1 receivedFramePeerHandler];
}

id objc_msgSend_receivedSetupACK(void *a1, const char *a2, ...)
{
  return _[a1 receivedSetupACK];
}

id objc_msgSend_receivedTokenACK(void *a1, const char *a2, ...)
{
  return _[a1 receivedTokenACK];
}

id objc_msgSend_receiverDeviceModelNameSuggestsMacPlatform(void *a1, const char *a2, ...)
{
  return _[a1 receiverDeviceModelNameSuggestsMacPlatform];
}

id objc_msgSend_receiverMediaCapabilities(void *a1, const char *a2, ...)
{
  return _[a1 receiverMediaCapabilities];
}

id objc_msgSend_receiverRoute(void *a1, const char *a2, ...)
{
  return _[a1 receiverRoute];
}

id objc_msgSend_recentNodes(void *a1, const char *a2, ...)
{
  return _[a1 recentNodes];
}

id objc_msgSend_recipientHandlesForSessionID_(void *a1, const char *a2, ...)
{
  return [a1 recipientHandlesForSessionID:];
}

id objc_msgSend_recipientMetadataWithContactID_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "recipientMetadataWithContactID:completion:")];
}

id objc_msgSend_recipients(void *a1, const char *a2, ...)
{
  return _[a1 recipients];
}

id objc_msgSend_reconciledDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 reconciledDiscoverableMode];
}

id objc_msgSend_recordInteractions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 recordInteractions:x0 completionHandler:x1];
}

id objc_msgSend_reenableProxCardType_(void *a1, const char *a2, ...)
{
  return [a1 reenableProxCardType:];
}

id objc_msgSend_refreshAutoUnlockDeviceCache(void *a1, const char *a2, ...)
{
  return _[a1 refreshAutoUnlockDeviceCache];
}

id objc_msgSend_refreshIDStatusForDestination_service_listenerID_queue_completionBlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "refreshIDStatusForDestination:service:listenerID:queue:completionBlock:");
}

id objc_msgSend_regenerateTemporarySelfIdentityWithCompletion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "regenerateTemporarySelfIdentityWithCompletion:");
}

id objc_msgSend_registerAllInterfaces(void *a1, const char *a2, ...)
{
  return _[a1 registerAllInterfaces];
}

id objc_msgSend_registerConnectedStreams(void *a1, const char *a2, ...)
{
  return _[a1 registerConnectedStreams];
}

id objc_msgSend_registerContinuousExtensionsDiscoveryOnLaunch(void *a1, const char *a2, ...)
{
  return _[a1 registerContinuousExtensionsDiscoveryOnLaunch];
}

id objc_msgSend_registerForApprovalRequestsFor_(void *a1, const char *a2, ...)
{
  return [a1 registerForApprovalRequestsFor:];
}

id objc_msgSend_registerForPropertyChanges_withBlock_(void *a1, const char *a2, ...)
{
  return [a1 registerForPropertyChanges:withBlock:];
}

id objc_msgSend_registerManager_(void *a1, const char *a2, ...)
{
  return [a1 registerManager:];
}

id objc_msgSend_registerNotificationBlock_forProperties_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "registerNotificationBlock:forProperties:");
}

id objc_msgSend_registerObserver_(void *a1, const char *a2, ...)
{
  return [a1 registerObserver:];
}

id objc_msgSend_registerRemotePeerIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 registerRemotePeerIfNecessary];
}

id objc_msgSend_registerRequestID_options_handler_(void *a1, const char *a2, ...)
{
  return [a1 registerRequestID:options:handler:];
}

id objc_msgSend_registrationStatus(void *a1, const char *a2, ...)
{
  return _[a1 registrationStatus];
}

id objc_msgSend_relativeLocation(void *a1, const char *a2, ...)
{
  return _[a1 relativeLocation];
}

id objc_msgSend_relativePath(void *a1, const char *a2, ...)
{
  return _[a1 relativePath];
}

id objc_msgSend_releaseIdleSleepAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseIdleSleepAssertion];
}

id objc_msgSend_releaseKeyBagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseKeyBagAssertion];
}

id objc_msgSend_releaseKeybagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 releaseKeybagAssertion];
}

id objc_msgSend_releaseLanguageAssertionForAutoRelock(void *a1, const char *a2, ...)
{
  return _[a1 releaseLanguageAssertionForAutoRelock];
}

id objc_msgSend_releaseSandboxExtensions(void *a1, const char *a2, ...)
{
  return _[a1 releaseSandboxExtensions];
}

id objc_msgSend_reloadPairingRecordsIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 reloadPairingRecordsIfNeeded];
}

id objc_msgSend_remainingProxies(void *a1, const char *a2, ...)
{
  return _[a1 remainingProxies];
}

id objc_msgSend_remainingProxiesCount(void *a1, const char *a2, ...)
{
  return _[a1 remainingProxiesCount];
}

id objc_msgSend_remoteAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 remoteAWDLInfo];
}

id objc_msgSend_remoteContextWithOptions_(void *a1, const char *a2, ...)
{
  return [a1 remoteContextWithOptions:];
}

id objc_msgSend_remoteDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceID];
}

id objc_msgSend_remoteDeviceLocked(void *a1, const char *a2, ...)
{
  return _[a1 remoteDeviceLocked];
}

id objc_msgSend_remoteHotspotDevice(void *a1, const char *a2, ...)
{
  return _[a1 remoteHotspotDevice];
}

id objc_msgSend_remoteInteractionSessionRemoteTextEvent_(void *a1, const char *a2, ...)
{
  return [a1 remoteInteractionSessionRemoteTextEvent:];
}

id objc_msgSend_remoteInteractionSessionTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return [a1 remoteInteractionSessionTextSessionDidBegin:];
}

id objc_msgSend_remoteInteractionSessionTextSessionDidChange_(void *a1, const char *a2, ...)
{
  return [a1 remoteInteractionSessionTextSessionDidChange:];
}

id objc_msgSend_remoteInteractionSessionTextSessionDidEnd_(void *a1, const char *a2, ...)
{
  return [a1 remoteInteractionSessionTextSessionDidEnd:];
}

id objc_msgSend_remoteLTK(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTK];
}

id objc_msgSend_remoteLTKEntryForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 remoteLTKEntryForDeviceID:];
}

id objc_msgSend_remoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 remoteLTKForDeviceID:];
}

id objc_msgSend_remoteLTKHash(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKHash];
}

id objc_msgSend_remoteLTKHashForDeviceID_modern_(void *a1, const char *a2, ...)
{
  return [a1 remoteLTKHashForDeviceID:modern:];
}

id objc_msgSend_remoteLTKList(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKList];
}

id objc_msgSend_remoteLTKStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKStorageFilePath];
}

id objc_msgSend_remoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 remoteLTKs];
}

id objc_msgSend_remoteLongTermKey(void *a1, const char *a2, ...)
{
  return _[a1 remoteLongTermKey];
}

id objc_msgSend_remoteObjectInterface(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectInterface];
}

id objc_msgSend_remoteObjectProxy(void *a1, const char *a2, ...)
{
  return _[a1 remoteObjectProxy];
}

id objc_msgSend_remoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 remoteObjectProxyWithErrorHandler:];
}

id objc_msgSend_remotePeer(void *a1, const char *a2, ...)
{
  return _[a1 remotePeer];
}

id objc_msgSend_remoteShareSheet(void *a1, const char *a2, ...)
{
  return _[a1 remoteShareSheet];
}

id objc_msgSend_remoteTextEventHandler(void *a1, const char *a2, ...)
{
  return _[a1 remoteTextEventHandler];
}

id objc_msgSend_removeActivityTypeFromDefaults_(void *a1, const char *a2, ...)
{
  return [a1 removeActivityTypeFromDefaults:];
}

id objc_msgSend_removeAirDropPerson_(void *a1, const char *a2, ...)
{
  return [a1 removeAirDropPerson];
}

id objc_msgSend_removeAirDropPersonInternal_(void *a1, const char *a2, ...)
{
  return [a1 removeAirDropPersonInternal:];
}

id objc_msgSend_removeAllDelegates(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDelegates];
}

id objc_msgSend_removeAllDeliveredNotifications(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDeliveredNotifications];
}

id objc_msgSend_removeAllDiscoveryTypes(void *a1, const char *a2, ...)
{
  return _[a1 removeAllDiscoveryTypes];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeAllRemoteLTKsOnSignOut(void *a1, const char *a2, ...)
{
  return _[a1 removeAllRemoteLTKsOnSignOut];
}

id objc_msgSend_removeAppleID_(void *a1, const char *a2, ...)
{
  return [a1 removeAppleID:];
}

id objc_msgSend_removeAuthenticationStateChangesObserverFor_(void *a1, const char *a2, ...)
{
  return [a1 removeAuthenticationStateChangesObserverFor:];
}

id objc_msgSend_removeAuthorizationRequestNotification(void *a1, const char *a2, ...)
{
  return _[a1 removeAuthorizationRequestNotification];
}

id objc_msgSend_removeAutoUnlockNotification(void *a1, const char *a2, ...)
{
  return _[a1 removeAutoUnlockNotification];
}

id objc_msgSend_removeClient_(void *a1, const char *a2, ...)
{
  return [a1 removeClient:];
}

id objc_msgSend_removeClientAlerts(void *a1, const char *a2, ...)
{
  return _[a1 removeClientAlerts];
}

id objc_msgSend_removeClientForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 removeClientForIdentifier:];
}

id objc_msgSend_removeClientID_(void *a1, const char *a2, ...)
{
  return [a1 removeClientID:];
}

id objc_msgSend_removeClientWithToken_(void *a1, const char *a2, ...)
{
  return [a1 removeClientWithToken:];
}

id objc_msgSend_removeCorruptedRemoteLTKIfNecessaryForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 removeCorruptedRemoteLTKIfNecessaryForDeviceID:];
}

id objc_msgSend_removeDelegate_(void *a1, const char *a2, ...)
{
  return [a1 removeDelegate:];
}

id objc_msgSend_removeDeliveredNotificationsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 removeDeliveredNotificationsWithIdentifiers:];
}

id objc_msgSend_removeDeviceIDMissingSessionKey_(void *a1, const char *a2, ...)
{
  return [a1 removeDeviceIDMissingSessionKey:];
}

id objc_msgSend_removeFileFromPlaceholderList_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "removeFileFromPlaceholderList:");
}

id objc_msgSend_removeFileIconsFromProperties(void *a1, const char *a2, ...)
{
  return _[a1 removeFileIconsFromProperties];
}

id objc_msgSend_removeFromKeychain(void *a1, const char *a2, ...)
{
  return _[a1 removeFromKeychain];
}

id objc_msgSend_removeFromRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return [a1 removeFromRunLoop:x0 forMode:x1];
}

id objc_msgSend_removeInvalidNodes_(void *a1, const char *a2, ...)
{
  return [a1 removeInvalidNodes:];
}

id objc_msgSend_removeItemAtPath_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtPath:error:];
}

id objc_msgSend_removeItemAtURL_error_(void *a1, const char *a2, ...)
{
  return [a1 removeItemAtURL:error:];
}

id objc_msgSend_removeLabelsForSlotIDs_(void *a1, const char *a2, ...)
{
  return [a1 removeLabelsForSlotIDs:];
}

id objc_msgSend_removeLastObject(void *a1, const char *a2, ...)
{
  return _[a1 removeLastObject];
}

id objc_msgSend_removeNearbyDelegate_(void *a1, const char *a2, ...)
{
  return [a1 removeNearbyDelegate:];
}

id objc_msgSend_removeNode_(void *a1, const char *a2, ...)
{
  return [a1 removeNode:];
}

id objc_msgSend_removeNodesForPerson_(void *a1, const char *a2, ...)
{
  return [a1 removeNodesForPerson:];
}

id objc_msgSend_removeNotificationObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeNotificationObservers];
}

id objc_msgSend_removeObject_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "removeObject:");
}

id objc_msgSend_removeObjectAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectAtIndex:];
}

id objc_msgSend_removeObjectForKey_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectForKey:];
}

id objc_msgSend_removeObjectsAtIndexes_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsAtIndexes:];
}

id objc_msgSend_removeObjectsForKeys_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsForKeys:];
}

id objc_msgSend_removeObjectsInArray_(void *a1, const char *a2, ...)
{
  return [a1 removeObjectsInArray:];
}

id objc_msgSend_removeObserver_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:];
}

id objc_msgSend_removeObserver_forKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:];
}

id objc_msgSend_removeObserver_forKeyPath_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPath:context:];
}

id objc_msgSend_removeObserver_forKeyPaths_context_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:forKeyPaths:context:];
}

id objc_msgSend_removeObserver_name_object_(void *a1, const char *a2, ...)
{
  return [a1 removeObserver:name:object:];
}

id objc_msgSend_removeObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeObservers];
}

id objc_msgSend_removeOldBufferedSamplesFromCache(void *a1, const char *a2, ...)
{
  return _[a1 removeOldBufferedSamplesFromCache];
}

id objc_msgSend_removePairingRecordForWatchID_(void *a1, const char *a2, ...)
{
  return [a1 removePairingRecordForWatchID:];
}

id objc_msgSend_removePendingNotificationRequestsWithIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 removePendingNotificationRequestsWithIdentifiers:];
}

id objc_msgSend_removePreventExitForLocaleReason_(void *a1, const char *a2, ...)
{
  return [a1 removePreventExitForLocaleReason:];
}

id objc_msgSend_removeReason_(void *a1, const char *a2, ...)
{
  return [a1 removeReason:];
}

id objc_msgSend_removeRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 removeRemoteLTKForDeviceID:];
}

id objc_msgSend_removeService_(void *a1, const char *a2, ...)
{
  return [a1 removeService:];
}

id objc_msgSend_removeService_type_domain_(void *a1, const char *a2, ...)
{
  return [a1 removeService:type:domain:];
}

id objc_msgSend_removeServiceClientForIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 removeServiceClientForIdentifier:];
}

id objc_msgSend_removeStatusMonitorObservers(void *a1, const char *a2, ...)
{
  return _[a1 removeStatusMonitorObservers];
}

id objc_msgSend_removeTransfer_shouldCleanup_(void *a1, const char *a2, ...)
{
  return [a1 removeTransfer:shouldCleanup:];
}

id objc_msgSend_removeUnusedPlaceholderFiles(void *a1, const char *a2, ...)
{
  return _[a1 removeUnusedPlaceholderFiles];
}

id objc_msgSend_renewCredentialsForAccount_completion_(void *a1, const char *a2, ...)
{
  return [a1 renewCredentialsForAccount:completion:];
}

id objc_msgSend_repairCloudPairing(void *a1, const char *a2, ...)
{
  return _[a1 repairCloudPairing];
}

id objc_msgSend_repairDevice_flags_completion_(void *a1, const char *a2, ...)
{
  return [a1 repairDevice:x0 flags:x1 completion:x2];
}

id objc_msgSend_replaceContentForRequestWithIdentifier_replacementContent_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 replaceContentForRequestWithIdentifier:replacementContent:completionHandler:];
}

id objc_msgSend_replaceIconValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 replaceIconValue:forKey:];
}

id objc_msgSend_replaceItemsWithItems_inFakeTransferData_(void *a1, const char *a2, ...)
{
  return [a1 replaceItemsWithItems:inFakeTransferData:];
}

id objc_msgSend_replaceOccurrencesOfString_withString_options_range_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "replaceOccurrencesOfString:withString:options:range:");
}

id objc_msgSend_reportApprovalResultWithAcmToken_error_sessionID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "reportApprovalResultWithAcmToken:error:sessionID:");
}

id objc_msgSend_reportCurrentInvocationForDuration_(void *a1, const char *a2, ...)
{
  return [a1 reportCurrentInvocationForDuration:];
}

id objc_msgSend_reportExtensionsCacheResult(void *a1, const char *a2, ...)
{
  return _[a1 reportExtensionsCacheResult];
}

id objc_msgSend_request(void *a1, const char *a2, ...)
{
  return _[a1 request];
}

id objc_msgSend_requestAirDropItemsForNode_endpointUUID_session_(void *a1, const char *a2, ...)
{
  return [a1 requestAirDropItemsForNode:endpointUUID:session:];
}

id objc_msgSend_requestAuthorizationWithOptions_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestAuthorizationWithOptions:completionHandler:];
}

id objc_msgSend_requestCreatedDate(void *a1, const char *a2, ...)
{
  return _[a1 requestCreatedDate];
}

id objc_msgSend_requestData(void *a1, const char *a2, ...)
{
  return _[a1 requestData];
}

id objc_msgSend_requestEnablementFor_deviceID_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 requestEnablementFor:deviceID:sessionID:];
}

id objc_msgSend_requestForActivity_activityType_activitySpecificMetadata_(void *a1, const char *a2, ...)
{
  return [a1 requestForActivity:x0 activityType:x1 activitySpecificMetadata:x2];
}

id objc_msgSend_requestForActivity_activityType_sourceAppIsManaged_(void *a1, const char *a2, ...)
{
  return [a1 requestForActivity:activityType:sourceAppIsManaged:];
}

id objc_msgSend_requestForSource_destinationCapabilities_error_(void *a1, const char *a2, ...)
{
  return [a1 requestForSource:x0 destinationCapabilities:x1 error:x2];
}

id objc_msgSend_requestFromProtobufData_(void *a1, const char *a2, ...)
{
  return [a1 requestFromProtobufData:];
}

id objc_msgSend_requestID(void *a1, const char *a2, ...)
{
  return _[a1 requestID];
}

id objc_msgSend_requestIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 requestIdentifier];
}

id objc_msgSend_requestMessageHandler(void *a1, const char *a2, ...)
{
  return _[a1 requestMessageHandler];
}

id objc_msgSend_requestMessagesRecipientInfoForSessionID_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestMessagesRecipientInfoForSessionID:x0 completionHandler:x1];
}

id objc_msgSend_requestPeopleSuggestionsData(void *a1, const char *a2, ...)
{
  return _[a1 requestPeopleSuggestionsData];
}

id objc_msgSend_requestPoliciesForActivities_(void *a1, const char *a2, ...)
{
  return [a1 requestPoliciesForActivities:];
}

id objc_msgSend_requestPoliciesForBundleIdentifiers_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 requestPoliciesForBundleIdentifiers:x0 completionHandler:x1];
}

id objc_msgSend_requestPoliciesForBundleIdentifiers_withError_(void *a1, const char *a2, ...)
{
  return [a1 requestPoliciesForBundleIdentifiers:withError:];
}

id objc_msgSend_requestPostOrUpdate_info_mediumVariant_(void *a1, const char *a2, ...)
{
  return [a1 requestPostOrUpdate:info:mediumVariant:];
}

id objc_msgSend_requestRelock(void *a1, const char *a2, ...)
{
  return _[a1 requestRelock];
}

id objc_msgSend_requestRemove_withReason_(void *a1, const char *a2, ...)
{
  return [a1 requestRemove:withReason:];
}

id objc_msgSend_requestRemoveAll(void *a1, const char *a2, ...)
{
  return _[a1 requestRemoveAll];
}

id objc_msgSend_requestSSID(void *a1, const char *a2, ...)
{
  return _[a1 requestSSID];
}

id objc_msgSend_requestTokenForTopic_identifier_(void *a1, const char *a2, ...)
{
  return [a1 requestTokenForTopic:identifier];
}

id objc_msgSend_requestType(void *a1, const char *a2, ...)
{
  return _[a1 requestType];
}

id objc_msgSend_requestUpdate_info_mediumVariant_canPostNotification_(void *a1, const char *a2, ...)
{
  return [a1 requestUpdate:x0 info:x1 mediumVariant:x2 canPostNotification:x3];
}

id objc_msgSend_requestWithIdentifier_content_trigger_(void *a1, const char *a2, ...)
{
  return [a1 requestWithIdentifier:content:trigger:];
}

id objc_msgSend_requestWithInfo_completion_(void *a1, const char *a2, ...)
{
  return [a1 requestWithInfo:];
}

id objc_msgSend_requestWithURL_(void *a1, const char *a2, ...)
{
  return [a1 requestWithURL:];
}

id objc_msgSend_requireAWDL(void *a1, const char *a2, ...)
{
  return _[a1 requireAWDL];
}

id objc_msgSend_requiredAgentDomain_agentType_(void *a1, const char *a2, ...)
{
  return [a1 requiredAgentDomain:agentType:];
}

id objc_msgSend_requiresUnlockedUI(void *a1, const char *a2, ...)
{
  return _[a1 requiresUnlockedUI];
}

id objc_msgSend_rescanIntervalScreenOff(void *a1, const char *a2, ...)
{
  return _[a1 rescanIntervalScreenOff];
}

id objc_msgSend_reset(void *a1, const char *a2, ...)
{
  return _[a1 reset];
}

id objc_msgSend_resetAfterAirDropTransferWithItemData_(void *a1, const char *a2, ...)
{
  return [a1 resetAfterAirDropTransferWithItemData:];
}

id objc_msgSend_resetAndClearState(void *a1, const char *a2, ...)
{
  return _[a1 resetAndClearState];
}

id objc_msgSend_resetAppleWatchExisted(void *a1, const char *a2, ...)
{
  return _[a1 resetAppleWatchExisted];
}

id objc_msgSend_resetEscrowRecord(void *a1, const char *a2, ...)
{
  return _[a1 resetEscrowRecord];
}

id objc_msgSend_resetLongTermKeyRequest(void *a1, const char *a2, ...)
{
  return _[a1 resetLongTermKeyRequest];
}

id objc_msgSend_resetMeCardWithReason_(void *a1, const char *a2, ...)
{
  return [a1 resetMeCardWithReason:];
}

id objc_msgSend_resetReadState(void *a1, const char *a2, ...)
{
  return _[a1 resetReadState];
}

id objc_msgSend_resetReason(void *a1, const char *a2, ...)
{
  return _[a1 resetReason];
}

id objc_msgSend_resetSession(void *a1, const char *a2, ...)
{
  return _[a1 resetSession];
}

id objc_msgSend_resetSetupState(void *a1, const char *a2, ...)
{
  return _[a1 resetSetupState];
}

id objc_msgSend_resetStashState(void *a1, const char *a2, ...)
{
  return _[a1 resetStashState];
}

id objc_msgSend_resetState(void *a1, const char *a2, ...)
{
  return _[a1 resetState];
}

id objc_msgSend_resetTicks(void *a1, const char *a2, ...)
{
  return _[a1 resetTicks];
}

id objc_msgSend_resignRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 resignRemoteLTKForDeviceID:];
}

id objc_msgSend_resolve(void *a1, const char *a2, ...)
{
  return _[a1 resolve];
}

id objc_msgSend_resolvedColorWithTraitCollection_(void *a1, const char *a2, ...)
{
  return [a1 resolvedColorWithTraitCollection:];
}

id objc_msgSend_resourceURL(void *a1, const char *a2, ...)
{
  return _[a1 resourceURL];
}

id objc_msgSend_responseEndDate(void *a1, const char *a2, ...)
{
  return _[a1 responseEndDate];
}

id objc_msgSend_responseHandler(void *a1, const char *a2, ...)
{
  return _[a1 responseHandler];
}

id objc_msgSend_responseInfo(void *a1, const char *a2, ...)
{
  return _[a1 responseInfo];
}

id objc_msgSend_responseMessageInternalHandler(void *a1, const char *a2, ...)
{
  return _[a1 responseMessageInternalHandler];
}

id objc_msgSend_responseTimeout(void *a1, const char *a2, ...)
{
  return _[a1 responseTimeout];
}

id objc_msgSend_responseTimeoutFromServer(void *a1, const char *a2, ...)
{
  return _[a1 responseTimeoutFromServer];
}

id objc_msgSend_responseTimer(void *a1, const char *a2, ...)
{
  return _[a1 responseTimer];
}

id objc_msgSend_restart(void *a1, const char *a2, ...)
{
  return _[a1 restart];
}

id objc_msgSend_restartAdvertisingTetheringRequest(void *a1, const char *a2, ...)
{
  return _[a1 restartAdvertisingTetheringRequest];
}

id objc_msgSend_restartAdvertisingTetheringResponse(void *a1, const char *a2, ...)
{
  return _[a1 restartAdvertisingTetheringResponse];
}

id objc_msgSend_restartAfterDelay_(void *a1, const char *a2, ...)
{
  return [a1 restartAfterDelay:];
}

id objc_msgSend_restartAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartAssertionTimer];
}

id objc_msgSend_restartBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 restartBonjourNameMonitor];
}

id objc_msgSend_restartConfirmationTimer_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "restartConfirmationTimer:error:");
}

id objc_msgSend_restartConsumerScanning(void *a1, const char *a2, ...)
{
  return _[a1 restartConsumerScanning];
}

id objc_msgSend_restartDelayedStartTimer_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 restartDelayedStartTimer:withCompletionHandler:];
}

id objc_msgSend_restartEnableTimerWithTimeout_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "restartEnableTimerWithTimeout:");
}

id objc_msgSend_restartKeybagAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartKeybagAssertionTimer];
}

id objc_msgSend_restartLTKTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartLTKTimer];
}

id objc_msgSend_restartLongTermKeyTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartLongTermKeyTimer];
}

id objc_msgSend_restartLongTermKeyTimer_(void *a1, const char *a2, ...)
{
  return [a1 restartLongTermKeyTimer:];
}

id objc_msgSend_restartMotionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartMotionTimer];
}

id objc_msgSend_restartNetworkTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartNetworkTimer];
}

id objc_msgSend_restartProducerScanning(void *a1, const char *a2, ...)
{
  return _[a1 restartProducerScanning];
}

id objc_msgSend_restartPublishTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartPublishTimer];
}

id objc_msgSend_restartResponseTimer_(void *a1, const char *a2, ...)
{
  return [a1 restartResponseTimer:];
}

id objc_msgSend_restartScanAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartScanAssertionTimer];
}

id objc_msgSend_restartScanResetTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartScanResetTimer];
}

id objc_msgSend_restartScanTimer_(void *a1, const char *a2, ...)
{
  return [a1 restartScanTimer:];
}

id objc_msgSend_restartStashTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartStashTimer];
}

id objc_msgSend_restartStateTimer(void *a1, const char *a2, ...)
{
  return _[a1 restartStateTimer];
}

id objc_msgSend_restartUnlockTimer_(void *a1, const char *a2, ...)
{
  return [a1 restartUnlockTimer:];
}

id objc_msgSend_restrictedActivityTypes(void *a1, const char *a2, ...)
{
  return _[a1 restrictedActivityTypes];
}

id objc_msgSend_results(void *a1, const char *a2, ...)
{
  return _[a1 results];
}

id objc_msgSend_resultsBySectionType(void *a1, const char *a2, ...)
{
  return _[a1 resultsBySectionType];
}

id objc_msgSend_resume(void *a1, const char *a2, ...)
{
  return _[a1 resume];
}

id objc_msgSend_resumeForReason_(void *a1, const char *a2, ...)
{
  return [a1 resumeForReason:];
}

id objc_msgSend_resumeHandoffAdvertisingIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 resumeHandoffAdvertisingIfAppropriate];
}

id objc_msgSend_retainArguments(void *a1, const char *a2, ...)
{
  return _[a1 retainArguments];
}

id objc_msgSend_retriedSetup(void *a1, const char *a2, ...)
{
  return _[a1 retriedSetup];
}

id objc_msgSend_retrieveSuggestionForRecipients_inActivityType_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 retrieveSuggestionForRecipients:inActivityType:completionHandler:];
}

id objc_msgSend_retriggerProximityPairing_(void *a1, const char *a2, ...)
{
  return [a1 retriggerProximityPairing:];
}

id objc_msgSend_retriggerProximitySetup_(void *a1, const char *a2, ...)
{
  return [a1 retriggerProximitySetup:];
}

id objc_msgSend_retryInstallBluetoothMonitor(void *a1, const char *a2, ...)
{
  return _[a1 retryInstallBluetoothMonitor];
}

id objc_msgSend_retryRequestForError_(void *a1, const char *a2, ...)
{
  return [a1 retryRequestForError:];
}

id objc_msgSend_reverseObjectEnumerator(void *a1, const char *a2, ...)
{
  return _[a1 reverseObjectEnumerator];
}

id objc_msgSend_riServerContentForDevice_backgroundAction_(void *a1, const char *a2, ...)
{
  return [a1 riServerContentForDevice:x0 backgroundAction:x1];
}

id objc_msgSend_riServerPostIfNeeded_backgroundAction_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "riServerPostIfNeeded:backgroundAction:");
}

id objc_msgSend_riServerRemove_(void *a1, const char *a2, ...)
{
  return [a1 riServerRemove:];
}

id objc_msgSend_riServerUpdate_info_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "riServerUpdate:info:");
}

id objc_msgSend_riServerUpdate_rtiData_(void *a1, const char *a2, ...)
{
  return [a1 riServerUpdate:rtiData:];
}

id objc_msgSend_route(void *a1, const char *a2, ...)
{
  return _[a1 route];
}

id objc_msgSend_routeController(void *a1, const char *a2, ...)
{
  return _[a1 routeController];
}

id objc_msgSend_routes(void *a1, const char *a2, ...)
{
  return _[a1 routes];
}

id objc_msgSend_rpIdentity(void *a1, const char *a2, ...)
{
  return _[a1 rpIdentity];
}

id objc_msgSend_rssi(void *a1, const char *a2, ...)
{
  return _[a1 rssi];
}

id objc_msgSend_rssiChangeDetection(void *a1, const char *a2, ...)
{
  return _[a1 rssiChangeDetection];
}

id objc_msgSend_rssiEstimate(void *a1, const char *a2, ...)
{
  return _[a1 rssiEstimate];
}

id objc_msgSend_rssiFloor(void *a1, const char *a2, ...)
{
  return _[a1 rssiFloor];
}

id objc_msgSend_rssiThreshold(void *a1, const char *a2, ...)
{
  return _[a1 rssiThreshold];
}

id objc_msgSend_run(void *a1, const char *a2, ...)
{
  return _[a1 run];
}

id objc_msgSend_runWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 runWithConfiguration:];
}

id objc_msgSend_running(void *a1, const char *a2, ...)
{
  return _[a1 running];
}

id objc_msgSend_runningAsSetupUser(void *a1, const char *a2, ...)
{
  return _[a1 runningAsSetupUser];
}

id objc_msgSend_safariBundleID(void *a1, const char *a2, ...)
{
  return _[a1 safariBundleID];
}

id objc_msgSend_sampleIsTooOld_(void *a1, const char *a2, ...)
{
  return [a1 sampleIsTooOld:];
}

id objc_msgSend_sandboxExtensionsByfileURLPath(void *a1, const char *a2, ...)
{
  return _[a1 sandboxExtensionsByfileURLPath];
}

id objc_msgSend_saveAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 saveAccount:withCompletionHandler:];
}

id objc_msgSend_saveCompletedItemsToiCloudDrive(void *a1, const char *a2, ...)
{
  return _[a1 saveCompletedItemsToiCloudDrive];
}

id objc_msgSend_saveDecryptionKeyDataRepresentation_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "saveDecryptionKeyDataRepresentation:forDeviceIdentifier:");
}

id objc_msgSend_saveEncryptionKeyDataRepresentation_(void *a1, const char *a2, ...)
{
  return [a1 saveEncryptionKeyDataRepresentation:];
}

id objc_msgSend_saveKeyDataRepresentation_withBaseDict_(void *a1, const char *a2, ...)
{
  return [a1 saveKeyDataRepresentation:x0 withBaseDict:x1];
}

id objc_msgSend_saveLongTermKeys(void *a1, const char *a2, ...)
{
  return _[a1 saveLongTermKeys];
}

id objc_msgSend_savePresentedBluetoothError(void *a1, const char *a2, ...)
{
  return _[a1 savePresentedBluetoothError];
}

id objc_msgSend_savePresentedWiFiError(void *a1, const char *a2, ...)
{
  return _[a1 savePresentedWiFiError];
}

id objc_msgSend_saveRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 saveRemoteLTKs];
}

id objc_msgSend_saveToDefaultFolderWithError_(void *a1, const char *a2, ...)
{
  return [a1 saveToDefaultFolderWithError:];
}

id objc_msgSend_saveVerifiedAccount_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 saveVerifiedAccount:withCompletionHandler:];
}

id objc_msgSend_saveWatchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 saveWatchIDsToPairingRecords];
}

id objc_msgSend_scale(void *a1, const char *a2, ...)
{
  return _[a1 scale];
}

id objc_msgSend_scanAssertionTimer(void *a1, const char *a2, ...)
{
  return _[a1 scanAssertionTimer];
}

id objc_msgSend_scanAutoUnlockDevices(void *a1, const char *a2, ...)
{
  return _[a1 scanAutoUnlockDevices];
}

id objc_msgSend_scanCache(void *a1, const char *a2, ...)
{
  return _[a1 scanCache];
}

id objc_msgSend_scanErrorString(void *a1, const char *a2, ...)
{
  return _[a1 scanErrorString];
}

id objc_msgSend_scanPhoneIDs(void *a1, const char *a2, ...)
{
  return _[a1 scanPhoneIDs];
}

id objc_msgSend_scanRate(void *a1, const char *a2, ...)
{
  return _[a1 scanRate];
}

id objc_msgSend_scanRateOverride(void *a1, const char *a2, ...)
{
  return _[a1 scanRateOverride];
}

id objc_msgSend_scanResetTimer(void *a1, const char *a2, ...)
{
  return _[a1 scanResetTimer];
}

id objc_msgSend_scanState(void *a1, const char *a2, ...)
{
  return _[a1 scanState];
}

id objc_msgSend_scanStateChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 scanStateChangedHandler];
}

id objc_msgSend_scanTimer(void *a1, const char *a2, ...)
{
  return _[a1 scanTimer];
}

id objc_msgSend_scanWatchIDs(void *a1, const char *a2, ...)
{
  return _[a1 scanWatchIDs];
}

id objc_msgSend_scanner(void *a1, const char *a2, ...)
{
  return _[a1 scanner];
}

id objc_msgSend_scheduleBrowser(void *a1, const char *a2, ...)
{
  return _[a1 scheduleBrowser];
}

id objc_msgSend_scheduleDailyMetricReporterIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 scheduleDailyMetricReporterIfNeeded];
}

id objc_msgSend_scheduleInQueue_(void *a1, const char *a2, ...)
{
  return [a1 scheduleInQueue:];
}

id objc_msgSend_scheduleInRunLoop_forMode_(void *a1, const char *a2, ...)
{
  return [a1 scheduleInRunLoop:forMode:];
}

id objc_msgSend_scheduleOperation(void *a1, const char *a2, ...)
{
  return _[a1 scheduleOperation];
}

id objc_msgSend_scheduleWiFiRequest_(void *a1, const char *a2, ...)
{
  return [a1 scheduleWiFiRequest:];
}

id objc_msgSend_scheduleWithBlock_(void *a1, const char *a2, ...)
{
  return [a1 scheduleWithBlock:];
}

id objc_msgSend_scheduledTimerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 scheduledTimerWithTimeInterval:x0 target:x1 selector:x2 userInfo:x3 repeats:x4];
}

id objc_msgSend_scheme(void *a1, const char *a2, ...)
{
  return _[a1 scheme];
}

id objc_msgSend_screenLocked(void *a1, const char *a2, ...)
{
  return _[a1 screenLocked];
}

id objc_msgSend_screenOn(void *a1, const char *a2, ...)
{
  return _[a1 screenOn];
}

id objc_msgSend_screenOnStateChangedTo_(void *a1, const char *a2, ...)
{
  return [a1 screenOnStateChangedTo:];
}

id objc_msgSend_screenSaverActive(void *a1, const char *a2, ...)
{
  return _[a1 screenSaverActive];
}

id objc_msgSend_screenStateSupportsAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 screenStateSupportsAirDrop];
}

id objc_msgSend_screenTimeMonitor(void *a1, const char *a2, ...)
{
  return _[a1 screenTimeMonitor];
}

id objc_msgSend_sd_connectionBundleID(void *a1, const char *a2, ...)
{
  return [a1 sd_connectionBundleID];
}

id objc_msgSend_sd_connectionCanShareURL_(void *a1, const char *a2, ...)
{
  return [a1 sd_connectionCanShareURL:];
}

id objc_msgSend_sd_connectionProcessName(void *a1, const char *a2, ...)
{
  return [a1 sd_connectionProcessName];
}

id objc_msgSend_sd_description(void *a1, const char *a2, ...)
{
  return [a1 sd_description];
}

id objc_msgSend_searchForBrowsableDomains(void *a1, const char *a2, ...)
{
  return _[a1 searchForBrowsableDomains];
}

id objc_msgSend_searchForServicesOfType_inDomain_(void *a1, const char *a2, ...)
{
  return [a1 searchForServicesOfType:inDomain:];
}

id objc_msgSend_secTrustRef(void *a1, const char *a2, ...)
{
  return _[a1 secTrustRef];
}

id objc_msgSend_second(void *a1, const char *a2, ...)
{
  return _[a1 second];
}

id objc_msgSend_secondaryLabelColor(void *a1, const char *a2, ...)
{
  return _[a1 secondaryLabelColor];
}

id objc_msgSend_secondaryLabelColorWithHostConfiguration_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "secondaryLabelColorWithHostConfiguration:")];
}

id objc_msgSend_secondaryName(void *a1, const char *a2, ...)
{
  return _[a1 secondaryName];
}

id objc_msgSend_secondaryPlacement(void *a1, const char *a2, ...)
{
  return _[a1 secondaryPlacement];
}

id objc_msgSend_secret(void *a1, const char *a2, ...)
{
  return _[a1 secret];
}

id objc_msgSend_secureConnectionEndDate(void *a1, const char *a2, ...)
{
  return _[a1 secureConnectionEndDate];
}

id objc_msgSend_secureConnectionStartDate(void *a1, const char *a2, ...)
{
  return _[a1 secureConnectionStartDate];
}

id objc_msgSend_secureRangingKeyID(void *a1, const char *a2, ...)
{
  return _[a1 secureRangingKeyID];
}

id objc_msgSend_securityContext(void *a1, const char *a2, ...)
{
  return _[a1 securityContext];
}

id objc_msgSend_securityContexts(void *a1, const char *a2, ...)
{
  return _[a1 securityContexts];
}

id objc_msgSend_securityLevel(void *a1, const char *a2, ...)
{
  return _[a1 securityLevel];
}

id objc_msgSend_securityLevelForAccount_(void *a1, const char *a2, ...)
{
  return [a1 securityLevelForAccount:];
}

id objc_msgSend_securityManager(void *a1, const char *a2, ...)
{
  return _[a1 securityManager];
}

id objc_msgSend_securityScopedResources(void *a1, const char *a2, ...)
{
  return _[a1 securityScopedResources];
}

id objc_msgSend_securityScopedResourcesMatchingPredicate_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "securityScopedResourcesMatchingPredicate:");
}

id objc_msgSend_securityScopedURLsForMatching(void *a1, const char *a2, ...)
{
  return _[a1 securityScopedURLsForMatching];
}

id objc_msgSend_selectedAction(void *a1, const char *a2, ...)
{
  return _[a1 selectedAction];
}

id objc_msgSend_selectedApplication(void *a1, const char *a2, ...)
{
  return _[a1 selectedApplication];
}

id objc_msgSend_selectedNode(void *a1, const char *a2, ...)
{
  return _[a1 selectedNode];
}

id objc_msgSend_selectedRecipient(void *a1, const char *a2, ...)
{
  return _[a1 selectedRecipient];
}

id objc_msgSend_selectionHaptic(void *a1, const char *a2, ...)
{
  return _[a1 selectionHaptic];
}

id objc_msgSend_selectionReason(void *a1, const char *a2, ...)
{
  return _[a1 selectionReason];
}

id objc_msgSend_send(void *a1, const char *a2, ...)
{
  return _[a1 send];
}

id objc_msgSend_send_to_itemPreviewData_requestSource_(void *a1, const char *a2, ...)
{
  return [a1 send:to:itemPreviewData:requestSource:];
}

id objc_msgSend_sendAWDLInfo(void *a1, const char *a2, ...)
{
  return _[a1 sendAWDLInfo];
}

id objc_msgSend_sendAWDLInfoData_type_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendAWDLInfoData:x0 type:x1 completionHandler:x2];
}

id objc_msgSend_sendActivityPayloadRequestMessageToDevice_withRequestRecord_withDestinationDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendActivityPayloadRequestMessageToDevice:withRequestRecord:withDestinationDevice:completionHandler:];
}

id objc_msgSend_sendActivityPayloadRequestToDeviceIdentifier_withAdvertisementPayload_command_timeout_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendActivityPayloadRequestToDeviceIdentifier:withAdvertisementPayload:command:timeout:completionHandler:");
}

id objc_msgSend_sendActivityPayloadWithAdvertisementData_forAdvertisementPayload_activityIdentifier_activityPayload_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendActivityPayloadWithAdvertisementData:forAdvertisementPayload:activityIdentifier:activityPayload:");
}

id objc_msgSend_sendAirDropUpdateForSessionWithID_realName_status_progress_(void *a1, const char *a2, ...)
{
  return [a1 sendAirDropUpdateForSessionWithID:realName:status:progress:];
}

id objc_msgSend_sendAskResponse_(void *a1, const char *a2, ...)
{
  return [a1 sendAskResponse:];
}

id objc_msgSend_sendAuthPromptImageDataIfReady_(void *a1, const char *a2, ...)
{
  return [a1 sendAuthPromptImageDataIfReady:];
}

id objc_msgSend_sendAuthPromptRequestWithImageHash_appName_(void *a1, const char *a2, ...)
{
  return [a1 sendAuthPromptRequestWithImageHash:appName:];
}

id objc_msgSend_sendAuthPromptResponseWithData_error_(void *a1, const char *a2, ...)
{
  return [a1 sendAuthPromptResponseWithData:error:];
}

id objc_msgSend_sendAutoUnlockPayload_toDevice_type_sessionID_queueOneID_timeout_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendAutoUnlockPayload:toDevice:type:sessionID:queueOneID:timeout:completion:");
}

id objc_msgSend_sendClassALongTermKeyRequest_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendClassALongTermKeyRequest:sessionID:];
}

id objc_msgSend_sendClassALongTermKeyResponse_sessionID_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 sendClassALongTermKeyResponse:x0 sessionID:x1 errorCode:x2];
}

id objc_msgSend_sendConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 sendConfirmationACK];
}

id objc_msgSend_sendCreateEscrowSecretWithStepData_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendCreateEscrowSecretWithStepData:sessionID];
}

id objc_msgSend_sendCreateSecretWithStepData_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendCreateSecretWithStepData:sessionID];
}

id objc_msgSend_sendData_bleDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendData:bleDevice:completionHandler:];
}

id objc_msgSend_sendData_bleDevice_direct_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendData:bleDevice:direct:completionHandler:");
}

id objc_msgSend_sendData_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendData:completion:];
}

id objc_msgSend_sendData_type_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendData:x0 type:x1 completionHandler:x2];
}

id objc_msgSend_sendData_type_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendData:type:errorHandler:];
}

id objc_msgSend_sendDataDirect_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendDataDirect:x0 completion:x1];
}

id objc_msgSend_sendDataQueue(void *a1, const char *a2, ...)
{
  return _[a1 sendDataQueue];
}

id objc_msgSend_sendDatesByMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sendDatesByMessageIdentifier];
}

id objc_msgSend_sendDeviceLockStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 sendDeviceLockStateChanged:];
}

id objc_msgSend_sendDisableMessage(void *a1, const char *a2, ...)
{
  return _[a1 sendDisableMessage];
}

id objc_msgSend_sendDisableMessageToDeviceID_pairingID_(void *a1, const char *a2, ...)
{
  return [a1 sendDisableMessageToDeviceID:pairingID:];
}

id objc_msgSend_sendDiscoverResponse_forKnownAlias_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendDiscoverResponse:forKnownAlias:");
}

id objc_msgSend_sendEncryptionKeyRequestToDeviceIdentifier_previousKeyIdentifier_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendEncryptionKeyRequestToDeviceIdentifier:previousKeyIdentifier:completionHandler:];
}

id objc_msgSend_sendEvent_(void *a1, const char *a2, ...)
{
  return [a1 sendEvent:];
}

id objc_msgSend_sendFrameType_payload_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendFrameType:x0 payload:x1 completion:x2];
}

id objc_msgSend_sendFrameTypeDirect_payload_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendFrameTypeDirect:payload:completion:];
}

id objc_msgSend_sendIdentifierToSessionID(void *a1, const char *a2, ...)
{
  return _[a1 sendIdentifierToSessionID];
}

id objc_msgSend_sendInitialRequest(void *a1, const char *a2, ...)
{
  return _[a1 sendInitialRequest];
}

id objc_msgSend_sendInitialResponse_(void *a1, const char *a2, ...)
{
  return [a1 sendInitialResponse:];
}

id objc_msgSend_sendKeyExchangeRequestWithData_error_(void *a1, const char *a2, ...)
{
  return [a1 sendKeyExchangeRequestWithData:error:];
}

id objc_msgSend_sendKeyExchangeResponse_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendKeyExchangeResponse:sessionID];
}

id objc_msgSend_sendKeyExchangeResponseWithData_(void *a1, const char *a2, ...)
{
  return [a1 sendKeyExchangeResponseWithData:];
}

id objc_msgSend_sendLTKResponseWithPayload_viewState_needsUnlock_currentlySyncing_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendLTKResponseWithPayload:viewState:needsUnlock:currentlySyncing:");
}

id objc_msgSend_sendLongTermKeyResponse_requestID_(void *a1, const char *a2, ...)
{
  return [a1 sendLongTermKeyResponse:requestID:];
}

id objc_msgSend_sendMessage_fromAccount_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return [a1 sendMessage:x0 fromAccount:x1 toDestinations:x2 priority:x3 options:x4 identifier:x5 error:x6];
}

id objc_msgSend_sendMessage_toDeviceWithID_isRequest_messageID_error_identifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendMessage:toDeviceWithID:isRequest:messageID:error:identifier:");
}

id objc_msgSend_sendMessage_toPeer_isRequest_messageID_error_identifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendMessage:toPeer:isRequest:messageID:error:identifier:");
}

id objc_msgSend_sendMessage_withCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendMessage:withCompletionHandler:];
}

id objc_msgSend_sendOutgoingChunk_length_compressed_(void *a1, const char *a2, ...)
{
  return [a1 sendOutgoingChunk:x0 length:x1 compressed:x2];
}

id objc_msgSend_sendPayload_(void *a1, const char *a2, ...)
{
  return [a1 sendPayload:];
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_timeout_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendPayload:x0 toDevice:x1 type:x2 sessionID:x3 queueOneID:x4 timeout:x5 completion:x6];
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_timeout_errorHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:queueOneID:timeout:errorHandler:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_queueOneID_wantsACK_timeout_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:queueOneID:wantsACK:timeout:completion:");
}

id objc_msgSend_sendPayload_toDevice_type_sessionID_timeout_errorHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendPayload:toDevice:type:sessionID:timeout:errorHandler:");
}

id objc_msgSend_sendProtobuf_toDestinations_priority_options_identifier_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendProtobuf:toDestinations:priority:options:identifier:error:");
}

id objc_msgSend_sendProtocolBufferData_withType_timeout_option_dataClass_queueOneID_errorHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendProtocolBufferData:withType:timeout:option:dataClass:queueOneID:errorHandler:");
}

id objc_msgSend_sendProtocolBufferData_withType_timeout_option_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendProtocolBufferData:x0 withType:x1 timeout:x2 option:x3 errorHandler:x4];
}

id objc_msgSend_sendProtocolBufferData_withType_timeout_option_queueOneID_errorHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendProtocolBufferData:x0 withType:x1 timeout:x2 option:x3 queueOneID:x4 errorHandler:x5];
}

id objc_msgSend_sendRapportActivityPayloadRequest_withRequestRecord_completionHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendRapportActivityPayloadRequest:withRequestRecord:completionHandler:");
}

id objc_msgSend_sendRapportEncryptionKeyRequest_withRequestRecord_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendRapportEncryptionKeyRequest:withRequestRecord:completionHandler:];
}

id objc_msgSend_sendRelockRequestWithReset_(void *a1, const char *a2, ...)
{
  return [a1 sendRelockRequestWithReset:];
}

id objc_msgSend_sendRequest_(void *a1, const char *a2, ...)
{
  return [a1 sendRequest:];
}

id objc_msgSend_sendRequestID_options_request_responseHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendRequestID:options:request:responseHandler:];
}

id objc_msgSend_sendRequestID_request_destinationID_options_responseHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendRequestID:x0 request:x1 destinationID:x2 options:x3 responseHandler:x4];
}

id objc_msgSend_sendRequestID_request_options_responseHandler_(void *a1, const char *a2, ...)
{
  return [a1 sendRequestID:x0 request:x1 options:x2 responseHandler:x3];
}

id objc_msgSend_sendResetMessage_reason_(void *a1, const char *a2, ...)
{
  return [a1 sendResetMessage:reason:];
}

id objc_msgSend_sendResponse_(void *a1, const char *a2, ...)
{
  return [a1 sendResponse:];
}

id objc_msgSend_sendSessionAuthToken_error_(void *a1, const char *a2, ...)
{
  return [a1 sendSessionAuthToken:error:];
}

id objc_msgSend_sendSessionAuthenticationToken_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendSessionAuthenticationToken:sessionID:];
}

id objc_msgSend_sendSessionKeyExchangeRequest_usedEscrow_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendSessionKeyExchangeRequest:usedEscrow:sessionID:];
}

id objc_msgSend_sendSessionUnlockConfirmation_sessionID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendSessionUnlockConfirmation:sessionID:");
}

id objc_msgSend_sendSetupCreateEscrowRecordStepData_error_(void *a1, const char *a2, ...)
{
  return [a1 sendSetupCreateEscrowRecordStepData:x0 error:x1];
}

id objc_msgSend_sendSetupCreateEscrowRecordWithSessionID_stepData_errorCode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendSetupCreateEscrowRecordWithSessionID:stepData:errorCode:");
}

id objc_msgSend_sendSetupRequest(void *a1, const char *a2, ...)
{
  return _[a1 sendSetupRequest];
}

id objc_msgSend_sendSetupRequest_withSessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendSetupRequest:withSessionID:];
}

id objc_msgSend_sendSetupSessionCreatedWithLocalKey_stepData_error_failureReason_ltkSyncing_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendSetupSessionCreatedWithLocalKey:stepData:error:failureReason:ltkSyncing:")];
}

id objc_msgSend_sendSetupSessionCreatedWithLocalKey_stepData_sessionID_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 sendSetupSessionCreatedWithLocalKey:stepData:sessionID:errorCode:];
}

id objc_msgSend_sendShareSheetInvocationMetricsWithAppBundleID_numSuggestions_suggestionDisplayNames_extensionsCacheResult_isDarkMode_duration_isCollaborative_(void *a1, const char *a2, ...)
{
  return [a1 sendShareSheetInvocationMetricsWithAppBundleID:numSuggestions:suggestionDisplayNames:extensionsCacheResult:isDarkMode:duration:isCollaborative:];
}

id objc_msgSend_sendStashConfirmation_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendStashConfirmation:sessionID];
}

id objc_msgSend_sendStashKeyExchangeResponse_sessionID_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 sendStashKeyExchangeResponse:sessionID:errorCode:];
}

id objc_msgSend_sendStashKeyRequest_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 sendStashKeyRequest:sessionID:];
}

id objc_msgSend_sendStashToken_sessionID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sendStashToken:sessionID:");
}

id objc_msgSend_sendState(void *a1, const char *a2, ...)
{
  return _[a1 sendState];
}

id objc_msgSend_sendStateResponseWithUnlockEnabled_passcodeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 sendStateResponseWithUnlockEnabled:passcodeEnabled:];
}

id objc_msgSend_sendStepData_type_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 sendStepData:x0 type:x1 errorCode:x2];
}

id objc_msgSend_sendUnlockConfirmation_withError_(void *a1, const char *a2, ...)
{
  return [a1 sendUnlockConfirmation:x0 withError:x1];
}

id objc_msgSend_sendUnlockData_toBLEDevice_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendUnlockData:toBLEDevice:completion:];
}

id objc_msgSend_sendUnlockDataDirect_toBLEDevice_completion_(void *a1, const char *a2, ...)
{
  return [a1 sendUnlockDataDirect:toBLEDevice:completion:];
}

id objc_msgSend_sendUploadResponse_(void *a1, const char *a2, ...)
{
  return [a1 sendUploadResponse:];
}

id objc_msgSend_sender(void *a1, const char *a2, ...)
{
  return _[a1 sender];
}

id objc_msgSend_sender__notifyBluetoothSample_withId_forType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sender:_notifyBluetoothSample:withId:forType:");
}

id objc_msgSend_sender_notifyBluetoothSample_(void *a1, const char *a2, ...)
{
  return [a1 sender:notifyBluetoothSample:];
}

id objc_msgSend_sender_notifyBluetoothSample_forType_(void *a1, const char *a2, ...)
{
  return [a1 sender:notifyBluetoothSample:forType:];
}

id objc_msgSend_senderBundleID(void *a1, const char *a2, ...)
{
  return _[a1 senderBundleID];
}

id objc_msgSend_senderCompositeName(void *a1, const char *a2, ...)
{
  return _[a1 senderCompositeName];
}

id objc_msgSend_senderID(void *a1, const char *a2, ...)
{
  return _[a1 senderID];
}

id objc_msgSend_senderInfoAvailable(void *a1, const char *a2, ...)
{
  return _[a1 senderInfoAvailable];
}

id objc_msgSend_senderIsBlocked(void *a1, const char *a2, ...)
{
  return _[a1 senderIsBlocked];
}

id objc_msgSend_senderIsMe(void *a1, const char *a2, ...)
{
  return _[a1 senderIsMe];
}

id objc_msgSend_senderIsTrusted_(void *a1, const char *a2, ...)
{
  return [a1 senderIsTrusted:];
}

id objc_msgSend_senderName(void *a1, const char *a2, ...)
{
  return _[a1 senderName];
}

id objc_msgSend_sendingConfirmation(void *a1, const char *a2, ...)
{
  return _[a1 sendingConfirmation];
}

id objc_msgSend_sentExchangeResponse(void *a1, const char *a2, ...)
{
  return _[a1 sentExchangeResponse];
}

id objc_msgSend_sentImageData(void *a1, const char *a2, ...)
{
  return _[a1 sentImageData];
}

id objc_msgSend_sentInitialConfiguration(void *a1, const char *a2, ...)
{
  return _[a1 sentInitialConfiguration];
}

id objc_msgSend_sentLockedState(void *a1, const char *a2, ...)
{
  return _[a1 sentLockedState];
}

id objc_msgSend_serialNumber(void *a1, const char *a2, ...)
{
  return _[a1 serialNumber];
}

id objc_msgSend_serverFriendlyDescription(void *a1, const char *a2, ...)
{
  return _[a1 serverFriendlyDescription];
}

id objc_msgSend_serverNameForHost_(void *a1, const char *a2, ...)
{
  return [a1 serverNameForHost:];
}

id objc_msgSend_serverReceivedTime(void *a1, const char *a2, ...)
{
  return _[a1 serverReceivedTime];
}

id objc_msgSend_serverTrust(void *a1, const char *a2, ...)
{
  return _[a1 serverTrust];
}

id objc_msgSend_serversChanged_(void *a1, const char *a2, ...)
{
  return [a1 serversChanged:];
}

id objc_msgSend_service_account_identifier_didSendWithSuccess_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "service:account:identifier:didSendWithSuccess:error:");
}

id objc_msgSend_service_devicesChanged_(void *a1, const char *a2, ...)
{
  return [a1 service:devicesChanged:];
}

id objc_msgSend_serviceClients(void *a1, const char *a2, ...)
{
  return _[a1 serviceClients];
}

id objc_msgSend_serviceError_(void *a1, const char *a2, ...)
{
  return [a1 serviceError:];
}

id objc_msgSend_serviceFromAuthorData_(void *a1, const char *a2, ...)
{
  return [a1 serviceFromAuthorData:];
}

id objc_msgSend_serviceFromServiceName_(void *a1, const char *a2, ...)
{
  return [a1 serviceFromServiceName:];
}

id objc_msgSend_serviceHasDuplicateForBTUUID_(void *a1, const char *a2, ...)
{
  return [a1 serviceHasDuplicateForBTUUID:];
}

id objc_msgSend_serviceName(void *a1, const char *a2, ...)
{
  return _[a1 serviceName];
}

id objc_msgSend_servicePeerDisconnected_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "servicePeerDisconnected:error:");
}

id objc_msgSend_serviceQueue(void *a1, const char *a2, ...)
{
  return _[a1 serviceQueue];
}

id objc_msgSend_serviceReceivedEvent_(void *a1, const char *a2, ...)
{
  return [a1 serviceReceivedEvent:];
}

id objc_msgSend_serviceReceivedFrameType_data_peer_(void *a1, const char *a2, ...)
{
  return [a1 serviceReceivedFrameType:data:peer:];
}

id objc_msgSend_serviceReceivedFrameType_serviceType_data_peer_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "serviceReceivedFrameType:serviceType:data:peer:");
}

id objc_msgSend_serviceReceivedRequest_(void *a1, const char *a2, ...)
{
  return [a1 serviceReceivedRequest:];
}

id objc_msgSend_serviceReceivedResponse_(void *a1, const char *a2, ...)
{
  return [a1 serviceReceivedResponse:];
}

id objc_msgSend_serviceSendEvent_service_(void *a1, const char *a2, ...)
{
  return [a1 serviceSendEvent:service:];
}

id objc_msgSend_serviceSendRequest_service_(void *a1, const char *a2, ...)
{
  return [a1 serviceSendRequest:service:];
}

id objc_msgSend_serviceSendResponse_service_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "serviceSendResponse:service:");
}

id objc_msgSend_serviceStart_(void *a1, const char *a2, ...)
{
  return [a1 serviceStart:];
}

id objc_msgSend_serviceStop_(void *a1, const char *a2, ...)
{
  return [a1 serviceStop:];
}

id objc_msgSend_serviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 serviceTimer];
}

id objc_msgSend_serviceType(void *a1, const char *a2, ...)
{
  return _[a1 serviceType];
}

id objc_msgSend_serviceUUID(void *a1, const char *a2, ...)
{
  return _[a1 serviceUUID];
}

id objc_msgSend_servicesContainIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 servicesContainIdentifier:];
}

id objc_msgSend_session_didBeginAttemptWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 session:didBeginAttemptWithDevice:];
}

id objc_msgSend_session_didCompleteUnlockWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 session:didCompleteUnlockWithDevice:];
}

id objc_msgSend_session_didCompleteWithError_(void *a1, const char *a2, ...)
{
  return [a1 session:didCompleteWithError:];
}

id objc_msgSend_session_didConnectNearbySharingInteractionWithEndpointUUID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "session:didConnectNearbySharingInteractionWithEndpointUUID:");
}

id objc_msgSend_session_didEnableWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 session:didEnableWithDevice:];
}

id objc_msgSend_session_didFailToEnableDevice_error_(void *a1, const char *a2, ...)
{
  return [a1 session:didFailToEnableDevice:error:];
}

id objc_msgSend_session_didFailUnlockWithResults_error_incrementedAttempt_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "session:didFailUnlockWithResults:error:incrementedAttempt:");
}

id objc_msgSend_session_didReceiveKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 session:didReceiveKeyDeviceLocked:];
}

id objc_msgSend_sessionAuthToken(void *a1, const char *a2, ...)
{
  return _[a1 sessionAuthToken];
}

id objc_msgSend_sessionBluetoothStateChanged_(void *a1, const char *a2, ...)
{
  return [a1 sessionBluetoothStateChanged:];
}

id objc_msgSend_sessionCompleted(void *a1, const char *a2, ...)
{
  return _[a1 sessionCompleted];
}

id objc_msgSend_sessionCreated(void *a1, const char *a2, ...)
{
  return _[a1 sessionCreated];
}

id objc_msgSend_sessionCreatedMessage(void *a1, const char *a2, ...)
{
  return _[a1 sessionCreatedMessage];
}

id objc_msgSend_sessionDidChange_(void *a1, const char *a2, ...)
{
  return [a1 sessionDidChange:];
}

id objc_msgSend_sessionDidReceiveKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 sessionDidReceiveKeyDeviceLocked:];
}

id objc_msgSend_sessionDidSendInitialData_(void *a1, const char *a2, ...)
{
  return [a1 sessionDidSendInitialData:];
}

id objc_msgSend_sessionDidStartConnection_(void *a1, const char *a2, ...)
{
  return [a1 sessionDidStartConnection:];
}

id objc_msgSend_sessionError_(void *a1, const char *a2, ...)
{
  return [a1 sessionError:];
}

id objc_msgSend_sessionFlags(void *a1, const char *a2, ...)
{
  return _[a1 sessionFlags];
}

id objc_msgSend_sessionID(void *a1, const char *a2, ...)
{
  return _[a1 sessionID];
}

id objc_msgSend_sessionIDToShareSheetSession(void *a1, const char *a2, ...)
{
  return _[a1 sessionIDToShareSheetSession];
}

id objc_msgSend_sessionIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 sessionIdentifier];
}

id objc_msgSend_sessionIsValid(void *a1, const char *a2, ...)
{
  return _[a1 sessionIsValid];
}

id objc_msgSend_sessionKeyExistsForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 sessionKeyExistsForDeviceID:];
}

id objc_msgSend_sessionKeyForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 sessionKeyForDeviceID:];
}

id objc_msgSend_sessionManagerQueue(void *a1, const char *a2, ...)
{
  return _[a1 sessionManagerQueue];
}

id objc_msgSend_sessionQueue(void *a1, const char *a2, ...)
{
  return _[a1 sessionQueue];
}

id objc_msgSend_sessionRangingKey(void *a1, const char *a2, ...)
{
  return _[a1 sessionRangingKey];
}

id objc_msgSend_sessionReceivedEvent_(void *a1, const char *a2, ...)
{
  return [a1 sessionReceivedEvent:];
}

id objc_msgSend_sessionReceivedFrameType_data_(void *a1, const char *a2, ...)
{
  return [a1 sessionReceivedFrameType:x0 data:x1];
}

id objc_msgSend_sessionReceivedFrameType_serviceType_data_peer_(void *a1, const char *a2, ...)
{
  return [a1 sessionReceivedFrameType:x0 serviceType:x1 data:x2 peer:x3];
}

id objc_msgSend_sessionReceivedRequest_(void *a1, const char *a2, ...)
{
  return [a1 sessionReceivedRequest:];
}

id objc_msgSend_sessionReceivedResponse_(void *a1, const char *a2, ...)
{
  return [a1 sessionReceivedResponse:];
}

id objc_msgSend_sessionSendEvent_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sessionSendEvent:session:");
}

id objc_msgSend_sessionSendRequest_session_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sessionSendRequest:session:");
}

id objc_msgSend_sessionSendResponse_session_(void *a1, const char *a2, ...)
{
  return [a1 sessionSendResponse:a2 session:a3];
}

id objc_msgSend_sessionStart_(void *a1, const char *a2, ...)
{
  return [a1 sessionStart:];
}

id objc_msgSend_sessionStop_(void *a1, const char *a2, ...)
{
  return [a1 sessionStop:];
}

id objc_msgSend_sessionType(void *a1, const char *a2, ...)
{
  return _[a1 sessionType];
}

id objc_msgSend_sessionWithConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 sessionWithConfiguration:];
}

id objc_msgSend_sessionWithConfiguration_delegate_delegateQueue_(void *a1, const char *a2, ...)
{
  return [a1 sessionWithConfiguration:x0 delegate:x1 delegateQueue:x2];
}

id objc_msgSend_set(void *a1, const char *a2, ...)
{
  return _[a1 set];
}

id objc_msgSend_setAPWakesAllowed_(void *a1, const char *a2, ...)
{
  return [a1 setAPWakesAllowed:];
}

id objc_msgSend_setAccelerometerMotion_(void *a1, const char *a2, ...)
{
  return [a1 setAccelerometerMotion:];
}

id objc_msgSend_setAccelerometerUpdateInterval_(void *a1, const char *a2, ...)
{
  return [a1 setAccelerometerUpdateInterval:];
}

id objc_msgSend_setAcceptor_(void *a1, const char *a2, ...)
{
  return [a1 setAcceptor:];
}

id objc_msgSend_setAccessoryCategory_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryCategory:];
}

id objc_msgSend_setAccessoryID_(void *a1, const char *a2, ...)
{
  return [a1 setAccessoryID:];
}

id objc_msgSend_setAccount_(void *a1, const char *a2, ...)
{
  return [a1 setAccount:];
}

id objc_msgSend_setAccountID_(void *a1, const char *a2, ...)
{
  return [a1 setAccountID:];
}

id objc_msgSend_setAccountIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setAccountIdentifier:];
}

id objc_msgSend_setActionActivities_(void *a1, const char *a2, ...)
{
  return [a1 setActionActivities:];
}

id objc_msgSend_setActionActivitiesByUUID_(void *a1, const char *a2, ...)
{
  return [a1 setActionActivitiesByUUID:];
}

id objc_msgSend_setActionActivitiesInUserOrder_(void *a1, const char *a2, ...)
{
  return [a1 setActionActivitiesInUserOrder:];
}

id objc_msgSend_setActionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setActionHandler:];
}

id objc_msgSend_setActionProxies_(void *a1, const char *a2, ...)
{
  return [a1 setActionProxies:];
}

id objc_msgSend_setActionUserDefaults_(void *a1, const char *a2, ...)
{
  return [a1 setActionUserDefaults:];
}

id objc_msgSend_setActivateAction_(void *a1, const char *a2, ...)
{
  return [a1 setActivateAction:];
}

id objc_msgSend_setActivateCalled_(void *a1, const char *a2, ...)
{
  return [a1 setActivateCalled:];
}

id objc_msgSend_setActiveAirDropActivity_(void *a1, const char *a2, ...)
{
  return [a1 setActiveAirDropActivity:];
}

id objc_msgSend_setActiveConnection_(void *a1, const char *a2, ...)
{
  return [a1 setActiveConnection:];
}

id objc_msgSend_setActiveConnections_(void *a1, const char *a2, ...)
{
  return [a1 setActiveConnections:];
}

id objc_msgSend_setActivity_asHidden_(void *a1, const char *a2, ...)
{
  return [a1 setActivity:asHidden:];
}

id objc_msgSend_setActivityFooter_(void *a1, const char *a2, ...)
{
  return [a1 setActivityFooter:];
}

id objc_msgSend_setActivityHelper_(void *a1, const char *a2, ...)
{
  return [a1 setActivityHelper:];
}

id objc_msgSend_setActivityIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIdentifier:];
}

id objc_msgSend_setActivityIdentifierCopy_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIdentifierCopy:];
}

id objc_msgSend_setActivityIdentifierOpen_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIdentifierOpen:];
}

id objc_msgSend_setActivityIdentifierShare_(void *a1, const char *a2, ...)
{
  return [a1 setActivityIdentifierShare:];
}

id objc_msgSend_setActivityManager_(void *a1, const char *a2, ...)
{
  return [a1 setActivityManager:];
}

id objc_msgSend_setActivityMotion_(void *a1, const char *a2, ...)
{
  return [a1 setActivityMotion:];
}

id objc_msgSend_setActivityTitle_(void *a1, const char *a2, ...)
{
  return [a1 setActivityTitle:];
}

id objc_msgSend_setActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setActivityType:];
}

id objc_msgSend_setActivityTypesGeneratedByDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setActivityTypesGeneratedByDelegate:];
}

id objc_msgSend_setActualHandles_(void *a1, const char *a2, ...)
{
  return [a1 setActualHandles:];
}

id objc_msgSend_setAdapterFamilyCode_(void *a1, const char *a2, ...)
{
  return [a1 setAdapterFamilyCode:];
}

id objc_msgSend_setAdapterSharedSource_(void *a1, const char *a2, ...)
{
  return [a1 setAdapterSharedSource:];
}

id objc_msgSend_setAdapterSourceID_(void *a1, const char *a2, ...)
{
  return [a1 setAdapterSourceID:];
}

id objc_msgSend_setAdditionalInfo_(void *a1, const char *a2, ...)
{
  return [a1 setAdditionalInfo:];
}

id objc_msgSend_setAdvertiseRate_(void *a1, const char *a2, ...)
{
  return [a1 setAdvertiseRate:];
}

id objc_msgSend_setAdvertisementData_(void *a1, const char *a2, ...)
{
  return [a1 setAdvertisementData:];
}

id objc_msgSend_setAdvertisementFields_(void *a1, const char *a2, ...)
{
  return [a1 setAdvertisementFields:];
}

id objc_msgSend_setAdvertisementPayload_(void *a1, const char *a2, ...)
{
  return [a1 setAdvertisementPayload:];
}

id objc_msgSend_setAgent_(void *a1, const char *a2, ...)
{
  return [a1 setAgent:];
}

id objc_msgSend_setAggregate_(void *a1, const char *a2, ...)
{
  return [a1 setAggregate:];
}

id objc_msgSend_setAirDropAllowed_(void *a1, const char *a2, ...)
{
  return [a1 setAirDropAllowed:];
}

id objc_msgSend_setAirDropController_(void *a1, const char *a2, ...)
{
  return [a1 setAirDropController:];
}

id objc_msgSend_setAirDropNodes_(void *a1, const char *a2, ...)
{
  return [a1 setAirDropNodes:];
}

id objc_msgSend_setAirDropPeople_(void *a1, const char *a2, ...)
{
  return [a1 setAirDropPeople:];
}

id objc_msgSend_setAirDropPublished_(void *a1, const char *a2, ...)
{
  return [a1 setAirDropPublished:];
}

id objc_msgSend_setAirplaneMode_(void *a1, const char *a2, ...)
{
  return [a1 setAirplaneMode:];
}

id objc_msgSend_setAirplaneModeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setAirplaneModeEnabled:];
}

id objc_msgSend_setAksSession_(void *a1, const char *a2, ...)
{
  return [a1 setAksSession:];
}

id objc_msgSend_setAksSessionID_(void *a1, const char *a2, ...)
{
  return [a1 setAksSessionID:];
}

id objc_msgSend_setAksSuccess_(void *a1, const char *a2, ...)
{
  return [a1 setAksSuccess:];
}

id objc_msgSend_setAksToken_(void *a1, const char *a2, ...)
{
  return [a1 setAksToken:];
}

id objc_msgSend_setAlerted_(void *a1, const char *a2, ...)
{
  return [a1 setAlerted:];
}

id objc_msgSend_setAllowMatchingBuiltInActivities_(void *a1, const char *a2, ...)
{
  return [a1 setAllowMatchingBuiltInActivities:];
}

id objc_msgSend_setAllowMatchingExtensionActivities_(void *a1, const char *a2, ...)
{
  return [a1 setAllowMatchingExtensionActivities:];
}

id objc_msgSend_setAllowedDevices_(void *a1, const char *a2, ...)
{
  return [a1 setAllowedDevices:];
}

id objc_msgSend_setAltDSID_(void *a1, const char *a2, ...)
{
  return [a1 setAltDSID:];
}

id objc_msgSend_setAlternateButtonTitle_(void *a1, const char *a2, ...)
{
  return [a1 setAlternateButtonTitle:];
}

id objc_msgSend_setAppBundleId_(void *a1, const char *a2, ...)
{
  return [a1 setAppBundleId:];
}

id objc_msgSend_setAppID_(void *a1, const char *a2, ...)
{
  return [a1 setAppID:];
}

id objc_msgSend_setAppLink_(void *a1, const char *a2, ...)
{
  return [a1 setAppLink:];
}

id objc_msgSend_setAppName_(void *a1, const char *a2, ...)
{
  return [a1 setAppName:];
}

id objc_msgSend_setApplicationBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationBundleIdentifier:];
}

id objc_msgSend_setApplicationProxy_(void *a1, const char *a2, ...)
{
  return [a1 setApplicationProxy:];
}

id objc_msgSend_setAssertionTimer_(void *a1, const char *a2, ...)
{
  return [a1 setAssertionTimer:];
}

id objc_msgSend_setAssetBundlePath_(void *a1, const char *a2, ...)
{
  return [a1 setAssetBundlePath:];
}

id objc_msgSend_setAssetIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setAssetIdentifiers:];
}

id objc_msgSend_setAttachmentURL_(void *a1, const char *a2, ...)
{
  return [a1 setAttachmentURL:];
}

id objc_msgSend_setAttachments_(void *a1, const char *a2, ...)
{
  return [a1 setAttachments:];
}

id objc_msgSend_setAttemptActivatedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptActivatedHandler:];
}

id objc_msgSend_setAttemptAppName_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptAppName:];
}

id objc_msgSend_setAttemptBundlePath_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptBundlePath:];
}

id objc_msgSend_setAttemptCount_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptCount:];
}

id objc_msgSend_setAttemptDevice_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptDevice:];
}

id objc_msgSend_setAttemptError_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptError:];
}

id objc_msgSend_setAttemptExternalACMContext_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptExternalACMContext:];
}

id objc_msgSend_setAttemptHourLocal_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptHourLocal];
}

id objc_msgSend_setAttemptID_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptID:];
}

id objc_msgSend_setAttemptInProgress_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptInProgress:];
}

id objc_msgSend_setAttemptNavBarTitle_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptNavBarTitle:];
}

id objc_msgSend_setAttemptPrewarmed_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptPrewarmed:];
}

id objc_msgSend_setAttemptStart_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptStart:];
}

id objc_msgSend_setAttemptStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptStartDate:];
}

id objc_msgSend_setAttemptTime_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptTime:];
}

id objc_msgSend_setAttemptTimedOut_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptTimedOut:];
}

id objc_msgSend_setAttemptType_(void *a1, const char *a2, ...)
{
  return [a1 setAttemptType:];
}

id objc_msgSend_setAttribute_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 setAttribute:forKey:error:];
}

id objc_msgSend_setAudioRoutingScore_(void *a1, const char *a2, ...)
{
  return [a1 setAudioRoutingScore:];
}

id objc_msgSend_setAuditToken_(void *a1, const char *a2, ...)
{
  return [a1 setAuditToken:];
}

id objc_msgSend_setAuthPrompt_(void *a1, const char *a2, ...)
{
  return [a1 setAuthPrompt:];
}

id objc_msgSend_setAuthPromptIconData_(void *a1, const char *a2, ...)
{
  return [a1 setAuthPromptIconData:];
}

id objc_msgSend_setAuthPromptIconHash_(void *a1, const char *a2, ...)
{
  return [a1 setAuthPromptIconHash:];
}

id objc_msgSend_setAuthSessionError_(void *a1, const char *a2, ...)
{
  return [a1 setAuthSessionError:];
}

id objc_msgSend_setAuthTag_(void *a1, const char *a2, ...)
{
  return [a1 setAuthTag:];
}

id objc_msgSend_setAuthToken_(void *a1, const char *a2, ...)
{
  return [a1 setAuthToken:];
}

id objc_msgSend_setAuthenticatingForSiri_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticatingForSiri:];
}

id objc_msgSend_setAuthenticationType_(void *a1, const char *a2, ...)
{
  return [a1 setAuthenticationType:];
}

id objc_msgSend_setAutoUnlockActive_(void *a1, const char *a2, ...)
{
  return [a1 setAutoUnlockActive:];
}

id objc_msgSend_setAutoUnlockDisabledDueToManagement_(void *a1, const char *a2, ...)
{
  return [a1 setAutoUnlockDisabledDueToManagement:];
}

id objc_msgSend_setAutoUnlockEnabledUpdatedAfterFirstUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setAutoUnlockEnabledUpdatedAfterFirstUnlock:];
}

id objc_msgSend_setAvailableApplications_(void *a1, const char *a2, ...)
{
  return [a1 setAvailableApplications:];
}

id objc_msgSend_setAvailableNodesChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setAvailableNodesChangedHandler:];
}

id objc_msgSend_setAvatarImageSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setAvatarImageSlotID:];
}

id objc_msgSend_setAwdlInfo_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlInfo:];
}

id objc_msgSend_setAwdlInfoExchange_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlInfoExchange:];
}

id objc_msgSend_setAwdlInterval_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlInterval:];
}

id objc_msgSend_setAwdlNetwork_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlNetwork:];
}

id objc_msgSend_setAwdlStart_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlStart:];
}

id objc_msgSend_setAwdlStartFailed_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlStartFailed:];
}

id objc_msgSend_setAwdlStartedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlStartedHandler:];
}

id objc_msgSend_setAwdlStarting_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlStarting:];
}

id objc_msgSend_setAwdlTimer_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlTimer:];
}

id objc_msgSend_setAwdlTimerFired_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlTimerFired:];
}

id objc_msgSend_setAwdlTotal_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlTotal:];
}

id objc_msgSend_setAwdlUp_(void *a1, const char *a2, ...)
{
  return [a1 setAwdlUp:];
}

id objc_msgSend_setBaseAcceleration_(void *a1, const char *a2, ...)
{
  return [a1 setBaseAcceleration:];
}

id objc_msgSend_setBaseAccelerationSet_(void *a1, const char *a2, ...)
{
  return [a1 setBaseAccelerationSet:];
}

id objc_msgSend_setBatteryInfo_(void *a1, const char *a2, ...)
{
  return [a1 setBatteryInfo:];
}

id objc_msgSend_setBatteryLevel_(void *a1, const char *a2, ...)
{
  return [a1 setBatteryLevel:];
}

id objc_msgSend_setBatteryState_(void *a1, const char *a2, ...)
{
  return [a1 setBatteryState:];
}

id objc_msgSend_setBatteryType_(void *a1, const char *a2, ...)
{
  return [a1 setBatteryType:];
}

id objc_msgSend_setBleDevice_(void *a1, const char *a2, ...)
{
  return [a1 setBleDevice:];
}

id objc_msgSend_setBleEncrypted_(void *a1, const char *a2, ...)
{
  return [a1 setBleEncrypted:];
}

id objc_msgSend_setBleScanRate_(void *a1, const char *a2, ...)
{
  return [a1 setBleScanRate:];
}

id objc_msgSend_setBleScanRateScreenOff_(void *a1, const char *a2, ...)
{
  return [a1 setBleScanRateScreenOff:];
}

id objc_msgSend_setBluetoothAddress_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothAddress:];
}

id objc_msgSend_setBluetoothAddressChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothAddressChangedHandler:];
}

id objc_msgSend_setBluetoothCloudPaired_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothCloudPaired:];
}

id objc_msgSend_setBluetoothEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothEnabled:];
}

id objc_msgSend_setBluetoothErrorCount_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothErrorCount:];
}

id objc_msgSend_setBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothID:];
}

id objc_msgSend_setBluetoothStateChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBluetoothStateChangedHandler:];
}

id objc_msgSend_setBody_(void *a1, const char *a2, ...)
{
  return [a1 setBody:];
}

id objc_msgSend_setBodyData_(void *a1, const char *a2, ...)
{
  return [a1 setBodyData:];
}

id objc_msgSend_setBodyKey_(void *a1, const char *a2, ...)
{
  return [a1 setBodyKey:];
}

id objc_msgSend_setBonjourBrowserMode_(void *a1, const char *a2, ...)
{
  return [a1 setBonjourBrowserMode:];
}

id objc_msgSend_setBonjourPTRDiscovery_(void *a1, const char *a2, ...)
{
  return [a1 setBonjourPTRDiscovery:];
}

id objc_msgSend_setBonjourResolveComplete_(void *a1, const char *a2, ...)
{
  return [a1 setBonjourResolveComplete:];
}

id objc_msgSend_setBonjourTXTRecordDiscovery_(void *a1, const char *a2, ...)
{
  return [a1 setBonjourTXTRecordDiscovery:];
}

id objc_msgSend_setBool_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setBool:forKey:];
}

id objc_msgSend_setBoostMessage_(void *a1, const char *a2, ...)
{
  return [a1 setBoostMessage:];
}

id objc_msgSend_setBoostNearbyInfo_(void *a1, const char *a2, ...)
{
  return [a1 setBoostNearbyInfo:];
}

id objc_msgSend_setBooted_(void *a1, const char *a2, ...)
{
  return [a1 setBooted:];
}

id objc_msgSend_setBottomLabelSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setBottomLabelSlotID:];
}

id objc_msgSend_setBrowseAgent_(void *a1, const char *a2, ...)
{
  return [a1 setBrowseAgent:];
}

id objc_msgSend_setBrowseStartTime_(void *a1, const char *a2, ...)
{
  return [a1 setBrowseStartTime:];
}

id objc_msgSend_setBrowsing_(void *a1, const char *a2, ...)
{
  return [a1 setBrowsing:];
}

id objc_msgSend_setBtAddr_(void *a1, const char *a2, ...)
{
  return [a1 setBtAddr:];
}

id objc_msgSend_setBtBootstrap_(void *a1, const char *a2, ...)
{
  return [a1 setBtBootstrap:];
}

id objc_msgSend_setBtOverall_(void *a1, const char *a2, ...)
{
  return [a1 setBtOverall:];
}

id objc_msgSend_setBufferSize_socket_(void *a1, const char *a2, ...)
{
  return [a1 setBufferSize:socket:];
}

id objc_msgSend_setBufferedDeviceFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setBufferedDeviceFoundHandler:];
}

id objc_msgSend_setBufferedDevicesPurgeBlock_(void *a1, const char *a2, ...)
{
  return [a1 setBufferedDevicesPurgeBlock:];
}

id objc_msgSend_setBundleID_(void *a1, const char *a2, ...)
{
  return [a1 setBundleID:];
}

id objc_msgSend_setBundleIDToActivities_(void *a1, const char *a2, ...)
{
  return [a1 setBundleIDToActivities:];
}

id objc_msgSend_setBundleId_(void *a1, const char *a2, ...)
{
  return [a1 setBundleId:];
}

id objc_msgSend_setBundleProxy_(void *a1, const char *a2, ...)
{
  return [a1 setBundleProxy:];
}

id objc_msgSend_setByAddingObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObjectsFromArray:];
}

id objc_msgSend_setByAddingObjectsFromSet_(void *a1, const char *a2, ...)
{
  return [a1 setByAddingObjectsFromSet:];
}

id objc_msgSend_setCacheAccessInfo_(void *a1, const char *a2, ...)
{
  return [a1 setCacheAccessInfo:];
}

id objc_msgSend_setCacheFileCount_(void *a1, const char *a2, ...)
{
  return [a1 setCacheFileCount:];
}

id objc_msgSend_setCacheLookupKey_(void *a1, const char *a2, ...)
{
  return [a1 setCacheLookupKey:];
}

id objc_msgSend_setCacheReady_(void *a1, const char *a2, ...)
{
  return [a1 setCacheReady:];
}

id objc_msgSend_setCachedApproveBluetoothIDs_(void *a1, const char *a2, ...)
{
  return [a1 setCachedApproveBluetoothIDs:];
}

id objc_msgSend_setCachedBluetoothIDToUniqueIDs_(void *a1, const char *a2, ...)
{
  return [a1 setCachedBluetoothIDToUniqueIDs];
}

id objc_msgSend_setCachedDeviceWiFiState_(void *a1, const char *a2, ...)
{
  return [a1 setCachedDeviceWiFiState:];
}

id objc_msgSend_setCachedMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setCachedMetrics:];
}

id objc_msgSend_setCachedSessionKeys_(void *a1, const char *a2, ...)
{
  return [a1 setCachedSessionKeys:];
}

id objc_msgSend_setCallChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCallChangedHandler:];
}

id objc_msgSend_setCalledAWDLStarted_(void *a1, const char *a2, ...)
{
  return [a1 setCalledAWDLStarted:];
}

id objc_msgSend_setCanEdit_(void *a1, const char *a2, ...)
{
  return [a1 setCanEdit:];
}

id objc_msgSend_setCanHide_(void *a1, const char *a2, ...)
{
  return [a1 setCanHide:];
}

id objc_msgSend_setCanMove_(void *a1, const char *a2, ...)
{
  return [a1 setCanMove:];
}

id objc_msgSend_setCanRelock_(void *a1, const char *a2, ...)
{
  return [a1 setCanRelock:];
}

id objc_msgSend_setCanUnlockDevice_(void *a1, const char *a2, ...)
{
  return [a1 setCanUnlockDevice:];
}

id objc_msgSend_setCancelAction_(void *a1, const char *a2, ...)
{
  return [a1 setCancelAction:];
}

id objc_msgSend_setCanceled_(void *a1, const char *a2, ...)
{
  return [a1 setCanceled:];
}

id objc_msgSend_setCancellationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCancellationHandler:];
}

id objc_msgSend_setCategoryID_(void *a1, const char *a2, ...)
{
  return [a1 setCategoryID:];
}

id objc_msgSend_setCategoryIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCategoryIdentifier:];
}

id objc_msgSend_setCertificateExpirationDate_(void *a1, const char *a2, ...)
{
  return [a1 setCertificateExpirationDate:];
}

id objc_msgSend_setCertificatePersistentReference_(void *a1, const char *a2, ...)
{
  return [a1 setCertificatePersistentReference:];
}

id objc_msgSend_setCertificateToken_(void *a1, const char *a2, ...)
{
  return [a1 setCertificateToken:];
}

id objc_msgSend_setCertificateToken_privateKeyPersistentReference_forAppleID_(void *a1, const char *a2, ...)
{
  return [a1 setCertificateToken:privateKeyPersistentReference:forAppleID:];
}

id objc_msgSend_setCertificateTokenCreationDate_(void *a1, const char *a2, ...)
{
  return [a1 setCertificateTokenCreationDate:];
}

id objc_msgSend_setCertificateTokenHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCertificateTokenHandler:];
}

id objc_msgSend_setChangeFlags_(void *a1, const char *a2, ...)
{
  return [a1 setChangeFlags:];
}

id objc_msgSend_setChannelFlags_(void *a1, const char *a2, ...)
{
  return [a1 setChannelFlags:];
}

id objc_msgSend_setChargeLevel_(void *a1, const char *a2, ...)
{
  return [a1 setChargeLevel:];
}

id objc_msgSend_setCharging_(void *a1, const char *a2, ...)
{
  return [a1 setCharging:];
}

id objc_msgSend_setCheckedActivityData_(void *a1, const char *a2, ...)
{
  return [a1 setCheckedActivityData:];
}

id objc_msgSend_setCheckedCert_(void *a1, const char *a2, ...)
{
  return [a1 setCheckedCert:];
}

id objc_msgSend_setCheckedStepData_(void *a1, const char *a2, ...)
{
  return [a1 setCheckedStepData:];
}

id objc_msgSend_setChosenDevice_(void *a1, const char *a2, ...)
{
  return [a1 setChosenDevice:];
}

id objc_msgSend_setClass_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return [a1 setClass:forSelector:argumentIndex:ofReply:];
}

id objc_msgSend_setClasses_forSelector_argumentIndex_ofReply_(void *a1, const char *a2, ...)
{
  return [a1 setClasses:forSelector:argumentIndex:ofReply:];
}

id objc_msgSend_setClassroomDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setClassroomDelegate:];
}

id objc_msgSend_setClientBundleID_(void *a1, const char *a2, ...)
{
  return [a1 setClientBundleID:];
}

id objc_msgSend_setClientInputStream_(void *a1, const char *a2, ...)
{
  return [a1 setClientInputStream:];
}

id objc_msgSend_setClientOutputStream_(void *a1, const char *a2, ...)
{
  return [a1 setClientOutputStream:];
}

id objc_msgSend_setClientPid_(void *a1, const char *a2, ...)
{
  return [a1 setClientPid:];
}

id objc_msgSend_setClientProvidedError_(void *a1, const char *a2, ...)
{
  return [a1 setClientProvidedError:];
}

id objc_msgSend_setClientProxy_(void *a1, const char *a2, ...)
{
  return [a1 setClientProxy:];
}

id objc_msgSend_setClientSession_(void *a1, const char *a2, ...)
{
  return [a1 setClientSession:];
}

id objc_msgSend_setClinkDevice_(void *a1, const char *a2, ...)
{
  return [a1 setClinkDevice:];
}

id objc_msgSend_setCloseProximityEstimatorMedium_(void *a1, const char *a2, ...)
{
  return [a1 setCloseProximityEstimatorMedium:];
}

id objc_msgSend_setCloseProximityEstimatorSmall_(void *a1, const char *a2, ...)
{
  return [a1 setCloseProximityEstimatorSmall:];
}

id objc_msgSend_setCloudPairRetryRecords_(void *a1, const char *a2, ...)
{
  return [a1 setCloudPairRetryRecords:];
}

id objc_msgSend_setCollaborativeMode_contentIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCollaborativeMode:contentIdentifier:];
}

id objc_msgSend_setCombinedFileURLsAndItems_(void *a1, const char *a2, ...)
{
  return [a1 setCombinedFileURLsAndItems:];
}

id objc_msgSend_setCommand_(void *a1, const char *a2, ...)
{
  return [a1 setCommand:];
}

id objc_msgSend_setCompanionCurrentlySyncing_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionCurrentlySyncing:];
}

id objc_msgSend_setCompanionDeviceModel_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionDeviceModel:];
}

id objc_msgSend_setCompanionID_forWatchID_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionID:forWatchID:];
}

id objc_msgSend_setCompanionLinkClient_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionLinkClient:];
}

id objc_msgSend_setCompanionNeedsUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionNeedsUnlock:];
}

id objc_msgSend_setCompanionViewNotSyncing_(void *a1, const char *a2, ...)
{
  return [a1 setCompanionViewNotSyncing:];
}

id objc_msgSend_setCompleteExchange_(void *a1, const char *a2, ...)
{
  return [a1 setCompleteExchange:];
}

id objc_msgSend_setCompletedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCompletedHandler:];
}

id objc_msgSend_setCompletedURLs_(void *a1, const char *a2, ...)
{
  return [a1 setCompletedURLs:];
}

id objc_msgSend_setCompletedUnitCount_(void *a1, const char *a2, ...)
{
  return [a1 setCompletedUnitCount:];
}

id objc_msgSend_setCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setCompletion:];
}

id objc_msgSend_setCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionBlock:];
}

id objc_msgSend_setCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setCompletionHandler:];
}

id objc_msgSend_setConfigChangeType_(void *a1, const char *a2, ...)
{
  return [a1 setConfigChangeType:];
}

id objc_msgSend_setConfirmation_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmation:];
}

id objc_msgSend_setConfirmationDuration_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmationDuration:];
}

id objc_msgSend_setConfirmationReceived_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmationReceived:];
}

id objc_msgSend_setConfirmationSendDate_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmationSendDate:];
}

id objc_msgSend_setConfirmationTimer_(void *a1, const char *a2, ...)
{
  return [a1 setConfirmationTimer:];
}

id objc_msgSend_setConnectOnly_(void *a1, const char *a2, ...)
{
  return [a1 setConnectOnly:];
}

id objc_msgSend_setConnected_(void *a1, const char *a2, ...)
{
  return [a1 setConnected:];
}

id objc_msgSend_setConnectedBluetoothDevices_(void *a1, const char *a2, ...)
{
  return [a1 setConnectedBluetoothDevices:];
}

id objc_msgSend_setConnectedServices_(void *a1, const char *a2, ...)
{
  return [a1 setConnectedServices:];
}

id objc_msgSend_setConnection_(void *a1, const char *a2, ...)
{
  return [a1 setConnection:];
}

id objc_msgSend_setConnectionDate_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionDate:];
}

id objc_msgSend_setConnectionProxyDictionary_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionProxyDictionary:];
}

id objc_msgSend_setConnectionState_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionState:];
}

id objc_msgSend_setConnectionTime_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionTime:];
}

id objc_msgSend_setConnectionWaitTime_(void *a1, const char *a2, ...)
{
  return [a1 setConnectionWaitTime:];
}

id objc_msgSend_setContactID_(void *a1, const char *a2, ...)
{
  return [a1 setContactID:];
}

id objc_msgSend_setContactIDs_(void *a1, const char *a2, ...)
{
  return [a1 setContactIDs:];
}

id objc_msgSend_setContactIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setContactIdentifier:];
}

id objc_msgSend_setContactInfo_(void *a1, const char *a2, ...)
{
  return [a1 setContactInfo:];
}

id objc_msgSend_setContacts_(void *a1, const char *a2, ...)
{
  return [a1 setContacts:];
}

id objc_msgSend_setContactsIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setContactsIdentifiers:];
}

id objc_msgSend_setContactsOnly_(void *a1, const char *a2, ...)
{
  return [a1 setContactsOnly:];
}

id objc_msgSend_setContentSizeCategory_(void *a1, const char *a2, ...)
{
  return [a1 setContentSizeCategory:];
}

id objc_msgSend_setContentText_(void *a1, const char *a2, ...)
{
  return [a1 setContentText:];
}

id objc_msgSend_setContentURL_(void *a1, const char *a2, ...)
{
  return [a1 setContentURL:];
}

id objc_msgSend_setContentURLSandboxExtension_(void *a1, const char *a2, ...)
{
  return [a1 setContentURLSandboxExtension:];
}

id objc_msgSend_setContentsDescription_(void *a1, const char *a2, ...)
{
  return [a1 setContentsDescription:];
}

id objc_msgSend_setContentsTitle_(void *a1, const char *a2, ...)
{
  return [a1 setContentsTitle:];
}

id objc_msgSend_setControlFlags_(void *a1, const char *a2, ...)
{
  return [a1 setControlFlags:];
}

id objc_msgSend_setConversationIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setConversationIdentifier:];
}

id objc_msgSend_setConversionDestination_(void *a1, const char *a2, ...)
{
  return [a1 setConversionDestination:];
}

id objc_msgSend_setConversionNeeded_(void *a1, const char *a2, ...)
{
  return [a1 setConversionNeeded:];
}

id objc_msgSend_setCounterpartIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setCounterpartIdentifier:];
}

id objc_msgSend_setCredential_forAccount_serviceID_error_(void *a1, const char *a2, ...)
{
  return [a1 setCredential:forAccount:serviceID:error:];
}

id objc_msgSend_setCurrentApplicationLabel_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentApplicationLabel:];
}

id objc_msgSend_setCurrentBluetoothIDs_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentBluetoothIDs:];
}

id objc_msgSend_setCurrentConnection_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentConnection:];
}

id objc_msgSend_setCurrentHistoryToken_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentHistoryToken:];
}

id objc_msgSend_setCurrentRequest_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentRequest:];
}

id objc_msgSend_setCurrentlySyncing_(void *a1, const char *a2, ...)
{
  return [a1 setCurrentlySyncing:];
}

id objc_msgSend_setD2dEncryptionAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setD2dEncryptionAvailable:];
}

id objc_msgSend_setDaemonPID_(void *a1, const char *a2, ...)
{
  return [a1 setDaemonPID:];
}

id objc_msgSend_setDailyMetricReporter_(void *a1, const char *a2, ...)
{
  return [a1 setDailyMetricReporter:];
}

id objc_msgSend_setDailyMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setDailyMetrics:];
}

id objc_msgSend_setData_(void *a1, const char *a2, ...)
{
  return [a1 setData:];
}

id objc_msgSend_setDate_(void *a1, const char *a2, ...)
{
  return [a1 setDate:];
}

id objc_msgSend_setDateCreated_(void *a1, const char *a2, ...)
{
  return [a1 setDateCreated:];
}

id objc_msgSend_setDateStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDateStyle:];
}

id objc_msgSend_setDebugModeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setDebugModeEnabled:];
}

id objc_msgSend_setDecryptedActivityLevel_(void *a1, const char *a2, ...)
{
  return [a1 setDecryptedActivityLevel:];
}

id objc_msgSend_setDecryptionKey_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDecryptionKey:forDeviceIdentifier:];
}

id objc_msgSend_setDecryptionKeyDataRepresentation_forDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDecryptionKeyDataRepresentation:forDeviceIdentifier:];
}

id objc_msgSend_setDefaultButtonTitle_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultButtonTitle:];
}

id objc_msgSend_setDefaultPairedDevice_(void *a1, const char *a2, ...)
{
  return [a1 setDefaultPairedDevice:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDerivedIntentIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDerivedIntentIdentifier:];
}

id objc_msgSend_setDestination_(void *a1, const char *a2, ...)
{
  return [a1 setDestination:];
}

id objc_msgSend_setDestinationDevice_(void *a1, const char *a2, ...)
{
  return [a1 setDestinationDevice:];
}

id objc_msgSend_setDeviceActionType_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceActionType:];
}

id objc_msgSend_setDeviceAddress_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceAddress:];
}

id objc_msgSend_setDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceChangedHandler:];
}

id objc_msgSend_setDeviceClassCode_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceClassCode:];
}

id objc_msgSend_setDeviceColorCode_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceColorCode:];
}

id objc_msgSend_setDeviceConnectedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceConnectedHandler:];
}

id objc_msgSend_setDeviceDidUntriggerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceDidUntriggerHandler:];
}

id objc_msgSend_setDeviceEnteredBioLockoutHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceEnteredBioLockoutHandler:];
}

id objc_msgSend_setDeviceEnteredImmediateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceEnteredImmediateHandler:];
}

id objc_msgSend_setDeviceEnteredNearbyHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceEnteredNearbyHandler:];
}

id objc_msgSend_setDeviceExitedImmediateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceExitedImmediateHandler:];
}

id objc_msgSend_setDeviceExitedNearbyHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceExitedNearbyHandler:];
}

id objc_msgSend_setDeviceFilter_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceFilter:];
}

id objc_msgSend_setDeviceFlags_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceFlags:];
}

id objc_msgSend_setDeviceFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceFoundHandler:];
}

id objc_msgSend_setDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceID:];
}

id objc_msgSend_setDeviceIDs_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceIDs:];
}

id objc_msgSend_setDeviceIRKData_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceIRKData:];
}

id objc_msgSend_setDeviceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceIdentifier:];
}

id objc_msgSend_setDeviceLostHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceLostHandler:];
}

id objc_msgSend_setDeviceModelCode_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceModelCode:];
}

id objc_msgSend_setDeviceName_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceName:];
}

id objc_msgSend_setDevicePairedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDevicePairedHandler:];
}

id objc_msgSend_setDeviceTimer_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceTimer:];
}

id objc_msgSend_setDeviceTracked_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceTracked:];
}

id objc_msgSend_setDeviceType_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceType:];
}

id objc_msgSend_setDeviceUnpairedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceUnpairedHandler:];
}

id objc_msgSend_setDeviceUpdateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceUpdateHandler:];
}

id objc_msgSend_setDeviceWasDismissedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceWasDismissedHandler:];
}

id objc_msgSend_setDeviceWasDismissedHandlerEx_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceWasDismissedHandlerEx:];
}

id objc_msgSend_setDeviceWasLocked_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceWasLocked:];
}

id objc_msgSend_setDeviceWasSelectedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceWasSelectedHandler:];
}

id objc_msgSend_setDeviceWillTriggerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDeviceWillTriggerHandler:];
}

id objc_msgSend_setDevicesBufferedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDevicesBufferedHandler:];
}

id objc_msgSend_setDhSecretKey_(void *a1, const char *a2, ...)
{
  return [a1 setDhSecretKey:];
}

id objc_msgSend_setDidAutoAccept_(void *a1, const char *a2, ...)
{
  return [a1 setDidAutoAccept:];
}

id objc_msgSend_setDidDelayWorkDueToPowerAssertion_(void *a1, const char *a2, ...)
{
  return [a1 setDidDelayWorkDueToPowerAssertion:];
}

id objc_msgSend_setDidFinishPerformingActivityHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDidFinishPerformingActivityHandler:];
}

id objc_msgSend_setDiffableDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDiffableDelegate:];
}

id objc_msgSend_setDirection_(void *a1, const char *a2, ...)
{
  return [a1 setDirection:];
}

id objc_msgSend_setDirectoryForTemporaryFiles_(void *a1, const char *a2, ...)
{
  return [a1 setDirectoryForTemporaryFiles:];
}

id objc_msgSend_setDisableAdaptiveCompressionForZipping_(void *a1, const char *a2, ...)
{
  return [a1 setDisableAdaptiveCompressionForZipping:];
}

id objc_msgSend_setDisableDuplicateFilterOnce_(void *a1, const char *a2, ...)
{
  return [a1 setDisableDuplicateFilterOnce];
}

id objc_msgSend_setDisableSilentAuth_(void *a1, const char *a2, ...)
{
  return [a1 setDisableSilentAuth:];
}

id objc_msgSend_setDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setDisabled:];
}

id objc_msgSend_setDisabledNodesUpdatedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDisabledNodesUpdatedHandler:];
}

id objc_msgSend_setDiscoverableMode_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoverableMode:];
}

id objc_msgSend_setDiscoveryDate_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryDate:];
}

id objc_msgSend_setDiscoveryFlags_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryFlags:];
}

id objc_msgSend_setDiscoveryMetric_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryMetric:];
}

id objc_msgSend_setDiscoveryMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryMetrics:];
}

id objc_msgSend_setDiscoveryMode_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryMode:];
}

id objc_msgSend_setDiscoveryTime_(void *a1, const char *a2, ...)
{
  return [a1 setDiscoveryTime:];
}

id objc_msgSend_setDismissReason_(void *a1, const char *a2, ...)
{
  return [a1 setDismissReason:];
}

id objc_msgSend_setDismissUserNotificationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDismissUserNotificationHandler:];
}

id objc_msgSend_setDismissedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setDismissedHandler:];
}

id objc_msgSend_setDispatchQueue_(void *a1, const char *a2, ...)
{
  return [a1 setDispatchQueue:];
}

id objc_msgSend_setDisplayClamshellWaitTime_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayClamshellWaitTime:];
}

id objc_msgSend_setDisplayIcon_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayIcon:];
}

id objc_msgSend_setDisplayName_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayName:];
}

id objc_msgSend_setDisplayOrClamshellWaitingDate_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayOrClamshellWaitingDate:];
}

id objc_msgSend_setDisplayStyle_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayStyle:];
}

id objc_msgSend_setDistance_(void *a1, const char *a2, ...)
{
  return [a1 setDistance:];
}

id objc_msgSend_setDistanceMeters_(void *a1, const char *a2, ...)
{
  return [a1 setDistanceMeters:];
}

id objc_msgSend_setDoNotPostUnlockConfirmation_(void *a1, const char *a2, ...)
{
  return [a1 setDoNotPostUnlockConfirmation:];
}

id objc_msgSend_setDocumentProxy_(void *a1, const char *a2, ...)
{
  return [a1 setDocumentProxy:];
}

id objc_msgSend_setDuetSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setDuetSuggestions:];
}

id objc_msgSend_setDurationInMS_(void *a1, const char *a2, ...)
{
  return [a1 setDurationInMS:];
}

id objc_msgSend_setEdPKData_(void *a1, const char *a2, ...)
{
  return [a1 setEdPKData:];
}

id objc_msgSend_setEligibleDevices_(void *a1, const char *a2, ...)
{
  return [a1 setEligibleDevices:];
}

id objc_msgSend_setEmailAddress_(void *a1, const char *a2, ...)
{
  return [a1 setEmailAddress:];
}

id objc_msgSend_setEmailAddresses_(void *a1, const char *a2, ...)
{
  return [a1 setEmailAddresses:];
}

id objc_msgSend_setEnableDevice_(void *a1, const char *a2, ...)
{
  return [a1 setEnableDevice:];
}

id objc_msgSend_setEnabledTopics_(void *a1, const char *a2, ...)
{
  return [a1 setEnabledTopics:];
}

id objc_msgSend_setEnclosureColor_(void *a1, const char *a2, ...)
{
  return [a1 setEnclosureColor:];
}

id objc_msgSend_setEncryptedPayload_(void *a1, const char *a2, ...)
{
  return [a1 setEncryptedPayload:];
}

id objc_msgSend_setEndDate_(void *a1, const char *a2, ...)
{
  return [a1 setEndDate:];
}

id objc_msgSend_setEndpointsChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setEndpointsChangedHandler:];
}

id objc_msgSend_setEngagedWithSheet_(void *a1, const char *a2, ...)
{
  return [a1 setEngagedWithSheet:];
}

id objc_msgSend_setEnhancedDiscovery_(void *a1, const char *a2, ...)
{
  return [a1 setEnhancedDiscovery:];
}

id objc_msgSend_setError_(void *a1, const char *a2, ...)
{
  return [a1 setError:];
}

id objc_msgSend_setErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 setErrorCode:];
}

id objc_msgSend_setErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 setErrorHandler:];
}

id objc_msgSend_setErrorString_(void *a1, const char *a2, ...)
{
  return [a1 setErrorString:];
}

id objc_msgSend_setErrorType_(void *a1, const char *a2, ...)
{
  return [a1 setErrorType:];
}

id objc_msgSend_setEscrowSecret_(void *a1, const char *a2, ...)
{
  return [a1 setEscrowSecret:];
}

id objc_msgSend_setEventHandler_(void *a1, const char *a2, ...)
{
  return [a1 setEventHandler:];
}

id objc_msgSend_setEventMessageHandler_(void *a1, const char *a2, ...)
{
  return [a1 setEventMessageHandler:];
}

id objc_msgSend_setEvents_(void *a1, const char *a2, ...)
{
  return [a1 setEvents:];
}

id objc_msgSend_setExchageResponseDate_(void *a1, const char *a2, ...)
{
  return [a1 setExchageResponseDate:];
}

id objc_msgSend_setExchangeResponse_(void *a1, const char *a2, ...)
{
  return [a1 setExchangeResponse:];
}

id objc_msgSend_setExcludeBackfillSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setExcludeBackfillSuggestions:];
}

id objc_msgSend_setExpireDate_(void *a1, const char *a2, ...)
{
  return [a1 setExpireDate:];
}

id objc_msgSend_setExpireTime_(void *a1, const char *a2, ...)
{
  return [a1 setExpireTime:];
}

id objc_msgSend_setExportedInterface_(void *a1, const char *a2, ...)
{
  return [a1 setExportedInterface:];
}

id objc_msgSend_setExportedObject_(void *a1, const char *a2, ...)
{
  return [a1 setExportedObject:];
}

id objc_msgSend_setExtendedTimer_(void *a1, const char *a2, ...)
{
  return [a1 setExtendedTimer:];
}

id objc_msgSend_setExternalACMContext_(void *a1, const char *a2, ...)
{
  return [a1 setExternalACMContext:];
}

id objc_msgSend_setExternalMatchBuiltinOrderedActivities_(void *a1, const char *a2, ...)
{
  return [a1 setExternalMatchBuiltinOrderedActivities:];
}

id objc_msgSend_setExtraInfoData_(void *a1, const char *a2, ...)
{
  return [a1 setExtraInfoData:];
}

id objc_msgSend_setFailedAttempts_(void *a1, const char *a2, ...)
{
  return [a1 setFailedAttempts:];
}

id objc_msgSend_setFailedIndexes_(void *a1, const char *a2, ...)
{
  return [a1 setFailedIndexes:];
}

id objc_msgSend_setFailureReason_(void *a1, const char *a2, ...)
{
  return [a1 setFailureReason:];
}

id objc_msgSend_setFailureReasons_(void *a1, const char *a2, ...)
{
  return [a1 setFailureReasons:];
}

id objc_msgSend_setFakeBundleID_(void *a1, const char *a2, ...)
{
  return [a1 setFakeBundleID:];
}

id objc_msgSend_setFakeBytes_(void *a1, const char *a2, ...)
{
  return [a1 setFakeBytes:];
}

id objc_msgSend_setFakeDuration_(void *a1, const char *a2, ...)
{
  return [a1 setFakeDuration:];
}

id objc_msgSend_setFamilyName_(void *a1, const char *a2, ...)
{
  return [a1 setFamilyName:];
}

id objc_msgSend_setFamilyUpdatedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFamilyUpdatedHandler:];
}

id objc_msgSend_setFastScanMode_(void *a1, const char *a2, ...)
{
  return [a1 setFastScanMode:];
}

id objc_msgSend_setFavoriteActions_(void *a1, const char *a2, ...)
{
  return [a1 setFavoriteActions:];
}

id objc_msgSend_setFavoriteApps_(void *a1, const char *a2, ...)
{
  return [a1 setFavoriteApps:];
}

id objc_msgSend_setFeatureSuggestedForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setFeatureSuggestedForDeviceID:];
}

id objc_msgSend_setFetchEngravingDataHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFetchEngravingDataHandler:];
}

id objc_msgSend_setFiles_(void *a1, const char *a2, ...)
{
  return [a1 setFiles:];
}

id objc_msgSend_setFilesToCleanup_(void *a1, const char *a2, ...)
{
  return [a1 setFilesToCleanup:];
}

id objc_msgSend_setFinalMessage_(void *a1, const char *a2, ...)
{
  return [a1 setFinalMessage:];
}

id objc_msgSend_setFindSupportedActivitiesCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFindSupportedActivitiesCompletionHandler:];
}

id objc_msgSend_setFinderServer_(void *a1, const char *a2, ...)
{
  return [a1 setFinderServer:];
}

id objc_msgSend_setFireDate_(void *a1, const char *a2, ...)
{
  return [a1 setFireDate:];
}

id objc_msgSend_setFiredImpactHaptic_(void *a1, const char *a2, ...)
{
  return [a1 setFiredImpactHaptic:];
}

id objc_msgSend_setFirstSend_(void *a1, const char *a2, ...)
{
  return [a1 setFirstSend:];
}

id objc_msgSend_setFirstUnlockHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFirstUnlockHandler:];
}

id objc_msgSend_setFixedPIN_(void *a1, const char *a2, ...)
{
  return [a1 setFixedPIN:];
}

id objc_msgSend_setFlags_(void *a1, const char *a2, ...)
{
  return [a1 setFlags:];
}

id objc_msgSend_setFloat_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setFloat:forKey:];
}

id objc_msgSend_setForce_(void *a1, const char *a2, ...)
{
  return [a1 setForce:];
}

id objc_msgSend_setForced_(void *a1, const char *a2, ...)
{
  return [a1 setForced:];
}

id objc_msgSend_setForcedID_(void *a1, const char *a2, ...)
{
  return [a1 setForcedID:];
}

id objc_msgSend_setFormattedHandles_(void *a1, const char *a2, ...)
{
  return [a1 setFormattedHandles:];
}

id objc_msgSend_setFoundFirstPeer_(void *a1, const char *a2, ...)
{
  return [a1 setFoundFirstPeer:];
}

id objc_msgSend_setFoundPeer_(void *a1, const char *a2, ...)
{
  return [a1 setFoundPeer:];
}

id objc_msgSend_setFoundTicks_(void *a1, const char *a2, ...)
{
  return [a1 setFoundTicks:];
}

id objc_msgSend_setFrameHandler_(void *a1, const char *a2, ...)
{
  return [a1 setFrameHandler:];
}

id objc_msgSend_setFrequency_(void *a1, const char *a2, ...)
{
  return [a1 setFrequency:];
}

id objc_msgSend_setGivenName_(void *a1, const char *a2, ...)
{
  return [a1 setGivenName:];
}

id objc_msgSend_setGroup_(void *a1, const char *a2, ...)
{
  return [a1 setGroup:];
}

id objc_msgSend_setGroupID_(void *a1, const char *a2, ...)
{
  return [a1 setGroupID:];
}

id objc_msgSend_setGroupName_(void *a1, const char *a2, ...)
{
  return [a1 setGroupName:];
}

id objc_msgSend_setGsToken_(void *a1, const char *a2, ...)
{
  return [a1 setGsToken:];
}

id objc_msgSend_setGuestKey_(void *a1, const char *a2, ...)
{
  return [a1 setGuestKey:];
}

id objc_msgSend_setGuestMode_(void *a1, const char *a2, ...)
{
  return [a1 setGuestMode:];
}

id objc_msgSend_setHTTPAdditionalHeaders_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPAdditionalHeaders:];
}

id objc_msgSend_setHTTPBody_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPBody:];
}

id objc_msgSend_setHTTPMaximumConnectionsPerHost_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPMaximumConnectionsPerHost:];
}

id objc_msgSend_setHTTPMethod_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPMethod:];
}

id objc_msgSend_setHTTPShouldHandleCookies_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPShouldHandleCookies:];
}

id objc_msgSend_setHTTPShouldUsePipelining_(void *a1, const char *a2, ...)
{
  return [a1 setHTTPShouldUsePipelining:];
}

id objc_msgSend_setHandler_(void *a1, const char *a2, ...)
{
  return [a1 setHandler:];
}

id objc_msgSend_setHandler_forTransfer_(void *a1, const char *a2, ...)
{
  return [a1 setHandler:forTransfer:];
}

id objc_msgSend_setHandles_(void *a1, const char *a2, ...)
{
  return [a1 setHandles:];
}

id objc_msgSend_setHasSquareImage_(void *a1, const char *a2, ...)
{
  return [a1 setHasSquareImage:];
}

id objc_msgSend_setHasUserSeenAnnounceCallsOptOutScreen_(void *a1, const char *a2, ...)
{
  return [a1 setHasUserSeenAnnounceCallsOptOutScreen:];
}

id objc_msgSend_setHasUserSeenAnnounceMessagesOptOutScreen_(void *a1, const char *a2, ...)
{
  return [a1 setHasUserSeenAnnounceMessagesOptOutScreen:];
}

id objc_msgSend_setHasUserSeenAnnounceNotificationsOptOutScreen_(void *a1, const char *a2, ...)
{
  return [a1 setHasUserSeenAnnounceNotificationsOptOutScreen:];
}

id objc_msgSend_setHeader_(void *a1, const char *a2, ...)
{
  return [a1 setHeader:];
}

id objc_msgSend_setHeaderFields_(void *a1, const char *a2, ...)
{
  return [a1 setHeaderFields:];
}

id objc_msgSend_setHelperConnection_(void *a1, const char *a2, ...)
{
  return [a1 setHelperConnection:];
}

id objc_msgSend_setHiddenActivities_(void *a1, const char *a2, ...)
{
  return [a1 setHiddenActivities:];
}

id objc_msgSend_setHidePINHandler_(void *a1, const char *a2, ...)
{
  return [a1 setHidePINHandler:];
}

id objc_msgSend_setHideSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setHideSuggestions:];
}

id objc_msgSend_setHintToken_(void *a1, const char *a2, ...)
{
  return [a1 setHintToken:];
}

id objc_msgSend_setHomePodType_(void *a1, const char *a2, ...)
{
  return [a1 setHomePodType:];
}

id objc_msgSend_setHorizontalAngle_(void *a1, const char *a2, ...)
{
  return [a1 setHorizontalAngle:];
}

id objc_msgSend_setHostAPNetwork_(void *a1, const char *a2, ...)
{
  return [a1 setHostAPNetwork:];
}

id objc_msgSend_setHostActionActivityProxies_(void *a1, const char *a2, ...)
{
  return [a1 setHostActionActivityProxies:];
}

id objc_msgSend_setHostAuditToken_(void *a1, const char *a2, ...)
{
  return [a1 setHostAuditToken:];
}

id objc_msgSend_setHostConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setHostConfiguration:];
}

id objc_msgSend_setHostLocale_(void *a1, const char *a2, ...)
{
  return [a1 setHostLocale:];
}

id objc_msgSend_setHostShareActivityProxies_(void *a1, const char *a2, ...)
{
  return [a1 setHostShareActivityProxies:];
}

id objc_msgSend_setHotspotDevice_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotDevice:];
}

id objc_msgSend_setHotspotInfo_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotInfo:];
}

id objc_msgSend_setHotspotInfoHandler_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotInfoHandler:];
}

id objc_msgSend_setHotspotManager_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotManager:];
}

id objc_msgSend_setHotspotPassword_(void *a1, const char *a2, ...)
{
  return [a1 setHotspotPassword:];
}

id objc_msgSend_setIcon_(void *a1, const char *a2, ...)
{
  return [a1 setIcon:];
}

id objc_msgSend_setIconCache_(void *a1, const char *a2, ...)
{
  return [a1 setIconCache:];
}

id objc_msgSend_setIconData_(void *a1, const char *a2, ...)
{
  return [a1 setIconData:];
}

id objc_msgSend_setIconData_iconHash_forPerson_(void *a1, const char *a2, ...)
{
  return [a1 setIconData:iconData iconHash:iconHash forPerson:person];
}

id objc_msgSend_setIconHash_(void *a1, const char *a2, ...)
{
  return [a1 setIconHash:];
}

id objc_msgSend_setIconImageSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setIconImageSlotID:];
}

id objc_msgSend_setIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdentifier:];
}

id objc_msgSend_setIdentity_(void *a1, const char *a2, ...)
{
  return [a1 setIdentity:];
}

id objc_msgSend_setIdentityQueryComplete_(void *a1, const char *a2, ...)
{
  return [a1 setIdentityQueryComplete:];
}

id objc_msgSend_setIdsDevice_(void *a1, const char *a2, ...)
{
  return [a1 setIdsDevice:];
}

id objc_msgSend_setIdsDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setIdsDeviceID:];
}

id objc_msgSend_setIdsIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setIdsIdentifier:];
}

id objc_msgSend_setIdsMacCountCache_(void *a1, const char *a2, ...)
{
  return [a1 setIdsMacCountCache:];
}

id objc_msgSend_setIdsService_(void *a1, const char *a2, ...)
{
  return [a1 setIdsService:];
}

id objc_msgSend_setImage_(void *a1, const char *a2, ...)
{
  return [a1 setImage:];
}

id objc_msgSend_setImage_forKey_contactIDs_(void *a1, const char *a2, ...)
{
  return [a1 setImage:x0 forKey:x1 contactIDs:x2];
}

id objc_msgSend_setImageData_(void *a1, const char *a2, ...)
{
  return [a1 setImageData:];
}

id objc_msgSend_setImageDataAlreadyCached_(void *a1, const char *a2, ...)
{
  return [a1 setImageDataAlreadyCached:];
}

id objc_msgSend_setImageHash_(void *a1, const char *a2, ...)
{
  return [a1 setImageHash:];
}

id objc_msgSend_setImportSessionID_(void *a1, const char *a2, ...)
{
  return [a1 setImportSessionID:];
}

id objc_msgSend_setImportedFiles_(void *a1, const char *a2, ...)
{
  return [a1 setImportedFiles:];
}

id objc_msgSend_setInRange_(void *a1, const char *a2, ...)
{
  return [a1 setInRange:];
}

id objc_msgSend_setIncrementedCountID_(void *a1, const char *a2, ...)
{
  return [a1 setIncrementedCountID];
}

id objc_msgSend_setIndexInApplicationDefinedActivities_(void *a1, const char *a2, ...)
{
  return [a1 setIndexInApplicationDefinedActivities:];
}

id objc_msgSend_setInfoProximityEstimator_(void *a1, const char *a2, ...)
{
  return [a1 setInfoProximityEstimator:];
}

id objc_msgSend_setInformativeText_(void *a1, const char *a2, ...)
{
  return [a1 setInformativeText:];
}

id objc_msgSend_setInitialBatchSize_(void *a1, const char *a2, ...)
{
  return [a1 setInitialBatchSize:];
}

id objc_msgSend_setInsideMediumBubble_(void *a1, const char *a2, ...)
{
  return [a1 setInsideMediumBubble:];
}

id objc_msgSend_setInsideSmallBubble_(void *a1, const char *a2, ...)
{
  return [a1 setInsideSmallBubble:];
}

id objc_msgSend_setInstantShareSheet_(void *a1, const char *a2, ...)
{
  return [a1 setInstantShareSheet:];
}

id objc_msgSend_setInteger_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setInteger:forKey:];
}

id objc_msgSend_setInteractionBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setInteractionBehavior:];
}

id objc_msgSend_setInteractionDirection_(void *a1, const char *a2, ...)
{
  return [a1 setInteractionDirection:];
}

id objc_msgSend_setIntermediateCertificateExpirationDate_(void *a1, const char *a2, ...)
{
  return [a1 setIntermediateCertificateExpirationDate:];
}

id objc_msgSend_setIntermediateCertificatePersistentReference_(void *a1, const char *a2, ...)
{
  return [a1 setIntermediateCertificatePersistentReference:];
}

id objc_msgSend_setInterruptionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInterruptionHandler:];
}

id objc_msgSend_setInterval_(void *a1, const char *a2, ...)
{
  return [a1 setInterval:];
}

id objc_msgSend_setInvalidateCalled_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidateCalled:];
}

id objc_msgSend_setInvalidated_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidated:];
}

id objc_msgSend_setInvalidationHandler_(void *a1, const char *a2, ...)
{
  return [a1 setInvalidationHandler:];
}

id objc_msgSend_setIsAuthenticatingForSiri_(void *a1, const char *a2, ...)
{
  return [a1 setIsAuthenticatingForSiri:];
}

id objc_msgSend_setIsBLEDeviceReplaced_(void *a1, const char *a2, ...)
{
  return [a1 setIsBLEDeviceReplaced:];
}

id objc_msgSend_setIsBeingUsedForSiri_(void *a1, const char *a2, ...)
{
  return [a1 setIsBeingUsedForSiri:];
}

id objc_msgSend_setIsCollaborationAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setIsCollaborationAvailable:];
}

id objc_msgSend_setIsCollaborative_(void *a1, const char *a2, ...)
{
  return [a1 setIsCollaborative:];
}

id objc_msgSend_setIsContentManaged_(void *a1, const char *a2, ...)
{
  return [a1 setIsContentManaged:];
}

id objc_msgSend_setIsDarkMode_(void *a1, const char *a2, ...)
{
  return [a1 setIsDarkMode:];
}

id objc_msgSend_setIsDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setIsDisabled:];
}

id objc_msgSend_setIsEntitled_(void *a1, const char *a2, ...)
{
  return [a1 setIsEntitled:];
}

id objc_msgSend_setIsFavorite_(void *a1, const char *a2, ...)
{
  return [a1 setIsFavorite:];
}

id objc_msgSend_setIsHidden_(void *a1, const char *a2, ...)
{
  return [a1 setIsHidden:];
}

id objc_msgSend_setIsLoading_(void *a1, const char *a2, ...)
{
  return [a1 setIsLoading:];
}

id objc_msgSend_setIsPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setIsPlaceholder:];
}

id objc_msgSend_setIsRestricted_(void *a1, const char *a2, ...)
{
  return [a1 setIsRestricted:];
}

id objc_msgSend_setIsSharePlayAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setIsSharePlayAvailable:];
}

id objc_msgSend_setIsUserDefaultsActivity_(void *a1, const char *a2, ...)
{
  return [a1 setIsUserDefaultsActivity:];
}

id objc_msgSend_setIsUsernameEditable_(void *a1, const char *a2, ...)
{
  return [a1 setIsUsernameEditable:];
}

id objc_msgSend_setItems_(void *a1, const char *a2, ...)
{
  return [a1 setItems:];
}

id objc_msgSend_setKey_(void *a1, const char *a2, ...)
{
  return [a1 setKey:];
}

id objc_msgSend_setKeyCounter_(void *a1, const char *a2, ...)
{
  return [a1 setKeyCounter:];
}

id objc_msgSend_setKeyData_(void *a1, const char *a2, ...)
{
  return [a1 setKeyData:];
}

id objc_msgSend_setKeyDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 setKeyDeviceLocked:];
}

id objc_msgSend_setKeyExchangeDate_(void *a1, const char *a2, ...)
{
  return [a1 setKeyExchangeDate:];
}

id objc_msgSend_setKeyExchangeDuration_(void *a1, const char *a2, ...)
{
  return [a1 setKeyExchangeDuration:];
}

id objc_msgSend_setKeyExchangeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setKeyExchangeInterval:];
}

id objc_msgSend_setKeyExchangeResponseReceived_(void *a1, const char *a2, ...)
{
  return [a1 setKeyExchangeResponseReceived:];
}

id objc_msgSend_setKeyExists_(void *a1, const char *a2, ...)
{
  return [a1 setKeyExists:];
}

id objc_msgSend_setKeyFailed_(void *a1, const char *a2, ...)
{
  return [a1 setKeyFailed:];
}

id objc_msgSend_setKeyIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setKeyIdentifier:];
}

id objc_msgSend_setKeyRequestExchange_(void *a1, const char *a2, ...)
{
  return [a1 setKeyRequestExchange:];
}

id objc_msgSend_setKeybagAssertionTimer_(void *a1, const char *a2, ...)
{
  return [a1 setKeybagAssertionTimer:];
}

id objc_msgSend_setLEDColor_(void *a1, const char *a2, ...)
{
  return [a1 setLEDColor:];
}

id objc_msgSend_setLEDState_(void *a1, const char *a2, ...)
{
  return [a1 setLEDState:];
}

id objc_msgSend_setLEDs_(void *a1, const char *a2, ...)
{
  return [a1 setLEDs:];
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return [a1 setLabel:];
}

id objc_msgSend_setLabel_forSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setLabel:forSlotID:];
}

id objc_msgSend_setLabelSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setLabelSlotID:];
}

id objc_msgSend_setLastConnectionDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastConnectionDate:];
}

id objc_msgSend_setLastLocalUnlockDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastLocalUnlockDate:];
}

id objc_msgSend_setLastLockedByRelock_(void *a1, const char *a2, ...)
{
  return [a1 setLastLockedByRelock:];
}

id objc_msgSend_setLastPairedUnlockDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastPairedUnlockDate:];
}

id objc_msgSend_setLastProxyState_(void *a1, const char *a2, ...)
{
  return [a1 setLastProxyState:];
}

id objc_msgSend_setLastSeen_(void *a1, const char *a2, ...)
{
  return [a1 setLastSeen:];
}

id objc_msgSend_setLastSeenWatchDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastSeenWatchDate:];
}

id objc_msgSend_setLastSleepType_(void *a1, const char *a2, ...)
{
  return [a1 setLastSleepType:];
}

id objc_msgSend_setLastSuccessfulConnectionDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastSuccessfulConnectionDate:];
}

id objc_msgSend_setLastSuccessfulDevice_(void *a1, const char *a2, ...)
{
  return [a1 setLastSuccessfulDevice:];
}

id objc_msgSend_setLastTransferEvent_(void *a1, const char *a2, ...)
{
  return [a1 setLastTransferEvent:];
}

id objc_msgSend_setLastUnlockDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastUnlockDate:];
}

id objc_msgSend_setLastUnlockUsedMask_(void *a1, const char *a2, ...)
{
  return [a1 setLastUnlockUsedMask:];
}

id objc_msgSend_setLastUnlockedByPairedUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setLastUnlockedByPairedUnlock:];
}

id objc_msgSend_setLastUnlockedByWatch_(void *a1, const char *a2, ...)
{
  return [a1 setLastUnlockedByWatch:];
}

id objc_msgSend_setLastUpdateTicks_(void *a1, const char *a2, ...)
{
  return [a1 setLastUpdateTicks:];
}

id objc_msgSend_setLastUsedCounter_(void *a1, const char *a2, ...)
{
  return [a1 setLastUsedCounter:];
}

id objc_msgSend_setLastValidationAttemptDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastValidationAttemptDate:];
}

id objc_msgSend_setLastValidationDate_(void *a1, const char *a2, ...)
{
  return [a1 setLastValidationDate:];
}

id objc_msgSend_setLatencyCritical_(void *a1, const char *a2, ...)
{
  return [a1 setLatencyCritical:];
}

id objc_msgSend_setLePipeCapable_(void *a1, const char *a2, ...)
{
  return [a1 setLePipeCapable:];
}

id objc_msgSend_setLePipeDevices_(void *a1, const char *a2, ...)
{
  return [a1 setLePipeDevices:];
}

id objc_msgSend_setLength_(void *a1, const char *a2, ...)
{
  return [a1 setLength:];
}

id objc_msgSend_setLinkClient_(void *a1, const char *a2, ...)
{
  return [a1 setLinkClient:];
}

id objc_msgSend_setLinkedToCurrentUser_(void *a1, const char *a2, ...)
{
  return [a1 setLinkedToCurrentUser:];
}

id objc_msgSend_setLinks_(void *a1, const char *a2, ...)
{
  return [a1 setLinks:];
}

id objc_msgSend_setLivePhotoPairingIdentifierBehavior_(void *a1, const char *a2, ...)
{
  return [a1 setLivePhotoPairingIdentifierBehavior:];
}

id objc_msgSend_setLoadHandler_(void *a1, const char *a2, ...)
{
  return [a1 setLoadHandler:];
}

id objc_msgSend_setLoadIconHandler_(void *a1, const char *a2, ...)
{
  return [a1 setLoadIconHandler:];
}

id objc_msgSend_setLoadedIndexes_(void *a1, const char *a2, ...)
{
  return [a1 setLoadedIndexes:];
}

id objc_msgSend_setLocalAWDLInfo_(void *a1, const char *a2, ...)
{
  return [a1 setLocalAWDLInfo:];
}

id objc_msgSend_setLocalAttestedLTK_(void *a1, const char *a2, ...)
{
  return [a1 setLocalAttestedLTK:];
}

id objc_msgSend_setLocalDeviceController_(void *a1, const char *a2, ...)
{
  return [a1 setLocalDeviceController:];
}

id objc_msgSend_setLocalDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setLocalDeviceID:];
}

id objc_msgSend_setLocalDeviceNeedsArming_(void *a1, const char *a2, ...)
{
  return [a1 setLocalDeviceNeedsArming:];
}

id objc_msgSend_setLocalID_(void *a1, const char *a2, ...)
{
  return [a1 setLocalID:];
}

id objc_msgSend_setLocalLTK_(void *a1, const char *a2, ...)
{
  return [a1 setLocalLTK:];
}

id objc_msgSend_setLocale_(void *a1, const char *a2, ...)
{
  return [a1 setLocale:];
}

id objc_msgSend_setLocalizedTitle_(void *a1, const char *a2, ...)
{
  return [a1 setLocalizedTitle:];
}

id objc_msgSend_setLocallyGenerated_(void *a1, const char *a2, ...)
{
  return [a1 setLocallyGenerated:];
}

id objc_msgSend_setLockStateChangedDate_(void *a1, const char *a2, ...)
{
  return [a1 setLockStateChangedDate:];
}

id objc_msgSend_setLockedKeyBag_(void *a1, const char *a2, ...)
{
  return [a1 setLockedKeyBag:];
}

id objc_msgSend_setLogCategory_(void *a1, const char *a2, ...)
{
  return [a1 setLogCategory:];
}

id objc_msgSend_setLongTermKey_(void *a1, const char *a2, ...)
{
  return [a1 setLongTermKey:];
}

id objc_msgSend_setLowPowerModeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setLowPowerModeEnabled:];
}

id objc_msgSend_setLowWarnLevel_(void *a1, const char *a2, ...)
{
  return [a1 setLowWarnLevel:];
}

id objc_msgSend_setLtk_(void *a1, const char *a2, ...)
{
  return [a1 setLtk:];
}

id objc_msgSend_setLtkData_(void *a1, const char *a2, ...)
{
  return [a1 setLtkData:];
}

id objc_msgSend_setLtkHash_(void *a1, const char *a2, ...)
{
  return [a1 setLtkHash:];
}

id objc_msgSend_setLtkID_(void *a1, const char *a2, ...)
{
  return [a1 setLtkID:];
}

id objc_msgSend_setLtkSyncing_(void *a1, const char *a2, ...)
{
  return [a1 setLtkSyncing:];
}

id objc_msgSend_setLtkTimer_(void *a1, const char *a2, ...)
{
  return [a1 setLtkTimer:];
}

id objc_msgSend_setLtkTimerRetryCount_(void *a1, const char *a2, ...)
{
  return [a1 setLtkTimerRetryCount:];
}

id objc_msgSend_setMacAddress_(void *a1, const char *a2, ...)
{
  return [a1 setMacAddress:];
}

id objc_msgSend_setMacAddressData_(void *a1, const char *a2, ...)
{
  return [a1 setMacAddressData:];
}

id objc_msgSend_setMagicMountConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setMagicMountConfiguration:];
}

id objc_msgSend_setMagnetLinkTimer_(void *a1, const char *a2, ...)
{
  return [a1 setMagnetLinkTimer:];
}

id objc_msgSend_setMailResult_(void *a1, const char *a2, ...)
{
  return [a1 setMailResult:];
}

id objc_msgSend_setMainLabelSlotHeight_(void *a1, const char *a2, ...)
{
  return [a1 setMainLabelSlotHeight:];
}

id objc_msgSend_setMainLabelSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setMainLabelSlotID:];
}

id objc_msgSend_setMajorOSVersion_(void *a1, const char *a2, ...)
{
  return [a1 setMajorOSVersion:];
}

id objc_msgSend_setManateeChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setManateeChangedHandler:];
}

id objc_msgSend_setMappedContactIdentifier_relatedContactIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setMappedContactIdentifier:relatedContactIdentifiers:];
}

id objc_msgSend_setMasterChannel_(void *a1, const char *a2, ...)
{
  return [a1 setMasterChannel:];
}

id objc_msgSend_setMaxCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setMaxCapacity:];
}

id objc_msgSend_setMaxConcurrentOperationCount_(void *a1, const char *a2, ...)
{
  return [a1 setMaxConcurrentOperationCount:];
}

id objc_msgSend_setMaxConnectionsReached_(void *a1, const char *a2, ...)
{
  return [a1 setMaxConnectionsReached:];
}

id objc_msgSend_setMaxDelay_(void *a1, const char *a2, ...)
{
  return [a1 setMaxDelay:];
}

id objc_msgSend_setMaxPreviews_(void *a1, const char *a2, ...)
{
  return [a1 setMaxPreviews:];
}

id objc_msgSend_setMaxTransferState_(void *a1, const char *a2, ...)
{
  return [a1 setMaxTransferState:];
}

id objc_msgSend_setMaximumNumberOfSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setMaximumNumberOfSuggestions:];
}

id objc_msgSend_setMeCard_(void *a1, const char *a2, ...)
{
  return [a1 setMeCard:];
}

id objc_msgSend_setMeDeviceChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setMeDeviceChangedHandler:];
}

id objc_msgSend_setMechanism_(void *a1, const char *a2, ...)
{
  return [a1 setMechanism:];
}

id objc_msgSend_setMedBubbleDelayed_(void *a1, const char *a2, ...)
{
  return [a1 setMedBubbleDelayed:];
}

id objc_msgSend_setMessage_(void *a1, const char *a2, ...)
{
  return [a1 setMessage:];
}

id objc_msgSend_setMessageIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setMessageIdentifier:];
}

id objc_msgSend_setMessageType_(void *a1, const char *a2, ...)
{
  return [a1 setMessageType:];
}

id objc_msgSend_setMetricDates_(void *a1, const char *a2, ...)
{
  return [a1 setMetricDates:];
}

id objc_msgSend_setMetrics_(void *a1, const char *a2, ...)
{
  return [a1 setMetrics:];
}

id objc_msgSend_setMiddleName_(void *a1, const char *a2, ...)
{
  return [a1 setMiddleName:];
}

id objc_msgSend_setMinDelay_(void *a1, const char *a2, ...)
{
  return [a1 setMinDelay:];
}

id objc_msgSend_setMinRequiredTransferState_(void *a1, const char *a2, ...)
{
  return [a1 setMinRequiredTransferState:];
}

id objc_msgSend_setMinimumEarlyFireProportion_(void *a1, const char *a2, ...)
{
  return [a1 setMinimumEarlyFireProportion:];
}

id objc_msgSend_setMode_(void *a1, const char *a2, ...)
{
  return [a1 setMode:];
}

id objc_msgSend_setModel_(void *a1, const char *a2, ...)
{
  return [a1 setModel:];
}

id objc_msgSend_setModelDescription_(void *a1, const char *a2, ...)
{
  return [a1 setModelDescription:];
}

id objc_msgSend_setModelIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setModelIdentifier:];
}

id objc_msgSend_setModelName_(void *a1, const char *a2, ...)
{
  return [a1 setModelName:];
}

id objc_msgSend_setModificationDate_(void *a1, const char *a2, ...)
{
  return [a1 setModificationDate:];
}

id objc_msgSend_setMotionCheckEnded_(void *a1, const char *a2, ...)
{
  return [a1 setMotionCheckEnded:];
}

id objc_msgSend_setMotionCheckStarted_(void *a1, const char *a2, ...)
{
  return [a1 setMotionCheckStarted:];
}

id objc_msgSend_setMotionDetected_(void *a1, const char *a2, ...)
{
  return [a1 setMotionDetected:];
}

id objc_msgSend_setMotionDetector_(void *a1, const char *a2, ...)
{
  return [a1 setMotionDetector:];
}

id objc_msgSend_setMotionManager_(void *a1, const char *a2, ...)
{
  return [a1 setMotionManager:];
}

id objc_msgSend_setMotionTimer_(void *a1, const char *a2, ...)
{
  return [a1 setMotionTimer:];
}

id objc_msgSend_setMoveToShareSheetCompletion_(void *a1, const char *a2, ...)
{
  return [a1 setMoveToShareSheetCompletion:];
}

id objc_msgSend_setName_(void *a1, const char *a2, ...)
{
  return [a1 setName:];
}

id objc_msgSend_setNavBarTitle_(void *a1, const char *a2, ...)
{
  return [a1 setNavBarTitle:];
}

id objc_msgSend_setNearbyCountBadge_(void *a1, const char *a2, ...)
{
  return [a1 setNearbyCountBadge:];
}

id objc_msgSend_setNearbyCountSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setNearbyCountSlotID:];
}

id objc_msgSend_setNearbyDeviceChangedDate_(void *a1, const char *a2, ...)
{
  return [a1 setNearbyDeviceChangedDate:];
}

id objc_msgSend_setNeedsArming_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsArming:];
}

id objc_msgSend_setNeedsImageData_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsImageData:];
}

id objc_msgSend_setNeedsNewImage_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsNewImage:];
}

id objc_msgSend_setNeedsOffWristBeforePairedUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsOffWristBeforePairedUnlock:];
}

id objc_msgSend_setNeedsSetup_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsSetup:];
}

id objc_msgSend_setNeedsStrictMotionCheck_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsStrictMotionCheck:];
}

id objc_msgSend_setNeedsUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUnlock:];
}

id objc_msgSend_setNeedsUserInteractivePriority_(void *a1, const char *a2, ...)
{
  return [a1 setNeedsUserInteractivePriority:];
}

id objc_msgSend_setNetServiceBrowser_(void *a1, const char *a2, ...)
{
  return [a1 setNetServiceBrowser:];
}

id objc_msgSend_setNetworkBufferSpaceAvailable_(void *a1, const char *a2, ...)
{
  return [a1 setNetworkBufferSpaceAvailable:];
}

id objc_msgSend_setNextCrossoverPersistentTimer_(void *a1, const char *a2, ...)
{
  return [a1 setNextCrossoverPersistentTimer:];
}

id objc_msgSend_setNextState_(void *a1, const char *a2, ...)
{
  return [a1 setNextState:];
}

id objc_msgSend_setNiRangingPeer_(void *a1, const char *a2, ...)
{
  return [a1 setNiRangingPeer:];
}

id objc_msgSend_setNiSession_(void *a1, const char *a2, ...)
{
  return [a1 setNiSession:];
}

id objc_msgSend_setNodeIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setNodeIdentifier:];
}

id objc_msgSend_setNodeModel_protocol_url_(void *a1, const char *a2, ...)
{
  return [a1 setNodeModel:x0 protocol:x1 url:x2];
}

id objc_msgSend_setNonce_(void *a1, const char *a2, ...)
{
  return [a1 setNonce:];
}

id objc_msgSend_setNotification_(void *a1, const char *a2, ...)
{
  return [a1 setNotification:];
}

id objc_msgSend_setNotificationDurationSecs_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationDurationSecs:];
}

id objc_msgSend_setNotificationInfo_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationInfo:];
}

id objc_msgSend_setNotificationTicks_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationTicks:];
}

id objc_msgSend_setNotificationTimer_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationTimer:];
}

id objc_msgSend_setNotificationType_(void *a1, const char *a2, ...)
{
  return [a1 setNotificationType:];
}

id objc_msgSend_setNotified_(void *a1, const char *a2, ...)
{
  return [a1 setNotified:];
}

id objc_msgSend_setNotifiedForProxy_(void *a1, const char *a2, ...)
{
  return [a1 setNotifiedForProxy:];
}

id objc_msgSend_setNumberOfSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setNumberOfSuggestions:];
}

id objc_msgSend_setODiskMountPoints_(void *a1, const char *a2, ...)
{
  return [a1 setODiskMountPoints:];
}

id objc_msgSend_setODiskServers_(void *a1, const char *a2, ...)
{
  return [a1 setODiskServers:];
}

id objc_msgSend_setObject_atIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:atIndexedSubscript:];
}

id objc_msgSend_setObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKey:];
}

id objc_msgSend_setObject_forKeyedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forKeyedSubscript:];
}

id objc_msgSend_setObject_forSlot_(void *a1, const char *a2, ...)
{
  return [a1 setObject:forSlot:];
}

id objc_msgSend_setObjectKey_(void *a1, const char *a2, ...)
{
  return [a1 setObjectKey:];
}

id objc_msgSend_setOldApproveProtocol_(void *a1, const char *a2, ...)
{
  return [a1 setOldApproveProtocol:];
}

id objc_msgSend_setOldWatch_(void *a1, const char *a2, ...)
{
  return [a1 setOldWatch:];
}

id objc_msgSend_setOnWristForCurrentSession_(void *a1, const char *a2, ...)
{
  return [a1 setOnWristForCurrentSession:];
}

id objc_msgSend_setOnlyRanging_(void *a1, const char *a2, ...)
{
  return [a1 setOnlyRanging:];
}

id objc_msgSend_setOpenAppURL_(void *a1, const char *a2, ...)
{
  return [a1 setOpenAppURL:];
}

id objc_msgSend_setOpenAppURLs_(void *a1, const char *a2, ...)
{
  return [a1 setOpenAppURLs:];
}

id objc_msgSend_setOpenURLAnnotationsByURL_(void *a1, const char *a2, ...)
{
  return [a1 setOpenURLAnnotationsByURL:];
}

id objc_msgSend_setOptions_(void *a1, const char *a2, ...)
{
  return [a1 setOptions:];
}

id objc_msgSend_setOrderedPresentableActivities_(void *a1, const char *a2, ...)
{
  return [a1 setOrderedPresentableActivities:];
}

id objc_msgSend_setOriginalURL_(void *a1, const char *a2, ...)
{
  return [a1 setOriginalURL:];
}

id objc_msgSend_setOsSupportsAutoHotspot_(void *a1, const char *a2, ...)
{
  return [a1 setOsSupportsAutoHotspot:];
}

id objc_msgSend_setOsVersion_(void *a1, const char *a2, ...)
{
  return [a1 setOsVersion:];
}

id objc_msgSend_setOtherSessionCancel_(void *a1, const char *a2, ...)
{
  return [a1 setOtherSessionCancel:];
}

id objc_msgSend_setOtherStuff_(void *a1, const char *a2, ...)
{
  return [a1 setOtherStuff:];
}

id objc_msgSend_setOutOfBandHints_(void *a1, const char *a2, ...)
{
  return [a1 setOutOfBandHints:];
}

id objc_msgSend_setOverrideScreenOff_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideScreenOff:];
}

id objc_msgSend_setOverrideScreenOffRescanInterval_(void *a1, const char *a2, ...)
{
  return [a1 setOverrideScreenOffRescanInterval:];
}

id objc_msgSend_setPairCheckTime_(void *a1, const char *a2, ...)
{
  return [a1 setPairCheckTime:];
}

id objc_msgSend_setPairSetupDisabled_(void *a1, const char *a2, ...)
{
  return [a1 setPairSetupDisabled:];
}

id objc_msgSend_setPaired_(void *a1, const char *a2, ...)
{
  return [a1 setPaired:];
}

id objc_msgSend_setPairedDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setPairedDeviceID:];
}

id objc_msgSend_setPairingFinishedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPairingFinishedHandler:];
}

id objc_msgSend_setPairingID_(void *a1, const char *a2, ...)
{
  return [a1 setPairingID:];
}

id objc_msgSend_setPairingID_forWatchID_(void *a1, const char *a2, ...)
{
  return [a1 setPairingID:forWatchID:];
}

id objc_msgSend_setPairingResponseHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPairingResponseHandler:];
}

id objc_msgSend_setPartID_(void *a1, const char *a2, ...)
{
  return [a1 setPartID:];
}

id objc_msgSend_setPartName_(void *a1, const char *a2, ...)
{
  return [a1 setPartName:];
}

id objc_msgSend_setPasscode_(void *a1, const char *a2, ...)
{
  return [a1 setPasscode:];
}

id objc_msgSend_setPasscodeEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPasscodeEnabled:];
}

id objc_msgSend_setPasscodeUnlocks_(void *a1, const char *a2, ...)
{
  return [a1 setPasscodeUnlocks:];
}

id objc_msgSend_setPayload_(void *a1, const char *a2, ...)
{
  return [a1 setPayload:];
}

id objc_msgSend_setPayloadFields_(void *a1, const char *a2, ...)
{
  return [a1 setPayloadFields:];
}

id objc_msgSend_setPayloadFilterData_mask_(void *a1, const char *a2, ...)
{
  return [a1 setPayloadFilterData:mask:];
}

id objc_msgSend_setPeerDevice_(void *a1, const char *a2, ...)
{
  return [a1 setPeerDevice:];
}

id objc_msgSend_setPeerDisconnectedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPeerDisconnectedHandler:];
}

id objc_msgSend_setPeerFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPeerFoundHandler:];
}

id objc_msgSend_setPeerFoundInterval_(void *a1, const char *a2, ...)
{
  return [a1 setPeerFoundInterval:];
}

id objc_msgSend_setPeerIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setPeerIdentifier:];
}

id objc_msgSend_setPeerList_(void *a1, const char *a2, ...)
{
  return [a1 setPeerList:];
}

id objc_msgSend_setPeerMacAddress_(void *a1, const char *a2, ...)
{
  return [a1 setPeerMacAddress:];
}

id objc_msgSend_setPendingContentDurationSecs_(void *a1, const char *a2, ...)
{
  return [a1 setPendingContentDurationSecs:];
}

id objc_msgSend_setPendingContentTicks_(void *a1, const char *a2, ...)
{
  return [a1 setPendingContentTicks:];
}

id objc_msgSend_setPeopleBrowser_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleBrowser:];
}

id objc_msgSend_setPeopleNodes_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleNodes:];
}

id objc_msgSend_setPeopleProxies_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleProxies:];
}

id objc_msgSend_setPeopleSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleSuggestion:];
}

id objc_msgSend_setPeopleSuggestionBundleIds_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleSuggestionBundleIds:];
}

id objc_msgSend_setPeopleSuggestionNodes_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleSuggestionNodes:];
}

id objc_msgSend_setPeopleSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleSuggestions:];
}

id objc_msgSend_setPeopleSuggestionsTimeout_(void *a1, const char *a2, ...)
{
  return [a1 setPeopleSuggestionsTimeout:];
}

id objc_msgSend_setPerformActivityCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPerformActivityCompletionHandler:];
}

id objc_msgSend_setPerformActivityType_(void *a1, const char *a2, ...)
{
  return [a1 setPerformActivityType:];
}

id objc_msgSend_setPeriocularStatus_(void *a1, const char *a2, ...)
{
  return [a1 setPeriocularStatus:];
}

id objc_msgSend_setPersonChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPersonChangedHandler:];
}

id objc_msgSend_setPersonFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPersonFoundHandler:];
}

id objc_msgSend_setPersonInfoCache_(void *a1, const char *a2, ...)
{
  return [a1 setPersonInfoCache:];
}

id objc_msgSend_setPersonLostHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPersonLostHandler:];
}

id objc_msgSend_setPhoneAutoUnlockEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneAutoUnlockEnabled:];
}

id objc_msgSend_setPhoneHardwareModel_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneHardwareModel:];
}

id objc_msgSend_setPhoneNumbers_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneNumbers:];
}

id objc_msgSend_setPhoneSoftwareVersion_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneSoftwareVersion:];
}

id objc_msgSend_setPhoneState_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneState:];
}

id objc_msgSend_setPhoneUnlockDate_(void *a1, const char *a2, ...)
{
  return [a1 setPhoneUnlockDate:];
}

id objc_msgSend_setPhotosAssetIDs_(void *a1, const char *a2, ...)
{
  return [a1 setPhotosAssetIDs:];
}

id objc_msgSend_setPillDelay_(void *a1, const char *a2, ...)
{
  return [a1 setPillDelay:];
}

id objc_msgSend_setPillUpdated_(void *a1, const char *a2, ...)
{
  return [a1 setPillUpdated:];
}

id objc_msgSend_setPipeConnectionChangedDate_(void *a1, const char *a2, ...)
{
  return [a1 setPipeConnectionChangedDate:];
}

id objc_msgSend_setPlaceholder_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholder:];
}

id objc_msgSend_setPlaceholderFiles_withCreationCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPlaceholderFiles:withCreationCompletionHandler:];
}

id objc_msgSend_setPolicySession_(void *a1, const char *a2, ...)
{
  return [a1 setPolicySession:];
}

id objc_msgSend_setPossibleActions_(void *a1, const char *a2, ...)
{
  return [a1 setPossibleActions:];
}

id objc_msgSend_setPowerSourcesChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPowerSourcesChangedHandler:];
}

id objc_msgSend_setPowerSourcesFoundHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPowerSourcesFoundHandler:];
}

id objc_msgSend_setPowerSourcesLostHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPowerSourcesLostHandler:];
}

id objc_msgSend_setPowerState_(void *a1, const char *a2, ...)
{
  return [a1 setPowerState:];
}

id objc_msgSend_setPowerState_completion_(void *a1, const char *a2, ...)
{
  return [a1 setPowerState:completion:];
}

id objc_msgSend_setPredicate_(void *a1, const char *a2, ...)
{
  return [a1 setPredicate:];
}

id objc_msgSend_setPreferredChannel_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredChannel:];
}

id objc_msgSend_setPreferredLocalizations_(void *a1, const char *a2, ...)
{
  return [a1 setPreferredLocalizations:];
}

id objc_msgSend_setPresentationMs_(void *a1, const char *a2, ...)
{
  return [a1 setPresentationMs:];
}

id objc_msgSend_setPresentedBluetoothError_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedBluetoothError:];
}

id objc_msgSend_setPresentedWiFiError_(void *a1, const char *a2, ...)
{
  return [a1 setPresentedWiFiError:];
}

id objc_msgSend_setPreventNearbyActionAdvertising_(void *a1, const char *a2, ...)
{
  return [a1 setPreventNearbyActionAdvertising:];
}

id objc_msgSend_setPreventNotifications_(void *a1, const char *a2, ...)
{
  return [a1 setPreventNotifications:];
}

id objc_msgSend_setPreventRadarNotification_(void *a1, const char *a2, ...)
{
  return [a1 setPreventRadarNotification:];
}

id objc_msgSend_setPreventRepair_(void *a1, const char *a2, ...)
{
  return [a1 setPreventRepair:];
}

id objc_msgSend_setPreviousKeyIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousKeyIdentifier:];
}

id objc_msgSend_setPreviousSessionIDs_(void *a1, const char *a2, ...)
{
  return [a1 setPreviousSessionIDs:];
}

id objc_msgSend_setPrewarmIdleStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setPrewarmIdleStartDate:];
}

id objc_msgSend_setPrewarmIdleTime_(void *a1, const char *a2, ...)
{
  return [a1 setPrewarmIdleTime:];
}

id objc_msgSend_setPrewarmStart_(void *a1, const char *a2, ...)
{
  return [a1 setPrewarmStart:];
}

id objc_msgSend_setPrewarmStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setPrewarmStartDate:];
}

id objc_msgSend_setPrimaryAppleIDChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryAppleIDChangedHandler:];
}

id objc_msgSend_setPrimaryClient_(void *a1, const char *a2, ...)
{
  return [a1 setPrimaryClient:];
}

id objc_msgSend_setPriority_(void *a1, const char *a2, ...)
{
  return [a1 setPriority:];
}

id objc_msgSend_setPrivateKeyPersistentReference_(void *a1, const char *a2, ...)
{
  return [a1 setPrivateKeyPersistentReference:];
}

id objc_msgSend_setProblemFlags_(void *a1, const char *a2, ...)
{
  return [a1 setProblemFlags:];
}

id objc_msgSend_setProcessedImageResultsData_(void *a1, const char *a2, ...)
{
  return [a1 setProcessedImageResultsData:];
}

id objc_msgSend_setProducerScanEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setProducerScanEnabled:];
}

id objc_msgSend_setProductBuildVersion_(void *a1, const char *a2, ...)
{
  return [a1 setProductBuildVersion:];
}

id objc_msgSend_setProductID2_(void *a1, const char *a2, ...)
{
  return [a1 setProductID2:];
}

id objc_msgSend_setProductID_(void *a1, const char *a2, ...)
{
  return [a1 setProductID:];
}

id objc_msgSend_setProductName_(void *a1, const char *a2, ...)
{
  return [a1 setProductName:];
}

id objc_msgSend_setProductVersion_(void *a1, const char *a2, ...)
{
  return [a1 setProductVersion:];
}

id objc_msgSend_setProgressHandler_(void *a1, const char *a2, ...)
{
  return [a1 setProgressHandler:];
}

id objc_msgSend_setPrompt_(void *a1, const char *a2, ...)
{
  return [a1 setPrompt:];
}

id objc_msgSend_setPromptForPINHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForPINHandler:];
}

id objc_msgSend_setPromptForPickerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setPromptForPickerHandler:];
}

id objc_msgSend_setProperty_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setProperty:forKey:];
}

id objc_msgSend_setProtobufAction_forIncomingRequestsOfType_(void *a1, const char *a2, ...)
{
  return [a1 setProtobufAction:forIncomingRequestsOfType:];
}

id objc_msgSend_setProtobufAction_forIncomingResponsesOfType_(void *a1, const char *a2, ...)
{
  return [a1 setProtobufAction:forIncomingResponsesOfType:];
}

id objc_msgSend_setProtocol_(void *a1, const char *a2, ...)
{
  return [a1 setProtocol:];
}

id objc_msgSend_setProxCardShowed_forDevice_(void *a1, const char *a2, ...)
{
  return [a1 setProxCardShowed:forDevice:];
}

id objc_msgSend_setProxPairProximityEstimator_(void *a1, const char *a2, ...)
{
  return [a1 setProxPairProximityEstimator:];
}

id objc_msgSend_setProxPairingTicks_(void *a1, const char *a2, ...)
{
  return [a1 setProxPairingTicks:];
}

id objc_msgSend_setProxiedAppName_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedAppName:];
}

id objc_msgSend_setProxiedAssociatedDomains_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedAssociatedDomains:];
}

id objc_msgSend_setProxiedBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedBundleIdentifier:];
}

id objc_msgSend_setProxiedIconData_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedIconData:];
}

id objc_msgSend_setProxiedIconScale_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedIconScale:];
}

id objc_msgSend_setProxiedOriginDeviceName_(void *a1, const char *a2, ...)
{
  return [a1 setProxiedOriginDeviceName:];
}

id objc_msgSend_setProxyBluetoothID_(void *a1, const char *a2, ...)
{
  return [a1 setProxyBluetoothID];
}

id objc_msgSend_setProxyConnectionTime_(void *a1, const char *a2, ...)
{
  return [a1 setProxyConnectionTime:];
}

id objc_msgSend_setProxyDeviceModel_(void *a1, const char *a2, ...)
{
  return [a1 setProxyDeviceModel:];
}

id objc_msgSend_setProxyDiscoverTime_(void *a1, const char *a2, ...)
{
  return [a1 setProxyDiscoverTime:];
}

id objc_msgSend_setProxyDiscoveryTime_(void *a1, const char *a2, ...)
{
  return [a1 setProxyDiscoveryTime:];
}

id objc_msgSend_setProxyErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 setProxyErrorCode:];
}

id objc_msgSend_setProxyLoaderManager_(void *a1, const char *a2, ...)
{
  return [a1 setProxyLoaderManager:];
}

id objc_msgSend_setProxyNotAvailableForUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setProxyNotAvailableForUnlock:];
}

id objc_msgSend_setProxyRSSI_(void *a1, const char *a2, ...)
{
  return [a1 setProxyRSSI:];
}

id objc_msgSend_setPtsScore_(void *a1, const char *a2, ...)
{
  return [a1 setPtsScore:];
}

id objc_msgSend_setPurpose_(void *a1, const char *a2, ...)
{
  return [a1 setPurpose:];
}

id objc_msgSend_setQualityOfService_(void *a1, const char *a2, ...)
{
  return [a1 setQualityOfService:];
}

id objc_msgSend_setQuery_(void *a1, const char *a2, ...)
{
  return [a1 setQuery:];
}

id objc_msgSend_setQueueAvailableHandler_(void *a1, const char *a2, ...)
{
  return [a1 setQueueAvailableHandler:];
}

id objc_msgSend_setRSSIEstimatorInfo_(void *a1, const char *a2, ...)
{
  return [a1 setRSSIEstimatorInfo:];
}

id objc_msgSend_setRangeable_(void *a1, const char *a2, ...)
{
  return [a1 setRangeable:];
}

id objc_msgSend_setRangingCompletedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRangingCompletedHandler:];
}

id objc_msgSend_setRangingErrorString_(void *a1, const char *a2, ...)
{
  return [a1 setRangingErrorString:];
}

id objc_msgSend_setRangingInterval_(void *a1, const char *a2, ...)
{
  return [a1 setRangingInterval:];
}

id objc_msgSend_setRangingStart_(void *a1, const char *a2, ...)
{
  return [a1 setRangingStart:];
}

id objc_msgSend_setRangingStarted_(void *a1, const char *a2, ...)
{
  return [a1 setRangingStarted:];
}

id objc_msgSend_setRangingStartedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRangingStartedHandler:];
}

id objc_msgSend_setRangingTimedOut_(void *a1, const char *a2, ...)
{
  return [a1 setRangingTimedOut:];
}

id objc_msgSend_setRangingToken_(void *a1, const char *a2, ...)
{
  return [a1 setRangingToken:];
}

id objc_msgSend_setReadKey_(void *a1, const char *a2, ...)
{
  return [a1 setReadKey:];
}

id objc_msgSend_setReadNonce_(void *a1, const char *a2, ...)
{
  return [a1 setReadNonce:];
}

id objc_msgSend_setReadStream_(void *a1, const char *a2, ...)
{
  return [a1 setReadStream:];
}

id objc_msgSend_setRealName_(void *a1, const char *a2, ...)
{
  return [a1 setRealName:];
}

id objc_msgSend_setReason_(void *a1, const char *a2, ...)
{
  return [a1 setReason:];
}

id objc_msgSend_setReceivedAWDLInfo_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedAWDLInfo:];
}

id objc_msgSend_setReceivedAuthPromptResponse_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedAuthPromptResponse:];
}

id objc_msgSend_setReceivedExchangeRequest_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedExchangeRequest:];
}

id objc_msgSend_setReceivedFrameHandler_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedFrameHandler:];
}

id objc_msgSend_setReceivedFramePeerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedFramePeerHandler:];
}

id objc_msgSend_setReceivedObjectHandler_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedObjectHandler:];
}

id objc_msgSend_setReceivedRequestHandler_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedRequestHandler:];
}

id objc_msgSend_setReceivedSetupACK_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedSetupACK:];
}

id objc_msgSend_setReceivedTokenACK_(void *a1, const char *a2, ...)
{
  return [a1 setReceivedTokenACK:];
}

id objc_msgSend_setRecipients_(void *a1, const char *a2, ...)
{
  return [a1 setRecipients:];
}

id objc_msgSend_setRegistrationID_(void *a1, const char *a2, ...)
{
  return [a1 setRegistrationID:];
}

id objc_msgSend_setReloadData_(void *a1, const char *a2, ...)
{
  return [a1 setReloadData:];
}

id objc_msgSend_setRelockedWatch_(void *a1, const char *a2, ...)
{
  return [a1 setRelockedWatch:];
}

id objc_msgSend_setRemoteAWDLInfo_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteAWDLInfo:];
}

id objc_msgSend_setRemoteDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteDeviceID:];
}

id objc_msgSend_setRemoteDeviceLocked_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteDeviceLocked:];
}

id objc_msgSend_setRemoteLTK_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteLTK:];
}

id objc_msgSend_setRemoteLTKHash_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteLTKHash:];
}

id objc_msgSend_setRemoteLTKs_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteLTKs:];
}

id objc_msgSend_setRemoteObjectInterface_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteObjectInterface:];
}

id objc_msgSend_setRemotePeer_(void *a1, const char *a2, ...)
{
  return [a1 setRemotePeer:];
}

id objc_msgSend_setRemoteTextEventHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRemoteTextEventHandler:];
}

id objc_msgSend_setRepeats_(void *a1, const char *a2, ...)
{
  return [a1 setRepeats:];
}

id objc_msgSend_setRequest_(void *a1, const char *a2, ...)
{
  return [a1 setRequest:];
}

id objc_msgSend_setRequestCachePolicy_(void *a1, const char *a2, ...)
{
  return [a1 setRequestCachePolicy:];
}

id objc_msgSend_setRequestCreatedDate_(void *a1, const char *a2, ...)
{
  return [a1 setRequestCreatedDate:];
}

id objc_msgSend_setRequestData_(void *a1, const char *a2, ...)
{
  return [a1 setRequestData:];
}

id objc_msgSend_setRequestID_(void *a1, const char *a2, ...)
{
  return [a1 setRequestID:];
}

id objc_msgSend_setRequestIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setRequestIdentifier:];
}

id objc_msgSend_setRequestMessageHandler_(void *a1, const char *a2, ...)
{
  return [a1 setRequestMessageHandler:];
}

id objc_msgSend_setRequestSSID_(void *a1, const char *a2, ...)
{
  return [a1 setRequestSSID:];
}

id objc_msgSend_setRequestType_(void *a1, const char *a2, ...)
{
  return [a1 setRequestType:];
}

id objc_msgSend_setRequiredServiceTypes_(void *a1, const char *a2, ...)
{
  return [a1 setRequiredServiceTypes:];
}

id objc_msgSend_setRequiresUnlockedUI_(void *a1, const char *a2, ...)
{
  return [a1 setRequiresUnlockedUI:];
}

id objc_msgSend_setRescanIntervalScreenOff_(void *a1, const char *a2, ...)
{
  return [a1 setRescanIntervalScreenOff:];
}

id objc_msgSend_setResetReason_(void *a1, const char *a2, ...)
{
  return [a1 setResetReason:];
}

id objc_msgSend_setResourceValue_forKey_error_(void *a1, const char *a2, ...)
{
  return [a1 setResourceValue:forKey:error:];
}

id objc_msgSend_setResponseHandler_(void *a1, const char *a2, ...)
{
  return [a1 setResponseHandler:];
}

id objc_msgSend_setResponseMessageInternalHandler_(void *a1, const char *a2, ...)
{
  return [a1 setResponseMessageInternalHandler:];
}

id objc_msgSend_setResponseTimer_(void *a1, const char *a2, ...)
{
  return [a1 setResponseTimer:];
}

id objc_msgSend_setRestrictedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 setRestrictedActivityTypes:];
}

id objc_msgSend_setResults_(void *a1, const char *a2, ...)
{
  return [a1 setResults:];
}

id objc_msgSend_setRetriedSetup(void *a1, const char *a2, ...)
{
  return _[a1 setRetriedSetup];
}

id objc_msgSend_setRetriedWithEscrowRecord_(void *a1, const char *a2, ...)
{
  return [a1 setRetriedWithEscrowRecord:];
}

id objc_msgSend_setRoute_(void *a1, const char *a2, ...)
{
  return [a1 setRoute:];
}

id objc_msgSend_setRpIdentity_(void *a1, const char *a2, ...)
{
  return [a1 setRpIdentity:];
}

id objc_msgSend_setRssiLog_(void *a1, const char *a2, ...)
{
  return [a1 setRssiLog:];
}

id objc_msgSend_setRssiThreshold_(void *a1, const char *a2, ...)
{
  return [a1 setRssiThreshold:];
}

id objc_msgSend_setSandboxExtensionsByfileURLPath_(void *a1, const char *a2, ...)
{
  return [a1 setSandboxExtensionsByfileURLPath:];
}

id objc_msgSend_setScanAssertionTimer_(void *a1, const char *a2, ...)
{
  return [a1 setScanAssertionTimer:];
}

id objc_msgSend_setScanAutoUnlockDevices_(void *a1, const char *a2, ...)
{
  return [a1 setScanAutoUnlockDevices:];
}

id objc_msgSend_setScanCache_(void *a1, const char *a2, ...)
{
  return [a1 setScanCache:];
}

id objc_msgSend_setScanErrorString_(void *a1, const char *a2, ...)
{
  return [a1 setScanErrorString:];
}

id objc_msgSend_setScanPhoneIDs_(void *a1, const char *a2, ...)
{
  return [a1 setScanPhoneIDs:];
}

id objc_msgSend_setScanRate_(void *a1, const char *a2, ...)
{
  return [a1 setScanRate:];
}

id objc_msgSend_setScanRateOverride_(void *a1, const char *a2, ...)
{
  return [a1 setScanRateOverride:];
}

id objc_msgSend_setScanResetTimer_(void *a1, const char *a2, ...)
{
  return [a1 setScanResetTimer:];
}

id objc_msgSend_setScanStateChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setScanStateChangedHandler:];
}

id objc_msgSend_setScanTimer_(void *a1, const char *a2, ...)
{
  return [a1 setScanTimer:];
}

id objc_msgSend_setScanWatchIDs_(void *a1, const char *a2, ...)
{
  return [a1 setScanWatchIDs:];
}

id objc_msgSend_setScanner_(void *a1, const char *a2, ...)
{
  return [a1 setScanner:];
}

id objc_msgSend_setScreenLockedChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setScreenLockedChangedHandler:];
}

id objc_msgSend_setScreenOnChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setScreenOnChangedHandler:];
}

id objc_msgSend_setScreenSaverChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setScreenSaverChangedHandler:];
}

id objc_msgSend_setScreenTimeMonitor_(void *a1, const char *a2, ...)
{
  return [a1 setScreenTimeMonitor:];
}

id objc_msgSend_setSecret_(void *a1, const char *a2, ...)
{
  return [a1 setSecret:];
}

id objc_msgSend_setSecurityContext_(void *a1, const char *a2, ...)
{
  return [a1 setSecurityContext:];
}

id objc_msgSend_setSecurityManager_(void *a1, const char *a2, ...)
{
  return [a1 setSecurityManager:];
}

id objc_msgSend_setSelectedAction_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedAction:];
}

id objc_msgSend_setSelectedApplication_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedApplication:];
}

id objc_msgSend_setSelectedNode_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedNode:];
}

id objc_msgSend_setSelectedRecipient_(void *a1, const char *a2, ...)
{
  return [a1 setSelectedRecipient:];
}

id objc_msgSend_setSelectionReason_(void *a1, const char *a2, ...)
{
  return [a1 setSelectionReason:];
}

id objc_msgSend_setSendDataQueue_(void *a1, const char *a2, ...)
{
  return [a1 setSendDataQueue:];
}

id objc_msgSend_setSendFrameHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSendFrameHandler:];
}

id objc_msgSend_setSendFramePeerHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSendFramePeerHandler:];
}

id objc_msgSend_setSendState_(void *a1, const char *a2, ...)
{
  return [a1 setSendState:];
}

id objc_msgSend_setSenderID_(void *a1, const char *a2, ...)
{
  return [a1 setSenderID:];
}

id objc_msgSend_setSenderName_(void *a1, const char *a2, ...)
{
  return [a1 setSenderName:];
}

id objc_msgSend_setSendersKnownAlias_(void *a1, const char *a2, ...)
{
  return [a1 setSendersKnownAlias:];
}

id objc_msgSend_setSendingAppBundleID_(void *a1, const char *a2, ...)
{
  return [a1 setSendingAppBundleID:];
}

id objc_msgSend_setSendingConfirmation_(void *a1, const char *a2, ...)
{
  return [a1 setSendingConfirmation:];
}

id objc_msgSend_setSentExchangeResponse_(void *a1, const char *a2, ...)
{
  return [a1 setSentExchangeResponse:];
}

id objc_msgSend_setSentImageData_(void *a1, const char *a2, ...)
{
  return [a1 setSentImageData:];
}

id objc_msgSend_setSentInitialConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 setSentInitialConfiguration:];
}

id objc_msgSend_setSentLockedState_(void *a1, const char *a2, ...)
{
  return [a1 setSentLockedState:];
}

id objc_msgSend_setSerialNumber_(void *a1, const char *a2, ...)
{
  return [a1 setSerialNumber:];
}

id objc_msgSend_setServerMountPoints_(void *a1, const char *a2, ...)
{
  return [a1 setServerMountPoints:];
}

id objc_msgSend_setServers_(void *a1, const char *a2, ...)
{
  return [a1 setServers:];
}

id objc_msgSend_setServiceIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setServiceIdentifier:];
}

id objc_msgSend_setServiceTimer_(void *a1, const char *a2, ...)
{
  return [a1 setServiceTimer:];
}

id objc_msgSend_setServiceType_(void *a1, const char *a2, ...)
{
  return [a1 setServiceType:];
}

id objc_msgSend_setSession_(void *a1, const char *a2, ...)
{
  return [a1 setSession:];
}

id objc_msgSend_setSessionAuthToken_(void *a1, const char *a2, ...)
{
  return [a1 setSessionAuthToken:];
}

id objc_msgSend_setSessionCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setSessionCompleted:];
}

id objc_msgSend_setSessionCreated_(void *a1, const char *a2, ...)
{
  return [a1 setSessionCreated:];
}

id objc_msgSend_setSessionCreatedMessage_(void *a1, const char *a2, ...)
{
  return [a1 setSessionCreatedMessage:];
}

id objc_msgSend_setSessionFlags_(void *a1, const char *a2, ...)
{
  return [a1 setSessionFlags:];
}

id objc_msgSend_setSessionID_(void *a1, const char *a2, ...)
{
  return [a1 setSessionID:];
}

id objc_msgSend_setSessionKeepAliveTransactionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSessionKeepAliveTransactionIdentifier:];
}

id objc_msgSend_setSessionObserver_(void *a1, const char *a2, ...)
{
  return [a1 setSessionObserver:];
}

id objc_msgSend_setSessionRangingKey_(void *a1, const char *a2, ...)
{
  return [a1 setSessionRangingKey:];
}

id objc_msgSend_setSessionStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setSessionStartDate:];
}

id objc_msgSend_setSessionStartedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSessionStartedHandler:];
}

id objc_msgSend_setSetupAuthSession_(void *a1, const char *a2, ...)
{
  return [a1 setSetupAuthSession:];
}

id objc_msgSend_setSetupError_(void *a1, const char *a2, ...)
{
  return [a1 setSetupError:];
}

id objc_msgSend_setSetupMessageIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setSetupMessageIdentifier:];
}

id objc_msgSend_setSetupProximityEstimator_(void *a1, const char *a2, ...)
{
  return [a1 setSetupProximityEstimator:];
}

id objc_msgSend_setSetupRetryDevice_(void *a1, const char *a2, ...)
{
  return [a1 setSetupRetryDevice:];
}

id objc_msgSend_setSetupRetryDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setSetupRetryDeviceID];
}

id objc_msgSend_setSetupRetryDeviceTimer_(void *a1, const char *a2, ...)
{
  return [a1 setSetupRetryDeviceTimer:];
}

id objc_msgSend_setSfService_(void *a1, const char *a2, ...)
{
  return [a1 setSfService:];
}

id objc_msgSend_setSf_transferState_(void *a1, const char *a2, ...)
{
  return [a1 setSf_transferState:];
}

id objc_msgSend_setSh_hostUserInterfaceIdiom_(void *a1, const char *a2, ...)
{
  return [a1 setSh_hostUserInterfaceIdiom:];
}

id objc_msgSend_setShareActivities_(void *a1, const char *a2, ...)
{
  return [a1 setShareActivities:];
}

id objc_msgSend_setShareActivitiesByUUID_(void *a1, const char *a2, ...)
{
  return [a1 setShareActivitiesByUUID:];
}

id objc_msgSend_setShareActivitiesInUserOrder_(void *a1, const char *a2, ...)
{
  return [a1 setShareActivitiesInUserOrder:];
}

id objc_msgSend_setShareProxies_(void *a1, const char *a2, ...)
{
  return [a1 setShareProxies:];
}

id objc_msgSend_setShareUserDefaults_(void *a1, const char *a2, ...)
{
  return [a1 setShareUserDefaults:];
}

id objc_msgSend_setShareUserDefaultsActivity_(void *a1, const char *a2, ...)
{
  return [a1 setShareUserDefaultsActivity:];
}

id objc_msgSend_setSharingExpanded_(void *a1, const char *a2, ...)
{
  return [a1 setSharingExpanded:];
}

id objc_msgSend_setShouldAdvertise_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAdvertise:];
}

id objc_msgSend_setShouldAlertOnNotify_(void *a1, const char *a2, ...)
{
  return [a1 setShouldAlertOnNotify:];
}

id objc_msgSend_setShouldBackgroundDefaultAction_(void *a1, const char *a2, ...)
{
  return [a1 setShouldBackgroundDefaultAction:];
}

id objc_msgSend_setShouldBlockPresentation_(void *a1, const char *a2, ...)
{
  return [a1 setShouldBlockPresentation:];
}

id objc_msgSend_setShouldDelayWorkDueToPowerAssertion_(void *a1, const char *a2, ...)
{
  return [a1 setShouldDelayWorkDueToPowerAssertion:];
}

id objc_msgSend_setShouldExtractMediaFromPhotosBundles_(void *a1, const char *a2, ...)
{
  return [a1 setShouldExtractMediaFromPhotosBundles:];
}

id objc_msgSend_setShouldHideDate_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHideDate:];
}

id objc_msgSend_setShouldHideTime_(void *a1, const char *a2, ...)
{
  return [a1 setShouldHideTime:];
}

id objc_msgSend_setShouldIgnoreDoNotDisturb_(void *a1, const char *a2, ...)
{
  return [a1 setShouldIgnoreDoNotDisturb:];
}

id objc_msgSend_setShouldMatchOnlyUserElectedExtensions_(void *a1, const char *a2, ...)
{
  return [a1 setShouldMatchOnlyUserElectedExtensions:];
}

id objc_msgSend_setShouldNotify_(void *a1, const char *a2, ...)
{
  return [a1 setShouldNotify:];
}

id objc_msgSend_setShouldPublishProgress_(void *a1, const char *a2, ...)
{
  return [a1 setShouldPublishProgress:];
}

id objc_msgSend_setShouldReadNetwork_(void *a1, const char *a2, ...)
{
  return [a1 setShouldReadNetwork:];
}

id objc_msgSend_setShouldSuggestFamilyMembers_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSuggestFamilyMembers:];
}

id objc_msgSend_setShouldSuppressDefaultAction_(void *a1, const char *a2, ...)
{
  return [a1 setShouldSuppressDefaultAction:];
}

id objc_msgSend_setShouldUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setShouldUnlock:];
}

id objc_msgSend_setShouldUpdatePersistentServiceTokens_(void *a1, const char *a2, ...)
{
  return [a1 setShouldUpdatePersistentServiceTokens:];
}

id objc_msgSend_setShouldUpdateUserResponse_(void *a1, const char *a2, ...)
{
  return [a1 setShouldUpdateUserResponse:];
}

id objc_msgSend_setShouldWaitToCompleteUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setShouldWaitToCompleteUnlock:];
}

id objc_msgSend_setShowPINHandler_(void *a1, const char *a2, ...)
{
  return [a1 setShowPINHandler:];
}

id objc_msgSend_setShowPotentialFamilyMembers_(void *a1, const char *a2, ...)
{
  return [a1 setShowPotentialFamilyMembers:];
}

id objc_msgSend_setSignout_(void *a1, const char *a2, ...)
{
  return [a1 setSignout:];
}

id objc_msgSend_setSingleItemLocalizedTitle_(void *a1, const char *a2, ...)
{
  return [a1 setSingleItemLocalizedTitle:];
}

id objc_msgSend_setSkipMotionCheck_(void *a1, const char *a2, ...)
{
  return [a1 setSkipMotionCheck:];
}

id objc_msgSend_setSkipReadableCheckFiles_(void *a1, const char *a2, ...)
{
  return [a1 setSkipReadableCheckFiles:];
}

id objc_msgSend_setSlotTextHeight_(void *a1, const char *a2, ...)
{
  return [a1 setSlotTextHeight:];
}

id objc_msgSend_setSound_(void *a1, const char *a2, ...)
{
  return [a1 setSound:];
}

id objc_msgSend_setSourceApplicationAuditTokenData_(void *a1, const char *a2, ...)
{
  return [a1 setSourceApplicationAuditTokenData:];
}

id objc_msgSend_setSourceFiles_(void *a1, const char *a2, ...)
{
  return [a1 setSourceFiles:];
}

id objc_msgSend_setSpotlightMetadata_(void *a1, const char *a2, ...)
{
  return [a1 setSpotlightMetadata:];
}

id objc_msgSend_setStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setStartDate:];
}

id objc_msgSend_setStarted_(void *a1, const char *a2, ...)
{
  return [a1 setStarted:];
}

id objc_msgSend_setStartedHostAP_(void *a1, const char *a2, ...)
{
  return [a1 setStartedHostAP:];
}

id objc_msgSend_setStashBagSession_(void *a1, const char *a2, ...)
{
  return [a1 setStashBagSession:];
}

id objc_msgSend_setStashToken_(void *a1, const char *a2, ...)
{
  return [a1 setStashToken:];
}

id objc_msgSend_setState_(void *a1, const char *a2, ...)
{
  return [a1 setState:];
}

id objc_msgSend_setStateHandle_(void *a1, const char *a2, ...)
{
  return [a1 setStateHandle:];
}

id objc_msgSend_setStatusChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setStatusChangedHandler:];
}

id objc_msgSend_setStatusHandler_(void *a1, const char *a2, ...)
{
  return [a1 setStatusHandler:];
}

id objc_msgSend_setStatusMonitor_(void *a1, const char *a2, ...)
{
  return [a1 setStatusMonitor:];
}

id objc_msgSend_setStatusUpdated_(void *a1, const char *a2, ...)
{
  return [a1 setStatusUpdated:];
}

id objc_msgSend_setStepData_(void *a1, const char *a2, ...)
{
  return [a1 setStepData:];
}

id objc_msgSend_setString_(void *a1, const char *a2, ...)
{
  return [a1 setString:];
}

id objc_msgSend_setSubject_(void *a1, const char *a2, ...)
{
  return [a1 setSubject:];
}

id objc_msgSend_setSubtitle_(void *a1, const char *a2, ...)
{
  return [a1 setSubtitle:];
}

id objc_msgSend_setSucceeded_(void *a1, const char *a2, ...)
{
  return [a1 setSucceeded:];
}

id objc_msgSend_setSuccess_(void *a1, const char *a2, ...)
{
  return [a1 setSuccess:];
}

id objc_msgSend_setSuccessfulAttempts_(void *a1, const char *a2, ...)
{
  return [a1 setSuccessfulAttempts:];
}

id objc_msgSend_setSuggestedDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedDeviceID:];
}

id objc_msgSend_setSuggestedPeer_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedPeer:];
}

id objc_msgSend_setSuggestedPeers_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedPeers:];
}

id objc_msgSend_setSuggestedPeople_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedPeople:];
}

id objc_msgSend_setSuggestedValidDuration_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestedValidDuration:];
}

id objc_msgSend_setSuggestion_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestion:];
}

id objc_msgSend_setSuggestionBrowser_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionBrowser:];
}

id objc_msgSend_setSuggestionDate_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionDate:];
}

id objc_msgSend_setSuggestionIndex_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionIndex:];
}

id objc_msgSend_setSuggestionNode_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionNode:];
}

id objc_msgSend_setSuggestionReason_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionReason:];
}

id objc_msgSend_setSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestions:];
}

id objc_msgSend_setSuggestionsFilteredByBundleIds_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionsFilteredByBundleIds:];
}

id objc_msgSend_setSuggestionsHash_(void *a1, const char *a2, ...)
{
  return [a1 setSuggestionsHash:];
}

id objc_msgSend_setSupportedTypeIdentifiers_(void *a1, const char *a2, ...)
{
  return [a1 setSupportedTypeIdentifiers:];
}

id objc_msgSend_setSupportsACK_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsACK:];
}

id objc_msgSend_setSupportsAdvertisingUnlocked_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsAdvertisingUnlocked:];
}

id objc_msgSend_setSupportsAlwaysDirect_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsAlwaysDirect:];
}

id objc_msgSend_setSupportsApproveIcon_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsApproveIcon:];
}

id objc_msgSend_setSupportsApproveWithWatch_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsApproveWithWatch:];
}

id objc_msgSend_setSupportsCollaboration_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsCollaboration:];
}

id objc_msgSend_setSupportsCompanionLink_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsCompanionLink:];
}

id objc_msgSend_setSupportsConfirmationACK_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsConfirmationACK:];
}

id objc_msgSend_setSupportsConnectionCache_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsConnectionCache:];
}

id objc_msgSend_setSupportsEncryption_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsEncryption:];
}

id objc_msgSend_setSupportsHEIC_(void *a1, const char *a2, ...)
{
  return [a1 setSupportsHEIC:];
}

id objc_msgSend_setSuppressAlert_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressAlert:];
}

id objc_msgSend_setSuppressNotification_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressNotification:];
}

id objc_msgSend_setSuppressWatchNotification_(void *a1, const char *a2, ...)
{
  return [a1 setSuppressWatchNotification:];
}

id objc_msgSend_setSuspended_(void *a1, const char *a2, ...)
{
  return [a1 setSuspended:];
}

id objc_msgSend_setSystemLockStateChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setSystemLockStateChangedHandler:];
}

id objc_msgSend_setTCPProperties_(void *a1, const char *a2, ...)
{
  return [a1 setTCPProperties:];
}

id objc_msgSend_setTLSMaximumSupportedProtocol_(void *a1, const char *a2, ...)
{
  return [a1 setTLSMaximumSupportedProtocol:];
}

id objc_msgSend_setTappedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTappedHandler:];
}

id objc_msgSend_setTargetBundleId_(void *a1, const char *a2, ...)
{
  return [a1 setTargetBundleId:];
}

id objc_msgSend_setTcpConnectionComplete_(void *a1, const char *a2, ...)
{
  return [a1 setTcpConnectionComplete:];
}

id objc_msgSend_setTempPaired_(void *a1, const char *a2, ...)
{
  return [a1 setTempPaired:];
}

id objc_msgSend_setTemperature_(void *a1, const char *a2, ...)
{
  return [a1 setTemperature:];
}

id objc_msgSend_setTestMode_(void *a1, const char *a2, ...)
{
  return [a1 setTestMode:];
}

id objc_msgSend_setTetheringSupported_(void *a1, const char *a2, ...)
{
  return [a1 setTetheringSupported:];
}

id objc_msgSend_setTextColor_(void *a1, const char *a2, ...)
{
  return [a1 setTextColor:];
}

id objc_msgSend_setTextInputDidBegin_(void *a1, const char *a2, ...)
{
  return [a1 setTextInputDidBegin:];
}

id objc_msgSend_setTextInputDidEnd_(void *a1, const char *a2, ...)
{
  return [a1 setTextInputDidEnd:];
}

id objc_msgSend_setTextSessionDidBegin_(void *a1, const char *a2, ...)
{
  return [a1 setTextSessionDidBegin:];
}

id objc_msgSend_setTextSessionDidChange_(void *a1, const char *a2, ...)
{
  return [a1 setTextSessionDidChange:];
}

id objc_msgSend_setTextSessionDidEnd_(void *a1, const char *a2, ...)
{
  return [a1 setTextSessionDidEnd:];
}

id objc_msgSend_setTimeSinceLastMachineWake_(void *a1, const char *a2, ...)
{
  return [a1 setTimeSinceLastMachineWake:];
}

id objc_msgSend_setTimeStyle_(void *a1, const char *a2, ...)
{
  return [a1 setTimeStyle:];
}

id objc_msgSend_setTimeZone_(void *a1, const char *a2, ...)
{
  return [a1 setTimeZone:];
}

id objc_msgSend_setTimeout_(void *a1, const char *a2, ...)
{
  return [a1 setTimeout:];
}

id objc_msgSend_setTimeoutHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutHandler:];
}

id objc_msgSend_setTimeoutIntervalForRequest_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutIntervalForRequest:];
}

id objc_msgSend_setTimeoutIntervalForResource_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutIntervalForResource:];
}

id objc_msgSend_setTimeoutTimeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutTimeInterval:];
}

id objc_msgSend_setTimeoutTimer_(void *a1, const char *a2, ...)
{
  return [a1 setTimeoutTimer:];
}

id objc_msgSend_setTintColor_(void *a1, const char *a2, ...)
{
  return [a1 setTintColor:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setTitleKey_(void *a1, const char *a2, ...)
{
  return [a1 setTitleKey:];
}

id objc_msgSend_setTlsHandshakeComplete_(void *a1, const char *a2, ...)
{
  return [a1 setTlsHandshakeComplete:];
}

id objc_msgSend_setToken_(void *a1, const char *a2, ...)
{
  return [a1 setToken:];
}

id objc_msgSend_setTokenExchange_(void *a1, const char *a2, ...)
{
  return [a1 setTokenExchange:];
}

id objc_msgSend_setTokenExchangeDate_(void *a1, const char *a2, ...)
{
  return [a1 setTokenExchangeDate:];
}

id objc_msgSend_setTokenExchangeInterval_(void *a1, const char *a2, ...)
{
  return [a1 setTokenExchangeInterval:];
}

id objc_msgSend_setTokenMessageIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setTokenMessageIdentifier:];
}

id objc_msgSend_setTolerance_(void *a1, const char *a2, ...)
{
  return [a1 setTolerance:];
}

id objc_msgSend_setTotalAttempts_(void *a1, const char *a2, ...)
{
  return [a1 setTotalAttempts:];
}

id objc_msgSend_setTotalBytes_(void *a1, const char *a2, ...)
{
  return [a1 setTotalBytes:];
}

id objc_msgSend_setTotalCacheAccessCount_(void *a1, const char *a2, ...)
{
  return [a1 setTotalCacheAccessCount:];
}

id objc_msgSend_setTotalShareTimeMs_(void *a1, const char *a2, ...)
{
  return [a1 setTotalShareTimeMs:];
}

id objc_msgSend_setTotalUnitCount_(void *a1, const char *a2, ...)
{
  return [a1 setTotalUnitCount:];
}

id objc_msgSend_setTotalUnlockDuration_(void *a1, const char *a2, ...)
{
  return [a1 setTotalUnlockDuration:];
}

id objc_msgSend_setTotalUnlockProcessDuration_(void *a1, const char *a2, ...)
{
  return [a1 setTotalUnlockProcessDuration:];
}

id objc_msgSend_setTotalUnlocks_(void *a1, const char *a2, ...)
{
  return [a1 setTotalUnlocks:];
}

id objc_msgSend_setTrackPeers_(void *a1, const char *a2, ...)
{
  return [a1 setTrackPeers:];
}

id objc_msgSend_setTrackedPeers_(void *a1, const char *a2, ...)
{
  return [a1 setTrackedPeers:];
}

id objc_msgSend_setTrafficFilterParams_(void *a1, const char *a2, ...)
{
  return [a1 setTrafficFilterParams:];
}

id objc_msgSend_setTransfer_(void *a1, const char *a2, ...)
{
  return [a1 setTransfer:];
}

id objc_msgSend_setTransferActive_(void *a1, const char *a2, ...)
{
  return [a1 setTransferActive:];
}

id objc_msgSend_setTransferDoneDurationSecs_(void *a1, const char *a2, ...)
{
  return [a1 setTransferDoneDurationSecs:];
}

id objc_msgSend_setTransferDoneTicks_(void *a1, const char *a2, ...)
{
  return [a1 setTransferDoneTicks:];
}

id objc_msgSend_setTransferManager_(void *a1, const char *a2, ...)
{
  return [a1 setTransferManager:];
}

id objc_msgSend_setTransferPendingDurationSecs_(void *a1, const char *a2, ...)
{
  return [a1 setTransferPendingDurationSecs:];
}

id objc_msgSend_setTransferPendingStartTicks_(void *a1, const char *a2, ...)
{
  return [a1 setTransferPendingStartTicks:];
}

id objc_msgSend_setTransferState_(void *a1, const char *a2, ...)
{
  return [a1 setTransferState:];
}

id objc_msgSend_setTransferState_forTransfer_shouldNotify_(void *a1, const char *a2, ...)
{
  return [a1 setTransferState:forTransfer:shouldNotify:];
}

id objc_msgSend_setTransferState_forTransfer_shouldNotify_shouldCleanup_(void *a1, const char *a2, ...)
{
  return [a1 setTransferState:forTransfer:shouldNotify:shouldCleanup:];
}

id objc_msgSend_setTransferTypes_(void *a1, const char *a2, ...)
{
  return [a1 setTransferTypes:];
}

id objc_msgSend_setTransferUpdateChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTransferUpdateChangedHandler:];
}

id objc_msgSend_setTransfersCompleted_(void *a1, const char *a2, ...)
{
  return [a1 setTransfersCompleted:];
}

id objc_msgSend_setTransfersInitiated_(void *a1, const char *a2, ...)
{
  return [a1 setTransfersInitiated:];
}

id objc_msgSend_setTransientContactsCount_(void *a1, const char *a2, ...)
{
  return [a1 setTransientContactsCount:];
}

id objc_msgSend_setTransitionHandler_(void *a1, const char *a2, ...)
{
  return [a1 setTransitionHandler:];
}

id objc_msgSend_setTransportBundleID_(void *a1, const char *a2, ...)
{
  return [a1 setTransportBundleID:];
}

id objc_msgSend_setTransportBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setTransportBundleIdentifier:];
}

id objc_msgSend_setTransportImageSlotID_(void *a1, const char *a2, ...)
{
  return [a1 setTransportImageSlotID:];
}

id objc_msgSend_setTransportType_(void *a1, const char *a2, ...)
{
  return [a1 setTransportType:];
}

id objc_msgSend_setTriggerMs_(void *a1, const char *a2, ...)
{
  return [a1 setTriggerMs:];
}

id objc_msgSend_setTriggered_(void *a1, const char *a2, ...)
{
  return [a1 setTriggered:];
}

id objc_msgSend_setType_(void *a1, const char *a2, ...)
{
  return [a1 setType:];
}

id objc_msgSend_setTypeIdentifiersBeingShared_(void *a1, const char *a2, ...)
{
  return [a1 setTypeIdentifiersBeingShared:];
}

id objc_msgSend_setURL_(void *a1, const char *a2, ...)
{
  return [a1 setURL:];
}

id objc_msgSend_setUiServiceConnection_(void *a1, const char *a2, ...)
{
  return [a1 setUiServiceConnection:];
}

id objc_msgSend_setUniqueID_(void *a1, const char *a2, ...)
{
  return [a1 setUniqueID:];
}

id objc_msgSend_setUniqueIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 setUniqueIdentifier:];
}

id objc_msgSend_setUnlockAuthSession_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockAuthSession:];
}

id objc_msgSend_setUnlockEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockEnabled:];
}

id objc_msgSend_setUnlockSessionID_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockSessionID:];
}

id objc_msgSend_setUnlockSucceeded_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockSucceeded:];
}

id objc_msgSend_setUnlocked_(void *a1, const char *a2, ...)
{
  return [a1 setUnlocked:];
}

id objc_msgSend_setUnlockedOnWristDate_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockedOnWristDate:];
}

id objc_msgSend_setUnlockingState_(void *a1, const char *a2, ...)
{
  return [a1 setUnlockingState:];
}

id objc_msgSend_setUnprivatizedURLs_(void *a1, const char *a2, ...)
{
  return [a1 setUnprivatizedURLs:];
}

id objc_msgSend_setUnzipCompressionType_(void *a1, const char *a2, ...)
{
  return [a1 setUnzipCompressionType:];
}

id objc_msgSend_setUpBluetoothDeviceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 setUpBluetoothDeviceMonitor];
}

id objc_msgSend_setUpHandoffPreferenceMonitor(void *a1, const char *a2, ...)
{
  return _[a1 setUpHandoffPreferenceMonitor];
}

id objc_msgSend_setUpIDSServices(void *a1, const char *a2, ...)
{
  return _[a1 setUpIDSServices];
}

id objc_msgSend_setUpMagnetLinkTimer(void *a1, const char *a2, ...)
{
  return _[a1 setUpMagnetLinkTimer];
}

id objc_msgSend_setUpRapport(void *a1, const char *a2, ...)
{
  return _[a1 setUpRapport];
}

id objc_msgSend_setUpSystemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 setUpSystemMonitor];
}

id objc_msgSend_setUpdateTransferStateHandler_(void *a1, const char *a2, ...)
{
  return [a1 setUpdateTransferStateHandler:];
}

id objc_msgSend_setUpsellDevice_(void *a1, const char *a2, ...)
{
  return [a1 setUpsellDevice:];
}

id objc_msgSend_setUrl_(void *a1, const char *a2, ...)
{
  return [a1 setUrl:];
}

id objc_msgSend_setUrlBeingShared_(void *a1, const char *a2, ...)
{
  return [a1 setUrlBeingShared:];
}

id objc_msgSend_setUrlRequest_(void *a1, const char *a2, ...)
{
  return [a1 setUrlRequest:];
}

id objc_msgSend_setUrlsBeingShared_(void *a1, const char *a2, ...)
{
  return [a1 setUrlsBeingShared:];
}

id objc_msgSend_setUseAKSToken_(void *a1, const char *a2, ...)
{
  return [a1 setUseAKSToken:];
}

id objc_msgSend_setUseBTPipe_(void *a1, const char *a2, ...)
{
  return [a1 setUseBTPipe:];
}

id objc_msgSend_setUseCase_(void *a1, const char *a2, ...)
{
  return [a1 setUseCase:];
}

id objc_msgSend_setUseCases_(void *a1, const char *a2, ...)
{
  return [a1 setUseCases:];
}

id objc_msgSend_setUseEncryption_(void *a1, const char *a2, ...)
{
  return [a1 setUseEncryption:];
}

id objc_msgSend_setUseOpenWithText_(void *a1, const char *a2, ...)
{
  return [a1 setUseOpenWithText:];
}

id objc_msgSend_setUseProxy_(void *a1, const char *a2, ...)
{
  return [a1 setUseProxy:];
}

id objc_msgSend_setUseToken_(void *a1, const char *a2, ...)
{
  return [a1 setUseToken:];
}

id objc_msgSend_setUseTransferBehaviorUserPreference_(void *a1, const char *a2, ...)
{
  return [a1 setUseTransferBehaviorUserPreference:];
}

id objc_msgSend_setUserInfo_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfo:];
}

id objc_msgSend_setUserInfoObject_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setUserInfoObject:forKey:];
}

id objc_msgSend_setUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 setUserInterfaceStyle:];
}

id objc_msgSend_setUserName_(void *a1, const char *a2, ...)
{
  return [a1 setUserName:];
}

id objc_msgSend_setUserNotInContacts_(void *a1, const char *a2, ...)
{
  return [a1 setUserNotInContacts:];
}

id objc_msgSend_setUserRequestRequired_(void *a1, const char *a2, ...)
{
  return [a1 setUserRequestRequired:];
}

id objc_msgSend_setUserResponse_(void *a1, const char *a2, ...)
{
  return [a1 setUserResponse:];
}

id objc_msgSend_setUsername_(void *a1, const char *a2, ...)
{
  return [a1 setUsername:];
}

id objc_msgSend_setUsingEscrowRecord_(void *a1, const char *a2, ...)
{
  return [a1 setUsingEscrowRecord:];
}

id objc_msgSend_setUsingImageCache_(void *a1, const char *a2, ...)
{
  return [a1 setUsingImageCache:];
}

id objc_msgSend_setUsingMessages_(void *a1, const char *a2, ...)
{
  return [a1 setUsingMessages:];
}

id objc_msgSend_setUsingRecord_(void *a1, const char *a2, ...)
{
  return [a1 setUsingRecord:];
}

id objc_msgSend_setUti_(void *a1, const char *a2, ...)
{
  return [a1 setUti:];
}

id objc_msgSend_setValidKey_(void *a1, const char *a2, ...)
{
  return [a1 setValidKey:];
}

id objc_msgSend_setValidStartDate_(void *a1, const char *a2, ...)
{
  return [a1 setValidStartDate:];
}

id objc_msgSend_setValidatedEmailHashes_(void *a1, const char *a2, ...)
{
  return [a1 setValidatedEmailHashes:];
}

id objc_msgSend_setValidatedPhoneHashes_(void *a1, const char *a2, ...)
{
  return [a1 setValidatedPhoneHashes:];
}

id objc_msgSend_setValidationRecord_(void *a1, const char *a2, ...)
{
  return [a1 setValidationRecord:];
}

id objc_msgSend_setValue_forHTTPHeaderField_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forHTTPHeaderField:];
}

id objc_msgSend_setValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 setValue:forKey:];
}

id objc_msgSend_setVendorID_(void *a1, const char *a2, ...)
{
  return [a1 setVendorID:];
}

id objc_msgSend_setVerifiableIdentity_(void *a1, const char *a2, ...)
{
  return [a1 setVerifiableIdentity:];
}

id objc_msgSend_setVersion_(void *a1, const char *a2, ...)
{
  return [a1 setVersion:];
}

id objc_msgSend_setViewControllerClassName_(void *a1, const char *a2, ...)
{
  return [a1 setViewControllerClassName:];
}

id objc_msgSend_setViewState_(void *a1, const char *a2, ...)
{
  return [a1 setViewState:];
}

id objc_msgSend_setVisibleActionActivities_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleActionActivities:];
}

id objc_msgSend_setVisibleShareActivities_(void *a1, const char *a2, ...)
{
  return [a1 setVisibleShareActivities:];
}

id objc_msgSend_setWaitingForAuthToken_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForAuthToken:];
}

id objc_msgSend_setWaitingForAutoUnlockStateUpdateToStartPairedUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForAutoUnlockStateUpdateToStartPairedUnlock:];
}

id objc_msgSend_setWaitingForCloudPairing_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForCloudPairing:];
}

id objc_msgSend_setWaitingForDisplayOrClamshell_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForDisplayOrClamshell:];
}

id objc_msgSend_setWaitingForLTK_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForLTK:];
}

id objc_msgSend_setWaitingForNetworkToDisable_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingForNetworkToDisable:];
}

id objc_msgSend_setWaitingToCompleteUnlock_(void *a1, const char *a2, ...)
{
  return [a1 setWaitingToCompleteUnlock:];
}

id objc_msgSend_setWaitsForConnectivity_(void *a1, const char *a2, ...)
{
  return [a1 setWaitsForConnectivity:];
}

id objc_msgSend_setWakeGestureDates_(void *a1, const char *a2, ...)
{
  return [a1 setWakeGestureDates:];
}

id objc_msgSend_setWantsAnimation_(void *a1, const char *a2, ...)
{
  return [a1 setWantsAnimation:];
}

id objc_msgSend_setWantsNotificationResponsesDelivered(void *a1, const char *a2, ...)
{
  return _[a1 setWantsNotificationResponsesDelivered];
}

id objc_msgSend_setWasInLockScreen_(void *a1, const char *a2, ...)
{
  return [a1 setWasInLockScreen:];
}

id objc_msgSend_setWatchCurrentlyInList_(void *a1, const char *a2, ...)
{
  return [a1 setWatchCurrentlyInList:];
}

id objc_msgSend_setWatchExistedInUnlockList_(void *a1, const char *a2, ...)
{
  return [a1 setWatchExistedInUnlockList:];
}

id objc_msgSend_setWatchHardwareModel_(void *a1, const char *a2, ...)
{
  return [a1 setWatchHardwareModel:];
}

id objc_msgSend_setWatchIDsMissingSessionKey_(void *a1, const char *a2, ...)
{
  return [a1 setWatchIDsMissingSessionKey:];
}

id objc_msgSend_setWatchIDsToPairingRecords_(void *a1, const char *a2, ...)
{
  return [a1 setWatchIDsToPairingRecords:];
}

id objc_msgSend_setWatchNewLTKSyncStatus_(void *a1, const char *a2, ...)
{
  return [a1 setWatchNewLTKSyncStatus:];
}

id objc_msgSend_setWatchOldLTKSyncStatus_(void *a1, const char *a2, ...)
{
  return [a1 setWatchOldLTKSyncStatus:];
}

id objc_msgSend_setWatchSoftwareVersion_(void *a1, const char *a2, ...)
{
  return [a1 setWatchSoftwareVersion:];
}

id objc_msgSend_setWifiEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setWifiEnabled:];
}

id objc_msgSend_setWifiErrorCount_(void *a1, const char *a2, ...)
{
  return [a1 setWifiErrorCount:];
}

id objc_msgSend_setWifiErrorDomain_(void *a1, const char *a2, ...)
{
  return [a1 setWifiErrorDomain:];
}

id objc_msgSend_setWifiRangingError_(void *a1, const char *a2, ...)
{
  return [a1 setWifiRangingError:];
}

id objc_msgSend_setWifiRangingErrorCode_(void *a1, const char *a2, ...)
{
  return [a1 setWifiRangingErrorCode:];
}

id objc_msgSend_setWifiRangingResults_(void *a1, const char *a2, ...)
{
  return [a1 setWifiRangingResults:];
}

id objc_msgSend_setWifiRequest_(void *a1, const char *a2, ...)
{
  return [a1 setWifiRequest:];
}

id objc_msgSend_setWifiRequestStartedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setWifiRequestStartedHandler:];
}

id objc_msgSend_setWifiStateChangedHandler_(void *a1, const char *a2, ...)
{
  return [a1 setWifiStateChangedHandler:];
}

id objc_msgSend_setWirelessEnabled_(void *a1, const char *a2, ...)
{
  return [a1 setWirelessEnabled:];
}

id objc_msgSend_setWithArray_(void *a1, const char *a2, ...)
{
  return [a1 setWithArray:];
}

id objc_msgSend_setWithCapacity_(void *a1, const char *a2, ...)
{
  return [a1 setWithCapacity:];
}

id objc_msgSend_setWithObject_(void *a1, const char *a2, ...)
{
  return [a1 setWithObject:];
}

id objc_msgSend_setWithObjects_(void *a1, const char *a2, ...)
{
  return [a1 setWithObjects:];
}

id objc_msgSend_setWithSet_(void *a1, const char *a2, ...)
{
  return [a1 setWithSet:];
}

id objc_msgSend_setWriteKey_(void *a1, const char *a2, ...)
{
  return [a1 setWriteKey:];
}

id objc_msgSend_setWriteNonce_(void *a1, const char *a2, ...)
{
  return [a1 setWriteNonce:];
}

id objc_msgSend_setXpcConnection_(void *a1, const char *a2, ...)
{
  return [a1 setXpcConnection:];
}

id objc_msgSend_setXpcEndpoint_(void *a1, const char *a2, ...)
{
  return [a1 setXpcEndpoint:];
}

id objc_msgSend_setXpcHelperCnx_(void *a1, const char *a2, ...)
{
  return [a1 setXpcHelperCnx:];
}

id objc_msgSend_set_allowsTCPFastOpen_(void *a1, const char *a2, ...)
{
  return [a1 set_allowsTCPFastOpen:];
}

id objc_msgSend_set_appleIDContext_(void *a1, const char *a2, ...)
{
  return [a1 set_appleIDContext:];
}

id objc_msgSend_set_connectionCachePurgeTimeout_(void *a1, const char *a2, ...)
{
  return [a1 set_connectionCachePurgeTimeout:];
}

id objc_msgSend_set_socketStreamProperties_(void *a1, const char *a2, ...)
{
  return [a1 set_socketStreamProperties:];
}

id objc_msgSend_set_sourceApplicationSecondaryIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 set_sourceApplicationSecondaryIdentifier:];
}

id objc_msgSend_set_tlsTrustPinningPolicyName_(void *a1, const char *a2, ...)
{
  return [a1 set_tlsTrustPinningPolicyName:];
}

id objc_msgSend_setupAuthSession(void *a1, const char *a2, ...)
{
  return _[a1 setupAuthSession];
}

id objc_msgSend_setupAuthorizationSession(void *a1, const char *a2, ...)
{
  return _[a1 setupAuthorizationSession];
}

id objc_msgSend_setupDevice_homeIdentifier_completion_(void *a1, const char *a2, ...)
{
  return [a1 setupDevice:homeIdentifier:completion:];
}

id objc_msgSend_setupError(void *a1, const char *a2, ...)
{
  return _[a1 setupError];
}

id objc_msgSend_setupMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 setupMessageIdentifier];
}

id objc_msgSend_setupProximityEstimator(void *a1, const char *a2, ...)
{
  return _[a1 setupProximityEstimator];
}

id objc_msgSend_setupRequestVersion(void *a1, const char *a2, ...)
{
  return _[a1 setupRequestVersion];
}

id objc_msgSend_setupRetryDevice(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDevice];
}

id objc_msgSend_setupRetryDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDeviceID];
}

id objc_msgSend_setupRetryDeviceTimer(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryDeviceTimer];
}

id objc_msgSend_setupRetryIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 setupRetryIfNeeded];
}

id objc_msgSend_setupSession(void *a1, const char *a2, ...)
{
  return _[a1 setupSession];
}

id objc_msgSend_setupWithAuthSession_passcode_(void *a1, const char *a2, ...)
{
  return [a1 setupWithAuthSession:passcode];
}

id objc_msgSend_sf_failedWithError_(void *a1, const char *a2, ...)
{
  return [a1 sf_failedWithError:];
}

id objc_msgSend_sf_initWithAppBundle_sessionID_andPersonRealName_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sf_initWithAppBundle:sessionID:andPersonRealName:");
}

id objc_msgSend_sf_initWithFileURL_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sf_initWithFileURL:");
}

id objc_msgSend_sf_personRealName(void *a1, const char *a2, ...)
{
  return [a1 sf_personRealName];
}

id objc_msgSend_shareActivities(void *a1, const char *a2, ...)
{
  return _[a1 shareActivities];
}

id objc_msgSend_shareActivitiesByUUID(void *a1, const char *a2, ...)
{
  return _[a1 shareActivitiesByUUID];
}

id objc_msgSend_shareActivitiesInUserOrder(void *a1, const char *a2, ...)
{
  return _[a1 shareActivitiesInUserOrder];
}

id objc_msgSend_shareActivityUserDefaultsDidChangeWithSession_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "shareActivityUserDefaultsDidChangeWithSession:");
}

id objc_msgSend_shareAudioProgressEvent_info_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "shareAudioProgressEvent:info:");
}

id objc_msgSend_sharePointNodes(void *a1, const char *a2, ...)
{
  return _[a1 sharePointNodes];
}

id objc_msgSend_shareSheetContext(void *a1, const char *a2, ...)
{
  return _[a1 shareSheetContext];
}

id objc_msgSend_shareSheetMaxSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 shareSheetMaxSuggestions];
}

id objc_msgSend_shareSheetWorkflowsForExtensionMatchingDictionaries_resolvedActivityItems_hostBundleIdentifier_iconSize_iconScale_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "shareSheetWorkflowsForExtensionMatchingDictionaries:resolvedActivityItems:hostBundleIdentifier:iconSize:iconScale:error:");
}

id objc_msgSend_shareUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 shareUserDefaults];
}

id objc_msgSend_shareUserDefaultsActivity(void *a1, const char *a2, ...)
{
  return _[a1 shareUserDefaultsActivity];
}

id objc_msgSend_shared(void *a1, const char *a2, ...)
{
  return _[a1 shared];
}

id objc_msgSend_sharedAVSystemController(void *a1, const char *a2, ...)
{
  return _[a1 sharedAVSystemController];
}

id objc_msgSend_sharedAdvertiser(void *a1, const char *a2, ...)
{
  return _[a1 sharedAdvertiser];
}

id objc_msgSend_sharedAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedAgent];
}

id objc_msgSend_sharedAssetMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedAssetMonitor];
}

id objc_msgSend_sharedBacklight(void *a1, const char *a2, ...)
{
  return _[a1 sharedBacklight];
}

id objc_msgSend_sharedBag(void *a1, const char *a2, ...)
{
  return _[a1 sharedBag];
}

id objc_msgSend_sharedBrowser(void *a1, const char *a2, ...)
{
  return _[a1 sharedBrowser];
}

id objc_msgSend_sharedClient(void *a1, const char *a2, ...)
{
  return _[a1 sharedClient];
}

id objc_msgSend_sharedConnection(void *a1, const char *a2, ...)
{
  return _[a1 sharedConnection];
}

id objc_msgSend_sharedController(void *a1, const char *a2, ...)
{
  return _[a1 sharedController];
}

id objc_msgSend_sharedDaemon(void *a1, const char *a2, ...)
{
  return _[a1 sharedDaemon];
}

id objc_msgSend_sharedDefaults(void *a1, const char *a2, ...)
{
  return _[a1 sharedDefaults];
}

id objc_msgSend_sharedEncryptionManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedEncryptionManager];
}

id objc_msgSend_sharedFactory(void *a1, const char *a2, ...)
{
  return _[a1 sharedFactory];
}

id objc_msgSend_sharedFakeTransfer(void *a1, const char *a2, ...)
{
  return _[a1 sharedFakeTransfer];
}

id objc_msgSend_sharedInstance(void *a1, const char *a2, ...)
{
  return _[a1 sharedInstance];
}

id objc_msgSend_sharedItemsInCategory_ofType_(void *a1, const char *a2, ...)
{
  return [a1 sharedItemsInCategory:ofType:];
}

id objc_msgSend_sharedKeyManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedKeyManager];
}

id objc_msgSend_sharedLockManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedLockManager];
}

id objc_msgSend_sharedManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedManager];
}

id objc_msgSend_sharedMigrator(void *a1, const char *a2, ...)
{
  return _[a1 sharedMigrator];
}

id objc_msgSend_sharedMonitor(void *a1, const char *a2, ...)
{
  return _[a1 sharedMonitor];
}

id objc_msgSend_sharedNearbyAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedNearbyAgent];
}

id objc_msgSend_sharedNearbyPipe(void *a1, const char *a2, ...)
{
  return _[a1 sharedNearbyPipe];
}

id objc_msgSend_sharedNotifier(void *a1, const char *a2, ...)
{
  return _[a1 sharedNotifier];
}

id objc_msgSend_sharedPayloadManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedPayloadManager];
}

id objc_msgSend_sharedPhotoLibrary(void *a1, const char *a2, ...)
{
  return _[a1 sharedPhotoLibrary];
}

id objc_msgSend_sharedPrivacyManager(void *a1, const char *a2, ...)
{
  return _[a1 sharedPrivacyManager];
}

id objc_msgSend_sharedProximityPairingAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedProximityPairingAgent];
}

id objc_msgSend_sharedRapportBrowser(void *a1, const char *a2, ...)
{
  return _[a1 sharedRapportBrowser];
}

id objc_msgSend_sharedScanner(void *a1, const char *a2, ...)
{
  return _[a1 sharedScanner];
}

id objc_msgSend_sharedSession(void *a1, const char *a2, ...)
{
  return _[a1 sharedSession];
}

id objc_msgSend_sharedSetupAgent(void *a1, const char *a2, ...)
{
  return _[a1 sharedSetupAgent];
}

id objc_msgSend_sharedSystemShellSwitcher(void *a1, const char *a2, ...)
{
  return _[a1 sharedSystemShellSwitcher];
}

id objc_msgSend_sharedTransport(void *a1, const char *a2, ...)
{
  return _[a1 sharedTransport];
}

id objc_msgSend_sharediCloudDocumentsLinks(void *a1, const char *a2, ...)
{
  return _[a1 sharediCloudDocumentsLinks];
}

id objc_msgSend_sharingDrawingDocuments(void *a1, const char *a2, ...)
{
  return _[a1 sharingDrawingDocuments];
}

id objc_msgSend_sharingExpanded(void *a1, const char *a2, ...)
{
  return _[a1 sharingExpanded];
}

id objc_msgSend_sharingServiceWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 sharingServiceWithIdentifier:];
}

id objc_msgSend_sharingStyle(void *a1, const char *a2, ...)
{
  return _[a1 sharingStyle];
}

id objc_msgSend_shouldAbort(void *a1, const char *a2, ...)
{
  return _[a1 shouldAbort];
}

id objc_msgSend_shouldAcceptNewConnection_(void *a1, const char *a2, ...)
{
  return [a1 shouldAcceptNewConnection:];
}

id objc_msgSend_shouldAdvertise(void *a1, const char *a2, ...)
{
  return _[a1 shouldAdvertise];
}

id objc_msgSend_shouldAlertOnNotify(void *a1, const char *a2, ...)
{
  return _[a1 shouldAlertOnNotify];
}

id objc_msgSend_shouldBoostScan(void *a1, const char *a2, ...)
{
  return _[a1 shouldBoostScan];
}

id objc_msgSend_shouldCancelTransferForError_(void *a1, const char *a2, ...)
{
  return [a1 shouldCancelTransferForError:x0];
}

id objc_msgSend_shouldCleanupItems(void *a1, const char *a2, ...)
{
  return _[a1 shouldCleanupItems];
}

id objc_msgSend_shouldDelayWorkDueToPowerAssertion(void *a1, const char *a2, ...)
{
  return _[a1 shouldDelayWorkDueToPowerAssertion];
}

id objc_msgSend_shouldEndAfterOpen(void *a1, const char *a2, ...)
{
  return _[a1 shouldEndAfterOpen];
}

id objc_msgSend_shouldExtractMediaFromPhotosBundles(void *a1, const char *a2, ...)
{
  return _[a1 shouldExtractMediaFromPhotosBundles];
}

id objc_msgSend_shouldNotTriggerBecauseDeviceInformationIsTooOld_(void *a1, const char *a2, ...)
{
  return [a1 shouldNotTriggerBecauseDeviceInformationIsTooOld:];
}

id objc_msgSend_shouldNotify(void *a1, const char *a2, ...)
{
  return _[a1 shouldNotify];
}

id objc_msgSend_shouldNotifyForNonGenuineDevice_(void *a1, const char *a2, ...)
{
  return [a1 shouldNotifyForNonGenuineDevice:];
}

id objc_msgSend_shouldOfferOpenAction(void *a1, const char *a2, ...)
{
  return _[a1 shouldOfferOpenAction];
}

id objc_msgSend_shouldOpenAutomaticallyAfterUserAccepts(void *a1, const char *a2, ...)
{
  return _[a1 shouldOpenAutomaticallyAfterUserAccepts];
}

id objc_msgSend_shouldPrewarmAttempt(void *a1, const char *a2, ...)
{
  return _[a1 shouldPrewarmAttempt];
}

id objc_msgSend_shouldPromptForAdaptiveControlsProx_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAdaptiveControlsProx:];
}

id objc_msgSend_shouldPromptForAnnounceCallsForProductID_supportsInEarDetection_isUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAnnounceCallsForProductID:supportsInEarDetection:isUpsellFlow:];
}

id objc_msgSend_shouldPromptForAnnounceMessagesForProductID_isUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAnnounceMessagesForProductID:isUpsellFlow:];
}

id objc_msgSend_shouldPromptForAnnounceNotificationsForProductID_isUpsellFlow_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForAnnounceNotificationsForProductID:isUpsellFlow:];
}

id objc_msgSend_shouldPromptForEndCallProx_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForEndCallProx];
}

id objc_msgSend_shouldPromptForMuteCallProx_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForMuteCallProx];
}

id objc_msgSend_shouldPromptForSiriNotificationForDevice_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForSiriNotificationForDevice:];
}

id objc_msgSend_shouldPromptForSpatialAudioProfileForDevice_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForSpatialAudioProfileForDevice:];
}

id objc_msgSend_shouldPromptForWhatsNewProx_(void *a1, const char *a2, ...)
{
  return [a1 shouldPromptForWhatsNewProx:];
}

id objc_msgSend_shouldReadNetwork(void *a1, const char *a2, ...)
{
  return _[a1 shouldReadNetwork];
}

id objc_msgSend_shouldRegister(void *a1, const char *a2, ...)
{
  return _[a1 shouldRegister];
}

id objc_msgSend_shouldScanForCopyPaste(void *a1, const char *a2, ...)
{
  return _[a1 shouldScanForCopyPaste];
}

id objc_msgSend_shouldScanForHandoff(void *a1, const char *a2, ...)
{
  return _[a1 shouldScanForHandoff];
}

id objc_msgSend_shouldShowErrorForBluetoothEnabled_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowErrorForBluetoothEnabled:];
}

id objc_msgSend_shouldShowErrorForWiFiEnabled_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowErrorForWiFiEnabled:];
}

id objc_msgSend_shouldShowProxCardForFeature_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowProxCardForFeature:];
}

id objc_msgSend_shouldShowWhatsNewCardWithDeviceAddress_(void *a1, const char *a2, ...)
{
  return [a1 shouldShowWhatsNewCardWithDeviceAddress:];
}

id objc_msgSend_shouldSkipPeopleSuggestions(void *a1, const char *a2, ...)
{
  return _[a1 shouldSkipPeopleSuggestions];
}

id objc_msgSend_shouldStart(void *a1, const char *a2, ...)
{
  return _[a1 shouldStart];
}

id objc_msgSend_shouldStartUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldStartUnlock];
}

id objc_msgSend_shouldStopHandoffAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 shouldStopHandoffAdvertising];
}

id objc_msgSend_shouldSuggestFamilyMembers(void *a1, const char *a2, ...)
{
  return _[a1 shouldSuggestFamilyMembers];
}

id objc_msgSend_shouldTurnOffTethering(void *a1, const char *a2, ...)
{
  return _[a1 shouldTurnOffTethering];
}

id objc_msgSend_shouldUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldUnlock];
}

id objc_msgSend_shouldUpdateUserResponse(void *a1, const char *a2, ...)
{
  return _[a1 shouldUpdateUserResponse];
}

id objc_msgSend_shouldUseAccelerometerMotion(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseAccelerometerMotion];
}

id objc_msgSend_shouldUseTwoPartPill(void *a1, const char *a2, ...)
{
  return _[a1 shouldUseTwoPartPill];
}

id objc_msgSend_shouldWaitToCompleteUnlock(void *a1, const char *a2, ...)
{
  return _[a1 shouldWaitToCompleteUnlock];
}

id objc_msgSend_showAuthenticatedSiriForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 showAuthenticatedSiriForDeviceID:];
}

id objc_msgSend_showDevicePickerWithInfo_completion_(void *a1, const char *a2, ...)
{
  return [a1 showDevicePickerWithInfo:x0 completion:x1];
}

id objc_msgSend_showIDInName(void *a1, const char *a2, ...)
{
  return _[a1 showIDInName];
}

id objc_msgSend_showMeInWormhole(void *a1, const char *a2, ...)
{
  return _[a1 showMeInWormhole];
}

id objc_msgSend_showNFCPromptWithConfig_responseHandler_(void *a1, const char *a2, ...)
{
  return [a1 showNFCPromptWithConfig:x0 responseHandler:x1];
}

id objc_msgSend_showOtherDevices(void *a1, const char *a2, ...)
{
  return _[a1 showOtherDevices];
}

id objc_msgSend_showPhoneAutoRelockNotification(void *a1, const char *a2, ...)
{
  return _[a1 showPhoneAutoRelockNotification];
}

id objc_msgSend_showPhoneAutoUnlockNotificationWithBodyText_isUpsell_(void *a1, const char *a2, ...)
{
  return [a1 showPhoneAutoUnlockNotificationWithBodyText:isUpsell:];
}

id objc_msgSend_showSetupRetryNotificationWithDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "showSetupRetryNotificationWithDevice:");
}

id objc_msgSend_showShareSheetWith_completion_(void *a1, const char *a2, ...)
{
  return [a1 showShareSheetWith:completion:];
}

id objc_msgSend_showSuggestionNotificationWithDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "showSuggestionNotificationWithDevice:");
}

id objc_msgSend_showThisComputer(void *a1, const char *a2, ...)
{
  return _[a1 showThisComputer];
}

id objc_msgSend_showUnlockedByDeviceNotificationWithDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 showUnlockedByDeviceNotificationWithDeviceID:];
}

id objc_msgSend_showsInSystemActionGroup(void *a1, const char *a2, ...)
{
  return _[a1 showsInSystemActionGroup];
}

id objc_msgSend_showsStatus(void *a1, const char *a2, ...)
{
  return _[a1 showsStatus];
}

id objc_msgSend_shutdown(void *a1, const char *a2, ...)
{
  return _[a1 shutdown];
}

id objc_msgSend_sidebarChildren(void *a1, const char *a2, ...)
{
  return _[a1 sidebarChildren];
}

id objc_msgSend_sidebarMaxCount(void *a1, const char *a2, ...)
{
  return _[a1 sidebarMaxCount];
}

id objc_msgSend_sidebarNodes(void *a1, const char *a2, ...)
{
  return _[a1 sidebarNodes];
}

id objc_msgSend_sidebarNodesFromServerNodes_nonServerCount_addAllNode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "sidebarNodesFromServerNodes:nonServerCount:addAllNode:");
}

id objc_msgSend_signAndStoreRemoteLTK_forDeviceID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "signAndStoreRemoteLTK:forDeviceID:");
}

id objc_msgSend_signLTK_modernLTK_forDeviceID_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "signLTK:modernLTK:forDeviceID:");
}

id objc_msgSend_signRemoteKey_withLocalKey_localKeyClass_remoteKeyClass_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "signRemoteKey:withLocalKey:localKeyClass:remoteKeyClass:");
}

id objc_msgSend_signalStrength(void *a1, const char *a2, ...)
{
  return _[a1 signalStrength];
}

id objc_msgSend_signedIntoPrimaryiCloudAccount(void *a1, const char *a2, ...)
{
  return _[a1 signedIntoPrimaryiCloudAccount];
}

id objc_msgSend_silentlyCancelRequest(void *a1, const char *a2, ...)
{
  return _[a1 silentlyCancelRequest];
}

id objc_msgSend_silentlyCancelRequestOnMainThread(void *a1, const char *a2, ...)
{
  return _[a1 silentlyCancelRequestOnMainThread];
}

id objc_msgSend_simStateReady(void *a1, const char *a2, ...)
{
  return _[a1 simStateReady];
}

id objc_msgSend_singleItemActionTitle(void *a1, const char *a2, ...)
{
  return _[a1 singleItemActionTitle];
}

id objc_msgSend_size(void *a1, const char *a2, ...)
{
  return _[a1 size];
}

id objc_msgSend_skipMotionCheck(void *a1, const char *a2, ...)
{
  return _[a1 skipMotionCheck];
}

id objc_msgSend_skipSlotsRendering(void *a1, const char *a2, ...)
{
  return _[a1 skipSlotsRendering];
}

id objc_msgSend_slotIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 slotIdentifier];
}

id objc_msgSend_slotTextHeight(void *a1, const char *a2, ...)
{
  return _[a1 slotTextHeight];
}

id objc_msgSend_smartCoverIsClosed(void *a1, const char *a2, ...)
{
  return _[a1 smartCoverIsClosed];
}

id objc_msgSend_smbConfiguration_netBiosName_workgroup_(void *a1, const char *a2, ...)
{
  return [a1 smbConfiguration:netBiosName:workgroup:];
}

id objc_msgSend_smoothedRSSI(void *a1, const char *a2, ...)
{
  return _[a1 smoothedRSSI];
}

id objc_msgSend_someComputerName(void *a1, const char *a2, ...)
{
  return _[a1 someComputerName];
}

id objc_msgSend_sortDescriptorWithKey_ascending_(void *a1, const char *a2, ...)
{
  return [a1 sortDescriptorWithKey:ascending:];
}

id objc_msgSend_sortUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortUsingComparator:];
}

id objc_msgSend_sortedArrayUsingComparator_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingComparator:];
}

id objc_msgSend_sortedArrayUsingSelector_(void *a1, const char *a2, ...)
{
  return [a1 sortedArrayUsingSelector:];
}

id objc_msgSend_soundWithAlertType_(void *a1, const char *a2, ...)
{
  return [a1 soundWithAlertType:];
}

id objc_msgSend_source(void *a1, const char *a2, ...)
{
  return _[a1 source];
}

id objc_msgSend_sourceApplicationAuditTokenData(void *a1, const char *a2, ...)
{
  return _[a1 sourceApplicationAuditTokenData];
}

id objc_msgSend_sourceForFileURL_(void *a1, const char *a2, ...)
{
  return [a1 sourceForFileURL:];
}

id objc_msgSend_splitOutFileURLs(void *a1, const char *a2, ...)
{
  return _[a1 splitOutFileURLs];
}

id objc_msgSend_srcIPAddress(void *a1, const char *a2, ...)
{
  return _[a1 srcIPAddress];
}

id objc_msgSend_srcPort(void *a1, const char *a2, ...)
{
  return _[a1 srcPort];
}

id objc_msgSend_ss_activitySpecificExtensionItemDataRequestInfo(void *a1, const char *a2, ...)
{
  return [a1 ss_activitySpecificExtensionItemDataRequestInfo];
}

id objc_msgSend_ss_activityTypeToReportToHost(void *a1, const char *a2, ...)
{
  return [a1 ss_activityTypeToReportToHost];
}

id objc_msgSend_ss_shouldExecuteInShareSheet(void *a1, const char *a2, ...)
{
  return [a1 ss_shouldExecuteInShareSheet];
}

id objc_msgSend_sslSettings(void *a1, const char *a2, ...)
{
  return _[a1 sslSettings];
}

id objc_msgSend_stableBluetoothIdentifierForIDSDevice_(void *a1, const char *a2, ...)
{
  return [a1 stableBluetoothIdentifierForIDSDevice:];
}

id objc_msgSend_standardClient(void *a1, const char *a2, ...)
{
  return _[a1 standardClient];
}

id objc_msgSend_standardUserDefaults(void *a1, const char *a2, ...)
{
  return _[a1 standardUserDefaults];
}

id objc_msgSend_start(void *a1, const char *a2, ...)
{
  return _[a1 start];
}

id objc_msgSend_startAWDL(void *a1, const char *a2, ...)
{
  return _[a1 startAWDL];
}

id objc_msgSend_startAWDLError(void *a1, const char *a2, ...)
{
  return _[a1 startAWDLError];
}

id objc_msgSend_startAccelerometerUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 startAccelerometerUpdatesToQueue:withHandler:];
}

id objc_msgSend_startAccessingSecurityScopedResourcesInContext_(void *a1, const char *a2, ...)
{
  return [a1 startAccessingSecurityScopedResourcesInContext:];
}

id objc_msgSend_startActivityUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 startActivityUpdatesToQueue:withHandler:];
}

id objc_msgSend_startAdvertisingOfType_withData_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 startAdvertisingOfType:x0 withData:x1 withOptions:x2];
}

id objc_msgSend_startAirDropBrowsing_bundleID_sessionID_helperConnection_delayBonjour_(void *a1, const char *a2, ...)
{
  return [a1 startAirDropBrowsing:x0 bundleID:x1 sessionID:x2 helperConnection:x3 delayBonjour:x4];
}

id objc_msgSend_startAirDropBrowsing_connection_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 startAirDropBrowsing:x0 connection:x1 sessionID:x2];
}

id objc_msgSend_startAirDropRequestForNode_(void *a1, const char *a2, ...)
{
  return [a1 startAirDropRequestForNode:];
}

id objc_msgSend_startBomCopy_destination_options_(void *a1, const char *a2, ...)
{
  return [a1 startBomCopy:x0 destination:x1 options:x2];
}

id objc_msgSend_startBrowser(void *a1, const char *a2, ...)
{
  return _[a1 startBrowser];
}

id objc_msgSend_startBrowsingDomain_(void *a1, const char *a2, ...)
{
  return [a1 startBrowsingDomain:];
}

id objc_msgSend_startBrowsingWorkgroup_(void *a1, const char *a2, ...)
{
  return [a1 startBrowsingWorkgroup:];
}

id objc_msgSend_startCBDiscoveryScreenOffPairing(void *a1, const char *a2, ...)
{
  return _[a1 startCBDiscoveryScreenOffPairing];
}

id objc_msgSend_startCalled(void *a1, const char *a2, ...)
{
  return _[a1 startCalled];
}

id objc_msgSend_startConnectionlessAWDLServiceAdvertisingWithData_(void *a1, const char *a2, ...)
{
  return [a1 startConnectionlessAWDLServiceAdvertisingWithData:];
}

id objc_msgSend_startConnectionlessAWDLServiceScanning(void *a1, const char *a2, ...)
{
  return _[a1 startConnectionlessAWDLServiceScanning];
}

id objc_msgSend_startConnectionlessAdvertisingWithData_(void *a1, const char *a2, ...)
{
  return [a1 startConnectionlessAdvertisingWithData:];
}

id objc_msgSend_startDate(void *a1, const char *a2, ...)
{
  return _[a1 startDate];
}

id objc_msgSend_startFakeTransferInCategory_ofType_(void *a1, const char *a2, ...)
{
  return [a1 startFakeTransferInCategory:ofType:];
}

id objc_msgSend_startFakeTransferWithItemSources_(void *a1, const char *a2, ...)
{
  return [a1 startFakeTransferWithItemSources:];
}

id objc_msgSend_startFakeTransferWithItems_fromBundleID_withItemsDescription_previewImage_desiredDuration_totalBytes_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "startFakeTransferWithItems:fromBundleID:withItemsDescription:previewImage:desiredDuration:totalBytes:");
}

id objc_msgSend_startGoodbyeTimer(void *a1, const char *a2, ...)
{
  return _[a1 startGoodbyeTimer];
}

id objc_msgSend_startHTTPServer_(void *a1, const char *a2, ...)
{
  return [a1 startHTTPServer:];
}

id objc_msgSend_startIdentityQueryForNode_(void *a1, const char *a2, ...)
{
  return [a1 startIdentityQueryForNode:];
}

id objc_msgSend_startLTKExchange(void *a1, const char *a2, ...)
{
  return _[a1 startLTKExchange];
}

id objc_msgSend_startMagicMountUpdatesToQueue_withHandler_(void *a1, const char *a2, ...)
{
  return [a1 startMagicMountUpdatesToQueue:withHandler:];
}

id objc_msgSend_startMonitoringEventType_error_(void *a1, const char *a2, ...)
{
  return [a1 startMonitoringEventType:error:];
}

id objc_msgSend_startODiskBrowsing_(void *a1, const char *a2, ...)
{
  return [a1 startODiskBrowsing:];
}

id objc_msgSend_startOpenTimer(void *a1, const char *a2, ...)
{
  return _[a1 startOpenTimer];
}

id objc_msgSend_startPolling_context_(void *a1, const char *a2, ...)
{
  return [a1 startPolling:context];
}

id objc_msgSend_startProgress(void *a1, const char *a2, ...)
{
  return _[a1 startProgress];
}

id objc_msgSend_startProximityScanner(void *a1, const char *a2, ...)
{
  return _[a1 startProximityScanner];
}

id objc_msgSend_startPublishingProgress(void *a1, const char *a2, ...)
{
  return _[a1 startPublishingProgress];
}

id objc_msgSend_startPublishingProgressForPlaceholderFiles_(void *a1, const char *a2, ...)
{
  return [a1 startPublishingProgressForPlaceholderFiles:];
}

id objc_msgSend_startReceivingBody_error_(void *a1, const char *a2, ...)
{
  return [a1 startReceivingBody:error:];
}

id objc_msgSend_startReceivingFile_error_(void *a1, const char *a2, ...)
{
  return [a1 startReceivingFile:error:];
}

id objc_msgSend_startRecordQuery_type_domain_recordType_interface_(void *a1, const char *a2, ...)
{
  return [a1 startRecordQuery:x0 type:x1 domain:x2 recordType:x3 interface:x4];
}

id objc_msgSend_startRequestingAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 startRequestingAutoFill];
}

id objc_msgSend_startScanningForType_withData_mask_peers_withOptions_boostedScan_duplicates_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:");
}

id objc_msgSend_startScanningForType_withData_peers_withOptions_(void *a1, const char *a2, ...)
{
  return [a1 startScanningForType:withData:peers:withOptions:];
}

id objc_msgSend_startScanningWithIdentifier_deviceUpdatesHandler_(void *a1, const char *a2, ...)
{
  return [a1 startScanningWithIdentifier:x0 deviceUpdatesHandler:x1];
}

id objc_msgSend_startSendForBundleID_sessionID_items_description_previewImage_fromShareSheet_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "startSendForBundleID:sessionID:items:description:previewImage:fromShareSheet:");
}

id objc_msgSend_startSending(void *a1, const char *a2, ...)
{
  return _[a1 startSending];
}

id objc_msgSend_startSendingClassroom(void *a1, const char *a2, ...)
{
  return _[a1 startSendingClassroom];
}

id objc_msgSend_startSendingItems_withProperties_toPersonWithID_clientBundleID_airDropClientDelegate_(void *a1, const char *a2, ...)
{
  return [a1 startSendingItems:x0 withProperties:x1 toPersonWithID:x2 clientBundleID:x3 airDropClientDelegate:x4];
}

id objc_msgSend_startServer(void *a1, const char *a2, ...)
{
  return _[a1 startServer];
}

id objc_msgSend_startTetheringWithCompletionHandler_modelID_productVersion_canConnectOn5GHz_(void *a1, const char *a2, ...)
{
  return [a1 startTetheringWithCompletionHandler:nil modelID:nil productVersion:nil canConnectOn5GHz:nil];
}

id objc_msgSend_startTime(void *a1, const char *a2, ...)
{
  return _[a1 startTime];
}

id objc_msgSend_startTimers(void *a1, const char *a2, ...)
{
  return _[a1 startTimers];
}

id objc_msgSend_startUnlockBLEConnectionWithDevice_encrypted_(void *a1, const char *a2, ...)
{
  return [a1 startUnlockBLEConnectionWithDevice:encrypted:];
}

id objc_msgSend_startUnlockIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 startUnlockIfNeeded];
}

id objc_msgSend_startZipping(void *a1, const char *a2, ...)
{
  return _[a1 startZipping];
}

id objc_msgSend_started(void *a1, const char *a2, ...)
{
  return _[a1 started];
}

id objc_msgSend_startedAuthenticationSessionWithID_(void *a1, const char *a2, ...)
{
  return [a1 startedAuthenticationSessionWithID:];
}

id objc_msgSend_startedHostAP(void *a1, const char *a2, ...)
{
  return _[a1 startedHostAP];
}

id objc_msgSend_stashBagSession(void *a1, const char *a2, ...)
{
  return _[a1 stashBagSession];
}

id objc_msgSend_stashBagSessionAsOriginator_escrowSecret_manifest_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "stashBagSessionAsOriginator:escrowSecret:manifest:");
}

id objc_msgSend_stashToken(void *a1, const char *a2, ...)
{
  return _[a1 stashToken];
}

id objc_msgSend_state(void *a1, const char *a2, ...)
{
  return _[a1 state];
}

id objc_msgSend_stateAppendXPCConnections_(void *a1, const char *a2, ...)
{
  return [a1 stateAppendXPCConnections:];
}

id objc_msgSend_stateIsClose(void *a1, const char *a2, ...)
{
  return _[a1 stateIsClose];
}

id objc_msgSend_stateIsMedium(void *a1, const char *a2, ...)
{
  return _[a1 stateIsMedium];
}

id objc_msgSend_stateIsNearby(void *a1, const char *a2, ...)
{
  return _[a1 stateIsNearby];
}

id objc_msgSend_stationary(void *a1, const char *a2, ...)
{
  return _[a1 stationary];
}

id objc_msgSend_status(void *a1, const char *a2, ...)
{
  return _[a1 status];
}

id objc_msgSend_statusChangedHandler(void *a1, const char *a2, ...)
{
  return _[a1 statusChangedHandler];
}

id objc_msgSend_statusCode(void *a1, const char *a2, ...)
{
  return _[a1 statusCode];
}

id objc_msgSend_statusFlags(void *a1, const char *a2, ...)
{
  return _[a1 statusFlags];
}

id objc_msgSend_statusInfo(void *a1, const char *a2, ...)
{
  return _[a1 statusInfo];
}

id objc_msgSend_statusToHeadsetStatus_forProductID_(void *a1, const char *a2, ...)
{
  return [a1 statusToHeadsetStatus:forProductID:];
}

id objc_msgSend_stepData(void *a1, const char *a2, ...)
{
  return _[a1 stepData];
}

id objc_msgSend_stepSessionWithData_outputData_(void *a1, const char *a2, ...)
{
  return [a1 stepSessionWithData:x0 outputData:x1];
}

id objc_msgSend_stepWithAuthSession_data_(void *a1, const char *a2, ...)
{
  return [a1 stepWithAuthSession:data];
}

id objc_msgSend_stepWithAuthSession_data_authStep_(void *a1, const char *a2, ...)
{
  return [a1 stepWithAuthSession:data:authStep:];
}

id objc_msgSend_stepWithAuthSession_data_authStep_errorCode_(void *a1, const char *a2, ...)
{
  return [a1 stepWithAuthSession:data:authStep:errorCode:];
}

id objc_msgSend_stop(void *a1, const char *a2, ...)
{
  return _[a1 stop];
}

id objc_msgSend_stopAccelerometerUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopAccelerometerUpdates];
}

id objc_msgSend_stopAccessingSecurityScopedResources(void *a1, const char *a2, ...)
{
  return _[a1 stopAccessingSecurityScopedResources];
}

id objc_msgSend_stopActivityUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopActivityUpdates];
}

id objc_msgSend_stopAdvertisingOfType_(void *a1, const char *a2, ...)
{
  return [a1 stopAdvertisingOfType:];
}

id objc_msgSend_stopAdvertisingResponse(void *a1, const char *a2, ...)
{
  return _[a1 stopAdvertisingResponse];
}

id objc_msgSend_stopAdvertisingTetheringRequest(void *a1, const char *a2, ...)
{
  return _[a1 stopAdvertisingTetheringRequest];
}

id objc_msgSend_stopAirDropBrowsing_(void *a1, const char *a2, ...)
{
  return [a1 stopAirDropBrowsing:];
}

id objc_msgSend_stopBrowsingDomain_(void *a1, const char *a2, ...)
{
  return [a1 stopBrowsingDomain:];
}

id objc_msgSend_stopBrowsingForClientID_(void *a1, const char *a2, ...)
{
  return [a1 stopBrowsingForClientID:];
}

id objc_msgSend_stopBrowsingWorkgroup_(void *a1, const char *a2, ...)
{
  return [a1 stopBrowsingWorkgroup:];
}

id objc_msgSend_stopConnectionlessAWDLServiceAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAWDLServiceAdvertising];
}

id objc_msgSend_stopConnectionlessAWDLServiceScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAWDLServiceScanning];
}

id objc_msgSend_stopConnectionlessAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 stopConnectionlessAdvertising];
}

id objc_msgSend_stopConsumerScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopConsumerScanning];
}

id objc_msgSend_stopForReason_(void *a1, const char *a2, ...)
{
  return [a1 stopForReason:];
}

id objc_msgSend_stopHandoffAdvertisingIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 stopHandoffAdvertisingIfAppropriate];
}

id objc_msgSend_stopIfReady(void *a1, const char *a2, ...)
{
  return _[a1 stopIfReady];
}

id objc_msgSend_stopMagicMountUpdates(void *a1, const char *a2, ...)
{
  return _[a1 stopMagicMountUpdates];
}

id objc_msgSend_stopODiskBrowsing_(void *a1, const char *a2, ...)
{
  return [a1 stopODiskBrowsing:];
}

id objc_msgSend_stopProducerScanning(void *a1, const char *a2, ...)
{
  return _[a1 stopProducerScanning];
}

id objc_msgSend_stopProximityScanner(void *a1, const char *a2, ...)
{
  return _[a1 stopProximityScanner];
}

id objc_msgSend_stopScanningAndStartServer(void *a1, const char *a2, ...)
{
  return _[a1 stopScanningAndStartServer];
}

id objc_msgSend_stopScanningForType_(void *a1, const char *a2, ...)
{
  return [a1 stopScanningForType:];
}

id objc_msgSend_stopScanningWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 stopScanningWithIdentifier:];
}

id objc_msgSend_stopUnlockBLEConnectionWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 stopUnlockBLEConnectionWithDevice:];
}

id objc_msgSend_store(void *a1, const char *a2, ...)
{
  return _[a1 store];
}

id objc_msgSend_storeArrayValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 storeArrayValue:forKey:];
}

id objc_msgSend_storeAttestedLongTermKey_forDeviceID_name_(void *a1, const char *a2, ...)
{
  return [a1 storeAttestedLongTermKey:forDeviceID:name:];
}

id objc_msgSend_storeCachedImageForHash_device_appName_(void *a1, const char *a2, ...)
{
  return [a1 storeCachedImageForHash:x0 device:x1 appName:x2];
}

id objc_msgSend_storeDataValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 storeDataValue:forKey:];
}

id objc_msgSend_storeEscrowData_(void *a1, const char *a2, ...)
{
  return [a1 storeEscrowData:];
}

id objc_msgSend_storeEscrowSecret_pairingID_deviceID_requiresUnlock_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "storeEscrowSecret:pairingID:deviceID:requiresUnlock:");
}

id objc_msgSend_storeExists(void *a1, const char *a2, ...)
{
  return _[a1 storeExists];
}

id objc_msgSend_storeIconValue_forKey_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "storeIconValue:forKey:")];
}

id objc_msgSend_storeKeychainItemWithAttributeDictionary_updateDictionary_addDictionary_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "storeKeychainItemWithAttributeDictionary:updateDictionary:addDictionary:");
}

id objc_msgSend_storeLongTermKey_forDeviceID_name_(void *a1, const char *a2, ...)
{
  return [a1 storeLongTermKey:forDeviceID:name:];
}

id objc_msgSend_storeLongTermKey_forDeviceID_name_modern_(void *a1, const char *a2, ...)
{
  return [a1 storeLongTermKey:x0 forDeviceID:x1 name:x2 modern:x3];
}

id objc_msgSend_storeNumberValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 storeNumberValue:forKey:];
}

id objc_msgSend_storePropertyValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 storePropertyValue:forKey:];
}

id objc_msgSend_storeRangingKey_forDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 storeRangingKey:forDeviceID:];
}

id objc_msgSend_storeRequestValue_forKey_convertToNumber_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "storeRequestValue:forKey:convertToNumber:");
}

id objc_msgSend_storeStringValue_forKey_(void *a1, const char *a2, ...)
{
  return [a1 storeStringValue:forKey:];
}

id objc_msgSend_storeWithAccount_personInfo_(void *a1, const char *a2, ...)
{
  return [a1 storeWithAccount:x0 personInfo:x1];
}

id objc_msgSend_storeWithDirectory_readOnly_(void *a1, const char *a2, ...)
{
  return [a1 storeWithDirectory:x0 readOnly:x1];
}

id objc_msgSend_streamError(void *a1, const char *a2, ...)
{
  return _[a1 streamError];
}

id objc_msgSend_streamHandler(void *a1, const char *a2, ...)
{
  return _[a1 streamHandler];
}

id objc_msgSend_streamHandler_bufferSpaceChanged_(void *a1, const char *a2, ...)
{
  return [a1 streamHandler:bufferSpaceChanged:];
}

id objc_msgSend_streamHandler_didReceiveMessage_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "streamHandler:didReceiveMessage:");
}

id objc_msgSend_streamHandler_didReceiveStreamData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "streamHandler:didReceiveStreamData:");
}

id objc_msgSend_streamHandlerDidClose_withError_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "streamHandlerDidClose:withError:");
}

id objc_msgSend_streamStatus(void *a1, const char *a2, ...)
{
  return _[a1 streamStatus];
}

id objc_msgSend_streamToService_withFileHandle_acceptReply_(void *a1, const char *a2, ...)
{
  return [a1 streamToService:withFileHandle:acceptReply:];
}

id objc_msgSend_string(void *a1, const char *a2, ...)
{
  return _[a1 string];
}

id objc_msgSend_stringByAppendingFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingFormat:];
}

id objc_msgSend_stringByAppendingPathComponent_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingPathComponent:];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringByDeletingPathExtension(void *a1, const char *a2, ...)
{
  return _[a1 stringByDeletingPathExtension];
}

id objc_msgSend_stringByRemovingCharactersFromSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByRemovingCharactersFromSet:];
}

id objc_msgSend_stringByReplacingCharactersInRange_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingCharactersInRange:withString:];
}

id objc_msgSend_stringByReplacingOccurrencesOfString_withString_(void *a1, const char *a2, ...)
{
  return [a1 stringByReplacingOccurrencesOfString:withString:];
}

id objc_msgSend_stringByTrimmingCharactersInSet_(void *a1, const char *a2, ...)
{
  return [a1 stringByTrimmingCharactersInSet:];
}

id objc_msgSend_stringForBrowserMode_(void *a1, const char *a2, ...)
{
  return [a1 stringForBrowserMode:];
}

id objc_msgSend_stringForKey_(void *a1, const char *a2, ...)
{
  return [a1 stringForKey:];
}

id objc_msgSend_stringForState_(void *a1, const char *a2, ...)
{
  return [a1 stringForState:];
}

id objc_msgSend_stringForWatchWristState_(void *a1, const char *a2, ...)
{
  return [a1 stringForWatchWristState:];
}

id objc_msgSend_stringFromContact_(void *a1, const char *a2, ...)
{
  return [a1 stringFromContact:];
}

id objc_msgSend_stringFromContact_style_(void *a1, const char *a2, ...)
{
  return [a1 stringFromContact:style:];
}

id objc_msgSend_stringFromDate_(void *a1, const char *a2, ...)
{
  return [a1 stringFromDate:x0];
}

id objc_msgSend_stringFromState_(void *a1, const char *a2, ...)
{
  return [a1 stringFromState:];
}

id objc_msgSend_stringFromXPCObject_(void *a1, const char *a2, ...)
{
  return [a1 stringFromXPCObject:];
}

id objc_msgSend_stringIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 stringIdentifier];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithCString_encoding_(void *a1, const char *a2, ...)
{
  return [a1 stringWithCString:x0 encoding:x1];
}

id objc_msgSend_stringWithContentsOfFile_encoding_error_(void *a1, const char *a2, ...)
{
  return [a1 stringWithContentsOfFile:x0 encoding:x1 error:x2];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_stringWithString_(void *a1, const char *a2, ...)
{
  return [a1 stringWithString:];
}

id objc_msgSend_stringWithUTF8String_(void *a1, const char *a2, ...)
{
  return [a1 stringWithUTF8String:];
}

id objc_msgSend_strings(void *a1, const char *a2, ...)
{
  return _[a1 strings];
}

id objc_msgSend_subarrayWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subarrayWithRange:];
}

id objc_msgSend_subdataWithRange_(void *a1, const char *a2, ...)
{
  return [a1 subdataWithRange:];
}

id objc_msgSend_subject(void *a1, const char *a2, ...)
{
  return _[a1 subject];
}

id objc_msgSend_subjectForItem_(void *a1, const char *a2, ...)
{
  return [a1 subjectForItem:];
}

id objc_msgSend_submitEvent(void *a1, const char *a2, ...)
{
  return _[a1 submitEvent];
}

id objc_msgSend_subscribeForCellularSlicingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 subscribeForCellularSlicingAvailability];
}

id objc_msgSend_substringFromIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringFromIndex:];
}

id objc_msgSend_substringToIndex_(void *a1, const char *a2, ...)
{
  return [a1 substringToIndex:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_subtitle(void *a1, const char *a2, ...)
{
  return _[a1 subtitle];
}

id objc_msgSend_subtype(void *a1, const char *a2, ...)
{
  return _[a1 subtype];
}

id objc_msgSend_success(void *a1, const char *a2, ...)
{
  return _[a1 success];
}

id objc_msgSend_successfulAttempts(void *a1, const char *a2, ...)
{
  return _[a1 successfulAttempts];
}

id objc_msgSend_suggestInteractionsFromContext_(void *a1, const char *a2, ...)
{
  return [a1 suggestInteractionsFromContext:];
}

id objc_msgSend_suggestLessPeopleSuggestionIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 suggestLessPeopleSuggestionIdentifier:];
}

id objc_msgSend_suggestedDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 suggestedDeviceID];
}

id objc_msgSend_suggestedPeer(void *a1, const char *a2, ...)
{
  return _[a1 suggestedPeer];
}

id objc_msgSend_suggestedPeers(void *a1, const char *a2, ...)
{
  return _[a1 suggestedPeers];
}

id objc_msgSend_suggestedPeople(void *a1, const char *a2, ...)
{
  return _[a1 suggestedPeople];
}

id objc_msgSend_suggestedValidDuration(void *a1, const char *a2, ...)
{
  return _[a1 suggestedValidDuration];
}

id objc_msgSend_suggestion(void *a1, const char *a2, ...)
{
  return _[a1 suggestion];
}

id objc_msgSend_suggestionBrowser(void *a1, const char *a2, ...)
{
  return _[a1 suggestionBrowser];
}

id objc_msgSend_suggestionBrowserDidUpdateSuggestions_(void *a1, const char *a2, ...)
{
  return [a1 suggestionBrowserDidUpdateSuggestions:];
}

id objc_msgSend_suggestionDate(void *a1, const char *a2, ...)
{
  return _[a1 suggestionDate];
}

id objc_msgSend_suggestionIndex(void *a1, const char *a2, ...)
{
  return _[a1 suggestionIndex];
}

id objc_msgSend_suggestionManager(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManager];
}

id objc_msgSend_suggestionManagerQueue(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManagerQueue];
}

id objc_msgSend_suggestionManagerSessionID(void *a1, const char *a2, ...)
{
  return _[a1 suggestionManagerSessionID];
}

id objc_msgSend_suggestionNode(void *a1, const char *a2, ...)
{
  return _[a1 suggestionNode];
}

id objc_msgSend_suggestionReason(void *a1, const char *a2, ...)
{
  return _[a1 suggestionReason];
}

id objc_msgSend_suggestions(void *a1, const char *a2, ...)
{
  return _[a1 suggestions];
}

id objc_msgSend_suitableContentsDescription(void *a1, const char *a2, ...)
{
  return _[a1 suitableContentsDescription];
}

id objc_msgSend_suitableContentsDescriptionWithSenderName_itemsCount_items_senderIsMe_isVerifiableIdentity_hasPhotos_hasVideos_isModernProgress_transferState_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "suitableContentsDescriptionWithSenderName:itemsCount:items:senderIsMe:isVerifiableIdentity:hasPhotos:hasVideos:isModernProgress:transferState:");
}

id objc_msgSend_suitableContentsTitle(void *a1, const char *a2, ...)
{
  return _[a1 suitableContentsTitle];
}

id objc_msgSend_supportedApplicationLabels(void *a1, const char *a2, ...)
{
  return _[a1 supportedApplicationLabels];
}

id objc_msgSend_supportedTypeIdentifiers(void *a1, const char *a2, ...)
{
  return _[a1 supportedTypeIdentifiers];
}

id objc_msgSend_supportsAACPService(void *a1, const char *a2, ...)
{
  return _[a1 supportsAACPService];
}

id objc_msgSend_supportsACK(void *a1, const char *a2, ...)
{
  return _[a1 supportsACK];
}

id objc_msgSend_supportsAdaptiveControlsProx(void *a1, const char *a2, ...)
{
  return _[a1 supportsAdaptiveControlsProx];
}

id objc_msgSend_supportsAdvertisingUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 supportsAdvertisingUnlocked];
}

id objc_msgSend_supportsAlwaysDirect(void *a1, const char *a2, ...)
{
  return _[a1 supportsAlwaysDirect];
}

id objc_msgSend_supportsApproveIcon(void *a1, const char *a2, ...)
{
  return _[a1 supportsApproveIcon];
}

id objc_msgSend_supportsApproveWithWatch(void *a1, const char *a2, ...)
{
  return _[a1 supportsApproveWithWatch];
}

id objc_msgSend_supportsCollaboration(void *a1, const char *a2, ...)
{
  return _[a1 supportsCollaboration];
}

id objc_msgSend_supportsCompanionLink(void *a1, const char *a2, ...)
{
  return _[a1 supportsCompanionLink];
}

id objc_msgSend_supportsConfirmationACK(void *a1, const char *a2, ...)
{
  return _[a1 supportsConfirmationACK];
}

id objc_msgSend_supportsConnectionCache(void *a1, const char *a2, ...)
{
  return _[a1 supportsConnectionCache];
}

id objc_msgSend_supportsContentExtensions(void *a1, const char *a2, ...)
{
  return _[a1 supportsContentExtensions];
}

id objc_msgSend_supportsCredentials(void *a1, const char *a2, ...)
{
  return _[a1 supportsCredentials];
}

id objc_msgSend_supportsDigitalEngraving(void *a1, const char *a2, ...)
{
  return _[a1 supportsDigitalEngraving];
}

id objc_msgSend_supportsEncryption(void *a1, const char *a2, ...)
{
  return _[a1 supportsEncryption];
}

id objc_msgSend_supportsEndCallProx(void *a1, const char *a2, ...)
{
  return _[a1 supportsEndCallProx];
}

id objc_msgSend_supportsFMF(void *a1, const char *a2, ...)
{
  return _[a1 supportsFMF];
}

id objc_msgSend_supportsFitnessPlusPairing(void *a1, const char *a2, ...)
{
  return _[a1 supportsFitnessPlusPairing];
}

id objc_msgSend_supportsHEIC(void *a1, const char *a2, ...)
{
  return _[a1 supportsHEIC];
}

id objc_msgSend_supportsHandoff(void *a1, const char *a2, ...)
{
  return _[a1 supportsHandoff];
}

id objc_msgSend_supportsMMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportsMMSRelay];
}

id objc_msgSend_supportsMixedTypes(void *a1, const char *a2, ...)
{
  return _[a1 supportsMixedTypes];
}

id objc_msgSend_supportsMuteCallProx(void *a1, const char *a2, ...)
{
  return _[a1 supportsMuteCallProx];
}

id objc_msgSend_supportsOpenInPlace(void *a1, const char *a2, ...)
{
  return _[a1 supportsOpenInPlace];
}

id objc_msgSend_supportsOptimizedBatteryCharging(void *a1, const char *a2, ...)
{
  return _[a1 supportsOptimizedBatteryCharging];
}

id objc_msgSend_supportsPasses(void *a1, const char *a2, ...)
{
  return _[a1 supportsPasses];
}

id objc_msgSend_supportsPeriocular(void *a1, const char *a2, ...)
{
  return _[a1 supportsPeriocular];
}

id objc_msgSend_supportsPeriocularEnrollmentWithError_(void *a1, const char *a2, ...)
{
  return [a1 supportsPeriocularEnrollmentWithError:];
}

id objc_msgSend_supportsSMSRelay(void *a1, const char *a2, ...)
{
  return _[a1 supportsSMSRelay];
}

id objc_msgSend_supportsTethering(void *a1, const char *a2, ...)
{
  return _[a1 supportsTethering];
}

id objc_msgSend_supportsXcodePairing(void *a1, const char *a2, ...)
{
  return _[a1 supportsXcodePairing];
}

id objc_msgSend_suppressAlert(void *a1, const char *a2, ...)
{
  return _[a1 suppressAlert];
}

id objc_msgSend_suppressNotification(void *a1, const char *a2, ...)
{
  return _[a1 suppressNotification];
}

id objc_msgSend_suppressWatchNotification(void *a1, const char *a2, ...)
{
  return _[a1 suppressWatchNotification];
}

id objc_msgSend_svgImages(void *a1, const char *a2, ...)
{
  return _[a1 svgImages];
}

id objc_msgSend_switchToStreaming(void *a1, const char *a2, ...)
{
  return _[a1 switchToStreaming];
}

id objc_msgSend_symbolCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 symbolCharacterSet];
}

id objc_msgSend_syncUnlockEnabled_(void *a1, const char *a2, ...)
{
  return [a1 syncUnlockEnabled:];
}

id objc_msgSend_syncedDictionaryForDevice_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "syncedDictionaryForDevice:");
}

id objc_msgSend_synchronize(void *a1, const char *a2, ...)
{
  return _[a1 synchronize];
}

id objc_msgSend_synchronousRemoteObjectProxyWithErrorHandler_(void *a1, const char *a2, ...)
{
  return [a1 synchronousRemoteObjectProxyWithErrorHandler:];
}

id objc_msgSend_systemBlueColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBlueColor];
}

id objc_msgSend_systemImageName(void *a1, const char *a2, ...)
{
  return _[a1 systemImageName];
}

id objc_msgSend_systemInfoChanged_diskInfo_(void *a1, const char *a2, ...)
{
  return [a1 systemInfoChanged:diskInfo:];
}

id objc_msgSend_systemLockState(void *a1, const char *a2, ...)
{
  return _[a1 systemLockState];
}

id objc_msgSend_systemMonitor(void *a1, const char *a2, ...)
{
  return _[a1 systemMonitor];
}

id objc_msgSend_systemPairState(void *a1, const char *a2, ...)
{
  return _[a1 systemPairState];
}

id objc_msgSend_systemPhotoLibrary(void *a1, const char *a2, ...)
{
  return _[a1 systemPhotoLibrary];
}

id objc_msgSend_systemRedColor(void *a1, const char *a2, ...)
{
  return _[a1 systemRedColor];
}

id objc_msgSend_systemUIFlags(void *a1, const char *a2, ...)
{
  return _[a1 systemUIFlags];
}

id objc_msgSend_t208Machine(void *a1, const char *a2, ...)
{
  return _[a1 t208Machine];
}

id objc_msgSend_takeActionOnServerChanged_neighborhood_(void *a1, const char *a2, ...)
{
  return [a1 takeActionOnServerChanged:neighborhood:];
}

id objc_msgSend_takeMobileKeybagAssertion(void *a1, const char *a2, ...)
{
  return _[a1 takeMobileKeybagAssertion];
}

id objc_msgSend_targetApplicationProxy(void *a1, const char *a2, ...)
{
  return _[a1 targetApplicationProxy];
}

id objc_msgSend_targetApplicationRecord(void *a1, const char *a2, ...)
{
  return _[a1 targetApplicationRecord];
}

id objc_msgSend_targetAuthTag(void *a1, const char *a2, ...)
{
  return _[a1 targetAuthTag];
}

id objc_msgSend_taskInfo(void *a1, const char *a2, ...)
{
  return _[a1 taskInfo];
}

id objc_msgSend_tcpConnectionComplete(void *a1, const char *a2, ...)
{
  return _[a1 tcpConnectionComplete];
}

id objc_msgSend_tearDownAWDLIfNecessary(void *a1, const char *a2, ...)
{
  return _[a1 tearDownAWDLIfNecessary];
}

id objc_msgSend_telephoneLinks(void *a1, const char *a2, ...)
{
  return _[a1 telephoneLinks];
}

id objc_msgSend_temperature(void *a1, const char *a2, ...)
{
  return _[a1 temperature];
}

id objc_msgSend_temporaryBomPath(void *a1, const char *a2, ...)
{
  return _[a1 temporaryBomPath];
}

id objc_msgSend_temporaryDirectory(void *a1, const char *a2, ...)
{
  return _[a1 temporaryDirectory];
}

id objc_msgSend_temporaryWeblocURL_(void *a1, const char *a2, ...)
{
  return [a1 temporaryWeblocURL];
}

id objc_msgSend_testAutoFillRemove(void *a1, const char *a2, ...)
{
  return _[a1 testAutoFillRemove];
}

id objc_msgSend_testAutofillPost(void *a1, const char *a2, ...)
{
  return _[a1 testAutofillPost];
}

id objc_msgSend_testDeviceID(void *a1, const char *a2, ...)
{
  return _[a1 testDeviceID];
}

id objc_msgSend_testDiskFull(void *a1, const char *a2, ...)
{
  return _[a1 testDiskFull];
}

id objc_msgSend_testHandoffPost(void *a1, const char *a2, ...)
{
  return _[a1 testHandoffPost];
}

id objc_msgSend_testHomeKitDeviceDetected_(void *a1, const char *a2, ...)
{
  return [a1 testHomeKitDeviceDetected:];
}

id objc_msgSend_testKeyboardPost(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPost];
}

id objc_msgSend_testKeyboardPost_(void *a1, const char *a2, ...)
{
  return [a1 testKeyboardPost:];
}

id objc_msgSend_testKeyboardPostAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPostAutoFill];
}

id objc_msgSend_testKeyboardPostThenUpdate(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPostThenUpdate];
}

id objc_msgSend_testKeyboardPostWithDelay(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardPostWithDelay];
}

id objc_msgSend_testKeyboardRemove(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardRemove];
}

id objc_msgSend_testKeyboardRemoveWithDelay(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardRemoveWithDelay];
}

id objc_msgSend_testKeyboardUpdate(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardUpdate];
}

id objc_msgSend_testKeyboardUpdateWithDelay(void *a1, const char *a2, ...)
{
  return _[a1 testKeyboardUpdateWithDelay];
}

id objc_msgSend_testKeychain_(void *a1, const char *a2, ...)
{
  return [a1 testKeychain:];
}

id objc_msgSend_testMode(void *a1, const char *a2, ...)
{
  return _[a1 testMode];
}

id objc_msgSend_testNFCUI_(void *a1, const char *a2, ...)
{
  return [a1 testNFCUI:];
}

id objc_msgSend_testNotification(void *a1, const char *a2, ...)
{
  return _[a1 testNotification];
}

id objc_msgSend_testPINHide(void *a1, const char *a2, ...)
{
  return _[a1 testPINHide];
}

id objc_msgSend_testPINShow_(void *a1, const char *a2, ...)
{
  return [a1 testPINShow:];
}

id objc_msgSend_testPairUI_(void *a1, const char *a2, ...)
{
  return [a1 testPairUI:];
}

id objc_msgSend_testPairingUI_(void *a1, const char *a2, ...)
{
  return [a1 testPairingUI:];
}

id objc_msgSend_testPipePing(void *a1, const char *a2, ...)
{
  return _[a1 testPipePing];
}

id objc_msgSend_testPost_(void *a1, const char *a2, ...)
{
  return [a1 testPost:];
}

id objc_msgSend_testPostBasic(void *a1, const char *a2, ...)
{
  return _[a1 testPostBasic];
}

id objc_msgSend_testProxCardKit_(void *a1, const char *a2, ...)
{
  return [a1 testProxCardKit:];
}

id objc_msgSend_testRemote_(void *a1, const char *a2, ...)
{
  return [a1 testRemote:];
}

id objc_msgSend_testRepairUI_(void *a1, const char *a2, ...)
{
  return [a1 testRepairUI:];
}

id objc_msgSend_testService_(void *a1, const char *a2, ...)
{
  return [a1 testService:];
}

id objc_msgSend_testSetupUIB238_(void *a1, const char *a2, ...)
{
  return [a1 testSetupUIB238:];
}

id objc_msgSend_testSetupUIPasswordSharing_(void *a1, const char *a2, ...)
{
  return [a1 testSetupUIPasswordSharing:];
}

id objc_msgSend_testSetupUIWHA_(void *a1, const char *a2, ...)
{
  return [a1 testSetupUIWHA:];
}

id objc_msgSend_testSetupUIWatch_(void *a1, const char *a2, ...)
{
  return [a1 testSetupUIWatch:];
}

id objc_msgSend_testSetupUIiOS_(void *a1, const char *a2, ...)
{
  return [a1 testSetupUIiOS:];
}

id objc_msgSend_testStatusUI_(void *a1, const char *a2, ...)
{
  return [a1 testStatusUI:];
}

id objc_msgSend_testUI_(void *a1, const char *a2, ...)
{
  return [a1 testUI:];
}

id objc_msgSend_testUIAppleTVSetup_(void *a1, const char *a2, ...)
{
  return [a1 testUIAppleTVSetup:];
}

id objc_msgSend_testUIShareAudio_(void *a1, const char *a2, ...)
{
  return [a1 testUIShareAudio:];
}

id objc_msgSend_testUITVLatencyColorimeterSetup_(void *a1, const char *a2, ...)
{
  return [a1 testUITVLatencyColorimeterSetup:];
}

id objc_msgSend_testUITVLatencySetup_(void *a1, const char *a2, ...)
{
  return [a1 testUITVLatencySetup:];
}

id objc_msgSend_testWatchKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 testWatchKeyboard];
}

id objc_msgSend_testWatchKeyboardAutoFill(void *a1, const char *a2, ...)
{
  return _[a1 testWatchKeyboardAutoFill];
}

id objc_msgSend_testWrappingKeychainItem(void *a1, const char *a2, ...)
{
  return _[a1 testWrappingKeychainItem];
}

id objc_msgSend_tetheringDidRetrieveCredentials_credentials_requestRecord_error_(void *a1, const char *a2, ...)
{
  return [a1 tetheringDidRetrieveCredentials:credentials:requestRecord:error:];
}

id objc_msgSend_tetheringPeers(void *a1, const char *a2, ...)
{
  return _[a1 tetheringPeers];
}

id objc_msgSend_tetheringSourceIsValid_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "tetheringSourceIsValid:");
}

id objc_msgSend_tetheringSupportChanged(void *a1, const char *a2, ...)
{
  return _[a1 tetheringSupportChanged];
}

id objc_msgSend_text(void *a1, const char *a2, ...)
{
  return _[a1 text];
}

id objc_msgSend_textColor(void *a1, const char *a2, ...)
{
  return _[a1 textColor];
}

id objc_msgSend_textDocuments(void *a1, const char *a2, ...)
{
  return _[a1 textDocuments];
}

id objc_msgSend_thereIsEnoughFreeSpace(void *a1, const char *a2, ...)
{
  return _[a1 thereIsEnoughFreeSpace];
}

id objc_msgSend_thisIsTheFinder(void *a1, const char *a2, ...)
{
  return _[a1 thisIsTheFinder];
}

id objc_msgSend_timeIntervalSince1970(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSince1970];
}

id objc_msgSend_timeIntervalSinceDate_(void *a1, const char *a2, ...)
{
  return [a1 timeIntervalSinceDate:];
}

id objc_msgSend_timeIntervalSinceNow(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceNow];
}

id objc_msgSend_timeIntervalSinceReferenceDate(void *a1, const char *a2, ...)
{
  return _[a1 timeIntervalSinceReferenceDate];
}

id objc_msgSend_timeRemaining_timeNow_(void *a1, const char *a2, ...)
{
  return [a1 timeRemaining:timeNow:];
}

id objc_msgSend_timeSinceLastMachineWake(void *a1, const char *a2, ...)
{
  return _[a1 timeSinceLastMachineWake];
}

id objc_msgSend_timeZone(void *a1, const char *a2, ...)
{
  return _[a1 timeZone];
}

id objc_msgSend_timeZoneWithName_(void *a1, const char *a2, ...)
{
  return [a1 timeZoneWithName:];
}

id objc_msgSend_timeout(void *a1, const char *a2, ...)
{
  return _[a1 timeout];
}

id objc_msgSend_timeoutSeconds(void *a1, const char *a2, ...)
{
  return _[a1 timeoutSeconds];
}

id objc_msgSend_timeoutTimeInterval(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimeInterval];
}

id objc_msgSend_timeoutTimer(void *a1, const char *a2, ...)
{
  return _[a1 timeoutTimer];
}

id objc_msgSend_timerWithTimeInterval_target_selector_userInfo_repeats_(void *a1, const char *a2, ...)
{
  return [a1 timerWithTimeInterval:x0 target:x1 selector:x2 userInfo:x3 repeats:x4];
}

id objc_msgSend_timestampTicks(void *a1, const char *a2, ...)
{
  return _[a1 timestampTicks];
}

id objc_msgSend_tintColor(void *a1, const char *a2, ...)
{
  return _[a1 tintColor];
}

id objc_msgSend_title(void *a1, const char *a2, ...)
{
  return _[a1 title];
}

id objc_msgSend_tlsHandshakeComplete(void *a1, const char *a2, ...)
{
  return _[a1 tlsHandshakeComplete];
}

id objc_msgSend_tmpDirectory(void *a1, const char *a2, ...)
{
  return _[a1 tmpDirectory];
}

id objc_msgSend_token(void *a1, const char *a2, ...)
{
  return _[a1 token];
}

id objc_msgSend_tokenExchange(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchange];
}

id objc_msgSend_tokenExchangeDate(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchangeDate];
}

id objc_msgSend_tokenExchangeInterval(void *a1, const char *a2, ...)
{
  return _[a1 tokenExchangeInterval];
}

id objc_msgSend_tokenMessageIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 tokenMessageIdentifier];
}

id objc_msgSend_topic(void *a1, const char *a2, ...)
{
  return _[a1 topic];
}

id objc_msgSend_totalAttempts(void *a1, const char *a2, ...)
{
  return _[a1 totalAttempts];
}

id objc_msgSend_totalFileSize_(void *a1, const char *a2, ...)
{
  return [a1 totalFileSize:];
}

id objc_msgSend_totalSharedItemsCount(void *a1, const char *a2, ...)
{
  return _[a1 totalSharedItemsCount];
}

id objc_msgSend_totalUnitCount(void *a1, const char *a2, ...)
{
  return _[a1 totalUnitCount];
}

id objc_msgSend_totalUnlocks(void *a1, const char *a2, ...)
{
  return _[a1 totalUnlocks];
}

id objc_msgSend_trackPeers(void *a1, const char *a2, ...)
{
  return _[a1 trackPeers];
}

id objc_msgSend_trackedPeers(void *a1, const char *a2, ...)
{
  return _[a1 trackedPeers];
}

id objc_msgSend_trafficClass(void *a1, const char *a2, ...)
{
  return _[a1 trafficClass];
}

id objc_msgSend_trafficFilterParams(void *a1, const char *a2, ...)
{
  return _[a1 trafficFilterParams];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_traitCollectionWithTraitsFromCollections_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithTraitsFromCollections:];
}

id objc_msgSend_traitCollectionWithUserInterfaceIdiom_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithUserInterfaceIdiom:];
}

id objc_msgSend_traitCollectionWithUserInterfaceStyle_(void *a1, const char *a2, ...)
{
  return [a1 traitCollectionWithUserInterfaceStyle:];
}

id objc_msgSend_transactionMetrics(void *a1, const char *a2, ...)
{
  return _[a1 transactionMetrics];
}

id objc_msgSend_transfer(void *a1, const char *a2, ...)
{
  return _[a1 transfer];
}

id objc_msgSend_transfer_actionTriggeredForAction_(void *a1, const char *a2, ...)
{
  return [a1 transfer:actionTriggeredForAction:];
}

id objc_msgSend_transferBubble(void *a1, const char *a2, ...)
{
  return _[a1 transferBubble];
}

id objc_msgSend_transferConcluded(void *a1, const char *a2, ...)
{
  return _[a1 transferConcluded];
}

id objc_msgSend_transferContainsPhotosAssetBundles(void *a1, const char *a2, ...)
{
  return _[a1 transferContainsPhotosAssetBundles];
}

id objc_msgSend_transferDataFromPayload_sessionID_(void *a1, const char *a2, ...)
{
  return [a1 transferDataFromPayload:sessionID:];
}

id objc_msgSend_transferDoneTicks(void *a1, const char *a2, ...)
{
  return _[a1 transferDoneTicks];
}

id objc_msgSend_transferIdentifierToHandler(void *a1, const char *a2, ...)
{
  return _[a1 transferIdentifierToHandler];
}

id objc_msgSend_transferIdentifierToTransfer(void *a1, const char *a2, ...)
{
  return _[a1 transferIdentifierToTransfer];
}

id objc_msgSend_transferIsOverPrebufferLimit(void *a1, const char *a2, ...)
{
  return _[a1 transferIsOverPrebufferLimit];
}

id objc_msgSend_transferNodes(void *a1, const char *a2, ...)
{
  return _[a1 transferNodes];
}

id objc_msgSend_transferPendingStartTicks(void *a1, const char *a2, ...)
{
  return _[a1 transferPendingStartTicks];
}

id objc_msgSend_transferState(void *a1, const char *a2, ...)
{
  return _[a1 transferState];
}

id objc_msgSend_transferTypes(void *a1, const char *a2, ...)
{
  return _[a1 transferTypes];
}

id objc_msgSend_transferURLForTransfer_(void *a1, const char *a2, ...)
{
  return [a1 transferURLForTransfer:];
}

id objc_msgSend_transferUpdated(void *a1, const char *a2, ...)
{
  return _[a1 transferUpdated];
}

id objc_msgSend_transferUserResponseUpdated_(void *a1, const char *a2, ...)
{
  return [a1 transferUserResponseUpdated:];
}

id objc_msgSend_transferWithIdentifierWasAccepted_(void *a1, const char *a2, ...)
{
  return [a1 transferWithIdentifierWasAccepted:];
}

id objc_msgSend_transferWithIdentifierWasDeclined_withFailureReason_(void *a1, const char *a2, ...)
{
  return [a1 transferWithIdentifierWasDeclined:withFailureReason:];
}

id objc_msgSend_transfersCompleted(void *a1, const char *a2, ...)
{
  return _[a1 transfersCompleted];
}

id objc_msgSend_transfersInitiated(void *a1, const char *a2, ...)
{
  return _[a1 transfersInitiated];
}

id objc_msgSend_transientContactsCount(void *a1, const char *a2, ...)
{
  return _[a1 transientContactsCount];
}

id objc_msgSend_transport(void *a1, const char *a2, ...)
{
  return _[a1 transport];
}

id objc_msgSend_transport_didReceiveDisableMessage_fromDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 transport:didReceiveDisableMessage:fromDeviceID:];
}

id objc_msgSend_transport_didReceiveKeyOriginatingRegistrationRequestWithSessionID_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "transport:didReceiveKeyOriginatingRegistrationRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transport_didReceiveMessageACKForIdentifier_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "transport:didReceiveMessageACKForIdentifier:");
}

id objc_msgSend_transport_didReceivePairingRequestWithSessionID_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "transport:didReceivePairingRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transport_didReceivePayload_type_deviceID_(void *a1, const char *a2, ...)
{
  return [a1 transport:didReceivePayload:type:deviceID:];
}

id objc_msgSend_transport_didReceiveRegistrationRequestWithSessionID_deviceID_requestData_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "transport:didReceiveRegistrationRequestWithSessionID:deviceID:requestData:");
}

id objc_msgSend_transportBundleID(void *a1, const char *a2, ...)
{
  return _[a1 transportBundleID];
}

id objc_msgSend_transportBundleIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 transportBundleIdentifier];
}

id objc_msgSend_transportDidChangeDevices_(void *a1, const char *a2, ...)
{
  return [a1 transportDidChangeDevices:];
}

id objc_msgSend_transportDidChangeNearbyState_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "transportDidChangeNearbyState:");
}

id objc_msgSend_transportImageForBundleIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 transportImageForBundleIdentifier:];
}

id objc_msgSend_transportImageSlotID(void *a1, const char *a2, ...)
{
  return _[a1 transportImageSlotID];
}

id objc_msgSend_transportQueue(void *a1, const char *a2, ...)
{
  return _[a1 transportQueue];
}

id objc_msgSend_transportType(void *a1, const char *a2, ...)
{
  return _[a1 transportType];
}

id objc_msgSend_trigger(void *a1, const char *a2, ...)
{
  return _[a1 trigger];
}

id objc_msgSend_triggerAppStoreSearch(void *a1, const char *a2, ...)
{
  return _[a1 triggerAppStoreSearch];
}

id objc_msgSend_triggerAssetCleanupWithBluetoothDeviceRemoved_(void *a1, const char *a2, ...)
{
  return [a1 triggerAssetCleanupWithBluetoothDeviceRemoved:];
}

id objc_msgSend_triggerCloudPairRetryWithShortRetryDeviceIDs_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "triggerCloudPairRetryWithShortRetryDeviceIDs:");
}

id objc_msgSend_triggerDevicesIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 triggerDevicesIfNeeded];
}

id objc_msgSend_triggerHomeKitDeviceDetectedWithURL_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "triggerHomeKitDeviceDetectedWithURL:completion:");
}

id objc_msgSend_triggerImport(void *a1, const char *a2, ...)
{
  return _[a1 triggerImport];
}

id objc_msgSend_triggerImportWithCompletedURLs_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "triggerImportWithCompletedURLs:completion:");
}

id objc_msgSend_triggerProximityAutoFillDetectedWithURL_completion_(void *a1, const char *a2, ...)
{
  return [a1 triggerProximityAutoFillDetectedWithURL:completion:];
}

id objc_msgSend_triggerSelectedActionIfAppropriate(void *a1, const char *a2, ...)
{
  return _[a1 triggerSelectedActionIfAppropriate];
}

id objc_msgSend_triggered(void *a1, const char *a2, ...)
{
  return _[a1 triggered];
}

id objc_msgSend_trimHeader_(void *a1, const char *a2, ...)
{
  return [a1 trimHeader:];
}

id objc_msgSend_tryPIN_(void *a1, const char *a2, ...)
{
  return [a1 tryPIN:];
}

id objc_msgSend_turnOffDiscovery(void *a1, const char *a2, ...)
{
  return _[a1 turnOffDiscovery];
}

id objc_msgSend_turnOffScreenOffScanningIfNoAirPodsOntheAccount(void *a1, const char *a2, ...)
{
  return _[a1 turnOffScreenOffScanningIfNoAirPodsOntheAccount];
}

id objc_msgSend_tvAutoFillPostIfNeeded_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "tvAutoFillPostIfNeeded:");
}

id objc_msgSend_tvAutoFillRemove_(void *a1, const char *a2, ...)
{
  return [a1 tvAutoFillRemove:];
}

id objc_msgSend_type(void *a1, const char *a2, ...)
{
  return _[a1 type];
}

id objc_msgSend_typeIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 typeIdentifier];
}

id objc_msgSend_typeIdentifiersBeingShared(void *a1, const char *a2, ...)
{
  return _[a1 typeIdentifiersBeingShared];
}

id objc_msgSend_typeWithFilenameExtension_(void *a1, const char *a2, ...)
{
  return [a1 typeWithFilenameExtension:];
}

id objc_msgSend_typeWithFilenameExtension_conformingToType_(void *a1, const char *a2, ...)
{
  return [a1 typeWithFilenameExtension:x0 conformingToType:x1];
}

id objc_msgSend_typeWithIdentifier_(void *a1, const char *a2, ...)
{
  return [a1 typeWithIdentifier:];
}

id objc_msgSend_types(void *a1, const char *a2, ...)
{
  return _[a1 types];
}

id objc_msgSend_uiPresentWithParamsDirect_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "uiPresentWithParamsDirect:completion:");
}

id objc_msgSend_uiServiceConnection(void *a1, const char *a2, ...)
{
  return _[a1 uiServiceConnection];
}

id objc_msgSend_uiShowing(void *a1, const char *a2, ...)
{
  return _[a1 uiShowing];
}

id objc_msgSend_ui_bookmarkForExportWithError_(void *a1, const char *a2, ...)
{
  return [a1 ui_bookmarkForExportWithError:];
}

id objc_msgSend_ultraWideBandState(void *a1, const char *a2, ...)
{
  return _[a1 ultraWideBandState];
}

id objc_msgSend_unarchivedObjectOfClass_fromData_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "unarchivedObjectOfClass:fromData:error:")];
}

id objc_msgSend_unarchivedObjectOfClasses_fromData_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "unarchivedObjectOfClasses:fromData:error:");
}

id objc_msgSend_unifiedAppleIDInfo(void *a1, const char *a2, ...)
{
  return _[a1 unifiedAppleIDInfo];
}

id objc_msgSend_unifiedContactWithIdentifier_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return [a1 unifiedContactWithIdentifier:x0 keysToFetch:x1 error:x2];
}

id objc_msgSend_unifiedContactsMatchingPredicate_keysToFetch_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "unifiedContactsMatchingPredicate:keysToFetch:error:");
}

id objc_msgSend_uninstallBonjourNameMonitor(void *a1, const char *a2, ...)
{
  return _[a1 uninstallBonjourNameMonitor];
}

id objc_msgSend_uninstallCarPlayStatusMonitor(void *a1, const char *a2, ...)
{
  return _[a1 uninstallCarPlayStatusMonitor];
}

id objc_msgSend_unionSet_(void *a1, const char *a2, ...)
{
  return [a1 unionSet:];
}

id objc_msgSend_uniqueID(void *a1, const char *a2, ...)
{
  return _[a1 uniqueID];
}

id objc_msgSend_uniqueIDOverride(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIDOverride];
}

id objc_msgSend_uniqueIdentifier(void *a1, const char *a2, ...)
{
  return _[a1 uniqueIdentifier];
}

id objc_msgSend_unloadAirDrop(void *a1, const char *a2, ...)
{
  return _[a1 unloadAirDrop];
}

id objc_msgSend_unloadBonjour(void *a1, const char *a2, ...)
{
  return _[a1 unloadBonjour];
}

id objc_msgSend_unloadClassroom(void *a1, const char *a2, ...)
{
  return _[a1 unloadClassroom];
}

id objc_msgSend_unloadConnected(void *a1, const char *a2, ...)
{
  return _[a1 unloadConnected];
}

id objc_msgSend_unloadDomains(void *a1, const char *a2, ...)
{
  return _[a1 unloadDomains];
}

id objc_msgSend_unloadManaged(void *a1, const char *a2, ...)
{
  return _[a1 unloadManaged];
}

id objc_msgSend_unloadODisk(void *a1, const char *a2, ...)
{
  return _[a1 unloadODisk];
}

id objc_msgSend_unloadRapport(void *a1, const char *a2, ...)
{
  return _[a1 unloadRapport];
}

id objc_msgSend_unloadSharePoints(void *a1, const char *a2, ...)
{
  return _[a1 unloadSharePoints];
}

id objc_msgSend_unloadSidebarPrefsMonitor(void *a1, const char *a2, ...)
{
  return _[a1 unloadSidebarPrefsMonitor];
}

id objc_msgSend_unloadWindows(void *a1, const char *a2, ...)
{
  return _[a1 unloadWindows];
}

id objc_msgSend_unloadWorkgroups(void *a1, const char *a2, ...)
{
  return _[a1 unloadWorkgroups];
}

id objc_msgSend_unlockAllowed(void *a1, const char *a2, ...)
{
  return _[a1 unlockAllowed];
}

id objc_msgSend_unlockAuthSession(void *a1, const char *a2, ...)
{
  return _[a1 unlockAuthSession];
}

id objc_msgSend_unlockEnabled(void *a1, const char *a2, ...)
{
  return _[a1 unlockEnabled];
}

id objc_msgSend_unlockSessionAsOriginator_usingEscrow_escrowSecret_(void *a1, const char *a2, ...)
{
  return [a1 unlockSessionAsOriginator:usingEscrow:escrowSecret:];
}

id objc_msgSend_unlockSessionAsOriginator_usingEscrow_escrowSecret_errorCode_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "unlockSessionAsOriginator:usingEscrow:escrowSecret:errorCode:");
}

id objc_msgSend_unlockSessionID(void *a1, const char *a2, ...)
{
  return _[a1 unlockSessionID];
}

id objc_msgSend_unlockSessions(void *a1, const char *a2, ...)
{
  return _[a1 unlockSessions];
}

id objc_msgSend_unlockStartTestClientWithDevice_(void *a1, const char *a2, ...)
{
  return [a1 unlockStartTestClientWithDevice:];
}

id objc_msgSend_unlockStateForDevice_completionHandler_(void *a1, const char *a2, ...)
{
  return [a1 unlockStateForDevice:x0 completionHandler:x1];
}

id objc_msgSend_unlockStopTestClient(void *a1, const char *a2, ...)
{
  return _[a1 unlockStopTestClient];
}

id objc_msgSend_unlockSucceeded(void *a1, const char *a2, ...)
{
  return _[a1 unlockSucceeded];
}

id objc_msgSend_unlockUpdateAdvertising_mask_(void *a1, const char *a2, ...)
{
  return [a1 unlockUpdateAdvertising:mask:];
}

id objc_msgSend_unlocked(void *a1, const char *a2, ...)
{
  return _[a1 unlocked];
}

id objc_msgSend_unlockedOnWristDate(void *a1, const char *a2, ...)
{
  return _[a1 unlockedOnWristDate];
}

id objc_msgSend_unlockingState(void *a1, const char *a2, ...)
{
  return _[a1 unlockingState];
}

id objc_msgSend_unprivatizedURLs(void *a1, const char *a2, ...)
{
  return _[a1 unprivatizedURLs];
}

id objc_msgSend_unpublish(void *a1, const char *a2, ...)
{
  return _[a1 unpublish];
}

id objc_msgSend_unregisterConnectedStreams(void *a1, const char *a2, ...)
{
  return _[a1 unregisterConnectedStreams];
}

id objc_msgSend_unregisterForPropertyChanges_withBlock_(void *a1, const char *a2, ...)
{
  return [a1 unregisterForPropertyChanges:withBlock:];
}

id objc_msgSend_unregisterManager_(void *a1, const char *a2, ...)
{
  return [a1 unregisterManager:];
}

id objc_msgSend_unregisterNotificationForKey_(void *a1, const char *a2, ...)
{
  return [a1 unregisterNotificationForKey:];
}

id objc_msgSend_unregisterObserver_(void *a1, const char *a2, ...)
{
  return [a1 unregisterObserver:];
}

id objc_msgSend_unsignedIntValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntValue];
}

id objc_msgSend_unsignedIntegerValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedIntegerValue];
}

id objc_msgSend_unsignedLongValue(void *a1, const char *a2, ...)
{
  return _[a1 unsignedLongValue];
}

id objc_msgSend_unwrappedDataRepresentationForKey_(void *a1, const char *a2, ...)
{
  return [a1 unwrappedDataRepresentationForKey:];
}

id objc_msgSend_unzip(void *a1, const char *a2, ...)
{
  return _[a1 unzip];
}

id objc_msgSend_update(void *a1, const char *a2, ...)
{
  return _[a1 update];
}

id objc_msgSend_updateAWDLStateInfo(void *a1, const char *a2, ...)
{
  return _[a1 updateAWDLStateInfo];
}

id objc_msgSend_updateAccountState(void *a1, const char *a2, ...)
{
  return _[a1 updateAccountState];
}

id objc_msgSend_updateAdvertiser(void *a1, const char *a2, ...)
{
  return _[a1 updateAdvertiser];
}

id objc_msgSend_updateAdvertising(void *a1, const char *a2, ...)
{
  return _[a1 updateAdvertising];
}

id objc_msgSend_updateAirDropAllowed(void *a1, const char *a2, ...)
{
  return _[a1 updateAirDropAllowed];
}

id objc_msgSend_updateApproveBluetoothIDs(void *a1, const char *a2, ...)
{
  return _[a1 updateApproveBluetoothIDs];
}

id objc_msgSend_updateAutoHotspotState(void *a1, const char *a2, ...)
{
  return _[a1 updateAutoHotspotState];
}

id objc_msgSend_updateBluetoothIDCache(void *a1, const char *a2, ...)
{
  return _[a1 updateBluetoothIDCache];
}

id objc_msgSend_updateCacheFromSFCGImageData_cacheKey_contactIDs_(void *a1, const char *a2, ...)
{
  return [a1 updateCacheFromSFCGImageData:cacheKey:contactIDs:];
}

id objc_msgSend_updateCrossoverTimer(void *a1, const char *a2, ...)
{
  return _[a1 updateCrossoverTimer];
}

id objc_msgSend_updateDataStatus_(void *a1, const char *a2, ...)
{
  return [a1 updateDataStatus:];
}

id objc_msgSend_updateDiscoverableMode(void *a1, const char *a2, ...)
{
  return _[a1 updateDiscoverableMode];
}

id objc_msgSend_updateDynamicStoreEnabled(void *a1, const char *a2, ...)
{
  return _[a1 updateDynamicStoreEnabled];
}

id objc_msgSend_updateExitPrevention(void *a1, const char *a2, ...)
{
  return _[a1 updateExitPrevention];
}

id objc_msgSend_updateFamilyHotspotState(void *a1, const char *a2, ...)
{
  return _[a1 updateFamilyHotspotState];
}

id objc_msgSend_updateFriendRPIdentityForAccountID_withAirDropClientInfo_(void *a1, const char *a2, ...)
{
  return [a1 updateFriendRPIdentityForAccountID:withAirDropClientInfo:];
}

id objc_msgSend_updateHasAppleID(void *a1, const char *a2, ...)
{
  return _[a1 updateHasAppleID];
}

id objc_msgSend_updateIDHash(void *a1, const char *a2, ...)
{
  return _[a1 updateIDHash];
}

id objc_msgSend_updateIDHashAndRestart(void *a1, const char *a2, ...)
{
  return _[a1 updateIDHashAndRestart];
}

id objc_msgSend_updateInterestedBundleIDs_(void *a1, const char *a2, ...)
{
  return [a1 updateInterestedBundleIDs:];
}

id objc_msgSend_updateLTEShows4G_(void *a1, const char *a2, ...)
{
  return [a1 updateLTEShows4G:];
}

id objc_msgSend_updateLTKs(void *a1, const char *a2, ...)
{
  return _[a1 updateLTKs];
}

id objc_msgSend_updateLocalLTK(void *a1, const char *a2, ...)
{
  return _[a1 updateLocalLTK];
}

id objc_msgSend_updateLocalLongTermKey_remoteLongTermKey_(void *a1, const char *a2, ...)
{
  return [a1 updateLocalLongTermKey:remoteLongTermKey:];
}

id objc_msgSend_updateLocalPowerSource_(void *a1, const char *a2, ...)
{
  return [a1 updateLocalPowerSource:];
}

id objc_msgSend_updateLongTermKey_(void *a1, const char *a2, ...)
{
  return [a1 updateLongTermKey:];
}

id objc_msgSend_updateLongTermKeys_(void *a1, const char *a2, ...)
{
  return [a1 updateLongTermKeys:];
}

id objc_msgSend_updateLowLatencyFilter_isAddFilter_completion_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "updateLowLatencyFilter:isAddFilter:completion:");
}

id objc_msgSend_updateMetrics_withNode_(void *a1, const char *a2, ...)
{
  return [a1 updateMetrics:withNode:];
}

id objc_msgSend_updateNFCPromptConfig_responseHandler_(void *a1, const char *a2, ...)
{
  return [a1 updateNFCPromptConfig:x0 responseHandler:x1];
}

id objc_msgSend_updateNearbyCountSlotIDForSession_(void *a1, const char *a2, ...)
{
  return [a1 updateNearbyCountSlotIDForSession:];
}

id objc_msgSend_updatePairedUnlockBannerToUnlocked(void *a1, const char *a2, ...)
{
  return _[a1 updatePairedUnlockBannerToUnlocked];
}

id objc_msgSend_updatePairedWatchLockState_(void *a1, const char *a2, ...)
{
  return [a1 updatePairedWatchLockState:];
}

id objc_msgSend_updatePairedWatchWristState_(void *a1, const char *a2, ...)
{
  return [a1 updatePairedWatchWristState:];
}

id objc_msgSend_updatePersonalHotspotAllowed(void *a1, const char *a2, ...)
{
  return _[a1 updatePersonalHotspotAllowed];
}

id objc_msgSend_updatePossibleActions(void *a1, const char *a2, ...)
{
  return _[a1 updatePossibleActions];
}

id objc_msgSend_updatePreferredRemoteLTKForDeviceID_(void *a1, const char *a2, ...)
{
  return [a1 updatePreferredRemoteLTKForDeviceID:];
}

id objc_msgSend_updateRSSI_(void *a1, const char *a2, ...)
{
  return [a1 updateRSSI:];
}

id objc_msgSend_updateRangingKeysIfNeccesary(void *a1, const char *a2, ...)
{
  return _[a1 updateRangingKeysIfNeccesary];
}

id objc_msgSend_updateRangingMeasurementForDevice_inNode_(void *a1, const char *a2, ...)
{
  return [a1 updateRangingMeasurementForDevice:inNode:];
}

id objc_msgSend_updateRangingMeasurementForPerson_inNode_(void *a1, const char *a2, ...)
{
  return [a1 updateRangingMeasurementForPerson:inNode:];
}

id objc_msgSend_updateRemoteLTKs(void *a1, const char *a2, ...)
{
  return _[a1 updateRemoteLTKs];
}

id objc_msgSend_updateRestrictedActivityTypes_(void *a1, const char *a2, ...)
{
  return [a1 updateRestrictedActivityTypes:];
}

id objc_msgSend_updateSIMStatus_(void *a1, const char *a2, ...)
{
  return [a1 updateSIMStatus:];
}

id objc_msgSend_updateSecondaryNameForNodes_(void *a1, const char *a2, ...)
{
  return [a1 updateSecondaryNameForNodes:];
}

id objc_msgSend_updateSecurityManager(void *a1, const char *a2, ...)
{
  return _[a1 updateSecurityManager];
}

id objc_msgSend_updateSecurityManagerIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateSecurityManagerIfNeeded];
}

id objc_msgSend_updateSelectionReasonInNodes_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "updateSelectionReasonInNodes:");
}

id objc_msgSend_updateSendOptions_(void *a1, const char *a2, ...)
{
  return [a1 updateSendOptions:];
}

id objc_msgSend_updateServerCacheIfNeeded(void *a1, const char *a2, ...)
{
  return _[a1 updateServerCacheIfNeeded];
}

id objc_msgSend_updateServerState(void *a1, const char *a2, ...)
{
  return _[a1 updateServerState];
}

id objc_msgSend_updateSessionKeys(void *a1, const char *a2, ...)
{
  return _[a1 updateSessionKeys];
}

id objc_msgSend_updateShareSheetHostConfiguration_(void *a1, const char *a2, ...)
{
  return [a1 updateShareSheetHostConfiguration:];
}

id objc_msgSend_updateSignalStrength_(void *a1, const char *a2, ...)
{
  return [a1 updateSignalStrength:];
}

id objc_msgSend_updateSmartCoverIsClosed_(void *a1, const char *a2, ...)
{
  return [a1 updateSmartCoverIsClosed:];
}

id objc_msgSend_updateStringForProxySession(void *a1, const char *a2, ...)
{
  return _[a1 updateStringForProxySession];
}

id objc_msgSend_updateTXTRecordAndNotify(void *a1, const char *a2, ...)
{
  return _[a1 updateTXTRecordAndNotify];
}

id objc_msgSend_updateTimeString(void *a1, const char *a2, ...)
{
  return _[a1 updateTimeString];
}

id objc_msgSend_updateTransferStateHandler(void *a1, const char *a2, ...)
{
  return _[a1 updateTransferStateHandler];
}

id objc_msgSend_updateUltraWideBandStateTo_(void *a1, const char *a2, ...)
{
  return [a1 updateUltraWideBandStateTo:];
}

id objc_msgSend_updateUserActivityOrderWithOrderedPartialActivities_(void *a1, const char *a2, ...)
{
  return [a1 updateUserActivityOrderWithOrderedPartialActivities:];
}

id objc_msgSend_updateWiFiRequest_setRangingPeer_(void *a1, const char *a2, ...)
{
  return [a1 updateWiFiRequest:setRangingPeer:];
}

id objc_msgSend_updateWifiState_(void *a1, const char *a2, ...)
{
  return [a1 updateWifiState:];
}

id objc_msgSend_updateWirelessCritical_(void *a1, const char *a2, ...)
{
  return [a1 updateWirelessCritical:];
}

id objc_msgSend_updateWirelessDevice(void *a1, const char *a2, ...)
{
  return _[a1 updateWirelessDevice];
}

id objc_msgSend_updateWithActivities_(void *a1, const char *a2, ...)
{
  return [a1 updateWithActivities:];
}

id objc_msgSend_updateWithAirDropNodes_(void *a1, const char *a2, ...)
{
  return [a1 updateWithAirDropNodes:];
}

id objc_msgSend_updateWithBLEDevice_(void *a1, const char *a2, ...)
{
  return [a1 updateWithBLEDevice:];
}

id objc_msgSend_updateWithHotspotInfo_(void *a1, const char *a2, ...)
{
  return [a1 updateWithHotspotInfo:];
}

id objc_msgSend_updateWithInformation_(void *a1, const char *a2, ...)
{
  return [a1 updateWithInformation:];
}

id objc_msgSend_updateWithRPIdentity_(void *a1, const char *a2, ...)
{
  return [a1 updateWithRPIdentity:];
}

id objc_msgSend_updateWithRawAdvertisementData_receivedViaScanning_isReplay_newAdvertisementHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "updateWithRawAdvertisementData:receivedViaScanning:isReplay:newAdvertisementHandler:");
}

id objc_msgSend_updateWithRawAdvertisementData_receivedViaScanning_newAdvertisementHandler_(void *a1, const char *a2, ...)
{
  return [a1 updateWithRawAdvertisementData:x0 receivedViaScanning:x1 newAdvertisementHandler:x2];
}

id objc_msgSend_updateWithSFBLEDevice_(void *a1, const char *a2, ...)
{
  return [a1 updateWithSFBLEDevice:];
}

id objc_msgSend_updateWithSFNode_(void *a1, const char *a2, ...)
{
  return [a1 updateWithSFNode:];
}

id objc_msgSend_updateWithService_(void *a1, const char *a2, ...)
{
  return [a1 updateWithService:];
}

id objc_msgSend_updatedFoundDeviceList_(void *a1, const char *a2, ...)
{
  return [a1 updatedFoundDeviceList:];
}

id objc_msgSend_updatedTransfer_(void *a1, const char *a2, ...)
{
  return [a1 updatedTransfer:];
}

id objc_msgSend_uploadTaskWithRequest_fromData_(void *a1, const char *a2, ...)
{
  return [a1 uploadTaskWithRequest:x0 fromData:x1];
}

id objc_msgSend_uploadTaskWithStreamedRequest_(void *a1, const char *a2, ...)
{
  return [a1 uploadTaskWithStreamedRequest:];
}

id objc_msgSend_uppercaseString(void *a1, const char *a2, ...)
{
  return _[a1 uppercaseString];
}

id objc_msgSend_upsellDevice(void *a1, const char *a2, ...)
{
  return _[a1 upsellDevice];
}

id objc_msgSend_upsellPhoneAutoUnlock(void *a1, const char *a2, ...)
{
  return _[a1 upsellPhoneAutoUnlock];
}

id objc_msgSend_url(void *a1, const char *a2, ...)
{
  return _[a1 url];
}

id objc_msgSend_urlAtKey_(void *a1, const char *a2, ...)
{
  return [a1 urlAtKey:];
}

id objc_msgSend_urlBeingShared(void *a1, const char *a2, ...)
{
  return _[a1 urlBeingShared];
}

id objc_msgSend_urlIsCloudDocument_(void *a1, const char *a2, ...)
{
  return [a1 urlIsCloudDocument:];
}

id objc_msgSend_urlRequest(void *a1, const char *a2, ...)
{
  return _[a1 urlRequest];
}

id objc_msgSend_urlToCGImgDataForCallHandoffIconWithAppIconImageData_contact_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:");
}

id objc_msgSend_urlToCGImgDataForCallHandoffIconWithAppIconImageData_contact_replyHandler_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "urlToCGImgDataForCallHandoffIconWithAppIconImageData:contact:replyHandler:");
}

id objc_msgSend_urlsBeingShared(void *a1, const char *a2, ...)
{
  return _[a1 urlsBeingShared];
}

id objc_msgSend_useAKSToken(void *a1, const char *a2, ...)
{
  return _[a1 useAKSToken];
}

id objc_msgSend_useAttestedProtocol(void *a1, const char *a2, ...)
{
  return _[a1 useAttestedProtocol];
}

id objc_msgSend_useBTPipe(void *a1, const char *a2, ...)
{
  return _[a1 useBTPipe];
}

id objc_msgSend_useCases(void *a1, const char *a2, ...)
{
  return _[a1 useCases];
}

id objc_msgSend_useEncryption(void *a1, const char *a2, ...)
{
  return _[a1 useEncryption];
}

id objc_msgSend_useKeychainForLTKSyncing(void *a1, const char *a2, ...)
{
  return _[a1 useKeychainForLTKSyncing];
}

id objc_msgSend_useProxy(void *a1, const char *a2, ...)
{
  return _[a1 useProxy];
}

id objc_msgSend_useRealRangingKey(void *a1, const char *a2, ...)
{
  return _[a1 useRealRangingKey];
}

id objc_msgSend_useToken(void *a1, const char *a2, ...)
{
  return _[a1 useToken];
}

id objc_msgSend_user(void *a1, const char *a2, ...)
{
  return _[a1 user];
}

id objc_msgSend_userConfirmed(void *a1, const char *a2, ...)
{
  return _[a1 userConfirmed];
}

id objc_msgSend_userDidTapNotification_(void *a1, const char *a2, ...)
{
  return [a1 userDidTapNotification:];
}

id objc_msgSend_userInfo(void *a1, const char *a2, ...)
{
  return _[a1 userInfo];
}

id objc_msgSend_userInfoCompanionViewNotSyncing(void *a1, const char *a2, ...)
{
  return _[a1 userInfoCompanionViewNotSyncing];
}

id objc_msgSend_userInfoForInternetSharing(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForInternetSharing];
}

id objc_msgSend_userInfoForKeychainMismatch(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForKeychainMismatch];
}

id objc_msgSend_userInfoForMacNotSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForMacNotSignedIn];
}

id objc_msgSend_userInfoForMissingLTK(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForMissingLTK];
}

id objc_msgSend_userInfoForNewProtocol(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNewProtocol];
}

id objc_msgSend_userInfoForNoCommunincation(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoCommunincation];
}

id objc_msgSend_userInfoForNoPasscode(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoPasscode];
}

id objc_msgSend_userInfoForNoWristDetection(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoWristDetection];
}

id objc_msgSend_userInfoForNoWristDetectionNoPasscode(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNoWristDetectionNoPasscode];
}

id objc_msgSend_userInfoForNotCloudPaired(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForNotCloudPaired];
}

id objc_msgSend_userInfoForOldProtocol(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForOldProtocol];
}

id objc_msgSend_userInfoForWatchLocked(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForWatchLocked];
}

id objc_msgSend_userInfoForWatchNotSignedIn(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForWatchNotSignedIn];
}

id objc_msgSend_userInfoForiPhoneNeedsUnlock(void *a1, const char *a2, ...)
{
  return _[a1 userInfoForiPhoneNeedsUnlock];
}

id objc_msgSend_userInterfaceIdiom(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceIdiom];
}

id objc_msgSend_userInterfaceStyle(void *a1, const char *a2, ...)
{
  return _[a1 userInterfaceStyle];
}

id objc_msgSend_userName(void *a1, const char *a2, ...)
{
  return _[a1 userName];
}

id objc_msgSend_userRequestRequired(void *a1, const char *a2, ...)
{
  return _[a1 userRequestRequired];
}

id objc_msgSend_userResponse(void *a1, const char *a2, ...)
{
  return _[a1 userResponse];
}

id objc_msgSend_userType(void *a1, const char *a2, ...)
{
  return _[a1 userType];
}

id objc_msgSend_username(void *a1, const char *a2, ...)
{
  return _[a1 username];
}

id objc_msgSend_usesProductCaseName(void *a1, const char *a2, ...)
{
  return _[a1 usesProductCaseName];
}

id objc_msgSend_usingEscrow(void *a1, const char *a2, ...)
{
  return _[a1 usingEscrow];
}

id objc_msgSend_usingImageCache(void *a1, const char *a2, ...)
{
  return _[a1 usingImageCache];
}

id objc_msgSend_usingMessages(void *a1, const char *a2, ...)
{
  return _[a1 usingMessages];
}

id objc_msgSend_usingProxy(void *a1, const char *a2, ...)
{
  return _[a1 usingProxy];
}

id objc_msgSend_usingRecord(void *a1, const char *a2, ...)
{
  return _[a1 usingRecord];
}

id objc_msgSend_uti(void *a1, const char *a2, ...)
{
  return _[a1 uti];
}

id objc_msgSend_valid(void *a1, const char *a2, ...)
{
  return _[a1 valid];
}

id objc_msgSend_validAirDropInterface_(void *a1, const char *a2, ...)
{
  return [a1 validAirDropInterface:];
}

id objc_msgSend_validFileName_(void *a1, const char *a2, ...)
{
  return [a1 validFileName:];
}

id objc_msgSend_validStartDate(void *a1, const char *a2, ...)
{
  return _[a1 validStartDate];
}

id objc_msgSend_validateAirDropItemsWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 validateAirDropItemsWithCompletionHandler:];
}

id objc_msgSend_validateKeybagUUID(void *a1, const char *a2, ...)
{
  return _[a1 validateKeybagUUID];
}

id objc_msgSend_validatePasscode_(void *a1, const char *a2, ...)
{
  return [a1 validatePasscode:];
}

id objc_msgSend_validatedEmailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 validatedEmailAddresses];
}

id objc_msgSend_validatedEmailHashes(void *a1, const char *a2, ...)
{
  return _[a1 validatedEmailHashes];
}

id objc_msgSend_validatedFileInfo_(void *a1, const char *a2, ...)
{
  return [a1 validatedFileInfo:];
}

id objc_msgSend_validatedFilesArray_(void *a1, const char *a2, ...)
{
  return [a1 validatedFilesArray:];
}

id objc_msgSend_validatedItemsArray_(void *a1, const char *a2, ...)
{
  return [a1 validatedItemsArray:];
}

id objc_msgSend_validatedPhoneHashes(void *a1, const char *a2, ...)
{
  return _[a1 validatedPhoneHashes];
}

id objc_msgSend_validatedPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 validatedPhoneNumbers];
}

id objc_msgSend_validationRecord(void *a1, const char *a2, ...)
{
  return _[a1 validationRecord];
}

id objc_msgSend_validationRecordInfoForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 validationRecordInfoForAppleID:];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_valueForEntitlement_(void *a1, const char *a2, ...)
{
  return [a1 valueForEntitlement:];
}

id objc_msgSend_valueForKey_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:];
}

id objc_msgSend_valueForKey_inTXTRecord_withLength_(void *a1, const char *a2, ...)
{
  return [a1 valueForKey:inTXTRecord:withLength:];
}

id objc_msgSend_valueForKeyPath_(void *a1, const char *a2, ...)
{
  return [a1 valueForKeyPath:];
}

id objc_msgSend_valueForProperty_(void *a1, const char *a2, ...)
{
  return [a1 valueForProperty:];
}

id objc_msgSend_valueWithNonretainedObject_(void *a1, const char *a2, ...)
{
  return [a1 valueWithNonretainedObject:];
}

id objc_msgSend_verifiableIdentity(void *a1, const char *a2, ...)
{
  return _[a1 verifiableIdentity];
}

id objc_msgSend_verifiedIdentityForAppleID_(void *a1, const char *a2, ...)
{
  return [a1 verifiedIdentityForAppleID:];
}

id objc_msgSend_verifiedIdentityForCertificateChain_emailOrPhone_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "verifiedIdentityForCertificateChain:emailOrPhone:error:")];
}

id objc_msgSend_verifiedIdentityForEmailOrPhone_completion_(void *a1, const char *a2, ...)
{
  return [a1 verifiedIdentityForEmailOrPhone:x0 completion:x1];
}

id objc_msgSend_verifiedIdentityForEmailOrPhone_queue_completion_(void *a1, const char *a2, ...)
{
  return [a1 verifiedIdentityForEmailOrPhone:x0 queue:x1 completion:x2];
}

id objc_msgSend_verifyAndParseValidationRecordData_intoDictionary_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "verifyAndParseValidationRecordData:intoDictionary:");
}

id objc_msgSend_verifyAuthTag_data_type_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "verifyAuthTag:data:type:error:");
}

id objc_msgSend_verifyKeys(void *a1, const char *a2, ...)
{
  return _[a1 verifyKeys];
}

id objc_msgSend_version(void *a1, const char *a2, ...)
{
  return _[a1 version];
}

id objc_msgSend_videoPath(void *a1, const char *a2, ...)
{
  return _[a1 videoPath];
}

id objc_msgSend_videoURL(void *a1, const char *a2, ...)
{
  return _[a1 videoURL];
}

id objc_msgSend_videos(void *a1, const char *a2, ...)
{
  return _[a1 videos];
}

id objc_msgSend_viewSyncing(void *a1, const char *a2, ...)
{
  return _[a1 viewSyncing];
}

id objc_msgSend_visibleActionActivities(void *a1, const char *a2, ...)
{
  return _[a1 visibleActionActivities];
}

id objc_msgSend_visibleShareActivities(void *a1, const char *a2, ...)
{
  return _[a1 visibleShareActivities];
}

id objc_msgSend_voiceMemos(void *a1, const char *a2, ...)
{
  return _[a1 voiceMemos];
}

id objc_msgSend_waitUntilAllOperationsAreFinished(void *a1, const char *a2, ...)
{
  return _[a1 waitUntilAllOperationsAreFinished];
}

id objc_msgSend_waitingForAuthToken(void *a1, const char *a2, ...)
{
  return _[a1 waitingForAuthToken];
}

id objc_msgSend_waitingForAutoUnlockStateUpdateToStartPairedUnlock(void *a1, const char *a2, ...)
{
  return _[a1 waitingForAutoUnlockStateUpdateToStartPairedUnlock];
}

id objc_msgSend_waitingForCloudPairing(void *a1, const char *a2, ...)
{
  return _[a1 waitingForCloudPairing];
}

id objc_msgSend_waitingForDisplayOrClamshell(void *a1, const char *a2, ...)
{
  return _[a1 waitingForDisplayOrClamshell];
}

id objc_msgSend_waitingForLTK(void *a1, const char *a2, ...)
{
  return _[a1 waitingForLTK];
}

id objc_msgSend_waitingForNetworkToDisable(void *a1, const char *a2, ...)
{
  return _[a1 waitingForNetworkToDisable];
}

id objc_msgSend_wakeGestureDates(void *a1, const char *a2, ...)
{
  return _[a1 wakeGestureDates];
}

id objc_msgSend_walking(void *a1, const char *a2, ...)
{
  return _[a1 walking];
}

id objc_msgSend_wantsOriginalImageColor(void *a1, const char *a2, ...)
{
  return _[a1 wantsOriginalImageColor];
}

id objc_msgSend_wantsToBlockPresentation(void *a1, const char *a2, ...)
{
  return _[a1 wantsToBlockPresentation];
}

id objc_msgSend_wantsUpdates(void *a1, const char *a2, ...)
{
  return _[a1 wantsUpdates];
}

id objc_msgSend_wasInLockScreen(void *a1, const char *a2, ...)
{
  return _[a1 wasInLockScreen];
}

id objc_msgSend_wasString(void *a1, const char *a2, ...)
{
  return _[a1 wasString];
}

id objc_msgSend_watchAvailableForUnlockWithCompletionHandler_(void *a1, const char *a2, ...)
{
  return [a1 watchAvailableForUnlockWithCompletionHandler:];
}

id objc_msgSend_watchBuildVersion(void *a1, const char *a2, ...)
{
  return _[a1 watchBuildVersion];
}

id objc_msgSend_watchCurrentlyInList(void *a1, const char *a2, ...)
{
  return _[a1 watchCurrentlyInList];
}

id objc_msgSend_watchExistedInUnlockList(void *a1, const char *a2, ...)
{
  return _[a1 watchExistedInUnlockList];
}

id objc_msgSend_watchIDToCompanionIDStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 watchIDToCompanionIDStorageFilePath];
}

id objc_msgSend_watchIDsMissingSessionKey(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsMissingSessionKey];
}

id objc_msgSend_watchIDsToPairingRecords(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsToPairingRecords];
}

id objc_msgSend_watchIDsToPairingRecordsStorageFilePath(void *a1, const char *a2, ...)
{
  return _[a1 watchIDsToPairingRecordsStorageFilePath];
}

id objc_msgSend_watchKeyboardContentForDevice_(void *a1, const char *a2, ...)
{
  return [a1 watchKeyboardContentForDevice:];
}

id objc_msgSend_watchKeyboardPostIfNeeded_(void *a1, const char *a2, ...)
{
  return [a1 watchKeyboardPostIfNeeded:];
}

id objc_msgSend_watchKeyboardRemove_(void *a1, const char *a2, ...)
{
  return [a1 watchKeyboardRemove:];
}

id objc_msgSend_watchKeyboardUpdate_info_(void *a1, const char *a2, ...)
{
  return [a1 watchKeyboardUpdate:info:];
}

id objc_msgSend_watchKeyboardUpdate_rtiData_(void *a1, const char *a2, ...)
{
  return [a1 watchKeyboardUpdate:rtiData:];
}

id objc_msgSend_watchLocked(void *a1, const char *a2, ...)
{
  return _[a1 watchLocked];
}

id objc_msgSend_watchModelID(void *a1, const char *a2, ...)
{
  return _[a1 watchModelID];
}

id objc_msgSend_watchNewLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 watchNewLTKSyncStatus];
}

id objc_msgSend_watchOSVersion(void *a1, const char *a2, ...)
{
  return _[a1 watchOSVersion];
}

id objc_msgSend_watchOldLTKSyncStatus(void *a1, const char *a2, ...)
{
  return _[a1 watchOldLTKSyncStatus];
}

id objc_msgSend_watchRSSI(void *a1, const char *a2, ...)
{
  return _[a1 watchRSSI];
}

id objc_msgSend_watchVersionEligibleForDevice_(void *a1, const char *a2, ...)
{
  return [a1 watchVersionEligibleForDevice:];
}

id objc_msgSend_watchWristState(void *a1, const char *a2, ...)
{
  return _[a1 watchWristState];
}

id objc_msgSend_weakObjectsHashTable(void *a1, const char *a2, ...)
{
  return _[a1 weakObjectsHashTable];
}

id objc_msgSend_webLinkStringBlocks(void *a1, const char *a2, ...)
{
  return _[a1 webLinkStringBlocks];
}

id objc_msgSend_webLinkStrings(void *a1, const char *a2, ...)
{
  return _[a1 webLinkStrings];
}

id objc_msgSend_webLinks(void *a1, const char *a2, ...)
{
  return _[a1 webLinks];
}

id objc_msgSend_webURLFromInternetLocationFile_(void *a1, const char *a2, ...)
{
  return [a1 webURLFromInternetLocationFile:];
}

id objc_msgSend_whereFromInfo(void *a1, const char *a2, ...)
{
  return _[a1 whereFromInfo];
}

id objc_msgSend_whiteColor(void *a1, const char *a2, ...)
{
  return _[a1 whiteColor];
}

id objc_msgSend_whitespaceCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 whitespaceCharacterSet];
}

id objc_msgSend_wiFiManager(void *a1, const char *a2, ...)
{
  return _[a1 wiFiManager];
}

id objc_msgSend_wifiEnabled(void *a1, const char *a2, ...)
{
  return _[a1 wifiEnabled];
}

id objc_msgSend_wifiErrorCount(void *a1, const char *a2, ...)
{
  return _[a1 wifiErrorCount];
}

id objc_msgSend_wifiErrorDomain(void *a1, const char *a2, ...)
{
  return _[a1 wifiErrorDomain];
}

id objc_msgSend_wifiFlags(void *a1, const char *a2, ...)
{
  return _[a1 wifiFlags];
}

id objc_msgSend_wifiManager(void *a1, const char *a2, ...)
{
  return _[a1 wifiManager];
}

id objc_msgSend_wifiPasswordSharingAvailability(void *a1, const char *a2, ...)
{
  return _[a1 wifiPasswordSharingAvailability];
}

id objc_msgSend_wifiRangingError(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingError];
}

id objc_msgSend_wifiRangingErrorCode(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingErrorCode];
}

id objc_msgSend_wifiRangingResults(void *a1, const char *a2, ...)
{
  return _[a1 wifiRangingResults];
}

id objc_msgSend_wifiRequest(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequest];
}

id objc_msgSend_wifiRequestQueue(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequestQueue];
}

id objc_msgSend_wifiRequestStartedHandler(void *a1, const char *a2, ...)
{
  return _[a1 wifiRequestStartedHandler];
}

id objc_msgSend_wifiSSIDForSSIDHash_(void *a1, const char *a2, ...)
{
  return [a1 wifiSSIDForSSIDHash:];
}

id objc_msgSend_wifiState(void *a1, const char *a2, ...)
{
  return _[a1 wifiState];
}

id objc_msgSend_wifiStateNeedsUpdating(void *a1, const char *a2, ...)
{
  return _[a1 wifiStateNeedsUpdating];
}

id objc_msgSend_willPerformInServiceActivityWithRequest_completion_(void *a1, const char *a2, ...)
{
  return [a1 willPerformInServiceActivityWithRequest:completion:];
}

id objc_msgSend_windowsNodesDidChange_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "windowsNodesDidChange:");
}

id objc_msgSend_windowsNodesForWorkgroup_(void *a1, const char *a2, ...)
{
  return [a1 windowsNodesForWorkgroup:];
}

id objc_msgSend_wirelessAccessPoint(void *a1, const char *a2, ...)
{
  return _[a1 wirelessAccessPoint];
}

id objc_msgSend_wirelessCarPlay(void *a1, const char *a2, ...)
{
  return _[a1 wirelessCarPlay];
}

id objc_msgSend_wirelessCritical(void *a1, const char *a2, ...)
{
  return _[a1 wirelessCritical];
}

id objc_msgSend_wirelessEnabled(void *a1, const char *a2, ...)
{
  return _[a1 wirelessEnabled];
}

id objc_msgSend_workgroup(void *a1, const char *a2, ...)
{
  return _[a1 workgroup];
}

id objc_msgSend_workgroupChildren(void *a1, const char *a2, ...)
{
  return _[a1 workgroupChildren];
}

id objc_msgSend_workgroupThreshold(void *a1, const char *a2, ...)
{
  return _[a1 workgroupThreshold];
}

id objc_msgSend_workgroups(void *a1, const char *a2, ...)
{
  return _[a1 workgroups];
}

id objc_msgSend_wrapPayload_withType_(void *a1, const char *a2, ...)
{
  return [a1 wrapPayload:withType:];
}

id objc_msgSend_wrapPayload_withType_useProxy_senderID_(void *a1, const char *a2, ...)
{
  return [a1 wrapPayload:x0 withType:x1 useProxy:x2 senderID:x3];
}

id objc_msgSend_wristOnDate(void *a1, const char *a2, ...)
{
  return _[a1 wristOnDate];
}

id objc_msgSend_wristState(void *a1, const char *a2, ...)
{
  return _[a1 wristState];
}

id objc_msgSend_write_maxLength_(void *a1, const char *a2, ...)
{
  return [a1 write:x0 maxLength:x1];
}

id objc_msgSend_writeClientStream(void *a1, const char *a2, ...)
{
  return _[a1 writeClientStream];
}

id objc_msgSend_writeData_length_toStream_(void *a1, const char *a2, ...)
{
  return [a1 writeData:x0 length:x1 toStream:x2];
}

id objc_msgSend_writeDataToFile_ofType_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "writeDataToFile:ofType:");
}

id objc_msgSend_writeDowngradedRepresentationToDirectory_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "writeDowngradedRepresentationToDirectory:error:");
}

id objc_msgSend_writeFolderRepresentationToDirectory_error_(void *a1, const char *a2, ...)
{
  return [a1 writeFolderRepresentationToDirectory:error:];
}

id objc_msgSend_writeKey(void *a1, const char *a2, ...)
{
  return _[a1 writeKey];
}

id objc_msgSend_writeNetworkStream(void *a1, const char *a2, ...)
{
  return _[a1 writeNetworkStream];
}

id objc_msgSend_writeNonce(void *a1, const char *a2, ...)
{
  return _[a1 writeNonce];
}

id objc_msgSend_writeSnapshotForTransfer_initialInfo_name_error_(void *a1, const char *a2, ...)
{
  return [a1 writeSnapshotForTransfer:x0 initialInfo:x1 name:x2 error:x3];
}

id objc_msgSend_writeToFile_atomically_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:x0 atomically:x1];
}

id objc_msgSend_writeToFile_options_error_(void *a1, const char *a2, ...)
{
  return [a1 writeToFile:x0 options:x1 error:x2];
}

id objc_msgSend_writeToStreamWithData_(void *a1, const char *a2, ...)
{
  return [a1 writeToStreamWithData:];
}

id objc_msgSend_writeToURL_options_error_(void *a1, const char *a2, ...)
{
  return [_objc_msgSend(a1, "writeToURL:options:error:");
}

id objc_msgSend_xpcArrayForSFNodeArray_(void *a1, const char *a2, ...)
{
  return [a1 xpcArrayForSFNodeArray:];
}

id objc_msgSend_xpcConnection(void *a1, const char *a2, ...)
{
  return _[a1 xpcConnection];
}

id objc_msgSend_xpcHelperCnx(void *a1, const char *a2, ...)
{
  return _[a1 xpcHelperCnx];
}

id objc_msgSend_xpcManagerInterface(void *a1, const char *a2, ...)
{
  return _[a1 xpcManagerInterface];
}

id objc_msgSend_xpcObjectForSFOperationResults_(void *a1, const char *a2, ...)
{
  return [a1 xpcObjectForSFOperationResults:];
}

id objc_msgSend_xrRenderingMode(void *a1, const char *a2, ...)
{
  return _[a1 xrRenderingMode];
}

id objc_msgSend_year(void *a1, const char *a2, ...)
{
  return _[a1 year];
}

id objc_msgSend_yellowColor(void *a1, const char *a2, ...)
{
  return _[a1 yellowColor];
}

id objc_msgSend_yelpLinks(void *a1, const char *a2, ...)
{
  return _[a1 yelpLinks];
}

id objc_msgSend_zip(void *a1, const char *a2, ...)
{
  return _[a1 zip];
}

id objc_msgSend_zipCompressionType(void *a1, const char *a2, ...)
{
  return _[a1 zipCompressionType];
}